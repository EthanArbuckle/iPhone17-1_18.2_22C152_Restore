uint64_t sub_191DD91A0(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t vars8;

  OUTLINED_FUNCTION_0_15(a1);
  sub_191DD667C();
  v3 = objc_allocWithZone((Class)TFKey);
  v4 = a2;
  v12 = OUTLINED_FUNCTION_1_15((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, (uint64_t)a2);
  objc_msgSend(v12, sel_address);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  OUTLINED_FUNCTION_2_15();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void sub_191DD9314()
{
}

uint64_t type metadata accessor for BridgedContext()
{
  return self;
}

void sub_191DD9388()
{
  if (!qword_1EB50C808)
  {
    unint64_t v0 = type metadata accessor for PoolObject();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50C808);
    }
  }
}

uint64_t sub_191DD93D8()
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191D640BC();
  swift_bridgeObjectRelease();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191D64028();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191DD944C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if ((sub_191D6471C(a1, a3) & 1) == 0) {
    return 0;
  }

  return sub_191D94B2C(a2, a4);
}

uint64_t sub_191DD94A4()
{
  return sub_191EE9A90();
}

uint64_t sub_191DD951C()
{
  return sub_191DD94A4();
}

uint64_t sub_191DD9524()
{
  return sub_191DD93D8();
}

uint64_t sub_191DD952C(uint64_t a1, uint64_t a2)
{
  return sub_191DD944C(*(void **)a1, *(void *)(a1 + 8), *(void **)a2, *(void *)(a2 + 8));
}

uint64_t sub_191DD9540()
{
  sub_191EE9A70();
  sub_191D63F48((uint64_t)v1);
  return sub_191EE9A90();
}

uint64_t sub_191DD9580()
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191EE8200();
  swift_bridgeObjectRelease();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191EE8200();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191DD960C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12 = a1 == a5 && a2 == a6;
  if (v12 || (char v13 = sub_191EE9770(), result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
    {
      return 1;
    }
    else
    {
      return sub_191EE9770();
    }
  }
  return result;
}

uint64_t sub_191DD96AC()
{
  return sub_191EE9A90();
}

uint64_t sub_191DD9744()
{
  return sub_191DD96AC();
}

uint64_t sub_191DD9750()
{
  return sub_191DD9580();
}

uint64_t sub_191DD975C()
{
  return sub_191EE9A90();
}

uint64_t sub_191DD97E0(uint64_t *a1, uint64_t *a2)
{
  return sub_191DD960C(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t _s13TeaFoundation26ApplicationStateManagerIOSCfD_0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

void *assignWithCopy for CodableError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CodableError(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for QueryItem()
{
}

uint64_t sub_191DD9978(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191DD9A48(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191DD9A88(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for Route()
{
}

void type metadata accessor for RouteKey()
{
}

unint64_t sub_191DD9AF4()
{
  unint64_t result = qword_1E92F3828;
  if (!qword_1E92F3828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3828);
  }
  return result;
}

BOOL sub_191DD9B40(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 14;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v5 == a3 >> 14)
  {
LABEL_13:
    sub_191EE8290();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    BOOL v16 = v15 == 0;
  }
  else
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    while (1)
    {
      OUTLINED_FUNCTION_1_16();
      uint64_t v6 = sub_191EE8E50();
      uint64_t v8 = v7;
      OUTLINED_FUNCTION_1_16();
      unint64_t v9 = sub_191EE8E00();
      uint64_t v10 = sub_191EE8290();
      if (!v11) {
        break;
      }
      if (v6 == v10 && v11 == v8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v13 = sub_191EE9770();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          BOOL v16 = 0;
          goto LABEL_15;
        }
      }
      if (v5 == v9 >> 14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v16 = 1;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_191DD9CAC()
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v0 = sub_191EE8290();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    while (1)
    {
      uint64_t v4 = sub_191EE8290();
      if (!v5) {
        break;
      }
      if (v2 == v4 && v3 == v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v7 = sub_191EE9770();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_191EE8290();
      uint64_t v3 = v8;
      if (!v8) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_191EE8290();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    BOOL v11 = v10 == 0;
    swift_bridgeObjectRelease();
  }
  return v11;
}

void sub_191DD9E10()
{
}

void sub_191DD9E20(unint64_t a1)
{
  if (a1 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191EE94B0();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x192FE8390);
}

void sub_191DD9E9C()
{
}

uint64_t sub_191DD9EAC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  char v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 32;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 32;
  if (v9 >= v11)
  {
    sub_191DCD4A8(a2, (uint64_t)(a3 - (void)a2) / 32, a4);
    BOOL v12 = &v4[32 * v11];
    if (v7 >= v6 || v10 < 32) {
      goto LABEL_53;
    }
    v29 = (char *)(a3 - 32);
    v48 = v4;
    v54 = v7;
    while (1)
    {
      v30 = v12 - 32;
      v50 = v29 + 32;
      unint64_t v52 = (unint64_t)v12;
      uint64_t v32 = *((void *)v12 - 2);
      uint64_t v31 = *((void *)v12 - 1);
      v56 = v6;
      v33 = v6 - 32;
      uint64_t v34 = *((void *)v6 - 2);
      uint64_t v35 = *((void *)v6 - 1);
      BOOL v36 = *((void *)v12 - 4) == *((void *)v6 - 4) && *((void *)v12 - 3) == *((void *)v6 - 3);
      if (v36
        || (uint64_t v46 = *((void *)v6 - 2),
            uint64_t v47 = *((void *)v12 - 1),
            uint64_t v37 = *((void *)v12 - 2),
            char v38 = sub_191EE9770(),
            uint64_t v34 = v46,
            uint64_t v31 = v47,
            uint64_t v32 = v37,
            (v38 & 1) != 0))
      {
        if (v32 == v34 && v31 == v35) {
          goto LABEL_43;
        }
      }
      if ((sub_191EE9770() & 1) == 0)
      {
LABEL_43:
        BOOL v42 = v50 != (char *)v52 || (unint64_t)v29 >= v52;
        BOOL v12 = v30;
        uint64_t v4 = v48;
        uint64_t v6 = v56;
        unint64_t v41 = (unint64_t)v54;
        if (!v42) {
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v4 = v48;
        BOOL v40 = v50 != v56 || v29 >= v56;
        v30 = v33;
        uint64_t v6 = v33;
        BOOL v12 = (char *)v52;
        unint64_t v41 = (unint64_t)v54;
        if (!v40) {
          goto LABEL_49;
        }
      }
      long long v43 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v43;
LABEL_49:
      v29 -= 32;
      if ((unint64_t)v6 <= v41 || v12 <= v4) {
        goto LABEL_53;
      }
    }
  }
  sub_191DCD4A8(a1, (a2 - a1) / 32, a4);
  BOOL v12 = &v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    unint64_t v49 = a3;
    v51 = &v4[32 * v9];
    do
    {
      v53 = v7;
      uint64_t v13 = *(void *)v6;
      uint64_t v14 = *((void *)v6 + 1);
      v55 = v6;
      uint64_t v15 = *((void *)v6 + 2);
      uint64_t v16 = *((void *)v6 + 3);
      uint64_t v17 = *(void *)v4;
      uint64_t v18 = *((void *)v4 + 1);
      v19 = v4;
      uint64_t v20 = *((void *)v4 + 2);
      uint64_t v21 = *((void *)v4 + 3);
      BOOL v22 = v13 == v17 && v14 == v18;
      if (v22 || (sub_191EE9770()) && (v15 == v20 ? (BOOL v23 = v16 == v21) : (BOOL v23 = 0), v23)
        || (sub_191EE9770() & 1) == 0)
      {
        v24 = v19;
        uint64_t v4 = v19 + 32;
        v25 = v53;
        BOOL v26 = v53 == v19;
        uint64_t v6 = v55;
      }
      else
      {
        v24 = v55;
        uint64_t v6 = v55 + 32;
        v25 = v53;
        BOOL v26 = v53 == v55;
        uint64_t v4 = v19;
      }
      BOOL v12 = v51;
      if (!v26)
      {
        long long v27 = *((_OWORD *)v24 + 1);
        *(_OWORD *)v25 = *(_OWORD *)v24;
        *((_OWORD *)v25 + 1) = v27;
      }
      char v7 = v25 + 32;
    }
    while (v4 < v51 && (unint64_t)v6 < v49);
  }
  uint64_t v6 = v7;
LABEL_53:
  sub_191DCD4A8(v4, (v12 - v4) / 32, v6);
  return 1;
}

char *sub_191DDA160(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_191DDA264();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  BOOL v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_191DDA254()
{
  uint64_t v0 = (char *)OUTLINED_FUNCTION_2_16();
  return sub_191DDA160(v0, v1, v2, v3);
}

void sub_191DDA264()
{
  if (!qword_1E92F3830)
  {
    sub_191D86BDC();
    unint64_t v0 = sub_191EE9630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F3830);
    }
  }
}

void sub_191DDA2BC()
{
  char v0 = OUTLINED_FUNCTION_2_16();
  sub_191DD3D54(v0, v1, v2, v3);
}

unsigned char *storeEnumTagSinglePayload for RouteMatchResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191DDA398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RouteMatchResult()
{
  return &type metadata for RouteMatchResult;
}

unint64_t sub_191DDA3D4()
{
  unint64_t result = qword_1E92F3838;
  if (!qword_1E92F3838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3838);
  }
  return result;
}

uint64_t sub_191DDA420()
{
  return sub_191EE7D40();
}

void sub_191DDA548(uint64_t a1)
{
  uint64_t v3 = sub_191EE7D80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191DDAFAC(&qword_1EB508AA0, MEMORY[0x1E4F25200]);
  uint64_t v7 = sub_191EE8380();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_191D6382C();
  uint64_t v8 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_191EE8370();
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = v36;
    if (v7)
    {
      v30[1] = v1;
      uint64_t v10 = *(void *)(v35 + 16);
      uint64_t v33 = v35;
      *(void *)&long long v34 = v10;
      uint64_t v32 = v35 + 32;
      long long v31 = xmmword_191EEB6F0;
      unint64_t v11 = v36;
      while ((void)v34 != v11)
      {
        if (v9 < 0) {
          goto LABEL_21;
        }
        if (v11 >= *(void *)(v33 + 16)) {
          goto LABEL_22;
        }
        uint64_t v12 = v9;
        char v13 = *(unsigned char *)(v32 + v11);
        sub_191D939DC();
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = v31;
        *(void *)(v14 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v14 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v14 + 32) = v13;
        uint64_t v15 = sub_191EE8160();
        uint64_t v17 = v16;
        uint64_t v37 = v8;
        unint64_t v18 = *(void *)(v8 + 16);
        if (v18 >= *(void *)(v8 + 24) >> 1)
        {
          sub_191D6382C();
          uint64_t v8 = v37;
        }
        *(void *)(v8 + 16) = v18 + 1;
        uint64_t v19 = v8 + 16 * v18;
        *(void *)(v19 + 32) = v15;
        *(void *)(v19 + 40) = v17;
        ++v11;
        --v7;
        uint64_t v9 = v12;
        if (!v7)
        {
          uint64_t v36 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      unint64_t v11 = v36;
LABEL_12:
      uint64_t v20 = v35;
      unint64_t v21 = *(void *)(v35 + 16);
      if (v11 == v21)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return;
      }
      long long v34 = xmmword_191EEB6F0;
      while (v11 < v21)
      {
        unint64_t v22 = v11 + 1;
        char v23 = *(unsigned char *)(v20 + 32 + v11);
        uint64_t v36 = v22;
        sub_191D939DC();
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v34;
        *(void *)(v24 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v24 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v24 + 32) = v23;
        uint64_t v25 = sub_191EE8160();
        uint64_t v27 = v26;
        uint64_t v37 = v8;
        unint64_t v28 = *(void *)(v8 + 16);
        if (v28 >= *(void *)(v8 + 24) >> 1)
        {
          sub_191D6382C();
          uint64_t v8 = v37;
        }
        *(void *)(v8 + 16) = v28 + 1;
        uint64_t v29 = v8 + 16 * v28;
        *(void *)(v29 + 32) = v25;
        *(void *)(v29 + 40) = v27;
        unint64_t v11 = v36;
        unint64_t v21 = *(void *)(v20 + 16);
        if (v36 == v21) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t static DigestAlgo.== infix(_:_:)()
{
  return 1;
}

uint64_t DigestAlgo.hash(into:)()
{
  return sub_191EE9A80();
}

uint64_t DigestAlgo.hashValue.getter()
{
  return sub_191EE9A90();
}

uint64_t sub_191DDA948()
{
  return DigestAlgo.hashValue.getter();
}

uint64_t sub_191DDA960()
{
  return DigestAlgo.hash(into:)();
}

uint64_t sub_191DDA978()
{
  return sub_191EE9A90();
}

uint64_t Digest.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t Digest.init()()
{
  return v0;
}

uint64_t sub_191DDA9D4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_191EE7D70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191EE7D80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191DDAFAC(&qword_1EB508A98, MEMORY[0x1E4F251D8]);
  sub_191EE7D60();
  uint64_t v18 = v8;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
        JUMPOUT(0x191DDAD30);
      }
      uint64_t v17 = (int)a1;
      sub_191D76FA0(a1, a2);
      sub_191DDAECC(v17, a1 >> 32);
      goto LABEL_5;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v17 = *(void *)(a1 + 24);
      sub_191D76FA0(a1, a2);
      swift_retain();
      swift_retain();
      sub_191DDAECC(v12, v17);
      swift_release();
      swift_release();
LABEL_5:
      sub_191D76D1C(a1, a2);
      break;
    default:
      sub_191DDA420();
      sub_191D76D1C(a1, a2);
      break;
  }
  sub_191EE7D50();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_191DDA548((uint64_t)v11);
  uint64_t v19 = v13;
  sub_191D78A5C();
  sub_191DDAFAC((unint64_t *)&qword_1EB50DBA0, (void (*)(uint64_t))sub_191D78A5C);
  uint64_t v14 = sub_191EE7FE0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  return v14;
}

uint64_t Digest.deinit()
{
  return v0;
}

uint64_t Digest.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_191DDAD5C()
{
  unint64_t result = qword_1E92F3840;
  if (!qword_1E92F3840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3840);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DigestAlgo(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191DDAE44);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigestAlgo()
{
  return &type metadata for DigestAlgo;
}

uint64_t type metadata accessor for Digest()
{
  return self;
}

uint64_t method lookup function for Digest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Digest);
}

uint64_t dispatch thunk of Digest.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_191DDAECC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_191EE71E0();
  if (!result || (uint64_t result = sub_191EE7200(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_191EE71F0();
      sub_191EE7D70();
      sub_191DDAFAC(&qword_1EB508A98, MEMORY[0x1E4F251D8]);
      return sub_191EE7D40();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_191DDAFAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CodingSafeDictionary.wrappedValue.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t CodingSafeDictionary.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*CodingSafeDictionary.wrappedValue.modify())(void)
{
  return nullsub_1;
}

uint64_t CodingSafeDictionary.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CodingSafeDictionary.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191EE9AB0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    type metadata accessor for SafeishDictionary();
    swift_getWitnessTable();
    sub_191EE97E0();
    uint64_t v5 = v7[6];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodingSafeDictionary.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191EE9AF0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_191EE7F20();
  swift_getWitnessTable();
  sub_191EE9860();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_191DDB27C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CodingSafeDictionary.init(from:)(a1, a2);
}

uint64_t sub_191DDB2B4(void *a1)
{
  return CodingSafeDictionary.encode(to:)(a1);
}

uint64_t sub_191DDB2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 72);
}

uint64_t type metadata accessor for CodingSafeDictionary()
{
  return swift_getGenericMetadata();
}

uint64_t SingleValueStore.storedValue.getter()
{
  uint64_t v1 = type metadata accessor for UnfairLock();
  uint64_t v2 = sub_191EE8DF0();
  swift_retain();
  Lock.sync<A>(_:)((void (*)(uint64_t))sub_191DDB4A4, v0, v1, v2, (uint64_t)&protocol witness table for UnfairLock);
  return swift_release();
}

uint64_t sub_191DDB3AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 160);
  if ((*((unsigned char *)a1 + v5) & 1) == 0)
  {
    sub_191DDB4AC();
    *((unsigned char *)a1 + v5) = 1;
    uint64_t v4 = *a1;
  }
  uint64_t v6 = (uint64_t)a1 + *(void *)(v4 + 152);
  swift_beginAccess();
  uint64_t v7 = sub_191EE8DF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, v6, v7);
}

uint64_t sub_191DDB4A4@<X0>(uint64_t a1@<X8>)
{
  return sub_191DDB3AC(v1, a1);
}

uint64_t sub_191DDB4AC()
{
  uint64_t v1 = v0;
  uint64_t v45 = *v0;
  uint64_t v2 = *(void *)(v45 + 80);
  uint64_t v3 = sub_191EE8DF0();
  unint64_t v44 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint8_t *)&v39 - v7;
  sub_191D93944();
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191EE73F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191DDBBE0((uint64_t)v11);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1) {
    return sub_191DDE384((uint64_t)v11, (void (*)(void))sub_191D93944);
  }
  uint64_t v42 = v3;
  long long v43 = v8;
  unint64_t v41 = v6;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  uint64_t v17 = *(void **)((char *)v0 + *(void *)(*v0 + 168));
  sub_191EE73A0();
  uint64_t v18 = v12;
  uint64_t v19 = v13;
  uint64_t v20 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  unsigned int v21 = objc_msgSend(v17, sel_fileExistsAtPath_, v20);

  if (!v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v15, v18);
  }
  uint64_t v39 = v18;
  uint64_t v40 = v19;
  sub_191EE6FA0();
  swift_allocObject();
  uint64_t v22 = sub_191EE6F90();
  sub_191EE73A0();
  char v23 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v17, sel_contentsAtPath_, v23);

  uint64_t v25 = v15;
  if (v24)
  {
    uint64_t v26 = sub_191EE7500();
    unint64_t v28 = v27;

    uint64_t v29 = (uint64_t)v43;
    sub_191EE6F80();
    __swift_storeEnumTagSinglePayload(v29, 0, 1, v2);
    uint64_t v30 = (uint64_t)v1 + *(void *)(*v1 + 152);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40))(v30, v29, v42);
    swift_endAccess();
    swift_retain();
    long long v31 = sub_191EE7920();
    os_log_type_t v32 = sub_191EE8CA0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v45 = v22;
      long long v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      unint64_t v44 = v28;
      uint64_t v36 = v35;
      v47[0] = v35;
      *(_DWORD *)long long v34 = 136446210;
      long long v43 = v34 + 4;
      uint64_t v38 = *(uint64_t *)((char *)v1 + qword_1EB50D418);
      unint64_t v37 = *(uint64_t *)((char *)v1 + qword_1EB50D418 + 8);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v46 = sub_191D76D74(v38, v37, v47);
      sub_191EE8EA0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191D4D000, v31, v32, "SingleValueStore loaded saved entry from %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v36, -1, -1);
      MEMORY[0x192FE9A10](v34, -1, -1);
      sub_191D76D1C(v26, v44);
    }
    else
    {
      swift_release();
      sub_191D76D1C(v26, v28);
    }
  }
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v25, v39);
}

uint64_t sub_191DDBBE0@<X0>(uint64_t a1@<X8>)
{
  sub_191DDE3D8(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + *(void *)(*(void *)v1 + 184);
  swift_beginAccess();
  sub_191DDE5EC(v9, (uint64_t)v8, sub_191DDE3D8);
  sub_191D93944();
  uint64_t v11 = v10;
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1) {
    return sub_191DDE6B0((uint64_t)v8, a1);
  }
  sub_191DDE384((uint64_t)v8, sub_191DDE3D8);
  sub_191DDBD80(v1, a1);
  sub_191DDE5EC(a1, (uint64_t)v6, (void (*)(void))sub_191D93944);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v11);
  swift_beginAccess();
  sub_191DDE64C((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_191DDBD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v62[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_191D93944();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191EE73F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v57 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v57 - v15;
  if (*(unsigned char *)(a1 + qword_1EB50D420 + 8) == 1)
  {
    sub_191DDE5EC(a1 + qword_1EB50D400, (uint64_t)v6, (void (*)(void))sub_191D93944);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
    {
      sub_191DDE384((uint64_t)v6, (void (*)(void))sub_191D93944);
      uint64_t v17 = sub_191EE7920();
      os_log_type_t v18 = sub_191EE8C80();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_191D4D000, v17, v18, "SingleValueStore failed to determine storage URL", v19, 2u);
        MEMORY[0x192FE9A10](v19, -1, -1);
      }
      goto LABEL_20;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
  }
  else
  {
    uint64_t v20 = *(void *)(a1 + qword_1EB50D420);
    unsigned int v21 = *(void **)(a1 + *(void *)(*(void *)a1 + 168));
    v62[0] = 0;
    id v22 = objc_msgSend(v21, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, v20, 1, 0, 0, v62);
    id v23 = v62[0];
    if (!v22)
    {
      id v45 = v62[0];
      unint64_t v44 = (void *)sub_191EE7300();

      swift_willThrow();
      goto LABEL_18;
    }
    id v24 = v22;
    sub_191EE7380();
    id v25 = v23;
  }
  uint64_t v26 = v7;
  if (*(void *)(a1 + qword_1EB50D408 + 8)) {
    sub_191EE7360();
  }
  char v61 = 0;
  unint64_t v27 = *(void **)(a1 + *(void *)(*(void *)a1 + 168));
  sub_191EE73A0();
  unint64_t v28 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  unsigned int v29 = objc_msgSend(v27, sel_fileExistsAtPath_isDirectory_, v28, &v61);

  uint64_t v7 = v26;
  if (v29 && (v61 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v30 = (void *)sub_191EE7350();
  v62[0] = 0;
  unsigned int v31 = objc_msgSend(v27, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v30, 1, 0, v62);

  if (!v31)
  {
    id v43 = v62[0];
    unint64_t v44 = (void *)sub_191EE7300();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
LABEL_18:
    id v46 = v44;
    id v47 = v44;
    uint64_t v17 = sub_191EE7920();
    os_log_type_t v48 = sub_191EE8C80();
    if (!os_log_type_enabled(v17, v48))
    {

      goto LABEL_22;
    }
    unint64_t v49 = (uint8_t *)swift_slowAlloc();
    v50 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v49 = 138543362;
    id v51 = v44;
    unint64_t v52 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v62[0] = v52;
    sub_191EE8EA0();
    void *v50 = v52;

    _os_log_impl(&dword_191D4D000, v17, v48, "SingleValueStore failed to determine storage URL with error: %{public}@", v49, 0xCu);
    sub_191DA5470();
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v50, -1, -1);
    MEMORY[0x192FE9A10](v49, -1, -1);

LABEL_20:
LABEL_22:
    uint64_t v53 = a2;
    uint64_t v54 = 1;
    return __swift_storeEnumTagSinglePayload(v53, v54, 1, v7);
  }
  id v32 = v62[0];
LABEL_14:
  sub_191EE7370();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v59 = v14;
  v33(v11, v14, v26);
  long long v34 = sub_191EE7920();
  os_log_type_t v35 = sub_191EE8CA0();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    unint64_t v37 = (void *)swift_slowAlloc();
    uint64_t v58 = a2;
    uint64_t v38 = v37;
    v62[0] = v37;
    *(_DWORD *)uint64_t v36 = 136446210;
    v57 = v36 + 4;
    uint64_t v39 = sub_191EE73A0();
    uint64_t v60 = sub_191D76D74(v39, v40, (uint64_t *)v62);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    unint64_t v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    _os_log_impl(&dword_191D4D000, v34, v35, "SingleValueStore storage URL: %{public}s", v36, 0xCu);
    swift_arrayDestroy();
    uint64_t v42 = v38;
    a2 = v58;
    MEMORY[0x192FE9A10](v42, -1, -1);
    MEMORY[0x192FE9A10](v36, -1, -1);

    v41(v16, v7);
  }
  else
  {
    v55 = *(void (**)(char *, uint64_t))(v8 + 8);
    v55(v11, v26);

    v55(v16, v26);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v59, v7);
  uint64_t v53 = a2;
  uint64_t v54 = 0;
  return __swift_storeEnumTagSinglePayload(v53, v54, 1, v7);
}

uint64_t SingleValueStore.__allocating_init(directoryURL:filename:log:)()
{
  uint64_t v0 = swift_allocObject();
  SingleValueStore.init(directoryURL:filename:log:)();
  return v0;
}

void SingleValueStore.init(directoryURL:filename:log:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = v0;
  uint64_t v46 = v2;
  uint64_t v47 = v3;
  uint64_t v51 = v4;
  uint64_t v48 = *(void *)v0;
  uint64_t v49 = v5;
  sub_191DDCACC(0);
  uint64_t v7 = OUTLINED_FUNCTION_86(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  uint64_t v45 = v8;
  uint64_t v44 = sub_191EE7940();
  OUTLINED_FUNCTION_1_2();
  uint64_t v52 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_5_1();
  uint64_t v50 = v11;
  uint64_t v43 = sub_191EE8D10();
  OUTLINED_FUNCTION_1_2();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v16 - v15;
  sub_191EE8CE0();
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_11_0();
  uint64_t v19 = sub_191EE7C60();
  uint64_t v20 = OUTLINED_FUNCTION_86(v19);
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_41();
  uint64_t v42 = qword_1EB50D558;
  sub_191D74B24(0, (unint64_t *)&qword_1EB50EE70);
  sub_191EE7C20();
  uint64_t v53 = MEMORY[0x1E4FBC860];
  sub_191DDE334((unint64_t *)&qword_1EB50EE60, MEMORY[0x1E4FBCC10]);
  unsigned int v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_191DDCB00(0, (unint64_t *)&qword_1EB50EE50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_191D857BC((unint64_t *)&qword_1EB50EE58, (unint64_t *)&qword_1EB50EE50, v21);
  sub_191EE9060();
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v17, *MEMORY[0x1E4FBCC58], v43);
  OUTLINED_FUNCTION_15_6();
  *(void *)&v0[v42] = sub_191EE8D60();
  uint64_t v22 = qword_1EB50D410;
  uint64_t v53 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)&v0[v22] = UnfairLock.init(options:)((int *)&v53);
  OUTLINED_FUNCTION_1_17();
  __swift_storeEnumTagSinglePayload((uint64_t)&v0[*(void *)(v23 + 152)], 1, 1, *(void *)(v48 + 80));
  OUTLINED_FUNCTION_1_17();
  v0[*(void *)(v24 + 160)] = 0;
  OUTLINED_FUNCTION_1_17();
  uint64_t v26 = *(void *)(v25 + 168);
  *(void *)&v1[v26] = objc_msgSend(self, sel_defaultManager);
  OUTLINED_FUNCTION_1_17();
  sub_191D93944();
  OUTLINED_FUNCTION_8_6(v27);
  unint64_t v28 = &v1[qword_1EB50D420];
  *(void *)unint64_t v28 = 0;
  v28[8] = 1;
  uint64_t v29 = (uint64_t)&v1[qword_1EB50D400];
  uint64_t v30 = sub_191EE73F0();
  OUTLINED_FUNCTION_4_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v29, v46, v30);
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v30);
  id v32 = &v1[qword_1EB50D408];
  *(void *)id v32 = 0;
  *((void *)v32 + 1) = 0;
  uint64_t v33 = &v1[qword_1EB50D418];
  *(void *)uint64_t v33 = v49;
  *((void *)v33 + 1) = v51;
  sub_191DDE5EC(v47, v45, sub_191DDCACC);
  if (__swift_getEnumTagSinglePayload(v45, 1, v44) == 1)
  {
    uint64_t v34 = v50;
    uint64_t v35 = v52;
    if (qword_1EB50D4C8 != -1) {
      swift_once();
    }
    uint64_t v36 = __swift_project_value_buffer(v44, (uint64_t)qword_1EB513310);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v50, v36, v44);
    sub_191DDE384(v47, sub_191DDCACC);
    uint64_t v37 = OUTLINED_FUNCTION_13_6();
    v38(v37);
    sub_191DDE384(v45, sub_191DDCACC);
  }
  else
  {
    sub_191DDE384(v47, sub_191DDCACC);
    uint64_t v39 = OUTLINED_FUNCTION_13_6();
    v40(v39);
    uint64_t v35 = v52;
    uint64_t v34 = v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v50, v45, v44);
  }
  OUTLINED_FUNCTION_1_17();
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v1[*(void *)(v41 + 176)], v34, v44);
  OUTLINED_FUNCTION_36();
}

void sub_191DDCACC(uint64_t a1)
{
}

void sub_191DDCB00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t SingleValueStore.__allocating_init(directory:subdirectoryPath:filename:log:)()
{
  uint64_t v0 = swift_allocObject();
  SingleValueStore.init(directory:subdirectoryPath:filename:log:)();
  return v0;
}

void SingleValueStore.init(directory:subdirectoryPath:filename:log:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = v0;
  uint64_t v42 = v2;
  uint64_t v51 = v3;
  uint64_t v48 = v4;
  uint64_t v49 = v5;
  uint64_t v47 = v6;
  uint64_t v44 = *(void *)v0;
  uint64_t v45 = v7;
  sub_191DDCACC(0);
  uint64_t v9 = OUTLINED_FUNCTION_86(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_7_8(v10, v38);
  uint64_t v43 = sub_191EE7940();
  OUTLINED_FUNCTION_1_2();
  uint64_t v50 = v11;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_5_1();
  uint64_t v46 = v13;
  uint64_t v40 = sub_191EE8D10();
  OUTLINED_FUNCTION_1_2();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_2();
  uint64_t v19 = v18 - v17;
  sub_191EE8CE0();
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_2();
  uint64_t v21 = sub_191EE7C60();
  uint64_t v22 = OUTLINED_FUNCTION_86(v21);
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_11_0();
  uint64_t v39 = qword_1EB50D558;
  sub_191D74B24(0, (unint64_t *)&qword_1EB50EE70);
  sub_191EE7C20();
  uint64_t v52 = MEMORY[0x1E4FBC860];
  sub_191DDE334((unint64_t *)&qword_1EB50EE60, MEMORY[0x1E4FBCC10]);
  uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_191DDCB00(0, (unint64_t *)&qword_1EB50EE50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_191D857BC((unint64_t *)&qword_1EB50EE58, (unint64_t *)&qword_1EB50EE50, v23);
  sub_191EE9060();
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v19, *MEMORY[0x1E4FBCC58], v40);
  OUTLINED_FUNCTION_15_6();
  *(void *)&v0[v39] = sub_191EE8D60();
  uint64_t v24 = qword_1EB50D410;
  uint64_t v52 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)&v0[v24] = UnfairLock.init(options:)((int *)&v52);
  OUTLINED_FUNCTION_1_17();
  __swift_storeEnumTagSinglePayload((uint64_t)&v0[*(void *)(v25 + 152)], 1, 1, *(void *)(v44 + 80));
  OUTLINED_FUNCTION_1_17();
  v0[*(void *)(v26 + 160)] = 0;
  OUTLINED_FUNCTION_1_17();
  uint64_t v28 = *(void *)(v27 + 168);
  *(void *)&v1[v28] = objc_msgSend(self, sel_defaultManager);
  OUTLINED_FUNCTION_1_17();
  sub_191D93944();
  OUTLINED_FUNCTION_8_6(v29);
  uint64_t v30 = &v1[qword_1EB50D420];
  *(void *)uint64_t v30 = v45;
  v30[8] = 0;
  uint64_t v31 = sub_191EE73F0();
  OUTLINED_FUNCTION_8_6(v31);
  id v32 = &v1[qword_1EB50D408];
  *(void *)id v32 = v47;
  *((void *)v32 + 1) = v48;
  uint64_t v33 = &v1[qword_1EB50D418];
  *(void *)uint64_t v33 = v49;
  *((void *)v33 + 1) = v51;
  sub_191DDE5EC(v42, v41, sub_191DDCACC);
  if (__swift_getEnumTagSinglePayload(v41, 1, v43) == 1)
  {
    uint64_t v34 = v46;
    uint64_t v35 = v50;
    if (qword_1EB50D4C8 != -1) {
      swift_once();
    }
    uint64_t v36 = __swift_project_value_buffer(v43, (uint64_t)qword_1EB513310);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v46, v36, v43);
    sub_191DDE384(v42, sub_191DDCACC);
    sub_191DDE384(v41, sub_191DDCACC);
  }
  else
  {
    sub_191DDE384(v42, sub_191DDCACC);
    uint64_t v35 = v50;
    uint64_t v34 = v46;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v46, v41, v43);
  }
  OUTLINED_FUNCTION_1_17();
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v1[*(void *)(v37 + 176)], v34, v43);
  OUTLINED_FUNCTION_36();
}

void SingleValueStore.add(value:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = (uint64_t)v0;
  uint64_t v37 = *v0;
  uint64_t v41 = sub_191EE7C00();
  OUTLINED_FUNCTION_1_2();
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_7_8(v4, v34);
  sub_191EE7C60();
  OUTLINED_FUNCTION_1_2();
  uint64_t v42 = v6;
  uint64_t v43 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v39 = v7;
  uint64_t v8 = *(void *)(v37 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v10 = v9;
  uint64_t v36 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v35 = (char *)&v34 - v13;
  uint64_t v14 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v34 - v18;
  UnfairLock.lock()();
  OUTLINED_FUNCTION_1_17();
  *((unsigned char *)v0 + *(void *)(v20 + 160)) = 1;
  uint64_t v21 = *(void (**)(void))(v10 + 16);
  OUTLINED_FUNCTION_17_5();
  v21();
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v8);
  OUTLINED_FUNCTION_1_17();
  uint64_t v23 = (char *)v0 + *(void *)(v22 + 152);
  OUTLINED_FUNCTION_16_5();
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v23, v19, v14);
  swift_endAccess();
  uint64_t v38 = *(void *)(v1 + qword_1EB50D558);
  uint64_t v24 = v35;
  OUTLINED_FUNCTION_17_5();
  v21();
  unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v37;
  *((void *)v26 + 2) = v8;
  *((void *)v26 + 3) = *(void *)(v27 + 88);
  *((void *)v26 + 4) = *(void *)(v27 + 96);
  *((void *)v26 + 5) = v1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v26[v25], v24, v8);
  v46[4] = sub_191DDE30C;
  v46[5] = v26;
  v46[0] = MEMORY[0x1E4F143A8];
  v46[1] = 1107296256;
  v46[2] = sub_191D70378;
  v46[3] = &block_descriptor_2;
  uint64_t v28 = _Block_copy(v46);
  swift_retain();
  uint64_t v29 = v39;
  sub_191EE7C30();
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_191DDE334((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  uint64_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_191DDCB00(0, (unint64_t *)&qword_1EB50E620, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_191D857BC((unint64_t *)&qword_1EB50E628, (unint64_t *)&qword_1EB50E620, v30);
  uint64_t v31 = v40;
  sub_191EE9060();
  MEMORY[0x192FE7EF0](0, v29, v31, v28);
  _Block_release(v28);
  OUTLINED_FUNCTION_33();
  v32();
  OUTLINED_FUNCTION_33();
  v33();
  swift_release();
  sub_191DDD554(v1);
  OUTLINED_FUNCTION_36();
}

void sub_191DDD554(uint64_t a1)
{
}

uint64_t sub_191DDD568()
{
  sub_191D93944();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_191EE73F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191DDBBE0((uint64_t)v2);
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1) {
    return sub_191DDE384((uint64_t)v2, (void (*)(void))sub_191D93944);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  sub_191EE6FE0();
  swift_allocObject();
  _s13TeaFoundation16ReferenceEncoderCACycfc_0();
  uint64_t v8 = sub_191EE6FB0();
  unint64_t v10 = v9;
  sub_191EE7530();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_191D76D1C(v8, v10);
  return swift_release();
}

Swift::Void __swiftcall SingleValueStore.reset()()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = (uint64_t)v0;
  uint64_t v3 = *v0;
  sub_191EE7C00();
  OUTLINED_FUNCTION_1_2();
  v31[2] = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  sub_191EE7C60();
  OUTLINED_FUNCTION_1_2();
  v31[0] = v10;
  v31[1] = v9;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_41();
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v12 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v31 - v16;
  UnfairLock.lock()();
  OUTLINED_FUNCTION_1_17();
  *(unsigned char *)(v2 + *(void *)(v18 + 160)) = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v11);
  OUTLINED_FUNCTION_1_17();
  uint64_t v20 = v2 + *(void *)(v19 + 152);
  OUTLINED_FUNCTION_16_5();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(v20, v17, v12);
  swift_endAccess();
  v32[4] = sub_191DDE37C;
  v32[5] = v2;
  v32[0] = MEMORY[0x1E4F143A8];
  v32[1] = 1107296256;
  v32[2] = sub_191D70378;
  v32[3] = &block_descriptor_3;
  uint64_t v21 = _Block_copy(v32);
  swift_retain();
  sub_191EE7C30();
  v31[3] = MEMORY[0x1E4FBC860];
  sub_191DDE334((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_191DDCB00(0, (unint64_t *)&qword_1EB50E620, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_191D857BC((unint64_t *)&qword_1EB50E628, (unint64_t *)&qword_1EB50E620, v22);
  sub_191EE9060();
  MEMORY[0x192FE7EF0](0, v1, v8, v21);
  _Block_release(v21);
  OUTLINED_FUNCTION_33();
  v26(v23, v24, v25);
  OUTLINED_FUNCTION_33();
  v30(v27, v28, v29);
  swift_release();
  sub_191DDD554(v2);
  OUTLINED_FUNCTION_36();
}

uint64_t sub_191DDDC5C(uint64_t a1)
{
  v31[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_191D93944();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191EE73F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191DDBBE0((uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return sub_191DDE384((uint64_t)v4, (void (*)(void))sub_191D93944);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v10 = *(void **)(a1 + *(void *)(*(void *)a1 + 168));
  sub_191EE73A0();
  uint64_t v11 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  unsigned int v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

  if (v12)
  {
    uint64_t v13 = sub_191EE7920();
    os_log_type_t v14 = sub_191EE8CA0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_191D4D000, v13, v14, "SingleValueStore resetting state", v15, 2u);
      MEMORY[0x192FE9A10](v15, -1, -1);
    }

    uint64_t v16 = (void *)sub_191EE7350();
    v31[0] = 0;
    unsigned int v17 = objc_msgSend(v10, sel_removeItemAtURL_error_, v16, v31);

    if (v17)
    {
      uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
      id v19 = v31[0];
      return v18(v8, v5);
    }
    id v20 = v31[0];
    uint64_t v21 = (void *)sub_191EE7300();

    swift_willThrow();
    id v22 = v21;
    id v23 = v21;
    uint64_t v24 = sub_191EE7920();
    os_log_type_t v25 = sub_191EE8C80();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      v30[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138543362;
      id v27 = v21;
      uint64_t v28 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v31[0] = v28;
      sub_191EE8EA0();
      uint64_t v29 = v30[0];
      *(void *)v30[0] = v28;

      _os_log_impl(&dword_191D4D000, v24, v25, "SingleValueStore failed to reset state with error: %{public}@", v26, 0xCu);
      sub_191DA5470();
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v29, -1, -1);
      MEMORY[0x192FE9A10](v26, -1, -1);
    }
    else
    {
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SingleValueStore.deinit()
{
  sub_191DDE384(v0 + qword_1EB50D400, (void (*)(void))sub_191D93944);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_191EE8DF0();
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_33();
  v1();

  sub_191EE7940();
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_33();
  v2();
  sub_191DDE384(v0 + *(void *)(*(void *)v0 + 184), sub_191DDE3D8);
  return v0;
}

uint64_t SingleValueStore.__deallocating_deinit()
{
  SingleValueStore.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_191DDE26C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_1_2();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return MEMORY[0x1F4186498](v0, v8, v9);
}

uint64_t sub_191DDE30C()
{
  return sub_191DDD568();
}

uint64_t sub_191DDE334(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191DDE37C()
{
  return sub_191DDDC5C(v0);
}

uint64_t sub_191DDE384(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_33();
  v3();
  return a1;
}

void sub_191DDE3D8(uint64_t a1)
{
}

void sub_191DDE40C()
{
  sub_191D93944();
  if (v0 <= 0x3F)
  {
    sub_191EE8DF0();
    if (v1 <= 0x3F)
    {
      sub_191EE7940();
      if (v2 <= 0x3F)
      {
        sub_191DDE3D8(319);
        if (v3 <= 0x3F) {
          swift_initClassMetadata2();
        }
      }
    }
  }
}

uint64_t type metadata accessor for SingleValueStore()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SingleValueStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingleValueStore);
}

uint64_t dispatch thunk of SingleValueStore.__allocating_init(directoryURL:filename:log:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of SingleValueStore.__allocating_init(directory:subdirectoryPath:filename:log:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_191DDE5EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_191DDE64C(uint64_t a1, uint64_t a2)
{
  sub_191DDE3D8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191DDE6B0(uint64_t a1, uint64_t a2)
{
  sub_191D93944();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191DDE714(void (*a1)(char *, void (*)(char *, uint64_t, uint64_t)), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v64 = a8;
  uint64_t v65 = a5;
  uint64_t v9 = v8;
  uint64_t v77 = a4;
  v78 = a1;
  uint64_t v79 = a2;
  OUTLINED_FUNCTION_1_2();
  uint64_t v63 = v11;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_2_11();
  v76 = v13;
  MEMORY[0x1F4188790](v14);
  v74 = (char *)v61 - v15;
  uint64_t v17 = v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  uint64_t v75 = v19;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v20);
  v62 = (char *)v61 - v21;
  sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v66 = v23;
  uint64_t v67 = v22;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_2_11();
  uint64_t v72 = v24;
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)v61 - v27;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_2_11();
  v61[1] = v29;
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_1_2();
  uint64_t v32 = v31;
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_2();
  uint64_t v71 = v35 - v34;
  uint64_t v70 = a6;
  uint64_t v73 = v17;
  uint64_t v80 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  uint64_t v68 = v36;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v37);
  uint64_t v38 = sub_191EE8380();
  uint64_t v81 = sub_191EE7DA0();
  uint64_t v77 = sub_191EE9330();
  sub_191EE92D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v71, v69, v73);
  uint64_t result = sub_191EE8370();
  if (v38 < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (v38)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_191EE8E80();
      uint64_t result = OUTLINED_FUNCTION_13_7((uint64_t)v28);
      if (v40) {
        goto LABEL_19;
      }
      v78(v28, v76);
      if (v9)
      {
        uint64_t v52 = OUTLINED_FUNCTION_2_17();
        v53(v52);
        swift_release();
        OUTLINED_FUNCTION_15();
        v54();
        uint64_t v55 = OUTLINED_FUNCTION_9_5();
        return v56(v55);
      }
      uint64_t v9 = 0;
      uint64_t v41 = OUTLINED_FUNCTION_9_5();
      v42(v41);
      sub_191EE9310();
      if (!--v38)
      {
        uint64_t v43 = v75;
        uint64_t v44 = v72;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v43 = v75;
  uint64_t v44 = v72;
LABEL_9:
  sub_191EE8E80();
  OUTLINED_FUNCTION_13_7(v44);
  if (v40)
  {
    uint64_t v47 = v72;
LABEL_15:
    uint64_t v50 = OUTLINED_FUNCTION_2_17();
    v51(v50);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v47, v67);
    return v81;
  }
  else
  {
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
    uint64_t v75 = v43 + 32;
    v76 = v45;
    uint64_t v46 = v62;
    uint64_t v47 = v72;
    while (1)
    {
      v76(v46, v47, AssociatedTypeWitness);
      v78(v46, (void (*)(char *, uint64_t, uint64_t))v74);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      uint64_t v48 = OUTLINED_FUNCTION_6_8();
      v49(v48);
      sub_191EE9310();
      sub_191EE8E80();
      OUTLINED_FUNCTION_13_7(v47);
      if (v40) {
        goto LABEL_15;
      }
    }
    uint64_t v57 = OUTLINED_FUNCTION_6_8();
    v58(v57);
    uint64_t v59 = OUTLINED_FUNCTION_2_17();
    v60(v59);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v63 + 32))(v64, v74, v65);
  }
}

uint64_t Reference.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Reference.init(value:type:keyPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_4_12();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v8 = *(void *)(v7 + *MEMORY[0x1E4FBC5F0]);
  OUTLINED_FUNCTION_1_2();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, a1, v8);
  uint64_t v12 = type metadata accessor for Reference();
  uint64_t v13 = (void *)(a2 + *(int *)(v12 + 32));
  *uint64_t v13 = v5;
  v13[1] = v6;
  swift_getAtKeyPath();
  swift_release();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v8);
  uint64_t v15 = a2 + *(int *)(v12 + 28);
  *(void *)uint64_t v15 = v16;
  *(void *)(v15 + 8) = v17;
  *(unsigned char *)(v15 + 16) = 0;
  return result;
}

uint64_t type metadata accessor for Reference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Reference.init(value:type:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t result = type metadata accessor for Reference();
  uint64_t v12 = (void *)(a6 + *(int *)(result + 32));
  *uint64_t v12 = v9;
  v12[1] = v10;
  uint64_t v13 = a6 + *(int *)(result + 28);
  *(void *)uint64_t v13 = a3;
  *(void *)(v13 + 8) = a4;
  *(unsigned char *)(v13 + 16) = 0;
  return result;
}

void Reference.init(value:type:keyPath:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a3;
  OUTLINED_FUNCTION_4_12();
  uint64_t v7 = *(void *)(v6 + *MEMORY[0x1E4FBC5F0]);
  sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - v11;
  OUTLINED_FUNCTION_1_2();
  uint64_t v37 = v13;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = type metadata accessor for Reference();
  OUTLINED_FUNCTION_1_2();
  uint64_t v36 = v18;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_10_8();
  uint64_t v20 = *a2;
  uint64_t v21 = a2[1];
  uint64_t v35 = v20;
  uint64_t v38 = a1;
  OUTLINED_FUNCTION_15_0();
  v22();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7) == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void (**)(void))(v9 + 8);
    OUTLINED_FUNCTION_8_7();
    v23();
    OUTLINED_FUNCTION_8_7();
    v23();
    uint64_t v24 = 1;
    uint64_t v25 = v39;
  }
  else
  {
    uint64_t v26 = v37;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v16, v12, v7);
    OUTLINED_FUNCTION_15_0();
    v27();
    uint64_t v28 = (void *)(v3 + *(int *)(v17 + 32));
    *uint64_t v28 = v35;
    v28[1] = v21;
    swift_getAtKeyPath();
    swift_release();
    OUTLINED_FUNCTION_8_7();
    v29();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v7);
    uint64_t v30 = v41;
    uint64_t v31 = v3 + *(int *)(v17 + 28);
    *(void *)uint64_t v31 = v40;
    *(void *)(v31 + 8) = v30;
    *(unsigned char *)(v31 + 16) = 0;
    uint64_t v32 = v39;
    OUTLINED_FUNCTION_15();
    v33();
    uint64_t v24 = 0;
    uint64_t v25 = v32;
  }
  __swift_storeEnumTagSinglePayload(v25, v24, 1, v17);
  OUTLINED_FUNCTION_36();
}

void Reference.init(value:type:identifier:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  OUTLINED_FUNCTION_1_2();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_2();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for Reference();
  OUTLINED_FUNCTION_1_2();
  uint64_t v19 = v18;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_10_8();
  uint64_t v21 = a2[1];
  if (__swift_getEnumTagSinglePayload(a1, 1, a5) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_191EE8DF0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
    OUTLINED_FUNCTION_36();
    __swift_storeEnumTagSinglePayload(v23, v24, v25, v26);
  }
  else
  {
    uint64_t v31 = *a2;
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
    v28(v16, a1, a5);
    v28(v6, v16, a5);
    uint64_t v29 = (void *)(v6 + *(int *)(v17 + 32));
    void *v29 = v31;
    v29[1] = v21;
    uint64_t v30 = v6 + *(int *)(v17 + 28);
    *(void *)uint64_t v30 = a3;
    *(void *)(v30 + 8) = a4;
    *(unsigned char *)(v30 + 16) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(a6, v6, v17);
    __swift_storeEnumTagSinglePayload(a6, 0, 1, v17);
    OUTLINED_FUNCTION_36();
  }
}

uint64_t Reference<A>.init(value:type:elementKeyPath:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  OUTLINED_FUNCTION_1_2();
  uint64_t v14 = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a6, a1, v16);
  uint64_t v17 = type metadata accessor for Reference();
  uint64_t v18 = (void *)(a6 + *(int *)(v17 + 32));
  *uint64_t v18 = v11;
  v18[1] = v12;
  v23[2] = a4;
  v23[3] = a5;
  v23[4] = a3;
  uint64_t v20 = sub_191DDE714((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_191DE07E8, (uint64_t)v23, a4, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], a5, MEMORY[0x1E4FBC278], v19);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a4);
  uint64_t result = swift_release();
  uint64_t v22 = a6 + *(int *)(v17 + 28);
  *(void *)uint64_t v22 = v20;
  *(void *)(v22 + 8) = 0;
  *(unsigned char *)(v22 + 16) = 1;
  return result;
}

void Reference<A>.init(value:type:elementKeyPath:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v47 = a5;
  uint64_t v48 = a3;
  uint64_t v50 = a6;
  sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v44 - v12;
  OUTLINED_FUNCTION_1_2();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_2();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for Reference();
  OUTLINED_FUNCTION_1_2();
  uint64_t v46 = v21;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = *a2;
  uint64_t v26 = a2[1];
  uint64_t v45 = v25;
  uint64_t v49 = a1;
  OUTLINED_FUNCTION_15_0();
  v27();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, a4) == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void (**)(void))(v10 + 8);
    OUTLINED_FUNCTION_12_6();
    v28();
    OUTLINED_FUNCTION_12_6();
    v28();
    uint64_t v29 = 1;
    uint64_t v30 = v50;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v19, v13, a4);
    OUTLINED_FUNCTION_15_0();
    uint64_t v32 = v31();
    uint64_t v44 = (uint64_t)&v44;
    uint64_t v33 = &v24[*(int *)(v20 + 32)];
    *(void *)uint64_t v33 = v45;
    *((void *)v33 + 1) = v26;
    MEMORY[0x1F4188790](v32);
    uint64_t v34 = v47;
    uint64_t v35 = v48;
    *(&v44 - 4) = a4;
    *(&v44 - 3) = v34;
    *(&v44 - 2) = v35;
    uint64_t v37 = sub_191DDE714((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_191DDF6F0, (uint64_t)(&v44 - 6), a4, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], v34, MEMORY[0x1E4FBC278], v36);
    swift_release();
    OUTLINED_FUNCTION_12_6();
    v38();
    uint64_t v39 = OUTLINED_FUNCTION_3_13();
    v40(v39);
    uint64_t v41 = &v24[*(int *)(v20 + 28)];
    *(void *)uint64_t v41 = v37;
    *((void *)v41 + 1) = 0;
    v41[16] = 1;
    uint64_t v42 = v50;
    OUTLINED_FUNCTION_15();
    v43();
    uint64_t v29 = 0;
    uint64_t v30 = v42;
  }
  __swift_storeEnumTagSinglePayload(v30, v29, 1, v20);
  OUTLINED_FUNCTION_36();
}

uint64_t sub_191DDF6F0()
{
  return swift_getAtKeyPath();
}

uint64_t Reference.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v5 = type metadata accessor for Reference();
  OUTLINED_FUNCTION_1_2();
  uint64_t v21 = v6;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = type metadata accessor for ReferenceDecodingContainer();
  OUTLINED_FUNCTION_1_2();
  uint64_t v20 = v11;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_10_8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191E0B870(v3);
  if (!v2)
  {
    uint64_t v13 = v21;
    uint64_t v19 = v5;
    uint64_t v14 = v22;
    ReferenceDecodingContainer.decode()(v10, (uint64_t)v9);
    uint64_t v15 = OUTLINED_FUNCTION_3_13();
    v16(v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v14, v9, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t Reference.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = type metadata accessor for ReferenceEncodingContainer();
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v15 - v11;
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_191DD81A8(v6, v13, (uint64_t)v12);
  if (!v3)
  {
    sub_191E0C4B0(v4, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  }
  return result;
}

uint64_t sub_191DDF9A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Reference.init(from:)(a1, a2);
}

uint64_t sub_191DDF9C4(void *a1, uint64_t a2)
{
  return Reference.encode(to:)(a1, a2);
}

__n128 AnyReference.init<A>(reference:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Reference();
  uint64_t v7 = (unint64_t *)(a1 + *(int *)(v6 + 32));
  unint64_t v9 = *v7;
  unint64_t v8 = v7[1];
  a3->n128_u64[0] = v9;
  a3->n128_u64[1] = v8;
  a3[4].n128_u64[0] = a2;
  __swift_allocate_boxed_opaque_existential_0(&a3[2].n128_i64[1]);
  OUTLINED_FUNCTION_15();
  v10();
  uint64_t v11 = (__n128 *)(a1 + *(int *)(v6 + 28));
  unsigned __int8 v12 = v11[1].n128_u8[0];
  __n128 result = *v11;
  a3[1] = *v11;
  a3[2].n128_u8[0] = v12;
  return result;
}

uint64_t sub_191DDFA78()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191DDFB1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (char *)v4 + v6;
    uint64_t v11 = (char *)a2 + v6;
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    char v16 = *(unsigned char *)(v13 + 16);
    sub_191D97C38();
    *(void *)unint64_t v12 = v14;
    *(void *)(v12 + 8) = v15;
    *(unsigned char *)(v12 + 16) = v16;
    uint64_t v17 = (void *)((unint64_t)(v10 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (void *)((unint64_t)(v11 + 31) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v17 = *v18;
    v17[1] = v18[1];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return v4;
}

uint64_t sub_191DDFC60(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  sub_191D97C54();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191DDFCE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  char v13 = *(unsigned char *)(v10 + 16);
  sub_191D97C38();
  *(void *)unint64_t v9 = v11;
  *(void *)(v9 + 8) = v12;
  *(unsigned char *)(v9 + 16) = v13;
  uint64_t v14 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_191DDFDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  char v13 = *(unsigned char *)(v10 + 16);
  sub_191D97C38();
  *(void *)unint64_t v9 = v11;
  *(void *)(v9 + 8) = v12;
  *(unsigned char *)(v9 + 16) = v13;
  sub_191D97C54();
  uint64_t v14 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191DDFE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  *(_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_191DDFF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  sub_191D97C54();
  uint64_t v12 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  char v13 = (void *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191DDFFF0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191DE012CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_191DE0140(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 31) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 31) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 31) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 31) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 31) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x191DE0310);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 31] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *unint64_t v17 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            v17[1] = (a2 - 1);
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t destroy for AnyReference(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for AnyReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191D97C38();
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 64) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t assignWithCopy for AnyReference(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_191D97C38();
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_191D97C54();
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        unsigned int v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AnyReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v5;
  sub_191D97C54();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyReference(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyReference(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyReference()
{
  return &type metadata for AnyReference;
}

uint64_t sub_191DE07E8()
{
  return sub_191DDF6F0();
}

uint64_t sub_191DE0800(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_191EE8330();
  }
  else {
    return 0;
  }
}

uint64_t sub_191DE0848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_191DE2148(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = 1;
  }
  else
  {
    sub_191DE21C8(result, v5, a1, a2);
    uint64_t v7 = 0;
  }
  uint64_t v8 = type metadata accessor for AuthToken();

  return __swift_storeEnumTagSinglePayload(a2, v7, 1, v8);
}

unint64_t sub_191DE08E0(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    uint64_t result = sub_191EE8240();
    if (v6) {
      uint64_t result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = sub_191EE8360();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191DE09B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x191DE0B10);
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v5)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_191DD89D4(v10, a1, v9, a2, a3);
  if ((v12 & 1) == 0)
  {
    uint64_t v13 = 0;
    switch((int)v5)
    {
      case 0:
        uint64_t v13 = BYTE6(a3);
        goto LABEL_12;
      case 1:
        uint64_t v13 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v13 = *(void *)(a2 + 24);
        goto LABEL_12;
      case 3:
LABEL_12:
        if (v13 < v11) {
          __break(1u);
        }
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  switch((int)v5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
LABEL_14:
      uint64_t v14 = sub_191EE74B0();
      uint64_t v16 = v15;
      uint64_t result = sub_191D76D1C(a2, a3);
      *a4 = v14;
      a4[1] = v16;
      return result;
    default:
LABEL_16:
      JUMPOUT(0);
  }
}

uint64_t JSONPointer.components.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

TeaFoundation::JSONPointer __swiftcall JSONPointer.init(components:)(TeaFoundation::JSONPointer components)
{
  v1->components._rawValue = components.components._rawValue;
  return components;
}

Swift::Void __swiftcall JSONPointer.append(_:)(TeaFoundation::JSONPointer::Component a1)
{
  uint64_t v3 = *(void *)a1.unescapedValue._countAndFlagsBits;
  uint64_t v2 = *(void *)(a1.unescapedValue._countAndFlagsBits + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191D9389C();
  uint64_t v4 = *(void *)(*v1 + 16);
  sub_191D93C74(v4);
  uint64_t v5 = *v1;
  *(void *)(v5 + 16) = v4 + 1;
  uint64_t v6 = v5 + 16 * v4;
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v2;
  *unint64_t v1 = v5;
}

TeaFoundation::JSONPointer __swiftcall JSONPointer.appending(_:)(TeaFoundation::JSONPointer::Component a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)a1.unescapedValue._countAndFlagsBits;
  uint64_t v4 = *(void *)(a1.unescapedValue._countAndFlagsBits + 8);
  *unint64_t v1 = *v2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191D9389C();
  uint64_t v6 = *(void *)(*v3 + 16);
  result.components._rawValue = (void *)sub_191D93C74(v6);
  uint64_t v8 = *v3;
  *(void *)(v8 + 16) = v6 + 1;
  uint64_t v9 = v8 + 16 * v6;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v4;
  return result;
}

uint64_t JSONPointer.Component.jsonEscaped.getter()
{
  sub_191D63A18();
  OUTLINED_FUNCTION_0_17();
  uint64_t v0 = OUTLINED_FUNCTION_0_17();
  swift_bridgeObjectRelease();
  return v0;
}

TeaFoundation::JSONPointer_optional __swiftcall JSONPointer.init(rawValue:)(Swift::String rawValue)
{
  unint64_t object = (unint64_t)rawValue._object;
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v4 = v1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v5 = sub_191DE0800(countAndFlagsBits, object);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_7:
    uint64_t v10 = swift_bridgeObjectRelease();
    uint64_t v12 = HIBYTE(object) & 0xF;
    if ((object & 0x2000000000000000) == 0) {
      uint64_t v12 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    }
    if (v12)
    {
      uint64_t v13 = 0;
LABEL_21:
      *uint64_t v4 = v13;
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v13 = MEMORY[0x1E4FBC860];
    goto LABEL_21;
  }
  if (v5 == 47 && v7 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_191EE9770();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_7;
    }
  }
  unint64_t v14 = sub_191DE08E0(1uLL, countAndFlagsBits, object);
  unint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v48 = 47;
  unint64_t v49 = 0xE100000000000000;
  MEMORY[0x1F4188790](v14);
  v35[2] = &v48;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v19 = sub_191D50D84(0x7FFFFFFFFFFFFFFFuLL, 0, (uint64_t (*)(uint64_t))sub_191D51134, (uint64_t)v35, v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
    uint64_t v10 = swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v37 = v4;
  uint64_t v52 = MEMORY[0x1E4FBC860];
  sub_191DD374C();
  uint64_t v13 = v52;
  unint64_t v21 = sub_191DE2040();
  sub_191D63A18();
  uint64_t v36 = v19;
  uint64_t v22 = (uint64_t *)(v19 + 56);
  unint64_t v38 = v21;
  while (1)
  {
    uint64_t v39 = v20;
    unint64_t v23 = *(v22 - 2);
    uint64_t v24 = *(v22 - 1);
    uint64_t v25 = *v22;
    uint64_t v48 = *(v22 - 3);
    unint64_t v49 = v23;
    uint64_t v50 = v24;
    uint64_t v51 = v25;
    uint64_t v44 = v48;
    unint64_t v45 = v23;
    uint64_t v46 = v24;
    uint64_t v47 = v25;
    uint64_t v42 = 47;
    unint64_t v43 = 0xE100000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v26 = MEMORY[0x1E4FBB1A0];
    uint64_t v10 = sub_191EE8F30();
    if (v10) {
      break;
    }
    unint64_t v43 = 0xE100000000000000;
    uint64_t v44 = 12670;
    unint64_t v45 = 0xE200000000000000;
    uint64_t v42 = 47;
    OUTLINED_FUNCTION_18_5();
    uint64_t v36 = v26;
    uint64_t v37 = (void *)v21;
    OUTLINED_FUNCTION_17_6();
    uint64_t v27 = sub_191EE8EF0();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v44 = v27;
    unint64_t v45 = v29;
    unint64_t v41 = 0xE100000000000000;
    uint64_t v42 = 12414;
    unint64_t v43 = 0xE200000000000000;
    uint64_t v40 = 126;
    OUTLINED_FUNCTION_18_5();
    uint64_t v30 = OUTLINED_FUNCTION_1_18();
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v52 = v13;
    unint64_t v33 = *(void *)(v13 + 16);
    if (v33 >= *(void *)(v13 + 24) >> 1)
    {
      sub_191DD374C();
      uint64_t v13 = v52;
    }
    *(void *)(v13 + 16) = v33 + 1;
    uint64_t v34 = v13 + 16 * v33;
    *(void *)(v34 + 32) = v30;
    *(void *)(v34 + 40) = v32;
    v22 += 4;
    unint64_t v21 = v38;
    uint64_t v20 = v39 - 1;
    if (v39 == 1)
    {
      uint64_t v10 = swift_bridgeObjectRelease();
      uint64_t v4 = v37;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  result.value.components._rawValue = (void *)v10;
  result.is_nil = v11;
  return result;
}

uint64_t JSONPointer.Component.init<A>(jsonEscaped:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v21 = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, a1, a2);
  uint64_t v26 = 47;
  unint64_t v27 = 0xE100000000000000;
  unint64_t v10 = sub_191D63A18();
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  char v12 = sub_191EE8F30();
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = v13(v9, a2);
  if (v12)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = 12670;
    unint64_t v27 = 0xE200000000000000;
    uint64_t v24 = 47;
    unint64_t v25 = 0xE100000000000000;
    OUTLINED_FUNCTION_18_5();
    uint64_t v20 = v11;
    unint64_t v21 = a3;
    uint64_t v26 = sub_191EE8EF0();
    unint64_t v27 = v15;
    uint64_t v24 = 12414;
    unint64_t v25 = 0xE200000000000000;
    uint64_t v22 = 126;
    unint64_t v23 = 0xE100000000000000;
    OUTLINED_FUNCTION_18_5();
    uint64_t v24 = v11;
    unint64_t v25 = v10;
    OUTLINED_FUNCTION_17_6();
    uint64_t v16 = sub_191EE8EF0();
    uint64_t v18 = v17;
    v13(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = v21;
    *unint64_t v21 = v16;
    v19[1] = v18;
  }
  return result;
}

unint64_t sub_191DE1220(Swift::String *a1)
{
  return (unint64_t)JSONPointer.init(rawValue:)(*a1);
}

uint64_t sub_191DE122C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = JSONPointer.description.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_191DE1254()
{
  return sub_191EE84F0();
}

uint64_t sub_191DE12B4()
{
  return sub_191EE84B0();
}

uint64_t static JSONPointer.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a1 + 16);
  uint64_t v5 = 47;
  if (!v4) {
    uint64_t v5 = 0;
  }
  unint64_t v6 = 0xE000000000000000;
  if (v4) {
    unint64_t v6 = 0xE100000000000000;
  }
  uint64_t v30 = v5;
  unint64_t v32 = v6;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v28 = *a2;
  if (v4)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D6382C();
    sub_191D63A18();
    uint64_t v8 = v2 + 40;
    do
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      OUTLINED_FUNCTION_0_17();
      OUTLINED_FUNCTION_19_5();
      uint64_t v9 = OUTLINED_FUNCTION_0_17();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v29 + 16);
      if (v12 >= *(void *)(v29 + 24) >> 1) {
        sub_191D6382C();
      }
      v8 += 16;
      *(void *)(v29 + 16) = v12 + 1;
      uint64_t v13 = v29 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v11;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v3 = v28;
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  sub_191D78A5C();
  sub_191D788B0();
  OUTLINED_FUNCTION_12_7();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  swift_bridgeObjectRelease();
  uint64_t v15 = v30;
  unint64_t v14 = v32;
  uint64_t v16 = *(void *)(v3 + 16);
  if (v16)
  {
    uint64_t v26 = v30;
    unint64_t v27 = v32;
    uint64_t v31 = 47;
    unint64_t v33 = 0xE100000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D6382C();
    sub_191D63A18();
    uint64_t v17 = v3 + 40;
    do
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      OUTLINED_FUNCTION_0_17();
      OUTLINED_FUNCTION_19_5();
      uint64_t v18 = OUTLINED_FUNCTION_0_17();
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v21 = *(void *)(v7 + 16);
      if (v21 >= *(void *)(v7 + 24) >> 1) {
        sub_191D6382C();
      }
      v17 += 16;
      *(void *)(v7 + 16) = v21 + 1;
      uint64_t v22 = v7 + 16 * v21;
      *(void *)(v22 + 32) = v18;
      *(void *)(v22 + 40) = v20;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    unint64_t v14 = v27;
    uint64_t v15 = v26;
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v33 = 0xE000000000000000;
  }
  OUTLINED_FUNCTION_12_7();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  swift_bridgeObjectRelease();
  if (v15 == v31 && v14 == v33) {
    char v24 = 1;
  }
  else {
    char v24 = sub_191EE9770();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24 & 1;
}

uint64_t JSONPointer.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D6382C();
    sub_191D63A18();
    uint64_t v3 = v1 + 40;
    do
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      OUTLINED_FUNCTION_1_18();
      uint64_t v4 = OUTLINED_FUNCTION_1_18();
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v10 + 16);
      if (v7 >= *(void *)(v10 + 24) >> 1) {
        sub_191D6382C();
      }
      v3 += 16;
      *(void *)(v10 + 16) = v7 + 1;
      uint64_t v8 = v10 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_191D78A5C();
  sub_191D788B0();
  sub_191EE7FE0();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  swift_bridgeObjectRelease();
  sub_191EE8200();
  return swift_bridgeObjectRelease();
}

uint64_t sub_191DE18A0()
{
  return sub_191EE3378(*v0);
}

uint64_t sub_191DE18AC(uint64_t a1)
{
  return sub_191EE37F0(a1, *v1);
}

uint64_t JSONPointer.Component.unescapedValue.getter()
{
  uint64_t v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t JSONPointer.Component.unescapedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSONPointer.Component.unescapedValue.modify())(void)
{
  return nullsub_1;
}

TeaFoundation::JSONPointer::Component __swiftcall JSONPointer.Component.init(unescaped:)(TeaFoundation::JSONPointer::Component unescaped)
{
  *uint64_t v1 = unescaped;
  return unescaped;
}

uint64_t static JSONPointer.Component.index(_:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = sub_191EE9620();
    *a2 = result;
    a2[1] = v3;
  }
  return result;
}

uint64_t JSONPointer.Component.index.getter()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = HIBYTE(v1) & 0xF;
  uint64_t v4 = *v0 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(v1) & 0xF;
  }
  else {
    uint64_t v5 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_191EE8290();
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    while ((sub_191EE9770() & 1) == 0)
    {
      BOOL v10 = v8 == 48 && v9 == 0xE100000000000000;
      if (v10) {
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_16_6();
      if (sub_191EE9770())
      {
        swift_bridgeObjectRelease();
LABEL_47:
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
      if (v8 == 57 && v9 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_16:
        char v12 = sub_191EE9770();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_47;
        }
      }
      uint64_t v8 = sub_191EE8290();
      uint64_t v9 = v13;
      if (!v13) {
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_91;
  }
LABEL_20:
  LOBYTE(v14) = v1;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  BOOL v16 = v2 == 48 && v1 == 0xE100000000000000;
  if (v16
    || (OUTLINED_FUNCTION_15_7(), uint64_t result = sub_191EE9770(), (result & 1) != 0)
    || (_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0(),
        uint64_t v17 = OUTLINED_FUNCTION_15_7(),
        uint64_t v19 = sub_191DE0800(v17, v18),
        uint64_t v14 = v20,
        uint64_t result = swift_bridgeObjectRelease(),
        !v14))
  {
    if (v5) {
      goto LABEL_34;
    }
    return 0;
  }
  if (v19 == 48 && v14 == 0xE100000000000000)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    return 0;
  }
  OUTLINED_FUNCTION_16_6();
  char v22 = sub_191EE9770();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v22 & 1) == 0 && v5)
  {
LABEL_34:
    if ((v1 & 0x1000000000000000) != 0)
    {
LABEL_91:
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      OUTLINED_FUNCTION_15_7();
      uint64_t v24 = sub_191D960B4();
      LOBYTE(v14) = v37;
      swift_bridgeObjectRelease();
LABEL_79:
      if (v14) {
        return 0;
      }
      else {
        return v24;
      }
    }
    if ((v1 & 0x2000000000000000) == 0)
    {
      if ((v2 & 0x1000000000000000) != 0)
      {
        unint64_t v23 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        OUTLINED_FUNCTION_15_7();
        unint64_t v23 = (unsigned __int8 *)sub_191EE9270();
        uint64_t v4 = v38;
      }
      uint64_t v24 = (uint64_t)sub_191D95EB4(v23, v4);
      LOBYTE(v14) = v25 & 1;
      goto LABEL_79;
    }
    if (v2 == 43)
    {
      if (!v3) {
        goto LABEL_94;
      }
      if (v3 == 1) {
        goto LABEL_65;
      }
      OUTLINED_FUNCTION_4_13();
      if (!v10 & v27) {
        goto LABEL_65;
      }
      uint64_t v24 = v28;
      if (v3 != 2)
      {
        OUTLINED_FUNCTION_4_13();
        if (!v10 & v27) {
          goto LABEL_65;
        }
        uint64_t v24 = 10 * v24 + v29;
        if (v3 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_18_0();
            if (!v10 & v27) {
              goto LABEL_65;
            }
            OUTLINED_FUNCTION_5_13();
            if (!v10) {
              goto LABEL_65;
            }
            uint64_t v24 = v31 + v30;
            if (__OFADD__(v31, v30)) {
              goto LABEL_65;
            }
            OUTLINED_FUNCTION_9_6();
            if (v10) {
              goto LABEL_79;
            }
          }
        }
      }
    }
    else
    {
      if (v2 == 45)
      {
        if (v3)
        {
          if (v3 != 1)
          {
            OUTLINED_FUNCTION_4_13();
            if (!(!v10 & v27))
            {
              if (v3 == 2)
              {
                LOBYTE(v14) = 0;
                uint64_t v24 = -(uint64_t)v26;
                goto LABEL_79;
              }
              if ((BYTE2(v2) - 48) <= 9u)
              {
                uint64_t v24 = -10 * v26 - (BYTE2(v2) - 48);
                if (v3 == 3) {
                  goto LABEL_78;
                }
                while (1)
                {
                  OUTLINED_FUNCTION_18_0();
                  if (!v10 & v27) {
                    break;
                  }
                  OUTLINED_FUNCTION_5_13();
                  if (!v10) {
                    break;
                  }
                  uint64_t v24 = v36 - v35;
                  if (__OFSUB__(v36, v35)) {
                    break;
                  }
                  OUTLINED_FUNCTION_9_6();
                  if (v10) {
                    goto LABEL_79;
                  }
                }
              }
            }
          }
LABEL_65:
          uint64_t v24 = 0;
          LOBYTE(v14) = 1;
          goto LABEL_79;
        }
        __break(1u);
LABEL_94:
        __break(1u);
        return result;
      }
      if (!v3 || (v2 - 48) > 9u) {
        goto LABEL_65;
      }
      uint64_t v24 = (v2 - 48);
      if (v3 != 1)
      {
        OUTLINED_FUNCTION_4_13();
        if (!v10 & v27) {
          goto LABEL_65;
        }
        uint64_t v24 = 10 * (v2 - 48) + v32;
        if (v3 != 2)
        {
          while (1)
          {
            OUTLINED_FUNCTION_18_0();
            if (!v10 & v27) {
              goto LABEL_65;
            }
            OUTLINED_FUNCTION_5_13();
            if (!v10) {
              goto LABEL_65;
            }
            uint64_t v24 = v34 + v33;
            if (__OFADD__(v34, v33)) {
              goto LABEL_65;
            }
            OUTLINED_FUNCTION_9_6();
            if (v10) {
              goto LABEL_79;
            }
          }
        }
      }
    }
LABEL_78:
    LOBYTE(v14) = 0;
    goto LABEL_79;
  }
  return result;
}

uint64_t static JSONPointer.Component.name(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t static JSONPointer.Component.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_191EE9770();
  }
}

uint64_t _s13TeaFoundation11JSONPointerV8rawValueSSvg_0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t v3 = 47;
  if (!v2) {
    uint64_t v3 = 0;
  }
  uint64_t v12 = v3;
  if (v2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D6382C();
    sub_191D63A18();
    uint64_t v4 = v1 + 40;
    do
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      OUTLINED_FUNCTION_2_18();
      uint64_t v5 = OUTLINED_FUNCTION_2_18();
      uint64_t v7 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v8 = *(void *)(v11 + 16);
      if (v8 >= *(void *)(v11 + 24) >> 1) {
        sub_191D6382C();
      }
      v4 += 16;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_191D78A5C();
  sub_191D788B0();
  sub_191EE7FE0();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t JSONPointer.debugDescription.getter()
{
  sub_191EE9190();
  swift_bridgeObjectRelease();
  uint64_t v0 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  MEMORY[0x192FE76F0](v0, &type metadata for JSONPointer.Component);
  sub_191EE8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  return 0xD000000000000018;
}

unint64_t sub_191DE2040()
{
  unint64_t result = qword_1E92F3848;
  if (!qword_1E92F3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3848);
  }
  return result;
}

unint64_t sub_191DE2090()
{
  unint64_t result = qword_1E92F3850;
  if (!qword_1E92F3850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3850);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONPointer()
{
  return &type metadata for JSONPointer;
}

ValueMetadata *type metadata accessor for JSONPointer.Component()
{
  return &type metadata for JSONPointer.Component;
}

unint64_t sub_191DE20FC()
{
  unint64_t result = qword_1E92F3858;
  if (!qword_1E92F3858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3858);
  }
  return result;
}

uint64_t sub_191DE2148(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_191DE21C8@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v5 = *(void *)(a3 + 56);
  uint64_t v6 = v5 + *(void *)(*(void *)(type metadata accessor for AuthToken() - 8) + 72) * result;

  return sub_191DE2270(v6, a4);
}

uint64_t sub_191DE2270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191DE22D4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191DE230C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t Promise.timeout(after:on:message:)()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191DE2414();
  OUTLINED_FUNCTION_2_19();
  uint64_t v3 = sub_191EE8560();
  uint64_t v5 = v4;
  *uint64_t v4 = v1;
  swift_retain();
  v5[1] = static Promise.timeout<A>(after:on:message:)();
  sub_191D5E704();
  static Promise.race(_:)(v3);
  OUTLINED_FUNCTION_3_14();
  return v2;
}

void sub_191DE2414()
{
  if (!qword_1EB50E530)
  {
    unint64_t v0 = sub_191EE9630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50E530);
    }
  }
}

uint64_t static Promise.timeout<A>(after:on:message:)(uint64_t a1, void *a2)
{
  id v2 = sub_191DE2500(a2);
  type metadata accessor for Promise();
  uint64_t v3 = Promise.__allocating_init(resolver:)((void (*)(void))sub_191DE2EDC);

  return v3;
}

id sub_191DE2500(void *a1)
{
  uint64_t v14 = a1;
  uint64_t v1 = sub_191EE7C10();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB50EC90 != -1) {
    swift_once();
  }
  uint64_t v7 = v14;
  if ((void *)qword_1EB50EC78 == v14) {
    goto LABEL_12;
  }
  if (qword_1EB50E548 != -1)
  {
    swift_once();
    uint64_t v7 = v14;
  }
  if ((void *)qword_1EB50E4A8 == v7)
  {
LABEL_12:
    sub_191D74B24(0, (unint64_t *)&qword_1EB50EE70);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4FBCB48], v1);
    uint64_t v10 = sub_191EE8D70();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
    return (id)v10;
  }
  sub_191D74B24(0, (unint64_t *)&qword_1EB50E0D0);
  if (qword_1EB50E490 != -1) {
    swift_once();
  }
  if (sub_191EE8DB0())
  {
    unsigned int v8 = objc_msgSend(self, sel_isMainThread);
    sub_191D74B24(0, (unint64_t *)&qword_1EB50EE70);
    if (v8) {
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4FBCB28];
    }
    else {
      uint64_t v9 = (unsigned int *)MEMORY[0x1E4FBCB48];
    }
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *v9, v1);
    uint64_t v10 = sub_191EE8D70();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
    return (id)v10;
  }
  uint64_t v11 = v14;

  return v11;
}

uint64_t sub_191DE27A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v12 = sub_191EE7C00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_191EE7C60();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a7;
  v20[5] = a8;
  aBlock[4] = sub_191DE2F4C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191D70378;
  aBlock[3] = &block_descriptor_3;
  unint64_t v21 = _Block_copy(aBlock);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  sub_191EE7C30();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_191D85870((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  sub_191DE2F58();
  sub_191D85870((unint64_t *)&qword_1EB50E628, (void (*)(uint64_t))sub_191DE2F58);
  sub_191EE9060();
  MEMORY[0x192FE7EA0](v24, v19, v15, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return swift_release();
}

void sub_191DE2A78(void (*a1)(void *), uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a4) {
    unint64_t v5 = a3;
  }
  else {
    unint64_t v5 = 0xD000000000000011;
  }
  if (a4) {
    unint64_t v6 = a4;
  }
  else {
    unint64_t v6 = 0x8000000191EF6930;
  }
  sub_191DB60C4();
  uint64_t v7 = (void *)swift_allocError();
  *(void *)uint64_t v8 = v5;
  *(void *)(v8 + 8) = v6;
  *(unsigned char *)(v8 + 16) = 0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  a1(v7);
}

uint64_t static Promise.timeout<A>(after:on:message:)()
{
  OUTLINED_FUNCTION_1_19();
  uint64_t v2 = sub_191EE7C90();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  sub_191EE7C80();
  MEMORY[0x192FE6EC0](v8, v1);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v8, v2);
  uint64_t v12 = static Promise.timeout<A>(after:on:message:)((uint64_t)v10, v0);
  v11(v10, v2);
  return v12;
}

uint64_t Promise.timeout(after:on:message:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_191DE2414();
  OUTLINED_FUNCTION_2_19();
  uint64_t v7 = sub_191EE8560();
  uint64_t v9 = v8;
  *uint64_t v8 = v3;
  swift_retain();
  v9[1] = static Promise.timeout<A>(after:on:message:)(a1, a2);
  sub_191D5E704();
  static Promise.race(_:)(v7);
  OUTLINED_FUNCTION_3_14();
  return v6;
}

uint64_t static Promise.timeout<A>(after:on:promise:message:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Promise();
  sub_191DE2414();
  OUTLINED_FUNCTION_2_19();
  uint64_t v7 = sub_191EE8560();
  uint64_t v9 = v8;
  *uint64_t v8 = a3;
  swift_retain();
  v9[1] = static Promise.timeout<A>(after:on:message:)(a1, a2);
  sub_191D5E704();
  static Promise.race(_:)(v7);
  OUTLINED_FUNCTION_3_14();
  return v6;
}

uint64_t static Promise.timeout<A>(after:on:promise:message:)()
{
  OUTLINED_FUNCTION_1_19();
  uint64_t v1 = type metadata accessor for Promise();
  sub_191DE2414();
  OUTLINED_FUNCTION_2_19();
  uint64_t v2 = sub_191EE8560();
  uint64_t v4 = v3;
  *uint64_t v3 = v0;
  swift_retain();
  v4[1] = static Promise.timeout<A>(after:on:message:)();
  sub_191D5E704();
  static Promise.race(_:)(v2);
  OUTLINED_FUNCTION_3_14();
  return v1;
}

uint64_t sub_191DE2EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191DE27A0(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7]);
}

uint64_t sub_191DE2F0C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_191DE2F4C()
{
  sub_191DE2A78(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_191DE2F58()
{
  if (!qword_1EB50E620)
  {
    sub_191EE7C00();
    unint64_t v0 = sub_191EE86B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50E620);
    }
  }
}

uint64_t ReferenceDecodingContainer.decode()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v35 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v35 - v11;
  char v43 = 0;
  sub_191DE3224();
  sub_191DE3280();
  uint64_t result = OUTLINED_FUNCTION_2_20();
  if (!v2)
  {
    uint64_t v36 = v7;
    char v37 = v10;
    uint64_t v38 = v4;
    uint64_t v15 = v39;
    uint64_t v14 = (uint64_t)v40;
    uint64_t v16 = v41;
    char v43 = 1;
    sub_191DE32CC();
    OUTLINED_FUNCTION_2_20();
    uint64_t v17 = (uint64_t)v40;
    uint64_t v18 = v41;
    if (v42)
    {
      uint64_t v35 = v41;
      uint64_t v40 = (char *)v14;
      uint64_t v41 = v16;
      uint64_t v19 = v14;
      uint64_t v20 = v3;
      uint64_t v21 = v17;
      sub_191DE6174((uint64_t *)&v40, v17, v20, (uint64_t)v36);
      uint64_t v22 = (uint64_t)v37;
      uint64_t v26 = OUTLINED_FUNCTION_1_20();
      v27(v26);
      uint64_t v40 = (char *)v19;
      uint64_t v41 = v16;
      uint64_t v28 = v15;
      uint64_t v29 = v22;
      uint64_t v30 = v21;
      uint64_t v31 = v35;
      char v32 = 1;
    }
    else
    {
      uint64_t v40 = (char *)v14;
      uint64_t v41 = v16;
      uint64_t v36 = (char *)v14;
      uint64_t v20 = v3;
      uint64_t v23 = v17;
      uint64_t v24 = v18;
      sub_191DE5F44((uint64_t *)&v40, v17, v18, v20, (uint64_t)v12);
      uint64_t v25 = (uint64_t)v37;
      uint64_t v33 = OUTLINED_FUNCTION_1_20();
      v34(v33);
      uint64_t v40 = v36;
      uint64_t v41 = v16;
      uint64_t v28 = v15;
      uint64_t v29 = v25;
      uint64_t v30 = v23;
      uint64_t v31 = v24;
      char v32 = 0;
    }
    return sub_191DE339C(v29, (uint64_t *)&v40, v30, v31, v32, v20, v28);
  }
  return result;
}

void sub_191DE3224()
{
  if (!qword_1EB508318)
  {
    sub_191DD640C();
    unint64_t v0 = sub_191EE9590();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508318);
    }
  }
}

unint64_t sub_191DE3280()
{
  unint64_t result = qword_1EB508100;
  if (!qword_1EB508100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508100);
  }
  return result;
}

unint64_t sub_191DE32CC()
{
  unint64_t result = qword_1EB508150;
  if (!qword_1EB508150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508150);
  }
  return result;
}

uint64_t sub_191DE3318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_191DE3224();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for ReferenceDecodingContainer();
  *(void *)(a3 + *(int *)(result + 28)) = a2;
  return result;
}

uint64_t sub_191DE339C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7, a1, a6);
  uint64_t result = type metadata accessor for Reference();
  uint64_t v14 = (void *)(a7 + *(int *)(result + 32));
  *uint64_t v14 = v11;
  v14[1] = v12;
  uint64_t v15 = a7 + *(int *)(result + 28);
  *(void *)uint64_t v15 = a3;
  *(void *)(v15 + 8) = a4;
  *(unsigned char *)(v15 + 16) = a5 & 1;
  return result;
}

void sub_191DE344C()
{
  sub_191DE3224();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_191DE34E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_191DE3224();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_191DE35B0(uint64_t a1)
{
  sub_191DE3224();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_191DE3624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DE3224();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_191DE36A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DE3224();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191DE3730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DE3224();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_191DE37AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DE3224();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_191DE3830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191DE3844);
}

uint64_t sub_191DE3844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DE3224();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_191DE38D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191DE38E4);
}

void sub_191DE38E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_191DE3224();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for ReferenceDecodingContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t URLHandlerPattern.scheme.getter()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t URLHandlerPattern.host.getter()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t URLHandlerPattern.path.getter()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t URLHandlerPattern.fragment.getter()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t URLHandlerPattern.params.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t URLHandlerPattern.conditions.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t URLHandlerPattern.init(scheme:host:path:fragment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  sub_191DE3AE0();
  uint64_t result = sub_191EE7E50();
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = 0;
  a9[9] = result;
  return result;
}

void sub_191DE3AE0()
{
  if (!qword_1EB50C030)
  {
    unint64_t v0 = sub_191EE86B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50C030);
    }
  }
}

uint64_t sub_191DE3B34@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t destroy for URLHandlerPattern()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for URLHandlerPattern(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

void *assignWithCopy for URLHandlerPattern(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for URLHandlerPattern(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLHandlerPattern(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLHandlerPattern(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for URLHandlerPattern()
{
}

uint64_t sub_191DE3E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 >= 3)
  {
    if (a5 > 1u) {
      return result;
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }

  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t destroy for URLHandlerPattern.Param(uint64_t a1)
{
  return sub_191DE3EC0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_191DE3EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 >= 3)
  {
    if (a5 > 1u) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for URLHandlerPattern.Param(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_191DE3E44(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for URLHandlerPattern.Param(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_191DE3E44(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_191DE3EC0(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for URLHandlerPattern.Param(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_191DE3EC0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for URLHandlerPattern.Param(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLHandlerPattern.Param(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191DE40E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_191DE40F0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

void type metadata accessor for URLHandlerPattern.Param()
{
}

uint64_t sub_191DE4108(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t destroy for URLHandlerPattern.Condition(uint64_t a1)
{
  return sub_191DE4128(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_191DE4128(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13TeaFoundation17URLHandlerPatternV9ConditionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_191DE4108(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for URLHandlerPattern.Condition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_191DE4108(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_191DE4128(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for URLHandlerPattern.Condition(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_191DE4128(v4, v5, v6);
  return a1;
}

void type metadata accessor for URLHandlerPattern.Condition()
{
}

uint64_t AuthToken.fetchDate.getter@<X0>(uint64_t a1@<X8>)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_26();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);

  return v5(a1, v1, v3);
}

uint64_t AuthToken.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthToken() + 20);
  sub_191EE73F0();
  OUTLINED_FUNCTION_26();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t type metadata accessor for AuthToken()
{
  uint64_t result = qword_1EB50CA70;
  if (!qword_1EB50CA70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AuthToken.token.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AuthToken() + 24));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

double AuthToken.expirationUtc.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for AuthToken() + 28));
}

uint64_t AuthToken.init(fetchDate:url:token:expirationUtc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(a5, a1);
  uint64_t v13 = (int *)type metadata accessor for AuthToken();
  uint64_t v14 = a5 + v13[5];
  sub_191EE73F0();
  OUTLINED_FUNCTION_26();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v14, a2);
  uint64_t v17 = (void *)(a5 + v13[6]);
  *uint64_t v17 = a3;
  v17[1] = a4;
  *(double *)(a5 + v13[7]) = a6;
  return result;
}

BOOL AuthToken.isExpired.getter()
{
  uint64_t v1 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  double v8 = *(double *)(v0 + *(int *)(type metadata accessor for AuthToken() + 28));
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  sub_191EE75F0();
  double v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v8 <= v10;
}

uint64_t sub_191DE4544(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446863746566 && a2 == 0xE900000000000065;
  if (v2 || (sub_191EE9770() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7107189 && a2 == 0xE300000000000000;
    if (v6 || (sub_191EE9770() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
      if (v7 || (sub_191EE9770() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6974617269707865 && a2 == 0xED00006374556E6FLL)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_191EE9770();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_191DE470C()
{
  return 4;
}

uint64_t sub_191DE4714(char a1)
{
  uint64_t result = 0x7461446863746566;
  switch(a1)
  {
    case 1:
      uint64_t result = 7107189;
      break;
    case 2:
      uint64_t result = 0x6E656B6F74;
      break;
    case 3:
      uint64_t result = 0x6974617269707865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191DE47AC()
{
  return sub_191DE4714(*v0);
}

uint64_t sub_191DE47B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191DE4544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191DE47DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191DE470C();
  *a1 = result;
  return result;
}

uint64_t sub_191DE4804(uint64_t a1)
{
  unint64_t v2 = sub_191DE4AC8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191DE4840(uint64_t a1)
{
  unint64_t v2 = sub_191DE4AC8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AuthToken.encode(to:)(void *a1)
{
  sub_191DE4F78(0, &qword_1EB508B50, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  char v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191DE4AC8();
  sub_191EE9B10();
  v11[15] = 0;
  sub_191EE7640();
  sub_191DE4FDC(&qword_1EB508718, MEMORY[0x1E4F27928]);
  sub_191EE95E0();
  if (!v1)
  {
    type metadata accessor for AuthToken();
    v11[14] = 1;
    sub_191EE73F0();
    sub_191DE4FDC((unint64_t *)&qword_1EB5086F8, MEMORY[0x1E4F276F0]);
    sub_191EE95E0();
    v11[13] = 2;
    sub_191EE95B0();
    v11[12] = 3;
    sub_191EE95C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_191DE4AC8()
{
  unint64_t result = qword_1EB508A60;
  if (!qword_1EB508A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508A60);
  }
  return result;
}

uint64_t AuthToken.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v40 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v39 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2();
  uint64_t v42 = v12 - v11;
  sub_191DE4F78(0, &qword_1EB508B40, MEMORY[0x1E4FBBDC0]);
  uint64_t v41 = v13;
  OUTLINED_FUNCTION_0();
  uint64_t v38 = v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = (int *)type metadata accessor for AuthToken();
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_2();
  uint64_t v22 = v21 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191DE4AC8();
  char v43 = v17;
  uint64_t v23 = (uint64_t)v44;
  sub_191EE9AD0();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v44 = a1;
  uint64_t v24 = v39;
  uint64_t v25 = v40;
  char v48 = 0;
  sub_191DE4FDC(qword_1EB508720, MEMORY[0x1E4F27928]);
  sub_191EE9570();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v24 + 32);
  uint64_t v27 = v42;
  uint64_t v42 = v8;
  v26(v22, v27);
  char v47 = 1;
  sub_191DE4FDC((unint64_t *)&qword_1EB508710, MEMORY[0x1E4F276F0]);
  sub_191EE9570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v22 + v18[5], v7, v25);
  char v46 = 2;
  uint64_t v28 = sub_191EE9540();
  uint64_t v29 = (uint64_t *)(v22 + v18[6]);
  uint64_t *v29 = v28;
  v29[1] = v30;
  char v45 = 3;
  sub_191EE9550();
  uint64_t v32 = v31;
  uint64_t v33 = OUTLINED_FUNCTION_3_15();
  v34(v33);
  *(void *)(v22 + v18[7]) = v32;
  sub_191DE2270(v22, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_191DE5024(v22);
}

void sub_191DE4F78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_191DE4AC8();
    unint64_t v7 = a3(a1, &type metadata for AuthToken.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_191DE4FDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191DE5024(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthToken();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191DE5080@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AuthToken.init(from:)(a1, a2);
}

uint64_t sub_191DE5098(void *a1)
{
  return AuthToken.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for AuthToken(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191EE7640();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_191EE73F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t destroy for AuthToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for AuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for AuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for AuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthToken(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191DE5648);
}

uint64_t sub_191DE5648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  sub_191EE73F0();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthToken(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191DE5714);
}

void sub_191DE5714(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_191EE73F0();
    OUTLINED_FUNCTION_0_0();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t sub_191DE57C8()
{
  uint64_t result = sub_191EE7640();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191EE73F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Scope(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AuthToken.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191DE59FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthToken.CodingKeys()
{
  return &type metadata for AuthToken.CodingKeys;
}

unint64_t sub_191DE5A38()
{
  unint64_t result = qword_1E92F3860;
  if (!qword_1E92F3860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3860);
  }
  return result;
}

unint64_t sub_191DE5A88()
{
  unint64_t result = qword_1EB508A70;
  if (!qword_1EB508A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508A70);
  }
  return result;
}

unint64_t sub_191DE5AD8()
{
  unint64_t result = qword_1EB508A68;
  if (!qword_1EB508A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508A68);
  }
  return result;
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidBecomeActive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidBecomeActive(with:sourceApplication:sceneID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneWillResignActive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneWillResignActive(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneWillEnterForeground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidEnterBackground(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneWillConnectToSession(withOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidDisconnect()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_191DE5BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0() + 40;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  do
  {
    if (!*(void *)(a2 + 16))
    {
      long long v12 = 0u;
      long long v13 = 0u;
LABEL_14:
      sub_191D9EB34((uint64_t)&v12);
      goto LABEL_15;
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    unint64_t v6 = sub_191D636F4();
    if (v7)
    {
      sub_191D6D834(*(void *)(a2 + 56) + 32 * v6, (uint64_t)&v12);
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v13 + 1)) {
      goto LABEL_14;
    }
    sub_191D6DA60(&v12, v14);
    sub_191D6DA60(v14, &v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_191DCBEB0();
      uint64_t v5 = v9;
    }
    unint64_t v8 = *(void *)(v5 + 16);
    if (v8 >= *(void *)(v5 + 24) >> 1)
    {
      sub_191DCBEB0();
      uint64_t v5 = v10;
    }
    *(void *)(v5 + 16) = v8 + 1;
    sub_191D6DA60(&v12, (_OWORD *)(v5 + 32 * v8 + 32));
LABEL_15:
    v4 += 16;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_191DE5D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = v2;
  uint64_t v5 = (uint64_t *)(_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0() + 40);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v8 = *(v5 - 1);
    uint64_t v7 = *v5;
    if (*(void *)(a2 + 16))
    {
      swift_bridgeObjectRetain_n();
      unint64_t v9 = sub_191D636F4();
      if (v10)
      {
        sub_191D6D834(*(void *)(a2 + 56) + 32 * v9, (uint64_t)&v16);
      }
      else
      {
        long long v16 = 0u;
        long long v17 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v17 + 1))
      {
        sub_191D9EB34((uint64_t)&v16);
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    sub_191D9EB34((uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_191D78788();
      uint64_t v6 = v13;
    }
    unint64_t v11 = *(void *)(v6 + 16);
    if (v11 >= *(void *)(v6 + 24) >> 1)
    {
      sub_191D78788();
      uint64_t v6 = v14;
    }
    *(void *)(v6 + 16) = v11 + 1;
    uint64_t v12 = v6 + 16 * v11;
    *(void *)(v12 + 32) = v8;
    *(void *)(v12 + 40) = v7;
LABEL_15:
    v5 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t ReferenceDecodingPool.__allocating_init(references:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_31_3();
  ReferenceDecodingPool.init(references:)(a1);
  return v2;
}

uint64_t sub_191DE5F44@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v23 = a5;
  sub_191EE8DF0();
  OUTLINED_FUNCTION_0();
  uint64_t v21 = v11;
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  swift_beginAccess();
  uint64_t v16 = *(void *)(v5 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v17 = sub_191D7E3B8(v15, v14, v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_endAccess();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191DAA034(v17, &v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25)
    {
      sub_191D6DA60(&v24, v26);
      sub_191D6DA60(v26, &v24);
      if (swift_dynamicCast())
      {
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, a4);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a4 - 8) + 32))(v23, v13, a4);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, a4);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v22);
    }
    else
    {
      sub_191D9EB34((uint64_t)&v24);
    }
  }
  else
  {
    swift_endAccess();
  }
  sub_191DD8564();
  swift_allocError();
  *(void *)uint64_t v19 = v15;
  *(void *)(v19 + 8) = v14;
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  *(unsigned char *)(v19 + 32) = 0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return swift_willThrow();
}

uint64_t sub_191DE6174@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v29 = a4;
  sub_191EE8DF0();
  OUTLINED_FUNCTION_0();
  uint64_t v26 = v9;
  uint64_t v27 = v8;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v16 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v17 = *(void *)(a2 + 16);
  if (!v17)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_191D8C928(0, qword_1EB50D6D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB320]);
    if (swift_dynamicCast())
    {
      OUTLINED_FUNCTION_35_2((uint64_t)v14, 0);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v29, v14, a3);
    }
    OUTLINED_FUNCTION_35_2((uint64_t)v14, 1);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
  }
  swift_beginAccess();
  uint64_t v19 = *(void *)(v4 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v20 = sub_191D7E3B8(v16, v15, v19);
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_endAccess();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v21 = sub_191DE5BEC(a2, v20);
    if (*(void *)(v21 + 16) == v17)
    {
      uint64_t v28 = v21;
      sub_191D8C928(0, qword_1EB50D6D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB320]);
      if (swift_dynamicCast())
      {
        OUTLINED_FUNCTION_35_2((uint64_t)v12, 0);
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v29, v12, a3);
      }
      OUTLINED_FUNCTION_35_2((uint64_t)v12, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v23 = sub_191DE5D78(a2, v20);
    swift_bridgeObjectRelease();
    sub_191DD8564();
    swift_allocError();
    *(void *)uint64_t v24 = v16;
    *(void *)(v24 + 8) = v15;
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = 0;
    *(unsigned char *)(v24 + 32) = 1;
  }
  else
  {
    swift_endAccess();
    sub_191DD8564();
    swift_allocError();
    *(void *)uint64_t v22 = v16;
    *(void *)(v22 + 8) = v15;
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = 0;
    *(unsigned char *)(v22 + 32) = 1;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return swift_willThrow();
}

uint64_t ReferenceDecodingPool.__allocating_init()()
{
  uint64_t result = OUTLINED_FUNCTION_31_3();
  *(void *)(result + 16) = MEMORY[0x1E4FBC868];
  return result;
}

uint64_t ReferenceDecodingPool.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC868];
  return result;
}

uint64_t ReferenceDecodingPool.__allocating_init(references:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_31_3();
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC868];
  ReferenceDecodingPool.insert(contentsOf:)(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ReferenceDecodingPool.init(references:)(Swift::OpaquePointer a1)
{
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC868];
  ReferenceDecodingPool.insert(contentsOf:)(a1);
  swift_bridgeObjectRelease();
  return v1;
}

Swift::Void __swiftcall ReferenceDecodingPool.insert(contentsOf:)(Swift::OpaquePointer contentsOf)
{
  uint64_t v1 = *((void *)contentsOf._rawValue + 2);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)((char *)contentsOf._rawValue + 32);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    do
    {
      ReferenceDecodingPool.insert(_:)(v2);
      v2 += 9;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
}

uint64_t ReferenceDecodingPool.init(references:)(uint64_t a1)
{
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    do
    {
      v3 += 8;
      uint64_t v4 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      ReferenceDecodingPool.insert(contentsOf:)((Swift::OpaquePointer)v4);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ReferenceDecodingPool.insert<A>(_:)(uint64_t a1, unint64_t a2)
{
  type metadata accessor for Reference();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - v5;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v9 - v5, a1);
  AnyReference.init<A>(reference:)((uint64_t)v6, a2, v10);
  ReferenceDecodingPool.insert(_:)((uint64_t *)v10);
  return sub_191DE6ACC((uint64_t)v10);
}

uint64_t ReferenceDecodingPool.insert(_:)(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v6 = sub_191D7E3B8(v3, v4, v5);
  swift_endAccess();
  swift_bridgeObjectRelease();
  unint64_t v7 = MEMORY[0x1E4FBC868];
  if (v6) {
    unint64_t v7 = v6;
  }
  unint64_t v40 = v7;
  uint64_t v9 = v2[2];
  uint64_t v8 = v2[3];
  if ((v2[4] & 1) == 0)
  {
    sub_191D6D834((uint64_t)(v2 + 5), (uint64_t)v39);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191DD2F40((uint64_t)v39, v9, v8);
LABEL_23:
    uint64_t v31 = *v2;
    uint64_t v32 = v2[1];
    uint64_t v33 = v40;
    swift_beginAccess();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191DA5278(v33, v31, v32);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  sub_191D6D834((uint64_t)(v2 + 5), (uint64_t)v39);
  uint64_t v10 = MEMORY[0x1E4FBC840];
  sub_191D8C928(0, qword_1EB50D6D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB320]);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_191D97C54();
    goto LABEL_23;
  }
  uint64_t v11 = v38;
  uint64_t v12 = *(void *)(v38 + 16);
  if (v12 != *(void *)(v9 + 16) || !v12)
  {
    sub_191D97C54();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v35 = v2;
  uint64_t v36 = *(void *)(v38 + 16);
  unint64_t v13 = 0;
  uint64_t v14 = v9;
  uint64_t v15 = v38 + 32;
  uint64_t v16 = (uint64_t *)(v14 + 40);
  uint64_t v37 = v10 + 8;
  while (v13 < *(void *)(v11 + 16))
  {
    uint64_t v17 = *(v16 - 1);
    uint64_t v18 = *v16;
    sub_191D6D834(v15, (uint64_t)v39);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v19 = (void *)v40;
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = 0x8000000000000000;
    unint64_t v20 = sub_191D636F4();
    if (__OFADD__(v19[2], (v21 & 1) == 0)) {
      goto LABEL_25;
    }
    unint64_t v22 = v20;
    char v23 = v21;
    sub_191D7CDAC(0, &qword_1EB508B18, v37, MEMORY[0x1E4FBBCB8]);
    if (sub_191EE93D0())
    {
      sub_191D636F4();
      OUTLINED_FUNCTION_27_4();
      if (!v25) {
        goto LABEL_27;
      }
      unint64_t v22 = v24;
    }
    if (v23)
    {
      uint64_t v26 = (_OWORD *)(v19[7] + 32 * v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      sub_191D6DA60(v39, v26);
    }
    else
    {
      v19[(v22 >> 6) + 8] |= 1 << v22;
      uint64_t v27 = (void *)(v19[6] + 16 * v22);
      *uint64_t v27 = v17;
      v27[1] = v18;
      sub_191D6DA60(v39, (_OWORD *)(v19[7] + 32 * v22));
      uint64_t v28 = v19[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_26;
      }
      v19[2] = v30;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    ++v13;
    v16 += 2;
    unint64_t v40 = (unint64_t)v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 += 32;
    uint64_t v11 = v38;
    if (v36 == v13)
    {
      sub_191D97C54();
      swift_bridgeObjectRelease();
      uint64_t v2 = v35;
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_191EE99B0();
  __break(1u);
  return result;
}

uint64_t sub_191DE6ACC(uint64_t a1)
{
  return a1;
}

void ReferenceDecodingPool.insert<A>(contentsOf:)()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_28_4();
  uint64_t v2 = type metadata accessor for Reference();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - v8;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v10 = sub_191EE8530();
  uint64_t v17 = v10;
  if (v10 != MEMORY[0x192FE7810](v0, v2))
  {
    uint64_t v15 = v6;
    while (1)
    {
      char v12 = sub_191EE85E0();
      sub_191EE8570();
      if (v12)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v9, v0+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v10, v2);
      }
      else
      {
        uint64_t v13 = sub_191EE91C0();
        if (v15 != 8)
        {
          __break(1u);
          return;
        }
        uint64_t v16 = v13;
        (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 16))(v9, &v16, v2);
        swift_unknownObjectRelease();
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x192FE7830](&v17, v0, v2);
      swift_bridgeObjectRelease();
      ReferenceDecodingPool.insert<A>(_:)((uint64_t)v9, v1);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      uint64_t v10 = v17;
      if (v10 == MEMORY[0x192FE7810](v0, v2))
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_36();
        return;
      }
    }
  }
  OUTLINED_FUNCTION_36();
  swift_bridgeObjectRelease();
}

uint64_t ReferenceDecodingPool.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReferenceDecodingPool.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

unint64_t ReferenceDecodingPool.description.getter()
{
  return 0xD000000000000021;
}

unint64_t sub_191DE6E78()
{
  return ReferenceDecodingPool.description.getter();
}

_OWORD *sub_191DE6E9C()
{
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_0_19();
  if (v6)
  {
    __break(1u);
LABEL_14:
    uint64_t result = (_OWORD *)sub_191EE99B0();
    __break(1u);
    return result;
  }
  unint64_t v7 = v4;
  char v8 = v5;
  sub_191D7CDAC(0, &qword_1EB508B18, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBCB8]);
  if (OUTLINED_FUNCTION_2_21())
  {
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_19_6();
    if (!v10) {
      goto LABEL_14;
    }
    unint64_t v7 = v9;
  }
  if (v8)
  {
    OUTLINED_FUNCTION_37_3();
    OUTLINED_FUNCTION_26_3();
    return sub_191D6DA60(v11, v12);
  }
  else
  {
    sub_191DE7A00(v7, v2, v1, v0, *v3);
    OUTLINED_FUNCTION_26_3();
    return (_OWORD *)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

uint64_t sub_191DE6F98()
{
  OUTLINED_FUNCTION_31_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  char v6 = v5;
  sub_191D636F4();
  OUTLINED_FUNCTION_0_19();
  if (v9)
  {
    __break(1u);
LABEL_14:
    uint64_t result = sub_191EE99B0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v7;
  char v11 = v8;
  sub_191D7CDAC(0, &qword_1E92F3338, (uint64_t)&type metadata for NetworkOperationTask, MEMORY[0x1E4FBBCB8]);
  if (OUTLINED_FUNCTION_2_21())
  {
    sub_191D636F4();
    OUTLINED_FUNCTION_19_6();
    if (!v13) {
      goto LABEL_14;
    }
    unint64_t v10 = v12;
  }
  if (v11)
  {
    OUTLINED_FUNCTION_26_3();
    return sub_191DE8158(v14, v15);
  }
  else
  {
    sub_191DE7A6C(v10, v4, v2, v6, *v0);
    OUTLINED_FUNCTION_26_3();
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

void sub_191DE70BC()
{
  OUTLINED_FUNCTION_8_3();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_191DA4150(v5, v3, v1);
  OUTLINED_FUNCTION_0_19();
  if (v11)
  {
    __break(1u);
LABEL_12:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  unint64_t v12 = v9;
  char v13 = v10;
  sub_191D6B910(0, &qword_1EB50C038, sub_191DE80C0, (void (*)(void))sub_191D8F35C);
  if (OUTLINED_FUNCTION_8_9())
  {
    sub_191DA4150(v6, v4, v2);
    OUTLINED_FUNCTION_11_9();
    if (!v15) {
      goto LABEL_12;
    }
    unint64_t v12 = v14;
  }
  uint64_t v16 = *v0;
  if (v13)
  {
    uint64_t v17 = v16[7];
    swift_bridgeObjectRelease();
    *(void *)(v17 + 8 * v12) = v8;
    OUTLINED_FUNCTION_36();
  }
  else
  {
    sub_191DE7AC4(v12, v6, v4, v2, v8, v16);
    OUTLINED_FUNCTION_36();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

uint64_t sub_191DE71F8()
{
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_7_10(v1, v2, v3);
  OUTLINED_FUNCTION_0_19();
  if (v4)
  {
    __break(1u);
LABEL_13:
    uint64_t result = sub_191EE99B0();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_16_7();
  sub_191DE8044();
  if (OUTLINED_FUNCTION_2_21())
  {
    OUTLINED_FUNCTION_30_3();
    OUTLINED_FUNCTION_5_14();
    if (!v5) {
      goto LABEL_13;
    }
  }
  if (v0)
  {
    OUTLINED_FUNCTION_37_3();
    OUTLINED_FUNCTION_26_3();
    return sub_191D6DE58(v6, v7);
  }
  else
  {
    unint64_t v10 = OUTLINED_FUNCTION_14_5();
    sub_191DE7B14(v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_26_3();
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

void sub_191DE72BC()
{
  OUTLINED_FUNCTION_31_1();
  uint64_t v5 = OUTLINED_FUNCTION_26_5(v3, v4);
  sub_191D67014(v5);
  OUTLINED_FUNCTION_0_19();
  if (v8)
  {
    __break(1u);
LABEL_12:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  uint64_t v9 = v6;
  char v10 = v7;
  sub_191DE7FB8();
  if (OUTLINED_FUNCTION_22_3())
  {
    sub_191D67014(v1);
    OUTLINED_FUNCTION_19_6();
    if (!v12) {
      goto LABEL_12;
    }
    uint64_t v9 = v11;
  }
  if (v10)
  {
    uint64_t v13 = *(void *)(*(void *)v2 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v13 + 8 * v9) = v0;
    OUTLINED_FUNCTION_26_3();
  }
  else
  {
    OUTLINED_FUNCTION_26_3();
    sub_191DE7B84(v14, v15, v16, v17);
  }
}

void sub_191DE7384()
{
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_7_10(v5, v6, v7);
  OUTLINED_FUNCTION_0_19();
  if (v8)
  {
    __break(1u);
LABEL_12:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_16_7();
  sub_191DE7ED0();
  uint64_t v9 = OUTLINED_FUNCTION_2_21();
  if (v9)
  {
    OUTLINED_FUNCTION_30_3();
    OUTLINED_FUNCTION_5_14();
    if (!v13) {
      goto LABEL_12;
    }
    uint64_t v3 = v9;
  }
  if (v4)
  {
    OUTLINED_FUNCTION_33_3();
    *(void *)(v1 + 8 * v3) = v0;
    OUTLINED_FUNCTION_26_3();
  }
  else
  {
    OUTLINED_FUNCTION_17_7(v9, v10, v11, v12, *v2);
    OUTLINED_FUNCTION_26_3();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

void sub_191DE7428()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_28_4();
  sub_191EE93C0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_21_4();
  sub_191DA40F8();
  OUTLINED_FUNCTION_0_19();
  if (v2)
  {
    __break(1u);
LABEL_11:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_23_5();
  sub_191DA6720();
  if (OUTLINED_FUNCTION_34_3())
  {
    sub_191DA40F8();
    OUTLINED_FUNCTION_11_9();
    if (!v3) {
      goto LABEL_11;
    }
  }
  if (v0)
  {
    OUTLINED_FUNCTION_37_3();
    OUTLINED_FUNCTION_36();
    sub_191D6DA60(v4, v5);
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_25_4();
    v8(v7);
    unint64_t v9 = OUTLINED_FUNCTION_32_3();
    sub_191DE7BC8(v9, v10, v11, v12);
    OUTLINED_FUNCTION_36();
  }
}

void sub_191DE7530()
{
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_7_10(v3, v4, v5);
  OUTLINED_FUNCTION_0_19();
  if (v8)
  {
    __break(1u);
LABEL_12:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  uint64_t v9 = v6;
  char v10 = v7;
  sub_191D6B910(0, &qword_1EB508B00, (void (*)(uint64_t))sub_191DE7F64, (void (*)(void))sub_191DA6894);
  uint64_t v11 = OUTLINED_FUNCTION_2_21();
  if (v11)
  {
    OUTLINED_FUNCTION_30_3();
    OUTLINED_FUNCTION_5_14();
    if (!v15) {
      goto LABEL_12;
    }
    uint64_t v9 = v11;
  }
  if (v10)
  {
    OUTLINED_FUNCTION_33_3();
    *(void *)(v1 + 8 * v9) = v0;
    OUTLINED_FUNCTION_26_3();
  }
  else
  {
    OUTLINED_FUNCTION_17_7(v11, v12, v13, v14, *v2);
    OUTLINED_FUNCTION_26_3();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

void sub_191DE7614()
{
  OUTLINED_FUNCTION_31_1();
  uint64_t v2 = v1;
  char v4 = v3;
  sub_191D67014(v1);
  OUTLINED_FUNCTION_0_19();
  if (v7)
  {
    __break(1u);
LABEL_12:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  uint64_t v8 = v5;
  char v9 = v6;
  sub_191DE7E74();
  if (OUTLINED_FUNCTION_22_3())
  {
    sub_191D67014(v2);
    OUTLINED_FUNCTION_27_4();
    if (!v11) {
      goto LABEL_12;
    }
    uint64_t v8 = v10;
  }
  if (v9)
  {
    *(unsigned char *)(*(void *)(*(void *)v0 + 56) + v8) = v4;
    OUTLINED_FUNCTION_26_3();
  }
  else
  {
    OUTLINED_FUNCTION_26_3();
    sub_191DE7C88(v12, v13, v14, v15);
  }
}

void sub_191DE76E8()
{
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_0_19();
  if (v4)
  {
    __break(1u);
LABEL_12:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_16_7();
  sub_191DE7D8C();
  if (OUTLINED_FUNCTION_2_21())
  {
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_5_14();
    if (!v6) {
      goto LABEL_12;
    }
    uint64_t v2 = v5;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_33_3();
    *(void *)(v1 + 8 * v2) = v0;
    OUTLINED_FUNCTION_26_3();
  }
  else
  {
    unint64_t v7 = OUTLINED_FUNCTION_14_5();
    sub_191D8BA40(v7, v8, v9, v10, v11);
    OUTLINED_FUNCTION_26_3();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

void sub_191DE7794()
{
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_26_5(v3, v4);
  sub_191DA43A8();
  OUTLINED_FUNCTION_0_19();
  if (v7)
  {
    __break(1u);
LABEL_12:
    sub_191DA5DC8();
    sub_191EE99B0();
    __break(1u);
    return;
  }
  unint64_t v8 = v5;
  char v9 = v6;
  sub_191DA5CEC();
  if (OUTLINED_FUNCTION_22_3())
  {
    sub_191DA43A8();
    OUTLINED_FUNCTION_19_6();
    if (!v11) {
      goto LABEL_12;
    }
    unint64_t v8 = v10;
  }
  uint64_t v12 = *v2;
  if (v9)
  {
    uint64_t v13 = v12[7];
    swift_release();
    *(void *)(v13 + 8 * v8) = v0;
    OUTLINED_FUNCTION_26_3();
  }
  else
  {
    sub_191DE7B84(v8, v1, v0, v12);
    OUTLINED_FUNCTION_26_3();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

void sub_191DE7864()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_13_8(v4, v5, v6, v7);
  OUTLINED_FUNCTION_0_19();
  if (v8)
  {
    __break(1u);
LABEL_12:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_23_5();
  sub_191DA5BB0();
  if (OUTLINED_FUNCTION_8_9())
  {
    OUTLINED_FUNCTION_20_7();
    OUTLINED_FUNCTION_11_9();
    if (!v10) {
      goto LABEL_12;
    }
    uint64_t v2 = v9;
  }
  if (v3)
  {
    uint64_t v11 = *(void *)(*(void *)v1 + 56);
    swift_release();
    *(void *)(v11 + 8 * v2) = v0;
    OUTLINED_FUNCTION_36();
  }
  else
  {
    OUTLINED_FUNCTION_24_3();
    sub_191D6B8F8(v12, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_36();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

void sub_191DE791C()
{
  OUTLINED_FUNCTION_31_1();
  uint64_t v2 = v1;
  char v4 = v3;
  sub_191D67014(v1);
  OUTLINED_FUNCTION_0_19();
  if (v7)
  {
    __break(1u);
LABEL_12:
    sub_191EE99B0();
    __break(1u);
    return;
  }
  uint64_t v8 = v5;
  char v9 = v6;
  sub_191DE7E18();
  if (sub_191EE93D0())
  {
    sub_191D67014(v2);
    OUTLINED_FUNCTION_27_4();
    if (!v11) {
      goto LABEL_12;
    }
    uint64_t v8 = v10;
  }
  if (v9)
  {
    *(unsigned char *)(*(void *)(*(void *)v0 + 56) + v8) = v4 & 1;
    OUTLINED_FUNCTION_26_3();
  }
  else
  {
    OUTLINED_FUNCTION_26_3();
    sub_191DE7CCC(v12, v13, v14, v15);
  }
}

_OWORD *sub_191DE7A00(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  char v6 = (void *)(a5[6] + 16 * a1);
  *char v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_191D6DA60(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_191DE7A6C(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  char v6 = (_OWORD *)(a5[7] + (result << 6));
  long long v7 = a4[1];
  *char v6 = *a4;
  v6[1] = v7;
  long long v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  uint64_t v9 = a5[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a5[2] = v11;
  }
  return result;
}

unint64_t sub_191DE7AC4(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = a6[6] + 24 * result;
  *(void *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = a3;
  *(unsigned char *)(v6 + 16) = a4;
  *(void *)(a6[7] + 8 * result) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t sub_191DE7B14(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_191D6DE58(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_191DE7B84(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

_OWORD *sub_191DE7BC8(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_191EE93C0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_191D6DA60(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_191DE7C88(unint64_t result, uint64_t a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(unsigned char *)(a4[7] + result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_191DE7CCC(unint64_t result, uint64_t a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(unsigned char *)(a4[7] + result) = a3 & 1;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t type metadata accessor for ReferenceDecodingPool()
{
  return self;
}

uint64_t method lookup function for ReferenceDecodingPool(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReferenceDecodingPool);
}

uint64_t dispatch thunk of ReferenceDecodingPool.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ReferenceDecodingPool.__allocating_init(references:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_191DE7D8C()
{
  if (!qword_1EB50C040)
  {
    sub_191D8C928(255, (unint64_t *)&qword_1EB50DB98, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_191EE9400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50C040);
    }
  }
}

void sub_191DE7E18()
{
  if (!qword_1E92F3868)
  {
    unint64_t v0 = sub_191EE9400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F3868);
    }
  }
}

void sub_191DE7E74()
{
  if (!qword_1E92F3870)
  {
    unint64_t v0 = sub_191EE9400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F3870);
    }
  }
}

void sub_191DE7ED0()
{
  if (!qword_1EB508AF8)
  {
    sub_191D7CDAC(255, (unint64_t *)&qword_1EB50AC00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBAEA0]);
    sub_191DA6894();
    unint64_t v0 = sub_191EE9400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508AF8);
    }
  }
}

void sub_191DE7F64()
{
  if (!qword_1EB5082F8)
  {
    unint64_t v0 = sub_191EE8980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB5082F8);
    }
  }
}

void sub_191DE7FB8()
{
  if (!qword_1EB508B28)
  {
    sub_191D8C928(255, &qword_1EB5082D8, (uint64_t)&type metadata for AnyReference, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_191EE9400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508B28);
    }
  }
}

void sub_191DE8044()
{
  if (!qword_1EB508AF0)
  {
    sub_191D6D890(255, (unint64_t *)&qword_1EB5080D8);
    sub_191DA6894();
    unint64_t v0 = sub_191EE9400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508AF0);
    }
  }
}

void sub_191DE80C0(uint64_t a1)
{
}

void sub_191DE80F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_191DE8158(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SyncObservable.onNext(eager:block:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *(void *)(*(void *)v4 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v17 = v10;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_5_15();
  OUTLINED_FUNCTION_1_21();
  sub_191EE9110();
  uint64_t v12 = type metadata accessor for Observer();
  swift_retain();
  uint64_t v13 = swift_retain();
  char v14 = (void (*)(uint64_t))a2;
  uint64_t v15 = sub_191DE88E4(v13, a2, a3);
  swift_beginAccess();
  sub_191EE86B0();
  swift_retain();
  sub_191EE8630();
  uint64_t result = swift_endAccess();
  if (a1)
  {
    SyncObservable.uncheckedValue.getter();
    v14(v5);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v5, v9);
  }
  a4[3] = v12;
  a4[4] = (uint64_t)&off_1EE2B6C98;
  *a4 = v15;
  return result;
}

void SyncObservable.uncheckedValue.getter()
{
}

uint64_t SyncObservable.__allocating_init(value:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_4_14();
  SyncObservable.init(value:)(v0);
  return v1;
}

void *SyncObservable.init(value:)(uint64_t a1)
{
  return sub_191DE84C0(a1, (uint64_t (*)(char *, uint64_t))sub_191DE83C8);
}

uint64_t sub_191DE83C8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_191EE9260();
  uint64_t v4 = sub_191EE9250();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t SyncObservable.__allocating_init<A>(initialValue:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_4_14();
  SyncObservable.init<A>(initialValue:)(v0);
  return v1;
}

void *SyncObservable.init<A>(initialValue:)(uint64_t a1)
{
  return sub_191DE84C0(a1, (uint64_t (*)(char *, uint64_t))sub_191DE85DC);
}

void *sub_191DE84C0(uint64_t a1, uint64_t (*a2)(char *, uint64_t))
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v6 = *(void *)(v5 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v14 - v10;
  type metadata accessor for Observer();
  v2[3] = sub_191EE7DA0();
  swift_getTupleTypeMetadata2();
  type metadata accessor for Observer();
  v2[4] = sub_191EE7DA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v6);
  uint64_t v12 = a2(v11, v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
  v2[2] = v12;
  return v2;
}

uint64_t sub_191DE85DC(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_1_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, a2);
  uint64_t v9 = sub_191DE83C8((uint64_t)v8, a2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a2);
  return v9;
}

uint64_t SyncObservable.next(value:quiet:)(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v7 = *(void *)(v6 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_5_15();
  OUTLINED_FUNCTION_1_21();
  sub_191EE9110();
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v14 = v7;
  uint64_t v15 = a1;
  sub_191DE9D80((void (*)(uint64_t))sub_191DE9ACC, (uint64_t)v13, v11, v7, v7);
  if ((a2 & 1) == 0) {
    sub_191DE8898(v3, a1);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v3, v7);
}

uint64_t sub_191DE87C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(a4, a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, a3);
}

void sub_191DE8880(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_191DE8898(uint64_t a1, uint64_t a2)
{
  sub_191DE8C00(a2);

  return sub_191DE9210(a1, a2);
}

uint64_t sub_191DE88E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191DE9890(a1, a2, a3);
}

uint64_t SyncObservable.onChange(block:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *v3;
  sub_191EE87B0();
  OUTLINED_FUNCTION_1_21();
  sub_191EE9110();
  uint64_t v8 = *(void *)(v7 + 80);
  swift_getTupleTypeMetadata2();
  uint64_t v9 = type metadata accessor for Observer();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v8;
  v10[3] = a1;
  __n128 v10[4] = a2;
  swift_retain();
  uint64_t v11 = swift_retain();
  uint64_t v13 = sub_191DE88E4(v11, (uint64_t)sub_191DE9B20, (uint64_t)v10);
  swift_beginAccess();
  sub_191EE86B0();
  swift_retain();
  sub_191EE8630();
  uint64_t result = swift_endAccess();
  a3[3] = v9;
  a3[4] = (uint64_t)&off_1EE2B6C98;
  *a3 = v13;
  return result;
}

uint64_t sub_191DE8AB4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

Swift::Void __swiftcall SyncObservable.triggerObservers()()
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v1 = *(void *)(v0 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v7 - v5;
  sub_191EE87B0();
  OUTLINED_FUNCTION_1_21();
  sub_191EE9110();
  SyncObservable.uncheckedValue.getter();
  sub_191DE8C00((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
}

uint64_t sub_191DE8C00(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = type metadata accessor for Observer();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v6 = sub_191EE8530();
  for (i = v6; v6 != MEMORY[0x192FE7810](v4, v5); uint64_t v6 = i)
  {
    char v9 = sub_191EE85E0();
    sub_191EE8570();
    if (v9)
    {
      uint64_t v10 = *(void *)(v4 + 32 + 8 * v6);
      swift_retain();
    }
    else
    {
      uint64_t v10 = sub_191EE91C0();
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    MEMORY[0x192FE7830](&i, v4, v5);
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x192FE9B40](v10 + 16);
    swift_unknownObjectRelease();
    if (v11)
    {
      uint64_t v12 = *(void (**)(uint64_t))(v10 + 24);
      swift_retain();
      v12(a1);
      swift_release();
    }
    swift_release();
  }
  uint64_t v7 = swift_bridgeObjectRelease();
  uint64_t i = *v3;
  MEMORY[0x1F4188790](v7);
  sub_191EE86B0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_getWitnessTable();
  *uint64_t v3 = sub_191EE92A0();
  return swift_bridgeObjectRelease();
}

uint64_t SyncObservable.map<A>(quietProvider:transform:)(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  OUTLINED_FUNCTION_4_0();
  uint64_t v9 = *(void *)(v8 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_7();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  type metadata accessor for SyncObservable();
  SyncObservable.uncheckedValue.getter();
  a3(v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v9);
  uint64_t v16 = SyncObservable.__allocating_init(value:)();
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v9;
  v18[3] = a5;
  v18[4] = v17;
  v18[5] = a3;
  uint64_t v20 = v27;
  uint64_t v19 = v28;
  v18[6] = a4;
  v18[7] = v20;
  v18[8] = v19;
  swift_retain();
  swift_retain();
  sub_191D771A4(v20);
  SyncObservable.onNext(eager:block:)(0, (uint64_t)sub_191DE9BCC, (uint64_t)v18, v29);
  swift_release();
  swift_release();
  uint64_t v21 = v30;
  uint64_t v22 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  char v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 8);
  uint64_t v24 = swift_retain();
  v23(v24, v21, v22);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v16;
}

uint64_t sub_191DE905C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = *(void *)(a8 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v20 - v16;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3(a1);
    if (a5)
    {
      SyncObservable.uncheckedValue.getter();
      char v19 = a5(v15, v17);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a8);
    }
    else
    {
      char v19 = 0;
    }
    SyncObservable.next(value:quiet:)((uint64_t)v17, v19 & 1);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, a8);
  }
  return result;
}

uint64_t SyncObservable.map<A>(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return SyncObservable.map<A>(quietProvider:transform:)(0, 0, a1, a2, a3);
}

uint64_t sub_191DE9210(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = *(void *)(*v2 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v4 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v27 = (char *)&v22 - v5;
  char v23 = v2 + 4;
  swift_beginAccess();
  uint64_t v6 = v2[4];
  uint64_t v28 = TupleTypeMetadata2;
  uint64_t v7 = type metadata accessor for Observer();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v8 = sub_191EE8530();
  uint64_t v33 = v8;
  if (v8 != MEMORY[0x192FE7810](v6, v7))
  {
    uint64_t v32 = v6 + 32;
    uint64_t v24 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v25 = v31 - 8;
    uint64_t v26 = v7;
    uint64_t v12 = v27;
    uint64_t v13 = v31;
    do
    {
      char v14 = sub_191EE85E0();
      sub_191EE8570();
      if (v14)
      {
        uint64_t v15 = *(void *)(v32 + 8 * v8);
        swift_retain();
      }
      else
      {
        uint64_t v15 = sub_191EE91C0();
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x192FE7830](&v33, v6, v7);
      swift_bridgeObjectRelease();
      uint64_t v16 = MEMORY[0x192FE9B40](v15 + 16);
      swift_unknownObjectRelease();
      if (v16)
      {
        uint64_t v17 = *(void (**)(char *))(v15 + 24);
        uint64_t v18 = v28;
        char v19 = &v12[*(int *)(v28 + 48)];
        uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
        v20(v12, v29, v13);
        v20(v19, v30, v13);
        v17(v12);
        uint64_t v21 = v18;
        uint64_t v7 = v26;
        (*v24)(v12, v21);
      }
      swift_release();
      uint64_t v8 = v33;
    }
    while (v8 != MEMORY[0x192FE7810](v6, v7));
  }
  uint64_t v9 = swift_bridgeObjectRelease();
  uint64_t v10 = v23;
  uint64_t v33 = *v23;
  MEMORY[0x1F4188790](v9);
  *(&v22 - 2) = v31;
  sub_191EE86B0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_getWitnessTable();
  *uint64_t v10 = sub_191EE92A0();
  return swift_bridgeObjectRelease();
}

BOOL sub_191DE9554(void *a1)
{
  uint64_t v1 = MEMORY[0x192FE9B40](*a1 + 16);
  if (v1) {
    swift_unknownObjectRelease();
  }
  return v1 != 0;
}

uint64_t SyncObservable.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SyncObservable.__deallocating_deinit()
{
  SyncObservable.deinit();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

BOOL SyncObservable<A>.next(value:quietIfUnchanged:)(uint64_t a1, char a2, uint64_t a3)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v8 = *(void *)(v7 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v18[-v12];
  sub_191EE87B0();
  OUTLINED_FUNCTION_1_21();
  sub_191EE9110();
  uint64_t v14 = *(void *)(v3 + 16);
  uint64_t v19 = v8;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  sub_191DE9D80((void (*)(uint64_t))sub_191DE9BE0, (uint64_t)v18, v14, v8, v8);
  char v15 = sub_191EE80C0();
  char v16 = v15;
  if ((a2 & 1) == 0 || (v15 & 1) == 0) {
    sub_191DE8898((uint64_t)v13, a1);
  }
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v8);
  return (v16 & 1) == 0;
}

uint64_t SyncObservable<A>.map<A>(_:quietIfUnchanged:)(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *v6;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = *(void *)(v12 + 80);
  v13[3] = a4;
  v13[4] = a5;
  v13[5] = a6;
  uint64_t v14 = SyncObservable.map<A>(quietProvider:transform:)((uint64_t)sub_191DE9C10, (uint64_t)v13, a1, a2, a4);
  swift_release();
  return v14;
}

void SyncObservable<A>.checkedValue.getter()
{
}

void sub_191DE9840(void (*a1)(uint64_t))
{
  sub_191DE9D80(a1, (uint64_t)&v2, v1[2], *(void *)(*v1 + 80), *(void *)(*v1 + 80));
}

uint64_t sub_191DE9890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  return v3;
}

uint64_t sub_191DE98E4()
{
  sub_191EE87B0();
  sub_191EE9110();

  return swift_unknownObjectWeakAssign();
}

uint64_t sub_191DE9970()
{
  sub_191EE87B0();
  sub_191EE9110();

  return swift_unknownObjectWeakAssign();
}

uint64_t sub_191DE99F0()
{
  sub_191DA5CC4(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_191DE9A18()
{
  uint64_t v0 = sub_191DE99F0();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t sub_191DE9A48()
{
  return sub_191DE98E4();
}

uint64_t sub_191DE9A6C()
{
  return sub_191DE9970();
}

uint64_t sub_191DE9A90()
{
  return 0;
}

uint64_t type metadata accessor for Observer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191DE9AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191DE9C40(a1, a2);
}

uint64_t sub_191DE9ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191DE87C8(a1, *(void *)(v2 + 24), *(void *)(v2 + 16), a2);
}

uint64_t sub_191DE9AE8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191DE9B20(uint64_t a1)
{
  return sub_191DE8AB4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
}

uint64_t type metadata accessor for SyncObservable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191DE9B44()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191DE9B7C()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_191DE9BCC(uint64_t a1)
{
  return sub_191DE905C(a1, *(void *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(void *)(v1 + 48), *(uint64_t (**)(char *, char *))(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_191DE9BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191DE87C8(a1, *(void *)(v2 + 32), *(void *)(v2 + 16), a2);
}

uint64_t sub_191DE9C00()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191DE9C10()
{
  return sub_191EE80C0() & 1;
}

uint64_t sub_191DE9C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_191DE9C98()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for SyncObservable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SyncObservable);
}

uint64_t dispatch thunk of SyncObservable.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SyncObservable.__allocating_init<A>(initialValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_191DE9D30()
{
  return swift_initClassMetadata2();
}

void sub_191DE9D80(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_191DE9E0C(a3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_191DE9E0C(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7) {
    *a7 = v7;
  }
}

uint64_t sub_191DE9E94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v2 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2);
}

BOOL sub_191DE9F28(void *a1)
{
  return sub_191DE9554(a1);
}

uint64_t sub_191DE9F48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191DE9E94(a1, a2);
}

BOOL sub_191DE9F64(void *a1)
{
  return sub_191DE9F28(a1);
}

uint64_t dispatch thunk of ApplicationStateMonitor.applicationWillEnterForeground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ApplicationStateMonitor.applicationDidEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ApplicationStateMonitor.applicationDidFinishLaunching(withOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t ApplicationStateLaunchOptionKey.hash(into:)()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
      uint64_t result = sub_191EE9A80();
      break;
    default:
      sub_191EE9A80();
      uint64_t result = sub_191EE8200();
      break;
  }
  return result;
}

uint64_t static ApplicationStateLaunchOptionKey.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_28;
      }
      unint64_t v3 = 0;
      goto LABEL_6;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_28;
      }
      unint64_t v3 = 1;
LABEL_6:
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11) {
        goto LABEL_28;
      }
      char v6 = 1;
      unint64_t v3 = 11;
      break;
    default:
      if (v5 >= 0xC)
      {
        if (v2 == v4 && v3 == v5) {
          char v6 = 1;
        }
        else {
          char v6 = sub_191EE9770();
        }
      }
      else
      {
LABEL_28:
        char v6 = 0;
      }
      sub_191DEA2D0(v4, v5);
      sub_191DEA2D0(v2, v3);
      break;
  }
  sub_191DEA2E4(v2, v3);
  sub_191DEA2E4(v4, v5);
  return v6 & 1;
}

uint64_t sub_191DEA2D0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xC) {
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t sub_191DEA2E4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xC) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ApplicationStateLaunchOptionKey.hashValue.getter()
{
  return sub_191EE9A90();
}

uint64_t sub_191DEA34C()
{
  return sub_191EE9A90();
}

uint64_t ApplicationStateManagerIOS.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t ApplicationStateManagerIOS.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  return result;
}

Swift::Void __swiftcall ApplicationStateManagerIOS.didEnterBackground()()
{
}

uint64_t sub_191DEA3FC(unint64_t a1)
{
  return sub_191DEA518(a1, (uint64_t (*)(uint64_t))sub_191DD9E0C, (void (*)(uint64_t, unint64_t))sub_191DCD4A4);
}

void sub_191DEA428(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_191DD9E10();
    uint64_t v5 = v10;
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(type metadata accessor for ManualClock.WakeUp() - 8);
    uint64_t v8 = *(void *)(v7 + 72);
    unint64_t v9 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v8 * a1;
    sub_191DEAC88(v9, a2);
    sub_191DCD54C(v9 + v8, v6 - 1 - a1, v9);
    *(void *)(v5 + 16) = v6 - 1;
    *uint64_t v2 = v5;
  }
}

uint64_t sub_191DEA518(unint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t, unint64_t))
{
  uint64_t v7 = *v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v3 = v7;
  if (!result || v7 < 0 || (v7 & 0x4000000000000000) != 0)
  {
    uint64_t result = a2(v7);
    uint64_t v7 = result;
    *unint64_t v3 = result;
  }
  uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = v10 - 1;
    unint64_t v12 = v10 - 1 - a1;
    uint64_t v13 = v9 + 8 * a1;
    uint64_t v14 = *(void *)(v13 + 32);
    a3(v13 + 40, v12);
    *(void *)(v9 + 16) = v11;
    sub_191EE8550();
    return v14;
  }
  return result;
}

uint64_t ApplicationStateManagerIOS.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

void sub_191DEA5E0()
{
}

uint64_t sub_191DEA604()
{
  return ApplicationStateManagerIOS.remove(monitor:)();
}

uint64_t sub_191DEA628()
{
  OUTLINED_FUNCTION_3_16();
  if (*(void *)(v1 + 16) >> 62)
  {
    OUTLINED_FUNCTION_83();
    uint64_t result = sub_191EE94B0();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t result = OUTLINED_FUNCTION_2_22();
    if (!v2) {
      goto LABEL_12;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  OUTLINED_FUNCTION_5_16();
  do
  {
    if (v5)
    {
      OUTLINED_FUNCTION_4_15();
      uint64_t v4 = v7;
    }
    else
    {
      OUTLINED_FUNCTION_1_22();
    }
    uint64_t v8 = MEMORY[0x192FE9B40](v4 + 32);
    swift_unknownObjectRelease();
    if (v8 && MEMORY[0x192FE9B40](v4 + 16))
    {
      uint64_t v9 = *(void *)(v4 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 16))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    ++v3;
    swift_release();
  }
  while (v2 != v3);
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (!(*v0 >> 62))
  {
    uint64_t result = OUTLINED_FUNCTION_2_22();
    if (v2) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_28:
    *uint64_t v0 = v13;
    return swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_83();
  uint64_t result = sub_191EE94B0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_14:
  if (v2 >= 1)
  {
    OUTLINED_FUNCTION_5_16();
    do
    {
      if (v5)
      {
        OUTLINED_FUNCTION_4_15();
        uint64_t v4 = v11;
      }
      else
      {
        OUTLINED_FUNCTION_1_22();
      }
      uint64_t v12 = MEMORY[0x192FE9B40](v4 + 32);
      swift_unknownObjectRelease();
      if (v12)
      {
        sub_191EE92B0();
        OUTLINED_FUNCTION_7_11();
        sub_191EE9300();
        sub_191EE92C0();
      }
      else
      {
        swift_release();
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v13 = v14;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t _s13TeaFoundation26ApplicationStateManagerIOSC6remove7monitoryAA0cD7Monitor_p_tF_0(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  for (; v4; uint64_t v4 = sub_191EE94B0())
  {
    for (unint64_t i = 0; ; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x192FE8380](i, v3);
      }
      else
      {
        uint64_t v6 = *(void *)(v3 + 8 * i + 32);
        swift_retain();
      }
      unint64_t v7 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      uint64_t v8 = MEMORY[0x192FE9B40](v6 + 16);
      if (v8)
      {
        uint64_t v9 = v8;
        swift_unknownObjectRelease();
        if (v9 == a1)
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_191DEA518(i, (uint64_t (*)(uint64_t))sub_191DD9E0C, (void (*)(uint64_t, unint64_t))sub_191DCD4A4);
          swift_endAccess();
          swift_release();
          return swift_release();
        }
      }
      swift_release();
      if (v7 == v4) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_14:
    OUTLINED_FUNCTION_83();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_191DEA97C()
{
  sub_191DA5CC4(v0 + 16);
  sub_191DA5CC4(v0 + 32);

  return MEMORY[0x1F4186488](v0, 40, 7);
}

unint64_t destroy for ApplicationStateLaunchOptionKey(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13TeaFoundation31ApplicationStateLaunchOptionKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

void *assignWithCopy for ApplicationStateLaunchOptionKey(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ApplicationStateLaunchOptionKey(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationStateLaunchOptionKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF3 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483636);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 11;
  if (v4 >= 0xD) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ApplicationStateLaunchOptionKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF4)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483636;
    if (a3 >= 0x7FFFFFF4) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF4) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 11;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationStateLaunchOptionKey()
{
  return &type metadata for ApplicationStateLaunchOptionKey;
}

uint64_t dispatch thunk of ApplicationStateManagerType.didEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ApplicationStateManagerType.remove(monitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t method lookup function for ApplicationStateManagerIOS(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ApplicationStateManagerIOS);
}

uint64_t dispatch thunk of ApplicationStateManagerIOS.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for ApplicationStateManagerMacOS()
{
  return self;
}

uint64_t method lookup function for ApplicationStateManagerMacOS(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ApplicationStateManagerMacOS);
}

uint64_t dispatch thunk of ApplicationStateManagerMacOS.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_191DEAC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManualClock.WakeUp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static RemoteNotificationFetchResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RemoteNotificationFetchResult.hash(into:)()
{
  return sub_191EE9A80();
}

uint64_t RemoteNotificationFetchResult.hashValue.getter()
{
  return sub_191EE9A90();
}

uint64_t RemoteNotificationManager.__allocating_init()()
{
  OUTLINED_FUNCTION_0_3();
  uint64_t result = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(result + 16) = MEMORY[0x1E4FBC860];
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t RemoteNotificationManager.init()()
{
  uint64_t result = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 24) = v2;
  return result;
}

uint64_t RemoteNotificationManager.handleRemoteNotification(userInfo:)(uint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191DEAEE4(v1, a1, &v9);
  uint64_t v3 = qword_1EB50EC90;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v3 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EB50EC78;
  sub_191DC010C();
  swift_bridgeObjectRelease();

  id v5 = (id)qword_1EB50EC78;
  sub_191DBAD30();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_release();

  return v7;
}

uint64_t sub_191DEAEE4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v25 = (unint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = sub_191EE94B0();
    uint64_t v5 = result;
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        uint64_t v7 = 0;
        while (1)
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            uint64_t v8 = (void *)MEMORY[0x192FE8380](v7, v4);
          }
          else
          {
            uint64_t v8 = *(void **)(v4 + 8 * v7 + 32);
            swift_retain();
          }
          uint64_t v9 = MEMORY[0x192FE9B40](v8 + 6);
          swift_unknownObjectRelease();
          if (v9)
          {
            if (MEMORY[0x192FE9B40](v8 + 2)) {
              break;
            }
          }
          swift_release();
LABEL_36:
          if (v5 == ++v7) {
            goto LABEL_39;
          }
        }
        uint64_t v10 = v8[3];
        uint64_t v11 = v8[5];
        if (!v11) {
          goto LABEL_33;
        }
        uint64_t v27 = v8[4];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_191EE9100();
        if (*(void *)(a2 + 16) && (unint64_t v12 = sub_191DA425C(), (v13 & 1) != 0))
        {
          sub_191D6D834(*(void *)(a2 + 56) + 32 * v12, (uint64_t)&v30);
        }
        else
        {
          long long v30 = 0u;
          long long v31 = 0u;
        }
        sub_191DA67E8((uint64_t)v29);
        if (*((void *)&v31 + 1))
        {
          sub_191D6DA00();
          if ((swift_dynamicCast() & 1) == 0)
          {
LABEL_31:
            swift_bridgeObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
            goto LABEL_36;
          }
          sub_191EE9100();
          if (MEMORY[0x737071] && (unint64_t v14 = sub_191DA425C(), (v15 & 1) != 0))
          {
            sub_191D6D834(MEMORY[0x737099] + 32 * v14, (uint64_t)&v30);
          }
          else
          {
            long long v30 = 0u;
            long long v31 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_191DA67E8((uint64_t)v29);
          if (*((void *)&v31 + 1))
          {
            if (swift_dynamicCast())
            {
              if (v27 == 0x79726F6765746163 && v11 == 0xE800000000000000)
              {
                swift_bridgeObjectRelease();
LABEL_33:
                uint64_t ObjectType = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a2, ObjectType, v10);
                MEMORY[0x192FE76B0]();
                if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_191EE8590();
                }
                sub_191EE85F0();
                sub_191EE8550();
                swift_release();
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_36;
              }
              char v17 = sub_191EE9770();
              swift_bridgeObjectRelease();
              if (v17) {
                goto LABEL_33;
              }
            }
            goto LABEL_31;
          }
        }
        sub_191D9EB34((uint64_t)&v30);
        goto LABEL_31;
      }
      __break(1u);
      goto LABEL_55;
    }
  }
LABEL_39:
  swift_bridgeObjectRelease();
  unint64_t v19 = *v25;
  v29[0] = MEMORY[0x1E4FBC860];
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v20) {
      goto LABEL_41;
    }
LABEL_52:
    swift_bridgeObjectRelease();
    unint64_t v24 = MEMORY[0x1E4FBC860];
LABEL_53:
    unint64_t *v25 = v24;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t result = sub_191EE94B0();
  uint64_t v20 = result;
  if (!result) {
    goto LABEL_52;
  }
LABEL_41:
  if (v20 >= 1)
  {
    for (uint64_t i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        uint64_t v22 = MEMORY[0x192FE8380](i, v19);
      }
      else
      {
        uint64_t v22 = *(void *)(v19 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v23 = MEMORY[0x192FE9B40](v22 + 48);
      swift_unknownObjectRelease();
      if (v23)
      {
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v24 = v29[0];
    goto LABEL_53;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_191DEB3AC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)result + 16);
  if (v2)
  {
    uint64_t v3 = (unsigned __int8 *)(*(void *)result + 32);
    while (1)
    {
      int v4 = *v3++;
      if (v4 == 1) {
        break;
      }
      if (!--v2) {
        goto LABEL_7;
      }
    }
    LOBYTE(v2) = 1;
  }
LABEL_7:
  *a2 = v2;
  return result;
}

uint64_t RemoteNotificationManager.add(handler:for:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = a2[1];
  v19[0] = *a2;
  v19[1] = v7;
  uint64_t v8 = type metadata accessor for DisposableHandler();
  swift_allocObject();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v9 = swift_unknownObjectRetain();
  uint64_t v10 = sub_191DEB6CC(v9, a1, v19);
  swift_beginAccess();
  uint64_t v11 = swift_retain();
  MEMORY[0x192FE76B0](v11);
  sub_191D742B4(*(void *)((*(void *)(v4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_191EE85F0();
  sub_191EE8550();
  swift_endAccess();
  unint64_t v12 = (void *)(v4 + 24);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v4 + 24);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v15 = v13 + 40;
    do
    {
      char v16 = *(void (**)(uint64_t))(v15 - 8);
      uint64_t v17 = swift_retain();
      v16(v17);
      swift_release();
      v15 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  *unint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t result = swift_bridgeObjectRelease();
  a3[3] = v8;
  a3[4] = &off_1EE2B40B8;
  *a3 = v10;
  return result;
}

uint64_t RemoteNotificationManager.whenActive(block:)(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5 = swift_beginAccess();
  unint64_t v6 = *(void *)(v2 + 16);
  if (v6 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v8 = sub_191EE94B0();
    uint64_t v5 = swift_bridgeObjectRelease();
    if (v8) {
      return a1(v5);
    }
  }
  else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return a1(v5);
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_beginAccess();
  swift_retain();
  sub_191D938E4();
  uint64_t v10 = *(void *)(*(void *)(v2 + 24) + 16);
  sub_191D93CBC(v10);
  uint64_t v11 = *(void *)(v2 + 24);
  *(void *)(v11 + 16) = v10 + 1;
  uint64_t v12 = v11 + 16 * v10;
  *(void *)(v12 + 32) = sub_191D6EA9C;
  *(void *)(v12 + 40) = v9;
  return swift_endAccess();
}

uint64_t RemoteNotificationManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RemoteNotificationManager.__deallocating_deinit()
{
  RemoteNotificationManager.deinit();
  uint64_t v0 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186488](v0, v1, v2);
}

void *sub_191DEB6CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v6 = a3[1];
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v3[3] = a2;
  swift_unknownObjectWeakAssign();
  v3[4] = v5;
  v3[5] = v6;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_191DEB75C()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_191DEB768()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_191DEB774()
{
  sub_191DA5CC4(v0 + 16);
  swift_bridgeObjectRelease();
  sub_191DA5CC4(v0 + 48);
  return v0;
}

uint64_t sub_191DEB7A4()
{
  uint64_t v0 = sub_191DEB774();

  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_191DEB7D4()
{
  return sub_191DEB75C();
}

uint64_t sub_191DEB7F8()
{
  return sub_191DEB768();
}

uint64_t type metadata accessor for DisposableHandler()
{
  return self;
}

uint64_t sub_191DEB840()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

unint64_t sub_191DEB874()
{
  unint64_t result = qword_1E92F3878;
  if (!qword_1E92F3878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3878);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNotificationPattern()
{
  return &type metadata for RemoteNotificationPattern;
}

unsigned char *storeEnumTagSinglePayload for RemoteNotificationFetchResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191DEB99CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNotificationFetchResult()
{
  return &type metadata for RemoteNotificationFetchResult;
}

uint64_t dispatch thunk of RemoteNotificationHandler.handleRemoteNotification(userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for RemoteNotificationManager()
{
  return self;
}

uint64_t method lookup function for RemoteNotificationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteNotificationManager);
}

uint64_t dispatch thunk of RemoteNotificationManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t SafeCollection.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t SafeCollection.subscript.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_191DEBCE8();
  OUTLINED_FUNCTION_15_0();
  v5(v4);
  OUTLINED_FUNCTION_15_0();
  v7(v6);
  if (v3 < 0)
  {
    uint64_t v20 = OUTLINED_FUNCTION_1_23();
    v21(v20);
    uint64_t v22 = OUTLINED_FUNCTION_9_7();
    v23(v22);
    goto LABEL_5;
  }
  uint64_t v8 = sub_191DEBDF8();
  uint64_t v9 = OUTLINED_FUNCTION_1_23();
  v10(v9);
  uint64_t v11 = OUTLINED_FUNCTION_9_7();
  v12(v11);
  if (v8 <= 0)
  {
LABEL_5:
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v17 = a1;
    uint64_t v18 = 1;
    return __swift_storeEnumTagSinglePayload(v17, v18, 1, AssociatedTypeWitness);
  }
  uint64_t v13 = (void (*)(unsigned char *, void))sub_191EE8BC0();
  uint64_t v15 = v14;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a1, v15, v16);
  v13(v26, 0);
  uint64_t v17 = a1;
  uint64_t v18 = 0;
  uint64_t AssociatedTypeWitness = v16;
  return __swift_storeEnumTagSinglePayload(v17, v18, 1, AssociatedTypeWitness);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t AssociatedTypeWitness;

  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_5_17();
  sub_191EE8C50();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_4_16();
  uint64_t v3 = sub_191DEBCE8();
  OUTLINED_FUNCTION_15_0();
  v4();
  uint64_t v5 = OUTLINED_FUNCTION_2_23();
  v6(v5);
  if (v3 < 0)
  {
    uint64_t v14 = OUTLINED_FUNCTION_1_23();
    v15(v14);
    uint64_t v16 = OUTLINED_FUNCTION_7_12();
    v17(v16);
    goto LABEL_5;
  }
  uint64_t v7 = sub_191DEBDF8();
  uint64_t v8 = OUTLINED_FUNCTION_1_23();
  v9(v8);
  uint64_t v10 = OUTLINED_FUNCTION_7_12();
  v11(v10);
  if (v7 < 0)
  {
LABEL_5:
    uint64_t v13 = 1;
    uint64_t v12 = a1;
    goto LABEL_6;
  }
  uint64_t v12 = a1;
  sub_191EE8BB0();
  uint64_t v13 = 0;
LABEL_6:
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, AssociatedTypeWitness);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t AssociatedTypeWitness;

  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_5_17();
  sub_191EE80B0();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_4_16();
  uint64_t v3 = sub_191DEBCE8();
  OUTLINED_FUNCTION_15_0();
  v4();
  uint64_t v5 = OUTLINED_FUNCTION_2_23();
  v6(v5);
  if (v3 < 0)
  {
    uint64_t v14 = OUTLINED_FUNCTION_1_23();
    v15(v14);
    uint64_t v16 = OUTLINED_FUNCTION_6_12();
    v17(v16);
    goto LABEL_5;
  }
  uint64_t v7 = sub_191DEBDF8();
  uint64_t v8 = OUTLINED_FUNCTION_1_23();
  v9(v8);
  uint64_t v10 = OUTLINED_FUNCTION_6_12();
  v11(v10);
  if (v7 <= 0)
  {
LABEL_5:
    uint64_t v13 = 1;
    uint64_t v12 = a1;
    goto LABEL_6;
  }
  swift_getWitnessTable();
  uint64_t v12 = a1;
  sub_191EE8B60();
  uint64_t v13 = 0;
LABEL_6:
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, AssociatedTypeWitness);
}

uint64_t sub_191DEBCE8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v3 = (char *)&v6 - v2;
  sub_191EE89C0();
  uint64_t v4 = sub_191EE8A50();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4;
}

uint64_t sub_191DEBDF8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v3 = (char *)&v6 - v2;
  sub_191EE8A60();
  uint64_t v4 = sub_191EE8A50();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4;
}

uint64_t *sub_191DEC308(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_191DEC3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_191DEC410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_191DEC460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_191DEC4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_191DEC500(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_191DEC64C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x191DEC850);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for SafeCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191DEC890()
{
  sub_191D5E944();
  uint64_t v0 = sub_191EE8D20();
  type metadata accessor for ThrottleScheduler();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  *(void *)(result + 24) = 0;
  qword_1E92F29D8 = result;
  return result;
}

uint64_t static ThrottleScheduler.main.getter()
{
  if (qword_1E92F29A8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t ThrottleScheduler.__allocating_init(label:qos:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191EE8D10();
  OUTLINED_FUNCTION_0();
  uint64_t v30 = v7;
  uint64_t v31 = v6;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_5_1();
  uint64_t v29 = v8;
  uint64_t v27 = sub_191EE8CE0();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_5_1();
  uint64_t v28 = v9;
  uint64_t v10 = sub_191EE7C60();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  unsigned int v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unint64_t v26 = a1;
  }
  else
  {
    unint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    uint64_t v25 = a3;
    sub_191EE9190();
    swift_bridgeObjectRelease();
    unint64_t v32 = 0xD000000000000021;
    unint64_t v33 = 0x8000000191EF6BA0;
    sub_191EE7680();
    sub_191EE7650();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
    sub_191EE8280();
    a3 = v25;
    swift_bridgeObjectRelease();
    unint64_t v26 = v32;
  }
  sub_191D5E944();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a3, v10);
  unint64_t v32 = MEMORY[0x1E4FBC860];
  uint64_t v22 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_191DDE334((unint64_t *)&qword_1EB50EE60, MEMORY[0x1E4FBCC10]);
  sub_191DED0D4(0, (unint64_t *)&qword_1EB50EE50, v22);
  sub_191DECC98((unint64_t *)&qword_1EB50EE58, (unint64_t *)&qword_1EB50EE50, v22);
  sub_191EE9060();
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v29, *MEMORY[0x1E4FBCC58], v31);
  uint64_t v23 = sub_191EE8D60();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v10);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v23;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t sub_191DECC98(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191DED0D4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ThrottleScheduler.precondition(block:)(void (*a1)(void *))
{
  uint64_t v4 = *v1;
  uint64_t v5 = sub_191EE7D00();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_41();
  uint64_t v9 = (void *)v1[2];
  *uint64_t v2 = v9;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v2, *MEMORY[0x1E4FBCBF0], v5);
  id v10 = v9;
  LOBYTE(v9) = sub_191EE7D30();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v2, v5);
  if (v9)
  {
    v12[3] = v4;
    v12[4] = &protocol witness table for ThrottleScheduler;
    v12[0] = v1;
    swift_retain();
    a1(v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ThrottleScheduler.schedule(delay:block:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v4 = v3;
  sub_191EE7C90();
  OUTLINED_FUNCTION_0();
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v21 = (char *)&v21 - v13;
  uint64_t v14 = sub_191EE7C00();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_41();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191D70378;
  aBlock[3] = &block_descriptor_4;
  _Block_copy(aBlock);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  unsigned int v15 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_191DDE334((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  sub_191DED0D4(0, (unint64_t *)&qword_1EB50E620, v15);
  sub_191DECC98((unint64_t *)&qword_1EB50E628, (unint64_t *)&qword_1EB50E620, v15);
  swift_retain();
  sub_191EE9060();
  sub_191EE7CF0();
  swift_allocObject();
  uint64_t v16 = sub_191EE7CD0();
  swift_release();
  *(void *)(v4 + 24) = v16;
  uint64_t result = swift_release();
  if (*(void *)(v4 + 24))
  {
    swift_retain();
    sub_191EE7C80();
    uint64_t v18 = v21;
    MEMORY[0x192FE6EC0](v12, a3);
    uint64_t v19 = v23;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v22 + 8);
    v20(v12, v23);
    sub_191EE8D00();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v20)(v18, v19);
  }
  return result;
}

void sub_191DED0D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191EE86B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

Swift::Void __swiftcall ThrottleScheduler.cancel()()
{
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_191EE7CE0();
    swift_release();
  }
}

uint64_t ThrottleScheduler.deinit()
{
  swift_release();
  return v0;
}

uint64_t ThrottleScheduler.__deallocating_deinit()
{
  ThrottleScheduler.deinit();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_191DED1D4(void (*a1)(void *))
{
  return ThrottleScheduler.precondition(block:)(a1);
}

uint64_t sub_191DED1F8(uint64_t a1, uint64_t a2, double a3)
{
  return ThrottleScheduler.schedule(delay:block:)(a1, a2, a3);
}

void sub_191DED21C()
{
}

uint64_t dispatch thunk of ThrottleScheduling.precondition(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ThrottleSchedulingQueue.schedule(delay:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ThrottleSchedulingQueue.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for ThrottleScheduler()
{
  return self;
}

uint64_t method lookup function for ThrottleScheduler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThrottleScheduler);
}

uint64_t NSURLSession.downloadData(from:completion:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v8 = sub_191EE7940();
  OUTLINED_FUNCTION_0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_2_24();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  uint64_t v13 = (id *)(v12 + 16);
  uint64_t v14 = (void *)sub_191EE6F00();
  unsigned int v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = v12;
  aBlock[4] = sub_191DED73C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191DED748;
  aBlock[3] = &block_descriptor_5;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v5, sel_dataTaskWithRequest_completionHandler_, v14, v16);
  _Block_release(v16);

  swift_beginAccess();
  uint64_t v18 = *(void **)(v12 + 16);
  *(void *)(v12 + 16) = v17;

  if (qword_1EB50DD40 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB513328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, v19, v8);
  swift_retain();
  uint64_t v20 = sub_191EE7920();
  os_log_type_t v21 = sub_191EE8CA0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134349056;
    if (!*v13)
    {
LABEL_13:
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    objc_msgSend(*v13, sel_taskIdentifier);
    sub_191EE8EA0();
    swift_release();
    _os_log_impl(&dword_191D4D000, v20, v21, "Scheduling URLSession data task. id=%{public}ld", v22, 0xCu);
    MEMORY[0x192FE9A10](v22, -1, -1);
  }
  else
  {

    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v8);
  if (!*v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(*v13, sel_resume);
  id v23 = *v13;
  if (*v13)
  {
    *(void *)(a3 + 24) = sub_191DEDBB4();
    *(void *)(a3 + 32) = &protocol witness table for NSURLSessionTask;
    *(void *)a3 = v23;
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  id v24 = v23;
  return swift_release();
}

uint64_t sub_191DED610()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_191DED648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, id, uint64_t), uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t v13 = *(void **)(a7 + 16);
  if (v13) {
    id v14 = objc_msgSend(v13, sel__incompleteTaskMetrics);
  }
  else {
    id v14 = 0;
  }
  a5(a1, a2, a3, v14, a4);
}

uint64_t sub_191DED6FC()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_191DED73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_191DED648(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, id, uint64_t))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_191DED748(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_191EE7500();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_191D76FF8((uint64_t)v6, v10);

  return swift_release();
}

void NSURLSession.downloadData(from:operationID:earliestBeginDate:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v11 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2_24();
  unsigned int v15 = (void *)sub_191EE6F00();
  id v16 = objc_msgSend(v6, sel_downloadTaskWithRequest_, v15);

  id v17 = v16;
  uint64_t v18 = (void *)sub_191EE75A0();
  objc_msgSend(v17, sel_setEarliestBeginDate_, v18);

  sub_191DEDBF4(a1, a2, v17);
  if (qword_1EB50DD40 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_191EE7940();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB513328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v5, a3, v11);
  id v20 = v17;
  os_log_type_t v21 = sub_191EE7920();
  os_log_type_t v22 = sub_191EE8CA0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v35 = v33;
    *(_DWORD *)uint64_t v23 = 134349570;
    objc_msgSend(v20, sel_taskIdentifier);
    sub_191EE8EA0();
    *(_WORD *)(v23 + 12) = 2082;
    uint64_t v34 = a4;
    uint64_t v24 = sub_191EE7620();
    sub_191D76D74(v24, v25, &v35);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    uint64_t v26 = OUTLINED_FUNCTION_1_24();
    v27(v26);
    *(_WORD *)(v23 + 22) = 2082;
    uint64_t v28 = sub_191DA5610(v20);
    if (v29)
    {
      unint64_t v30 = v29;
    }
    else
    {
      uint64_t v28 = 7104878;
      unint64_t v30 = 0xE300000000000000;
    }
    sub_191D76D74(v28, v30, &v35);
    sub_191EE8EA0();

    a4 = v34;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v21, v22, "Scheduling URLSession download task. id=%{public}ld, beginData=%{public}s, description=%{public}s", (uint8_t *)v23, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v33, -1, -1);
    MEMORY[0x192FE9A10](v23, -1, -1);
  }
  else
  {
    uint64_t v31 = OUTLINED_FUNCTION_1_24();
    v32(v31);
  }
  objc_msgSend(v20, sel_resume);
  a4[3] = sub_191DEDBB4();
  a4[4] = &protocol witness table for NSURLSessionTask;

  *a4 = v20;
}

uint64_t sub_191DEDB6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return NSURLSession.downloadData(from:completion:)(a1, a2, a3);
}

void sub_191DEDB90(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
}

unint64_t sub_191DEDBB4()
{
  unint64_t result = qword_1EB50D3A8;
  if (!qword_1EB50D3A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB50D3A8);
  }
  return result;
}

void sub_191DEDBF4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_191EE80E0();
  objc_msgSend(a3, sel_setTaskDescription_, v4);
}

uint64_t dispatch thunk of URLSessionType.downloadData(from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of URLSessionType.downloadData(from:operationID:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t StateMachineTransition.__allocating_init(state:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_17();
  StateMachineTransition.init(state:)(v0);
  return v1;
}

uint64_t *StateMachineTransition.init(state:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(_OWORD *)(v1 + 3) = 0u;
  *(_OWORD *)(v1 + 5) = 0u;
  *(_OWORD *)(v1 + 7) = 0u;
  *(_OWORD *)(v1 + 9) = 0u;
  *(_OWORD *)(v1 + 11) = 0u;
  *(_OWORD *)(v1 + 13) = 0u;
  *(_OWORD *)(v1 + 15) = 0u;
  uint64_t v5 = *(void *)(v3 + 80);
  sub_191D5E674(v5, v5);
  uint64_t v6 = *(void *)(v5 - 8);
  swift_allocObject();
  uint64_t v7 = sub_191EE8560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_191D5E704();
  if (MEMORY[0x192FE7820]())
  {
    uint64_t v9 = sub_191DEE3CC(v7, v5, *(void *)(*(void *)(v4 + 96) + 8));
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC870];
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  v1[2] = v9;
  return v1;
}

double StateMachineTransition.__allocating_init(states:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_17();
  double result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t StateMachineTransition.init(states:)(uint64_t a1)
{
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t StateMachineTransition.canTry(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 24);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  OUTLINED_FUNCTION_0_20(v3);

  return swift_retain();
}

uint64_t StateMachineTransition.willEnter(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 40);
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  OUTLINED_FUNCTION_0_20(v3);

  return swift_retain();
}

uint64_t StateMachineTransition.willEnterFailed(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 56);
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  OUTLINED_FUNCTION_0_20(v3);

  return swift_retain();
}

uint64_t StateMachineTransition.didEnter(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 72);
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  OUTLINED_FUNCTION_0_20(v3);

  return swift_retain();
}

uint64_t StateMachineTransition.willExit(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 88);
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  OUTLINED_FUNCTION_0_20(v3);

  return swift_retain();
}

uint64_t StateMachineTransition.willExitFailed(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 104);
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  OUTLINED_FUNCTION_0_20(v3);

  return swift_retain();
}

uint64_t StateMachineTransition.didExit(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 120);
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  OUTLINED_FUNCTION_0_20(v3);

  return swift_retain();
}

uint64_t sub_191DEE068(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (!v2) {
    return 1;
  }
  swift_retain();
  LOBYTE(a1) = v2(a1);
  uint64_t v4 = OUTLINED_FUNCTION_32();
  sub_191D771B4(v4);
  return a1 & 1;
}

uint64_t sub_191DEE0C8(uint64_t result)
{
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 40);
  if (v2)
  {
    uint64_t v3 = result;
    swift_retain();
    v2(v3);
    return sub_191D771B4((uint64_t)v2);
  }
  return result;
}

uint64_t sub_191DEE124(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 56);
  if (v3)
  {
    uint64_t v5 = result;
    swift_retain();
    v3(v5, a2);
    uint64_t v6 = OUTLINED_FUNCTION_32();
    return sub_191D771B4(v6);
  }
  return result;
}

uint64_t sub_191DEE198(uint64_t result)
{
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 72);
  if (v2)
  {
    uint64_t v3 = result;
    swift_retain();
    v2(v3);
    uint64_t v4 = OUTLINED_FUNCTION_32();
    return sub_191D771B4(v4);
  }
  return result;
}

uint64_t sub_191DEE204(uint64_t result)
{
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 88);
  if (v2)
  {
    uint64_t v3 = result;
    swift_retain();
    v2(v3);
    return sub_191D771B4((uint64_t)v2);
  }
  return result;
}

uint64_t sub_191DEE260(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 104);
  if (v3)
  {
    uint64_t v5 = result;
    swift_retain();
    v3(v5, a2);
    uint64_t v6 = OUTLINED_FUNCTION_32();
    return sub_191D771B4(v6);
  }
  return result;
}

uint64_t sub_191DEE2D4(uint64_t result)
{
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 120);
  if (v2)
  {
    uint64_t v3 = result;
    swift_retain();
    v2(v3);
    uint64_t v4 = OUTLINED_FUNCTION_32();
    return sub_191D771B4(v4);
  }
  return result;
}

uint64_t *StateMachineTransition.deinit()
{
  swift_bridgeObjectRelease();
  sub_191D771B4(v0[3]);
  sub_191D771B4(v0[5]);
  sub_191D771B4(v0[7]);
  sub_191D771B4(v0[9]);
  sub_191D771B4(v0[11]);
  sub_191D771B4(v0[13]);
  sub_191D771B4(v0[15]);
  return v0;
}

uint64_t StateMachineTransition.__deallocating_deinit()
{
  StateMachineTransition.deinit();

  return MEMORY[0x1F4186488](v0, 136, 7);
}

uint64_t sub_191DEE3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v49 = (char *)&v37 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v37 - v13;
  if (MEMORY[0x192FE77B0](v12))
  {
    sub_191EE9150();
    uint64_t v15 = sub_191EE9140();
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBC870];
  }
  uint64_t v42 = MEMORY[0x192FE7820](v5, a2);
  if (v42)
  {
    uint64_t v38 = v7;
    uint64_t v39 = v6;
    uint64_t v16 = 0;
    char v47 = (uint64_t (**)(char *, uint64_t *, uint64_t))(v6 + 16);
    uint64_t v48 = v15 + 56;
    uint64_t v44 = v6 + 32;
    char v46 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v40 = v5;
    uint64_t v41 = v14;
    while (1)
    {
      char v17 = sub_191EE85E0();
      sub_191EE8570();
      if (v17)
      {
        uint64_t v18 = *(uint64_t (**)(char *, uint64_t *, uint64_t))(v6 + 16);
        uint64_t result = v18(v14, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16), a2);
      }
      else
      {
        uint64_t result = sub_191EE91C0();
        if (v38 != 8) {
          goto LABEL_24;
        }
        uint64_t v50 = result;
        uint64_t v18 = *v47;
        (*v47)(v14, &v50, a2);
        uint64_t result = swift_unknownObjectRelease();
      }
      BOOL v20 = __OFADD__(v16, 1);
      uint64_t v21 = v16 + 1;
      if (v20) {
        break;
      }
      uint64_t v45 = v21;
      char v43 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v43(v49, v14, a2);
      uint64_t v22 = v15;
      uint64_t v23 = sub_191EE7F90() & ~(-1 << *(unsigned char *)(v15 + 32));
      OUTLINED_FUNCTION_2_25();
      uint64_t v28 = *(void *)(v6 + 72);
      if ((v26 & v25) != 0)
      {
        uint64_t v29 = ~v27;
        while (1)
        {
          v18(v9, (uint64_t *)(*(void *)(v22 + 48) + v28 * v23), a2);
          uint64_t v30 = a3;
          char v31 = sub_191EE80C0();
          unint64_t v32 = *v46;
          (*v46)(v9, a2);
          if (v31) {
            break;
          }
          uint64_t v23 = (v23 + 1) & v29;
          OUTLINED_FUNCTION_2_25();
          a3 = v30;
          if ((v25 & v26) == 0)
          {
            uint64_t v6 = v39;
            uint64_t v5 = v40;
            goto LABEL_14;
          }
        }
        v32(v49, a2);
        a3 = v30;
        uint64_t v6 = v39;
        uint64_t v5 = v40;
        uint64_t v15 = v22;
      }
      else
      {
LABEL_14:
        uint64_t v33 = v49;
        *(void *)(v48 + 8 * v24) = v26 | v25;
        uint64_t v34 = *(void *)(v22 + 48) + v28 * v23;
        uint64_t v15 = v22;
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v43)(v34, v33, a2);
        uint64_t v35 = *(void *)(v22 + 16);
        BOOL v20 = __OFADD__(v35, 1);
        uint64_t v36 = v35 + 1;
        if (v20) {
          goto LABEL_23;
        }
        *(void *)(v22 + 16) = v36;
      }
      uint64_t v14 = v41;
      uint64_t v16 = v45;
      if (v45 == v42) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_191DEE768()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for StateMachineTransition()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for StateMachineTransition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StateMachineTransition);
}

uint64_t dispatch thunk of StateMachineTransition.__allocating_init(state:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of StateMachineTransition.__allocating_init(states:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t Throttle.__allocating_init(delay:scheduler:)(double a1)
{
  uint64_t v2 = swift_allocObject();
  Throttle.init(delay:scheduler:)(a1);
  return v2;
}

uint64_t Throttle.init(delay:scheduler:)(double a1)
{
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  *(double *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_0_5();
  (*(void (**)(void))(*(void *)(*(void *)(v2 + 80) - 8) + 32))();
  return v1;
}

uint64_t Throttle.throttle(block:)()
{
  OUTLINED_FUNCTION_0_5();
  uint64_t v7 = v0;
  uint64_t v8 = v1;
  uint64_t v9 = v2;
  OUTLINED_FUNCTION_0_5();
  return v4(sub_191DEEB00, &v6, *(void *)(v3 + 80));
}

uint64_t sub_191DEE978(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  if (*((unsigned char *)a2 + 24) == 1)
  {
    uint64_t v5 = a2[4];
    a2[4] = (uint64_t)a3;
    a2[5] = a4;
    sub_191D771B4(v5);
    return swift_retain();
  }
  else
  {
    uint64_t v8 = *a2;
    *((unsigned char *)a2 + 24) = 1;
    a3();
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    double v11 = *((double *)a2 + 2);
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = *(void *)(v8 + 80);
    v13[3] = *(void *)(v8 + 88);
    v13[4] = v12;
    uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t, double))(v10 + 8);
    swift_retain();
    v14(sub_191DEEEF0, v13, v9, v10, v11);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_191DEEB00(void *a1)
{
  return sub_191DEE978(a1, *(uint64_t **)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_191DEEB0C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 32);
    *(unsigned char *)(result + 24) = 0;
    if (v1)
    {
      uint64_t v2 = *(void *)(result + 40);
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      swift_retain();
      sub_191D771B4(v1);
      Throttle.throttle(block:)(v1, v2);
      swift_release();
      return sub_191D771B4(v1);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

Swift::Void __swiftcall Throttle.reset()()
{
  OUTLINED_FUNCTION_0_5();
  (*(void (**)(uint64_t (*)(void *)))(*(void *)(v0 + 88) + 8))(sub_191DEECA4);
}

uint64_t sub_191DEEC40(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  uint64_t result = sub_191D771B4(v5);
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_191DEECA4(void *a1)
{
  return sub_191DEEC40(a1, v1);
}

uint64_t *Throttle.deinit()
{
  uint64_t v1 = *v0;
  sub_191D771B4(v0[4]);
  (*(void (**)(char *))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((char *)v0 + *(void *)(*v0 + 120));
  return v0;
}

uint64_t Throttle.__deallocating_deinit()
{
  Throttle.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_191DEED84()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Throttle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Throttle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Throttle);
}

uint64_t dispatch thunk of Throttle.__allocating_init(delay:scheduler:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_191DEEE80()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191DEEEB8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191DEEEF0()
{
  return sub_191DEEB0C();
}

uint64_t ThreadsafeSet.isEmpty.getter()
{
  UnfairLock.lock()();
  OUTLINED_FUNCTION_1_25();
  OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_0_22();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  char v1 = sub_191EE8940();
  swift_bridgeObjectRelease();
  sub_191D83280(v0);
  return v1 & 1;
}

uint64_t ThreadsafeSet.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ThreadsafeSet.init()();
  return v0;
}

uint64_t ThreadsafeSet.init()()
{
  uint64_t v2 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v0 + 16) = UnfairLock.init(options:)((int *)&v2);
  OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_0_22();
  *(void *)(v0 + 24) = sub_191EE7DC0();
  return v0;
}

uint64_t ThreadsafeSet.contains(_:)()
{
  UnfairLock.lock()();
  OUTLINED_FUNCTION_1_25();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  char v1 = sub_191EE8960();
  swift_bridgeObjectRelease();
  sub_191D83280(v0);
  return v1 & 1;
}

uint64_t ThreadsafeSet.insert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - v7;
  UnfairLock.lock()();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  swift_beginAccess();
  sub_191EE8980();
  char v9 = sub_191EE8920();
  swift_endAccess();
  sub_191D83280(v3);
  return v9 & 1;
}

void ThreadsafeSet.remove(_:)()
{
  UnfairLock.lock()();
  swift_beginAccess();
  sub_191EE8980();
  sub_191EE8930();
  swift_endAccess();
  sub_191D83280(v0);
}

uint64_t ThreadsafeSet.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ThreadsafeSet.__deallocating_deinit()
{
  ThreadsafeSet.deinit();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_191DEF358()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ThreadsafeSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ThreadsafeSet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThreadsafeSet);
}

uint64_t dispatch thunk of ThreadsafeSet.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_191DEF3F0(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_191D93944();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (void *)sub_191EE73F0();
  uint64_t v30 = *(v9 - 1);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v29 = (char *)&v26 - v12;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  for (; v13; uint64_t v13 = sub_191EE94B0())
  {
    unint64_t v33 = a1 & 0xC000000000000001;
    uint64_t v31 = v30 + 32;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    uint64_t v14 = 4;
    uint64_t v27 = a2;
    unint64_t v28 = a1;
    uint64_t v32 = v13;
    uint64_t v15 = (void (**)(char *, char *, uint64_t))(v30 + 32);
    while (1)
    {
      uint64_t v16 = (uint64_t)v9;
      char v17 = v33 ? (void *)MEMORY[0x192FE8380](v14 - 4, a1) : *(id *)(a1 + 8 * v14);
      char v9 = v17;
      uint64_t v18 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      id v36 = v17;
      sub_191DF241C(&v36, a2, (uint64_t)v8);
      if (v3)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      char v9 = (void *)v16;
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v16) == 1)
      {
        sub_191DF4104((uint64_t)v8, (void (*)(void))sub_191D93944);
      }
      else
      {
        uint64_t v19 = *v15;
        BOOL v20 = v29;
        (*v15)(v29, v8, v16);
        v19(v34, v20, v16);
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v21 = v35;
        }
        else
        {
          sub_191DCBD48();
          uint64_t v21 = v24;
        }
        unint64_t v22 = *(void *)(v21 + 16);
        if (v22 >= *(void *)(v21 + 24) >> 1)
        {
          sub_191DCBD48();
          uint64_t v21 = v25;
        }
        *(void *)(v21 + 16) = v22 + 1;
        unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        uint64_t v35 = v21;
        char v9 = (void *)v16;
        v19((char *)(v21 + v23 + *(void *)(v30 + 72) * v22), v34, v16);
        a2 = v27;
        a1 = v28;
      }
      ++v14;
      if (v18 == v32) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
LABEL_22:

  swift_bridgeObjectRelease();
}

id DiagnosticFileCollector.__allocating_init(diagnosticDumpDir:diagnosticDumpNotificationName:diagnosticFilesNotificationName:diagnosticFileListURL:log:)()
{
  OUTLINED_FUNCTION_10_11();
  uint64_t v0 = OUTLINED_FUNCTION_9_8();
  return DiagnosticFileCollector.init(diagnosticDumpDir:diagnosticDumpNotificationName:diagnosticFilesNotificationName:diagnosticFileListURL:log:)(v0, v1, v2, v3, v4, v5, v6);
}

id DiagnosticFileCollector.init(diagnosticDumpDir:diagnosticDumpNotificationName:diagnosticFilesNotificationName:diagnosticFileListURL:log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v26 = a7;
  uint64_t v27 = a2;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v28 = a3;
  Class ObjectType = (Class)swift_getObjectType();
  uint64_t v9 = sub_191EE7940();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191EE73F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&ObjectType - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&ObjectType - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v19((char *)&ObjectType - v17, a1, v12);
  v19(v16, a6, v12);
  id v20 = v26;
  sub_191EE7950();
  id v21 = objc_allocWithZone(ObjectType);
  id v22 = DiagnosticFileCollector.init(diagnosticDumpDir:diagnosticDumpNotificationName:diagnosticFilesNotificationName:diagnosticFileListURL:logger:)((uint64_t)v18, v27, v28, v29, v30, (uint64_t)v16, (uint64_t)v11);

  unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v23(a6, v12);
  v23(a1, v12);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v22;
}

id DiagnosticFileCollector.__allocating_init(diagnosticDumpDir:diagnosticDumpNotificationName:diagnosticFilesNotificationName:diagnosticFileListURL:logger:)()
{
  OUTLINED_FUNCTION_10_11();
  uint64_t v0 = OUTLINED_FUNCTION_9_8();
  return DiagnosticFileCollector.init(diagnosticDumpDir:diagnosticDumpNotificationName:diagnosticFilesNotificationName:diagnosticFileListURL:logger:)(v0, v1, v2, v3, v4, v5, v6);
}

id DiagnosticFileCollector.init(diagnosticDumpDir:diagnosticDumpNotificationName:diagnosticFilesNotificationName:diagnosticFileListURL:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  Class ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v7[OBJC_IVAR___TFDiagnosticFileCollector_diagnosticFileProviders] = MEMORY[0x1E4FBC860];
  uint64_t v12 = OBJC_IVAR___TFDiagnosticFileCollector_lock;
  uint64_t v35 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v13 = v7;
  *(void *)&v7[v12] = UnfairLock.init(options:)((int *)&v35);
  uint64_t v14 = &v13[OBJC_IVAR___TFDiagnosticFileCollector_diagnosticDumpDir];
  uint64_t v15 = sub_191EE73F0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v18(v14, a1, v15);
  uint64_t v19 = &v13[OBJC_IVAR___TFDiagnosticFileCollector_diagnosticFilesNotificationName];
  *(void *)uint64_t v19 = a4;
  *((void *)v19 + 1) = a5;
  v18(&v13[OBJC_IVAR___TFDiagnosticFileCollector_diagnosticFileListURL], a6, v15);
  id v20 = &v13[OBJC_IVAR___TFDiagnosticFileCollector_logger];
  uint64_t v21 = sub_191EE7940();
  OUTLINED_FUNCTION_0_0();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a7, v21);

  v34.receiver = v13;
  v34.super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v34, sel_init);
  uint64_t v25 = CFNotificationCenterGetDarwinNotifyCenter();
  id v26 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  uint64_t v27 = v26;
  CFNotificationCenterAddObserver(v25, v24, (CFNotificationCallback)sub_191DF0520, v27, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a7, v21);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v28(a6, v15);
  v28(a1, v15);
  return v24;
}

void sub_191DEFD7C(uint64_t a1, void *a2)
{
  sub_191D5AC98();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v6 = a2;
    uint64_t v7 = sub_191EE7920();
    os_log_type_t v8 = sub_191EE8C60();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_191D4D000, v7, v8, "Received diagnostic dump notification; collecting files from providers",
        v9,
        2u);
      MEMORY[0x192FE9A10](v9, -1, -1);
    }

    uint64_t v10 = sub_191EE87D0();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v10);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v6;
    id v12 = v6;
    sub_191D5ACF0((uint64_t)v5, (uint64_t)&unk_1E92F3900, (uint64_t)v11);
    swift_release();
  }
}

uint64_t sub_191DEFEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 32) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_191DEFF78;
  return sub_191DF0264();
}

uint64_t sub_191DEFF78()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_5_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_0();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_8_1();
    return v10();
  }
}

uint64_t sub_191DF0070()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_191EE7920();
  os_log_type_t v5 = sub_191EE8C80();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 40);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v10;
    sub_191EE8EA0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_191D4D000, v4, v5, "Failed to collect diagnostic files; error=%@", v7, 0xCu);
    sub_191DF4290(0, (unint64_t *)&qword_1EB50E140, (uint64_t (*)(uint64_t))sub_191DF42F4, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v8, -1, -1);
    MEMORY[0x192FE9A10](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 40);
  }
  OUTLINED_FUNCTION_8_1();
  return v12();
}

uint64_t sub_191DF0264()
{
  v1[2] = v0;
  uint64_t v2 = sub_191EE73F0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  id v3 = (void *)swift_task_alloc();
  v1[6] = v3;
  *id v3 = v1;
  v3[1] = sub_191DF0350;
  return sub_191DF0AD4();
}

uint64_t sub_191DF0350()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_5_0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 56) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_191DF0420()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0[2] + OBJC_IVAR___TFDiagnosticFileCollector_diagnosticFileListURL, v4);
  sub_191DF0EEC(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  sub_191DF1514();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v5();
}

void sub_191DF0520(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v11 = a1;
  id v9 = a3;
  id v10 = a5;
  sub_191DEFD7C((uint64_t)a1, a2);
}

id DiagnosticFileCollector.__deallocating_deinit()
{
  Class ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(v2, v0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void DiagnosticFileCollector.add(diagnosticFileProvider:)()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___TFDiagnosticFileCollector_lock);
  UnfairLock.lock()();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR___TFDiagnosticFileCollector_diagnosticFileProviders);
  OUTLINED_FUNCTION_3_1();
  uint64_t v3 = swift_unknownObjectRetain();
  MEMORY[0x192FE76B0](v3);
  sub_191D742B4(*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_191EE85F0();
  sub_191EE8550();
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

void DiagnosticFileCollector.remove(diagnosticFileProvider:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___TFDiagnosticFileCollector_lock);
  UnfairLock.lock()();
  objc_super v4 = (unint64_t *)(v1 + OBJC_IVAR___TFDiagnosticFileCollector_diagnosticFileProviders);
  OUTLINED_FUNCTION_3_1();
  swift_unknownObjectRetain();
  int64_t v5 = sub_191DF35DC(v4, a1);
  if (*v4 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v6 = sub_191EE94B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 < v5)
  {
    __break(1u);
  }
  else
  {
    sub_191DF3068(v5, v6);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  }
}

void sub_191DF0908(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

uint64_t DiagnosticFileCollector.diagnosticFiles()()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_191DF0A08;
  return sub_191DF0AD4();
}

uint64_t sub_191DF0A08()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4();
  *objc_super v4 = v3;
  swift_task_dealloc();
  int64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_191DF0AD4()
{
  *(void *)(v1 + 56) = v0;
  return MEMORY[0x1F4188298](sub_191DF0AF4, 0, 0);
}

uint64_t sub_191DF0AF4()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v1 = v0[7];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___TFDiagnosticFileCollector_lock);
  UnfairLock.lock()();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___TFDiagnosticFileCollector_diagnosticFileProviders);
  swift_beginAccess();
  uint64_t v4 = *v3;
  v0[8] = *v3;
  int64_t v5 = *(os_unfair_lock_s **)(v2 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  os_unfair_lock_unlock(v5);
  sub_191DCFCF0(0);
  uint64_t v7 = v6;
  uint64_t v8 = swift_task_alloc();
  v0[9] = v8;
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v1;
  id v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *id v9 = v0;
  v9[1] = sub_191DF0C48;
  return MEMORY[0x1F4187F28](v0 + 5, v7, v7, 0, 0, &unk_1E92F3898, v8, v7);
}

uint64_t sub_191DF0C48()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_191DF0D48()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v1 = v0[5];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v2 = sub_191EE7920();
  os_log_type_t v3 = sub_191EE8C60();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    v0[6] = *(void *)(v1 + 16);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v2, v3, "Collected %ld diagnostic files", v4, 0xCu);
    MEMORY[0x192FE9A10](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v1);
}

id DiagnosticFileCollector.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DiagnosticFileCollector.init()()
{
}

uint64_t sub_191DF0EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a1;
  v55[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_191EE8190();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v45 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191EE73F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v52 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v44 - v9;
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_defaultManager);
  sub_191EE73A0();
  uint64_t v13 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  unsigned int v14 = objc_msgSend(v12, sel_fileExistsAtPath_, v13);

  uint64_t v15 = a2;
  uint64_t v53 = v5;
  if (v14)
  {
    id v16 = objc_msgSend(v11, sel_defaultManager);
    uint64_t v17 = (void *)sub_191EE7350();
    v55[0] = 0;
    unsigned int v18 = objc_msgSend(v16, sel_removeItemAtURL_error_, v17, v55);

    if (!v18)
    {
      id v43 = v55[0];
      sub_191EE7300();

      return swift_willThrow();
    }
    id v19 = v55[0];
    uint64_t v5 = v53;
  }
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v51 = v6 + 16;
  v50(v10, a2, v5);
  id v20 = sub_191EE7920();
  os_log_type_t v21 = sub_191EE8C60();
  uint64_t v22 = v6;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    id v24 = (void *)swift_slowAlloc();
    v55[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    unint64_t v49 = (void (*)(char *, uint64_t))(v23 + 4);
    sub_191DF4334((unint64_t *)&qword_1E92F3910, MEMORY[0x1E4F276F0]);
    uint64_t v25 = sub_191EE9620();
    uint64_t v54 = sub_191D76D74(v25, v26, (uint64_t *)v55);
    uint64_t v5 = v53;
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    unint64_t v49 = *(void (**)(char *, uint64_t))(v22 + 8);
    v49(v10, v5);
    _os_log_impl(&dword_191D4D000, v20, v21, "Writing diagnostic file list to %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v24, -1, -1);
    MEMORY[0x192FE9A10](v23, -1, -1);
  }
  else
  {

    unint64_t v49 = *(void (**)(char *, uint64_t))(v6 + 8);
    v49(v10, v5);
  }
  uint64_t v28 = v47;
  uint64_t v27 = v48;
  uint64_t v29 = *(void *)(v48 + 16);
  uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
  if (v29)
  {
    v44[1] = v15;
    v55[0] = (id)MEMORY[0x1E4FBC860];
    sub_191D6382C();
    uint64_t v31 = v27 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v48 = *(void *)(v22 + 72);
    do
    {
      uint64_t v32 = v52;
      v50(v52, v31, v5);
      uint64_t v33 = sub_191EE73A0();
      uint64_t v35 = v34;
      v49(v32, v5);
      uint64_t v30 = v55[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191D6382C();
        uint64_t v30 = v55[0];
      }
      unint64_t v36 = v30[2];
      if (v36 >= v30[3] >> 1)
      {
        sub_191D6382C();
        uint64_t v30 = v55[0];
      }
      void v30[2] = v36 + 1;
      uint64_t v37 = &v30[2 * v36];
      v37[4] = v33;
      v37[5] = v35;
      v31 += v48;
      --v29;
      uint64_t v5 = v53;
    }
    while (v29);
    uint64_t v28 = v47;
  }
  v55[0] = v30;
  sub_191D78A5C();
  sub_191DF4334((unint64_t *)&qword_1EB50DBA0, (void (*)(uint64_t))sub_191D78A5C);
  uint64_t v38 = (void *)sub_191EE7FE0();
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  v55[0] = v38;
  v55[1] = v40;
  uint64_t v41 = v45;
  sub_191EE8170();
  sub_191D63A18();
  sub_191EE8F20();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v28);
  return swift_bridgeObjectRelease();
}

void sub_191DF1514()
{
  uint64_t v0 = sub_191EE7920();
  os_log_type_t v1 = sub_191EE8C60();
  if (os_log_type_enabled(v0, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_191D4D000, v0, v1, "Posting diagnostic files notification", v2, 2u);
    MEMORY[0x192FE9A10](v2, -1, -1);
  }

  uint64_t v3 = CFNotificationCenterGetDarwinNotifyCenter();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  name = (__CFString *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  CFNotificationCenterPostNotification(v3, name, 0, 0, 1u);
}

uint64_t sub_191DF162C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  sub_191D5AC98();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191DF16E8, 0, 0);
}

uint64_t sub_191DF16E8()
{
  unint64_t v1 = *(void *)(v0 + 144);
  if (v1 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = sub_191EE94B0();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v2) {
      goto LABEL_25;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  unint64_t v36 = v1 & 0xC000000000000001;
  uint64_t v35 = *(void *)(v0 + 144) + 32;
  uint64_t v37 = v2;
  do
  {
    if (v36)
    {
      uint64_t v5 = MEMORY[0x192FE8380](v4, *(void *)(v0 + 144));
    }
    else
    {
      uint64_t v5 = *(void *)(v35 + 8 * v4);
      swift_unknownObjectRetain();
    }
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 184);
    uint64_t v8 = sub_191EE87D0();
    __swift_storeEnumTagSinglePayload(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v5;
    sub_191DF3E08(v6, v7);
    LODWORD(v7) = __swift_getEnumTagSinglePayload(v7, 1, v8);
    swift_unknownObjectRetain();
    if (v7 == 1)
    {
      sub_191DF4104(*(void *)(v0 + 176), (void (*)(void))sub_191D5AC98);
    }
    else
    {
      sub_191EE87C0();
      OUTLINED_FUNCTION_19();
      uint64_t v10 = OUTLINED_FUNCTION_17_8();
      v11(v10);
    }
    uint64_t v38 = v5;
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_191EE8700();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v14 = 0;
    }
    uint64_t v15 = **(void **)(v0 + 136);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = &unk_1E92F38B8;
    *(void *)(v16 + 24) = v9;
    sub_191DCFCF0(0);
    uint64_t v17 = v14 | v12;
    if (v14 | v12)
    {
      uint64_t v17 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v12;
      *(void *)(v0 + 40) = v14;
    }
    uint64_t v18 = *(void *)(v0 + 184);
    uint64_t v19 = *(void *)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 168);
    os_log_type_t v21 = *(void **)(v0 + 152);
    *(void *)(v0 + 80) = 1;
    *(void *)(v0 + 88) = v17;
    *(void *)(v0 + 96) = v15;
    swift_task_create();
    swift_release();
    sub_191DF4104(v18, (void (*)(void))sub_191D5AC98);
    __swift_storeEnumTagSinglePayload(v20, 1, 1, v8);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    v22[4] = v38;
    v22[5] = v21;
    sub_191DF3E08(v20, v19);
    LODWORD(v19) = __swift_getEnumTagSinglePayload(v19, 1, v8);
    swift_unknownObjectRetain();
    id v23 = v21;
    if (v19 == 1)
    {
      sub_191DF4104(*(void *)(v0 + 160), (void (*)(void))sub_191D5AC98);
    }
    else
    {
      sub_191EE87C0();
      OUTLINED_FUNCTION_19();
      uint64_t v24 = OUTLINED_FUNCTION_17_8();
      v25(v24);
    }
    if (v22[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v26 = sub_191EE8700();
      uint64_t v28 = v27;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    uint64_t v29 = **(void **)(v0 + 136);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = &unk_1E92F38C8;
    *(void *)(v30 + 24) = v22;
    uint64_t v31 = v28 | v26;
    if (v28 | v26)
    {
      uint64_t v31 = v0 + 48;
      *(void *)(v0 + 48) = 0;
      *(void *)(v0 + 56) = 0;
      *(void *)(v0 + 64) = v26;
      *(void *)(v0 + 72) = v28;
    }
    ++v4;
    uint64_t v32 = *(void *)(v0 + 168);
    *(void *)(v0 + 104) = 1;
    *(void *)(v0 + 112) = v31;
    *(void *)(v0 + 120) = v29;
    swift_task_create();
    swift_unknownObjectRelease();
    swift_release();
    sub_191DF4104(v32, (void (*)(void))sub_191D5AC98);
  }
  while (v37 != v4);
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v33 = **(void **)(v0 + 136);
  uint64_t v39 = (uint64_t (*)(uint64_t))((char *)&dword_1E92F38D8 + dword_1E92F38D8);
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_191DF1C14;
  return v39(v33);
}

uint64_t sub_191DF1C14()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_5_0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 200) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_191DF1CE4()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v1 + 32);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v4 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v5 = *v3;
      uint64_t v6 = *(void *)(*v3 + 16);
      uint64_t v7 = *(void *)(v4 + 16);
      if (__OFADD__(v7, v6)) {
        break;
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v6 > *(void *)(v4 + 24) >> 1)
      {
        sub_191DCBD48();
        uint64_t v4 = v8;
      }
      if (*(void *)(v5 + 16))
      {
        uint64_t v9 = *(void *)(v4 + 16);
        uint64_t v10 = (*(void *)(v4 + 24) >> 1) - v9;
        uint64_t v11 = *(void *)(sub_191EE73F0() - 8);
        uint64_t v12 = *(void *)(v11 + 72);
        if (v10 < v6) {
          goto LABEL_26;
        }
        unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
        unint64_t v14 = v4 + v13 + v12 * v9;
        unint64_t v15 = v5 + v13;
        uint64_t v16 = v12 * v6;
        unint64_t v17 = v14 + v16;
        unint64_t v18 = v15 + v16;
        if (v15 < v17 && v14 < v18) {
          return sub_191EE94F0();
        }
        swift_arrayInitWithCopy();
        if (v6)
        {
          uint64_t v20 = *(void *)(v4 + 16);
          BOOL v21 = __OFADD__(v20, v6);
          uint64_t v22 = v20 + v6;
          if (v21) {
            goto LABEL_27;
          }
          *(void *)(v4 + 16) = v22;
        }
      }
      else if (v6)
      {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      ++v3;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return sub_191EE94F0();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
LABEL_21:
    id v23 = *(void **)(v0 + 128);
    swift_bridgeObjectRelease();
    *id v23 = v4;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_8_1();
    return v24();
  }
}

uint64_t sub_191DF1F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 128) = a1;
  *(void *)(v4 + 136) = a4;
  return MEMORY[0x1F4188298](sub_191DF1F64, 0, 0);
}

uint64_t sub_191DF1F64()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_191DF205C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_191DF212C;
  v0[13] = &block_descriptor_24;
  v0[14] = v2;
  objc_msgSend(v1, sel_diagnosticFilesWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_191DF205C()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_7_13();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v2 = v1;
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_191DF210C()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  OUTLINED_FUNCTION_8_1();
  return v1();
}

uint64_t sub_191DF212C(uint64_t a1, uint64_t a2)
{
  return sub_191DF23D4(a1, a2, MEMORY[0x1E4F276F0]);
}

uint64_t sub_191DF2144(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x1F41881F8]();
}

uint64_t sub_191DF2164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  v5[16] = a1;
  return MEMORY[0x1F4188298](sub_191DF2188, 0, 0);
}

uint64_t sub_191DF2188()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_191DF2280;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_191DF23BC;
  v0[13] = &block_descriptor;
  v0[14] = v2;
  objc_msgSend(v1, sel_diagnosticDataWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_191DF2280()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_7_13();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v2 = v1;
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_191DF2330()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v1 = *(void **)(v0 + 128);
  sub_191DEF3F0(*(void *)(v0 + 120), *(id *)(v0 + 144));
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  *uint64_t v1 = v3;
  OUTLINED_FUNCTION_8_1();
  return v4();
}

uint64_t sub_191DF23BC(uint64_t a1, uint64_t a2)
{
  return sub_191DF23D4(a1, a2, (void (*)(void))type metadata accessor for DiagnosticData);
}

uint64_t sub_191DF23D4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 32);
  a3(0);
  uint64_t v4 = sub_191EE8520();
  return sub_191DF2144(v3, v4);
}

uint64_t sub_191DF241C@<X0>(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  id v7 = *a1;
  id v8 = a2;
  uint64_t v9 = (char *)v7;
  id v10 = v8;
  uint64_t v11 = sub_191EE7920();
  os_log_type_t v12 = sub_191EE8C60();
  uint64_t v39 = a3;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v37 = v3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v40 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v15 = *(void *)&v9[OBJC_IVAR___TFDiagnosticData_filename];
    unint64_t v16 = *(void *)&v9[OBJC_IVAR___TFDiagnosticData_filename + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D76D74(v15, v16, &v40);
    sub_191EE8EA0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v17 = sub_191EE7390();
    sub_191D76D74(v17, v18, &v40);
    sub_191EE8EA0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v11, v12, "Writing diagnostic data with filename=%s to diagnostic cache dir=%s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v14, -1, -1);
    uint64_t v19 = v13;
    uint64_t v4 = v37;
    MEMORY[0x192FE9A10](v19, -1, -1);
  }
  else
  {
  }
  uint64_t v20 = (uint64_t *)&v9[OBJC_IVAR___TFDiagnosticData_filename];
  BOOL v21 = v4;
  sub_191DF284C(*(void *)&v9[OBJC_IVAR___TFDiagnosticData_data], *(void *)&v9[OBJC_IVAR___TFDiagnosticData_data + 8], *(void *)&v9[OBJC_IVAR___TFDiagnosticData_filename], a3);
  uint64_t v22 = v4;
  if (v4)
  {
    id v23 = v9;
    id v24 = v10;
    uint64_t v25 = v23;
    id v26 = v24;
    uint64_t v27 = sub_191EE7920();
    os_log_type_t v28 = sub_191EE8C80();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v40 = v38;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v30 = *v20;
      unint64_t v31 = v20[1];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_191D76D74(v30, v31, &v40);
      sub_191EE8EA0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v32 = 1;
      uint64_t v33 = sub_191EE7390();
      sub_191D76D74(v33, v34, &v40);
      sub_191EE8EA0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191D4D000, v27, v28, "Failed to write diagnostic data with filename=%s to diagnostic cache dir=%s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v38, -1, -1);
      MEMORY[0x192FE9A10](v29, -1, -1);
    }
    else
    {

      uint64_t v32 = 1;
    }
    a3 = v39;
  }
  else
  {
    uint64_t v32 = 0;
  }
  uint64_t v35 = sub_191EE73F0();
  return __swift_storeEnumTagSinglePayload(a3, v32, 1, v35);
}

uint64_t sub_191DF284C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v18[1] = a3;
  v18[2] = a1;
  v18[3] = a2;
  uint64_t v6 = sub_191EE7310();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191D93944();
  MEMORY[0x1F4188790](v10 - 8);
  os_log_type_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v4 + OBJC_IVAR___TFDiagnosticFileCollector_diagnosticDumpDir;
  uint64_t v14 = sub_191EE73F0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F276C0], v6);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191EE73D0();
  uint64_t v16 = v18[5];
  uint64_t result = sub_191EE7530();
  if (v16) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(a4, v14);
  }
  return result;
}

uint64_t sub_191DF2A54(uint64_t a1)
{
  v1[3] = a1;
  sub_191DF40D0(0);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191DF2B14, 0, 0);
}

uint64_t sub_191DF2B14()
{
  OUTLINED_FUNCTION_20_0();
  sub_191DCFCF0(0);
  sub_191EE8750();
  v0[7] = MEMORY[0x1E4FBC860];
  uint64_t v1 = sub_191DF4334(&qword_1E92F38E8, sub_191DF40D0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_191DF2C24;
  uint64_t v3 = v0[4];
  return MEMORY[0x1F4187C78](v0 + 2, v3, v1);
}

uint64_t sub_191DF2C24()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v6 = v5;
  v3[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[6];
    uint64_t v10 = v3 + 4;
    uint64_t v8 = v3[4];
    uint64_t v9 = v10[1];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_191DF2D2C()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v1 = v0[2];
  if (v1)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v3 = v0[7];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_191DCC21C();
      uint64_t v3 = v10;
    }
    unint64_t v4 = *(void *)(v3 + 16);
    if (v4 >= *(void *)(v3 + 24) >> 1)
    {
      sub_191DCC21C();
      uint64_t v3 = v11;
    }
    *(void *)(v3 + 16) = v4 + 1;
    *(void *)(v3 + 8 * v4 + 32) = v1;
    swift_bridgeObjectRelease();
    v0[7] = v3;
    uint64_t v5 = sub_191DF4334(&qword_1E92F38E8, sub_191DF40D0);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[8] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_191DF2C24;
    uint64_t v7 = v0[4];
    return MEMORY[0x1F4187C78](v0 + 2, v7, v5);
  }
  else
  {
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v9 = v0[7];
    return v8(v9);
  }
}

uint64_t sub_191DF2F10()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v0();
}

uint64_t sub_191DF2F6C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v4 = sub_191EE94B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = 0;
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x192FE8380](v5, a1);
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRelease();
      if (v6 == a2) {
        break;
      }
      uint64_t v7 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
        goto LABEL_13;
      }
      ++v5;
      if (v7 == v4)
      {
        uint64_t v5 = 0;
        break;
      }
    }
  }
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_191DF3068(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v7 = sub_191EE94B0();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v7 < v2)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v2 - v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v5 = *v3;
  if (!(*v3 >> 62))
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_36:
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v8 = sub_191EE94B0();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_38:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v12 = sub_191EE94B0();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_20;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_38;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  unint64_t v5 = MEMORY[0x192FE8390](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  uint64_t v13 = (char *)(v11 + 32 + 8 * v4);
  sub_191DF4160();
  swift_arrayDestroy();
  if (!v6) {
    goto LABEL_28;
  }
  if (v5 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v14 = sub_191EE94B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)(v11 + 16);
  }
  if (__OFSUB__(v14, v2))
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t result = (uint64_t)sub_191D7D7E4((char *)(v11 + 32 + 8 * v2), v14 - v2, v13);
  if (v5 >> 62)
  {
LABEL_41:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v16 = sub_191EE94B0();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v16 = *(void *)(v11 + 16);
LABEL_26:
  if (__OFADD__(v16, v6))
  {
    __break(1u);
    return result;
  }
  *(void *)(v11 + 16) = v16 + v6;
LABEL_28:

  return sub_191EE8550();
}

uint64_t sub_191DF32CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_191DF3324(a1, a2, a3, (void (*)(void))_s13TeaFoundation18DisposableObserverCMa_0, (uint64_t (*)(uint64_t, uint64_t, void *))sub_191DCD4A4);
}

uint64_t sub_191DF32F8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_191DF3324(a1, a2, a3, (void (*)(void))_s13TeaFoundation17DisposableMonitorCMa_0, (uint64_t (*)(uint64_t, uint64_t, void *))sub_191DCD4A4);
}

uint64_t sub_191DF3324(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, void *))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a5;
    uint64_t v9 = a4;
    uint64_t v12 = a3;
    uint64_t v8 = a2;
    uint64_t v10 = a1;
    unint64_t v11 = *v6;
    if (!(*v6 >> 62))
    {
      uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v13 = sub_191EE94B0();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v13 < v8)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v13 = v8 - v10;
  if (__OFSUB__(v8, v10))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v5 = (void (*)(void))(1 - v13);
  if (__OFSUB__(1, v13))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v11 = *v6;
  id v23 = v7;
  if (!(*v6 >> 62))
  {
    uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_36:
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v14 = sub_191EE94B0();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v15 = (uint64_t)v5 + v14;
  if (__OFADD__(v14, v5))
  {
    __break(1u);
LABEL_38:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v18 = sub_191EE94B0();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  unint64_t v11 = *v6;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v6 = v11;
  uint64_t v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v17 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_20;
    }
    uint64_t v14 = 1;
  }
  uint64_t v13 = v8;
  uint64_t v8 = (uint64_t)v5;
  unint64_t v5 = v9;
  uint64_t v9 = v12;
  if (v11 >> 62) {
    goto LABEL_38;
  }
  uint64_t v18 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v18 <= v15) {
    uint64_t v18 = v15;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  unint64_t v11 = MEMORY[0x192FE8390](v14, v18, 1, v11);
  swift_bridgeObjectRelease();
  *uint64_t v6 = v11;
  uint64_t v17 = v11 & 0xFFFFFFFFFFFFFF8;
  uint64_t v12 = v9;
  uint64_t v9 = v5;
  unint64_t v5 = (void (*)(void))v8;
  uint64_t v8 = v13;
LABEL_20:
  uint64_t v19 = (void *)(v17 + 32 + 8 * v10);
  v9(0);
  swift_arrayDestroy();
  if (!v5) {
    goto LABEL_28;
  }
  if (v11 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v20 = sub_191EE94B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)(v17 + 16);
  }
  if (__OFSUB__(v20, v8))
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t result = v23(v17 + 32 + 8 * v8, v20 - v8, v19 + 1);
  if (v11 >> 62)
  {
LABEL_41:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v22 = sub_191EE94B0();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v22 = *(void *)(v17 + 16);
LABEL_26:
  if (__OFADD__(v22, v5))
  {
    __break(1u);
    return result;
  }
  *(void *)(v17 + 16) = (char *)v5 + v22;
LABEL_28:
  void *v19 = v12;

  return sub_191EE8550();
}

unint64_t sub_191DF35DC(unint64_t *a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  unint64_t v6 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v7 = sub_191DF2F6C(v6, a2);
  if (v2)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v3 = v7;
    char v9 = v8;
    swift_bridgeObjectRelease();
    if (v9)
    {
      unint64_t v24 = *a1;
      if (v24 >> 62)
      {
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        unint64_t v3 = sub_191EE94B0();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return v3;
      }
      unint64_t v3 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      unint64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        goto LABEL_58;
      }
      if (*a1 >> 62)
      {
LABEL_59:
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        uint64_t v11 = sub_191EE94B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        unint64_t v12 = v3 + 5;
        do
        {
          unint64_t v13 = v12 - 4;
          unint64_t v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = MEMORY[0x192FE8380](v12 - 4);
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_49;
            }
            uint64_t v15 = *(void *)(v14 + 8 * v12);
            swift_unknownObjectRetain();
          }
          swift_unknownObjectRelease();
          if (v15 != a2)
          {
            if (v13 != v3)
            {
              unint64_t v10 = *a1;
              if ((*a1 & 0xC000000000000001) != 0)
              {
                uint64_t v16 = MEMORY[0x192FE8380](v3, *a1);
                unint64_t v10 = *a1;
              }
              else
              {
                if ((v3 & 0x8000000000000000) != 0) {
                  goto LABEL_52;
                }
                if (v3 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_53;
                }
                uint64_t v16 = *(void *)(v10 + 8 * v3 + 32);
                swift_unknownObjectRetain();
              }
              if ((v10 & 0xC000000000000001) != 0)
              {
                uint64_t v17 = MEMORY[0x192FE8380](v12 - 4, v10);
                unint64_t v10 = *a1;
              }
              else
              {
                if ((v13 & 0x8000000000000000) != 0) {
                  goto LABEL_54;
                }
                if (v13 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_55;
                }
                uint64_t v17 = *(void *)(v10 + 8 * v12);
                swift_unknownObjectRetain();
              }
              int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v10;
              if (!isUniquelyReferenced_nonNull_bridgeObject
                || (v10 & 0x8000000000000000) != 0
                || (v10 & 0x4000000000000000) != 0)
              {
                sub_191DD9E0C(v10);
                unint64_t v10 = v19;
                *a1 = v19;
              }
              *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v17;
              swift_unknownObjectRelease();
              sub_191EE8550();
              unint64_t v10 = *a1;
              int v20 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v10;
              if (!v20 || (v10 & 0x8000000000000000) != 0 || (v10 & 0x4000000000000000) != 0)
              {
                sub_191DD9E0C(v10);
                unint64_t v10 = v21;
                *a1 = v21;
              }
              if ((v13 & 0x8000000000000000) != 0) {
                goto LABEL_56;
              }
              if (v13 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_57;
              }
              *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v16;
              swift_unknownObjectRelease();
              sub_191EE8550();
            }
            if (__OFADD__(v3++, 1)) {
              goto LABEL_51;
            }
          }
          unint64_t v10 = v12 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_50;
          }
          if (*a1 >> 62)
          {
            _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
            uint64_t v23 = sub_191EE94B0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v23 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v12;
        }
        while (v10 != v23);
      }
    }
    swift_unknownObjectRelease();
  }
  return v3;
}

uint64_t sub_191DF3914()
{
  return type metadata accessor for DiagnosticFileCollector();
}

uint64_t type metadata accessor for DiagnosticFileCollector()
{
  uint64_t result = qword_1EB50C190;
  if (!qword_1EB50C190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191DF3964()
{
  uint64_t result = sub_191EE73F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191EE7940();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for DiagnosticFileCollector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagnosticFileCollector);
}

uint64_t dispatch thunk of DiagnosticFileCollector.__allocating_init(diagnosticDumpDir:diagnosticDumpNotificationName:diagnosticFilesNotificationName:diagnosticFileListURL:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_191DF3A84()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  char v8 = (void *)OUTLINED_FUNCTION_11_2(v7);
  *char v8 = v9;
  v8[1] = sub_191D88064;
  return sub_191DF162C(v4, v2, v6, v5);
}

uint64_t sub_191DF3B2C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_191DF3C0C;
  return v5(v2 + 16);
}

uint64_t sub_191DF3C0C()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_191DF3D30()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191DF3D70()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191D88064;
  uint64_t v3 = OUTLINED_FUNCTION_13_9();
  return sub_191DF1F44(v3, v4, v5, v6);
}

uint64_t sub_191DF3E08(uint64_t a1, uint64_t a2)
{
  sub_191D5AC98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191DF3E6C()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191D88064;
  uint64_t v3 = OUTLINED_FUNCTION_12_8();
  return v4(v3);
}

uint64_t sub_191DF3F04()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191DF3F4C()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_11_2(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_191D88378;
  return sub_191DF2164(v2, v3, v4, v6, v5);
}

uint64_t sub_191DF4000()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191DF4038()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191D88378;
  uint64_t v3 = OUTLINED_FUNCTION_12_8();
  return v4(v3);
}

void sub_191DF40D0(uint64_t a1)
{
}

uint64_t sub_191DF4104(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_191DF4160()
{
  unint64_t result = qword_1E92F38F0;
  if (!qword_1E92F38F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, &qword_1E92F38F0);
  }
  return result;
}

uint64_t sub_191DF41B8()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191DF41F8()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191D88064;
  uint64_t v3 = OUTLINED_FUNCTION_13_9();
  return sub_191DEFEE4(v3, v4, v5, v6);
}

void sub_191DF4290(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_191DF42F4()
{
  unint64_t result = qword_1EB50E0D0;
  if (!qword_1EB50E0D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB50E0D0);
  }
  return result;
}

uint64_t sub_191DF4334(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Atomic.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Atomic.init(wrappedValue:)(a1);
  return v2;
}

uint64_t sub_191DF43C0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return Atomic.wrappedValue.setter((uint64_t)v2);
}

void sub_191DF4480(uint64_t a1@<X8>)
{
}

uint64_t sub_191DF44A8()
{
  return 8;
}

void *sub_191DF44B4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for Atomic(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Atomic);
}

uint64_t dispatch thunk of Atomic.__allocating_init(wrappedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t XPCBlock.name.getter()
{
  uint64_t v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t XPCBlock.arguments.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t XPCBlock.init(_:arguments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t result = a3();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = result;
  return result;
}

void *sub_191DF4570(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

void *assignWithCopy for XPCArgument(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for XPCArgument(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCArgument(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCArgument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCBlock()
{
  return &type metadata for XPCBlock;
}

uint64_t dispatch thunk of XPCFunction.arguments.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t DateProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DateProvider.init()()
{
  return v0;
}

uint64_t DateProvider.deinit()
{
  return v0;
}

uint64_t DateProvider.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_191DF4738()
{
  return DateProvider.now()();
}

uint64_t dispatch thunk of DateProviding.now()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for DateProvider()
{
  return self;
}

uint64_t method lookup function for DateProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DateProvider);
}

uint64_t dispatch thunk of DateProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_191DF47B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_191EE9770();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_191EE9770() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191DF487C(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v3 = (unsigned char *)(a2 + 32);
    uint64_t v4 = v2 - 1;
    do
    {
      uint64_t v5 = v4;
      LOBYTE(v2) = ((a1 & 1) == 0) ^ *v3;
      if (v2) {
        break;
      }
      --v4;
      ++v3;
    }
    while (v5);
  }
  return v2 & 1;
}

uint64_t Locale.shouldSwapPriceChangeColors.getter()
{
  sub_191EE7740();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_11_0();
  sub_191DF51B0(0, qword_1EB50BA10, MEMORY[0x1E4F27A00]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v14[-v2];
  sub_191EE7750();
  sub_191EE7730();
  uint64_t v4 = OUTLINED_FUNCTION_3_18();
  v5(v4);
  uint64_t v6 = sub_191EE76E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v6) == 1)
  {
    sub_191DF5204((uint64_t)v3, qword_1EB50BA10, MEMORY[0x1E4F27A00]);
    char v7 = 0;
  }
  else
  {
    uint64_t v8 = sub_191EE76B0();
    uint64_t v10 = v9;
    OUTLINED_FUNCTION_33();
    v11();
    sub_191DF5378(0, &qword_1EB50E0D8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191EEE540;
    *(void *)(inited + 32) = 20035;
    *(void *)(inited + 40) = 0xE200000000000000;
    *(void *)(inited + 48) = 22356;
    *(void *)(inited + 56) = 0xE200000000000000;
    *(void *)(inited + 64) = 21067;
    *(void *)(inited + 72) = 0xE200000000000000;
    char v7 = sub_191DF47B4(v8, v10, (void *)inited);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_191DF5174();
  }
  return v7 & 1;
}

BOOL Locale.textDirectionIsRTL.getter()
{
  uint64_t v0 = sub_191EE7740();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = v1;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  sub_191DF51B0(0, &qword_1EB50C058, MEMORY[0x1E4F279D8]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v17 - v10;
  if (qword_1EB50B320 != -1) {
    swift_once();
  }
  if (byte_1EB50B348) {
    return 1;
  }
  if (qword_1EB50B588 != -1) {
    swift_once();
  }
  if (byte_1EB50B4D9) {
    return 1;
  }
  sub_191EE7750();
  sub_191EE7710();
  unint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v8, v0);
  uint64_t v14 = sub_191EE76C0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v14) == 1)
  {
    sub_191DF5204((uint64_t)v11, &qword_1EB50C058, MEMORY[0x1E4F279D8]);
    return 0;
  }
  else
  {
    sub_191EE76B0();
    OUTLINED_FUNCTION_33();
    v15();
    sub_191EE7700();
    uint64_t v16 = sub_191EE7720();
    v13(v6, v0);
    return v16 == 2;
  }
}

void sub_191DF4D34()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_191EE80E0();
  unsigned __int8 v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  byte_1EB50B348 = v2;
}

uint64_t sub_191DF4DC4()
{
  uint64_t result = sub_191DF4DE8();
  byte_1EB50B4D9 = result & 1;
  return result;
}

uint64_t sub_191DF4DE8()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_arguments);

  unsigned __int8 v2 = (void *)sub_191EE8520();
  uint64_t result = sub_191E0991C(0xD000000000000023, 0x8000000191EF6F40, v2);
  if ((v4 & 1) != 0 || (unint64_t v5 = v2[2], result >= (uint64_t)v5))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (result + 1 >= v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = &v2[2 * result + 2];
    uint64_t v8 = v6[4];
    uint64_t v7 = v6[5];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_bridgeObjectRelease();
    if (v8 == 5457241 && v7 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      char v10 = sub_191EE9770();
      swift_bridgeObjectRelease();
      return v10 & 1;
    }
  }
  return result;
}

uint64_t DynamicLocale.deinit()
{
  sub_191EE7760();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_33();
  v1();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t DynamicLocale.__deallocating_deinit()
{
  sub_191EE7760();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_33();
  v1();
  swift_unknownObjectRelease();
  uint64_t v2 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v2, v3);
}

uint64_t sub_191DF5024()
{
  return DynamicLocale.shouldSwapPriceChangeColors.getter() & 1;
}

uint64_t DynamicLocale.shouldSwapPriceChangeColors.getter()
{
  return sub_191DF50A4((uint64_t (*)(uint64_t))Locale.shouldSwapPriceChangeColors.getter);
}

uint64_t sub_191DF5064()
{
  return DynamicLocale.textDirectionIsRTL.getter() & 1;
}

uint64_t DynamicLocale.textDirectionIsRTL.getter()
{
  return sub_191DF50A4((uint64_t (*)(uint64_t))Locale.textDirectionIsRTL.getter);
}

uint64_t sub_191DF50A4(uint64_t (*a1)(uint64_t))
{
  uint64_t v4 = sub_191EE7760();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_11_0();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v1 + OBJC_IVAR____TtC13TeaFoundation13DynamicLocale_currentLocale, v4);
  LOBYTE(a1) = a1(v8);
  uint64_t v9 = OUTLINED_FUNCTION_3_18();
  v10(v9);
  return a1 & 1;
}

uint64_t sub_191DF515C()
{
  return sub_191D7F4E8((void (*)(void))sub_191DA6A08);
}

uint64_t sub_191DF5174()
{
  swift_arrayDestroy();
  uint64_t v0 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186488](v0, v1, v2);
}

void sub_191DF51B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191EE8DF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191DF5204(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_191DF51B0(0, a2, a3);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_33();
  v4();
  return a1;
}

uint64_t dispatch thunk of LocaleType.shouldSwapPriceChangeColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocaleType.textDirectionIsRTL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_191DF5278()
{
  return type metadata accessor for DynamicLocale();
}

uint64_t type metadata accessor for DynamicLocale()
{
  uint64_t result = qword_1E92F3928;
  if (!qword_1E92F3928) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191DF52C8()
{
  uint64_t result = sub_191EE7760();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DynamicLocale(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DynamicLocale);
}

void sub_191DF5378(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_191DF53C4()
{
  return sub_191DF53D8((unint64_t *)&qword_1EB50DBD0);
}

uint64_t sub_191DF53D8(unint64_t *a1)
{
  sub_191D6D890(0, a1);
  swift_arrayDestroy();
  uint64_t v1 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186488](v1, v2, v3);
}

uint64_t sub_191DF5438()
{
  return sub_191DF53D8((unint64_t *)&qword_1EB50E3B0);
}

id static Capabilities.hasExtendedColorDisplay()()
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t hasExtendedColorDisplay = MobileGestalt_get_hasExtendedColorDisplay();

    return (id)hasExtendedColorDisplay;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL static Capabilities.isHardwareKeyboardAttached()()
{
  return GSEventIsHardwareKeyboardAttached() != 0;
}

id Capabilities.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id Capabilities.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Capabilities();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Capabilities.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Capabilities();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191DF55C4()
{
  uint64_t v0 = sub_191EE7770();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191EE77D0();
  __swift_allocate_value_buffer(v4, qword_1EB50AEA0);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB50AEA0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27B20], v0);
  sub_191EE7780();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_191DF56E4()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B570 = v2;
  *(void *)algn_1EB50B578 = v4;
}

void sub_191DF57B0()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B520 = v2;
  unk_1EB50B528 = v4;
}

void sub_191DF5880()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B560 = v2;
  *(void *)algn_1EB50B568 = v4;
}

void sub_191DF594C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B510 = v2;
  *(void *)algn_1EB50B518 = v4;
}

void sub_191DF5A1C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B540 = v2;
  *(void *)algn_1EB50B548 = v4;
}

void sub_191DF5AEC()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B4E8 = v2;
  unk_1EB50B4F0 = v4;
}

void sub_191DF5BBC()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B2D8 = v2;
  unk_1EB50B2E0 = v4;
}

void sub_191DF5C88()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B4F8 = v2;
  unk_1EB50B500 = v4;
}

void sub_191DF5D58()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B2F8 = v2;
  unk_1EB50B300 = v4;
}

void sub_191DF5E24()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_191EE7290();
  uint64_t v4 = v3;

  qword_1EB50B550 = v2;
  *(void *)algn_1EB50B558 = v4;
}

Swift::String __swiftcall Date.gregorianMediumDisplayString()()
{
  OUTLINED_FUNCTION_8_3();
  sub_191D5CAB8(0, qword_1EB50CB28, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_32_4(v2, v33);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = OUTLINED_FUNCTION_18_6(v4, v34);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_25_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_41();
  if (qword_1EB50B328 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB50AEA0);
  uint64_t v8 = OUTLINED_FUNCTION_12_9();
  v9(v8);
  sub_191D5CAB8(0, &qword_1EB50B228, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  sub_191EE77C0();
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  uint64_t v12 = OUTLINED_FUNCTION_22_4();
  *(_OWORD *)(v12 + 16) = xmmword_191EEC0C0;
  unint64_t v13 = *(void (**)(void))(v11 + 104);
  OUTLINED_FUNCTION_2_26();
  v13();
  OUTLINED_FUNCTION_2_26();
  v13();
  OUTLINED_FUNCTION_2_26();
  v13();
  OUTLINED_FUNCTION_2_26();
  v13();
  OUTLINED_FUNCTION_2_26();
  v13();
  sub_191DF71D8(v12);
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  OUTLINED_FUNCTION_31_4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33();
  v14();
  uint64_t v15 = OUTLINED_FUNCTION_29_4();
  v16(v15);
  sub_191EE7250();
  if ((v17 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_9();
    if (v18 == v19)
    {
      if (qword_1EB50B580 == -1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  sub_191EE7220();
  if ((v20 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_9();
    if (v18 == v19)
    {
      if (qword_1EB50B2F0 == -1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  sub_191EE7230();
  if ((v21 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_9();
    if (v18 == v19)
    {
      if (qword_1EB50B2D0 == -1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  sub_191EE7240();
  if ((v22 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_9();
    if (v18 == v19)
    {
      if (qword_1EB50B4D0 == -1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  sub_191EE7260();
  if ((v23 & 1) != 0 || (OUTLINED_FUNCTION_9_9(), v18 ^ v19))
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v31 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    OUTLINED_FUNCTION_5_18();

    goto LABEL_23;
  }
  if (qword_1EB50B310 != -1) {
LABEL_25:
  }
    swift_once();
LABEL_22:
  sub_191EE76F0();
  uint64_t v24 = sub_191EE7760();
  OUTLINED_FUNCTION_39_2(v24);
  sub_191D5CAB8(0, (unint64_t *)&qword_1EB50DBC8, (uint64_t (*)(uint64_t))sub_191DD2058, MEMORY[0x1E4FBBE00]);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v25 + 16) = xmmword_191EEB6F0;
  OUTLINED_FUNCTION_36_3((void *)v25, v26);
  sub_191DF7DA4(v35, qword_1EB50CB28, MEMORY[0x1E4F27A78]);
LABEL_23:
  OUTLINED_FUNCTION_33();
  v27();
  OUTLINED_FUNCTION_36();
  result._unint64_t object = v29;
  result._uint64_t countAndFlagsBits = v28;
  return result;
}

Swift::String __swiftcall Date.gregorianLongDisplayString()()
{
  OUTLINED_FUNCTION_8_3();
  sub_191D5CAB8(0, qword_1EB50CB28, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_32_4(v2, v33);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = OUTLINED_FUNCTION_18_6(v4, v34);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_25_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_41();
  if (qword_1EB50B328 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB50AEA0);
  uint64_t v8 = OUTLINED_FUNCTION_12_9();
  v9(v8);
  sub_191D5CAB8(0, &qword_1EB50B228, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  sub_191EE77C0();
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  uint64_t v12 = OUTLINED_FUNCTION_22_4();
  *(_OWORD *)(v12 + 16) = xmmword_191EEC0C0;
  unint64_t v13 = *(void (**)(void))(v11 + 104);
  OUTLINED_FUNCTION_2_26();
  v13();
  OUTLINED_FUNCTION_2_26();
  v13();
  OUTLINED_FUNCTION_2_26();
  v13();
  OUTLINED_FUNCTION_2_26();
  v13();
  OUTLINED_FUNCTION_2_26();
  v13();
  sub_191DF71D8(v12);
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  OUTLINED_FUNCTION_31_4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33();
  v14();
  uint64_t v15 = OUTLINED_FUNCTION_29_4();
  v16(v15);
  sub_191EE7250();
  if ((v17 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_9();
    if (v18 == v19)
    {
      if (qword_1EB50B538 == -1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  sub_191EE7220();
  if ((v20 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_9();
    if (v18 == v19)
    {
      if (qword_1EB50B2C8 == -1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  sub_191EE7230();
  if ((v21 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_9();
    if (v18 == v19)
    {
      if (qword_1EB50B2B8 == -1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  sub_191EE7240();
  if ((v22 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_9();
    if (v18 == v19)
    {
      if (qword_1EB50B508 == -1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  sub_191EE7260();
  if ((v23 & 1) != 0 || (OUTLINED_FUNCTION_9_9(), v18 ^ v19))
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v31 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    OUTLINED_FUNCTION_5_18();

    goto LABEL_23;
  }
  if (qword_1EB50B2E8 != -1) {
LABEL_25:
  }
    swift_once();
LABEL_22:
  sub_191EE76F0();
  uint64_t v24 = sub_191EE7760();
  OUTLINED_FUNCTION_39_2(v24);
  sub_191D5CAB8(0, (unint64_t *)&qword_1EB50DBC8, (uint64_t (*)(uint64_t))sub_191DD2058, MEMORY[0x1E4FBBE00]);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v25 + 16) = xmmword_191EEB6F0;
  OUTLINED_FUNCTION_36_3((void *)v25, v26);
  sub_191DF7DA4(v35, qword_1EB50CB28, MEMORY[0x1E4F27A78]);
LABEL_23:
  OUTLINED_FUNCTION_33();
  v27();
  OUTLINED_FUNCTION_36();
  result._unint64_t object = v29;
  result._uint64_t countAndFlagsBits = v28;
  return result;
}

void Date.makeRandomlyImprecise(within:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_8_3();
  a19 = v23;
  a20 = v24;
  uint64_t v25 = v20;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = sub_191EE77C0();
  OUTLINED_FUNCTION_0();
  uint64_t v32 = v31;
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_41();
  uint64_t v34 = sub_191EE77D0();
  OUTLINED_FUNCTION_0();
  uint64_t v36 = v35;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&a9 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191D5CAB8(0, qword_1EB50DEE8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_86(v40);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v41);
  OUTLINED_FUNCTION_17_9();
  if (__OFSUB__(0, v27))
  {
    __break(1u);
  }
  else
  {
    sub_191DF7D48(-v27, v27);
    sub_191EE77B0();
    (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v21, *MEMORY[0x1E4F27C50], v30);
    sub_191EE77A0();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v21, v30);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v34);
    uint64_t v42 = sub_191EE7640();
    if (__swift_getEnumTagSinglePayload(v22, 1, v42) == 1)
    {
      sub_191DF7DA4(v22, qword_1EB50DEE8, MEMORY[0x1E4F27928]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v29, v25, v42);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v29, v22, v42);
    }
    OUTLINED_FUNCTION_36();
  }
}

void Date.addSeconds(_:calendar:)()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_33_4(v1);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_6_13();
  sub_191D5CAB8(0, qword_1EB50DEE8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_86(v4);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_17_9();
  uint64_t v6 = OUTLINED_FUNCTION_3_19();
  v7(v6);
  OUTLINED_FUNCTION_37_4();
  uint64_t v8 = OUTLINED_FUNCTION_4_17();
  v9(v8);
  OUTLINED_FUNCTION_16_8();
  v10();
  OUTLINED_FUNCTION_21_5(v0);
  if (v11)
  {
    sub_191EE75C0();
    OUTLINED_FUNCTION_14_6();
    v12();
    sub_191DF7DA4(v0, qword_1EB50DEE8, MEMORY[0x1E4F27928]);
  }
  else
  {
    OUTLINED_FUNCTION_15_9();
    v13();
    uint64_t v14 = OUTLINED_FUNCTION_10_12();
    v15(v14);
  }
  OUTLINED_FUNCTION_36();
}

void Date.addMinutes(_:calendar:)()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_33_4(v2);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_6_13();
  sub_191D5CAB8(0, qword_1EB50DEE8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_86(v5);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_9();
  uint64_t v7 = OUTLINED_FUNCTION_3_19();
  v8(v7);
  OUTLINED_FUNCTION_37_4();
  uint64_t v9 = OUTLINED_FUNCTION_4_17();
  v10(v9);
  OUTLINED_FUNCTION_16_8();
  v11();
  OUTLINED_FUNCTION_21_5(v1);
  if (!v12)
  {
    OUTLINED_FUNCTION_15_9();
    v14();
    uint64_t v15 = OUTLINED_FUNCTION_10_12();
    v16(v15);
LABEL_5:
    OUTLINED_FUNCTION_36();
    return;
  }
  if ((unsigned __int128)(v0 * (__int128)60) >> 64 == (60 * v0) >> 63)
  {
    sub_191EE75C0();
    OUTLINED_FUNCTION_14_6();
    v13();
    sub_191DF7DA4(v1, qword_1EB50DEE8, MEMORY[0x1E4F27928]);
    goto LABEL_5;
  }
  __break(1u);
}

void Date.addDays(_:calendar:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = OUTLINED_FUNCTION_42_1(v2);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_6_13();
  sub_191D5CAB8(0, qword_1EB50DEE8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_86(v8);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)v20 - v10;
  uint64_t v12 = OUTLINED_FUNCTION_3_19();
  v13(v12);
  sub_191EE77A0();
  uint64_t v14 = OUTLINED_FUNCTION_4_17();
  v15(v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v0, v3);
  OUTLINED_FUNCTION_21_5((uint64_t)v11);
  if (!v16)
  {
    OUTLINED_FUNCTION_15_9();
    v19();
    (*(void (**)(void, char *, uint64_t))(v5 + 32))(v20[1], v11, v3);
LABEL_9:
    OUTLINED_FUNCTION_36();
    return;
  }
  OUTLINED_FUNCTION_23_6();
  if (!v16)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_38_2();
  if (!v16) {
    goto LABEL_10;
  }
  if ((unsigned __int128)(v17 * (__int128)24) >> 64 == (24 * v17) >> 63)
  {
    sub_191EE75C0();
    OUTLINED_FUNCTION_14_6();
    v18();
    sub_191DF7DA4((uint64_t)v11, qword_1EB50DEE8, MEMORY[0x1E4F27928]);
    goto LABEL_9;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_191DF71D8(uint64_t a1)
{
  uint64_t v2 = sub_191EE77C0();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v35 = (char *)&v26 - v6;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
    goto LABEL_16;
  }
  sub_191DF80BC();
  uint64_t result = sub_191EE9140();
  uint64_t v8 = result;
  uint64_t v30 = *(void *)(a1 + 16);
  if (!v30)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  unint64_t v9 = 0;
  uint64_t v29 = a1 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  uint64_t v33 = v31 + 16;
  uint64_t v34 = result + 56;
  uint64_t v10 = (void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v27 = a1;
  uint64_t v28 = (uint64_t (**)(unint64_t, char *, uint64_t))(v31 + 32);
  while (v9 < *(void *)(a1 + 16))
  {
    uint64_t v11 = *(void *)(v31 + 72);
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
    v12(v35, v29 + v11 * v9, v2);
    sub_191DF8150(&qword_1EB50AC08, MEMORY[0x1E4F27C88]);
    uint64_t v13 = sub_191EE7F90();
    uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    uint64_t v17 = *(void *)(v34 + 8 * (v15 >> 6));
    uint64_t v18 = 1 << v15;
    if (((1 << v15) & v17) != 0)
    {
      unint64_t v32 = v9;
      uint64_t v19 = ~v14;
      while (1)
      {
        v12(v5, *(void *)(v8 + 48) + v15 * v11, v2);
        sub_191DF8150(&qword_1EB50AC10, MEMORY[0x1E4F27C88]);
        char v20 = sub_191EE80C0();
        uint64_t v21 = *v10;
        (*v10)(v5, v2);
        if (v20) {
          break;
        }
        unint64_t v15 = (v15 + 1) & v19;
        unint64_t v16 = v15 >> 6;
        uint64_t v17 = *(void *)(v34 + 8 * (v15 >> 6));
        uint64_t v18 = 1 << v15;
        if ((v17 & (1 << v15)) == 0)
        {
          a1 = v27;
          unint64_t v9 = v32;
          goto LABEL_10;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v35, v2);
      a1 = v27;
      unint64_t v9 = v32;
    }
    else
    {
LABEL_10:
      uint64_t v22 = v35;
      *(void *)(v34 + 8 * v16) = v18 | v17;
      uint64_t result = (*v28)(*(void *)(v8 + 48) + v15 * v11, v22, v2);
      uint64_t v23 = *(void *)(v8 + 16);
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        goto LABEL_18;
      }
      *(void *)(v8 + 16) = v25;
    }
    if (++v9 == v30) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

void sub_191DF7520(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!*(void *)(a1 + 16) || (sub_191DF7F9C(), uint64_t v2 = sub_191EE9140(), (v30 = *(void *)(v1 + 16)) == 0))
  {
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v3 = 0;
  uint64_t v28 = v1;
  uint64_t v29 = v1 + 32;
  while (v3 < *(void *)(v1 + 16))
  {
    uint64_t v4 = *(void **)(v29 + 8 * v3);
    sub_191EE8110();
    sub_191EE9A70();
    id v5 = v4;
    sub_191EE8200();
    uint64_t v6 = sub_191EE9A90();
    swift_bridgeObjectRelease();
    uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v8 = v6 & ~v7;
    OUTLINED_FUNCTION_43_0();
    if ((v11 & v10) != 0)
    {
      uint64_t v12 = sub_191EE8110();
      uint64_t v14 = v13;
      if (v12 == sub_191EE8110() && v14 == v15)
      {
LABEL_21:
        swift_bridgeObjectRelease_n();
LABEL_22:

        goto LABEL_23;
      }
      char v17 = OUTLINED_FUNCTION_27_5();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_22;
      }
      uint64_t v18 = ~v7;
      while (1)
      {
        uint64_t v8 = (v8 + 1) & v18;
        OUTLINED_FUNCTION_43_0();
        if ((v10 & v11) == 0) {
          break;
        }
        uint64_t v19 = sub_191EE8110();
        uint64_t v21 = v20;
        if (v19 == sub_191EE8110() && v21 == v22) {
          goto LABEL_21;
        }
        char v24 = OUTLINED_FUNCTION_27_5();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_22;
        }
      }
    }
    *(void *)(v2 + 56 + 8 * v9) = v11 | v10;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v5;
    uint64_t v25 = *(void *)(v2 + 16);
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_26;
    }
    *(void *)(v2 + 16) = v27;
LABEL_23:
    ++v3;
    uint64_t v1 = v28;
    if (v3 == v30) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_191DF7730(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = MEMORY[0x1E4FBC870];
    goto LABEL_25;
  }
  sub_191DF7E10();
  uint64_t result = sub_191EE9140();
  uint64_t v3 = result;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  while (v4 < *(void *)(a1 + 16))
  {
    uint64_t v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    sub_191EE9A70();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191EE8200();
    uint64_t result = sub_191EE9A90();
    uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
    uint64_t v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      uint64_t v14 = *(void *)(v3 + 48);
      uint64_t v15 = (void *)(v14 + 16 * v10);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (uint64_t result = sub_191EE9770(), (result & 1) != 0))
      {
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v17 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v17;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          uint64_t result = sub_191EE9770();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
    *(void *)(v5 + 8 * v11) = v13 | v12;
    uint64_t v20 = (void *)(*(void *)(v3 + 48) + 16 * v10);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = *(void *)(v3 + 16);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v23;
LABEL_22:
    if (++v4 == v24) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_191DF78FC(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_44;
  }
  sub_191DF7E64();
  uint64_t v2 = sub_191EE9140();
  uint64_t v3 = v2;
  uint64_t v51 = *(void *)(v1 + 16);
  if (!v51) {
    goto LABEL_44;
  }
  unint64_t v4 = 0;
  uint64_t v58 = v2 + 56;
  uint64_t v49 = v1;
  uint64_t v50 = v1 + 32;
  uint64_t v55 = v2;
  while (v4 < *(void *)(v1 + 16))
  {
    uint64_t v5 = (uint64_t *)(v50 + 40 * v4);
    uint64_t v7 = *v5;
    unint64_t v6 = v5[1];
    uint64_t v8 = v5[2];
    uint64_t v9 = v5[3];
    uint64_t v10 = v5[4];
    sub_191EE9A70();
    unint64_t v54 = v6;
    unint64_t v52 = v4;
    if (v6)
    {
      if (v6 == 1)
      {
        OUTLINED_FUNCTION_41_2(1, v11, v12, v13, v14, v15, v16, v17, v48, v49, v50, v51, v4, v53, 1, v55, v56, v57, v58,
          v59,
          v60);
      }
      else if (v6 == 2)
      {
        OUTLINED_FUNCTION_41_2(2, v11, v12, v13, v14, v15, v16, v17, v48, v49, v50, v51, v4, v53, 2, v55, v56, v57, v58,
          v59,
          v60);
      }
      else
      {
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        swift_retain();
        sub_191EE8200();
      }
    }
    sub_191EE8200();
    uint64_t v18 = sub_191EE9A90();
    uint64_t v57 = ~(-1 << *(unsigned char *)(v3 + 32));
    uint64_t v19 = v18 & v57;
    OUTLINED_FUNCTION_34_4();
    if ((v23 & v22) == 0)
    {
      unint64_t v24 = v54;
LABEL_35:
      *(void *)(v58 + 8 * v21) = v23 | v22;
      uint64_t v38 = (uint64_t *)(*(void *)(v3 + 48) + 40 * v19);
      *uint64_t v38 = v7;
      v38[1] = v24;
      v38[2] = v8;
      v38[3] = v9;
      v38[4] = v10;
      uint64_t v39 = *(void *)(v3 + 16);
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (!v40)
      {
        *(void *)(v3 + 16) = v41;
        goto LABEL_43;
      }
      goto LABEL_46;
    }
    unint64_t v24 = v54;
    uint64_t v56 = v10;
    while (1)
    {
      uint64_t v25 = (uint64_t *)(*(void *)(v3 + 48) + 40 * v19);
      uint64_t v27 = *v25;
      unint64_t v26 = v25[1];
      uint64_t v28 = v25[3];
      unint64_t v29 = v25[4];
      switch(v26)
      {
        case 0uLL:
          if (!v24)
          {
            OUTLINED_FUNCTION_13_10(v20, 0);
            uint64_t v42 = v7;
            unint64_t v43 = 0;
            goto LABEL_40;
          }
          OUTLINED_FUNCTION_1_26(v20, v24);
          unint64_t v26 = 0;
          goto LABEL_25;
        case 1uLL:
          if (v24 == 1)
          {
            OUTLINED_FUNCTION_13_10(v20, 1uLL);
            uint64_t v42 = v7;
            unint64_t v43 = 1;
            goto LABEL_40;
          }
          OUTLINED_FUNCTION_1_26(v20, v24);
          unint64_t v26 = 1;
          goto LABEL_25;
        case 2uLL:
          if (v24 == 2)
          {
            OUTLINED_FUNCTION_13_10(v20, 2uLL);
            uint64_t v42 = v7;
            unint64_t v43 = 2;
LABEL_40:
            sub_191DF7F54(v42, v43);
            uint64_t v3 = v55;
            goto LABEL_43;
          }
          OUTLINED_FUNCTION_1_26(v20, v24);
          unint64_t v26 = 2;
          goto LABEL_25;
      }
      if (v24 < 3)
      {
        uint64_t v59 = v25[3];
        uint64_t v28 = v8;
        uint64_t v8 = v9;
        uint64_t v53 = v25[4];
        unint64_t v29 = v24;
        uint64_t v9 = v56;
        sub_191DF7F0C(v7, v24);
        uint64_t v3 = v27;
        uint64_t v30 = OUTLINED_FUNCTION_40();
        sub_191DF7F0C(v30, v31);
LABEL_25:
        sub_191DF7F54(v3, v26);
        sub_191DF7F54(v7, v29);
        uint64_t v3 = v55;
        uint64_t v10 = v9;
        uint64_t v9 = v8;
        uint64_t v8 = v28;
        goto LABEL_26;
      }
      if (v27 == v7 && v26 == v24) {
        break;
      }
      OUTLINED_FUNCTION_40();
      LODWORD(v59) = sub_191EE9770();
      sub_191DF7F0C(v7, v54);
      uint64_t v33 = OUTLINED_FUNCTION_40();
      sub_191DF7F0C(v33, v34);
      uint64_t v35 = OUTLINED_FUNCTION_40();
      uint64_t v10 = v56;
      sub_191DF7F54(v35, v36);
      OUTLINED_FUNCTION_35_3(v7, v54);
      unint64_t v37 = v54;
      uint64_t v3 = v55;
      if (v59) {
        goto LABEL_42;
      }
LABEL_26:
      uint64_t v19 = (v19 + 1) & v57;
      OUTLINED_FUNCTION_34_4();
      if ((v22 & v23) == 0) {
        goto LABEL_35;
      }
    }
    sub_191DF7F0C(v7, v24);
    uint64_t v44 = OUTLINED_FUNCTION_28_5();
    sub_191DF7F0C(v44, v45);
    uint64_t v46 = OUTLINED_FUNCTION_28_5();
    sub_191DF7F54(v46, v47);
    OUTLINED_FUNCTION_35_3(v7, v54);
    unint64_t v37 = v54;
    uint64_t v3 = v55;
LABEL_42:
    OUTLINED_FUNCTION_35_3(v7, v37);
LABEL_43:
    unint64_t v4 = v52 + 1;
    uint64_t v1 = v49;
    if (v52 + 1 == v51)
    {
LABEL_44:
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
}

uint64_t sub_191DF7D48(uint64_t a1, uint64_t a2)
{
  if (a2 - a1 != -1) {
    return sub_191DF8030(a2 - a1 + 1) + a1;
  }
  uint64_t v3 = 0;
  MEMORY[0x192FE9A30](&v3, 8);
  return v3;
}

uint64_t sub_191DF7DA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_191D5CAB8(0, a2, a3, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_33();
  v4();
  return a1;
}

void sub_191DF7E10()
{
  if (!qword_1EB50DBB0)
  {
    unint64_t v0 = sub_191EE9150();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50DBB0);
    }
  }
}

void sub_191DF7E64()
{
  if (!qword_1E92F2980)
  {
    sub_191DF7EC0();
    unint64_t v0 = sub_191EE9150();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F2980);
    }
  }
}

unint64_t sub_191DF7EC0()
{
  unint64_t result = qword_1E92F2920;
  if (!qword_1E92F2920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F2920);
  }
  return result;
}

uint64_t sub_191DF7F0C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    return swift_retain();
  }
  return result;
}

uint64_t sub_191DF7F54(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_191DF7F9C()
{
  if (!qword_1E92F2988)
  {
    type metadata accessor for URLResourceKey(255);
    sub_191DF8150(&qword_1E92F2958, type metadata accessor for URLResourceKey);
    unint64_t v0 = sub_191EE9150();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F2988);
    }
  }
}

unint64_t sub_191DF8030(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x192FE9A30](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x192FE9A30](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_191DF80BC()
{
  if (!qword_1EB50B210)
  {
    sub_191EE77C0();
    sub_191DF8150(&qword_1EB50AC08, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_191EE9150();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50B210);
    }
  }
}

uint64_t sub_191DF8150(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t fetch(urlRequest:session:)()
{
  return sub_191DAA9FC((void (*)(void))sub_191DF835C);
}

void sub_191DF81F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_retain();
  uint64_t v11 = (void *)sub_191EE6F00();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = sub_191DF86CC;
  void v12[5] = v10;
  v15[4] = sub_191DF8A48;
  v15[5] = v12;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  v15[2] = sub_191DED748;
  v15[3] = &block_descriptor_6;
  uint64_t v13 = _Block_copy(v15);
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(a5, sel_dataTaskWithRequest_completionHandler_, v11, v13);
  _Block_release(v13);

  objc_msgSend(v14, sel_resume);
}

void sub_191DF835C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_191DF81F4(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_191DF8364()
{
  if (!qword_1E92F28D0)
  {
    unint64_t v0 = type metadata accessor for Promise();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F28D0);
    }
  }
}

unint64_t destroy for PromiseFetchError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13TeaFoundation17PromiseFetchErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if ((int)v4 - 1 < 0)
  {
    *(void *)(a1 + 16) = v3;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  return a1;
}

void *assignWithCopy for PromiseFetchError(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[2] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[2];
  }
  int v6 = v5 - 1;
  if (a2[2] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[2];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithTake for PromiseFetchError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 16);
    }
    if ((int)v7 - 1 < 0)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromiseFetchError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PromiseFetchError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_191DF8630(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_191DF8654(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[2] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromiseFetchError()
{
  return &type metadata for PromiseFetchError;
}

uint64_t sub_191DF8694()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191DF86CC(uint64_t a1, uint64_t a2)
{
  return sub_191E201D0(a1, a2, *(uint64_t (**)(void *))(v2 + 16));
}

void sub_191DF86D4(uint64_t a1, unint64_t a2, void *a3, void *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, unint64_t))
{
  uint64_t v13 = sub_191EE8190();
  MEMORY[0x1F4188790](v13 - 8);
  if (a4)
  {
    id v14 = a4;
    ((void (*)(void *))a5)(a4);
    uint64_t v15 = a4;
    goto LABEL_3;
  }
  if (a2 >> 60 == 15)
  {
    if (a3)
    {
      self;
      uint64_t v16 = swift_dynamicCastObjCClass();
      if (v16)
      {
        uint64_t v17 = (void *)v16;
        id v32 = a3;
        if ((uint64_t)objc_msgSend(v17, sel_statusCode) >= 400)
        {
          id v23 = objc_msgSend(v17, sel_statusCode);
          sub_191DF8A54();
          unint64_t v24 = (void *)swift_allocError();
          v25[1] = 0;
          v25[2] = 0;
          void *v25 = v23;
          a5();

          uint64_t v15 = v32;
          goto LABEL_5;
        }
      }
    }
    sub_191DF8A54();
    uint64_t v18 = swift_allocError();
    void *v19 = 0;
    v19[1] = 0;
    v19[2] = 1;
    a5();
    uint64_t v15 = (void *)v18;
LABEL_3:
LABEL_5:

    return;
  }
  if (a3)
  {
    self;
    uint64_t v20 = swift_dynamicCastObjCClass();
    if (v20)
    {
      uint64_t v21 = (void *)v20;
      id v22 = a3;
      sub_191D77104(a1, a2);
      if ((uint64_t)objc_msgSend(v21, sel_statusCode) >= 400)
      {
        id v26 = objc_msgSend(v21, sel_statusCode);
        sub_191EE8170();
        uint64_t v27 = sub_191EE8130();
        uint64_t v29 = v28;
        sub_191DF8A54();
        uint64_t v30 = (void *)swift_allocError();
        *unint64_t v31 = v26;
        v31[1] = v27;
        id v31[2] = v29;
        a5();

        sub_191D76FF8(a1, a2);
        return;
      }

      sub_191D76FF8(a1, a2);
    }
  }
  sub_191D76FA0(a1, a2);
  a7(a1, a2);

  sub_191D76FF8(a1, a2);
}

uint64_t sub_191DF8A08()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_191DF8A48(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  sub_191DF86D4(a1, a2, a3, a4, *(void (**)(void))(v4 + 16), *(void *)(v4 + 24), *(void (**)(uint64_t, unint64_t))(v4 + 32));
}

unint64_t sub_191DF8A54()
{
  unint64_t result = qword_1E92F3938[0];
  if (!qword_1E92F3938[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92F3938);
  }
  return result;
}

void sub_191DF8AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(*(void *)(a4 + 16))
  {
    case 1:
      sub_191EE8C90();
      OUTLINED_FUNCTION_2_27();
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_191EEB6F0;
      uint64_t v6 = v5 + 32;
      uint64_t v7 = a4 + 32;
      goto LABEL_8;
    case 2:
      sub_191EE8C90();
      OUTLINED_FUNCTION_2_27();
      long long v8 = (__n128 *)swift_allocObject();
      OUTLINED_FUNCTION_0_23(v8, (__n128)xmmword_191EEBD20);
      uint64_t v6 = (uint64_t)&v8[4].n128_i64[1];
      uint64_t v7 = a4 + 72;
      goto LABEL_8;
    case 3:
      sub_191EE8C90();
      OUTLINED_FUNCTION_2_27();
      uint64_t v9 = (__n128 *)swift_allocObject();
      OUTLINED_FUNCTION_0_23(v9, (__n128)xmmword_191EEE540);
      sub_191D702F0(a4 + 72, (uint64_t)&v9[4].n128_i64[1]);
      uint64_t v6 = (uint64_t)&v9[7];
      uint64_t v7 = a4 + 112;
      goto LABEL_8;
    case 4:
      sub_191EE8C90();
      OUTLINED_FUNCTION_2_27();
      uint64_t v10 = (__n128 *)swift_allocObject();
      OUTLINED_FUNCTION_0_23(v10, (__n128)xmmword_191EEE640);
      sub_191D702F0(a4 + 72, (uint64_t)&v10[4].n128_i64[1]);
      sub_191D702F0(a4 + 112, (uint64_t)&v10[7]);
      uint64_t v6 = (uint64_t)&v10[9].n128_i64[1];
      uint64_t v7 = a4 + 152;
      goto LABEL_8;
    case 5:
      sub_191EE8C90();
      OUTLINED_FUNCTION_2_27();
      uint64_t v11 = (__n128 *)swift_allocObject();
      OUTLINED_FUNCTION_0_23(v11, (__n128)xmmword_191EEC0C0);
      sub_191D702F0(a4 + 72, (uint64_t)&v11[4].n128_i64[1]);
      sub_191D702F0(a4 + 112, (uint64_t)&v11[7]);
      sub_191D702F0(a4 + 152, (uint64_t)&v11[9].n128_i64[1]);
      uint64_t v6 = (uint64_t)&v11[12];
      uint64_t v7 = a4 + 192;
LABEL_8:
      sub_191D702F0(v7, v6);
      sub_191D9399C();
      sub_191EE8DD0();
      OUTLINED_FUNCTION_1_27();
      sub_191EE7910();
      swift_bridgeObjectRelease();
      break;
    default:
      sub_191EE8C90();
      sub_191D9399C();
      sub_191EE8DD0();
      OUTLINED_FUNCTION_1_27();
      sub_191EE7910();
      break;
  }
}

void simulateCrash(unless:_:_:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) == 0) {
    sub_191DF8AA4(a2, a3, a4, a5);
  }
}

uint64_t dispatch thunk of Constructable.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t Quantity.quantifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_191DF8D28(v2, v3, v4);
}

uint64_t sub_191DF8D28(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4) {
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t Quantity.thing.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t Quantity.inverted.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t Quantity.description.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v2;
}

uint64_t static Quantity.need<A>(_:of:)()
{
  return sub_191DF8F84();
}

uint64_t sub_191DF8DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v13 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(unsigned char *)(a7 + 16) = v13;
  id v14 = (int *)type metadata accessor for Quantity();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + v14[7], a2, a6);
  *(unsigned char *)(a7 + v14[8]) = a3;
  uint64_t v16 = (void *)(a7 + v14[9]);
  *uint64_t v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t static Quantity.need<A>(_:without:)()
{
  OUTLINED_FUNCTION_0_24();
  uint64_t v1 = MEMORY[0x1F4188790](v0);
  uint64_t v3 = OUTLINED_FUNCTION_1_28(v1, v2, v6);
  v4(v3);
  OUTLINED_FUNCTION_3_20();
  sub_191EE9190();
  sub_191EE8280();
  Quantifier.description.getter();
  sub_191EE8280();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  sub_191EE9720();
  return OUTLINED_FUNCTION_2_28();
}

uint64_t static Quantity.has<A>(_:of:)()
{
  return sub_191DF8F84();
}

uint64_t sub_191DF8F84()
{
  OUTLINED_FUNCTION_0_24();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v3 + 8);
  char v8 = *(unsigned char *)(v3 + 16);
  v15[0] = *(void *)v3;
  uint64_t v6 = v15[0];
  v15[1] = v7;
  char v16 = v8;
  (*(void (**)(char *))(v9 + 16))(v5);
  uint64_t v13 = 0;
  uint64_t v14 = 0xE000000000000000;
  sub_191DF8D28(v6, v7, v8);
  sub_191EE8280();
  v11[0] = v6;
  v11[1] = v7;
  char v12 = v8;
  Quantifier.description.getter();
  sub_191EE8280();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  sub_191EE9720();
  return sub_191DF8DCC((uint64_t)v15, (uint64_t)v5, 0, v13, v14, v0, v1);
}

uint64_t static Quantity.doesNotHave<A>(_:of:)()
{
  OUTLINED_FUNCTION_0_24();
  uint64_t v1 = MEMORY[0x1F4188790](v0);
  uint64_t v3 = OUTLINED_FUNCTION_1_28(v1, v2, v6);
  v4(v3);
  OUTLINED_FUNCTION_3_20();
  sub_191EE9190();
  sub_191EE8280();
  Quantifier.description.getter();
  sub_191EE8280();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  sub_191EE9720();
  return OUTLINED_FUNCTION_2_28();
}

uint64_t sub_191DF91B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191DF9260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((((v7 + 17) & ~v7) + v8) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((((v7 + 17) & ~v7) + v8) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    uint64_t v11 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v12 = *(void *)a2;
    uint64_t v13 = *(void *)(a2 + 8);
    char v14 = *(unsigned char *)(a2 + 16);
    sub_191DF8D28(*(void *)a2, v13, v14);
    *(void *)a1 = v12;
    *(void *)(a1 + 8) = v13;
    *(unsigned char *)(a1 + 16) = v14;
    uint64_t v15 = a2 + v7;
    uint64_t v16 = (a1 + v7 + 17) & ~v7;
    uint64_t v17 = (v15 + 17) & ~v7;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v16, v17, v5);
    *(unsigned char *)(v16 + v8) = *(unsigned char *)(v17 + v8);
    unint64_t v18 = (v16 + v8) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = (v17 + v8) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(void *)(v18 + 16) = *(void *)(v19 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_191DF93C8(uint64_t a1, uint64_t a2)
{
  sub_191DF9464(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 17) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));

  return swift_bridgeObjectRelease();
}

uint64_t sub_191DF9464(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_191DF9478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_191DF8D28(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (v11 + 17 + a1) & ~v11;
  uint64_t v13 = (v11 + 17 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v10 + 48);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  v15 &= 0xFFFFFFFFFFFFFFF8;
  v16 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_191DF9550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_191DF8D28(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  char v11 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v8;
  sub_191DF9464(v9, v10, v11);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 17 + a1) & ~v14;
  uint64_t v16 = (v14 + 17 + a2) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v15, v16);
  uint64_t v17 = *(void *)(v13 + 40);
  uint64_t v18 = v17 + v15;
  uint64_t v19 = v17 + v16;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191DF9640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 17 + a1) & ~v6;
  uint64_t v8 = (v6 + 17 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32);
  unint64_t v10 = v9 + v7;
  unint64_t v11 = v9 + v8;
  *(unsigned char *)unint64_t v10 = *(unsigned char *)v11;
  *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v11 & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_191DF96EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_191DF9464(v7, v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 17 + a1) & ~v12;
  uint64_t v14 = (v12 + 17 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 24);
  uint64_t v16 = v15 + v13;
  uint64_t v17 = v15 + v14;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  v16 &= 0xFFFFFFFFFFFFFFF8;
  v17 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191DF97C0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = *(void *)(v5 + 64);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v9 < a2)
  {
    unint64_t v10 = ((((v7 + 17) & ~v7) + v8) & 0xFFFFFFFFFFFFFFF8) + 24;
    unsigned int v11 = a2 - v9;
    uint64_t v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v13 = 2;
    }
    else {
      unsigned int v13 = v11 + 1;
    }
    if (v13 >= 0x10000) {
      unsigned int v14 = 4;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v13 < 0x100) {
      unsigned int v14 = 1;
    }
    if (v13 >= 2) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = *((unsigned __int8 *)a1 + v10);
        if (!v16) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v16 = *(unsigned __int16 *)((char *)a1 + v10);
        if (v16) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191DF9914);
      case 4:
        int v16 = *(_DWORD *)((char *)a1 + v10);
        if (!v16) {
          break;
        }
LABEL_22:
        int v18 = v16 - 1;
        if (v12)
        {
          int v18 = 0;
          LODWORD(v12) = *a1;
        }
        return v9 + (v12 | v18) + 1;
      default:
        break;
    }
  }
  uint64_t v19 = ((unint64_t)a1 + v7 + 17) & ~v7;
  if (v6 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload(v19, v6, v4);
  }
  unint64_t v20 = *(void *)(((v19 + v8) & 0xFFFFFFFFFFFFFFF8) + 16);
  if (v20 >= 0xFFFFFFFF) {
    LODWORD(v20) = -1;
  }
  return (v20 + 1);
}

void sub_191DF9928(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v12 = ((((v10 + 17) & ~v10) + v11) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v9 >= a3)
  {
    int v16 = 0;
  }
  else
  {
    unsigned int v13 = a3 - v9;
    if (((((v10 + 17) & ~v10) + v11) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((((v10 + 17) & ~v10) + v11) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      int v17 = a2 - v9;
    }
    else {
      int v17 = 1;
    }
    if (((((v10 + 17) & ~v10) + v11) & 0xFFFFFFF8) != 0xFFFFFFE8)
    {
      int v18 = ~v9 + a2;
      bzero(a1, ((((v10 + 17) & ~v10) + v11) & 0xFFFFFFFFFFFFFFF8) + 24);
      *(_DWORD *)a1 = v18;
    }
    switch(v16)
    {
      case 1:
        a1[v12] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v12] = v17;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x191DF9B14);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        unint64_t v19 = (unint64_t)&a1[v10 + 17] & ~v10;
        if (v8 < 0x7FFFFFFF)
        {
          unint64_t v20 = (v19 + v11) & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)(v20 + 8) = a2 ^ 0x80000000;
            *(void *)(v20 + 16) = 0;
          }
          else
          {
            *(void *)(v20 + 16) = (a2 - 1);
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload(v19, a2, v8, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for Quantity()
{
  return __swift_instantiateGenericMetadata();
}

void sub_191DF9B54()
{
  OUTLINED_FUNCTION_26_7();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    sub_191DCBD48();
    uint64_t v1 = v7;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v8 = (*(void *)(v1 + 24) >> 1) - *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(sub_191EE73F0() - 8);
  if (v8 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_191DCD7D4(v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v0 = v1;
    return;
  }
  uint64_t v10 = *(void *)(v1 + 16);
  BOOL v5 = __OFADD__(v10, v2);
  uint64_t v11 = v10 + v2;
  if (!v5)
  {
    *(void *)(v1 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_191DF9C60(unint64_t a1)
{
  if (a1 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v3 = sub_191EE94B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v4 = sub_191EE94B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = v4 + v3;
  if (__OFADD__(v4, v3))
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    uint64_t v8 = 1;
  }
  if (v6 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v10 = sub_191EE94B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5) {
    uint64_t v10 = v5;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v11 = MEMORY[0x192FE8390](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v1 = v11;
  uint64_t v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = (*(void *)(v9 + 24) >> 1) - v12;
  uint64_t result = sub_191DFAB74(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    sub_191DFAD00();
    goto LABEL_21;
  }
  uint64_t v16 = v15;
  if (v15 >= 1)
  {
    uint64_t v17 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v18 = __OFADD__(v17, v15);
    uint64_t v19 = v17 + v15;
    if (v18)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  swift_bridgeObjectRelease();
  if (v16 == v13) {
    goto LABEL_28;
  }
LABEL_21:

  return sub_191EE8550();
}

void sub_191DF9E44()
{
  OUTLINED_FUNCTION_26_7();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    sub_191D78788();
    uint64_t v1 = v7;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_21_6();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_191D63978();
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v0 = v1;
    return;
  }
  uint64_t v9 = *(void *)(v1 + 16);
  BOOL v5 = __OFADD__(v9, v2);
  uint64_t v10 = v9 + v2;
  if (!v5)
  {
    *(void *)(v1 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_191DF9F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(unint64_t **a1), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_38_1();
  a29 = v34;
  a30 = v35;
  unint64_t v36 = v30;
  uint64_t v38 = v37;
  uint64_t v39 = sub_191E7281C(v37);
  uint64_t v40 = *v36;
  uint64_t v41 = *(void *)(*v36 + 16);
  uint64_t v42 = v41 + v39;
  if (__OFADD__(v41, v39))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v43 = v39;
  if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v44 = *(void *)(v40 + 24) >> 1, v44 < v42))
  {
    sub_191DCC658();
    uint64_t v40 = v45;
    uint64_t v44 = *(void *)(v45 + 24) >> 1;
  }
  uint64_t v46 = *(void *)(v40 + 16);
  uint64_t v47 = v44 - v46;
  uint64_t v48 = (uint64_t)sub_191E76758(&a17, v40 + 40 * v46 + 32, v44 - v46, v38);
  if (v48 < v43) {
    goto LABEL_12;
  }
  if (v48 >= 1)
  {
    uint64_t v49 = *(void *)(v40 + 16);
    BOOL v50 = __OFADD__(v49, v48);
    uint64_t v51 = v49 + v48;
    if (v50)
    {
      __break(1u);
      goto LABEL_10;
    }
    *(void *)(v40 + 16) = v51;
  }
  if (v48 != v47)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    *unint64_t v36 = v40;
    OUTLINED_FUNCTION_59();
    return;
  }
LABEL_13:
  unint64_t v52 = a18;
  if (a18 == *(void *)(a17 + 16)) {
    goto LABEL_10;
  }
  uint64_t v64 = a17;
  uint64_t v53 = *(void *)(v40 + 16);
  unint64_t v54 = &a17;
  uint64_t v66 = sub_191E75E8C(&a13, a18);
  OUTLINED_FUNCTION_5_19((uint64_t)v66, v55);
  ((void (*)(void (**)(unint64_t **), void))v66)(&a13, 0);
  BOOL v50 = __OFADD__(v52, 1);
  unint64_t v56 = v52 + 1;
  if (!v50)
  {
    if (&a17 != 255)
    {
      uint64_t v57 = v64;
      while (2)
      {
        uint64_t v58 = *(void *)(v40 + 24) >> 1;
        if (v58 < v53 + 1)
        {
          sub_191DCC658();
          uint64_t v40 = v63;
          uint64_t v57 = v64;
          uint64_t v58 = *(void *)(v40 + 24) >> 1;
        }
        uint64_t v59 = v40 + 64;
LABEL_20:
        char v60 = (unsigned char *)(v59 + 40 * v53);
        while ((_BYTE)v54 != 0xFF && v53 < v58)
        {
          *((void *)v60 - 4) = v42;
          *((void *)v60 - 3) = v31;
          *((void *)v60 - 2) = v32;
          *((void *)v60 - 1) = v33;
          *char v60 = (_BYTE)v54;
          v60 += 40;
          ++v53;
          LOBYTE(v54) = -1;
          uint64_t v33 = 0;
          uint64_t v32 = 0;
          uint64_t v31 = 0;
          uint64_t v42 = 0;
          if (v56 != *(void *)(v57 + 16))
          {
            unint64_t v54 = &a17;
            uint64_t v67 = v59;
            uint64_t v65 = sub_191E75E8C(&a13, v56);
            OUTLINED_FUNCTION_5_19((uint64_t)v65, v62);
            ((void (*)(void (**)(unint64_t **), void))v65)(&a13, 0);
            uint64_t v59 = v67;
            uint64_t v57 = v64;
            BOOL v50 = __OFADD__(v56++, 1);
            if (!v50) {
              goto LABEL_20;
            }
            __break(1u);
            goto LABEL_34;
          }
        }
        *(void *)(v40 + 16) = v53;
        if ((_BYTE)v54 != 0xFF) {
          continue;
        }
        break;
      }
    }
    goto LABEL_10;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_191DFA15C(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v40 = v2;
  uint64_t v41 = *a1;
  if (v4)
  {
    OUTLINED_FUNCTION_2_29();
    uint64_t v5 = sub_191D69B04(v3, 0, 0, *(void *)(v1 + 16));
    if (v5)
    {
      uint64_t v6 = v5;
      swift_endAccess();
      uint64_t v7 = *(void *)(v6 + 16);
      uint64_t v8 = MEMORY[0x1E4FBC860];
      if (v7)
      {
        uint64_t v9 = (uint64_t *)(v6 + 32);
        do
        {
          uint64_t v11 = *v9++;
          uint64_t v10 = v11;
          if (v11 < 0)
          {
            OUTLINED_FUNCTION_4_0();
            uint64_t v12 = *(uint64_t (**)(void))(v14 + 80);
            OUTLINED_FUNCTION_19_7();
          }
          else
          {
            uint64_t v12 = *(uint64_t (**)(void))(*(void *)v10 + 80);
            swift_retain_n();
          }
          OUTLINED_FUNCTION_27_6();
          char v13 = v12();
          swift_release();
          if (v13)
          {
            swift_release();
          }
          else
          {
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              OUTLINED_FUNCTION_17_10(isUniquelyReferenced_nonNull_native, *(void *)(v8 + 16) + 1);
            }
            unint64_t v17 = *(void *)(v8 + 16);
            unint64_t v16 = *(void *)(v8 + 24);
            if (v17 >= v16 >> 1) {
              sub_191D6E6C0((void *)(v16 > 1), v17 + 1, 1);
            }
            *(void *)(v8 + 16) = v17 + 1;
            *(void *)(v8 + 8 * v17 + 32) = v10;
          }
          --v7;
        }
        while (v7);
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_5();
      swift_retain();
      uint64_t v3 = v41;
      sub_191D7B730();
      swift_endAccess();
      uint64_t v18 = *(void *)(v8 + 16);
      if (v18)
      {
        unint64_t v42 = MEMORY[0x1E4FBC860];
        sub_191EE92E0();
        uint64_t v19 = 0;
        do
        {
          if ((*(void *)(v8 + 8 * v19 + 32) & 0x8000000000000000) != 0)
          {
            swift_retain();
          }
          else
          {
            OUTLINED_FUNCTION_4_0();
            (*(void (**)(void))(v20 + 88))();
          }
          ++v19;
          sub_191EE92B0();
          sub_191EE92F0();
          sub_191EE9300();
          sub_191EE92C0();
        }
        while (v18 != v19);
        unint64_t v21 = v42;
        swift_release();
      }
      else
      {
        swift_release();
        unint64_t v21 = MEMORY[0x1E4FBC860];
      }
      sub_191DF9C60(v21);
      uint64_t v2 = v40;
    }
    else
    {
      swift_endAccess();
    }
  }
  OUTLINED_FUNCTION_2_29();
  uint64_t v22 = *(void *)(v1 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v23 = sub_191D69B04(v3, v2, v4, v22);
  swift_bridgeObjectRelease();
  if (v23)
  {
    swift_endAccess();
    uint64_t v24 = *(void *)(v23 + 16);
    uint64_t v25 = MEMORY[0x1E4FBC860];
    if (v24)
    {
      id v26 = (uint64_t *)(v23 + 32);
      do
      {
        uint64_t v28 = *v26++;
        uint64_t v27 = v28;
        if (v28 < 0)
        {
          OUTLINED_FUNCTION_4_0();
          uint64_t v29 = *(uint64_t (**)(void))(v31 + 80);
          OUTLINED_FUNCTION_19_7();
        }
        else
        {
          uint64_t v29 = *(uint64_t (**)(void))(*(void *)v27 + 80);
          swift_retain_n();
        }
        OUTLINED_FUNCTION_27_6();
        char v30 = v29();
        swift_release();
        if (v30)
        {
          swift_release();
        }
        else
        {
          uint64_t v32 = swift_isUniquelyReferenced_nonNull_native();
          if ((v32 & 1) == 0) {
            OUTLINED_FUNCTION_17_10(v32, *(void *)(v25 + 16) + 1);
          }
          unint64_t v34 = *(void *)(v25 + 16);
          unint64_t v33 = *(void *)(v25 + 24);
          if (v34 >= v33 >> 1) {
            sub_191D6E6C0((void *)(v33 > 1), v34 + 1, 1);
          }
          *(void *)(v25 + 16) = v34 + 1;
          *(void *)(v25 + 8 * v34 + 32) = v27;
        }
        --v24;
      }
      while (v24);
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    sub_191D7B730();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void *)(v25 + 16);
    if (v35)
    {
      unint64_t v43 = MEMORY[0x1E4FBC860];
      sub_191EE92E0();
      uint64_t v36 = 0;
      do
      {
        if ((*(void *)(v25 + 8 * v36 + 32) & 0x8000000000000000) != 0)
        {
          swift_retain();
        }
        else
        {
          OUTLINED_FUNCTION_4_0();
          (*(void (**)(void))(v37 + 88))();
        }
        ++v36;
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
      }
      while (v35 != v36);
      unint64_t v38 = v43;
      swift_release();
    }
    else
    {
      swift_release();
      unint64_t v38 = MEMORY[0x1E4FBC860];
    }
    sub_191DF9C60(v38);
  }
  else
  {
    swift_endAccess();
  }
  return v44;
}

#error "191DFA96C: call analysis failed (funcsize=227)"

void *assignWithCopy for CallbackStore.CallbackDefinitionContainer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for CallbackStore.CallbackDefinitionContainer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CallbackStore.CallbackDefinitionContainer(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for CallbackStore.CallbackDefinitionContainer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_191DFAB34(void *a1)
{
  return *a1 >> 63;
}

void *sub_191DFAB40(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_191DFAB50(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for CallbackStore.CallbackDefinitionContainer()
{
  return &type metadata for CallbackStore.CallbackDefinitionContainer;
}

uint64_t sub_191DFAB74(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v7 = sub_191EE94B0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v8 = sub_191EE94B0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_191DFAD00();
          sub_191DFAD80();
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
          for (unint64_t i = 0; i != v7; ++i)
          {
            uint64_t v10 = sub_191EBFBD0(v13, i, a3);
            uint64_t v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t **, void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_191DCD890((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_191DFAD00()
{
  if (!qword_1EB50C128)
  {
    sub_191D6E904(255, (unint64_t *)&qword_1EB50D560, MEMORY[0x1E4FBC838] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for CallbackDefinition);
    unint64_t v0 = sub_191EE86B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50C128);
    }
  }
}

unint64_t sub_191DFAD80()
{
  unint64_t result = qword_1E92F39C0;
  if (!qword_1E92F39C0)
  {
    sub_191DFAD00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F39C0);
  }
  return result;
}

unint64_t sub_191DFADD0(unint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_191D62B78(a2);
      unint64_t result = sub_191D62B78(a3);
      break;
    case 2:
    case 3:
      sub_191D62B78(result);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      goto LABEL_7;
    case 4:
    case 5:
      sub_191D62B78(result);
LABEL_7:
      unint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      break;
    default:
      return result;
  }
  return result;
}

id InterprocessDiagnosticDumpNotifier.__allocating_init(notificationName:diagnosticTempDir:log:)()
{
  OUTLINED_FUNCTION_1_30();
  uint64_t v0 = OUTLINED_FUNCTION_2_30();
  return InterprocessDiagnosticDumpNotifier.init(notificationName:diagnosticTempDir:log:)(v0, v1, v2, v3);
}

id InterprocessDiagnosticDumpNotifier.init(notificationName:diagnosticTempDir:log:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = sub_191EE7940();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191EE73F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  id v16 = a4;
  sub_191EE7950();
  id v17 = objc_allocWithZone(ObjectType);
  id v18 = InterprocessDiagnosticDumpNotifier.init(notificationName:diagnosticTempDir:logger:)(a1, a2, (uint64_t)v15, (uint64_t)v11);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v12);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v18;
}

id InterprocessDiagnosticDumpNotifier.__allocating_init(notificationName:diagnosticTempDir:logger:)()
{
  OUTLINED_FUNCTION_1_30();
  uint64_t v0 = OUTLINED_FUNCTION_2_30();
  return InterprocessDiagnosticDumpNotifier.init(notificationName:diagnosticTempDir:logger:)(v0, v1, v2, v3);
}

id InterprocessDiagnosticDumpNotifier.init(notificationName:diagnosticTempDir:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  Class ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &v5[OBJC_IVAR___TFInterprocessDiagnosticDumpNotifier_interprocessDiagnosticDumpNotification];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  uint64_t v12 = &v5[OBJC_IVAR___TFInterprocessDiagnosticDumpNotifier_diagnosticTempDir];
  uint64_t v13 = sub_191EE73F0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a3, v13);
  id v16 = &v5[OBJC_IVAR___TFInterprocessDiagnosticDumpNotifier_logger];
  uint64_t v17 = sub_191EE7940();
  OUTLINED_FUNCTION_0_0();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a4, v17);
  v22.receiver = v5;
  v22.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v22, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a4, v17);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a3, v13);
  return v20;
}

Swift::Void __swiftcall InterprocessDiagnosticDumpNotifier.triggerDiagnosticFileDump()()
{
  sub_191DFB33C();

  sub_191DFB744();
}

void sub_191DFB33C()
{
  v28[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_191EE7350();
  v28[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v28);

  uint64_t v3 = "P";
  if (v2)
  {
    id v4 = v28[0];
  }
  else
  {
    id v5 = v28[0];
    unint64_t v6 = (void *)sub_191EE7300();

    swift_willThrow();
    id v7 = v6;
    id v8 = v6;
    uint64_t v9 = sub_191EE7920();
    os_log_type_t v10 = sub_191EE8C80();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412290;
      id v13 = v6;
      uint64_t v14 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v28[0] = v14;
      uint64_t v3 = "P";
      sub_191EE8EA0();
      *uint64_t v12 = v14;

      _os_log_impl(&dword_191D4D000, v9, v10, "Failed to clear diagnostic file dir; error=%@", v11, 0xCu);
      sub_191DA5470();
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v12, -1, -1);
      MEMORY[0x192FE9A10](v11, -1, -1);
    }
    else
    {
    }
  }
  uint64_t v15 = (void *)sub_191EE7350();
  v28[0] = 0;
  unsigned int v16 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v15, 1, 0, v28);

  if (v16)
  {
    id v17 = v28[0];
  }
  else
  {
    id v18 = v28[0];
    uint64_t v19 = (void *)sub_191EE7300();

    swift_willThrow();
    id v20 = v19;
    id v21 = v19;
    objc_super v22 = sub_191EE7920();
    os_log_type_t v23 = sub_191EE8C80();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = *((void *)v3 + 132);
      id v26 = v19;
      uint64_t v27 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v28[0] = v27;
      sub_191EE8EA0();
      void *v25 = v27;

      _os_log_impl(&dword_191D4D000, v22, v23, "Failed to create diagnostic file dir; error=%@", v24, 0xCu);
      sub_191DA5470();
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v25, -1, -1);
      MEMORY[0x192FE9A10](v24, -1, -1);
    }
    else
    {
    }
  }
}

void sub_191DFB744()
{
  id v0 = CFNotificationCenterGetDarwinNotifyCenter();
  uint64_t v1 = (__CFString *)sub_191EE80E0();
  CFNotificationCenterPostNotification(v0, v1, 0, 0, 1u);
}

id InterprocessDiagnosticDumpNotifier.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void InterprocessDiagnosticDumpNotifier.init()()
{
}

id InterprocessDiagnosticDumpNotifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191DFB984()
{
  return type metadata accessor for InterprocessDiagnosticDumpNotifier();
}

uint64_t type metadata accessor for InterprocessDiagnosticDumpNotifier()
{
  uint64_t result = qword_1E92F39E0;
  if (!qword_1E92F39E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191DFB9D4()
{
  uint64_t result = sub_191EE73F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191EE7940();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for InterprocessDiagnosticDumpNotifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InterprocessDiagnosticDumpNotifier);
}

uint64_t dispatch thunk of InterprocessDiagnosticDumpNotifier.__allocating_init(notificationName:diagnosticTempDir:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static Random.string(chars:)(uint64_t a1)
{
  uint32_t v1 = a1;
  uint32_t v2 = arc4random_uniform(HIDWORD(a1));
  if (v2 <= v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = v2;
  }
  if (v3)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_191D6382C();
    while (1)
    {
      unint64_t v4 = sub_191EE8210();
      if ((v4 & 0x8000000000000000) != 0 || HIDWORD(v4)) {
        break;
      }
      arc4random_uniform(v4);
      sub_191EE8250();
      uint64_t v5 = sub_191EE8330();
      uint64_t v7 = v6;
      unint64_t v8 = *(void *)(v12 + 16);
      if (v8 >= *(void *)(v12 + 24) >> 1) {
        sub_191D6382C();
      }
      *(void *)(v12 + 16) = v8 + 1;
      uint64_t v9 = v12 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v7;
      if (!--v3) {
        goto LABEL_11;
      }
    }
    OUTLINED_FUNCTION_0_2();
    uint64_t result = sub_191EE9430();
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_191D78A5C();
    sub_191D788B0();
    uint64_t v10 = sub_191EE7FE0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t static Random.colorHEX()()
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v0 = 6;
  sub_191D6382C();
  while (1)
  {
    unint64_t v1 = sub_191EE8210();
    if ((v1 & 0x8000000000000000) != 0 || HIDWORD(v1)) {
      break;
    }
    arc4random_uniform(v1);
    sub_191EE8250();
    uint64_t v2 = sub_191EE8330();
    uint64_t v4 = v3;
    unint64_t v5 = *(void *)(v8 + 16);
    if (v5 >= *(void *)(v8 + 24) >> 1) {
      sub_191D6382C();
    }
    *(void *)(v8 + 16) = v5 + 1;
    uint64_t v6 = v8 + 16 * v5;
    *(void *)(v6 + 32) = v2;
    *(void *)(v6 + 40) = v4;
    if (!--v0)
    {
      sub_191D78A5C();
      sub_191D788B0();
      sub_191EE7FE0();
      swift_release();
      sub_191EE8280();
      swift_bridgeObjectRelease();
      return 35;
    }
  }
  OUTLINED_FUNCTION_0_2();
  uint64_t result = sub_191EE9430();
  __break(1u);
  return result;
}

uint64_t static Random.data()()
{
  uint64_t v0 = sub_191EE8190();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Random.string(chars:)(0x3200000019);
  sub_191EE8170();
  uint64_t v6 = sub_191EE8120();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  if (v8 >> 60 != 15) {
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t static Random.sentence(words:)(uint64_t a1)
{
  uint32_t v1 = a1;
  uint32_t v2 = arc4random_uniform(HIDWORD(a1));
  if (v2 <= v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = v2;
  }
  if (v3)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_191D6382C();
    do
    {
      uint64_t v4 = static Random.string(chars:)(0x800000003);
      uint64_t v6 = v5;
      unint64_t v7 = *(void *)(v11 + 16);
      if (v7 >= *(void *)(v11 + 24) >> 1) {
        sub_191D6382C();
      }
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v8 = v11 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v6;
      --v3;
    }
    while (v3);
  }
  sub_191D78A5C();
  sub_191D788B0();
  uint64_t v9 = sub_191EE7FE0();
  swift_bridgeObjectRelease();
  return v9;
}

double static Random.double(seed:allowNegative:)(uint32_t a1, char a2)
{
  uint32_t v4 = arc4random_uniform(a1);
  if (v4 <= 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = v4;
  }
  double v6 = (double)v5;
  uint32_t v7 = arc4random_uniform(a1);
  if (v7 <= 1) {
    unsigned int v8 = 1;
  }
  else {
    unsigned int v8 = v7;
  }
  double v9 = v6 / (double)v8;
  if ((a2 & 1) != 0 && (arc4random_uniform(2u) & 1) == 0) {
    return -v9;
  }
  return v9;
}

uint64_t static Random.uint(seed:)(uint32_t a1)
{
  LODWORD(result) = arc4random_uniform(a1);
  if (result <= 1) {
    return 1;
  }
  else {
    return result;
  }
}

uint64_t static Random.date(withinLastDays:)(uint64_t a1)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_3_22();
  MEMORY[0x1F4188790](v5);
  uint64_t result = OUTLINED_FUNCTION_4_18();
  if (__OFSUB__(0, a1))
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_191EE7590();
  uint64_t result = sub_191EE7580();
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v7 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v7 < 4294967300.0)
  {
    arc4random_uniform(v7);
    sub_191EE7590();
    unsigned int v8 = *(void (**)(void))(v3 + 8);
    OUTLINED_FUNCTION_2_31();
    v8();
    OUTLINED_FUNCTION_2_31();
    return ((uint64_t (*)(void))v8)();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t static Random.date(withinNextDays:)()
{
  sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = v0;
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_3_22();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_4_18();
  sub_191EE7590();
  uint64_t result = sub_191EE7580();
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 < 4294967300.0)
  {
    arc4random_uniform(v5);
    sub_191EE7590();
    double v6 = *(void (**)(void))(v1 + 8);
    OUTLINED_FUNCTION_2_31();
    v6();
    OUTLINED_FUNCTION_2_31();
    return ((uint64_t (*)(void))v6)();
  }
LABEL_7:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for Random()
{
  return &type metadata for Random;
}

uint64_t sub_191DFC398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191D5AC98();
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_3_3();
  sub_191DF3E08(a1, v3);
  uint64_t v7 = sub_191EE87D0();
  OUTLINED_FUNCTION_27_7(v3, 1, v7);
  if (v8)
  {
    sub_191D5AABC(v3);
  }
  else
  {
    sub_191EE87C0();
    OUTLINED_FUNCTION_33();
    v9();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_191EE8700();
    swift_unknownObjectRelease();
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_191DFC528(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191DFC530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v5 = v4;
  sub_191D5AC98();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191DF3E08(a1, (uint64_t)v12);
  uint64_t v13 = sub_191EE87D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_191D5AABC((uint64_t)v12);
  }
  else
  {
    sub_191EE87C0();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v14 = sub_191EE8700();
    uint64_t v16 = v15;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  uint64_t v17 = *v5;
  id v18 = (void *)swift_allocObject();
  v18[2] = *(void *)(a4 + 16);
  v18[3] = a2;
  v18[4] = a3;
  uint64_t v19 = (void *)(v16 | v14);
  if (v16 | v14)
  {
    v22[0] = 0;
    v22[1] = 0;
    uint64_t v19 = v22;
    v22[2] = v14;
    v22[3] = v16;
  }
  v21[1] = 1;
  v21[2] = v19;
  v21[3] = v17;
  swift_task_create();
  return swift_release();
}

uint64_t Sequence.uniqueByPtr<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v11);
  uint64_t v23 = MEMORY[0x1E4FBC870];
  (*(void (**)(unsigned char *, uint64_t))(v13 + 16))(&v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  objc_super v22 = &v23;
  uint64_t v14 = sub_191EE8420();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_191DFC818(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  uint64_t v6 = a2();
  if (!v4)
  {
    uint64_t v8 = v6;
    if (sub_191E10338(v6, *a4))
    {
      swift_unknownObjectRelease();
      char v7 = 0;
    }
    else
    {
      sub_191E4DDF4(&v10, v8);
      swift_unknownObjectRelease();
      char v7 = 1;
    }
  }
  return v7 & 1;
}

uint64_t sub_191DFC8A0(uint64_t a1)
{
  return sub_191DFC818(a1, *(uint64_t (**)(void))(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56)) & 1;
}

uint64_t Sequence.uniqueWithOptionals<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191D879A8(a1, a2, a3);
}

uint64_t sub_191DFC8F4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a4;
  uint64_t v36 = a8;
  uint64_t v11 = sub_191EE8DF0();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v33 = *(void *)(a6 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v31 - v19;
  MEMORY[0x1F4188790](v18);
  objc_super v22 = (char *)&v31 - v21;
  uint64_t v23 = v37;
  a2(a1);
  if (!v23)
  {
    uint64_t v32 = v17;
    uint64_t v37 = v20;
    uint64_t v26 = v33;
    uint64_t v25 = v34;
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, a6) == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v11);
LABEL_7:
      char v24 = 1;
      return v24 & 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v22, v14, a6);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    char v27 = sub_191EE8960();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v32, v22, a6);
      sub_191EE8980();
      uint64_t v28 = v37;
      sub_191EE8920();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
      v29(v28, a6);
      v29(v22, a6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, a6);
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_191DFCBCC(uint64_t a1)
{
  return sub_191D50420(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_191DFC8F4) & 1;
}

uint64_t Sequence<>.mapToDict()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v7);
  double v9 = (char *)v38 - v8;
  OUTLINED_FUNCTION_58();
  uint64_t v10 = sub_191EE8DF0();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v38 - v14;
  OUTLINED_FUNCTION_1_2();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_3_3();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  v38[1] = v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v38 - v22;
  uint64_t v46 = sub_191EE7D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v3, v41, a1);
  sub_191EE8370();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_191EE8E80();
  OUTLINED_FUNCTION_27_7((uint64_t)v15, 1, AssociatedTypeWitness);
  if (!v25)
  {
    uint64_t v26 = *(void *)(v43 + 32);
    uint64_t v40 = v42 + 8;
    uint64_t v41 = v26;
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v43 + 16);
    v43 += 32;
    char v27 = (void (**)(char *, uint64_t))(v43 - 24);
    do
    {
      OUTLINED_FUNCTION_53_0();
      v28();
      uint64_t v29 = (*(uint64_t (**)(uint64_t))(v42 + 8))(AssociatedTypeWitness);
      uint64_t v30 = (uint64_t)v15;
      uint64_t v31 = AssociatedConformanceWitness;
      uint64_t v32 = v23;
      uint64_t v33 = v19;
      uint64_t v35 = v34;
      (*v39)(v13, v9, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, AssociatedTypeWitness);
      uint64_t v44 = v29;
      uint64_t v45 = v35;
      uint64_t v19 = v33;
      uint64_t v23 = v32;
      uint64_t AssociatedConformanceWitness = v31;
      uint64_t v15 = (char *)v30;
      sub_191EE7F20();
      sub_191EE7F40();
      (*v27)(v9, AssociatedTypeWitness);
      sub_191EE8E80();
      OUTLINED_FUNCTION_27_7(v30, 1, AssociatedTypeWitness);
    }
    while (!v25);
  }
  OUTLINED_FUNCTION_33();
  v36();
  return v46;
}

uint64_t Sequence<>.mapToDict(allowMerging:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = a4;
  int v62 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  uint64_t v65 = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2_11();
  uint64_t v61 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v51 - v11;
  uint64_t v56 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v58 = v13;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2_11();
  uint64_t v57 = v15;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v55 = (char *)v51 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v51 - v19;
  OUTLINED_FUNCTION_1_2();
  uint64_t v22 = v21;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_3_3();
  uint64_t v24 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  v51[1] = v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)v51 - v27;
  uint64_t v70 = sub_191EE7D90();
  (*(void (**)(uint64_t, void (**)(void), uint64_t))(v22 + 16))(v4, v67, a2);
  sub_191EE8370();
  uint64_t v29 = (uint64_t)v20;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v63 = v28;
  uint64_t v64 = v24;
  uint64_t v60 = AssociatedConformanceWitness;
  sub_191EE8E80();
  OUTLINED_FUNCTION_27_7((uint64_t)v20, 1, AssociatedTypeWitness);
  if (!v31)
  {
    uint64_t v32 = *(void *)(v65 + 32);
    uint64_t v67 = (void (**)(void))(v65 + 16);
    uint64_t v33 = (uint64_t (**)(uint64_t, uint64_t))(v66 + 8);
    v65 += 32;
    uint64_t v34 = (void (**)(void))(v65 - 24);
    uint64_t v53 = v12;
    unint64_t v54 = v58 + 1;
    uint64_t v58 = (uint64_t (**)(uint64_t, uint64_t))(v66 + 8);
    uint64_t v59 = v32;
    unint64_t v52 = v20;
    do
    {
      OUTLINED_FUNCTION_53_0();
      v35();
      uint64_t v36 = *v67;
      OUTLINED_FUNCTION_15_0();
      v36();
      if (v62)
      {
        uint64_t v37 = v33;
        unint64_t v38 = *v34;
        OUTLINED_FUNCTION_40_2();
        v38();
        uint64_t v39 = (*v37)(AssociatedTypeWitness, v66);
      }
      else
      {
        uint64_t v41 = *(uint64_t (**)(uint64_t))(v66 + 8);
        uint64_t v68 = v41(AssociatedTypeWitness);
        uint64_t v69 = v42;
        uint64_t v43 = (uint64_t)v55;
        MEMORY[0x192FE70E0](&v68, v70, MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
        swift_bridgeObjectRelease();
        unint64_t v38 = *v34;
        OUTLINED_FUNCTION_40_2();
        v38();
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v43, 1, AssociatedTypeWitness);
        OUTLINED_FUNCTION_33();
        v45();
        if (EnumTagSinglePayload != 1)
        {
          uint64_t v12 = v53;
          OUTLINED_FUNCTION_40_2();
          v38();
          uint64_t v29 = (uint64_t)v52;
          goto LABEL_9;
        }
        uint64_t v29 = (uint64_t)v52;
        uint64_t v12 = v53;
        uint64_t v39 = ((uint64_t (*)(uint64_t, uint64_t))v41)(AssociatedTypeWitness, v66);
      }
      uint64_t v46 = v39;
      uint64_t v47 = v40;
      uint64_t v48 = v57;
      OUTLINED_FUNCTION_15_0();
      v36();
      __swift_storeEnumTagSinglePayload(v48, 0, 1, AssociatedTypeWitness);
      uint64_t v68 = v46;
      uint64_t v69 = v47;
      sub_191EE7F20();
      sub_191EE7F40();
      ((void (*)(char *, uint64_t))v38)(v12, AssociatedTypeWitness);
LABEL_9:
      uint64_t v33 = v58;
      sub_191EE8E80();
      OUTLINED_FUNCTION_27_7(v29, 1, AssociatedTypeWitness);
    }
    while (!v31);
  }
  OUTLINED_FUNCTION_33();
  v49();
  return v70;
}

uint64_t Sequence<>.unique()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v7);
  uint64_t v17 = MEMORY[0x1E4FBC870];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v3, a1);
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = &v17;
  uint64_t v10 = sub_191EE8420();
  swift_bridgeObjectRelease();
  return v10;
}

BOOL sub_191DFD550(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v9 = v7(AssociatedTypeWitness, a5);
  sub_191E1033C(v9, v10, v6);
  char v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    v7(AssociatedTypeWitness, a5);
    sub_191E4DC88();
    swift_bridgeObjectRelease();
  }
  return (v12 & 1) == 0;
}

BOOL sub_191DFD650(uint64_t a1)
{
  return sub_191DFD550(a1, *(uint64_t **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t Sequence.groupedBy<A>(_:)()
{
  swift_getAssociatedTypeWitness();
  sub_191EE86B0();
  sub_191EE7D90();
  sub_191EE7F20();
  sub_191EE8430();
  return v1;
}

uint64_t sub_191DFD760(void (*a1)(uint64_t), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a8;
  uint64_t v26 = a4;
  uint64_t v28 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(a6 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v26 - v20;
  uint64_t v27 = a2;
  v28(a2);
  uint64_t v28 = a1;
  uint64_t v22 = *(void *)a1;
  uint64_t v23 = sub_191EE86B0();
  MEMORY[0x192FE70E0](&v30, v21, v22, a6, v23, v29);
  uint64_t v24 = v30;
  if (!v30) {
    uint64_t v24 = sub_191EE85C0();
  }
  uint64_t v31 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v27, AssociatedTypeWitness);
  sub_191EE8630();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, a6);
  uint64_t v30 = v31;
  sub_191EE7F20();
  sub_191EE7F40();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, a6);
}

uint64_t sub_191DFD9D4(void (*a1)(uint64_t), uint64_t a2)
{
  return sub_191DFD760(a1, a2, *(void (**)(uint64_t))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t Sequence<>.throwingConcurrentMap<A>(_:)()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_30_4(v1, v2, v3, v4, v5);
  v0[10] = swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_191EE8DF0();
  v0[11] = v6;
  OUTLINED_FUNCTION_2_0(v6);
  v0[12] = v7;
  v0[13] = swift_task_alloc();
  v0[14] = swift_task_alloc();
  uint64_t v8 = sub_191EE8DF0();
  v0[15] = v8;
  OUTLINED_FUNCTION_2_0(v8);
  v0[16] = v9;
  uint64_t v10 = OUTLINED_FUNCTION_18_1();
  uint64_t v11 = OUTLINED_FUNCTION_47_1(v10);
  v0[18] = v11;
  OUTLINED_FUNCTION_2_0(v11);
  v0[19] = v12;
  v0[20] = OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v13, v14, v15);
}

uint64_t sub_191DFDB28()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_25_7();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_49_0(v5);
  uint64_t v6 = (void *)OUTLINED_FUNCTION_28_0();
  v2[21] = v6;
  v6[2] = v3;
  v6[3] = v4;
  v6[4] = v1;
  v6[5] = &unk_1E92F3A00;
  v6[6] = v0;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v2[22] = v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v7 = v2;
  v7[1] = sub_191DFDC60;
  uint64_t v9 = v2[18];
  uint64_t v10 = v2[10];
  return Sequence<>.throwingUnorderedConcurrentMap<A>(_:)((uint64_t)&unk_1E92F3A10, (uint64_t)v6, v9, v10, WitnessTable);
}

uint64_t sub_191DFDC60()
{
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_5_0();
  *uint64_t v3 = v2;
  uint64_t v5 = v4[20];
  uint64_t v6 = v4[19];
  uint64_t v7 = v4[18];
  uint64_t v8 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v9 = v8;
  *(void *)(v11 + 184) = v10;
  *(void *)(v11 + 192) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_release();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v12, v13, v14);
}

void sub_191DFDDC4()
{
  uint64_t v43 = v0;
  uint64_t v36 = (uint64_t)(v0 + 2);
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  OUTLINED_FUNCTION_42_2();
  uint64_t v3 = sub_191EE86A0();
  uint64_t v41 = v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v4 = sub_191EE8530();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_31_5();
  while (1)
  {
    if (v4 == MEMORY[0x192FE7810](v0[23], v0[10]))
    {
      uint64_t v5 = OUTLINED_FUNCTION_51_1();
    }
    else
    {
      OUTLINED_FUNCTION_50_2();
      OUTLINED_FUNCTION_35_4();
      if (v1)
      {
        uint64_t v9 = OUTLINED_FUNCTION_38_3();
        (*(void (**)(uint64_t, unint64_t))(v10 + 16))(v9, v11+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v4);
      }
      else
      {
        sub_191EE91C0();
        OUTLINED_FUNCTION_10_14();
        if (*(void *)(v29 + 64) != 8)
        {
          __break(1u);
          return;
        }
        uint64_t v30 = OUTLINED_FUNCTION_24_6(v28);
        v31(v30);
        swift_unknownObjectRelease();
      }
      OUTLINED_FUNCTION_34_5();
      MEMORY[0x192FE7830](&v42, v4, v2);
      swift_bridgeObjectRelease();
      uint64_t v5 = OUTLINED_FUNCTION_55_2();
    }
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
    uint64_t v12 = v0[14];
    uint64_t v13 = v0[10];
    OUTLINED_FUNCTION_29_5();
    v14();
    OUTLINED_FUNCTION_27_7(v12, 1, v13);
    if (v15) {
      break;
    }
    OUTLINED_FUNCTION_22_6();
    uint64_t v16 = OUTLINED_FUNCTION_59_2();
    v17(v16);
    OUTLINED_FUNCTION_44_3();
    uint64_t v18 = sub_191EE85B0();
    OUTLINED_FUNCTION_46_2(v18, v19, v20, v21, v22, v23, v24, v25, v36, v37, v38, v40, v41);
    unint64_t v26 = OUTLINED_FUNCTION_8_12();
    v27(v26);
    uint64_t v4 = v42;
  }
  uint64_t v32 = v0[6];
  long long v39 = *(_OWORD *)(v0 + 7);
  swift_bridgeObjectRelease();
  v0[3] = v3;
  uint64_t v33 = swift_task_alloc();
  *(void *)(v33 + 16) = v32;
  *(_OWORD *)(v33 + 24) = v39;
  sub_191EE86B0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_getWitnessTable();
  uint64_t v34 = sub_191EE83D0();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (void (*)(uint64_t))v0[1];
  v35(v34);
}

uint64_t sub_191DFE0C0()
{
  OUTLINED_FUNCTION_20_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v0();
}

uint64_t sub_191DFE144(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_191DFE230;
  return v9(a1, a3);
}

uint64_t sub_191DFE230()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v6 = v5;
  uint64_t v7 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v5 + 8);
  if (!v0) {
    uint64_t v7 = *(void *)(v3 + 16);
  }
  return v8(v7);
}

uint64_t sub_191DFE304()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_191DFE33C()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_32_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191DFE3CC;
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_30();
  return sub_191DFE144(v3, v4, v5, v6);
}

uint64_t sub_191DFE3CC()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_191DFE498(uint64_t a1, uint64_t *a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = *a2;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = (char *)a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v9 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, char *))((char *)a3 + *a3);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_191DFE61C;
  return v12(v9, v7, v8);
}

uint64_t sub_191DFE61C()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_6();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_191DFE6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_36_4();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_11_2(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_191D88064;
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_30();
  return v20(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t Sequence<>.throwingUnorderedConcurrentMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return OUTLINED_FUNCTION_26_0((uint64_t)sub_191DFE7AC);
}

uint64_t sub_191DFE7AC()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v1 = OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_14_8(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_191DFE870;
  uint64_t v3 = OUTLINED_FUNCTION_28_6();
  return MEMORY[0x1F4188080](v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_191DFE870()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_191DFE954()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_191DFE970()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v0();
}

uint64_t Sequence<>.concurrentMap<A>(_:)()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_30_4(v1, v2, v3, v4, v5);
  v0[10] = swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_191EE8DF0();
  v0[11] = v6;
  OUTLINED_FUNCTION_2_0(v6);
  v0[12] = v7;
  v0[13] = swift_task_alloc();
  v0[14] = swift_task_alloc();
  uint64_t v8 = sub_191EE8DF0();
  v0[15] = v8;
  OUTLINED_FUNCTION_2_0(v8);
  v0[16] = v9;
  uint64_t v10 = OUTLINED_FUNCTION_18_1();
  uint64_t v11 = OUTLINED_FUNCTION_47_1(v10);
  v0[18] = v11;
  OUTLINED_FUNCTION_2_0(v11);
  v0[19] = v12;
  v0[20] = OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v13, v14, v15);
}

uint64_t sub_191DFEAFC()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_25_7();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_49_0(v5);
  uint64_t v6 = (void *)OUTLINED_FUNCTION_28_0();
  v2[21] = v6;
  v6[2] = v3;
  v6[3] = v4;
  v6[4] = v1;
  v6[5] = &unk_1E92F3A40;
  v6[6] = v0;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v2[22] = v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v7 = v2;
  v7[1] = sub_191DFEC34;
  uint64_t v9 = v2[18];
  uint64_t v10 = v2[10];
  return Sequence<>.unorderedConcurrentMap<A>(_:)((uint64_t)&unk_1E92F3A50, (uint64_t)v6, v9, v10, WitnessTable);
}

uint64_t sub_191DFEC34()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_5_0();
  *uint64_t v2 = v1;
  uint64_t v4 = v3[20];
  uint64_t v5 = v3[19];
  uint64_t v6 = v3[18];
  uint64_t v7 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v8 = v7;
  *(void *)(v10 + 184) = v9;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

void sub_191DFED78()
{
  uint64_t v43 = v0;
  uint64_t v36 = (uint64_t)(v0 + 2);
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  OUTLINED_FUNCTION_42_2();
  uint64_t v3 = sub_191EE86A0();
  uint64_t v41 = v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v4 = sub_191EE8530();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_31_5();
  while (1)
  {
    if (v4 == MEMORY[0x192FE7810](v0[23], v0[10]))
    {
      uint64_t v5 = OUTLINED_FUNCTION_51_1();
    }
    else
    {
      OUTLINED_FUNCTION_50_2();
      OUTLINED_FUNCTION_35_4();
      if (v1)
      {
        uint64_t v9 = OUTLINED_FUNCTION_38_3();
        (*(void (**)(uint64_t, unint64_t))(v10 + 16))(v9, v11+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v4);
      }
      else
      {
        sub_191EE91C0();
        OUTLINED_FUNCTION_10_14();
        if (*(void *)(v29 + 64) != 8)
        {
          __break(1u);
          return;
        }
        uint64_t v30 = OUTLINED_FUNCTION_24_6(v28);
        v31(v30);
        swift_unknownObjectRelease();
      }
      OUTLINED_FUNCTION_34_5();
      MEMORY[0x192FE7830](&v42, v4, v2);
      swift_bridgeObjectRelease();
      uint64_t v5 = OUTLINED_FUNCTION_55_2();
    }
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
    uint64_t v12 = v0[14];
    uint64_t v13 = v0[10];
    OUTLINED_FUNCTION_29_5();
    v14();
    OUTLINED_FUNCTION_27_7(v12, 1, v13);
    if (v15) {
      break;
    }
    OUTLINED_FUNCTION_22_6();
    uint64_t v16 = OUTLINED_FUNCTION_59_2();
    v17(v16);
    OUTLINED_FUNCTION_44_3();
    uint64_t v18 = sub_191EE85B0();
    OUTLINED_FUNCTION_46_2(v18, v19, v20, v21, v22, v23, v24, v25, v36, v37, v38, v40, v41);
    unint64_t v26 = OUTLINED_FUNCTION_8_12();
    v27(v26);
    uint64_t v4 = v42;
  }
  uint64_t v32 = v0[6];
  long long v39 = *(_OWORD *)(v0 + 7);
  swift_bridgeObjectRelease();
  v0[3] = v3;
  uint64_t v33 = swift_task_alloc();
  *(void *)(v33 + 16) = v32;
  *(_OWORD *)(v33 + 24) = v39;
  OUTLINED_FUNCTION_58();
  sub_191EE86B0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_getWitnessTable();
  uint64_t v34 = sub_191EE83D0();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (void (*)(uint64_t))v0[1];
  v35(v34);
}

uint64_t sub_191DFF06C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_191DFF158;
  return v9(a1, a3);
}

uint64_t sub_191DFF158()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v2 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  return v4(v5);
}

uint64_t sub_191DFF258(uint64_t a1, uint64_t *a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = *a2;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = (char *)a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v9 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, char *))((char *)a3 + *a3);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_191DFF3DC;
  return v12(v9, v7, v8);
}

uint64_t sub_191DFF3DC()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_6();
  uint64_t v4 = *(void **)(v3 + 16);
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  *uint64_t v4 = v2;
  OUTLINED_FUNCTION_8_1();
  return v7();
}

uint64_t Sequence<>.unorderedConcurrentMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return OUTLINED_FUNCTION_26_0((uint64_t)sub_191DFF4D8);
}

uint64_t sub_191DFF4D8()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v1 = OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_14_8(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_191DFF59C;
  uint64_t v3 = OUTLINED_FUNCTION_28_6();
  return MEMORY[0x1F4187F28](v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_191DFF59C()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_191DFF680()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_191DFF698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191EE8DF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_191DFF70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  v8[12] = *(void *)(a7 - 8);
  v8[13] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[14] = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  v8[15] = v11;
  v8[16] = *(void *)(v11 + 64);
  v8[17] = swift_task_alloc();
  sub_191D5AC98();
  v8[18] = swift_task_alloc();
  sub_191EE8DF0();
  v8[19] = swift_task_alloc();
  v8[20] = sub_191D5EB0C();
  uint64_t v12 = sub_191EE8840();
  v8[21] = v12;
  v8[22] = *(void *)(v12 - 8);
  v8[23] = swift_task_alloc();
  sub_191EE8DF0();
  v8[24] = swift_task_alloc();
  v8[25] = *(void *)(a6 - 8);
  v8[26] = swift_task_alloc();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  v8[27] = v13;
  v8[28] = *(void *)(v13 - 8);
  v8[29] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191DFFA38, 0, 0);
}

uint64_t sub_191DFFA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = *(void *)(v12 + 120);
  OUTLINED_FUNCTION_15_0();
  v14();
  sub_191EE8370();
  while (1)
  {
    uint64_t v15 = *(void *)(v12 + 192);
    uint64_t v16 = *(void *)(v12 + 112);
    swift_getAssociatedConformanceWitness();
    sub_191EE8E80();
    OUTLINED_FUNCTION_27_7(v15, 1, v16);
    if (v17) {
      break;
    }
    uint64_t v18 = *(void *)(v12 + 144);
    uint64_t v19 = *(void *)(v12 + 64);
    uint64_t v36 = *(void *)(v12 + 72);
    uint64_t v37 = *(void *)(v12 + 56);
    uint64_t v20 = sub_191EE87D0();
    long long v38 = *(_OWORD *)(v12 + 80);
    __swift_storeEnumTagSinglePayload(v18, 1, 1, v20);
    uint64_t v21 = *(void (**)(uint64_t))(v13 + 32);
    OUTLINED_FUNCTION_29_5();
    v21(v22);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 0;
    *(void *)(v23 + 24) = 0;
    *(void *)(v23 + 32) = v36;
    *(_OWORD *)(v23 + 40) = v38;
    *(void *)(v23 + 56) = v37;
    *(void *)(v23 + 64) = v19;
    OUTLINED_FUNCTION_29_5();
    v21(v24);
    sub_191EE8860();
    swift_retain();
    sub_191DFC398(v18, (uint64_t)&unk_1E92F3A98, v23);
    sub_191D5AABC(v18);
  }
  OUTLINED_FUNCTION_9();
  v26(v25);
  *(void *)(v12 + 16) = sub_191EE85C0();
  OUTLINED_FUNCTION_58();
  swift_checkMetadataState();
  sub_191EE8810();
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v12 + 240) = v27;
  *uint64_t v27 = v12;
  v27[1] = sub_191DFFD1C;
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4187E48](v28, v29, v30, v31, v12 + 24, v32, v33, v34, a9, a10, a11, a12);
}

uint64_t sub_191DFFD1C()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_191DFFDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_3();
  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_27_7(v12[19], 1, v12[10]);
  if (v13)
  {
    uint64_t v14 = (void *)v12[4];
    OUTLINED_FUNCTION_9();
    v15();
    *uint64_t v14 = v12[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_11();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
  }
  else
  {
    OUTLINED_FUNCTION_53_0();
    v25();
    sub_191EE86B0();
    sub_191EE8630();
    unint64_t v26 = (void *)swift_task_alloc();
    v12[30] = v26;
    *unint64_t v26 = v12;
    v26[1] = sub_191DFFD1C;
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_11_11();
    return MEMORY[0x1F4187E48](v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12);
  }
}

uint64_t sub_191DFFFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_3();
  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_9();
  v12();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_11_11();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

uint64_t sub_191E00074(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_191D88378;
  return v11(a1, a6);
}

uint64_t sub_191E00164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[5] = a3;
  v8[6] = a4;
  v8[3] = a1;
  v8[4] = a2;
  v8[11] = *(void *)(a7 - 8);
  v8[12] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[13] = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  v8[14] = v11;
  v8[15] = *(void *)(v11 + 64);
  v8[16] = swift_task_alloc();
  sub_191D5AC98();
  v8[17] = swift_task_alloc();
  sub_191EE8DF0();
  v8[18] = swift_task_alloc();
  uint64_t v12 = sub_191EE8770();
  v8[19] = v12;
  v8[20] = *(void *)(v12 - 8);
  v8[21] = swift_task_alloc();
  sub_191EE8DF0();
  v8[22] = swift_task_alloc();
  v8[23] = *(void *)(a6 - 8);
  v8[24] = swift_task_alloc();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  v8[25] = v13;
  v8[26] = *(void *)(v13 - 8);
  v8[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191E00478, 0, 0);
}

uint64_t sub_191E00478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = *(void *)(v12 + 112);
  OUTLINED_FUNCTION_15_0();
  v14();
  sub_191EE8370();
  while (1)
  {
    uint64_t v15 = *(void *)(v12 + 176);
    uint64_t v16 = *(void *)(v12 + 104);
    swift_getAssociatedConformanceWitness();
    sub_191EE8E80();
    if (__swift_getEnumTagSinglePayload(v15, 1, v16) == 1) {
      break;
    }
    uint64_t v17 = *(void *)(v12 + 136);
    uint64_t v18 = *(void *)(v12 + 56);
    uint64_t v34 = *(void *)(v12 + 64);
    uint64_t v35 = *(void *)(v12 + 48);
    uint64_t v19 = sub_191EE87D0();
    long long v36 = *(_OWORD *)(v12 + 72);
    __swift_storeEnumTagSinglePayload(v17, 1, 1, v19);
    uint64_t v20 = *(void (**)(void))(v13 + 32);
    OUTLINED_FUNCTION_29_5();
    v20();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = 0;
    *(void *)(v21 + 24) = 0;
    *(void *)(v21 + 32) = v34;
    *(_OWORD *)(v21 + 40) = v36;
    *(void *)(v21 + 56) = v35;
    *(void *)(v21 + 64) = v18;
    OUTLINED_FUNCTION_29_5();
    v20();
    uint64_t v22 = sub_191EE8780();
    swift_retain();
    sub_191DFC530(v17, (uint64_t)&unk_1E92F3A78, v21, v22);
    sub_191D5AABC(v17);
  }
  OUTLINED_FUNCTION_9();
  v23();
  OUTLINED_FUNCTION_58();
  *(void *)(v12 + 16) = sub_191EE85C0();
  sub_191EE8750();
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v12 + 224) = v24;
  void *v24 = v12;
  v24[1] = sub_191E0071C;
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4187C58](v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12);
}

uint64_t sub_191E0071C()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_191E007E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_41_3();
  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_27_7(v12[18], 1, v12[9]);
  if (v13)
  {
    uint64_t v14 = (void *)v12[3];
    OUTLINED_FUNCTION_9();
    v15();
    *uint64_t v14 = v12[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_11_11();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
  }
  else
  {
    OUTLINED_FUNCTION_53_0();
    v25();
    sub_191EE86B0();
    sub_191EE8630();
    uint64_t v26 = (void *)swift_task_alloc();
    v12[28] = v26;
    *uint64_t v26 = v12;
    v26[1] = sub_191E0071C;
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_11_11();
    return MEMORY[0x1F4187C58](v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12);
  }
}

uint64_t sub_191E00980(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_191D88064;
  return v11(a1, a6);
}

uint64_t sub_191E00A70(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_191D87F9C;
  return v6(a1);
}

uint64_t sub_191E00B4C(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_191E00BA0()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_37_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191D88378;
  OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_30();
  return sub_191DFF70C(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_191E00C30()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_32_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191DF0A08;
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_30();
  return sub_191DFF06C(v3, v4, v5, v6);
}

uint64_t sub_191E00CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_36_4();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_11_2(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_191D88064;
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_30();
  return v20(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_191E00D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191DFF698(a1, a2);
}

uint64_t sub_191E00D74()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_37_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191D88378;
  OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_30();
  return sub_191E00164(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_191E00E08()
{
  OUTLINED_FUNCTION_33_5();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_12(AssociatedTypeWitness);
  OUTLINED_FUNCTION_43_1();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_11_2(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_191D88064;
  uint64_t v4 = OUTLINED_FUNCTION_12_11();
  return sub_191E00980(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_191E00EE8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E00F20(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 24);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_11_2(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_191D88064;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E92F3A80 + dword_1E92F3A80);
  return v7(a1, v3);
}

uint64_t sub_191E00FE4()
{
  OUTLINED_FUNCTION_33_5();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_12(AssociatedTypeWitness);
  OUTLINED_FUNCTION_43_1();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_11_2(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_191D88064;
  uint64_t v4 = OUTLINED_FUNCTION_12_11();
  return sub_191E00074(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_191E010D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191E00D54(a1, a2);
}

uint64_t AsyncSequence.collect()(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x1F4188298](sub_191E0110C, 0, 0);
}

uint64_t sub_191E0110C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  swift_getAssociatedTypeWitness();
  v0[3] = sub_191EE7DA0();
  uint64_t v3 = swift_task_alloc();
  v0[7] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  uint64_t v5 = sub_191EE86B0();
  *uint64_t v4 = v0;
  v4[1] = sub_191E0123C;
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[4];
  return MEMORY[0x1F4187E88](v0 + 2, v0 + 3, &unk_1E92F3AB0, v3, v7, v5, v6);
}

uint64_t sub_191E0123C()
{
  OUTLINED_FUNCTION_0_6();
  *(void *)(v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_191E01334;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_191DFE954;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191E01334()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191E01398(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[4] = AssociatedTypeWitness;
  v2[5] = *(void *)(AssociatedTypeWitness - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191E01470, 0, 0);
}

uint64_t sub_191E01470()
{
  (*(void (**)(void, void, void))(v0[5] + 16))(v0[6], v0[3], v0[4]);
  sub_191EE86B0();
  sub_191EE8630();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191E01518(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_191E015C8;
  return sub_191E01398(a1, a2);
}

uint64_t sub_191E015C8()
{
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t CodingSafeArray.wrappedValue.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t CodingSafeArray.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*CodingSafeArray.wrappedValue.modify())(void)
{
  return nullsub_1;
}

uint64_t CodingSafeArray.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CodingSafeArray.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191EE9AB0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    type metadata accessor for SafeishArray();
    swift_getWitnessTable();
    sub_191EE97E0();
    uint64_t v5 = v7[6];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodingSafeArray.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191EE9AF0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_191EE86B0();
  swift_getWitnessTable();
  sub_191EE9860();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_191E018F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CodingSafeArray.init(from:)(a1, a2);
}

uint64_t sub_191E01914(void *a1)
{
  return CodingSafeArray.encode(to:)(a1);
}

uint64_t type metadata accessor for CodingSafeArray()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_191E01944(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_191EE8360();
  }
  __break(1u);
  return result;
}

uint64_t VersionQualifier.name.getter()
{
  uint64_t v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t VersionQualifier.version.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

BOOL VersionQualifier.development.getter()
{
  return *(void *)(v0 + 16) != 0;
}

uint64_t VersionQualifier.init(name:version:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t VersionQualifier.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t VersionQualifier.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_191E01BD8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  unint64_t v39 = a2;
  v37[0] = 45;
  v37[1] = 0xE100000000000000;
  uint64_t v9 = sub_191EE7760();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  sub_191D63A18();
  sub_191EE8F10();
  unint64_t v11 = v10;
  char v13 = v12;
  sub_191E01C30((uint64_t)v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v36 = 0;
  }
  else
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v15 = sub_191EE8360();
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x192FE7380](v15, v17, v19, v21);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    unint64_t v25 = sub_191E01944(v11, a1, a2);
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x192FE7380](v25, v27, v29, v31);
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    v35._uint64_t countAndFlagsBits = v32;
    v35._unint64_t object = v34;
    uint64_t result = (unint64_t)VersionNumber.init(_:)(v35);
    uint64_t v36 = v38;
    a1 = v22;
    a2 = v24;
  }
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v36;
  return result;
}

void sub_191E01BD8()
{
  if (!qword_1EB50CB28[0])
  {
    sub_191EE7760();
    unint64_t v0 = sub_191EE8DF0();
    if (!v1) {
      atomic_store(v0, qword_1EB50CB28);
    }
  }
}

uint64_t sub_191E01C30(uint64_t a1)
{
  sub_191E01BD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t VersionQualifier.init(_:)@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (a2)
  {
    uint64_t result = VersionQualifier.init(_:)(result, a2, v7);
    uint64_t v4 = v7[0];
    uint64_t v5 = v7[1];
    uint64_t v6 = v7[2];
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

uint64_t static VersionQualifier.beta(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 1635018082;
  a2[1] = 0xE400000000000000;
  a2[2] = a1;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t VersionQualifier.description.getter()
{
  uint64_t v1 = *v0;
  if (v0[2])
  {
    uint64_t v3 = *v0;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191EE8280();
    VersionNumber.description.getter();
    sub_191EE8280();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return v1;
}

uint64_t static VersionQualifier.< infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (OUTLINED_FUNCTION_0_26(), (sub_191EE9770() & 1) != 0))
  {
    if (v2)
    {
      uint64_t v5 = v2;
    }
    else
    {
      if (qword_1E92F2C78 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_1E92F3D40;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    uint64_t v11 = v5;
    if (v3)
    {
      uint64_t v6 = v3;
    }
    else
    {
      uint64_t v7 = qword_1E92F2C78;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      if (v7 != -1) {
        swift_once();
      }
      uint64_t v6 = qword_1E92F3D40;
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v10 = v6;
    BOOL v8 = static VersionNumber.< infix(_:_:)((BOOL)&v11, (uint64_t)&v10);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    OUTLINED_FUNCTION_0_26();
    return sub_191EE9770();
  }
}

BOOL static VersionQualifier.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_191EE9770(), BOOL result = 0, (v5 & 1) != 0))
  {
    if (v2)
    {
      uint64_t v9 = v2;
      if (v3)
      {
        uint64_t v8 = v3;
        char v7 = static VersionNumber.== infix(_:_:)((uint64_t)&v9, (uint64_t)&v8);
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        swift_bridgeObjectRelease();
        return (v7 & 1) != 0;
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    else if (!v3)
    {
      return 1;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_191E01FB4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_191E01FFC(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_191ED6A48);
}

uint64_t sub_191E01FCC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_191E01FFC(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_191EA3DAC);
}

uint64_t sub_191E01FE4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_191E01FFC(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_191EA3E70);
}

uint64_t sub_191E01FFC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

unint64_t sub_191E0202C()
{
  unint64_t result = qword_1E92F3AB8;
  if (!qword_1E92F3AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3AB8);
  }
  return result;
}

void *assignWithCopy for VersionQualifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for VersionQualifier()
{
  return &type metadata for VersionQualifier;
}

uint64_t static CacheMaxAge.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    BOOL v5 = *(void *)&v3 == 0;
    if (v3 == 0.0) {
      unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
    }
    else {
      unsigned int v6 = 0;
    }
    if (v5) {
      unsigned int v4 = 0;
    }
    if (v2 == 0.0) {
      return v6;
    }
    else {
      return v4;
    }
  }
  else
  {
    return (v4 & 1) == 0 && v2 == v3;
  }
}

uint64_t CacheMaxAge.description.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    if (*(void *)v0) {
      return 0x69736E6972746E69;
    }
    else {
      return 0x72657665726F66;
    }
  }
  else
  {
    sub_191D9ED78();
    sub_191EE7DD0();
    sub_191EE8280();
    swift_bridgeObjectRelease();
    sub_191EE8280();
    return 678977901;
  }
}

uint64_t getEnumTagSinglePayload for CacheMaxAge(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CacheMaxAge(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_191E0225C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_191E02278(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for CacheMaxAge()
{
  return &type metadata for CacheMaxAge;
}

uint64_t withEagerCancellation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return MEMORY[0x1F4188298](sub_191E022CC, 0, 0);
}

uint64_t sub_191E022CC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 16) = 0;
  uint64_t v2 = type metadata accessor for EagerCancellationState();
  long long v10 = *(_OWORD *)(v0 + 48);
  uint64_t v3 = sub_191DE85DC(v0 + 16, v2);
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  *(_OWORD *)(v4 + 32) = v10;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = v3;
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_191E0241C;
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 40);
  return MEMORY[0x1F4188148](v8, &unk_1E92F3AD0, v4, sub_191E03344, v5, 0, 0, v7);
}

uint64_t sub_191E0241C()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4();
  *unsigned int v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = sub_191E02568;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = sub_191E0250C;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_191E0250C()
{
  OUTLINED_FUNCTION_3();
  swift_release();
  OUTLINED_FUNCTION_8_1();
  return v0();
}

uint64_t sub_191E02568()
{
  OUTLINED_FUNCTION_3();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v0();
}

uint64_t type metadata accessor for EagerCancellationState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E025F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_191E02618, 0, 0);
}

uint64_t sub_191E02618()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E92F3AD8 + dword_1E92F3AD8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_191E0270C;
  uint64_t v6 = *(void *)(v0 + 16);
  return v8(v6, 0, 0, (uint64_t)sub_191E0366C, v3);
}

uint64_t sub_191E0270C()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_0();
  *long long v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_191E02810, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_8_1();
    return v7();
  }
}

uint64_t sub_191E02810()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v0();
}

uint64_t sub_191E0286C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_191D88378;
  return sub_191E025F0(a1, v5, v7, v6, v4);
}

void sub_191E0292C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[2] = a5;
  v12[3] = a1;
  v12[4] = a3;
  void v12[5] = a4;
  v12[6] = a2;
  uint64_t v7 = type metadata accessor for EagerCancellationState();
  unint64_t v8 = sub_191D5EB0C();
  sub_191EE87F0();
  uint64_t v9 = sub_191EE8DF0();
  sub_191DE8880((void (*)(uint64_t))sub_191E03678, (uint64_t)v12, a2, v7, v9);
  uint64_t v10 = v13;
  if (v13)
  {
    sub_191EE8740();
    sub_191E03570();
    uint64_t v11 = swift_allocError();
    sub_191EE7DB0();
    uint64_t v13 = v11;
    sub_191E02FE4((uint64_t)&v13, v10, a5, v8);
  }
}

uint64_t sub_191E02A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  sub_191D5AC98();
  uint64_t result = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    *(void *)(a1 + 8) = a2;
    uint64_t v18 = sub_191EE87D0();
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v18);
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = 0;
    uint64_t v19[3] = 0;
    v19[4] = a6;
    v19[5] = a3;
    v19[6] = a4;
    v19[7] = a5;
    swift_retain();
    swift_retain();
    uint64_t v20 = sub_191D5ACF0((uint64_t)v17, (uint64_t)&unk_1E92F3AE8, (uint64_t)v19);
    uint64_t result = swift_release();
    a2 = 0;
    *(void *)a1 = v20;
  }
  *a7 = a2;
  return result;
}

uint64_t sub_191E02B70(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7[3] = a6;
  v7[4] = a7;
  v7[5] = *(void *)(a7 - 8);
  v7[6] = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  void v7[7] = v9;
  char v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v7[8] = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_191E02CB8;
  return v12(v9);
}

uint64_t sub_191E02CB8()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_5_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_191E02EA0;
  }
  else {
    uint64_t v7 = sub_191E02D98;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_191E02D98()
{
  uint64_t v1 = sub_191E034D8(v0[3], v0[4], (void (*)(uint64_t))sub_191E037B8);
  uint64_t v2 = v0[7];
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v5 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v6 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v0[7], v6);
    sub_191D5EB0C();
    sub_191E02F6C(v4, v3, v6);
  }
  else
  {
    uint64_t v6 = v0[4];
    uint64_t v5 = v0[5];
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v7();
}

uint64_t sub_191E02EA0()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v1 = sub_191E034D8(*(void *)(v0 + 24), *(void *)(v0 + 32), (void (*)(uint64_t))sub_191E037B8);
  if (v1)
  {
    uint64_t v2 = v1;
    *(void *)(v0 + 16) = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 32);
    unint64_t v4 = sub_191D5EB0C();
    sub_191E02FE4(v0 + 16, v2, v3, v4);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v5();
}

uint64_t sub_191E02F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void, uint64_t))(*(void *)(a3 - 8) + 32))(*(void *)(*(void *)(a2 + 64) + 40), a1);

  return swift_continuation_throwingResume();
}

uint64_t sub_191E02FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v6, a1, a4);

  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_191E03078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_191EE8700();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x1F4188298](sub_191E0310C, v6, v8);
}

uint64_t sub_191E0310C()
{
  OUTLINED_FUNCTION_20_0();
  uint64_t v1 = v0 + 2;
  uint64_t v2 = (void (*)(uint64_t))v0[11];
  uint64_t v3 = v0[10];
  v0[2] = v0;
  v0[7] = v3;
  v0[3] = sub_191E031C0;
  uint64_t v4 = swift_continuation_init();
  sub_191D5EB0C();
  v2(v4);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_191E031C0()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0_6();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_0();
  *uint64_t v2 = v1;
  if (*(void *)(v3 + 48)) {
    swift_willThrow();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v1 + 8);
  return v4();
}

uint64_t sub_191E0329C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_191E034D8(a1, a2, (void (*)(uint64_t))sub_191E035C0);
  if (result)
  {
    uint64_t v4 = result;
    sub_191EE8740();
    sub_191E03570();
    uint64_t v5 = swift_allocError();
    sub_191EE7DB0();
    uint64_t v7 = v5;
    unint64_t v6 = sub_191D5EB0C();
    return sub_191E02FE4((uint64_t)&v7, v4, a2, v6);
  }
  return result;
}

uint64_t sub_191E03344()
{
  return sub_191E0329C(*(void *)(v0 + 24), *(void *)(v0 + 16));
}

uint64_t sub_191E03350()
{
  return swift_release();
}

uint64_t sub_191E03358(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_191E03390(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_191E033E8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_191E03430(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191E03484(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_191E034D8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  v8[2] = a2;
  uint64_t v5 = type metadata accessor for EagerCancellationState();
  sub_191D5EB0C();
  sub_191EE87F0();
  uint64_t v6 = sub_191EE8DF0();
  sub_191DE8880(a3, (uint64_t)v8, a1, v5, v6);
  return v8[5];
}

unint64_t sub_191E03570()
{
  unint64_t result = qword_1EB50CB20;
  if (!qword_1EB50CB20)
  {
    sub_191EE8740();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB50CB20);
  }
  return result;
}

void *sub_191E035C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(unsigned char *)(a1 + 16) = 1;
  *a2 = *(void *)(a1 + 8);
  return sub_191E035FC((void *)a1);
}

void *sub_191E035FC(void *result)
{
  result[1] = 0;
  if (*result)
  {
    swift_retain();
    sub_191EE87E0();
    return (void *)swift_release();
  }
  return result;
}

void sub_191E0366C(uint64_t a1)
{
  sub_191E0292C(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_191E03678@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_191E02A34(a1, v2[3], v2[4], v2[5], v2[6], v2[2], a2);
}

uint64_t sub_191E0369C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_191E036E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (int *)v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_191D88378;
  return sub_191E02B70(a1, v4, v5, v7, v9, v8, v6);
}

uint64_t sub_191E037B8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  *(void *)(result + 8) = 0;
  return result;
}

uint64_t PromiseDebouncer.__allocating_init(interval:queue:)(uint64_t a1, double a2)
{
  uint64_t v4 = swift_allocObject();
  PromiseDebouncer.init(interval:queue:)(a1, a2);
  return v4;
}

uint64_t PromiseDebouncer.init(interval:queue:)(uint64_t a1, double a2)
{
  sub_191EE7680();
  uint64_t v5 = qword_1EB508830;
  sub_191EE7690();
  type metadata accessor for OnlyOnceDeferredPromise();
  sub_191D6BD8C((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  *(void *)(v2 + v5) = sub_191EE7D90();
  *(void *)(v2 + qword_1EB508818) = 0;
  uint64_t v6 = qword_1EB508810;
  uint64_t v8 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v2 + v6) = UnfairLock.init(options:)((int *)&v8);
  *(double *)(v2 + qword_1EB508828) = a2;
  *(void *)(v2 + qword_1EB508820) = a1;
  return v2;
}

uint64_t PromiseDebouncer.debounce(_:)(uint64_t a1, void (*a2)(char *, char *, uint64_t))
{
  uint64_t v3 = (uint64_t)v2;
  uint64_t v25 = *v2;
  uint64_t v26 = a2;
  uint64_t v5 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v24 - v12;
  swift_retain();
  UnfairLock.lock()();
  swift_release();
  uint64_t v14 = (char *)v2 + qword_1EB508808;
  swift_beginAccess();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v15(v13, v14, v5);
  sub_191E03C40((uint64_t)v13, a1, (uint64_t)v26);
  unint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v13, v5);
  uint64_t v16 = v11;
  uint64_t v26 = v15;
  v15(v11, v14, v5);
  uint64_t v17 = (uint64_t *)(v3 + qword_1EB508830);
  swift_beginAccess();
  uint64_t v18 = *v17;
  uint64_t v25 = v3;
  uint64_t v19 = type metadata accessor for OnlyOnceDeferredPromise();
  uint64_t v20 = sub_191D6BD8C((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  MEMORY[0x192FE70E0](&v27, v16, v18, v5, v19, v20);
  uint64_t v21 = v27;
  swift_endAccess();
  v24(v16, v5);
  if (!v21) {
    uint64_t v21 = OnlyOnceDeferredPromise.__allocating_init()();
  }
  v26(v13, v14, v5);
  uint64_t v27 = v21;
  swift_beginAccess();
  sub_191EE7F20();
  swift_retain();
  sub_191EE7F40();
  swift_endAccess();
  uint64_t result = swift_beginAccess();
  uint64_t v23 = *(void *)(v21 + 16);
  if (v23)
  {
    swift_retain();
    swift_release();
    sub_191E042BC(v25);
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191E03C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v30 = a3;
  uint64_t v27 = *v3;
  uint64_t v7 = sub_191EE7C90();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v31 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v32 = (char *)&v26 - v10;
  uint64_t v28 = sub_191EE7C00();
  MEMORY[0x1F4188790](v28);
  uint64_t v29 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191EE7690();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = qword_1EB508818;
  if (*(void *)((char *)v3 + qword_1EB508818))
  {
    swift_retain();
    sub_191EE7CE0();
    swift_release();
  }
  *(void *)((char *)v3 + v15) = 0;
  swift_release();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = *(void *)(v27 + 80);
  *((void *)v18 + 3) = v16;
  *((void *)v18 + 4) = a2;
  *((void *)v18 + 5) = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v17], (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = sub_191E04E04;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191D70378;
  aBlock[3] = &block_descriptor_7;
  _Block_copy(aBlock);
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_191D6BD8C((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  sub_191DE2F58();
  sub_191D6BD8C((unint64_t *)&qword_1EB50E628, (void (*)(uint64_t))sub_191DE2F58);
  swift_retain();
  swift_retain();
  sub_191EE9060();
  sub_191EE7CF0();
  swift_allocObject();
  uint64_t v19 = sub_191EE7CD0();
  swift_release();
  swift_release();
  *(void *)((char *)v4 + v15) = v19;
  swift_retain();
  swift_release();
  uint64_t v20 = v31;
  sub_191EE7C80();
  uint64_t v21 = v32;
  MEMORY[0x192FE6EC0](v20, *(double *)((char *)v4 + qword_1EB508828));
  uint64_t v22 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v23 = v20;
  uint64_t v24 = v34;
  v22(v23, v34);
  sub_191EE8D00();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v24);
}

Swift::Void __swiftcall PromiseDebouncer.cancel()()
{
  OUTLINED_FUNCTION_2_1();
  swift_retain();
  UnfairLock.lock()();
  swift_release();
  uint64_t v1 = qword_1EB508818;
  if (*(void *)(v0 + qword_1EB508818))
  {
    swift_retain();
    sub_191EE7CE0();
    swift_release();
  }
  *(void *)(v0 + v1) = 0;
  swift_release();
  swift_beginAccess();
  sub_191EE7690();
  type metadata accessor for OnlyOnceDeferredPromise();
  sub_191D6BD8C((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  sub_191EE7ED0();
  uint64_t v2 = swift_endAccess();
  MEMORY[0x1F4188790](v2);
  sub_191EE7EC0();
  swift_getWitnessTable();
  sub_191EE8460();
  swift_bridgeObjectRelease();
  sub_191E042BC(v0);
}

void sub_191E042BC(uint64_t a1)
{
}

uint64_t sub_191E042D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_191EE7690();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v40 = a4;
    uint64_t v15 = qword_1EB508810;
    swift_retain();
    UnfairLock.lock()();
    swift_release();
    sub_191EE7680();
    uint64_t v16 = v14 + qword_1EB508808;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v16, (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v14 + v15) + 16));
    MEMORY[0x1F4188790](v17);
    v32[-4] = a5;
    v32[-3] = a2;
    v32[-2] = a3;
    firstly<A>(closure:)(sub_191E04E5C);
    uint64_t v33 = qword_1EB508820;
    uint64_t v18 = *(void **)(v14 + qword_1EB508820);
    unint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v39((char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v9);
    uint64_t v19 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v37 = ((v19 + 24) & ~v19) + v11;
    uint64_t v38 = (v19 + 24) & ~v19;
    uint64_t v20 = v38;
    uint64_t v36 = v19 | 7;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a5;
    uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    uint64_t v34 = a5;
    uint64_t v35 = v22;
    v22(v21 + v20, v12, v9);
    v32[1] = type metadata accessor for PromiseDebouncer();
    id v23 = v18;
    Promise.then<A, B>(on:disposeOn:closure:)();
    swift_release();

    swift_release();
    uint64_t v24 = v33;
    uint64_t v25 = *(void **)(v14 + v33);
    v39(v12, v40, v9);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v34;
    v35(v26 + v38, v12, v9);
    id v27 = v25;
    Promise.error<A>(on:disposeOn:closure:)();
    v32[0] = v28;
    swift_release();

    swift_release();
    uint64_t v29 = *(void **)(v14 + v24);
    v39(v12, v40, v9);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v34;
    v35(v30 + v38, v12, v9);
    id v31 = v29;
    Promise.always<A>(on:disposeOn:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return swift_release();
  }
  return result;
}

void sub_191E046E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  UnfairLock.lock()();
  swift_release();
  uint64_t v6 = (uint64_t *)(a2 + qword_1EB508830);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = sub_191EE7690();
  uint64_t v9 = type metadata accessor for OnlyOnceDeferredPromise();
  uint64_t v10 = sub_191D6BD8C((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  MEMORY[0x192FE70E0](&v11, a3, v7, v8, v9, v10);
  if (v11)
  {
    swift_endAccess();
    OnlyOnceDeferredPromise.resolve(_:)(a1);
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  sub_191E042BC(a2);
}

void sub_191E04830(void *a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  UnfairLock.lock()();
  swift_release();
  uint64_t v6 = (uint64_t *)(a2 + qword_1EB508830);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = sub_191EE7690();
  uint64_t v9 = type metadata accessor for OnlyOnceDeferredPromise();
  uint64_t v10 = sub_191D6BD8C((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  MEMORY[0x192FE70E0](&v11, a3, v7, v8, v9, v10);
  if (v11)
  {
    swift_endAccess();
    OnlyOnceDeferredPromise.reject(_:)(a1);
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  sub_191E042BC(a2);
}

void sub_191E04968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191EE7690();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v8[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  UnfairLock.lock()();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v9 = 0;
  swift_beginAccess();
  type metadata accessor for OnlyOnceDeferredPromise();
  sub_191D6BD8C((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  sub_191EE7F20();
  sub_191EE7F40();
  swift_endAccess();
  sub_191E042BC(a1);
}

uint64_t PromiseDebouncer.deinit()
{
  uint64_t v1 = v0 + qword_1EB508808;
  sub_191EE7690();
  OUTLINED_FUNCTION_4_1();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t PromiseDebouncer.__deallocating_deinit()
{
  PromiseDebouncer.deinit();
  OUTLINED_FUNCTION_2_1();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);

  return MEMORY[0x1F4186488](v0, v2, v3);
}

void sub_191E04BE0()
{
}

uint64_t sub_191E04C0C()
{
  uint64_t result = sub_191EE7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PromiseDebouncer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PromiseDebouncer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromiseDebouncer);
}

uint64_t dispatch thunk of PromiseDebouncer.__allocating_init(interval:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_191E04D20()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191E04D58()
{
  uint64_t v1 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return MEMORY[0x1F4186498](v0, v8, v9);
}

uint64_t sub_191E04E04()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = sub_191EE7690();
  OUTLINED_FUNCTION_12(v2);
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = (uint64_t)v0 + ((*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_191E042D0(v4, v5, v6, v7, v1);
}

uint64_t sub_191E04E5C()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

void sub_191E04E90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_191EE7690();
  OUTLINED_FUNCTION_12(v5);
  sub_191E046E8(a1, a2, v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

void sub_191E04EF8(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_191EE7690();
  OUTLINED_FUNCTION_12(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_191E04830(a1, a2, v7);
}

void sub_191E04F5C(uint64_t a1)
{
  uint64_t v3 = sub_191EE7690();
  OUTLINED_FUNCTION_12(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_191E04968(a1, v5);
}

uint64_t BackgroundFetchJournalEntry.reason.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___TSBackgroundFetchJournalEntry_reason);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t BackgroundFetchJournalEntry.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___TSBackgroundFetchJournalEntry_date;
  uint64_t v4 = sub_191EE7640();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id BackgroundFetchJournalEntry.__allocating_init(reason:date:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_27());
  return BackgroundFetchJournalEntry.init(reason:date:)();
}

id BackgroundFetchJournalEntry.init(reason:date:)()
{
  OUTLINED_FUNCTION_0_27();
  Class ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v1[OBJC_IVAR___TSBackgroundFetchJournalEntry_reason];
  *(void *)uint64_t v5 = v3;
  *((void *)v5 + 1) = v2;
  uint64_t v6 = &v1[OBJC_IVAR___TSBackgroundFetchJournalEntry_date];
  uint64_t v7 = sub_191EE7640();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, v0, v7);
  v11.receiver = v1;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v7);
  return v9;
}

id BackgroundFetchJournalEntry.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BackgroundFetchJournalEntry.init()()
{
}

id BackgroundFetchJournalEntry.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t EmptyBackgroundFetchJournal.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t EmptyBackgroundFetchJournal.init()()
{
  return v0;
}

uint64_t EmptyBackgroundFetchJournal.entries.getter()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t EmptyBackgroundFetchJournal.deinit()
{
  return v0;
}

uint64_t EmptyBackgroundFetchJournal.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_191E0555C()
{
  return type metadata accessor for BackgroundFetchJournalEntry();
}

uint64_t type metadata accessor for BackgroundFetchJournalEntry()
{
  uint64_t result = qword_1E92F3AF8;
  if (!qword_1E92F3AF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191E055AC()
{
  uint64_t result = sub_191EE7640();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BackgroundFetchJournalEntry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BackgroundFetchJournalEntry);
}

uint64_t dispatch thunk of BackgroundFetchJournalEntry.__allocating_init(reason:date:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for EmptyBackgroundFetchJournal()
{
  return self;
}

uint64_t method lookup function for EmptyBackgroundFetchJournal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EmptyBackgroundFetchJournal);
}

uint64_t dispatch thunk of EmptyBackgroundFetchJournal.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

BOOL static DeviceStorageDataClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceStorageDataClass.hash(into:)()
{
  return sub_191EE9A80();
}

uint64_t _s13TeaFoundation22DeviceStorageDataClassO9hashValueSivg_0()
{
  return sub_191EE9A90();
}

uint64_t DeviceStorageManagerType.purgeUrgency.getter@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  (*(void (**)(void))(a1 + 8))();
  sub_191E057B8(a2);

  return swift_release();
}

void sub_191E057B8(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  UnfairLock.lock()();
  swift_beginAccess();
  *a1 = *(unsigned char *)(v2 + 32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
}

uint64_t sub_191E05818()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  UnfairLock.lock()();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  return v3;
}

uint64_t DeviceStorageManager.observablePurgeUrgency.getter()
{
  return swift_retain();
}

uint64_t DeviceStorageManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DeviceStorageManager.init()();
  return v0;
}

void *DeviceStorageManager.init()()
{
  uint64_t v1 = v0;
  sub_191E0703C(0, qword_1EB508458, (uint64_t)&type metadata for DeviceStoragePurgeUrgency, (uint64_t (*)(void, uint64_t))type metadata accessor for AsyncObservable);
  swift_allocObject();
  uint64_t v2 = sub_191E06C80(0);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v0[2] = v2;
  v0[3] = v3;
  uint64_t v7 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  v0[4] = UnfairLock.init(options:)((int *)&v7);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = qword_1EB50DBD8;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  TaskScheduler.scheduleLowPriority(_:)((uint64_t)sub_191E06D98, v4);
  swift_release_n();
  return v1;
}

uint64_t sub_191E05A18()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(self, sel_mainBundle);
    sub_191D8C1AC(v2);
    uint64_t v3 = (void *)sub_191EE80E0();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_191E07034;
    uint64_t v15 = v1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v11 = 1107296256;
    uint64_t v12 = sub_191E05F80;
    uint64_t v13 = &block_descriptor_8;
    uint64_t v4 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v14 = sub_191E07038;
    uint64_t v15 = v1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v11 = 1107296256;
    uint64_t v12 = sub_191E05F80;
    uint64_t v13 = &block_descriptor_19;
    uint64_t v5 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v14 = (uint64_t (*)())nullsub_1;
    uint64_t v15 = v1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v11 = 1107296256;
    uint64_t v12 = sub_191D70378;
    uint64_t v13 = &block_descriptor_22;
    uint64_t v6 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v14 = OUTLINED_FUNCTION_67;
    uint64_t v15 = v1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v11 = 1107296256;
    uint64_t v12 = sub_191E05F80;
    uint64_t v13 = &block_descriptor_25;
    uint64_t v7 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    int v8 = CacheDeleteRegisterInfoCallbacksForProcess();
    _Block_release(v7);
    _Block_release(v6);
    _Block_release(v5);
    _Block_release(v4);

    if (v8)
    {
      sub_191D9399C();
      id v9 = (void *)sub_191EE8DD0();
      sub_191EE8CA0();
      sub_191EE7910();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_191E05D10()
{
  return 0;
}

uint64_t sub_191E05F80(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, id))(a1 + 32);
  swift_retain();
  id v6 = a3;
  uint64_t v7 = v5(a2, v6);
  swift_release();

  return v7;
}

uint64_t sub_191E05FE8()
{
  return 0;
}

uint64_t sub_191E062B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(a1 + 24);
  swift_beginAccess();
  unint64_t v5 = *(void *)(a1 + 24);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (v5 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = sub_191EE94B0();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (!v6) {
    goto LABEL_14;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x192FE8380](i, v5);
    }
    else
    {
      uint64_t v9 = *(void *)(v5 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v10 = MEMORY[0x192FE9B40](v9 + 32);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_191EE92B0();
      sub_191EE92F0();
      sub_191EE9300();
      sub_191EE92C0();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v23;
LABEL_15:
  *uint64_t v4 = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v13) {
      goto LABEL_17;
    }
LABEL_31:
    uint64_t v15 = MEMORY[0x1E4FBC860];
LABEL_32:
    uint64_t result = swift_bridgeObjectRelease_n();
    *a2 = v15;
    return result;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_191EE94B0();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_31;
  }
LABEL_17:
  if (v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v16 = MEMORY[0x192FE8380](v14, v12);
      }
      else
      {
        uint64_t v16 = *(void *)(v12 + 8 * v14 + 32);
        swift_retain();
      }
      uint64_t v17 = MEMORY[0x192FE9B40](v16 + 16);
      uint64_t v18 = *(void *)(v16 + 24);
      swift_release();
      if (v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191DCC2F4();
          uint64_t v15 = v21;
        }
        unint64_t v19 = *(void *)(v15 + 16);
        if (v19 >= *(void *)(v15 + 24) >> 1)
        {
          sub_191DCC2F4();
          uint64_t v15 = v22;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t v20 = v15 + 16 * v19;
        *(void *)(v20 + 32) = v17;
        *(void *)(v20 + 40) = v18;
      }
      ++v14;
    }
    while (v13 != v14);
    goto LABEL_32;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t DeviceStorageManager.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DeviceStorageManager.__deallocating_deinit()
{
  DeviceStorageManager.deinit();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

Swift::Int __swiftcall DeviceStorageManager.availableSpace(for:)(TeaFoundation::DeviceStorageDataClass a1)
{
  uint64_t v1 = (unsigned __int8 *)a1;
  uint64_t v2 = sub_191EE72D0();
  OUTLINED_FUNCTION_0();
  uint64_t v50 = v3;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v48 = (char *)v46 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (char *)v46 - v9;
  sub_191D62830(0, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v46 - v11;
  uint64_t v13 = sub_191EE7310();
  OUTLINED_FUNCTION_0();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v51 = v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v24 = *v1;
  uint64_t v25 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  uint64_t v26 = sub_191EE8520();

  if (!*(void *)(v26 + 16))
  {
    swift_bridgeObjectRelease();
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  v46[1] = v2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E4F276A8], v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v19);
  sub_191EE73D0();
  if (!v24)
  {
    sub_191D62830(0, (unint64_t *)&unk_1E92F2998, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191EEB6F0;
    uint64_t v32 = (void *)*MEMORY[0x1E4F1C808];
    *(void *)(inited + 32) = *MEMORY[0x1E4F1C808];
    id v33 = v32;
    sub_191DF7520(inited);
    uint64_t v34 = v47;
    sub_191EE7330();
    swift_bridgeObjectRelease();
    Swift::Int v31 = (Swift::Int)v34;
    sub_191EE72C0();
    goto LABEL_11;
  }
  if (v24 == 1)
  {
    sub_191D62830(0, (unint64_t *)&unk_1E92F2998, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191EEB6F0;
    uint64_t v28 = (void *)*MEMORY[0x1E4F1C800];
    *(void *)(inited + 32) = *MEMORY[0x1E4F1C800];
    id v29 = v28;
    sub_191DF7520(inited);
    uint64_t v30 = v48;
    sub_191EE7330();
    swift_bridgeObjectRelease();
    Swift::Int v31 = (Swift::Int)v30;
    sub_191EE72B0();
LABEL_11:
    OUTLINED_FUNCTION_3_23();
    OUTLINED_FUNCTION_2_32();
    v40();
    if ((inited & 1) == 0)
    {
      uint64_t v41 = OUTLINED_FUNCTION_1_31();
      v42(v41);
      return v31;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v19);
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  sub_191D62830(0, (unint64_t *)&unk_1E92F2998, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, MEMORY[0x1E4FBBE00]);
  uint64_t v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = xmmword_191EEB6F0;
  uint64_t v36 = (void *)*MEMORY[0x1E4F1C810];
  *(void *)(v35 + 32) = *MEMORY[0x1E4F1C810];
  id v37 = v36;
  sub_191DF7520(v35);
  uint64_t v38 = v49;
  sub_191EE7330();
  swift_bridgeObjectRelease();
  Swift::Int v31 = (Swift::Int)v38;
  sub_191EE72A0();
  OUTLINED_FUNCTION_3_23();
  OUTLINED_FUNCTION_2_32();
  v43();
  uint64_t v44 = OUTLINED_FUNCTION_1_31();
  v45(v44);
  if (v35) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  return v31;
}

uint64_t DeviceStorageManager.add(purgeable:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DisposablePurgeable();
  swift_allocObject();
  uint64_t v7 = swift_unknownObjectRetain();
  uint64_t v8 = sub_191D5FD58(v7, a1);
  uint64_t v9 = *(void *)(v3 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  UnfairLock.lock()();
  sub_191E06B9C(v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  a2[3] = v6;
  a2[4] = (uint64_t)&off_1EE2B4C78;
  *a2 = v8;
  return result;
}

uint64_t sub_191E06B9C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = swift_retain();
  MEMORY[0x192FE76B0](v2);
  sub_191D742B4(*(void *)((*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_191EE85F0();
  sub_191EE8550();
  return swift_endAccess();
}

uint64_t sub_191E06C20()
{
  return DeviceStorageManager.observablePurgeUrgency.getter();
}

Swift::Int sub_191E06C44(TeaFoundation::DeviceStorageDataClass a1)
{
  return DeviceStorageManager.availableSpace(for:)(a1);
}

uint64_t sub_191E06C5C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return DeviceStorageManager.add(purgeable:)(a1, a2);
}

uint64_t sub_191E06C80(char a1)
{
  uint64_t v6 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v3 = UnfairLock.init(options:)((int *)&v6);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v4;
  *(unsigned char *)(v1 + 32) = a1;
  return v1;
}

void *sub_191E06CF0(uint64_t a1)
{
  uint64_t v6 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v3 = UnfairLock.init(options:)((int *)&v6);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = a1;
  return v1;
}

uint64_t sub_191E06D60()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191E06D98()
{
  return sub_191E05A18();
}

uint64_t type metadata accessor for DisposablePurgeable()
{
  return self;
}

unint64_t sub_191E06DC8()
{
  unint64_t result = qword_1E92F3B08;
  if (!qword_1E92F3B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3B08);
  }
  return result;
}

unint64_t sub_191E06E18()
{
  unint64_t result = qword_1E92F3B10;
  if (!qword_1E92F3B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3B10);
  }
  return result;
}

uint64_t dispatch thunk of DeviceStoragePurgeable.purgeableSpace()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeviceStoragePurgeable.purge()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for DeviceStorageDataClass()
{
  return &type metadata for DeviceStorageDataClass;
}

unsigned char *_s13TeaFoundation22DeviceStorageDataClassOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E06F70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceStoragePurgeUrgency()
{
  return &type metadata for DeviceStoragePurgeUrgency;
}

uint64_t dispatch thunk of DeviceStorageManagerType.observablePurgeUrgency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeviceStorageManagerType.availableSpace(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DeviceStorageManagerType.add(purgeable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t type metadata accessor for DeviceStorageManager()
{
  return self;
}

uint64_t method lookup function for DeviceStorageManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DeviceStorageManager);
}

uint64_t dispatch thunk of DeviceStorageManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_191E0703C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t dispatch thunk of URLHandlerType.patterns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of URLHandlerType.handleURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of URLHandlerProcessorType.patterns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of URLHandlerProcessorType.processURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t URLHandlerManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  URLHandlerManager.init()();
  return v0;
}

void *URLHandlerManager.init()()
{
  OUTLINED_FUNCTION_8_13();
  type metadata accessor for AnyURLHandler();
  v0[2] = sub_191EE85C0();
  OUTLINED_FUNCTION_8_13();
  type metadata accessor for AnyAsyncURLHandler();
  v0[3] = sub_191EE85C0();
  OUTLINED_FUNCTION_8_13();
  type metadata accessor for AnyURLHandlerProcessor();
  v0[4] = sub_191EE85C0();
  return v0;
}

uint64_t URLHandlerManager.add<A>(handler:)()
{
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = OUTLINED_FUNCTION_1_32(v1, v11);
  v3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_3_24();
  uint64_t v7 = sub_191E5DAC0(v4, v5, v6);
  OUTLINED_FUNCTION_2_33(v7, v8, v9);
  type metadata accessor for AnyURLHandler();
  sub_191EE86B0();
  OUTLINED_FUNCTION_5_20();
  return swift_endAccess();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void (*v3)(char *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = OUTLINED_FUNCTION_1_32(v1, v11);
  v3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_3_24();
  uint64_t v7 = sub_191E5DB20(v4, v5, v6);
  OUTLINED_FUNCTION_2_33(v7, v8, v9);
  type metadata accessor for AnyAsyncURLHandler();
  sub_191EE86B0();
  OUTLINED_FUNCTION_5_20();
  return swift_endAccess();
}

uint64_t URLHandlerManager.add<A>(processor:)()
{
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = OUTLINED_FUNCTION_1_32(v1, v11);
  v3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_3_24();
  uint64_t v7 = sub_191E5DB80(v4, v5, v6);
  OUTLINED_FUNCTION_2_33(v7, v8, v9);
  type metadata accessor for AnyURLHandlerProcessor();
  sub_191EE86B0();
  OUTLINED_FUNCTION_5_20();
  return swift_endAccess();
}

uint64_t URLHandlerManager.handle(url:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v82 = a2;
  v87 = 0;
  uint64_t v6 = *(void *)(*(void *)v4 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v8 = v7;
  uint64_t v72 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v10);
  v83 = (char *)&v70 - v11;
  OUTLINED_FUNCTION_8_13();
  uint64_t v81 = type metadata accessor for URLHandlerContext();
  OUTLINED_FUNCTION_1_2();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2_11();
  uint64_t v75 = v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v79 = (void (**)(uint64_t, uint64_t))((char *)&v70 - v17);
  uint64_t v18 = type metadata accessor for URLHandlerMatch();
  MEMORY[0x1F4188790](v18 - 8);
  OUTLINED_FUNCTION_2_11();
  uint64_t v76 = v19;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v80 = (uint64_t)&v70 - v22;
  MEMORY[0x1F4188790](v21);
  int v24 = (char *)&v70 - v23;
  sub_191EE73F0();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v25);
  id v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v28 + 16))(v27, a1);
  type metadata accessor for URLHandlerMatcher();
  swift_allocObject();
  uint64_t v86 = URLHandlerMatcher.init(url:)((uint64_t)v27);
  swift_beginAccess();
  uint64_t v74 = v4;
  uint64_t v29 = *(void *)(v4 + 32);
  uint64_t v85 = v6;
  uint64_t v30 = type metadata accessor for AnyURLHandlerProcessor();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v31 = sub_191EE8530();
  v90[0] = v31;
  uint64_t v32 = MEMORY[0x192FE7810](v29, v30);
  uint64_t v73 = v8;
  if (v31 != v32)
  {
    uint64_t v33 = v29 + 32;
    uint64_t v78 = v8 + 16;
    uint64_t v71 = v13;
    uint64_t v77 = (void (**)(void, uint64_t))(v13 + 8);
    uint64_t WitnessTable = 24;
    while (1)
    {
      uint64_t v4 = sub_191EE85E0();
      sub_191EE8570();
      if ((v4 & 1) == 0) {
        break;
      }
      uint64_t v35 = (uint64_t *)(v33 + 24 * v31);
      uint64_t v4 = *v35;
      uint64_t v36 = (uint64_t (*)(void))v35[1];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_retain();
      MEMORY[0x192FE7830](v90, v29, v30);
      swift_bridgeObjectRelease();
      uint64_t v37 = v86;
      int v3 = v87;
      URLHandlerMatcher.match(for:)(v4, (uint64_t)v24);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();

        v87 = 0;
      }
      else
      {
        v84 = v36;
        uint64_t v38 = v33;
        uint64_t v39 = v80;
        sub_191E08074((uint64_t)v24, v80);
        uint64_t v40 = v83;
        OUTLINED_FUNCTION_6_15();
        v41();
        v87 = 0;
        int v3 = v24;
        uint64_t v42 = v79;
        uint64_t v43 = v39;
        uint64_t v33 = v38;
        uint64_t v44 = (uint64_t)v40;
        uint64_t WitnessTable = 24;
        URLHandlerContext.init(match:clientContext:)(v43, v44, v37, (uint64_t)v79);
        sub_191E5DBE0((uint64_t)v42, v4, v84);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v45 = v42;
        int v24 = v3;
        (*v77)(v45, v81);
        sub_191E0815C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for URLHandlerMatch);
      }
      uint64_t v31 = v90[0];
      if (v31 == MEMORY[0x192FE7810](v29, v30))
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v71;
        goto LABEL_10;
      }
    }
    sub_191EE91C0();
    __break(1u);
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v46 = v74;
  swift_beginAccess();
  uint64_t WitnessTable = *(void *)(v46 + 16);
  uint64_t v47 = type metadata accessor for AnyURLHandler();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v48 = sub_191EE8530();
  v89[0] = v48;
  if (v48 != MEMORY[0x192FE7810](WitnessTable, v47))
  {
    uint64_t v49 = (char *)(WitnessTable + 32);
    v84 = (uint64_t (*)(void))(v73 + 16);
    uint64_t v79 = (void (**)(uint64_t, uint64_t))(v13 + 8);
    uint64_t v50 = v76;
    uint64_t v51 = v75;
    while (1)
    {
      uint64_t v30 = sub_191EE85E0();
      sub_191EE8570();
      if ((v30 & 1) == 0) {
        break;
      }
      unint64_t v52 = (uint64_t *)&v49[24 * v48];
      uint64_t v53 = *v52;
      unint64_t v54 = (uint64_t (*)(void))v52[1];
      uint64_t v4 = v52[2];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_retain();
      MEMORY[0x192FE7830](v89, WitnessTable, v47);
      swift_bridgeObjectRelease();
      uint64_t v55 = v86;
      int v3 = v87;
      URLHandlerMatcher.match(for:)(v53, v50);
      v87 = v3;
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();

        v87 = 0;
      }
      else
      {
        int v3 = v49;
        uint64_t v56 = v80;
        sub_191E08074(v50, v80);
        uint64_t v57 = v83;
        OUTLINED_FUNCTION_6_15();
        v58();
        uint64_t v59 = v56;
        uint64_t v49 = v3;
        uint64_t v60 = (uint64_t)v57;
        uint64_t v50 = v76;
        URLHandlerContext.init(match:clientContext:)(v59, v60, v55, v51);
        char v61 = sub_191E5DC08(v51, v53, v54);
        swift_release();
        swift_bridgeObjectRelease();
        (*v79)(v51, v81);
        sub_191E0815C(v50, (uint64_t (*)(void))type metadata accessor for URLHandlerMatch);
        if (v61)
        {
          swift_release();
          goto LABEL_24;
        }
      }
      uint64_t v48 = v89[0];
      if (v48 == MEMORY[0x192FE7810](WitnessTable, v47))
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = v74;
        goto LABEL_19;
      }
    }
LABEL_26:
    sub_191EE91C0();
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v4 = v46 + 24;
  swift_beginAccess();
  uint64_t v88 = *(void *)(v46 + 24);
  int v3 = (char *)type metadata accessor for AnyAsyncURLHandler();
  uint64_t v30 = sub_191EE86B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  if (sub_191EE8B30())
  {
    swift_release();
    return 0;
  }
  if (qword_1EB50E548 != -1) {
    goto LABEL_27;
  }
LABEL_22:
  uint64_t v63 = *(void *)v4;
  v87 = (char *)qword_1EB50E4A8;
  uint64_t v88 = v63;
  uint64_t v64 = v73;
  uint64_t v65 = v83;
  uint64_t v66 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v83, v82, v85);
  unint64_t v67 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = swift_allocObject();
  uint64_t v69 = v86;
  *(void *)(v68 + 16) = v66;
  *(void *)(v68 + 24) = v69;
  (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v68 + v67, v65, v66);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  whenFirst<A, B, C>(on:providers:provide:where:)((uint64_t)v87, (uint64_t)&v88, (uint64_t (*)(char *))sub_191E08034, v68, (uint64_t)sub_191D88B2C, 0, (uint64_t)v3, v30, MEMORY[0x1E4FBB390], WitnessTable);
  swift_release();
  swift_release();
  swift_release();
LABEL_24:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_191E07C40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a3;
  uint64_t v26 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URLHandlerContext();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v24 - v9;
  sub_191E08104();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URLHandlerMatch();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v24 - v18;
  uint64_t v21 = *a1;
  uint64_t v20 = (uint64_t (*)(void))a1[1];
  v24[1] = a1[2];
  uint64_t v25 = v20;
  URLHandlerMatcher.match(for:)(v21, (uint64_t)v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v14);
  sub_191E081BC((uint64_t)v13, (uint64_t)v19);
  sub_191E08074((uint64_t)v19, (uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v7, v29, a4);
  URLHandlerContext.init(match:clientContext:)((uint64_t)v17, (uint64_t)v7, a4, (uint64_t)v10);
  uint64_t v22 = sub_191E5DC34((uint64_t)v10, v21, v25);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  sub_191E0815C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for URLHandlerMatch);
  return v22;
}

uint64_t URLHandlerManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t URLHandlerManager.__deallocating_deinit()
{
  URLHandlerManager.deinit();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t sub_191E07F98()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_1_2();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return MEMORY[0x1F4186498](v0, v8, v9);
}

uint64_t sub_191E08034(uint64_t *a1)
{
  return sub_191E07C40(a1, *(void *)(v1 + 24), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16));
}

uint64_t sub_191E08074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URLHandlerMatch();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for URLHandlerManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for URLHandlerManager);
}

uint64_t dispatch thunk of URLHandlerManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_191E08104()
{
  if (!qword_1E92F3B18)
  {
    type metadata accessor for URLHandlerMatch();
    unint64_t v0 = sub_191EE8DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F3B18);
    }
  }
}

uint64_t sub_191E0815C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191E081BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URLHandlerMatch();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191E08220()
{
  uint64_t v0 = sub_191EE8110();
  uint64_t v2 = v1;
  if (v0 == sub_191EE8110() && v2 == v3) {
    OUTLINED_FUNCTION_6_16();
  }
  else {
    LOBYTE(v0) = OUTLINED_FUNCTION_2_34();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_191E08298(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x7463656A626FLL;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x7463656A626FLL;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x7961727261;
      break;
    case 2:
      uint64_t v6 = 0x676E69727473;
      break;
    case 3:
      uint64_t v6 = 0x7265626D756ELL;
      break;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1819242338;
      break;
    case 5:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1819047278;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x7961727261;
      break;
    case 2:
      uint64_t v3 = 0x676E69727473;
      break;
    case 3:
      uint64_t v3 = 0x7265626D756ELL;
      break;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1819242338;
      break;
    case 5:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1819047278;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    OUTLINED_FUNCTION_6_16();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2_34();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_191E08424(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x8000000191EF5750;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0xD000000000000012;
    }
    else {
      unint64_t v4 = 0x75614C7265746661;
    }
    if (v3 == 1) {
      unint64_t v5 = 0x8000000191EF5770;
    }
    else {
      unint64_t v5 = 0xEE00676E6968636ELL;
    }
  }
  else
  {
    unint64_t v4 = 0xD000000000000013;
    unint64_t v5 = 0x8000000191EF5750;
  }
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v6 = 0xD000000000000012;
    }
    else {
      unint64_t v6 = 0x75614C7265746661;
    }
    if (a2 == 1) {
      unint64_t v2 = 0x8000000191EF5770;
    }
    else {
      unint64_t v2 = 0xEE00676E6968636ELL;
    }
  }
  else
  {
    unint64_t v6 = 0xD000000000000013;
  }
  if (v4 == v6 && v5 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_191EE9770();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

BOOL sub_191E08534(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_191E08540(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x656E6961746E6F63;
  }
  else {
    uint64_t v4 = 1701869940;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000072;
  }
  if (a2) {
    uint64_t v6 = 0x656E6961746E6F63;
  }
  else {
    uint64_t v6 = 1701869940;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000072;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_6_16();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2_34();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_191E085D0(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x697463656C6C6F63;
  }
  else {
    uint64_t v4 = 0x7463656A626FLL;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xEA00000000006E6FLL;
  }
  if (a2) {
    uint64_t v6 = 0x697463656C6C6F63;
  }
  else {
    uint64_t v6 = 0x7463656A626FLL;
  }
  if (a2) {
    unint64_t v7 = 0xEA00000000006E6FLL;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_6_16();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2_34();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_191E08664(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1635017060;
  }
  else {
    uint64_t v2 = 1701869940;
  }
  if (a2) {
    uint64_t v3 = 1635017060;
  }
  else {
    uint64_t v3 = 1701869940;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_191EE9770();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_191E086D4(void *a1@<X8>)
{
}

uint64_t sub_191E086DC(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

BOOL sub_191E086E8(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_191E086F4(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

TeaFoundation::EventTriggerBehavior __swiftcall EventTriggerBehavior.init(rawValue:)(TeaFoundation::EventTriggerBehavior rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static EventTriggerBehavior.onlyOnce.getter(void *a1@<X8>)
{
}

void static EventTriggerBehavior.eager.getter(void *a1@<X8>)
{
}

void static EventTriggerBehavior.any.getter(void *a1@<X8>)
{
}

void static EventTriggerBehavior.all.getter(void *a1@<X8>)
{
}

uint64_t EventTriggerBehavior.rawValue.getter()
{
  return *(void *)v0;
}

TeaFoundation::EventTriggerBehavior sub_191E08730(Swift::Int *a1)
{
  return EventTriggerBehavior.init(rawValue:)(*a1);
}

void sub_191E08738(void *a1@<X8>)
{
}

uint64_t sub_191E08744(uint64_t *a1)
{
  return j__OUTLINED_FUNCTION_4_20(*a1);
}

BOOL sub_191E0874C(uint64_t *a1)
{
  return sub_191E086E8(*a1, *v1);
}

BOOL sub_191E08758(uint64_t *a1)
{
  return sub_191E086F4(*a1, *v1);
}

TeaFoundation::EventTriggerBehavior sub_191E08764@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  result.rawValue = EventTriggerBehavior.init(rawValue:)(*a1).rawValue;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_191E08790@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EventTriggerBehavior.rawValue.getter();
  *a1 = result;
  return result;
}

void *sub_191E087B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = *a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t sub_191E08810()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_191E08838()
{
  uint64_t v0 = sub_191E08810();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t sub_191E08868()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_191E088A0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_191E088E8()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t EventManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  EventManager.init()();
  return v0;
}

uint64_t EventManager.init()()
{
  type metadata accessor for EventManager.EventTrigger();
  *(void *)(v0 + 16) = sub_191EE7DA0();
  *(void *)(v0 + 24) = sub_191EE7DC0();
  return v0;
}

uint64_t type metadata accessor for EventManager.EventTrigger()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191E089F8()
{
  OUTLINED_FUNCTION_1_33();
  uint64_t v41 = v0;
  uint64_t v42 = v1;
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v45 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v40 = v4;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v39 - v6;
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = sub_191EE7D00();
  OUTLINED_FUNCTION_1_2();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (uint64_t *)((char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_191D5E944();
  *uint64_t v21 = sub_191EE8D20();
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v21, *MEMORY[0x1E4FBCBF0], v16);
  char v22 = sub_191EE7D30();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v21, v16);
  if (v22)
  {
    uint64_t v24 = v41;
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v44 = v9 + 16;
    v43(v13, v41, v3);
    OUTLINED_FUNCTION_8_14();
    uint64_t v25 = *(void *)(v42 + 88);
    sub_191EE8980();
    sub_191EE8920();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v3);
    swift_endAccess();
    uint64_t v49 = v3;
    uint64_t v50 = v3;
    uint64_t v51 = v25;
    uint64_t v52 = v25;
    uint64_t v26 = type metadata accessor for EventManager.EventTrigger();
    uint64_t v49 = sub_191EE7DA0();
    uint64_t v48 = sub_191EE7DA0();
    uint64_t v27 = sub_191E08868();
    uint64_t v28 = sub_191EE8530();
    uint64_t i = v28;
    if (v28 != MEMORY[0x192FE7810](v27, v26))
    {
      uint64_t v31 = (void (**)(char *, uint64_t))(v40 + 8);
      uint64_t v42 = v40 + 8;
      do
      {
        char v32 = sub_191EE85E0();
        sub_191EE8570();
        if (v32)
        {
          uint64_t v33 = *(void *)(v27 + 32 + 8 * v28);
          swift_retain();
        }
        else
        {
          uint64_t v33 = sub_191EE91C0();
        }
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        MEMORY[0x192FE7830](&i, v27, v26);
        swift_bridgeObjectRelease();
        v43(v7, v24, v3);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v3);
        char v34 = sub_191E093D0(v33, (uint64_t)v7);
        (*v31)(v7, v45);
        if ((v34 & 1) != 0
          && (uint64_t v46 = v33,
              sub_191EE86B0(),
              swift_retain(),
              uint64_t v31 = (void (**)(char *, uint64_t))v42,
              sub_191EE8630(),
              (*(unsigned char *)(v33 + 16) & 1) != 0))
        {
          swift_release();
        }
        else
        {
          uint64_t v46 = v33;
          sub_191EE86B0();
          sub_191EE8630();
        }
        uint64_t v28 = i;
      }
      while (v28 != MEMORY[0x192FE7810](v27, v26));
    }
    swift_bridgeObjectRelease();
    sub_191E088A0(v49);
    uint64_t v29 = v48;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v30 = sub_191EE8530();
    swift_bridgeObjectRelease();
    for (i = v30; v30 != MEMORY[0x192FE7810](v29, v26); uint64_t v30 = i)
    {
      char v35 = sub_191EE85E0();
      sub_191EE8570();
      if (v35)
      {
        uint64_t v36 = *(void *)(v29 + 32 + 8 * v30);
        swift_retain();
      }
      else
      {
        uint64_t v36 = sub_191EE91C0();
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x192FE7830](&i, v29, v26);
      swift_bridgeObjectRelease();
      uint64_t v37 = *(void (**)(uint64_t))(v36 + 32);
      uint64_t v38 = swift_retain();
      v37(v38);
      swift_release();
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191E08F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_1_33();
  uint64_t v8 = v7;
  uint64_t v10 = *v9;
  uint64_t v12 = *(void *)(v11 + 80);
  sub_191D5E674(v12, v12);
  uint64_t v13 = *(void *)(v12 - 8);
  swift_allocObject();
  uint64_t v14 = sub_191EE8560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  sub_191D5E704();
  if (MEMORY[0x192FE7820]())
  {
    uint64_t v16 = sub_191DEE3CC(v14, v12, *(void *)(v8 + 88));
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  uint64_t v18 = v10;
  sub_191E090A8(v16, &v18, a3, a4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_191E090A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v8 = *v5;
  uint64_t v9 = *(void *)(*v5 + 80);
  sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v29 = v11;
  uint64_t v30 = v10;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = sub_191EE7D00();
  OUTLINED_FUNCTION_1_2();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *a2;
  sub_191D5E944();
  *uint64_t v20 = sub_191EE8D20();
  (*(void (**)(uint64_t *, void, uint64_t))(v17 + 104))(v20, *MEMORY[0x1E4FBCBF0], v15);
  LOBYTE(a2) = sub_191EE7D30();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 8))(v20, v15);
  if (a2)
  {
    uint64_t v23 = *(void *)(v8 + 88);
    v34[0] = v9;
    v34[1] = v9;
    v34[2] = v23;
    v34[3] = v23;
    type metadata accessor for EventManager.EventTrigger();
    v34[0] = v21;
    uint64_t v24 = sub_191E087B8(v34, a1, v31, v32);
    if ((v24[2] & 2) != 0)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v9);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_retain();
      char v25 = sub_191E093D0((uint64_t)v24, (uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
      if (v25)
      {
        uint64_t v26 = (void (*)(uint64_t))v24[4];
        uint64_t v27 = swift_retain();
        v26(v27);
        swift_release();
        if (v24[2]) {
          return swift_release();
        }
      }
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_retain();
    }
    uint64_t v33 = v24;
    OUTLINED_FUNCTION_8_14();
    sub_191EE86B0();
    swift_retain();
    sub_191EE8630();
    swift_endAccess();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_191E09358()
{
  sub_191E088E8();
  char v0 = sub_191EE8960();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_191E093D0(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  uint64_t v5 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v25 = v6;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v22 - v8;
  OUTLINED_FUNCTION_1_2();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  sub_191E088E8();
  if ((v15 & 4) != 0)
  {
    OUTLINED_FUNCTION_5_21();
    char v18 = sub_191EE88D0();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
LABEL_7:
      char v19 = 1;
      return v19 & 1;
    }
  }
  else
  {
    uint64_t v16 = v25;
    uint64_t v23 = v11;
    OUTLINED_FUNCTION_5_21();
    char v17 = sub_191EE8970();
    swift_bridgeObjectRelease();
    if (v17)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, v24, v5);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) != 1)
      {
        uint64_t v20 = v23;
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v14, v9, v4);
        OUTLINED_FUNCTION_5_21();
        char v19 = sub_191EE8960();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v4);
        return v19 & 1;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v5);
      goto LABEL_7;
    }
  }
  char v19 = 0;
  return v19 & 1;
}

uint64_t EventManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventManager.__deallocating_deinit()
{
  EventManager.deinit();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

unint64_t sub_191E0963C()
{
  unint64_t result = qword_1E92F3B20;
  if (!qword_1E92F3B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3B20);
  }
  return result;
}

unint64_t sub_191E0968C()
{
  unint64_t result = qword_1E92F3B28;
  if (!qword_1E92F3B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3B28);
  }
  return result;
}

unint64_t sub_191E096DC()
{
  unint64_t result = qword_1EB50AF70;
  if (!qword_1EB50AF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB50AF70);
  }
  return result;
}

unint64_t sub_191E0972C()
{
  unint64_t result = qword_1EB50AF78;
  if (!qword_1EB50AF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB50AF78);
  }
  return result;
}

ValueMetadata *type metadata accessor for EventTriggerBehavior()
{
  return &type metadata for EventTriggerBehavior;
}

uint64_t sub_191E09788()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for EventManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for EventManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EventManager);
}

uint64_t dispatch thunk of EventManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of EventManager.fire(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of EventManager.trigger(on:behavior:block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of EventManager.contains(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_191E098A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_191E0991C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_191EE9770() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_191EE9770();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

uint64_t NSProcessInfo.launchArgument<A>(forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(self, sel_processInfo);
  id v7 = objc_msgSend(v6, sel_arguments);

  uint64_t v8 = (void *)sub_191EE8520();
  uint64_t v9 = sub_191D8C26C();
  uint64_t v11 = sub_191E0991C(v9, v10, v8);
  LOBYTE(v7) = v12;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    uint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
    }
    else
    {
      if (v14 >= v8[2])
      {
        OUTLINED_FUNCTION_0_28();
        __swift_storeEnumTagSinglePayload(v22, v23, v24, v25);
        goto LABEL_10;
      }
      if ((v14 & 0x8000000000000000) == 0)
      {
        uint64_t v15 = &v8[2 * v14];
        uint64_t v16 = v15[4];
        uint64_t v17 = v15[5];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        swift_bridgeObjectRelease();
        sub_191E09B80(v16, v17, a1, a2, a3);
LABEL_10:
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_28();

  return __swift_storeEnumTagSinglePayload(v18, v19, v20, v21);
}

uint64_t sub_191E09B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if ((sub_191EE8300() & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, a2, a3, a3, a4);
  }

  return __swift_storeEnumTagSinglePayload(a5, 1, 1, a3);
}

uint64_t NSProcessInfo.environmentVariable<A>(forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_191D8C26C();
  uint64_t v8 = v7;
  id v9 = objc_msgSend(self, sel_processInfo);
  id v10 = objc_msgSend(v9, sel_environment);

  uint64_t v11 = sub_191EE7E00();
  uint64_t v12 = sub_191DAA0F4(v6, v8, v11);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_191E09B80(v12, v14, a1, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_0_28();
    return __swift_storeEnumTagSinglePayload(v16, v17, v18, v19);
  }
}

uint64_t BasePoolObject.deinit()
{
  return v0;
}

uint64_t BasePoolObject.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t method lookup function for BasePoolObject(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BasePoolObject);
}

uint64_t sub_191E09DAC()
{
  OUTLINED_FUNCTION_0_29();
  uint64_t v0 = sub_191EE9750();
  sub_191E0A42C(0, (unint64_t *)&qword_1EB50C808, (uint64_t (*)(void, uint64_t))type metadata accessor for PoolObject);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  return result;
}

uint64_t sub_191E09E2C()
{
  OUTLINED_FUNCTION_0_29();
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + 104) - 8) + 8))(v0 + *(void *)(v1 + 112));
}

uint64_t sub_191E09E84()
{
  return swift_initClassMetadata2();
}

uint64_t sub_191E09ECC()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_191E09F20(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v4 = swift_allocObject();
  sub_191E09F68(a1, a2);
  return v4;
}

uint64_t *sub_191E09F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_unknownObjectRelease();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = *(void *)(v4 + 104);
  v6[3] = a2;
  v6[4] = v5;
  v2[2] = (uint64_t)sub_191E0A420;
  v2[3] = (uint64_t)v6;
  swift_release();
  return v2;
}

uint64_t sub_191E0A024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x192FE9B40](v5);
  if (!result)
  {
    uint64_t v7 = a3;
    uint64_t v8 = 1;
    return __swift_storeEnumTagSinglePayload(v7, v8, 1, a2);
  }
  uint64_t v9 = result;
  if (*(void *)(*(void *)(a2 - 8) + 64) == 8)
  {
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(a2 - 8) + 16))(a3, &v9, a2);
    swift_unknownObjectRelease();
    uint64_t v7 = a3;
    uint64_t v8 = 0;
    return __swift_storeEnumTagSinglePayload(v7, v8, 1, a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_191E0A118()
{
  uint64_t v1 = *v0;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = *(void *)(v1 + 104);
  v4[3] = v3;
  v4[4] = v2;
  sub_191E0A42C(0, &qword_1E92F3B30, (uint64_t (*)(void, uint64_t))type metadata accessor for WeakPoolObject);
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_191E0A36C;
  *(void *)(v6 + 24) = v4;
  *(void *)(v5 + 16) = sub_191E0A3A8;
  *(void *)(v5 + 24) = v6;
  swift_retain();
  return v5;
}

uint64_t sub_191E0A1FC@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_191EE8DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  a1(v6);
  uint64_t v9 = sub_191EE8DE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v9;
  return result;
}

uint64_t sub_191E0A2E8()
{
  return swift_release();
}

uint64_t sub_191E0A2F0()
{
  sub_191D5B054();
  uint64_t v0 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t type metadata accessor for WeakPoolObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E0A334()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E0A36C@<X0>(uint64_t *a1@<X8>)
{
  return sub_191E0A1FC(*(void (**)(uint64_t))(v1 + 24), a1);
}

uint64_t sub_191E0A378()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

void *sub_191E0A3A8@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  *a1 = v4;
  return result;
}

uint64_t sub_191E0A3E8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191E0A420@<X0>(uint64_t a1@<X8>)
{
  return sub_191E0A024(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

void sub_191E0A42C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC838] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191E0A484()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v5 = &v4;
      swift_getTupleTypeLayout2();
      uint64_t v6 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_191E0A584(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  unint64_t v11 = (v10 & ~(unint64_t)v8) + *(void *)(v7 + 64);
  int v12 = *(_DWORD *)(v5 + 80) | v8;
  uint64_t v13 = v12;
  int v14 = v12 & 0x100000;
  if (v13 > 7 || v14 != 0 || v11 + 1 > 0x18)
  {
    uint64_t v17 = *(void *)a2;
    *char v4 = *(void *)a2;
    char v4 = (void *)(v17 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~v9;
    unsigned int v19 = a2[v11];
    if (v19 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v20 = v11;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_19;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_19:
          int v22 = (v21 | ((v19 - 2) << (8 * v11))) + 2;
          unsigned int v23 = v21 + 2;
          if (v11 >= 4) {
            unsigned int v19 = v23;
          }
          else {
            unsigned int v19 = v22;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v18, (unint64_t)&a2[v10] & v18, v6);
    *((unsigned char *)v4 + v11) = v19 == 1;
  }
  return v4;
}

uint64_t sub_191E0A790(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v9 + 80);
  (*(void (**)(uint64_t, void))(v4 + 8))(a1, *(void *)(a2 + 24));
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);

  return v7((v5 + v6 + a1) & ~v6, v3);
}

uint64_t sub_191E0A854(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v5 + v8;
  uint64_t v11 = ((v5 + v8) & ~v8) + *(void *)(v7 + 64);
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_10;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_10:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  BOOL v17 = v12 == 1;
  (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(a1, a2);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))((v10 + a1) & v9, (unint64_t)&a2[v10] & v9, v6);
  *(unsigned char *)(a1 + v11) = v17;
  return a1;
}

unsigned __int8 *sub_191E0AA10(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 + 16);
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 + 64);
    uint64_t v10 = *(void *)(v6 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v22 = ~v11;
    uint64_t v12 = v9 + v11;
    uint64_t v13 = ((v9 + v11) & ~v11) + *(void *)(v10 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v5);
    unint64_t v14 = (unint64_t)&a1[v12] & ~v11;
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v14, v6);
    unsigned int v15 = a2[v13];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v17 = v13;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a2;
          goto LABEL_11;
        case 2:
          int v18 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v18 = *(_DWORD *)a2;
LABEL_11:
          int v19 = (v18 | (v16 << (8 * v13))) + 2;
          unsigned int v15 = v18 + 2;
          if (v13 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    BOOL v20 = v15 == 1;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v14, (unint64_t)&a2[v12] & v22, v6);
    a1[v13] = v20;
  }
  return a1;
}

uint64_t sub_191E0AC34(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v5 + v8;
  uint64_t v11 = ((v5 + v8) & ~v8) + *(void *)(v7 + 64);
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_10;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_10:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  BOOL v17 = v12 == 1;
  (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(a1, a2);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 32))((v10 + a1) & v9, (unint64_t)&a2[v10] & v9, v6);
  *(unsigned char *)(a1 + v11) = v17;
  return a1;
}

unsigned __int8 *sub_191E0ADF0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 + 16);
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 + 64);
    uint64_t v10 = *(void *)(v6 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v22 = ~v11;
    uint64_t v12 = v9 + v11;
    uint64_t v13 = ((v9 + v11) & ~v11) + *(void *)(v10 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v5);
    unint64_t v14 = (unint64_t)&a1[v12] & ~v11;
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v14, v6);
    unsigned int v15 = a2[v13];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v17 = v13;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a2;
          goto LABEL_11;
        case 2:
          int v18 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v18 = *(_DWORD *)a2;
LABEL_11:
          int v19 = (v18 | (v16 << (8 * v13))) + 2;
          unsigned int v15 = v18 + 2;
          if (v13 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    BOOL v20 = v15 == 1;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(v14, (unint64_t)&a2[v12] & v22, v6);
    a1[v13] = v20;
  }
  return a1;
}

uint64_t sub_191E0B014(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + v4) & ~v4) + v5;
  if (a2 < 0xFF) {
    goto LABEL_20;
  }
  uint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v11 < 2)
    {
LABEL_20:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 2) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_20;
  }
LABEL_12:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 255;
}

void sub_191E0B188(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_32:
        __break(1u);
        JUMPOUT(0x191E0B390);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_20;
      case 3:
        goto LABEL_32;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (a2) {
LABEL_21:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_191E0B3B8(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = ((*(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_10:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_191E0B4B4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
    unint64_t v5 = (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v6 = *(void *)(v4 + 64);
    size_t v7 = v5 + v6;
    unsigned int v8 = a2 - 2;
    if ((v5 + v6) < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    a1[((*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)] = a2;
  }
}

uint64_t type metadata accessor for StateMachineError()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of RequestSigning.signature(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unsigned int v9 = v4;
  v9[1] = sub_191E0B764;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191E0B764(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_191E0B870@<X0>(uint64_t a1@<X8>)
{
  sub_191DE3224();
  MEMORY[0x1F4188790](v1 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = v3 - v2;
  sub_191DD7F38();
  MEMORY[0x1F4188790](v5 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_191EE93C0();
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_2();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_191EE9AC0();
  OUTLINED_FUNCTION_2_35();
  uint64_t result = __swift_getEnumTagSinglePayload(v8, 1, v9);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v15, v8, v9);
  sub_191DA9FD0(v16, &v22);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
  if (!v23)
  {
    sub_191D9EB34((uint64_t)&v22);
    goto LABEL_7;
  }
  type metadata accessor for ReferenceDecodingPool();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    sub_191DD8564();
    swift_allocError();
    *(void *)uint64_t v18 = 1;
    *(void *)(v18 + 8) = 0;
    *(void *)(v18 + 16) = 0;
    *(void *)(v18 + 24) = 0;
    *(unsigned char *)(v18 + 32) = 2;
    return swift_willThrow();
  }
  sub_191DD640C();
  sub_191EE9AD0();
  if (v20) {
    return swift_release();
  }
  else {
    return sub_191DE3318(v4, v21, a1);
  }
}

uint64_t sub_191E0BAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_191DD7F38();
  MEMORY[0x1F4188790](v11 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_191EE93C0();
  OUTLINED_FUNCTION_0();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_2();
  uint64_t v21 = v20 - v19;
  OUTLINED_FUNCTION_2_35();
  uint64_t result = __swift_getEnumTagSinglePayload(v14, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v21, v14, v15);
    v26[3] = type metadata accessor for ReferenceDecodingPool();
    v26[0] = a4;
    swift_beginAccess();
    swift_retain();
    sub_191DD3048((uint64_t)v26, v21);
    swift_endAccess();
    sub_191D5CB84(a1, a2, a3, a5, a6, a7);
    return sub_191E0BC70();
  }
  return result;
}

uint64_t sub_191E0BC70()
{
  sub_191DD7F38();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_191EE93C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191EE93B0();
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    swift_beginAccess();
    sub_191DA4E60((uint64_t)v6, v8, v9, v10, v11, v12, v13, v14, v15[0], v15[1]);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_191D9EB34((uint64_t)v16);
    return swift_endAccess();
  }
  return result;
}

uint64_t ReferenceDecoder.__allocating_init()()
{
  return _TeaJSONDecoder.init()();
}

uint64_t ReferenceDecoder.__deallocating_deinit()
{
  uint64_t v0 = _TeaJSONDecoder.deinit();

  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t type metadata accessor for ReferenceDecoder()
{
  return self;
}

uint64_t method lookup function for ReferenceDecoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReferenceDecoder);
}

uint64_t dispatch thunk of ReferenceDecoder.decodeWithReferences<A>(_:from:pool:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

void sub_191E0BEF4()
{
  sub_191DD8508();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_191E0BF8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_191DD8508();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_191E0C058(uint64_t a1)
{
  sub_191DD8508();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_191E0C0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DD8508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_191E0C14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DD8508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191E0C1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DD8508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_191E0C254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DD8508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_191E0C2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191E0C2EC);
}

uint64_t sub_191E0C2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191DD8508();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_191E0C378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191E0C38C);
}

void sub_191E0C38C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_191DD8508();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for ReferenceEncodingContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E0C42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_191DD8508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for ReferenceEncodingContainer();
  *(void *)(a3 + *(int *)(result + 28)) = a2;
  return result;
}

uint64_t sub_191E0C4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = type metadata accessor for Reference();
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(v5 + 32));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v13 = *v6;
  uint64_t v14 = v7;
  char v17 = 0;
  sub_191DD8508();
  sub_191E0C5FC();
  uint64_t result = OUTLINED_FUNCTION_1_34();
  if (!v2)
  {
    uint64_t v10 = a1 + *(int *)(v5 + 28);
    uint64_t v11 = *(void *)(v10 + 8);
    uint64_t v12 = *(void *)v10;
    int v16 = *(unsigned __int8 *)(v10 + 16);
    char v15 = v16;
    char v17 = 1;
    sub_191E0C648();
    OUTLINED_FUNCTION_1_34();
    uint64_t v13 = v8;
    uint64_t v14 = v7;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v16) {
      sub_191EE3C04(a1, &v13, v12, v4);
    }
    else {
      sub_191EE3AE4(a1, &v13, v12, v11, v4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_191E0C5FC()
{
  unint64_t result = qword_1EB5080E0;
  if (!qword_1EB5080E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5080E0);
  }
  return result;
}

unint64_t sub_191E0C648()
{
  unint64_t result = qword_1EB508148;
  if (!qword_1EB508148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508148);
  }
  return result;
}

uint64_t ts_debug_log(_:log:)(uint64_t (*a1)(void), uint64_t a2, NSObject *a3)
{
  os_log_type_t v5 = sub_191EE8C70();
  uint64_t result = os_log_type_enabled(a3, v5);
  if (result)
  {
    sub_191EE8C70();
    sub_191D939DC();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_191EEB6F0;
    uint64_t v8 = a1();
    uint64_t v10 = v9;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 64) = sub_191D93A44();
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v10;
    sub_191EE7910();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_191E0C784(uint64_t a1)
{
  return sub_191D8A6C4(a1, qword_1E92F4790);
}

uint64_t sub_191E0C7B0(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_30(a1, qword_1EB513310);
}

uint64_t sub_191E0C7CC(uint64_t a1)
{
  return sub_191D8A6C4(a1, qword_1EB512E90);
}

uint64_t sub_191E0C7F0(uint64_t a1)
{
  return sub_191D8A6C4(a1, qword_1EB512EA8);
}

TeaFoundation::ReferenceType __swiftcall ReferenceType.init(type:)(TeaFoundation::ReferenceType type)
{
  *uint64_t v1 = type;
  return type;
}

uint64_t ReferenceType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_3_0();
  sub_191EE9AB0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    OUTLINED_FUNCTION_3_0();
    uint64_t v5 = sub_191EE97A0();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ReferenceType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191EE9AF0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_191EE9820();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t ReferenceType.hash(into:)()
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191EE8200();

  return swift_bridgeObjectRelease();
}

uint64_t static ReferenceType.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_191EE9770();
  }
}

uint64_t ReferenceType.hashValue.getter()
{
  return sub_191EE9A90();
}

uint64_t sub_191E0CA48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ReferenceType.init(from:)(a1, a2);
}

uint64_t sub_191E0CA60(void *a1)
{
  return ReferenceType.encode(to:)(a1);
}

uint64_t ReferenceType.description.getter()
{
  uint64_t v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

unint64_t sub_191E0CAB8()
{
  unint64_t result = qword_1EB5080F8;
  if (!qword_1EB5080F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5080F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferenceType()
{
  return &type metadata for ReferenceType;
}

uint64_t SignpostEntry.object.getter()
{
  sub_191EE8DF0();
  OUTLINED_FUNCTION_26();
  uint64_t v0 = OUTLINED_FUNCTION_2_36();

  return v1(v0);
}

uint64_t SignpostEntry.signposts.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t SignpostEntry.startDate.getter()
{
  sub_191EE7640();
  OUTLINED_FUNCTION_26();
  uint64_t v0 = OUTLINED_FUNCTION_2_36();

  return v1(v0);
}

uint64_t SignpostEntry.endDate.getter()
{
  sub_191EE7640();
  OUTLINED_FUNCTION_26();
  uint64_t v0 = OUTLINED_FUNCTION_2_36();

  return v1(v0);
}

uint64_t SignpostEntry.comment.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v2;
}

uint64_t SignpostEntry.timeInterval.getter()
{
  return sub_191EE7580();
}

uint64_t sub_191E0CCA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_191EE8DF0();
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(a7, a1);
  char v15 = (int *)type metadata accessor for SignpostEntry();
  *(void *)(a7 + v15[7]) = a2;
  uint64_t v16 = a7 + v15[8];
  uint64_t v17 = sub_191EE7640();
  OUTLINED_FUNCTION_26();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
  v19(v16, a3, v17);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v19)(a7 + v15[9], a4, v17);
  uint64_t v21 = (void *)(a7 + v15[10]);
  *uint64_t v21 = a5;
  v21[1] = a6;
  return result;
}

double SignpostEntry.shortDescription.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - v9;
  OUTLINED_FUNCTION_1_2();
  uint64_t v31 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v30 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191D9DFD4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191EEE540;
  strcpy((char *)(inited + 32), "timeInterval");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  SignpostEntry.timeInterval.getter();
  uint64_t v15 = MEMORY[0x1E4FBB3D0];
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 72) = v15;
  *(void *)(inited + 80) = 0x746E656D6D6F63;
  *(void *)(inited + 88) = 0xE700000000000000;
  uint64_t v17 = (void *)(v2 + *(int *)(a1 + 40));
  uint64_t v18 = v17[1];
  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 96) = *v17;
  *(void *)(inited + 104) = v18;
  *(void *)(inited + 120) = v19;
  *(void *)(inited + 128) = 0x74736F706E676973;
  *(void *)(inited + 136) = 0xE900000000000073;
  uint64_t v20 = *(void *)(v2 + *(int *)(a1 + 28));
  type metadata accessor for Signpost();
  *(void *)(inited + 168) = sub_191EE86B0();
  *(void *)(inited + 144) = v20;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v21 = sub_191EE7E50();
  ShortDescription.init(name:_:)(0x7972746E45, 0xE500000000000000, v21, &v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v2, v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  }
  else
  {
    uint64_t v22 = v31;
    uint64_t v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v30, v10, v4);
    v33[3] = v4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v33);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(boxed_opaque_existential_0, v23, v4);
    type metadata accessor for ShortDescription();
    ShortDescription.subscript.setter((uint64_t)v33, 0x7463656A626FLL, 0xE600000000000000);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v4);
  }
  uint64_t v25 = v34;
  uint64_t v26 = type metadata accessor for ShortDescription();
  uint64_t v27 = v32;
  *(void *)(v32 + 24) = v26;
  *(void *)(v27 + 32) = &protocol witness table for ShortDescription<A>;
  *(void *)uint64_t v27 = v25;
  double result = *(double *)&v35;
  *(_OWORD *)(v27 + 8) = v35;
  return result;
}

uint64_t sub_191E0D0F4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191E0D130(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ShortDescribable.description.getter(a1, WitnessTable);
}

uint64_t sub_191E0D184()
{
  uint64_t result = sub_191EE8DF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191EE7640();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_191E0D268(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = sub_191EE7640();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = v12 + v10;
  uint64_t v14 = v12 + 7;
  unint64_t v15 = ((v12 + 7 + ((v13 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unsigned int v16 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  int v17 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v16 > 7 || v17 != 0 || v15 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v33 = v8;
    uint64_t v21 = ~v11;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    }
    uint64_t v23 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    uint64_t v25 = ((unint64_t)v23 + v11 + 8) & v21;
    uint64_t v26 = ((unint64_t)v24 + v11 + 8) & v21;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v27(v25, v26, v33);
    uint64_t v28 = (v13 + v25) & v21;
    uint64_t v29 = (v13 + v26) & v21;
    v27(v28, v29, v33);
    uint64_t v30 = (void *)((v14 + v28) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v31 = (void *)((v14 + v29) & 0xFFFFFFFFFFFFFFF8);
    void *v30 = *v31;
    v30[1] = v31[1];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_191E0D4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v3);
  uint64_t v5 = *(void *)(v3 - 8);
  if (!EnumTagSinglePayload) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  }
  uint64_t v6 = a1 + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v6;
  }
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_191EE7640();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v11 = v9 + 8;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (v7 + v12 + 8) & ~v12;
  v10(v13, v8);
  v10((*(void *)(v11 + 56) + v12 + v13) & ~v12, v8);

  return swift_bridgeObjectRelease();
}

void *sub_191E0D640(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = v7;
  if (EnumTagSinglePayload)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v9 = *(void *)(v7 + 64);
    }
    else {
      size_t v9 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v10 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v10 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v11 = v10 + 7;
  uint64_t v12 = (void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  uint64_t v14 = sub_191EE7640();
  uint64_t v15 = *(void *)(v14 - 8);
  unsigned int v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  uint64_t v17 = v15 + 16;
  uint64_t v18 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = ((unint64_t)v12 + v18 + 8) & ~v18;
  uint64_t v20 = ((unint64_t)v13 + v18 + 8) & ~v18;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v16(v19, v20, v14);
  uint64_t v21 = *(void *)(v17 + 48);
  uint64_t v22 = (v21 + v18 + v19) & ~v18;
  v16(v22, (v21 + v18 + v20) & ~v18, v14);
  uint64_t v23 = (void *)((v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)((v21 + 7 + ((v21 + v18 + v20) & ~v18)) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

void *sub_191E0D804(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  int v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8;
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v8 + 84);
    size_t v11 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v9 + 84);
    size_t v11 = *(void *)(v9 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v13 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v14 = v13 + 7;
  uint64_t v15 = (void *)(((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v16 = (void *)(((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_191EE7640();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24);
  uint64_t v20 = v18 + 24;
  uint64_t v21 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v22 = ((unint64_t)v15 + v21 + 8) & ~v21;
  uint64_t v23 = ((unint64_t)v16 + v21 + 8) & ~v21;
  v19(v22, v23, v17);
  uint64_t v24 = *(void *)(v20 + 40);
  uint64_t v25 = (v24 + v21 + v22) & ~v21;
  uint64_t v26 = (v24 + v21 + v23) & ~v21;
  v19(v25, v26, v17);
  uint64_t v27 = (void *)((v24 + 7 + v25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)((v24 + 7 + v26) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_191E0DA38(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = v7;
  if (EnumTagSinglePayload)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v9 = *(void *)(v7 + 64);
    }
    else {
      size_t v9 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v10 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v10 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v11 = v10 + 7;
  size_t v12 = (void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *size_t v12 = *v13;
  uint64_t v14 = sub_191EE7640();
  uint64_t v15 = *(void *)(v14 - 8);
  unsigned int v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
  uint64_t v17 = v15 + 32;
  uint64_t v18 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = ((unint64_t)v12 + v18 + 8) & ~v18;
  uint64_t v20 = ((unint64_t)v13 + v18 + 8) & ~v18;
  v16(v19, v20, v14);
  uint64_t v21 = *(void *)(v17 + 32);
  uint64_t v22 = (v21 + v18 + v19) & ~v18;
  uint64_t v23 = (v21 + v18 + v20) & ~v18;
  v16(v22, v23, v14);
  *(_OWORD *)((v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v21 + 7 + v23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_191E0DBE0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  int v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8;
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v8 + 84);
    size_t v11 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v9 + 84);
    size_t v11 = *(void *)(v9 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v13 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v14 = v13 + 7;
  uint64_t v15 = (void *)(((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v16 = (void *)(((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_191EE7640();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  uint64_t v20 = v18 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v22 = ((unint64_t)v15 + v21 + 8) & ~v21;
  uint64_t v23 = ((unint64_t)v16 + v21 + 8) & ~v21;
  v19(v22, v23, v17);
  uint64_t v24 = *(void *)(v20 + 24);
  uint64_t v25 = (v24 + v21 + v22) & ~v21;
  uint64_t v26 = (v24 + v21 + v23) & ~v21;
  v19(v25, v26, v17);
  uint64_t v27 = (void *)((v24 + 7 + v25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)((v24 + 7 + v26) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191E0DE04(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v9 = sub_191EE7640();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11) {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v12 = v8;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(void *)(v6 + 64);
  if (!v7) {
    ++v14;
  }
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  if (!a2) {
    return 0;
  }
  if (v13 < a2)
  {
    unint64_t v16 = ((*(void *)(*(void *)(v9 - 8) + 64)
          + ((*(void *)(*(void *)(v9 - 8) + 64) + v15 + ((v15 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v15)) & ~v15)
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v17 = v16 & 0xFFFFFFF8;
    if ((v16 & 0xFFFFFFF8) != 0) {
      unsigned int v18 = 2;
    }
    else {
      unsigned int v18 = a2 - v13 + 1;
    }
    if (v18 >= 0x10000) {
      unsigned int v19 = 4;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v18 < 0x100) {
      unsigned int v19 = 1;
    }
    if (v18 >= 2) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0;
    }
    switch(v20)
    {
      case 1:
        int v21 = *((unsigned __int8 *)a1 + v16);
        if (!v21) {
          break;
        }
        goto LABEL_29;
      case 2:
        int v21 = *(unsigned __int16 *)((char *)a1 + v16);
        if (v21) {
          goto LABEL_29;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191E0E064);
      case 4:
        int v21 = *(_DWORD *)((char *)a1 + v16);
        if (!v21) {
          break;
        }
LABEL_29:
        int v22 = v21 - 1;
        if (v17)
        {
          int v22 = 0;
          LODWORD(v17) = *a1;
        }
        return v13 + (v17 | v22) + 1;
      default:
        break;
    }
  }
  if (v8 == v13)
  {
    if (v7 < 2) {
      return 0;
    }
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v5);
    if (EnumTagSinglePayload >= 2) {
      return EnumTagSinglePayload - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v24 = (unint64_t *)(((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    if ((v12 & 0x80000000) != 0)
    {
      return __swift_getEnumTagSinglePayload(((unint64_t)v24 + v15 + 8) & ~v15, v11, v9);
    }
    else
    {
      unint64_t v25 = *v24;
      if (v25 >= 0xFFFFFFFF) {
        LODWORD(v25) = -1;
      }
      return (v25 + 1);
    }
  }
}

void sub_191E0E078(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  uint64_t v11 = sub_191EE7640();
  int v12 = 0;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  if (v10 <= v14) {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v15 = v10;
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(void *)(v8 + 64);
  if (!v9) {
    ++v17;
  }
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  size_t v19 = ((*(void *)(*(void *)(v11 - 8) + 64)
        + ((*(void *)(*(void *)(v11 - 8) + 64) + v18 + ((v18 + ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v18)) & ~v18)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v16 < a3)
  {
    if (((*(_DWORD *)(*(void *)(v11 - 8) + 64)
         + ((*(_DWORD *)(*(void *)(v11 - 8) + 64)
           + v18
           + ((v18 + ((v17 + 7) & 0xFFFFFFF8) + 8) & ~v18)) & ~v18)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v20 = a3 - v16 + 1;
    else {
      unsigned int v20 = 2;
    }
    if (v20 >= 0x10000) {
      int v21 = 4;
    }
    else {
      int v21 = 2;
    }
    if (v20 < 0x100) {
      int v21 = 1;
    }
    if (v20 >= 2) {
      int v12 = v21;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v16)
  {
    if (((*(_DWORD *)(*(void *)(v11 - 8) + 64)
         + ((*(_DWORD *)(*(void *)(v11 - 8) + 64)
           + v18
           + ((v18 + ((v17 + 7) & 0xFFFFFFF8) + 8) & ~v18)) & ~v18)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      int v22 = a2 - v16;
    else {
      int v22 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v11 - 8) + 64)
         + ((*(_DWORD *)(*(void *)(v11 - 8) + 64)
           + v18
           + ((v18 + ((v17 + 7) & 0xFFFFFFF8) + 8) & ~v18)) & ~v18)
         + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v23 = ~v16 + a2;
      bzero(a1, v19);
      *a1 = v23;
    }
    switch(v12)
    {
      case 1:
        *((unsigned char *)a1 + v19) = v22;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v19) = v22;
        return;
      case 3:
        goto LABEL_53;
      case 4:
        *(_DWORD *)((char *)a1 + v19) = v22;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      *((unsigned char *)a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)((char *)a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_53:
      __break(1u);
      JUMPOUT(0x191E0E31CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v19) = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (!a2) {
        return;
      }
LABEL_39:
      if (v10 == v16)
      {
        uint64_t v24 = (a2 + 1);
        uint64_t v25 = (uint64_t)a1;
        uint64_t v14 = v9;
        uint64_t v11 = v7;
      }
      else
      {
        uint64_t v26 = (void *)(((unint64_t)a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((v15 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v27 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v27 = (a2 - 1);
          }
          *uint64_t v26 = v27;
          return;
        }
        uint64_t v25 = ((unint64_t)v26 + v18 + 8) & ~v18;
        uint64_t v24 = a2;
      }
      __swift_storeEnumTagSinglePayload(v25, v24, v14, v11);
      return;
  }
}

uint64_t type metadata accessor for SignpostEntry()
{
  return __swift_instantiateGenericMetadata();
}

void + infix<A, B>(_:_:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v62 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  unint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = OUTLINED_FUNCTION_10_15();
  MEMORY[0x1F4188790](v9 - 8);
  char v61 = (char *)v49 - v10;
  OUTLINED_FUNCTION_1_2();
  uint64_t v55 = v11;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_5_1();
  uint64_t v60 = v13;
  OUTLINED_FUNCTION_1_2();
  uint64_t v54 = v14;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_5_1();
  uint64_t v59 = v16;
  uint64_t v67 = v2;
  uint64_t v68 = v4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v64 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_7_14();
  uint64_t v23 = v21 - v22;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_15_11();
  uint64_t v65 = v25;
  uint64_t v70 = v8;
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v26 = sub_191EE9410();
    unint64_t v50 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = v26 | 0x8000000000000000;
  }
  else
  {
    unint64_t v50 = v6 + 64;
    OUTLINED_FUNCTION_11_1();
    uint64_t v28 = v30 & v31;
    unint64_t v29 = v6;
  }
  uint64_t v52 = v29 & 0x7FFFFFFFFFFFFFFFLL;
  v49[1] = v27;
  uint64_t v53 = v55 + 16;
  uint64_t v66 = v54 + 16;
  uint64_t v63 = v19 + 32;
  uint64_t v57 = v55 + 32;
  uint64_t v58 = v54 + 32;
  uint64_t v56 = v54 + 8;
  int64_t v51 = (unint64_t)(v27 + 64) >> 6;
  v49[0] = v51 - 1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  int64_t v32 = 0;
  if ((v29 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v33 = v65;
  if (v28)
  {
    uint64_t v2 = (v28 - 1) & v28;
    int64_t v34 = v32;
LABEL_7:
    OUTLINED_FUNCTION_1_35();
    v35();
    OUTLINED_FUNCTION_1_35();
    v36();
    uint64_t v37 = 0;
    goto LABEL_17;
  }
  int64_t v34 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
    __break(1u);
  }
  else
  {
    if (v34 >= v51)
    {
      OUTLINED_FUNCTION_12_12();
      int64_t v34 = v32;
      goto LABEL_17;
    }
    uint64_t v39 = *(void *)(v50 + 8 * v34);
    if (v39) {
      goto LABEL_13;
    }
    if (v32 + 2 >= v51)
    {
      OUTLINED_FUNCTION_12_12();
      goto LABEL_17;
    }
    uint64_t v39 = *(void *)(v50 + 8 * (v32 + 2));
    if (v39)
    {
      int64_t v34 = v32 + 2;
LABEL_13:
      uint64_t v2 = (v39 - 1) & v39;
      goto LABEL_7;
    }
    int64_t v47 = v32 + 3;
    if (v32 + 3 >= v51)
    {
      OUTLINED_FUNCTION_12_12();
      int64_t v34 = v48;
      goto LABEL_17;
    }
    uint64_t v39 = *(void *)(v50 + 8 * v47);
    if (v39)
    {
      int64_t v34 = v32 + 3;
      goto LABEL_13;
    }
    while (1)
    {
      int64_t v34 = v47 + 1;
      if (__OFADD__(v47, 1)) {
        break;
      }
      if (v34 >= v51)
      {
        OUTLINED_FUNCTION_12_12();
        int64_t v34 = v49[0];
LABEL_17:
        while (1)
        {
          __swift_storeEnumTagSinglePayload(v23, v37, 1, TupleTypeMetadata2);
          OUTLINED_FUNCTION_15();
          v40();
          if (__swift_getEnumTagSinglePayload(v33, 1, TupleTypeMetadata2) == 1) {
            break;
          }
          int64_t v69 = v34;
          uint64_t v41 = v67;
          OUTLINED_FUNCTION_15();
          v42();
          OUTLINED_FUNCTION_15();
          v43();
          uint64_t v44 = (uint64_t)v61;
          OUTLINED_FUNCTION_1_35();
          v45();
          __swift_storeEnumTagSinglePayload(v44, 0, 1, v41);
          sub_191EE7F20();
          sub_191EE7F40();
          OUTLINED_FUNCTION_33();
          v46();
          int64_t v32 = v69;
          uint64_t v28 = v2;
          if ((v29 & 0x8000000000000000) == 0) {
            goto LABEL_5;
          }
LABEL_8:
          uint64_t v38 = sub_191EE9420();
          uint64_t v33 = v65;
          if (v38)
          {
            sub_191EE9730();
            swift_unknownObjectRelease();
            sub_191EE9730();
            swift_unknownObjectRelease();
            uint64_t v37 = 0;
          }
          else
          {
            uint64_t v37 = 1;
          }
          int64_t v34 = v32;
          uint64_t v2 = v28;
        }
        sub_191D8CCD4();
        OUTLINED_FUNCTION_36();
        return;
      }
      uint64_t v39 = *(void *)(v50 + 8 * v34);
      ++v47;
      if (v39) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
}

void -= infix<A, B>(_:_:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v33 = v0;
  uint64_t v34 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v32 = OUTLINED_FUNCTION_10_15();
  OUTLINED_FUNCTION_1_2();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v31 = (char *)&v28 - v9;
  OUTLINED_FUNCTION_1_2();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_15_11();
  uint64_t v35 = v17;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v18 = sub_191EE8530();
  uint64_t v37 = v18;
  OUTLINED_FUNCTION_9_10();
  if (v18 != v19)
  {
    uint64_t v29 = v13;
    uint64_t v30 = v11 + 16;
    uint64_t v21 = (void (**)(char *, uint64_t))(v7 + 8);
    while (1)
    {
      char v22 = sub_191EE85E0();
      sub_191EE8570();
      if (v22)
      {
        uint64_t v23 = v35;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(v35, v5+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v18, v3);
      }
      else
      {
        uint64_t v26 = sub_191EE91C0();
        if (v29 != 8)
        {
          __break(1u);
          return;
        }
        uint64_t v36 = v26;
        uint64_t v23 = v35;
        OUTLINED_FUNCTION_1_35();
        v27();
        swift_unknownObjectRelease();
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x192FE7830](&v37, v5, v3);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v16, v23, v3);
      sub_191EE7F20();
      uint64_t v24 = v31;
      sub_191EE7E20();
      (*v21)(v24, v32);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v3);
      uint64_t v18 = v37;
      OUTLINED_FUNCTION_9_10();
      if (v18 == v25)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_36();
        return;
      }
    }
  }
  OUTLINED_FUNCTION_36();
  swift_bridgeObjectRelease();
}

uint64_t Dictionary.flatMapKeysAndValues<A, B>(_:)()
{
  return sub_191E0F170();
}

uint64_t sub_191E0EBC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *, uint64_t, uint64_t), char *a4, char *a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(char *, char *, uint64_t, uint64_t), uint64_t a9, uint64_t a10)
{
  uint64_t v65 = a5;
  uint64_t v66 = a6;
  uint64_t v67 = a4;
  uint64_t v68 = a3;
  uint64_t v13 = *((void *)a8 - 1);
  uint64_t v58 = a1;
  uint64_t v59 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](a1);
  uint64_t v57 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v56 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v60 = (char *)&v53 - v19;
  uint64_t v20 = sub_191EE8DF0();
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v53 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v53 - v27;
  uint64_t v62 = a7;
  uint64_t v29 = sub_191EE8DF0();
  uint64_t v64 = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)&v53 - v33;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v36 = v69;
  uint64_t result = v68(v34, v28, a2, a2 + *(int *)(TupleTypeMetadata2 + 48));
  if (!v36)
  {
    uint64_t v69 = 0;
    uint64_t v67 = v23;
    uint64_t v68 = a8;
    uint64_t v55 = v28;
    uint64_t v39 = v63;
    uint64_t v38 = v64;
    uint64_t v40 = v61;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v32, v34, v29);
    uint64_t v41 = v62;
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v62) == 1)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v55, v20);
      uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
      v42(v34, v29);
      return ((uint64_t (*)(char *, uint64_t))v42)(v32, v29);
    }
    else
    {
      uint64_t v65 = v34;
      uint64_t v66 = v29;
      uint64_t v43 = v60;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v60, v32, v41);
      uint64_t v44 = v40;
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
      uint64_t v46 = v55;
      v45(v26, v55, v20);
      int64_t v47 = v68;
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v68) == 1)
      {
        (*(void (**)(char *, uint64_t))(v63 + 8))(v43, v41);
        int64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
        v48(v46, v20);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
        return ((uint64_t (*)(char *, uint64_t))v48)(v26, v20);
      }
      else
      {
        uint64_t v53 = a10;
        uint64_t v54 = v20;
        uint64_t v49 = v59;
        unint64_t v50 = v57;
        (*(void (**)(char *, char *, uint64_t (*)(char *, char *, uint64_t, uint64_t)))(v59 + 32))(v57, v26, v47);
        uint64_t v51 = v63;
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v56, v43, v41);
        uint64_t v52 = (uint64_t)v67;
        (*(void (**)(char *, char *, uint64_t (*)(char *, char *, uint64_t, uint64_t)))(v49 + 16))(v67, v50, v47);
        __swift_storeEnumTagSinglePayload(v52, 0, 1, (uint64_t)v47);
        sub_191EE7F20();
        sub_191EE7F40();
        (*(void (**)(char *, uint64_t (*)(char *, char *, uint64_t, uint64_t)))(v49 + 8))(v50, v47);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v41);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v55, v54);
        return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v65, v66);
      }
    }
  }
  return result;
}

uint64_t Dictionary.mapKeysAndValues<A, B>(_:)()
{
  return sub_191E0F170();
}

uint64_t sub_191E0F170()
{
  sub_191EE7D90();
  sub_191EE7F20();
  sub_191EE7F20();
  swift_getWitnessTable();
  uint64_t result = sub_191EE8430();
  if (!v1) {
    return v2;
  }
  return result;
}

uint64_t sub_191E0F280(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a3;
  uint64_t v33 = a1;
  uint64_t v13 = sub_191EE8DF0();
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v32 = *(void *)(a8 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a7;
  uint64_t v31 = *(void *)(a7 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v30 - v23;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v26 = v36;
  uint64_t result = v35(v24, v19, a2, a2 + *(int *)(TupleTypeMetadata2 + 48));
  if (!v26)
  {
    uint64_t v36 = a10;
    uint64_t v28 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v22, v24, v34);
    uint64_t v29 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v16, v19, a8);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, a8);
    sub_191EE7F20();
    sub_191EE7F40();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v19, a8);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v24, v34);
  }
  return result;
}

void Dictionary.subscript.getter()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v56 = v6;
  uint64_t v8 = v7;
  uint64_t v53 = OUTLINED_FUNCTION_10_15();
  OUTLINED_FUNCTION_1_2();
  uint64_t v46 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_7_14();
  uint64_t v52 = v11 - v12;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_15_11();
  uint64_t v54 = v14;
  OUTLINED_FUNCTION_1_2();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_5_22(v18, v45);
  OUTLINED_FUNCTION_1_2();
  uint64_t v20 = v19;
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v51 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v45 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v45 - v28;
  uint64_t v57 = v1;
  v60[1] = sub_191EE7D90();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v30 = sub_191EE8530();
  v60[0] = v30;
  OUTLINED_FUNCTION_9_10();
  if (v30 == v31)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36();
    return;
  }
  uint64_t v58 = (void (**)(char *, uint64_t *, uint64_t))(v20 + 16);
  uint64_t v32 = v16;
  uint64_t v33 = (void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v48 = v32 + 16;
  uint64_t v49 = v32 + 32;
  uint64_t v47 = v32 + 8;
  uint64_t v55 = v20 + 8;
  uint64_t v45 = v22;
  v46 += 8;
  uint64_t v34 = v54;
  uint64_t v50 = v20;
  while (1)
  {
    char v35 = sub_191EE85E0();
    sub_191EE8570();
    if ((v35 & 1) == 0) {
      break;
    }
    uint64_t v36 = *(void (**)(char *, uint64_t *, uint64_t))(v20 + 16);
    v36(v29, (uint64_t *)(v8+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v30), v5);
LABEL_6:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    MEMORY[0x192FE7830](v60, v8, v5);
    swift_bridgeObjectRelease();
    (*v33)(v27, v29, v5);
    MEMORY[0x192FE70E0](v27, v56, v5, v3, v57);
    if (__swift_getEnumTagSinglePayload(v34, 1, v3) == 1)
    {
      OUTLINED_FUNCTION_13_12();
      OUTLINED_FUNCTION_33();
      v37();
    }
    else
    {
      OUTLINED_FUNCTION_15();
      v38();
      v36(v51, (uint64_t *)v27, v5);
      uint64_t v39 = v52;
      OUTLINED_FUNCTION_1_35();
      v40();
      __swift_storeEnumTagSinglePayload(v39, 0, 1, v3);
      sub_191EE7F20();
      uint64_t v34 = v54;
      sub_191EE7F40();
      uint64_t v20 = v50;
      OUTLINED_FUNCTION_33();
      v41();
      OUTLINED_FUNCTION_13_12();
    }
    OUTLINED_FUNCTION_33();
    v42();
    uint64_t v30 = v60[0];
    OUTLINED_FUNCTION_9_10();
    if (v30 == v43) {
      goto LABEL_2;
    }
  }
  uint64_t v44 = sub_191EE91C0();
  if (v45 == 8)
  {
    uint64_t v59 = v44;
    uint64_t v36 = *v58;
    (*v58)(v29, &v59, v5);
    swift_unknownObjectRelease();
    goto LABEL_6;
  }
  __break(1u);
}

Swift::String_optional __swiftcall Dictionary.jsonRepresentation(options:)(NSJSONWritingOptions options)
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_191EE8190();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_191EE7DE0();
  v17[0] = 0;
  id v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, options, v17);

  id v6 = v17[0];
  if (v5)
  {
    uint64_t v7 = sub_191EE7500();
    unint64_t v9 = v8;

    sub_191EE8170();
    uint64_t v10 = sub_191EE8130();
    id v5 = v11;
    sub_191D76D1C(v7, v9);
  }
  else
  {
    uint64_t v12 = v6;
    uint64_t v13 = (void *)sub_191EE7300();

    swift_willThrow();
    uint64_t v10 = 0;
  }
  uint64_t v14 = v10;
  uint64_t v15 = v5;
  result.value._unint64_t object = v15;
  result.value._uint64_t countAndFlagsBits = v14;
  return result;
}

uint64_t sub_191E0FB04(uint64_t a1, uint64_t a2)
{
  return sub_191E0FB5C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_191E0EBC0);
}

uint64_t sub_191E0FB30(uint64_t a1, uint64_t a2)
{
  return sub_191E0FB5C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_191E0F280);
}

uint64_t sub_191E0FB5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t ScenePhaseManager.insertObserver(_:before:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  id v5 = (void *)(v3 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(v3 + 16);
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_unknownObjectRetain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v7) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return ScenePhaseManager.addObserver(_:)(a1, a3);
  }
LABEL_17:
  swift_unknownObjectRetain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v7 = sub_191EE94B0();
  if (!v7) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v8 = 0;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x192FE8380](v8, v6);
    }
    else
    {
      uint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
      swift_retain();
    }
    uint64_t v10 = MEMORY[0x192FE9B40](v9 + 16);
    swift_release();
    if (v10)
    {
      swift_unknownObjectRelease();
      if (v10 == a2) {
        break;
      }
    }
    uint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    ++v8;
    if (v11 == v7) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v13 = _s13TeaFoundation18DisposableObserverCMa_0();
  swift_allocObject();
  uint64_t v14 = swift_unknownObjectRetain();
  uint64_t v15 = (void (*)(void))sub_191D5FD58(v14, a1);
  swift_beginAccess();
  if (*v5 >> 62)
  {
    swift_retain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v16 = sub_191EE94B0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_retain();
  }
  if (v16 < v8)
  {
    __break(1u);
  }
  else
  {
    sub_191DF32CC(v8, v8, v15);
    uint64_t result = swift_endAccess();
    a3[3] = v13;
    a3[4] = (uint64_t)&off_1EE2B47E0;
    *a3 = (uint64_t)v15;
  }
  return result;
}

uint64_t ScenePhaseManager.removeObserver(_:)(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  for (; v4; uint64_t v4 = sub_191EE94B0())
  {
    for (unint64_t i = 0; ; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x192FE8380](i, v3);
      }
      else
      {
        uint64_t v6 = *(void *)(v3 + 8 * i + 32);
        swift_retain();
      }
      unint64_t v7 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      uint64_t v8 = MEMORY[0x192FE9B40](v6 + 16);
      if (v8)
      {
        uint64_t v9 = v8;
        swift_unknownObjectRelease();
        if (v9 == a1)
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_191DEA3FC(i);
          swift_endAccess();
          swift_release();
          return swift_release();
        }
      }
      swift_release();
      if (v7 == v4) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_14:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t ScenePhaseManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ScenePhaseManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_191E0FF84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return ScenePhaseManager.insertObserver(_:before:)(a1, a2, a3);
}

uint64_t sub_191E0FFA8(uint64_t a1)
{
  return ScenePhaseManager.removeObserver(_:)(a1);
}

BOOL static ScenePhase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ScenePhase.hash(into:)()
{
  return sub_191EE9A80();
}

uint64_t ScenePhase.hashValue.getter()
{
  return sub_191EE9A90();
}

unint64_t sub_191E10064()
{
  unint64_t result = qword_1E92F3B40;
  if (!qword_1E92F3B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3B40);
  }
  return result;
}

uint64_t dispatch thunk of ScenePhaseManagerType.insertObserver(_:before:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of ScenePhaseManagerType.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for ScenePhaseManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScenePhaseManager);
}

unsigned char *storeEnumTagSinglePayload for ScenePhase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E101BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HttpMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E102B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HttpMethod()
{
  return &type metadata for HttpMethod;
}

unint64_t sub_191E102EC()
{
  unint64_t result = qword_1E92F3B48[0];
  if (!qword_1E92F3B48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92F3B48);
  }
  return result;
}

void sub_191E1033C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_191EE9A70();
    sub_191EE8200();
    uint64_t v6 = sub_191EE9A90();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v8 = v6 & ~v7;
    OUTLINED_FUNCTION_2_37();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_191EE9770() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        OUTLINED_FUNCTION_2_37();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_191EE9770()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            OUTLINED_FUNCTION_2_37();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_191E10450(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v4 = sub_191EE9A60() & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0
      && *(void *)(*(void *)(a2 + 48) + 8 * v4) != a1)
    {
      OUTLINED_FUNCTION_3_25();
      if (v7)
      {
        do
        {
          if (*(void *)(v5 + 8 * v6) == a1) {
            break;
          }
          OUTLINED_FUNCTION_3_25();
        }
        while ((v8 & 1) != 0);
      }
    }
  }
}

uint64_t sub_191E104F4(uint64_t a1, uint64_t a2)
{
  sub_191E10CA8(a1, (uint64_t)v54);
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v50 = v54[1];
  uint64_t v51 = v54[0];
  uint64_t v48 = v54[3];
  uint64_t v49 = v54[2];
  uint64_t v47 = v54[4];
  sub_191EE9A70();
  uint64_t v4 = sub_191E10CA8(a1, (uint64_t)&v61);
  if (v62 == 2 || v62 == 1)
  {
    OUTLINED_FUNCTION_5_23(v4, v5, v6, v7, v8, v9, v10, v11, v45, v46, v47, v48, v49, v50, v51, v52);
  }
  else if (v62)
  {
    sub_191EE8200();
  }
  sub_191EE8200();
  uint64_t v12 = sub_191EE9A90();
  uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v14 = v12 & ~v13;
  if (((*(void *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
    return 0;
  }
  uint64_t v15 = ~v13;
  while (1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a2 + 48) + 40 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    switch(v18)
    {
      case 0:
        sub_191E10CA8(a1, (uint64_t)v55);
        if (!v56) {
          goto LABEL_32;
        }
        goto LABEL_18;
      case 1:
        sub_191E10CA8(a1, (uint64_t)v57);
        if (v58 == 1) {
          goto LABEL_32;
        }
        goto LABEL_18;
      case 2:
        sub_191E10CA8(a1, (uint64_t)v59);
        if (v60 == 2) {
          goto LABEL_32;
        }
LABEL_18:
        sub_191E10D04(a1);
LABEL_21:
        uint64_t v19 = OUTLINED_FUNCTION_1_36();
        OUTLINED_FUNCTION_4_21(v19, v20, v21, v22, v23, v24, v25, v26, v45, v46, v47, v48, v49, v50, v51);
        goto LABEL_22;
    }
    sub_191E10CA8(a1, (uint64_t)&v52);
    if (v53 < 3)
    {
      sub_191E10D04(a1);
      OUTLINED_FUNCTION_0_31();
      goto LABEL_21;
    }
    if (v17 == v52 && v18 == v53) {
      break;
    }
    HIDWORD(v46) = sub_191EE9770();
    sub_191E10D04(a1);
    OUTLINED_FUNCTION_0_31();
    uint64_t v28 = OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_4_21(v28, v29, v30, v31, v32, v33, v34, v35, v45, v46, v47, v48, v49, v50, v51);
    if ((v46 & 0x100000000) != 0) {
      return 1;
    }
LABEL_22:
    unint64_t v14 = (v14 + 1) & v15;
    if (((*(void *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
      return 0;
    }
  }
  sub_191E10D04(a1);
  OUTLINED_FUNCTION_0_31();
LABEL_32:
  uint64_t v37 = OUTLINED_FUNCTION_1_36();
  OUTLINED_FUNCTION_4_21(v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51);
  return 1;
}

Swift::Bool __swiftcall Quantifier.matches(_:)(Swift::Int a1)
{
  Swift::Int v2 = *(void *)v1;
  switch(*(unsigned char *)(v1 + 16))
  {
    case 1:
      BOOL v5 = v2 < a1;
      goto LABEL_7;
    case 2:
      BOOL v5 = v2 > a1 || *(void *)(v1 + 8) < a1;
LABEL_7:
      char v4 = !v5;
      break;
    case 3:
      BOOL v6 = v2 == a1;
LABEL_11:
      char v4 = v6;
      break;
    case 4:
      sub_191E10450(a1, v2);
      break;
    case 5:
      char v4 = 1;
      switch(v2)
      {
        case 1:
          char v4 = a1 > 0;
          break;
        case 2:
          char v4 = a1 < 1;
          break;
        case 3:
          char v4 = a1 & 1;
          break;
        case 4:
          BOOL v6 = (a1 & 1) == 0;
          goto LABEL_11;
        default:
          return v4 & 1;
      }
      break;
    default:
      char v4 = v2 <= a1;
      break;
  }
  return v4 & 1;
}

uint64_t Quantifier.description.getter()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v1 = 0x2074736F6D207461;
      goto LABEL_6;
    case 2:
      sub_191EE9190();
      swift_bridgeObjectRelease();
      strcpy((char *)v4, "anywhere from ");
      HIBYTE(v4[1]) = -18;
      sub_191EE9620();
      sub_191EE8280();
      swift_bridgeObjectRelease();
      sub_191EE8280();
      goto LABEL_8;
    case 3:
      uint64_t v1 = 0x20796C7463617865;
LABEL_6:
      unint64_t v2 = 0xE800000000000000;
      goto LABEL_7;
    case 4:
      strcpy((char *)v4, "one of ");
      v4[1] = 0xE700000000000000;
      sub_191EE88E0();
      goto LABEL_9;
    case 5:
      uint64_t result = 7958113;
      switch(*(void *)v0)
      {
        case 1:
          uint64_t result = 1701670771;
          break;
        case 2:
          uint64_t result = 1701736302;
          break;
        case 3:
          uint64_t result = 6579311;
          break;
        case 4:
          uint64_t result = 1852143205;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v1 = 0x747361656C207461;
      unint64_t v2 = 0xE900000000000020;
LABEL_7:
      v4[0] = v1;
      v4[1] = v2;
LABEL_8:
      sub_191EE9620();
LABEL_9:
      sub_191EE8280();
      swift_bridgeObjectRelease();
      return v4[0];
  }
}

uint64_t destroy for Quantifier(uint64_t a1)
{
  return sub_191DF9464(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s13TeaFoundation10QuantifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_191DF8D28(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Quantifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_191DF8D28(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_191DF9464(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Quantifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_191DF9464(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Quantifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFB && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 5) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Quantifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191E10C68(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_191E10C80(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)uint64_t result = a2 - 5;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Quantifier()
{
  return &type metadata for Quantifier;
}

uint64_t sub_191E10CA8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191E10D04(uint64_t a1)
{
  return a1;
}

uint64_t sub_191E10D38()
{
  return sub_191EE9A80();
}

uint64_t sub_191E10D60()
{
  return sub_191EE9A90();
}

uint64_t sub_191E10DAC()
{
  return sub_191EE9A90();
}

uint64_t Result.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  (*(void (**)(uint64_t))(v8 + 16))(v6 - v5);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return swift_willThrow();
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a2, v7);
  }
}

uint64_t Result.valueOrNil()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_1_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  (*(void (**)(uint64_t))(v5 + 16))(v8 - v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, a1);
    uint64_t v10 = *(void *)(a1 + 16);
    uint64_t v11 = a2;
    uint64_t v12 = 1;
  }
  else
  {
    uint64_t v13 = *(void *)(a1 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a2, v9, v13);
    uint64_t v11 = a2;
    uint64_t v12 = 0;
    uint64_t v10 = v13;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v10);
}

uint64_t Result.init(value:error:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  id v34 = a2;
  uint64_t v7 = type metadata accessor for Result();
  OUTLINED_FUNCTION_1_2();
  uint64_t v33 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v33 - v10);
  uint64_t v12 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v33 - v16;
  OUTLINED_FUNCTION_1_2();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_2();
  uint64_t v23 = (char *)(v22 - v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, a3) != 1)
  {

    uint64_t v27 = OUTLINED_FUNCTION_1_37();
    v28(v27);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v29(v23, v17, a3);
    v29(a4, v23, a3);
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v17, v12);
  id v25 = v34;
  if (v34)
  {
    uint64_t v26 = OUTLINED_FUNCTION_1_37();
    ((void (*)(uint64_t))v24)(v26);
    *(void *)a4 = v25;
    return swift_storeEnumTagMultiPayload();
  }
  type metadata accessor for Result.Errors();
  swift_getWitnessTable();
  uint64_t v31 = swift_allocError();
  uint64_t v32 = OUTLINED_FUNCTION_1_37();
  ((void (*)(uint64_t))v24)(v32);
  *uint64_t v11 = v31;
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v33 + 32))(a4, v11, v7);
}

uint64_t type metadata accessor for Result.Errors()
{
  return __swift_instantiateGenericMetadata();
}

char *sub_191E11294(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  unsigned int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)unsigned int v3 = *(void *)a2;
    unsigned int v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)unsigned int v3 = v14;
      v3[v5] = 1;
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(a1);
      v3[v5] = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_191E11444(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void **)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      char v20 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v20 = 0;
    }
    a1[v7] = v20;
  }
  return a1;
}

void *sub_191E11664(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_191E1179C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_191E119B4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_191E11AE8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x191E11CACLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_191E11CD4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t sub_191E11D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

unsigned char *sub_191E11D94(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191E11E30);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191E11E58()
{
  return swift_getWitnessTable();
}

void sub_191E11E74()
{
}

uint64_t sub_191E11ED0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  int v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, (uint64_t)v0 + qword_1EB513368, v2);
  uint64_t v9 = v0[2];
  uint64_t v8 = v0[3];
  int v10 = (void *)swift_allocObject();
  v10[2] = *(void *)(v1 + 112);
  v10[3] = v9;
  __n128 v10[4] = v8;
  sub_191E12580();
  uint64_t v11 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11 + qword_1EB513368, v7, v2);
  *(void *)(v11 + 16) = sub_191E12574;
  *(void *)(v11 + 24) = v10;
  swift_retain();
  return v11;
}

uint64_t sub_191E1201C(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 - 8);
  uint64_t v9 = (void *)MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = *v9;
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a3(v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, a5);
}

uint64_t sub_191E12120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CallbackDefinition();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, (uint64_t)v2 + qword_1EB513368, v5);
  uint64_t v12 = v2[2];
  uint64_t v11 = v2[3];
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = *(void *)(v4 + 112);
  v13[3] = a2;
  v13[4] = v12;
  v13[5] = v11;
  uint64_t v14 = sub_191D7B1E0((uint64_t)v10, (uint64_t)sub_191E12530, (uint64_t)v13);
  swift_retain();
  return v14;
}

uint64_t sub_191E1224C(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_dynamicCast();
  a3(v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, a5);
}

uint64_t sub_191E123D0()
{
  swift_release();
  uint64_t v1 = v0 + qword_1EB513368;
  sub_191EE7690();
  OUTLINED_FUNCTION_26();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);

  return v4(v1, v2);
}

uint64_t sub_191E1243C()
{
  swift_release();
  uint64_t v1 = v0 + qword_1EB513368;
  sub_191EE7690();
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t sub_191E124A0()
{
  sub_191E1243C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_191E124F8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191E12530(uint64_t a1, uint64_t a2)
{
  return sub_191E1224C(a1, a2, *(void (**)(char *, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16));
}

uint64_t sub_191E1253C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E12574(uint64_t a1, uint64_t a2)
{
  return sub_191E1201C(a1, a2, *(void (**)(char *, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 16));
}

void sub_191E12580()
{
  if (!qword_1EB50D560)
  {
    unint64_t v0 = type metadata accessor for CallbackDefinition();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50D560);
    }
  }
}

void sub_191E125D0()
{
}

uint64_t BaseDefinition.deinit()
{
  return v0;
}

uint64_t BaseDefinition.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t Definition.key.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 16) = v2;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_191E12658(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(unsigned char *)(v10 + 40) = 1;
  sub_191E13AB4();
  sub_191D6C3EC();
  swift_retain();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  *(void *)(v10 + 64) = sub_191EE7E50();
  *(_OWORD *)(v10 + 72) = 0u;
  *(_OWORD *)(v10 + 88) = 0u;
  *(void *)(v10 + 104) = 0;
  uint64_t v16 = (void *)(v10 + qword_1EB513378);
  *(void *)(v10 + qword_1EB513378) = v15;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(unsigned char *)(v10 + 40) = a4;
  swift_beginAccess();
  *uint64_t v16 = a6;
  swift_bridgeObjectRelease();
  uint64_t v17 = v10 + qword_1EB513370;
  uint64_t v18 = sub_191EE7690();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, a7, v18);
  *(void *)(v10 + 48) = a8;
  *(void *)(v10 + 56) = a9;
  swift_retain();
  uint64_t v20 = sub_191E1283C(a10);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a7, v18);
  sub_191D5DBE0(a5);
  swift_beginAccess();
  *(void *)(v10 + 64) = v20;
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_191E1283C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_191E13B94();
    uint64_t v2 = sub_191EE94D0();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = a1 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = v2 + 64;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    char v25 = *(unsigned char *)(*(void *)(a1 + 48) + v11);
    sub_191E13A50();
    sub_191E13AB4();
    swift_retain();
    swift_dynamicCast();
    sub_191EE9A70();
    sub_191EE8200();
    swift_bridgeObjectRelease();
    uint64_t result = sub_191EE9A90();
    uint64_t v16 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v7 + 8 * (v17 >> 6))) == 0)
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v16) >> 6;
      while (++v18 != v21 || (v20 & 1) == 0)
      {
        BOOL v22 = v18 == v21;
        if (v18 == v21) {
          unint64_t v18 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v7 + 8 * v18);
        if (v23 != -1)
        {
          unint64_t v19 = __clz(__rbit64(~v23)) + (v18 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v7 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v7 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(unsigned char *)(*(void *)(v2 + 48) + v19) = v25;
    *(_OWORD *)(*(void *)(v2 + 56) + 16 * v19) = v26;
    ++*(void *)(v2 + 16);
    if (v6) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_38;
    }
    if (v12 >= v24) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    int64_t v14 = v9 + 1;
    if (!v13)
    {
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v24) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v9 + 3;
        if (v9 + 3 >= v24) {
          goto LABEL_36;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 4;
          if (v9 + 4 >= v24) {
            goto LABEL_36;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v9 = v14;
  }
  int64_t v15 = v9 + 5;
  if (v9 + 5 >= v24)
  {
LABEL_36:
    swift_release();
    sub_191D8CCD4();
    return v2;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v24) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_191E12BC0()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = *v0;
  uint64_t v2 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = v0[4];
  uint64_t v17 = v0[3];
  uint64_t v18 = v0[2];
  char v10 = *((unsigned char *)v0 + 40);
  swift_beginAccess();
  sub_191E1398C((uint64_t)(v0 + 9), (uint64_t)v19);
  unint64_t v11 = (uint64_t *)((char *)v0 + qword_1EB513378);
  swift_beginAccess();
  uint64_t v12 = *v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v8, (uint64_t)v0 + qword_1EB513370, v2);
  uint64_t v13 = v0[6];
  uint64_t v14 = v0[7];
  int64_t v15 = (void *)swift_allocObject();
  void v15[2] = *(void *)(v1 + 96);
  v15[3] = v13;
  uint64_t v15[4] = v14;
  swift_beginAccess();
  sub_191EE8DF0();
  sub_191D6D890(255, qword_1EB50EA48);
  OUTLINED_FUNCTION_2_38();
  swift_getFunctionTypeMetadata1();
  sub_191E13A50();
  sub_191D6C3EC();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v16 = Dictionary.mapKeysAndValues<A, B>(_:)();
  swift_bridgeObjectRelease();
  sub_191E13B40(0, &qword_1EB50D7E0, (uint64_t (*)(void, uint64_t))type metadata accessor for Definition);
  swift_allocObject();
  sub_191E12658(v18, v17, v9, v10, (uint64_t)v19, v12, v8, (uint64_t)sub_191E13A28, (uint64_t)v15, v16);
  OUTLINED_FUNCTION_36();
}

uint64_t sub_191E12E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9(v6);
  uint64_t v10 = sub_191EE9750();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
  *a3 = v10;
  return result;
}

uint64_t sub_191E12F18(unsigned char *a1, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>), unsigned char *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8 = *a4;
  uint64_t v7 = a4[1];
  *a1 = *a3;
  uint64_t v9 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))swift_allocObject();
  *((void *)v9 + 2) = a5;
  *((void *)v9 + 3) = v8;
  *((void *)v9 + 4) = v7;
  *a2 = sub_191E13C00;
  a2[1] = v9;
  return swift_retain();
}

uint64_t sub_191E12F98@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_191EE8DF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  a2(a1);
  uint64_t v10 = sub_191EE8DE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v10;
  return result;
}

uint64_t sub_191E13094()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_191D5DBE0(v0 + 72);
  uint64_t v1 = v0 + qword_1EB513370;
  sub_191EE7690();
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t))(v2 + 8))(v1);

  return swift_bridgeObjectRelease();
}

void Definition.whenResolving<A, B>(_:scope:castAs:callback:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = v0;
  uint64_t v14 = v2;
  uint64_t v4 = v3;
  sub_191EE7690();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_6_13();
  uint64_t v7 = *(void *)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  LOBYTE(v4) = *(unsigned char *)(v4 + 16);
  toKey<A>(type:name:)(v1, 0, 0, v1, &v15);
  type metadata accessor for CallbackInstanceDefinition();
  uint64_t v8 = OUTLINED_FUNCTION_7_15();
  v9(v8);
  OUTLINED_FUNCTION_15_12();
  sub_191E13280(v7, v6, v4);
  swift_retain();
  OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_1_38();
  swift_retain();
  sub_191D938FC();
  uint64_t v10 = sub_191D93CD4(*(void *)(*(void *)v14 + 16));
  OUTLINED_FUNCTION_13_13(v10, v11, v12, v13, (uint64_t)&off_1EE2B5CB0);
  swift_endAccess();
  swift_release();
  swift_retain();
  OUTLINED_FUNCTION_36();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void v32[2];
  unsigned __int8 v33;
  uint64_t v34;

  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  uint64_t v9 = v8;
  uint64_t v31 = v10;
  uint64_t v28 = *v0;
  uint64_t v11 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = *(void *)v9;
  unint64_t v19 = *(void *)(v9 + 8);
  char v20 = *(unsigned char *)(v9 + 16);
  toKey<A>(type:name:)();
  uint64_t v27 = type metadata accessor for CallbackInstanceDefinition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v17, (uint64_t)v1 + qword_1EB513370, v11);
  v32[0] = v18;
  v32[1] = v19;
  uint64_t v33 = v20;
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = *(void *)(v28 + 96);
  v21[3] = v5;
  void v21[4] = v3;
  v21[5] = v29;
  v21[6] = v30;
  sub_191E13280(v18, v19, v20);
  swift_retain();
  BOOL v22 = sub_191E71DB4(v17, v31, (uint64_t)&v34, (uint64_t)v32, (uint64_t)sub_191E1388C, (uint64_t)v21);
  OUTLINED_FUNCTION_1_38();
  swift_retain();
  sub_191D938FC();
  uint64_t v23 = sub_191D93CD4(*(void *)(*(void *)v27 + 16));
  v32[0] = v22;
  OUTLINED_FUNCTION_12_13(v23, v24, v25, v26, (uint64_t)&off_1EE2B5CB0);
  swift_endAccess();
  swift_release();
  swift_retain();
  OUTLINED_FUNCTION_36();
}

uint64_t sub_191E13280(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

void Definition<A>.whenResolving<A>(_:scope:callback:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v17 = v0;
  uint64_t v2 = v1;
  sub_191EE7690();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_6_13();
  uint64_t v5 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  LOBYTE(v2) = *(unsigned char *)(v2 + 16);
  uint64_t v6 = OUTLINED_FUNCTION_8_15();
  toKey<A>(type:name:)(v6, v7, v8, v9, v10);
  type metadata accessor for CallbackInstanceDefinition();
  uint64_t v11 = OUTLINED_FUNCTION_7_15();
  v12(v11);
  OUTLINED_FUNCTION_15_12();
  sub_191E13280(v5, v4, v2);
  swift_retain();
  OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_1_38();
  swift_retain();
  sub_191D938FC();
  uint64_t v13 = sub_191D93CD4(*(void *)(*(void *)v17 + 16));
  OUTLINED_FUNCTION_13_13(v13, v14, v15, v16, (uint64_t)&off_1EE2B5CB0);
  swift_endAccess();
  swift_release();
  swift_retain();
  OUTLINED_FUNCTION_36();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void v31[2];
  unsigned __int8 v32;
  uint64_t v33;

  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  uint64_t v7 = v6;
  uint64_t v30 = v8;
  uint64_t v9 = *v0;
  uint64_t v10 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_2();
  uint64_t v16 = v15 - v14;
  uint64_t v18 = *(void *)v7;
  uint64_t v17 = *(void *)(v7 + 8);
  unint64_t v19 = *(unsigned char *)(v7 + 16);
  OUTLINED_FUNCTION_8_15();
  toKey<A>(type:name:)();
  char v20 = *(void *)(v9 + 96);
  uint64_t v27 = type metadata accessor for CallbackInstanceDefinition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v16, (uint64_t)v1 + qword_1EB513370, v10);
  v31[0] = v18;
  v31[1] = v17;
  uint64_t v32 = v19;
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  v21[3] = v3;
  void v21[4] = v28;
  v21[5] = v29;
  sub_191E13280(v18, v17, v19);
  swift_retain();
  BOOL v22 = sub_191E71DB4(v16, v30, (uint64_t)&v33, (uint64_t)v31, (uint64_t)sub_191E138F0, (uint64_t)v21);
  OUTLINED_FUNCTION_1_38();
  swift_retain();
  sub_191D938FC();
  uint64_t v23 = sub_191D93CD4(*(void *)(*(void *)v27 + 16));
  v31[0] = v22;
  OUTLINED_FUNCTION_12_13(v23, v24, v25, v26, (uint64_t)&off_1EE2B5CB0);
  swift_endAccess();
  swift_release();
  swift_retain();
  OUTLINED_FUNCTION_36();
}

uint64_t sub_191E137BC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_191D6DE58(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_191E13854()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_191E1388C(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 40))(a1, *a2);
}

uint64_t sub_191E138B8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191E138F0(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 32))(a1, *a2);
}

uint64_t method lookup function for BaseDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseDefinition);
}

uint64_t method lookup function for Definition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Definition);
}

uint64_t sub_191E1394C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E1398C(uint64_t a1, uint64_t a2)
{
  sub_191D6C75C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191E139F0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E13A28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_191E12E38(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_191E13A34(unsigned char *a1, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>), unsigned char *a3, uint64_t *a4)
{
  return sub_191E12F18(a1, a2, a3, a4, *(void *)(v4 + 16));
}

unint64_t sub_191E13A50()
{
  unint64_t result = qword_1EB50CAE8;
  if (!qword_1EB50CAE8)
  {
    sub_191D6D890(255, qword_1EB50EA48);
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EB50CAE8);
  }
  return result;
}

unint64_t sub_191E13AB4()
{
  unint64_t result = qword_1EB50D860;
  if (!qword_1EB50D860)
  {
    sub_191E13B40(255, qword_1EB50D868, MEMORY[0x1E4FBB718]);
    sub_191D6D890(255, qword_1EB50EA48);
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EB50D860);
  }
  return result;
}

void sub_191E13B40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC838] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_191E13B94()
{
  if (!qword_1E92F3BD0)
  {
    sub_191E13AB4();
    sub_191D6C3EC();
    unint64_t v0 = sub_191EE94E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F3BD0);
    }
  }
}

uint64_t sub_191E13C00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_191E12F98(a1, *(void (**)(uint64_t))(v2 + 24), a2);
}

uint64_t sub_191E13C10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_191D6382C();
    uint64_t v2 = v13;
    uint64_t v4 = *(void *)(sub_191EE73F0() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_191EE7320();
      uint64_t v9 = v8;
      unint64_t v10 = *(void *)(v13 + 16);
      if (v10 >= *(void *)(v13 + 24) >> 1) {
        sub_191D6382C();
      }
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_191E13D48()
{
  OUTLINED_FUNCTION_11_12();
  uint64_t v2 = OUTLINED_FUNCTION_11_3();
  uint64_t v3 = OUTLINED_FUNCTION_47(v2);
  sub_191E1AABC(0, &qword_1EB508A28, (uint64_t (*)(uint64_t))sub_191DA5E5C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_191E1A770(v3, v1, (void (*)(uint64_t, uint64_t))sub_191DB6734);
  return v0;
}

uint64_t sub_191E13DF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v6 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v4 = UnfairLock.init(options:)((int *)&v6);
  sub_191E1AABC(0, &qword_1EB508A20, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(void *)(v2 + 16) = sub_191E1A600(v4, a1);
  return v2;
}

uint64_t sub_191E13EB4()
{
  OUTLINED_FUNCTION_11_12();
  uint64_t v2 = OUTLINED_FUNCTION_11_3();
  uint64_t v3 = OUTLINED_FUNCTION_47(v2);
  sub_191D65B08(0, &qword_1EB50B5C8, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_191E1A770(v3, v1, (void (*)(uint64_t, uint64_t))sub_191D74368);
  return v0;
}

uint64_t sub_191E13F58(uint64_t a1)
{
  return sub_191E13F88(a1, &qword_1EB50B5D0, &qword_1EB50B5F0, (uint64_t)&type metadata for BackgroundFetchResult, (void (*)(uint64_t, uint64_t))sub_191E1C2BC);
}

uint64_t sub_191E13F88(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v10 = v5;
  type metadata accessor for UnfairLock();
  uint64_t v12 = OUTLINED_FUNCTION_11_3();
  uint64_t v13 = OUTLINED_FUNCTION_47(v12);
  sub_191E1ABC8(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(void *)(v10 + 16) = sub_191E1A770(v13, a1, a5);
  return v10;
}

uint64_t sub_191E14048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191E1AABC(0, &qword_1EB5087B0, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  swift_allocObject();
  swift_retain();
  sub_191DCB3A4();
  uint64_t v7 = v6;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v7;
  swift_retain_n();
  swift_retain();
  uint64_t v9 = (void (*)(uint64_t))sub_191DBD9E0(a1, sub_191E1C2F8, v7, sub_191E1C09C, v7, sub_191E1C0A4, v8);
  swift_release_n();
  uint64_t v10 = swift_release();
  v9(v10);
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(v7 + 16);
  if (v12)
  {
    swift_retain();
    swift_release();
    swift_release();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_191E141D8()
{
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_1_7();
  sub_191E1AABC(0, &qword_1EB5087B8, (uint64_t (*)(uint64_t))sub_191DA5E5C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_33_0();
  sub_191DCB27C();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_2_8(v3);
  uint64_t v4 = swift_retain();
  OUTLINED_FUNCTION_41_0(v4, (uint64_t)sub_191E1C2F0, v5, (uint64_t)sub_191E1BA80, v6, (uint64_t)sub_191E1BA88);
  OUTLINED_FUNCTION_7_4();
  uint64_t v7 = swift_release();
  v0(v7);
  OUTLINED_FUNCTION_6();
  if (*(void *)(v2 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_16_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_191E142E8()
{
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_1_7();
  sub_191E1AABC(0, &qword_1EB5087B8, (uint64_t (*)(uint64_t))sub_191DA5E5C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_33_0();
  sub_191DCB27C();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_2_8(v3);
  swift_retain();
  uint64_t v4 = OUTLINED_FUNCTION_11();
  sub_191DBDF6C(v4);
  OUTLINED_FUNCTION_7_4();
  uint64_t v5 = swift_release();
  v0(v5);
  OUTLINED_FUNCTION_6();
  if (*(void *)(v2 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_16_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_191E143FC()
{
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_1_7();
  sub_191E1AABC(0, &qword_1E92F29D0, (uint64_t (*)(uint64_t))sub_191DCFFB8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_33_0();
  sub_191DCB4D4();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_2_8(v3);
  uint64_t v4 = swift_retain();
  OUTLINED_FUNCTION_41_0(v4, (uint64_t)sub_191E1C2F4, v5, (uint64_t)sub_191E1BA98, v6, (uint64_t)sub_191E1BAA0);
  OUTLINED_FUNCTION_7_4();
  uint64_t v7 = swift_release();
  v0(v7);
  OUTLINED_FUNCTION_6();
  if (*(void *)(v2 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_16_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_191E1450C()
{
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_1_7();
  sub_191E1AABC(0, &qword_1E92F29C0, MEMORY[0x1E4F26C48], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_33_0();
  sub_191DCB738();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_2_8(v3);
  swift_retain();
  uint64_t v4 = OUTLINED_FUNCTION_11();
  sub_191DBE434(v4);
  OUTLINED_FUNCTION_7_4();
  uint64_t v5 = swift_release();
  v0(v5);
  OUTLINED_FUNCTION_6();
  if (*(void *)(v2 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_16_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_191E14620()
{
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_1_7();
  sub_191D65B08(0, &qword_1E92F29C8, (uint64_t)&type metadata for AuthTokenResponse, (uint64_t (*)(void, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_33_0();
  sub_191DCB604();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_2_8(v3);
  swift_retain();
  OUTLINED_FUNCTION_11();
  sub_191DBE220();
  OUTLINED_FUNCTION_7_4();
  uint64_t v4 = swift_release();
  v0(v4);
  OUTLINED_FUNCTION_6();
  if (*(void *)(v2 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_16_1();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_191E14728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191E1AABC(0, &qword_1EB5087B8, (uint64_t (*)(uint64_t))sub_191DA5E5C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  swift_allocObject();
  swift_retain();
  sub_191DCB27C();
  uint64_t v7 = v6;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v7;
  swift_retain_n();
  swift_retain();
  uint64_t v9 = (void (*)(uint64_t))sub_191DBE60C(a1, sub_191E1C2F0, v7, sub_191E1C2C8, v7, sub_191E1B84C, v8);
  swift_release_n();
  uint64_t v10 = swift_release();
  v9(v10);
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(v7 + 16);
  if (v12)
  {
    swift_retain();
    swift_release();
    swift_release();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191E148B8(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v7 = a1;
  a2(&v7);
  uint64_t v2 = qword_1EB50EC90;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  swift_retain_n();
  sub_191DBDB14();
  uint64_t v4 = v3;
  swift_release();
  uint64_t v5 = swift_release_n();
  v4(v5);
  swift_release();

  return swift_release();
}

uint64_t sub_191E14A90(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a1;
  a2(&v10);
  uint64_t v5 = qword_1EB50EC90;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EB50EC78;
  swift_retain_n();
  uint64_t v7 = (void (*)(uint64_t))sub_191DBD9E0(v6, sub_191E1BA94, a4, sub_191E1C2C8, a4, j__OUTLINED_FUNCTION_5_24, a4);
  swift_release();
  uint64_t v8 = swift_release_n();
  v7(v8);
  swift_release();

  return swift_release();
}

uint64_t sub_191E14C68(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v7 = a1;
  a2(&v7);
  uint64_t v2 = qword_1EB50EC90;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB50EC78;
  swift_retain_n();
  uint64_t v4 = (void (*)(uint64_t))sub_191DBDF6C(v3);
  swift_release();
  uint64_t v5 = swift_release_n();
  v4(v5);
  swift_release();

  return swift_release();
}

uint64_t sub_191E14E40(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5)
{
  v11[0] = a1;
  v11[1] = a2;
  a3(v11);
  uint64_t v6 = qword_1EB50EC90;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EB50EC78;
  swift_retain_n();
  uint64_t v8 = (void (*)(uint64_t))sub_191DBD9E0(v7, sub_191E1C2F0, a5, sub_191E1C2C8, a5, j__OUTLINED_FUNCTION_5_24, a5);
  swift_release();
  uint64_t v9 = swift_release_n();
  v8(v9);
  swift_release();

  return swift_release();
}

uint64_t sub_191E15018(uint64_t a1, void (*a2)(void))
{
  a2();
  uint64_t v2 = qword_1EB50EC90;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB50EC78;
  swift_retain_n();
  uint64_t v4 = (void (*)(uint64_t))sub_191DBE0EC(v3);
  swift_release();
  uint64_t v5 = swift_release_n();
  v4(v5);
  swift_release();

  return swift_release();
}

uint64_t sub_191E151E8(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  v8[0] = a1;
  v8[1] = a2;
  a3(v8);
  uint64_t v3 = qword_1EB50EC90;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  swift_retain_n();
  sub_191DBE220();
  uint64_t v5 = v4;
  swift_release();
  uint64_t v6 = swift_release_n();
  v5(v6);
  swift_release();

  return swift_release();
}

uint64_t sub_191E153C0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a1;
  a2(&v10);
  uint64_t v5 = qword_1EB50EC90;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EB50EC78;
  swift_retain_n();
  uint64_t v7 = (void (*)(uint64_t))sub_191DBD9E0(v6, sub_191E1C2F0, a4, sub_191E1C2C8, a4, j__OUTLINED_FUNCTION_5_24, a4);
  swift_release();
  uint64_t v8 = swift_release_n();
  v7(v8);
  swift_release();

  return swift_release();
}

uint64_t sub_191E15598()
{
  return sub_191DBCE24();
}

uint64_t sub_191E155BC()
{
  return sub_191DBCE6C();
}

uint64_t sub_191E155E0()
{
  return sub_191DBCED0();
}

uint64_t sub_191E15604(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  v87 = a3;
  uint64_t v78 = a1;
  uint64_t v77 = type metadata accessor for AuthToken();
  uint64_t v86 = *(void *)(v77 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v77);
  uint64_t v74 = (uint64_t)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v73 = (uint64_t)v69 - v10;
  uint64_t v89 = sub_191EE73F0();
  uint64_t v11 = *(void *)(v89 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v89);
  uint64_t v81 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v82 = (char *)v69 - v14;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_191E1AABC(0, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken, MEMORY[0x1E4FBB718]);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v76 = (uint64_t)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  char v20 = (char *)v69 - v19;
  sub_191E1AABC(0, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], v15);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v83 = (uint64_t)v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v91 = (uint64_t)v69 - v24;
  sub_191E1BBD4();
  uint64_t v85 = v25;
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v93 = (uint64_t)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  v84 = (char *)v69 - v28;
  sub_191D7F11C(a2, v94);
  uint64_t v88 = v94[0];
  int64_t v90 = v94[3];
  unint64_t v29 = v94[4];
  uint64_t v79 = v94[1];
  int64_t v80 = (unint64_t)(v94[2] + 64) >> 6;
  uint64_t v75 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v70 = (void (**)(char *, char *, uint64_t))(v11 + 16);
  v69[0] = v11;
  uint64_t v72 = (void (**)(char *, uint64_t))(v11 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v69[1] = a4;
  if (!v29) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v30 = (uint64_t)v20;
  uint64_t v92 = (v29 - 1) & v29;
  unint64_t v31 = __clz(__rbit64(v29)) | (v90 << 6);
  while (1)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(v88 + 48) + 16 * v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    uint64_t v38 = v85;
    uint64_t v39 = *(void *)(v86 + 72);
    uint64_t v40 = v84;
    sub_191DE2270(*(void *)(v88 + 56) + v39 * v31, (uint64_t)&v84[*(int *)(v85 + 48)]);
    *uint64_t v40 = v36;
    v40[1] = v37;
    uint64_t v41 = v93;
    sub_191E1BEC4((uint64_t)v40, v93, (void (*)(void))sub_191E1BBD4);
    uint64_t v42 = v41 + *(int *)(v38 + 48);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v43 = v91;
    char v20 = (char *)v30;
    v87(v91, v30, v41, v42);
    if (v5)
    {
      uint64_t v67 = v78;
      swift_bridgeObjectRelease();
      sub_191E1BF94(v93, (void (*)(void))sub_191E1BBD4);
      swift_release();
      return (uint64_t)v67;
    }
    uint64_t v44 = v83;
    sub_191E1BCA8(v43, v83, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
    uint64_t v45 = v89;
    if (__swift_getEnumTagSinglePayload(v44, 1, v89) == 1)
    {
      sub_191E1BC40(v30, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      uint64_t v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
      sub_191E1BC40(v43, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
      sub_191E1BC40(v44, (unint64_t *)&qword_1EB50E4A0, v46);
    }
    else
    {
      uint64_t v47 = v44;
      uint64_t v48 = v82;
      (*v75)(v82, v47, v45);
      uint64_t v49 = v76;
      sub_191E1BCA8(v30, v76, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      if (__swift_getEnumTagSinglePayload(v49, 1, v77) == 1)
      {
        (*v72)(v48, v45);
        sub_191E1BC40(v30, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        sub_191E1BC40(v91, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
        sub_191E1BC40(v49, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        char v20 = (char *)v30;
      }
      else
      {
        uint64_t v71 = 0;
        uint64_t v50 = v73;
        sub_191E1BEC4(v49, v73, (void (*)(void))type metadata accessor for AuthToken);
        uint64_t v51 = v48;
        uint64_t v52 = *v70;
        (*v70)(v81, v51, v45);
        sub_191DE2270(v50, v74);
        unint64_t v53 = v78;
        swift_isUniquelyReferenced_nonNull_native();
        v95 = v53;
        sub_191DA42E0();
        if (__OFADD__(v53[2], (v55 & 1) == 0)) {
          goto LABEL_40;
        }
        unint64_t v56 = v54;
        char v57 = v55;
        sub_191E1BD20();
        char v20 = (char *)v30;
        if (sub_191EE93D0())
        {
          sub_191DA42E0();
          if ((v57 & 1) != (v59 & 1)) {
            goto LABEL_42;
          }
          unint64_t v56 = v58;
        }
        uint64_t v60 = v95;
        if (v57)
        {
          uint64_t v78 = v95;
          sub_191E1BDCC(v74, v95[7] + v56 * v39);
        }
        else
        {
          v95[(v56 >> 6) + 8] |= 1 << v56;
          v52((char *)(v60[6] + *(void *)(v69[0] + 72) * v56), v81, v89);
          sub_191E1BEC4(v74, v60[7] + v56 * v39, (void (*)(void))type metadata accessor for AuthToken);
          uint64_t v61 = v60[2];
          BOOL v62 = __OFADD__(v61, 1);
          uint64_t v63 = v61 + 1;
          if (v62) {
            goto LABEL_41;
          }
          void v60[2] = v63;
          uint64_t v78 = v95;
        }
        swift_bridgeObjectRelease();
        uint64_t v64 = *v72;
        uint64_t v65 = v89;
        (*v72)(v81, v89);
        sub_191E1BF94(v73, (void (*)(void))type metadata accessor for AuthToken);
        v64(v82, v65);
        sub_191E1BC40(v30, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        sub_191E1BC40(v91, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
        uint64_t v5 = v71;
      }
    }
    unint64_t v29 = v92;
    sub_191E1BF94(v93, (void (*)(void))sub_191E1BBD4);
    if (v29) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v32 = v90 + 1;
    if (__OFADD__(v90, 1)) {
      break;
    }
    if (v32 >= v80) {
      goto LABEL_37;
    }
    unint64_t v33 = *(void *)(v79 + 8 * v32);
    if (!v33)
    {
      int64_t v34 = v90 + 2;
      if (v90 + 2 >= v80) {
        goto LABEL_37;
      }
      unint64_t v33 = *(void *)(v79 + 8 * v34);
      if (v33) {
        goto LABEL_12;
      }
      int64_t v34 = v90 + 3;
      if (v90 + 3 >= v80) {
        goto LABEL_37;
      }
      unint64_t v33 = *(void *)(v79 + 8 * v34);
      if (v33) {
        goto LABEL_12;
      }
      int64_t v34 = v90 + 4;
      if (v90 + 4 >= v80) {
        goto LABEL_37;
      }
      unint64_t v33 = *(void *)(v79 + 8 * v34);
      if (v33)
      {
LABEL_12:
        int64_t v32 = v34;
      }
      else
      {
        int64_t v32 = v90 + 5;
        if (v90 + 5 >= v80) {
          goto LABEL_37;
        }
        unint64_t v33 = *(void *)(v79 + 8 * v32);
        if (!v33)
        {
          int64_t v66 = v90 + 6;
          while (v66 < v80)
          {
            unint64_t v33 = *(void *)(v79 + 8 * v66++);
            if (v33)
            {
              int64_t v32 = v66 - 1;
              goto LABEL_13;
            }
          }
LABEL_37:
          swift_release();
          return (uint64_t)v78;
        }
      }
    }
LABEL_13:
    uint64_t v30 = (uint64_t)v20;
    uint64_t v92 = (v33 - 1) & v33;
    unint64_t v31 = __clz(__rbit64(v33)) + (v32 << 6);
    int64_t v90 = v32;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = sub_191EE99B0();
  __break(1u);
  return result;
}

uint64_t sub_191E15FD0(void *a1, uint64_t a2)
{
  uint64_t v86 = type metadata accessor for AuthToken();
  uint64_t v80 = *(void *)(v86 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v86);
  uint64_t v69 = &v64[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v68 = &v64[-v6];
  uint64_t v83 = sub_191EE73F0();
  uint64_t v7 = *(void *)(v83 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v83);
  uint64_t v74 = &v64[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v75 = &v64[-v10];
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_191E1AABC(0, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken, MEMORY[0x1E4FBB718]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v71 = &v64[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v82 = &v64[-v15];
  sub_191E1AABC(0, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], v11);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v79 = &v64[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  uint64_t v85 = &v64[-v19];
  sub_191E1BBD4();
  uint64_t v78 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = &v64[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v21);
  uint64_t v77 = &v64[-v24];
  sub_191D7F11C(a2, v87);
  uint64_t v81 = v87[0];
  int64_t v84 = v87[3];
  unint64_t v25 = v87[4];
  uint64_t v72 = v87[1];
  int64_t v73 = (unint64_t)(v87[2] + 64) >> 6;
  uint64_t v70 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32);
  int64_t v66 = (void *)(v7 + 16);
  uint64_t v65 = v7;
  uint64_t v67 = (void (**)(unsigned char *, uint64_t))(v7 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v76 = v23;
  if (!v25) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v26 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  unint64_t v27 = v26 | (v84 << 6);
  while (1)
  {
    int64_t v32 = (uint64_t *)(*(void *)(v81 + 48) + 16 * v27);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v80 + 72);
    uint64_t v37 = v77;
    uint64_t v36 = v78;
    sub_191DE2270(*(void *)(v81 + 56) + v35 * v27, (uint64_t)&v77[*(int *)(v78 + 48)]);
    *uint64_t v37 = v34;
    v37[1] = v33;
    sub_191E1BEC4((uint64_t)v37, (uint64_t)v23, (void (*)(void))sub_191E1BBD4);
    uint64_t v38 = (uint64_t)&v23[*(int *)(v36 + 48)];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v39 = v85;
    sub_191EE73C0();
    uint64_t v40 = v82;
    sub_191DE2270(v38, (uint64_t)v82);
    __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v86);
    uint64_t v41 = v79;
    sub_191E1BCA8((uint64_t)v39, (uint64_t)v79, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
    uint64_t v42 = v83;
    if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v83) == 1)
    {
      sub_191E1BC40((uint64_t)v40, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      uint64_t v43 = (uint64_t (*)())MEMORY[0x1E4F276F0];
      sub_191E1BC40((uint64_t)v39, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
      uint64_t v44 = v41;
      uint64_t v45 = (unint64_t *)&qword_1EB50E4A0;
LABEL_23:
      uint64_t v48 = (uint64_t (*)(uint64_t))v43;
      goto LABEL_33;
    }
    uint64_t v46 = v75;
    (*v70)(v75, v41, v42);
    uint64_t v47 = v71;
    sub_191E1BCA8((uint64_t)v40, (uint64_t)v71, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
    if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v86) == 1)
    {
      (*v67)(v46, v42);
      uint64_t v43 = type metadata accessor for AuthToken;
      sub_191E1BC40((uint64_t)v40, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      sub_191E1BC40((uint64_t)v85, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
      uint64_t v44 = v47;
      uint64_t v45 = (unint64_t *)&unk_1EB508A78;
      goto LABEL_23;
    }
    uint64_t v49 = v68;
    sub_191E1BEC4((uint64_t)v47, (uint64_t)v68, (void (*)(void))type metadata accessor for AuthToken);
    uint64_t v50 = (void (*)(unint64_t, unsigned char *, uint64_t))*v66;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))*v66)(v74, v46, v42);
    sub_191DE2270((uint64_t)v49, (uint64_t)v69);
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v88 = a1;
    sub_191DA42E0();
    if (__OFADD__(a1[2], (v52 & 1) == 0)) {
      goto LABEL_37;
    }
    unint64_t v53 = v51;
    char v54 = v52;
    sub_191E1BD20();
    if (sub_191EE93D0())
    {
      sub_191DA42E0();
      if ((v54 & 1) != (v56 & 1)) {
        goto LABEL_39;
      }
      unint64_t v53 = v55;
    }
    a1 = v88;
    if (v54)
    {
      sub_191E1BDCC((uint64_t)v69, v88[7] + v53 * v35);
      uint64_t v57 = v83;
    }
    else
    {
      v88[(v53 >> 6) + 8] |= 1 << v53;
      unint64_t v58 = v50;
      uint64_t v57 = v83;
      v58(a1[6] + *(void *)(v65 + 72) * v53, v74, v83);
      sub_191E1BEC4((uint64_t)v69, a1[7] + v53 * v35, (void (*)(void))type metadata accessor for AuthToken);
      uint64_t v59 = a1[2];
      BOOL v60 = __OFADD__(v59, 1);
      uint64_t v61 = v59 + 1;
      if (v60) {
        goto LABEL_38;
      }
      a1[2] = v61;
      a1 = v88;
    }
    swift_bridgeObjectRelease();
    BOOL v62 = *v67;
    (*v67)(v74, v57);
    sub_191E1BF94((uint64_t)v68, (void (*)(void))type metadata accessor for AuthToken);
    v62(v75, v57);
    sub_191E1BC40((uint64_t)v82, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
    uint64_t v48 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
    uint64_t v44 = v85;
    uint64_t v45 = (unint64_t *)&qword_1EB50E4A0;
LABEL_33:
    sub_191E1BC40((uint64_t)v44, v45, v48);
    uint64_t v23 = v76;
    sub_191E1BF94((uint64_t)v76, (void (*)(void))sub_191E1BBD4);
    if (v25) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v28 = v84 + 1;
    if (__OFADD__(v84, 1)) {
      break;
    }
    if (v28 >= v73) {
      goto LABEL_35;
    }
    unint64_t v29 = *(void *)(v72 + 8 * v28);
    int64_t v30 = v84 + 1;
    if (!v29)
    {
      int64_t v30 = v84 + 2;
      if (v84 + 2 >= v73) {
        goto LABEL_35;
      }
      unint64_t v29 = *(void *)(v72 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v84 + 3;
        if (v84 + 3 >= v73) {
          goto LABEL_35;
        }
        unint64_t v29 = *(void *)(v72 + 8 * v30);
        if (!v29)
        {
          int64_t v30 = v84 + 4;
          if (v84 + 4 >= v73) {
            goto LABEL_35;
          }
          unint64_t v29 = *(void *)(v72 + 8 * v30);
          if (!v29)
          {
            int64_t v30 = v84 + 5;
            if (v84 + 5 >= v73) {
              goto LABEL_35;
            }
            unint64_t v29 = *(void *)(v72 + 8 * v30);
            if (!v29)
            {
              int64_t v31 = v84 + 6;
              while (v31 < v73)
              {
                unint64_t v29 = *(void *)(v72 + 8 * v31++);
                if (v29)
                {
                  int64_t v30 = v31 - 1;
                  goto LABEL_18;
                }
              }
LABEL_35:
              swift_release();
              return (uint64_t)a1;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v25 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
    int64_t v84 = v30;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_191EE99B0();
  __break(1u);
  return result;
}

uint64_t sub_191E16914(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthToken();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v45 - v8;
  sub_191E1BE50();
  uint64_t v51 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v50 = (char *)&v45 - v14;
  sub_191D7F11C(a2, v56);
  uint64_t v53 = v56[0];
  int64_t v54 = v56[3];
  unint64_t v15 = v56[4];
  uint64_t v46 = v56[1];
  int64_t v47 = (unint64_t)(v56[2] + 64) >> 6;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v48 = v13;
  uint64_t v49 = v9;
  if (!v15) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v55 = (v15 - 1) & v15;
  for (unint64_t i = __clz(__rbit64(v15)) | (v54 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v19 << 6))
  {
    uint64_t v21 = v53;
    uint64_t v22 = *(void *)(v53 + 48);
    uint64_t v23 = sub_191EE73F0();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = v22 + *(void *)(v24 + 72) * i;
    uint64_t v26 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v50, v25, v23);
    uint64_t v27 = *(void *)(v52 + 72);
    uint64_t v28 = *(void *)(v21 + 56) + v27 * i;
    uint64_t v29 = v51;
    sub_191DE2270(v28, v26 + *(int *)(v51 + 48));
    sub_191E1BEC4(v26, (uint64_t)v13, (void (*)(void))sub_191E1BE50);
    uint64_t v30 = (uint64_t)&v13[*(int *)(v29 + 48)];
    uint64_t v31 = sub_191EE7320();
    uint64_t v33 = v32;
    sub_191DE2270(v30, (uint64_t)v9);
    sub_191DE2270((uint64_t)v9, (uint64_t)v7);
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = a1;
    unint64_t v34 = sub_191D636F4();
    if (__OFADD__(a1[2], (v35 & 1) == 0)) {
      break;
    }
    unint64_t v36 = v34;
    char v37 = v35;
    sub_191E1BF24(0, (unint64_t *)&unk_1EB508B08, MEMORY[0x1E4FBBCB8]);
    if (sub_191EE93D0())
    {
      unint64_t v38 = sub_191D636F4();
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_33;
      }
      unint64_t v36 = v38;
    }
    a1 = v57;
    if (v37)
    {
      sub_191E1BDCC((uint64_t)v7, v57[7] + v36 * v27);
    }
    else
    {
      v57[(v36 >> 6) + 8] |= 1 << v36;
      uint64_t v40 = (uint64_t *)(a1[6] + 16 * v36);
      *uint64_t v40 = v31;
      v40[1] = v33;
      sub_191E1BEC4((uint64_t)v7, a1[7] + v36 * v27, (void (*)(void))type metadata accessor for AuthToken);
      uint64_t v41 = a1[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_31;
      }
      a1[2] = v43;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v49;
    sub_191E1BF94((uint64_t)v49, (void (*)(void))type metadata accessor for AuthToken);
    swift_bridgeObjectRelease();
    uint64_t v13 = v48;
    sub_191E1BF94((uint64_t)v48, (void (*)(void))sub_191E1BE50);
    unint64_t v15 = v55;
    if (v55) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v17 = v54 + 1;
    if (__OFADD__(v54, 1)) {
      goto LABEL_32;
    }
    if (v17 >= v47) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v46 + 8 * v17);
    int64_t v19 = v54 + 1;
    if (!v18)
    {
      int64_t v19 = v54 + 2;
      if (v54 + 2 >= v47) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v46 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v54 + 3;
        if (v54 + 3 >= v47) {
          goto LABEL_29;
        }
        unint64_t v18 = *(void *)(v46 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v54 + 4;
          if (v54 + 4 >= v47) {
            goto LABEL_29;
          }
          unint64_t v18 = *(void *)(v46 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = v54 + 5;
            if (v54 + 5 >= v47) {
              goto LABEL_29;
            }
            unint64_t v18 = *(void *)(v46 + 8 * v19);
            if (!v18)
            {
              int64_t v20 = v54 + 6;
              while (v20 < v47)
              {
                unint64_t v18 = *(void *)(v46 + 8 * v20++);
                if (v18)
                {
                  int64_t v19 = v20 - 1;
                  goto LABEL_18;
                }
              }
LABEL_29:
              swift_release();
              return (uint64_t)a1;
            }
          }
        }
      }
    }
LABEL_18:
    int64_t v54 = v19;
    uint64_t v55 = (v18 - 1) & v18;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = sub_191EE99B0();
  __break(1u);
  return result;
}

uint64_t AuthTokenManagerType.fetchAuthToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191E1AABC(0, &qword_1EB508B58, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_191EEB6F0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v10 + v9, a1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(v10, a2, a3);
  swift_bridgeObjectRelease();
  if (qword_1EB50EC90 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB50EC78;
  uint64_t v12 = sub_191E14048((uint64_t)v11, (uint64_t)sub_191E16F90, 0);
  swift_release();

  return v12;
}

uint64_t sub_191E16F90(uint64_t *a1)
{
  sub_191E1AABC(0, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - v3;
  uint64_t v5 = type metadata accessor for AuthToken();
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  sub_191DE0848(*a1, (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_191E1BC40((uint64_t)v4, (unint64_t *)&unk_1EB508A78, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
    sub_191E1C0B8();
    uint64_t v11 = swift_allocError();
    sub_191E1AABC(0, (unint64_t *)&unk_1EB508A40, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
    swift_allocObject();
    return sub_191E13DF8(v11);
  }
  else
  {
    sub_191E1BEC4((uint64_t)v4, (uint64_t)v10, (void (*)(void))type metadata accessor for AuthToken);
    sub_191DE2270((uint64_t)v10, (uint64_t)v8);
    sub_191E1AABC(0, (unint64_t *)&unk_1EB508A40, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
    swift_allocObject();
    uint64_t v12 = sub_191E32398((uint64_t)v8);
    sub_191E1BF94((uint64_t)v10, (void (*)(void))type metadata accessor for AuthToken);
  }
  return v12;
}

uint64_t AuthTokenManager.__allocating_init(service:store:tokenType:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  AuthTokenManager.init(service:store:tokenType:)(a1, a2, a3, a4);
  return v8;
}

uint64_t *AuthTokenManager.init(service:store:tokenType:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  uint64_t v11 = *(void *)(*v4 + 120);
  sub_191E1A804();
  swift_allocObject();
  *(uint64_t *)((char *)v4 + v11) = (uint64_t)sub_191E1A8B0(0);
  uint64_t v12 = (uint64_t *)((char *)v5 + *(void *)(*v5 + 128));
  uint64_t v13 = type metadata accessor for DateProvider();
  uint64_t v14 = swift_allocObject();
  v12[3] = v13;
  v12[4] = (uint64_t)&protocol witness table for DateProvider;
  *uint64_t v12 = v14;
  sub_191D6DE58(a1, (uint64_t)(v5 + 2));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v10 + 80) - 8) + 32))((uint64_t)v5 + *(void *)(*v5 + 104), a2);
  unint64_t v15 = (uint64_t *)((char *)v5 + *(void *)(*v5 + 112));
  *unint64_t v15 = a3;
  v15[1] = a4;
  return v5;
}

uint64_t sub_191E173A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_191EE7C10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v39 = *(void *)a2;
  int v38 = *(unsigned __int8 *)(a2 + 8);
  sub_191D74B24(0, (unint64_t *)&qword_1EB50EE70);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCB28], v6);
  uint64_t v10 = (void *)sub_191EE8D70();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v3;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = v10;
  v12[4] = v3;
  uint64_t v13 = qword_1EB508A90;
  id v14 = v10;
  swift_retain_n();
  id v15 = v14;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_191EE7940();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  int64_t v17 = sub_191EE7920();
  os_log_type_t v18 = sub_191EE8C60();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v11;
    int64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = v21;
    uint64_t v35 = v3;
    id v36 = v15;
    *(_DWORD *)int64_t v20 = 136446210;
    uint64_t v22 = sub_191EE73F0();
    uint64_t v23 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v24 = MEMORY[0x192FE76F0](v23, v22);
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_191D76D74(v24, v26, &v41);
    uint64_t v3 = v35;
    id v15 = v36;
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v17, v18, "AuthTokenManager will fetch auth tokens for %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v21, -1, -1);
    uint64_t v27 = v20;
    uint64_t v11 = v37;
    MEMORY[0x192FE9A10](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_191E18E38(a1, v39, v38, v3, (uint64_t (*)(uint64_t, __n128))sub_191E1B940, v11, (uint64_t)sub_191E1B988, (uint64_t)v12);
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v28 = qword_1EB50EC90;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v28 != -1) {
    swift_once();
  }
  id v29 = (id)qword_1EB50EC78;
  sub_191DBAFC0();
  swift_release();
  swift_release();

  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a1;
  uint64_t v31 = (void *)qword_1EB50EC78;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v32 = v31;
  uint64_t v33 = sub_191DACA08((uint64_t)v32, (uint64_t)sub_191E1B9B0, v30);

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v33;
}

uint64_t sub_191E178A4(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_191EE7940();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_191EE7920();
  os_log_type_t v9 = sub_191EE8CA0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v37 = (uint64_t)a2;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = v6;
    uint64_t v11 = swift_slowAlloc();
    v40[0] = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v12 = sub_191EE73F0();
    uint64_t v13 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v14 = MEMORY[0x192FE76F0](v13, v12);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_191D76D74(v14, v16, v40);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    a2 = (void *)v37;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v8, v9, "AuthTokenManager will queue cache read for urls=%{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v11, -1, -1);
    MEMORY[0x192FE9A10](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a3;
  sub_191E1BB2C();
  swift_allocObject();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v18 = swift_retain();
  sub_191DCAC0C(v18, v19, v20, v21, v22, v23, v24, v25, v37, v38, v39, v40[0], v40[1], v40[2], v40[3], v40[4], v40[5], v40[6], v40[7],
    v40[8]);
  uint64_t v27 = v26;
  uint64_t v28 = (void *)swift_allocObject();
  id v28[2] = sub_191E1C024;
  v28[3] = v17;
  v28[4] = v27;
  swift_retain();
  swift_retain();
  id v29 = sub_191D8431C(a2, sub_191E1C2E4, (uint64_t)v28);
  uint64_t v30 = swift_release();
  ((void (*)(uint64_t))v29)(v30);
  uint64_t result = swift_beginAccess();
  if (*(void *)(v27 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    sub_191E1BF24(0, (unint64_t *)&qword_1EB508AA8, MEMORY[0x1E4FBAEA0]);
    sub_191DA5E5C();
    id v32 = sub_191D73E2C();
    Promise.then<A, B>(on:disposeOn:closure:)();
    swift_release();

    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a1;
    uint64_t v34 = qword_1EB50EC90;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v34 != -1) {
      swift_once();
    }
    id v35 = (id)qword_1EB50EC78;
    uint64_t v36 = sub_191DACA08((uint64_t)v35, (uint64_t)sub_191E1C05C, v33);
    swift_release();
    swift_release();

    return v36;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191E17CE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191EE7940();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_191EE7920();
  os_log_type_t v6 = sub_191EE8CA0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v17 = v3;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v9 = sub_191EE73F0();
    uint64_t v10 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v11 = MEMORY[0x192FE76F0](v10, v9);
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_191D76D74(v11, v13, &v18);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v5, v6, "AuthTokenManager will perform cache read for urls=%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v8, -1, -1);
    uint64_t v14 = v7;
    uint64_t v3 = v17;
    MEMORY[0x192FE9A10](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_191E13C10(a1);
  uint64_t v15 = (*(uint64_t (**)(void))(*(void *)(v3 + 88) + 16))();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_191E17F5C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = sub_191E15604(MEMORY[0x1E4FBC868], *a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_191E1C080, a2);
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191EE7940();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  os_log_type_t v6 = sub_191EE7920();
  os_log_type_t v7 = sub_191EE8CA0();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v16 = a3;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v17 = v15;
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v9 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    size_t v10 = sub_191EE4C14(v9);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_191EE73F0();
    uint64_t v12 = MEMORY[0x192FE76F0](v10, v11);
    unint64_t v14 = v13;
    a3 = v16;
    swift_release();
    sub_191D76D74(v12, v14, &v17);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v6, v7, "AuthTokenManager using cached auth tokens for urls=%{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v15, -1, -1);
    MEMORY[0x192FE9A10](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a3 = v4;
}

uint64_t sub_191E1818C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_191EE7640();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191EE73C0();
  sub_191D702F0(a5 + *(void *)(*(void *)a5 + 128), (uint64_t)v21);
  uint64_t v12 = v22;
  uint64_t v13 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  uint64_t v14 = type metadata accessor for AuthToken();
  double v15 = *(double *)(a4 + *(int *)(v14 + 28));
  sub_191EE75F0();
  double v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (v15 <= v17)
  {
    uint64_t v18 = 1;
  }
  else
  {
    sub_191DE2270(a4, a2);
    uint64_t v18 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v18, 1, v14);
}

uint64_t sub_191E1833C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_191EE7940();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_191EE7920();
  os_log_type_t v10 = sub_191EE8CA0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v41 = (uint64_t)a3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v43[0] = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v40 = (uint64_t)(v11 + 4);
    uint64_t v13 = sub_191EE73F0();
    uint64_t v14 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v15 = MEMORY[0x192FE76F0](v14, v13);
    uint64_t v16 = a1;
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = v15;
    a3 = (void *)v41;
    uint64_t v42 = sub_191D76D74(v19, v18, v43);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    a1 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v9, v10, "AuthTokenManager will queue cache write for urls=%{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v12, -1, -1);
    MEMORY[0x192FE9A10](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a2;
  v20[3] = a4;
  v20[4] = a1;
  sub_191E1BB2C();
  swift_allocObject();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  uint64_t v21 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191DCAC0C(v21, v22, v23, v24, v25, v26, v27, v28, v40, v41, v42, v43[0], v43[1], v43[2], v43[3], v43[4], v43[5], v43[6], v43[7],
    v43[8]);
  uint64_t v30 = v29;
  uint64_t v31 = (void *)swift_allocObject();
  id v31[2] = sub_191E1BB0C;
  v31[3] = v20;
  void v31[4] = v30;
  swift_retain();
  swift_retain();
  id v32 = sub_191D8431C(a3, (uint64_t (*)())sub_191E1BBA4, (uint64_t)v31);
  uint64_t v33 = swift_release();
  ((void (*)(uint64_t))v32)(v33);
  uint64_t result = swift_beginAccess();
  if (*(void *)(v30 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    if (qword_1EB50EC90 != -1) {
      swift_once();
    }
    id v35 = (id)qword_1EB50EC78;
    sub_191DBB1D8();
    swift_release();

    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a2;
    uint64_t v37 = (void *)qword_1EB50EC78;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    id v38 = v37;
    uint64_t v39 = sub_191DACA08((uint64_t)v38, (uint64_t)sub_191E1BBB0, v36);
    swift_release();
    swift_release();

    return v39;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191E18720(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191EE7940();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  os_log_type_t v6 = sub_191EE7920();
  os_log_type_t v7 = sub_191EE8CA0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v18 = a3;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = v9;
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v10 = sub_191EE73F0();
    uint64_t v11 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v12 = MEMORY[0x192FE76F0](v11, v10);
    uint64_t v19 = v4;
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_191D76D74(v12, v14, &v20);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v6, v7, "AuthTokenManager will perform cache write for urls=%{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v9, -1, -1);
    uint64_t v15 = v8;
    a3 = v18;
    MEMORY[0x192FE9A10](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_191E16914(MEMORY[0x1E4FBC868], a3);
  uint64_t v16 = (*(uint64_t (**)(void))(*(void *)(v4 + 88) + 32))();
  swift_bridgeObjectRelease();
  return v16;
}

void sub_191E189A8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_191E15FD0(MEMORY[0x1E4FBC868], *a1);
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191EE7940();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_191EE7920();
  os_log_type_t v6 = sub_191EE8CA0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v15 = a2;
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)os_log_type_t v7 = 136446210;
    uint64_t v8 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    size_t v9 = sub_191EE4C14(v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_191EE73F0();
    uint64_t v11 = MEMORY[0x192FE76F0](v9, v10);
    unint64_t v13 = v12;
    a2 = v15;
    swift_release();
    sub_191D76D74(v11, v13, &v16);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v5, v6, "AuthTokenManager wrote new tokens to cache for urls=%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v14, -1, -1);
    MEMORY[0x192FE9A10](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a2 = v3;
}

void sub_191E18BC0(void *a1, uint64_t a2, const char *a3)
{
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191EE7940();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB512E90);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v6 = a1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v7 = a1;
  oslog = sub_191EE7920();
  os_log_type_t v8 = sub_191EE8C80();
  if (os_log_type_enabled(oslog, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v21 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = sub_191EE73F0();
    uint64_t v12 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v13 = MEMORY[0x192FE76F0](v12, v11);
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_191D76D74(v13, v15, &v21);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2114;
    id v16 = a1;
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    sub_191EE8EA0();
    *uint64_t v10 = v20;

    _os_log_impl(&dword_191D4D000, oslog, v8, a3, (uint8_t *)v9, 0x16u);
    sub_191DA5470();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_0_1();

    OUTLINED_FUNCTION_38();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    OUTLINED_FUNCTION_38();
  }
}

uint64_t sub_191E18E38(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t (*a5)(uint64_t, __n128), uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_191E1B9D4();
  unint64_t v15 = (void (*)(uint64_t))sub_191E18F24();
  uint64_t v17 = sub_191E18FE0(a1, a2, a3, v15, v16, a5, a6, a7, a8, *(uint64_t **)(a4 + *(void *)(*(void *)a4 + 120)), 0);
  swift_release();
  return v17;
}

uint64_t (*sub_191E18F24())(uint64_t)
{
  return sub_191E1BAC8;
}

uint64_t sub_191E18F64(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v4 + 8))(a1, *(void *)((char *)v1 + *(void *)(*v1 + 112)), *(void *)((char *)v1 + *(void *)(*v1 + 112) + 8), v3, v4);
}

uint64_t sub_191E18FE0(uint64_t a1, unint64_t a2, unsigned __int8 a3, void (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t, __n128), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11)
{
  swift_retain();
  return sub_191ED356C(a1, a2, a3, a4, a5, a8, a9, a10, a11, 0, 0, v11, a6, a7);
}

uint64_t sub_191E1907C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191EE7940();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_191EE7920();
  os_log_type_t v6 = sub_191EE8CA0();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v8;
    *(_DWORD *)id v7 = 136446210;
    uint64_t v9 = sub_191EE73F0();
    uint64_t v10 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v11 = a2;
    uint64_t v12 = MEMORY[0x192FE76F0](v10, v9);
    uint64_t v17 = v3;
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = v12;
    a2 = v11;
    sub_191D76D74(v15, v14, &v18);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v5, v6, "AuthTokenManager fetch successful for urls %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v8, -1, -1);
    MEMORY[0x192FE9A10](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a2 = v3;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t *AuthTokenManager.deinit()
{
  uint64_t v1 = *v0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(*v0 + 128));
  return v0;
}

uint64_t AuthTokenManager.__deallocating_deinit()
{
  AuthTokenManager.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

void AuthTokenManager.fetchAuthTokens(for:)(uint64_t a1)
{
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191EE7940();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_191EE7920();
  os_log_type_t v4 = sub_191EE8C60();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v6 = sub_191EE73F0();
    uint64_t v7 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v8 = MEMORY[0x192FE76F0](v7, v6);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_191D76D74(v8, v10, &v11);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v3, v4, "AuthTokenManager will fetch auth tokens for urls: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_0_1();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = 2;
  char v12 = 2;
  sub_191E173A4(a1, (uint64_t)&v11);
  OUTLINED_FUNCTION_38();
}

uint64_t AuthTokenManager.refreshAuthTokens(for:condition:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_191EE7940();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  unint64_t v9 = sub_191EE7920();
  os_log_type_t v10 = sub_191EE8CA0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v29 = a2;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v12 = a3;
    uint64_t v13 = sub_191EE73F0();
    uint64_t v14 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v15 = MEMORY[0x192FE76F0](v14, v13);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v18 = v15;
    a3 = v12;
    sub_191D76D74(v18, v17, &v30);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    a2 = v29;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v9, v10, "AuthTokenManager will refresh auth tokens for urls: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_0_1();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_191E1991C(v4, a1);
  uint64_t v19 = OUTLINED_FUNCTION_29();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  uint64_t v20 = qword_1EB50EC90;
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  id v21 = (id)qword_1EB50EC78;
  sub_191DBB614();
  swift_release();
  swift_release();

  uint64_t v22 = (void *)qword_1EB50EC78;
  swift_retain();
  id v23 = v22;
  sub_191E14728((uint64_t)v23, (uint64_t)sub_191E1AB6C, v4);
  swift_release();
  swift_release();

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a1;
  uint64_t v25 = (void *)qword_1EB50EC78;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v26 = v25;
  uint64_t v27 = sub_191DACA08((uint64_t)v26, (uint64_t)sub_191E1ABC0, v24);
  swift_release();
  swift_release();

  return v27;
}

uint64_t sub_191E1991C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 2;
  char v4 = 2;
  return sub_191E173A4(a2, (uint64_t)&v3);
}

uint64_t sub_191E19968@<X0>(uint64_t (*a1)(char *)@<X1>, size_t *a2@<X8>)
{
  swift_retain();
  uint64_t v4 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v5 = sub_191E1AE90(v4, a1);
  swift_bridgeObjectRelease();
  size_t v6 = sub_191EE4C14((uint64_t)v5);
  uint64_t result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_191E199E4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = 0;
  char v4 = 2;
  return sub_191E173A4(v1, (uint64_t)&v3);
}

void sub_191E19A2C(void *a1)
{
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191EE7940();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB512E90);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v3 = a1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v4 = a1;
  oslog = sub_191EE7920();
  os_log_type_t v5 = sub_191EE8C80();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v16 = v7;
    *(_DWORD *)uint64_t v6 = 136446466;
    uint64_t v8 = sub_191EE73F0();
    uint64_t v9 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v10 = MEMORY[0x192FE76F0](v9, v8);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_191D76D74(v10, v12, &v16);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v13 = sub_191EE9A10();
    sub_191D76D74(v13, v14, &v16);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_191D4D000, oslog, v5, "AuthTokenManager failed to refresh auth tokens for urls=%{public}s; error=%{public}s",
      (uint8_t *)v6,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v7, -1, -1);
    MEMORY[0x192FE9A10](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t AuthTokenManager.discardAuthToken(for:)(uint64_t a1)
{
  uint64_t v2 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v31 - v9;
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_191EE7940();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB512E90);
  unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v12(v10, a1, v2);
  uint64_t v13 = sub_191EE7920();
  os_log_type_t v14 = sub_191EE8CA0();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v33 = v4;
  uint64_t v34 = a1;
  id v35 = v12;
  uint64_t v36 = v4 + 16;
  if (v15)
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v16 = 136446210;
    v31[0] = v16 + 4;
    sub_191E1ACF8((unint64_t *)&qword_1E92F3910, MEMORY[0x1E4F276F0]);
    uint64_t v17 = sub_191EE9620();
    uint64_t v37 = sub_191D76D74(v17, v18, &v38);
    a1 = v34;
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    uint64_t v19 = OUTLINED_FUNCTION_24_7();
    v20(v19);
    _os_log_impl(&dword_191D4D000, v13, v14, "AuthTokenManager will discard auth token for URL: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_0_1();
  }
  else
  {
    uint64_t v21 = OUTLINED_FUNCTION_24_7();
    v22(v21);
  }

  sub_191E1A110((uint64_t *)v31[1]);
  v35(v8, a1, v2);
  uint64_t v23 = v2;
  uint64_t v24 = v33;
  v32 += (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  swift_allocObject();
  uint64_t v25 = *(void (**)(void))(v24 + 32);
  OUTLINED_FUNCTION_20_9();
  v25();
  if (qword_1EB50EC90 != -1) {
    swift_once();
  }
  id v26 = (id)qword_1EB50EC78;
  sub_191DBB724();
  swift_release();
  swift_release();

  v35(v8, v34, v23);
  uint64_t v27 = swift_allocObject();
  OUTLINED_FUNCTION_20_9();
  v25();
  id v28 = (id)qword_1EB50EC78;
  uint64_t v29 = sub_191DACA34((uint64_t)v28, (uint64_t)sub_191E1ACA8, v27);
  swift_release();

  swift_release();
  return v29;
}

uint64_t sub_191E1A110(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_191D65B08(0, &qword_1EB50E0D8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_191EEB6F0;
  *(void *)(v2 + 32) = sub_191EE7320();
  *(void *)(v2 + 40) = v3;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 + 88) + 40))(v2, *(void *)(v1 + 80));
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_191E1A20C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191EE73F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

void sub_191E1A27C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_191EE73F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_191EE7940();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB512E90);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  id v9 = a1;
  id v10 = a1;
  uint64_t v11 = sub_191EE7920();
  os_log_type_t v12 = sub_191EE8C80();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v22 = v20;
    *(_DWORD *)uint64_t v13 = 136446466;
    sub_191E1ACF8((unint64_t *)&qword_1E92F3910, MEMORY[0x1E4F276F0]);
    uint64_t v14 = sub_191EE9620();
    uint64_t v21 = sub_191D76D74(v14, v15, &v22);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_WORD *)(v13 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v16 = sub_191EE9A10();
    uint64_t v21 = sub_191D76D74(v16, v17, &v22);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_191D4D000, v11, v12, "AuthTokenManager failed to discard token for url=%{public}s; error=%{public}s",
      (uint8_t *)v13,
      0x16u);
    uint64_t v18 = v20;
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v18, -1, -1);
    MEMORY[0x192FE9A10](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_191E1A594(uint64_t a1)
{
}

uint64_t sub_191E1A5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AuthTokenManager.refreshAuthTokens(for:condition:)(a1, a2, a3);
}

uint64_t sub_191E1A5DC(uint64_t a1)
{
  return AuthTokenManager.discardAuthToken(for:)(a1);
}

uint64_t sub_191E1A600(uint64_t a1, uint64_t a2)
{
  sub_191E1AABC(0, &qword_1EB5089D8, (uint64_t (*)(uint64_t))sub_191DD01E0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v13 - v6);
  *(void *)(v2 + 32) = MEMORY[0x1E4FBC860];
  uint64_t v8 = v2 + *(void *)(*(void *)v2 + 112);
  sub_191DD01E0(0);
  uint64_t v10 = v9;
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 1;
  *uint64_t v7 = a2;
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
  uint64_t v11 = v2 + *(void *)(*(void *)v2 + 112);
  swift_beginAccess();
  sub_191E1C104((uint64_t)v7, v11);
  swift_endAccess();
  return v2;
}

uint64_t sub_191E1A770(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 32) = v6;
  *(unsigned char *)(v3 + 48) = -1;
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = 1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = a2;
  uint64_t v8 = *(unsigned __int8 *)(v3 + 48);
  *(unsigned char *)(v3 + 48) = 1;
  a3(v7, v8);
  return v3;
}

void sub_191E1A804()
{
  if (!qword_1EB50C810)
  {
    sub_191DA5DC8();
    sub_191DA5E5C();
    sub_191E1ACF8(&qword_1EB50CAC0, (void (*)(uint64_t))sub_191DA5DC8);
    unint64_t v0 = type metadata accessor for PromiseDeduper();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50C810);
    }
  }
}

void *sub_191E1A8B0(uint64_t a1)
{
  v1[2] = MEMORY[0x1E4FBC868];
  uint64_t v6 = 0;
  uint64_t v3 = type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v4 = UnfairLock.init(options:)((int *)&v6);
  v1[6] = v3;
  v1[7] = &protocol witness table for UnfairLock;
  v1[3] = v4;
  v1[8] = a1;
  return v1;
}

void sub_191E1A930(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  a1();
  uint64_t v4 = qword_1EB50EC90;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EB50EC78;
  sub_191DBB0D0();
  swift_release();
  swift_release();

  uint64_t v6 = (void *)qword_1EB50EC78;
  swift_retain();
  id v7 = v6;
  sub_191D73E88((uint64_t)v7, (uint64_t)sub_191E1BE4C, a3);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_191E1AA90()
{
  return sub_191DBCE54();
}

void sub_191E1AABC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_191E1AB20()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_191E1AB50@<X0>(size_t *a1@<X8>)
{
  return sub_191E19968(*(uint64_t (**)(char *))(v1 + 16), a1);
}

uint64_t sub_191E1AB6C(uint64_t *a1)
{
  return sub_191E199E4(a1);
}

uint64_t sub_191E1AB88()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_191E1ABC0(void *a1)
{
}

void sub_191E1ABC8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_191D65B08(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_191E1AC48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_191EE73F0();
  OUTLINED_FUNCTION_12(v3);
  return sub_191E1A20C(v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), a1);
}

void sub_191E1ACA8(void *a1)
{
  uint64_t v3 = sub_191EE73F0();
  OUTLINED_FUNCTION_12(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_191E1A27C(a1, v5);
}

uint64_t sub_191E1ACF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of AuthTokenManagerType.fetchAuthTokens(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AuthTokenManagerType.refreshAuthTokens(for:condition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of AuthTokenManagerType.discardAuthToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_191E1AD7C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AuthTokenManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AuthTokenManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AuthTokenManager);
}

uint64_t dispatch thunk of AuthTokenManager.__allocating_init(service:store:tokenType:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_191E1AE80(uint64_t a1)
{
  return sub_191E15018(a1, *(void (**)(void))(v1 + 16));
}

uint64_t (*sub_191E1AE90(uint64_t a1, uint64_t (*a2)(char *)))(char *)
{
  uint64_t v3 = v2;
  v14[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v10 = (void *)((char *)v14 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_191EA28DC(0, v8, v10);
    swift_retain();
    uint64_t v11 = sub_191E1B068(v10, v8, a1, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      a2 = (uint64_t (*)(char *))v11;
    }
    swift_release_n();
  }
  else
  {
    os_log_type_t v12 = (unint64_t *)swift_slowAlloc();
    sub_191EA28DC(0, v8, v12);
    swift_retain();
    a2 = (uint64_t (*)(char *))sub_191E1B068(v12, v8, a1, a2);
    MEMORY[0x192FE9A10](v12, -1, -1);
    swift_release_n();
  }
  swift_release();
  return a2;
}

uint64_t sub_191E1B068(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v25 = a2;
  id v26 = a1;
  uint64_t v6 = type metadata accessor for AuthToken();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v29 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_20;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v29) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v28 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v29) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v28 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v29) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v28 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v15 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_20:
    sub_191DE2270(*(void *)(a3 + 56) + *(void *)(v7 + 72) * v17, (uint64_t)v10);
    char v21 = a4(v10);
    uint64_t result = sub_191E1BF94((uint64_t)v10, (void (*)(void))type metadata accessor for AuthToken);
    if (v21)
    {
      *(unint64_t *)((char *)v26 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
LABEL_24:
        uint64_t v23 = sub_191E1B2E4(v26, v25, v27, (void *)a3);
        swift_release();
        return v23;
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v29) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v28 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v28 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_191E1B2E4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for AuthToken();
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v57 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v51 = (uint64_t)&v44 - v11;
  uint64_t v56 = sub_191EE73F0();
  uint64_t v53 = *(void *)(v56 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v56);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v50 = (char *)&v44 - v15;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_191E1B85C();
  uint64_t result = sub_191EE94D0();
  uint64_t v17 = result;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  if (a2 < 1) {
    unint64_t v18 = 0;
  }
  else {
    unint64_t v18 = *a1;
  }
  uint64_t v19 = 0;
  uint64_t v47 = v53 + 32;
  uint64_t v48 = v53 + 16;
  uint64_t v20 = result + 64;
  uint64_t v49 = v14;
  uint64_t v46 = a4;
  uint64_t v21 = v56;
  while (1)
  {
    if (v18)
    {
      uint64_t v54 = (v18 - 1) & v18;
      uint64_t v55 = v19;
      unint64_t v22 = __clz(__rbit64(v18)) | (v19 << 6);
    }
    else
    {
      uint64_t v23 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_40;
      }
      if (v23 >= v45) {
        return v17;
      }
      unint64_t v24 = v44[v23];
      uint64_t v25 = v19 + 1;
      if (!v24)
      {
        uint64_t v25 = v19 + 2;
        if (v19 + 2 >= v45) {
          return v17;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          uint64_t v25 = v19 + 3;
          if (v19 + 3 >= v45) {
            return v17;
          }
          unint64_t v24 = v44[v25];
          if (!v24)
          {
            uint64_t v26 = v19 + 4;
            if (v19 + 4 >= v45) {
              return v17;
            }
            unint64_t v24 = v44[v26];
            if (!v24)
            {
              while (1)
              {
                uint64_t v25 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (v25 >= v45) {
                  return v17;
                }
                unint64_t v24 = v44[v25];
                ++v26;
                if (v24) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v25 = v19 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v54 = (v24 - 1) & v24;
      uint64_t v55 = v25;
      unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    uint64_t v27 = v53;
    uint64_t v28 = *(void *)(v53 + 72);
    int64_t v29 = v50;
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(v50, a4[6] + v28 * v22, v21);
    uint64_t v30 = *(void *)(v52 + 72);
    uint64_t v31 = a4[7] + v30 * v22;
    uint64_t v32 = v51;
    sub_191DE2270(v31, v51);
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    uint64_t v34 = v49;
    v33(v49, v29, v21);
    sub_191E1BEC4(v32, v57, (void (*)(void))type metadata accessor for AuthToken);
    sub_191E1ACF8((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
    uint64_t result = sub_191EE7F90();
    uint64_t v35 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v20 + 8 * (v36 >> 6))) == 0) {
      break;
    }
    unint64_t v38 = __clz(__rbit64((-1 << v36) & ~*(void *)(v20 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v20 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
    v33((char *)(*(void *)(v17 + 48) + v38 * v28), v34, v56);
    uint64_t result = sub_191E1BEC4(v57, *(void *)(v17 + 56) + v38 * v30, (void (*)(void))type metadata accessor for AuthToken);
    ++*(void *)(v17 + 16);
    if (__OFSUB__(a3--, 1)) {
      goto LABEL_39;
    }
    a4 = v46;
    unint64_t v18 = v54;
    uint64_t v19 = v55;
    if (!a3) {
      return v17;
    }
  }
  char v39 = 0;
  unint64_t v40 = (unint64_t)(63 - v35) >> 6;
  while (++v37 != v40 || (v39 & 1) == 0)
  {
    BOOL v41 = v37 == v40;
    if (v37 == v40) {
      unint64_t v37 = 0;
    }
    v39 |= v41;
    uint64_t v42 = *(void *)(v20 + 8 * v37);
    if (v42 != -1)
    {
      unint64_t v38 = __clz(__rbit64(~v42)) + (v37 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_191E1B798(uint64_t *a1, void (*a2)(uint64_t *))
{
  return sub_191E148B8(*a1, a2);
}

uint64_t sub_191E1B7A0()
{
  return sub_191E1AA90();
}

uint64_t sub_191E1B7BC(uint64_t *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  return sub_191E14A90(*a1, a2, a3, a4);
}

uint64_t sub_191E1B7C4()
{
  return sub_191E15598();
}

uint64_t sub_191E1B7CC(uint64_t *a1, void (*a2)(uint64_t *))
{
  return sub_191E14C68(*a1, a2);
}

uint64_t sub_191E1B7D4()
{
  return sub_191E155BC();
}

uint64_t sub_191E1B7E4(uint64_t *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  return sub_191E14E40(*a1, a1[1], a2, a3, a4);
}

uint64_t sub_191E1B7FC()
{
  return sub_191E155E0();
}

uint64_t sub_191E1B804()
{
  return sub_191E1B7FC();
}

uint64_t sub_191E1B810(uint64_t *a1, void (*a2)(void *))
{
  return sub_191E151E8(*a1, a1[1], a2);
}

uint64_t sub_191E1B82C(uint64_t *a1)
{
  return sub_191E1B810(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_191E1B840(uint64_t *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  return sub_191E153C0(*a1, a2, a3, a4);
}

uint64_t sub_191E1B84C(uint64_t *a1)
{
  return sub_191E1B840(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_191E1B85C()
{
  if (!qword_1E92F2B78)
  {
    sub_191EE73F0();
    type metadata accessor for AuthToken();
    sub_191E1ACF8((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_191EE94E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F2B78);
    }
  }
}

uint64_t sub_191E1B908()
{
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_191E1B940(uint64_t a1)
{
  return sub_191E178A4(a1, *(void **)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_191E1B948()
{
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_54();

  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_191E1B988(uint64_t a1)
{
  return sub_191E1833C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_191E1B994@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_191E1907C(a1, a2);
}

void sub_191E1B9B0(void *a1)
{
  sub_191E18BC0(a1, *(void *)(v1 + 16), "AuthTokenManager fetch failed for urls %{public}s, error=%{public}@");
}

void sub_191E1B9D4()
{
  if (!qword_1EB508B68[0])
  {
    sub_191EE73F0();
    type metadata accessor for AuthToken();
    sub_191E1ACF8((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
    unint64_t v0 = type metadata accessor for Manager();
    if (!v1) {
      atomic_store(v0, qword_1EB508B68);
    }
  }
}

uint64_t sub_191E1BA88(uint64_t *a1)
{
  return sub_191E1B7BC(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_191E1BAA0(uint64_t *a1)
{
  return sub_191E1B7CC(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_191E1BAB0()
{
  return sub_191E1B7D4();
}

uint64_t sub_191E1BABC(uint64_t *a1)
{
  return sub_191E1B7E4(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_191E1BACC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_54();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_191E1BB0C()
{
  return sub_191E18720(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_191E1BB2C()
{
  if (!qword_1EB5087C0)
  {
    sub_191E1BF24(255, (unint64_t *)&qword_1EB508AA8, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = type metadata accessor for DeferredPromise();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB5087C0);
    }
  }
}

void sub_191E1BBA4()
{
  sub_191E1A930(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_191E1BBB0(void *a1)
{
  sub_191E18BC0(a1, *(void *)(v1 + 16), "AuthTokenManager failed cache write for urls=%{public}s, error=%{public}@");
}

void sub_191E1BBD4()
{
  if (!qword_1EB508AB0)
  {
    type metadata accessor for AuthToken();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB508AB0);
    }
  }
}

uint64_t sub_191E1BC40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_191E1AABC(0, a2, a3, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t))(v4 + 8))(a1);
  return a1;
}

uint64_t sub_191E1BCA8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_191E1AABC(0, a3, a4, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, a1);
  return a2;
}

void sub_191E1BD20()
{
  if (!qword_1EB508AE0)
  {
    sub_191EE73F0();
    type metadata accessor for AuthToken();
    sub_191E1ACF8((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_191EE9400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508AE0);
    }
  }
}

uint64_t sub_191E1BDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191E1BE30()
{
  return sub_191E1B7A0();
}

void sub_191E1BE50()
{
  if (!qword_1EB5086E8)
  {
    sub_191EE73F0();
    type metadata accessor for AuthToken();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB5086E8);
    }
  }
}

uint64_t sub_191E1BEC4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_191E1BF24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for AuthToken();
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBB1A0], v6, MEMORY[0x1E4FBB1B0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_191E1BF94(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_191E1BFEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_0_3();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_191E1C024()
{
  return sub_191E17CE4(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

void sub_191E1C044(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_191E1C05C(void *a1)
{
  sub_191E18BC0(a1, *(void *)(v1 + 16), "AuthTokenManager failed cache read for urls=%{public}s, error=%{public}@");
}

uint64_t sub_191E1C080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191E1818C(a1, a2, a3, a4, v4);
}

uint64_t sub_191E1C0A4(uint64_t *a1)
{
  return sub_191E1B798(a1, *(void (**)(uint64_t *))(v1 + 16));
}

unint64_t sub_191E1C0B8()
{
  unint64_t result = qword_1E92F3BE8;
  if (!qword_1E92F3BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3BE8);
  }
  return result;
}

uint64_t sub_191E1C104(uint64_t a1, uint64_t a2)
{
  sub_191E1AABC(0, &qword_1EB5089D8, (uint64_t (*)(uint64_t))sub_191DD01E0, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for AuthTokenManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191E1C234);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenManagerError()
{
  return &type metadata for AuthTokenManagerError;
}

unint64_t sub_191E1C270()
{
  unint64_t result = qword_1E92F3BF0;
  if (!qword_1E92F3BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3BF0);
  }
  return result;
}

uint64_t dispatch thunk of NetworkEventHandlerType.handleNetworkEvent(_:urlRequest:requestID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_191E1C310(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_191D7F11C(a1, v22);
  uint64_t v5 = v22[0];
  uint64_t v23 = v22[1];
  int64_t v6 = v22[3];
  unint64_t v7 = v22[4];
  int64_t v8 = (unint64_t)(v22[2] + 64) >> 6;
  uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (!v7) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v11 = v10 | (v6 << 6);
  while (1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v11);
    uint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    String.write(to:)(a2, v16, v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    String.write(to:)(a2, v20, v19);
    uint64_t v3 = 0;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v12 >= v8) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v23 + 8 * v12);
    if (!v13)
    {
      int64_t v14 = v6 + 2;
      if (v6 + 2 >= v8) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13) {
        goto LABEL_12;
      }
      int64_t v14 = v6 + 3;
      if (v6 + 3 >= v8) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13) {
        goto LABEL_12;
      }
      int64_t v14 = v6 + 4;
      if (v6 + 4 >= v8) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13)
      {
LABEL_12:
        int64_t v12 = v14;
      }
      else
      {
        int64_t v12 = v6 + 5;
        if (v6 + 5 >= v8) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v23 + 8 * v12);
        if (!v13)
        {
          int64_t v21 = v6 + 6;
          while (v21 < v8)
          {
            unint64_t v13 = *(void *)(v23 + 8 * v21++);
            if (v13)
            {
              int64_t v12 = v21 - 1;
              goto LABEL_13;
            }
          }
          return swift_release();
        }
      }
    }
LABEL_13:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v6 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_191E1C4F4()
{
  return sub_191E1C800();
}

uint64_t sub_191E1C540()
{
  return sub_191E1C608();
}

uint64_t sub_191E1C58C()
{
  OUTLINED_FUNCTION_13_14();
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = v0;
  sub_191DA8CD0((uint64_t)&v2, (uint64_t)&v3);
  OUTLINED_FUNCTION_10_16();
  return OUTLINED_FUNCTION_9_11();
}

uint64_t sub_191E1C608()
{
  OUTLINED_FUNCTION_13_14();
  OUTLINED_FUNCTION_20_10(v0, *MEMORY[0x1E4F143B8], v2, SWORD2(v2), SBYTE6(v2), SHIBYTE(v2), v3);
  OUTLINED_FUNCTION_10_16();
  return OUTLINED_FUNCTION_9_11();
}

uint64_t sub_191E1C670()
{
  return sub_191E1C6BC();
}

uint64_t sub_191E1C6BC()
{
  OUTLINED_FUNCTION_13_14();
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  __int16 v2 = v0;
  sub_191DA8CD0((uint64_t)&v2, (uint64_t)&v3);
  OUTLINED_FUNCTION_10_16();
  return OUTLINED_FUNCTION_9_11();
}

uint64_t sub_191E1C738()
{
  return sub_191E1C784();
}

uint64_t sub_191E1C784()
{
  OUTLINED_FUNCTION_13_14();
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v2 = v0;
  sub_191DA8CD0((uint64_t)&v2, (uint64_t)&v3);
  OUTLINED_FUNCTION_10_16();
  return OUTLINED_FUNCTION_9_11();
}

uint64_t sub_191E1C800()
{
  OUTLINED_FUNCTION_13_14();
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = v0;
  sub_191DA8CD0((uint64_t)&v2, (uint64_t)&v3);
  OUTLINED_FUNCTION_10_16();
  return OUTLINED_FUNCTION_9_11();
}

uint64_t sub_191E1C87C()
{
  OUTLINED_FUNCTION_13_14();
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v2 = v0;
  sub_191DA8CD0((uint64_t)&v2, (uint64_t)&v3);
  OUTLINED_FUNCTION_10_16();
  return OUTLINED_FUNCTION_9_11();
}

uint64_t sub_191E1C8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t __src = a1;
  __int16 v11 = a2;
  char v12 = BYTE2(a2);
  char v13 = BYTE3(a2);
  char v14 = BYTE4(a2);
  char v15 = BYTE5(a2);
  uint64_t v4 = sub_191EE7690();
  uint64_t v5 = *(void *)(v4 - 8);
  int64_t v6 = (void *)swift_slowAlloc();
  size_t v7 = *(void *)(v5 + 64);
  if ((v7 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_191EE94F0();
    __break(1u);
  }
  else
  {
    int64_t v8 = v6;
    memcpy(v6, &__src, v7);
    (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(a3, v8, v4);
    return MEMORY[0x192FE9A10](v8, -1, -1);
  }
  return result;
}

uint64_t sub_191E1CAA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  switch(v4 >> 62)
  {
    case 1uLL:
      if (v3 >> 32 < (int)v3)
      {
        __break(1u);
LABEL_12:
        swift_release();
        swift_release();
        __break(1u);
LABEL_13:
        sub_191D76D1C(v3, v4);
        __break(1u);
        JUMPOUT(0x191E1CBF8);
      }
      swift_retain();
      sub_191E1EA90((int)v3, v3 >> 32, a2);
      if (v2) {
        goto LABEL_13;
      }
      sub_191D76D1C(v3, v4);
      return sub_191E1D470(a1);
    case 2uLL:
      v4 &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v9 = *(void *)(v3 + 16);
      uint64_t v10 = *(void *)(v3 + 24);
      swift_retain();
      swift_retain();
      sub_191E1EA90(v9, v10, a2);
      if (v2) {
        goto LABEL_12;
      }
      swift_release();
      swift_release();
      return sub_191E1D470(a1);
    case 3uLL:
      uint64_t v8 = 0;
      uint64_t v7 = 0;
      goto LABEL_6;
    default:
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
      uint64_t v8 = *a1;
LABEL_6:
      sub_191E1C8F8(v8, v7, a2);
      return sub_191E1D470(a1);
  }
}

double sub_191E1CC08()
{
  OUTLINED_FUNCTION_7_16();
  switch(v2)
  {
    case 1:
      OUTLINED_FUNCTION_15_13();
      if (v8 != v9)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
LABEL_12:
        OUTLINED_FUNCTION_2_39();
        __break(1u);
        JUMPOUT(0x191E1CD34);
      }
      OUTLINED_FUNCTION_3_26();
      uint64_t v10 = OUTLINED_FUNCTION_0_32();
      sub_191E1EB24(v10);
      if (v1) {
        goto LABEL_12;
      }
      double v4 = v11;
      OUTLINED_FUNCTION_2_39();
LABEL_9:
      uint64_t v12 = OUTLINED_FUNCTION_14_11(8, &v22);
      OUTLINED_FUNCTION_22_7(v12, v13, v14, v15, v16, v17, v18, v19, v20);
      return v4;
    case 2:
      uint64_t v5 = *(void *)(v0 + 16);
      swift_retain();
      swift_retain();
      uint64_t v6 = OUTLINED_FUNCTION_23_8();
      sub_191E1EB24(v6);
      if (v5) {
        goto LABEL_11;
      }
      double v4 = v7;
      swift_release();
      swift_release();
      goto LABEL_9;
    case 3:
      *(void *)OUTLINED_FUNCTION_54_0() = 0;
      OUTLINED_FUNCTION_0_1();
      double v4 = 0.0;
      goto LABEL_9;
    default:
      uint64_t v3 = (double *)OUTLINED_FUNCTION_54_0();
      *(void *)uint64_t v3 = v0;
      double v4 = *v3;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
  }
}

void *sub_191E1CD44()
{
  return sub_191E1D20C();
}

uint64_t sub_191E1CD5C()
{
  OUTLINED_FUNCTION_7_16();
  switch(v3)
  {
    case 1:
      OUTLINED_FUNCTION_15_13();
      if (v5 != v6)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
LABEL_12:
        OUTLINED_FUNCTION_2_39();
        __break(1u);
        JUMPOUT(0x191E1CE68);
      }
      OUTLINED_FUNCTION_3_26();
      uint64_t v7 = OUTLINED_FUNCTION_0_32();
      unsigned __int8 v8 = sub_191E1EBBC(v7);
      if (v1) {
        goto LABEL_12;
      }
      char v2 = v8;
      OUTLINED_FUNCTION_2_39();
LABEL_9:
      uint64_t v9 = OUTLINED_FUNCTION_14_11(1, &v19);
      OUTLINED_FUNCTION_22_7(v9, v10, v11, v12, v13, v14, v15, v16, v17);
      return v2 & 1;
    case 2:
      OUTLINED_FUNCTION_6_18();
      swift_retain();
      uint64_t v4 = OUTLINED_FUNCTION_4_22();
      sub_191E1EBBC(v4);
      if (v1) {
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_8_16();
      swift_release();
      goto LABEL_9;
    case 3:
      *(unsigned char *)OUTLINED_FUNCTION_18_9() = 0;
      OUTLINED_FUNCTION_0_1();
      char v2 = 0;
      goto LABEL_9;
    default:
      *(unsigned char *)OUTLINED_FUNCTION_18_9() = v0;
      char v2 = v0 & 1;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
  }
}

uint64_t sub_191E1CE78()
{
  return sub_191E1CE90();
}

uint64_t sub_191E1CE90()
{
  OUTLINED_FUNCTION_7_16();
  switch(v2)
  {
    case 1:
      OUTLINED_FUNCTION_15_13();
      if (v3 != v4)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
LABEL_12:
        OUTLINED_FUNCTION_2_39();
        __break(1u);
        JUMPOUT(0x191E1CF94);
      }
      OUTLINED_FUNCTION_3_26();
      OUTLINED_FUNCTION_0_32();
      sub_191E1EC4C();
      if (v1) {
        goto LABEL_12;
      }
      OUTLINED_FUNCTION_2_39();
LABEL_9:
      uint64_t v5 = OUTLINED_FUNCTION_14_11(1, (uint64_t *)&v14);
      return OUTLINED_FUNCTION_11_13(v5, v6, v7, v8, v9, v10, v11, v12, v14);
    case 2:
      OUTLINED_FUNCTION_6_18();
      swift_retain();
      OUTLINED_FUNCTION_4_22();
      sub_191E1EC4C();
      if (v1) {
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_8_16();
      swift_release();
      goto LABEL_9;
    case 3:
      *(unsigned char *)OUTLINED_FUNCTION_18_9() = 0;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
    default:
      *(unsigned char *)OUTLINED_FUNCTION_18_9() = v0;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
  }
}

uint64_t sub_191E1CFA4()
{
  return sub_191E1CFBC();
}

uint64_t sub_191E1CFBC()
{
  OUTLINED_FUNCTION_7_16();
  switch(v2)
  {
    case 1:
      OUTLINED_FUNCTION_15_13();
      if (v3 != v4)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
LABEL_12:
        OUTLINED_FUNCTION_2_39();
        __break(1u);
        JUMPOUT(0x191E1D0D0);
      }
      OUTLINED_FUNCTION_3_26();
      OUTLINED_FUNCTION_0_32();
      sub_191E1ECBC();
      if (v1) {
        goto LABEL_12;
      }
      OUTLINED_FUNCTION_2_39();
LABEL_9:
      uint64_t v5 = OUTLINED_FUNCTION_14_11(2, (uint64_t *)&v14);
      return OUTLINED_FUNCTION_11_13(v5, v6, v7, v8, v9, v10, v11, v12, v14);
    case 2:
      OUTLINED_FUNCTION_6_18();
      swift_retain();
      OUTLINED_FUNCTION_4_22();
      sub_191E1ECBC();
      if (v1) {
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_8_16();
      swift_release();
      goto LABEL_9;
    case 3:
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
    default:
      *(_WORD *)swift_slowAlloc() = v0;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
  }
}

uint64_t sub_191E1D0E0()
{
  return sub_191E1D0F8();
}

uint64_t sub_191E1D0F8()
{
  OUTLINED_FUNCTION_7_16();
  switch(v2)
  {
    case 1:
      OUTLINED_FUNCTION_15_13();
      if (v3 != v4)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
LABEL_12:
        OUTLINED_FUNCTION_2_39();
        __break(1u);
        JUMPOUT(0x191E1D1FCLL);
      }
      OUTLINED_FUNCTION_3_26();
      OUTLINED_FUNCTION_0_32();
      sub_191E1ED34();
      if (v1) {
        goto LABEL_12;
      }
      OUTLINED_FUNCTION_2_39();
LABEL_9:
      uint64_t v5 = OUTLINED_FUNCTION_14_11(4, (uint64_t *)&v14);
      return OUTLINED_FUNCTION_11_13(v5, v6, v7, v8, v9, v10, v11, v12, v14);
    case 2:
      OUTLINED_FUNCTION_6_18();
      swift_retain();
      OUTLINED_FUNCTION_4_22();
      sub_191E1ED34();
      if (v1) {
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_8_16();
      swift_release();
      goto LABEL_9;
    case 3:
      *(_DWORD *)OUTLINED_FUNCTION_16_10() = 0;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
    default:
      *(_DWORD *)OUTLINED_FUNCTION_16_10() = v0;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
  }
}

void *sub_191E1D20C()
{
  OUTLINED_FUNCTION_7_16();
  switch(v2)
  {
    case 1:
      OUTLINED_FUNCTION_15_13();
      if (v5 != v6)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
LABEL_12:
        OUTLINED_FUNCTION_2_39();
        __break(1u);
        JUMPOUT(0x191E1D324);
      }
      OUTLINED_FUNCTION_3_26();
      OUTLINED_FUNCTION_0_32();
      uint64_t v7 = sub_191E1EDA4();
      if (v1) {
        goto LABEL_12;
      }
      char v3 = v7;
      OUTLINED_FUNCTION_2_39();
LABEL_9:
      uint64_t v8 = OUTLINED_FUNCTION_14_11(8, &v18);
      OUTLINED_FUNCTION_22_7(v8, v9, v10, v11, v12, v13, v14, v15, v16);
      return v3;
    case 2:
      OUTLINED_FUNCTION_6_18();
      swift_retain();
      OUTLINED_FUNCTION_4_22();
      char v4 = sub_191E1EDA4();
      if (v1) {
        goto LABEL_11;
      }
      char v3 = v4;
      swift_release();
      swift_release();
      goto LABEL_9;
    case 3:
      *(void *)OUTLINED_FUNCTION_54_0() = 0;
      OUTLINED_FUNCTION_0_1();
      char v3 = 0;
      goto LABEL_9;
    default:
      *(void *)OUTLINED_FUNCTION_54_0() = v0;
      OUTLINED_FUNCTION_0_1();
      char v3 = v0;
      goto LABEL_9;
  }
}

float sub_191E1D334()
{
  OUTLINED_FUNCTION_7_16();
  switch(v2)
  {
    case 1:
      OUTLINED_FUNCTION_15_13();
      if (v8 != v9)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
LABEL_12:
        OUTLINED_FUNCTION_2_39();
        __break(1u);
        JUMPOUT(0x191E1D460);
      }
      OUTLINED_FUNCTION_3_26();
      uint64_t v10 = OUTLINED_FUNCTION_0_32();
      sub_191E1EE14(v10);
      if (v1) {
        goto LABEL_12;
      }
      float v4 = v11;
      OUTLINED_FUNCTION_2_39();
LABEL_9:
      uint64_t v12 = OUTLINED_FUNCTION_14_11(4, &v22);
      OUTLINED_FUNCTION_22_7(v12, v13, v14, v15, v16, v17, v18, v19, v20);
      return v4;
    case 2:
      uint64_t v5 = *(void *)(v0 + 16);
      swift_retain();
      swift_retain();
      uint64_t v6 = OUTLINED_FUNCTION_23_8();
      sub_191E1EE14(v6);
      if (v5) {
        goto LABEL_11;
      }
      float v4 = v7;
      swift_release();
      swift_release();
      goto LABEL_9;
    case 3:
      *(_DWORD *)OUTLINED_FUNCTION_16_10() = 0;
      OUTLINED_FUNCTION_0_1();
      float v4 = 0.0;
      goto LABEL_9;
    default:
      char v3 = (float *)OUTLINED_FUNCTION_16_10();
      *(_DWORD *)char v3 = v0;
      float v4 = *v3;
      OUTLINED_FUNCTION_0_1();
      goto LABEL_9;
  }
}

uint64_t sub_191E1D470(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *(void *)(*(void *)(sub_191EE7690() - 8) + 64);
  sub_191D76FA0(v2, v3);
  sub_191DE09B4(v4, v2, v3, (uint64_t *)&v8);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *(_OWORD *)a1 = v8;

  return sub_191D76D1C(v5, v6);
}

uint64_t sub_191E1D4FC@<X0>(const void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191EE7690();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (void *)swift_slowAlloc();
  if (a1)
  {
    size_t v7 = *(void *)(v5 + 64);
    if ((v7 & 0x8000000000000000) == 0)
    {
      long long v8 = v6;
      memmove(v6, a1, v7);
      (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(a2, v8, v4);
      return MEMORY[0x192FE9A10](v8, -1, -1);
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = sub_191EE94F0();
  __break(1u);
  return result;
}

void CodableError.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)sub_191EE72F0();
  id v5 = objc_msgSend(v4, sel_domain);
  uint64_t v6 = sub_191EE8110();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(v4, sel_code);
  uint64_t v10 = sub_191E1D79C(v4);

  *a2 = v6;
  a2[1] = v8;
  a2[2] = (uint64_t)v9;
  a2[3] = v10;
}

uint64_t CodableError.domain.getter()
{
  uint64_t v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t CodableError.errorCode.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CodableError.errorUserInfo.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

TeaFoundation::CodableError __swiftcall CodableError.init(_:)(NSError *a1)
{
  unint64_t v3 = v1;
  uint64_t v4 = [(NSError *)a1 domain];
  uint64_t v5 = sub_191EE8110();
  uint64_t v7 = v6;

  NSInteger v8 = [(NSError *)a1 code];
  uint64_t v9 = sub_191E1D79C(a1);

  *unint64_t v3 = v5;
  v3[1] = v7;
  v3[2] = v8;
  v3[3] = v9;
  result.errorUserInfo._rawValue = v13;
  result.errorCode = v12;
  result.domain._unint64_t object = v11;
  result.domain._uint64_t countAndFlagsBits = v10;
  return result;
}

uint64_t sub_191E1D79C(void *a1)
{
  uint64_t v2 = sub_191EE7E50();
  id v3 = objc_msgSend(a1, sel_userInfo);
  uint64_t v4 = sub_191EE7E00();

  sub_191EE8110();
  sub_191DAA034(v4, &v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    if (OUTLINED_FUNCTION_21_7())
    {
      sub_191EE8110();
      swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v8 = v2;
      sub_191D7A4C4();
      uint64_t v2 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_191D9EB34((uint64_t)&v8);
  }
  id v5 = objc_msgSend(a1, sel_userInfo);
  uint64_t v6 = sub_191EE7E00();

  sub_191EE8110();
  sub_191DAA034(v6, &v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    if (OUTLINED_FUNCTION_21_7())
    {
      sub_191EE8110();
      swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v8 = v2;
      sub_191D7A4C4();
      uint64_t v2 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_191D9EB34((uint64_t)&v8);
  }
  return v2;
}

uint64_t CodableError.write(to:)(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t result = String.write(to:)(a1, *v1, v1[1]);
  if (!v2)
  {
    uint64_t v13 = v5;
    uint64_t v7 = sub_191DA8CD0((uint64_t)&v13, (uint64_t)&v14);
    unint64_t v9 = v8;
    sub_191EE7540();
    sub_191D76D1C(v7, v9);
    uint64_t v13 = *(void *)(v4 + 16);
    uint64_t v10 = sub_191DA8CD0((uint64_t)&v13, (uint64_t)&v14);
    unint64_t v12 = v11;
    sub_191EE7540();
    sub_191D76D1C(v10, v12);
    return sub_191E1C310(v4, a1);
  }
  return result;
}

uint64_t static CodableError.read(from:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static String.read(from:)(a1);
  if (!v2)
  {
    uint64_t v7 = result;
    uint64_t v8 = v6;
    unint64_t v9 = sub_191E1D20C();
    uint64_t result = sub_191E1DB64(a1);
    *a2 = v7;
    a2[1] = v8;
    a2[2] = (uint64_t)v9;
    a2[3] = result;
  }
  return result;
}

uint64_t sub_191E1DB64(uint64_t *a1)
{
  uint64_t v4 = sub_191EE8190();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = (uint64_t)sub_191E1D20C();
  if (v2) {
    return (uint64_t)v1;
  }
  uint64_t v6 = v5;
  if (v5 < 0)
  {
    sub_191E1EF20();
    swift_allocError();
    char v8 = 1;
    goto LABEL_6;
  }
  if (sub_191EE7520() < v5)
  {
    sub_191E1EF20();
    swift_allocError();
    char v8 = 2;
LABEL_6:
    *uint64_t v7 = v8;
    swift_willThrow();
    return (uint64_t)v1;
  }
  uint64_t v1 = (void *)MEMORY[0x1E4FBC868];
  if (!v6) {
    return (uint64_t)v1;
  }
  while (1)
  {
    sub_191EAD2C4(a1);
    sub_191EE8170();
    sub_191D65ABC(0, &qword_1EB50D4B8, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBB320]);
    sub_191E1EEAC();
    uint64_t v32 = sub_191EE8140();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (!v11)
    {
      sub_191E1EF20();
      swift_allocError();
      *uint64_t v27 = 0;
      swift_willThrow();
LABEL_23:
      swift_bridgeObjectRelease();
      return (uint64_t)v1;
    }
    sub_191EAD2C4(a1);
    sub_191EE8170();
    uint64_t v12 = sub_191EE8140();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    if (!v14)
    {
      sub_191E1EF20();
      swift_allocError();
      *uint64_t v28 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    uint64_t v29 = v12;
    uint64_t v30 = v14;
    uint64_t v31 = v6;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = sub_191D636F4();
    if (__OFADD__(v1[2], (v16 & 1) == 0)) {
      break;
    }
    unint64_t v17 = v15;
    char v18 = v16;
    sub_191E1EF6C(0, (unint64_t *)&qword_1EB50C078, MEMORY[0x1E4FBBCB8]);
    if (sub_191EE93D0())
    {
      unint64_t v19 = sub_191D636F4();
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_26;
      }
      unint64_t v17 = v19;
    }
    if (v18)
    {
      int64_t v21 = (uint64_t *)(v1[7] + 16 * v17);
      swift_bridgeObjectRelease();
      *int64_t v21 = v29;
      v21[1] = v30;
    }
    else
    {
      v1[(v17 >> 6) + 8] |= 1 << v17;
      uint64_t v22 = (uint64_t *)(v1[6] + 16 * v17);
      *uint64_t v22 = v32;
      v22[1] = v11;
      uint64_t v23 = (uint64_t *)(v1[7] + 16 * v17);
      *uint64_t v23 = v29;
      v23[1] = v30;
      uint64_t v24 = v1[2];
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_25;
      }
      v1[2] = v26;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    --v6;
    if (v31 == 1) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_191EE99B0();
  __break(1u);
  return result;
}

uint64_t sub_191E1DF54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_191EE9770() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x646F43726F727265 && a2 == 0xE900000000000065;
    if (v6 || (sub_191EE9770() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x657355726F727265 && a2 == 0xED00006F666E4972)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_191EE9770();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_191E1E0CC()
{
  return 3;
}

uint64_t sub_191E1E0D4(char a1)
{
  if (!a1) {
    return 0x6E69616D6F64;
  }
  if (a1 == 1) {
    return 0x646F43726F727265;
  }
  return 0x657355726F727265;
}

uint64_t sub_191E1E138()
{
  return sub_191E1E0D4(*v0);
}

uint64_t sub_191E1E140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191E1DF54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191E1E168@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191E1E0CC();
  *a1 = result;
  return result;
}

uint64_t sub_191E1E190(uint64_t a1)
{
  unint64_t v2 = sub_191E1E3F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191E1E1CC(uint64_t a1)
{
  unint64_t v2 = sub_191E1E3F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CodableError.encode(to:)(void *a1)
{
  sub_191E1E688(0, &qword_1E92F3BF8, MEMORY[0x1E4FBBDE0]);
  OUTLINED_FUNCTION_5_25();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)v13 - v7;
  uint64_t v9 = *(void *)(v1 + 16);
  v13[0] = *(void *)(v1 + 24);
  v13[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191E1E3F0();
  sub_191EE9B10();
  char v16 = 0;
  uint64_t v10 = v13[2];
  sub_191EE95B0();
  if (!v10)
  {
    uint64_t v11 = v13[0];
    char v15 = 1;
    sub_191EE95D0();
    v13[3] = v11;
    char v14 = 2;
    sub_191E1EF6C(0, &qword_1E92F3C08, MEMORY[0x1E4FBAEA0]);
    sub_191E1E6EC(&qword_1E92F3C10);
    sub_191EE95E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v2);
}

unint64_t sub_191E1E3F0()
{
  unint64_t result = qword_1E92F3C00;
  if (!qword_1E92F3C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3C00);
  }
  return result;
}

uint64_t CodableError.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_191E1E688(0, &qword_1E92F3C18, MEMORY[0x1E4FBBDC0]);
  OUTLINED_FUNCTION_5_25();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191E1E3F0();
  sub_191EE9AD0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v6 = sub_191EE9540();
  uint64_t v8 = v7;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v12 = sub_191EE9560();
  sub_191E1EF6C(0, &qword_1E92F3C08, MEMORY[0x1E4FBAEA0]);
  sub_191E1E6EC(&qword_1E92F3C20);
  sub_191EE9570();
  uint64_t v10 = OUTLINED_FUNCTION_19_9();
  v11(v10);
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v12;
  a2[3] = v13;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_191E1E688(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_191E1E3F0();
    unint64_t v7 = a3(a1, &type metadata for CodableError.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_191E1E6EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191E1EF6C(255, &qword_1E92F3C08, MEMORY[0x1E4FBAEA0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191E1E768(uint64_t a1)
{
  unint64_t v2 = sub_191E1EA44();

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_191E1E7A4(uint64_t a1)
{
  unint64_t v2 = sub_191E1EA44();

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_191E1E7F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CodableError.init(from:)(a1, a2);
}

uint64_t sub_191E1E808(void *a1)
{
  return CodableError.encode(to:)(a1);
}

uint64_t sub_191E1E820(uint64_t a1)
{
  return CodableError.write(to:)(a1);
}

uint64_t sub_191E1E838@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return static CodableError.read(from:)(a1, a2);
}

unsigned char *storeEnumTagSinglePayload for CodableError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E1E91CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableError.CodingKeys()
{
  return &type metadata for CodableError.CodingKeys;
}

unint64_t sub_191E1E958()
{
  unint64_t result = qword_1E92F3C28;
  if (!qword_1E92F3C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3C28);
  }
  return result;
}

unint64_t sub_191E1E9A8()
{
  unint64_t result = qword_1E92F3C30;
  if (!qword_1E92F3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3C30);
  }
  return result;
}

unint64_t sub_191E1E9F8()
{
  unint64_t result = qword_1E92F3C38;
  if (!qword_1E92F3C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3C38);
  }
  return result;
}

unint64_t sub_191E1EA44()
{
  unint64_t result = qword_1E92F3C40;
  if (!qword_1E92F3C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3C40);
  }
  return result;
}

uint64_t sub_191E1EA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_191EE71E0();
  unint64_t v7 = (char *)result;
  if (result)
  {
    uint64_t result = sub_191EE7200();
    if (__OFSUB__(a1, result)) {
      goto LABEL_7;
    }
    v7 += a1 - result;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_191EE71F0();
    return sub_191E1D4FC(v7, a3);
  }
  __break(1u);
LABEL_7:
  __break(1u);
  return result;
}

void *sub_191E1EB24(uint64_t a1)
{
  uint64_t v2 = sub_191EE71E0();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t result = (void *)sub_191EE7200();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v5 = (void *)(v3 + a1 - (void)result);
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_191EE71F0();
  uint64_t result = (void *)swift_slowAlloc();
  if (v5)
  {
    *uint64_t result = *v5;
    return (void *)MEMORY[0x192FE9A10]();
  }
LABEL_8:
  __break(1u);
  return result;
}

unsigned char *sub_191E1EBBC(uint64_t a1)
{
  uint64_t v2 = sub_191EE71E0();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t result = (unsigned char *)sub_191EE7200();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v5 = (char *)(v3 + a1 - (void)result);
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_191EE71F0();
  uint64_t result = (unsigned char *)swift_slowAlloc();
  if (v5)
  {
    char v6 = *v5;
    *uint64_t result = *v5;
    uint64_t v7 = v6 & 1;
    MEMORY[0x192FE9A10]();
    return (unsigned char *)v7;
  }
LABEL_8:
  __break(1u);
  return result;
}

unsigned char *sub_191E1EC4C()
{
  uint64_t v1 = OUTLINED_FUNCTION_12_14();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t result = (unsigned char *)sub_191EE7200();
    if (__OFSUB__(v0, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    unsigned int v4 = (unsigned __int8 *)(v2 + v0 - (void)result);
  }
  else
  {
    unsigned int v4 = 0;
  }
  sub_191EE71F0();
  uint64_t result = (unsigned char *)OUTLINED_FUNCTION_18_9();
  if (v4)
  {
    uint64_t v5 = *v4;
    *uint64_t result = v5;
    OUTLINED_FUNCTION_0_1();
    return (unsigned char *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

_WORD *sub_191E1ECBC()
{
  uint64_t v1 = OUTLINED_FUNCTION_12_14();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t result = (_WORD *)sub_191EE7200();
    if (__OFSUB__(v0, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    unsigned int v4 = (unsigned __int16 *)(v2 + v0 - (void)result);
  }
  else
  {
    unsigned int v4 = 0;
  }
  sub_191EE71F0();
  uint64_t result = (_WORD *)swift_slowAlloc();
  if (v4)
  {
    uint64_t v5 = *v4;
    *uint64_t result = v5;
    OUTLINED_FUNCTION_0_1();
    return (_WORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

_DWORD *sub_191E1ED34()
{
  uint64_t v1 = OUTLINED_FUNCTION_12_14();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t result = (_DWORD *)sub_191EE7200();
    if (__OFSUB__(v0, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    unsigned int v4 = (unsigned int *)(v2 + v0 - (void)result);
  }
  else
  {
    unsigned int v4 = 0;
  }
  sub_191EE71F0();
  uint64_t result = (_DWORD *)OUTLINED_FUNCTION_16_10();
  if (v4)
  {
    uint64_t v5 = *v4;
    *uint64_t result = v5;
    OUTLINED_FUNCTION_0_1();
    return (_DWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

void *sub_191E1EDA4()
{
  uint64_t v1 = OUTLINED_FUNCTION_12_14();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t result = (void *)sub_191EE7200();
    if (__OFSUB__(v0, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    unsigned int v4 = (uint64_t *)(v2 + v0 - (void)result);
  }
  else
  {
    unsigned int v4 = 0;
  }
  sub_191EE71F0();
  uint64_t result = (void *)OUTLINED_FUNCTION_54_0();
  if (v4)
  {
    uint64_t v5 = *v4;
    *uint64_t result = *v4;
    OUTLINED_FUNCTION_0_1();
    return (void *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

_DWORD *sub_191E1EE14(uint64_t a1)
{
  uint64_t v2 = sub_191EE71E0();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t result = (_DWORD *)sub_191EE7200();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v5 = (_DWORD *)(v3 + a1 - (void)result);
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_191EE71F0();
  uint64_t result = (_DWORD *)swift_slowAlloc();
  if (v5)
  {
    *uint64_t result = *v5;
    return (_DWORD *)MEMORY[0x192FE9A10]();
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_191E1EEAC()
{
  unint64_t result = qword_1EB50D4C0;
  if (!qword_1EB50D4C0)
  {
    sub_191D65ABC(255, &qword_1EB50D4B8, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB50D4C0);
  }
  return result;
}

unint64_t sub_191E1EF20()
{
  unint64_t result = qword_1E92F3C48[0];
  if (!qword_1E92F3C48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92F3C48);
  }
  return result;
}

void sub_191E1EF6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191E1EFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v4 = sub_191EE70D0();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v32 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31)
  {
    unint64_t v12 = 0;
    uint64_t v27 = a1;
    uint64_t v28 = v8 + 16;
    uint64_t v29 = v8;
    uint64_t v30 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v24 = v2;
    BOOL v25 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
    uint64_t v26 = v4;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v14 = *(void *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, a1 + v13 + v14 * v12, v4);
      sub_191EE70B0();
      uint64_t v15 = sub_191EE81C0();
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      sub_191E1033C(v15, v17, v33);
      char v19 = v18;
      swift_bridgeObjectRelease();
      if (v19)
      {
        uint64_t result = (*v25)(v10, v4);
      }
      else
      {
        char v20 = *v30;
        (*v30)(v32, v10, v4);
        uint64_t v21 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191DD3858(0, *(void *)(v21 + 16) + 1, 1);
          uint64_t v21 = v34;
        }
        unint64_t v23 = *(void *)(v21 + 16);
        unint64_t v22 = *(void *)(v21 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_191DD3858(v22 > 1, v23 + 1, 1);
          uint64_t v21 = v34;
        }
        *(void *)(v21 + 16) = v23 + 1;
        uint64_t v4 = v26;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v20)(v21 + v13 + v23 * v14, v32, v26);
        uint64_t v34 = v21;
        a1 = v27;
      }
      ++v12;
      uint64_t v8 = v29;
      if (v31 == v12)
      {
        uint64_t v11 = v34;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

Swift::Bool __swiftcall URL.isHTTPURL()()
{
  sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_2();
  uint64_t v1 = sub_191EE73B0();
  if (v2)
  {
    if (v1 == 1886680168 && v2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = OUTLINED_FUNCTION_2_40();
      v14(v13);
LABEL_16:
      uint64_t v15 = OUTLINED_FUNCTION_5_26();
      v16(v15);
      char v12 = 1;
      return v12 & 1;
    }
    char v4 = sub_191EE9770();
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_2_40();
    v6(v5);
    if (v4) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_2_40();
    v8(v7);
  }
  uint64_t v9 = sub_191EE73B0();
  if (v10)
  {
    if (v9 == 0x7370747468 && v10 == 0xE500000000000000) {
      char v12 = 1;
    }
    else {
      char v12 = sub_191EE9770();
    }
    uint64_t v19 = OUTLINED_FUNCTION_5_26();
    v20(v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_5_26();
    v18(v17);
    char v12 = 0;
  }
  return v12 & 1;
}

Swift::String_optional __swiftcall URL.queryItem(for:)(Swift::String a1)
{
  Swift::String v60 = a1;
  uint64_t v2 = sub_191EE70D0();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  sub_191E1FC98(0, qword_1EB50BB00, MEMORY[0x1E4F26EA0]);
  OUTLINED_FUNCTION_86(v9);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = OUTLINED_FUNCTION_7_17();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v16 - v15;
  sub_191E1FC98(0, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
  uint64_t v19 = OUTLINED_FUNCTION_86(v18);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v55 - v23;
  sub_191EE7120();
  sub_191D7A2BC((uint64_t)v24, (uint64_t)v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v11) == 1)
  {
    BOOL v25 = (void (*)(uint64_t))MEMORY[0x1E4F26ED8];
    sub_191E1F868((uint64_t)v24, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
    uint64_t v26 = (uint64_t)v22;
    uint64_t v27 = (unint64_t *)&qword_1EB50D0B0;
    uint64_t v28 = v25;
LABEL_20:
    sub_191E1F868(v26, v27, v28);
    uint64_t v30 = 0;
    goto LABEL_21;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v17, v22, v11);
  uint64_t v29 = sub_191EE7100();
  uint64_t v30 = v29;
  if (v29)
  {
    unint64_t v58 = v24;
    uint64_t v59 = v17;
    uint64_t v31 = *(void *)(v29 + 16);
    if (v31)
    {
      v55[2] = v13;
      id v55[3] = v11;
      uint64_t v56 = v1;
      uint64_t v57 = v4;
      uint64_t v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
      uint64_t v32 = v4 + 16;
      uint64_t v33 = v34;
      unint64_t v35 = v29 + ((*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64));
      uint64_t v36 = *(void *)(v32 + 56);
      v55[1] = v29;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      while (1)
      {
        v33(v8, v35, v2);
        if (sub_191EE70B0() == v60._countAndFlagsBits && v37 == v60._object) {
          break;
        }
        char v39 = sub_191EE9770();
        swift_bridgeObjectRelease();
        if (v39) {
          goto LABEL_17;
        }
        (*(void (**)(uint64_t, uint64_t))(v32 - 8))(v8, v2);
        v35 += v36;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          uint64_t v40 = 1;
          uint64_t v1 = v56;
          uint64_t v4 = v57;
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRelease();
      uint64_t v43 = (uint64_t)v58;
      uint64_t v1 = v56;
      uint64_t v4 = v57;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v56, v8, v2);
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
LABEL_15:
      uint64_t v43 = (uint64_t)v58;
    }
    __swift_storeEnumTagSinglePayload(v1, v40, 1, v2);
    swift_bridgeObjectRelease();
    uint64_t v44 = OUTLINED_FUNCTION_8_17();
    if (__swift_getEnumTagSinglePayload(v44, v45, v2) != 1)
    {
      uint64_t v30 = sub_191EE70C0();
      uint64_t v48 = v51;
      uint64_t v52 = OUTLINED_FUNCTION_4_23();
      v53(v52);
      sub_191E1F868(v43, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
      goto LABEL_22;
    }
    uint64_t v46 = OUTLINED_FUNCTION_4_23();
    v47(v46);
    sub_191E1F868(v43, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
    uint64_t v27 = qword_1EB50BB00;
    uint64_t v28 = (void (*)(uint64_t))MEMORY[0x1E4F26EA0];
    uint64_t v26 = v1;
    goto LABEL_20;
  }
  uint64_t v41 = OUTLINED_FUNCTION_4_23();
  v42(v41);
  sub_191E1F868((uint64_t)v24, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
LABEL_21:
  uint64_t v48 = 0;
LABEL_22:
  uint64_t v49 = v30;
  uint64_t v50 = v48;
  result.value._unint64_t object = v50;
  result.value._uint64_t countAndFlagsBits = v49;
  return result;
}

uint64_t sub_191E1F868(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_191E1FC98(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t URL.removingQueryItems(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_191EE71B0();
  OUTLINED_FUNCTION_0();
  uint64_t v49 = v14;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_2();
  uint64_t v48 = v17 - v16;
  sub_191E1FC98(0, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
  OUTLINED_FUNCTION_86(v18);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v19);
  uint64_t v50 = (char *)&v44 - v20;
  sub_191E1FC98(0, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
  OUTLINED_FUNCTION_86(v21);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25)
  {
    uint64_t v44 = v2;
    uint64_t v45 = v12;
    uint64_t v46 = v8;
    uint64_t v47 = a2;
    uint64_t v51 = MEMORY[0x1E4FBC860];
    sub_191D6382C();
    uint64_t v26 = v51;
    uint64_t v27 = a1 + 40;
    do
    {
      uint64_t v28 = sub_191EE81C0();
      uint64_t v30 = v29;
      uint64_t v51 = v26;
      unint64_t v31 = *(void *)(v26 + 16);
      if (v31 >= *(void *)(v26 + 24) >> 1)
      {
        sub_191D6382C();
        uint64_t v26 = v51;
      }
      v27 += 16;
      *(void *)(v26 + 16) = v31 + 1;
      uint64_t v32 = v26 + 16 * v31;
      *(void *)(v32 + 32) = v28;
      *(void *)(v32 + 40) = v30;
      --v25;
    }
    while (v25);
    uint64_t v8 = v46;
    a2 = v47;
    uint64_t v3 = v44;
    uint64_t v12 = v45;
  }
  sub_191DC0920();
  uint64_t v34 = v33;
  sub_191EE7120();
  sub_191E1FCEC((uint64_t)v24, v34);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v13)) {
    swift_bridgeObjectRelease();
  }
  else {
    sub_191EE7110();
  }
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v13);
  uint64_t v36 = (uint64_t)v50;
  if (EnumTagSinglePayload)
  {
    uint64_t v37 = OUTLINED_FUNCTION_8_17();
    __swift_storeEnumTagSinglePayload(v37, v38, 1, v6);
  }
  else
  {
    uint64_t v39 = v48;
    uint64_t v40 = v49;
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v48, v24, v13);
    sub_191EE7130();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v13);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v3, v6);
  uint64_t v41 = OUTLINED_FUNCTION_8_17();
  if (__swift_getEnumTagSinglePayload(v41, v42, v6) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a2, v12, v6);
    sub_191E1F868(v36, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a2, v36, v6);
  }
  return sub_191E1F868((uint64_t)v24, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
}

void sub_191E1FC98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191EE8DF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191E1FCEC(uint64_t a1, uint64_t a2)
{
  sub_191E1FC98(0, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-v5];
  uint64_t v7 = sub_191EE71B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_191D7A2BC(a1, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    sub_191E1F868((uint64_t)v6, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v11 = sub_191EE7100();
  if (!v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  uint64_t v12 = v11;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v13 = sub_191E1EFCC(v12, a2);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

Swift::String_optional __swiftcall URL.hashParameter(for:)(Swift::String a1)
{
  uint64_t v2 = sub_191EE70D0();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  sub_191E1FC98(0, qword_1EB50BB00, MEMORY[0x1E4F26EA0]);
  OUTLINED_FUNCTION_86(v9);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_7_17();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_2();
  sub_191EE71A0();
  sub_191EE73E0();
  sub_191EE7160();
  uint64_t v12 = sub_191EE7100();
  uint64_t v13 = v12;
  if (v12)
  {
    uint64_t v14 = *(void *)(v12 + 16);
    if (v14)
    {
      uint64_t v37 = v4;
      uint64_t v17 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
      uint64_t v16 = v4 + 16;
      uint64_t v15 = v17;
      unint64_t v18 = v12 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
      uint64_t v19 = *(void *)(v16 + 56);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      while (1)
      {
        v15(v8, v18, v2);
        if (sub_191EE70B0() == a1._countAndFlagsBits && v20 == a1._object) {
          break;
        }
        char v22 = sub_191EE9770();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_14;
        }
        (*(void (**)(uint64_t, uint64_t))(v16 - 8))(v8, v2);
        v18 += v19;
        if (!--v14)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = 1;
          uint64_t v4 = v37;
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      uint64_t v4 = v37;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v1, v8, v2);
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = 1;
    }
LABEL_15:
    __swift_storeEnumTagSinglePayload(v1, v23, 1, v2);
    swift_bridgeObjectRelease();
    uint64_t v26 = OUTLINED_FUNCTION_8_17();
    if (__swift_getEnumTagSinglePayload(v26, v27, v2) != 1)
    {
      uint64_t v13 = sub_191EE70C0();
      uint64_t v30 = v31;
      uint64_t v32 = OUTLINED_FUNCTION_3_27();
      v33(v32);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
      goto LABEL_19;
    }
    uint64_t v28 = OUTLINED_FUNCTION_3_27();
    v29(v28);
    sub_191E1F868(v1, qword_1EB50BB00, MEMORY[0x1E4F26EA0]);
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v24 = OUTLINED_FUNCTION_3_27();
    v25(v24);
  }
  uint64_t v30 = 0;
LABEL_19:
  uint64_t v34 = v13;
  unint64_t v35 = v30;
  result.value._unint64_t object = v35;
  result.value._uint64_t countAndFlagsBits = v34;
  return result;
}

uint64_t sub_191E201D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  v4[0] = a1;
  v4[1] = a2;
  return a3(v4);
}

uint64_t TestDataLoader.contentDirectory.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t TestDataLoader.__allocating_init(_:contentDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  TestDataLoader.init(_:contentDirectory:)(a1, a2, a3);
  return v6;
}

void *TestDataLoader.init(_:contentDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = *v3;
  sub_191E2059C();
  uint64_t v8 = v7;
  uint64_t v27 = v9;
  (*(void (**)(void))(*(void *)(v26 + 88) + 8))();
  sub_191E20654();
  swift_bridgeObjectRelease();
  uint64_t v25 = v8;
  if (a3)
  {
    sub_191EE8280();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_191E20654();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = v27;
  }
  else
  {
    uint64_t v13 = v27;
    uint64_t v10 = sub_191E20654();
    uint64_t v12 = v14;
  }
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_defaultManager);
  uint64_t v16 = (void *)sub_191EE80E0();
  unsigned int v17 = objc_msgSend(v15, sel_fileExistsAtPath_, v16);

  if (v17)
  {
    uint64_t v18 = OUTLINED_FUNCTION_0_33();
    v19(v18);
    if (a3)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = a3;
      uint64_t v20 = a2;
    }
    else
    {
      uint64_t v20 = v25;
    }
    v4[4] = v20;
    v4[5] = v13;
    void v4[2] = v10;
    v4[3] = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for TestDataLoader.TestDataError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v21 = 0;
    swift_willThrow();
    uint64_t v22 = OUTLINED_FUNCTION_0_33();
    v23(v22);
    swift_deallocPartialClassInstance();
  }
  return v4;
}

void sub_191E2059C()
{
  uint64_t v0 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  uint64_t v1 = sub_191EE8520();

  if (*(void *)(v1 + 16))
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_bridgeObjectRelease();
    sub_191E20654();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_191E20654()
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v1 = sub_191EE8350();
  sub_191EE8260();
  return v1;
}

uint64_t type metadata accessor for TestDataLoader.TestDataError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TestDataLoader.loadDataWithType<A>(_:)()
{
  return Promise.__allocating_init(resolver:)((void (*)(void))sub_191E208A8);
}

void sub_191E20754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a5;
  TestDataLoader.loadData()();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = *(void *)(v13 + 80);
  v14[3] = a6;
  v14[4] = *(void *)(v13 + 88);
  v14[5] = a7;
  v14[6] = a1;
  v14[7] = a2;
  v14[8] = a3;
  v14[9] = a4;
  uint64_t v15 = qword_1EB50EC90;
  swift_retain();
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EB50EC78;
  sub_191DBB838();
  swift_release();
  swift_release();
  swift_release();
}

void sub_191E208A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_191E20754(a1, a2, a3, a4, *(uint64_t **)(v4 + 32), *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t TestDataLoader.loadData()()
{
  return sub_191DAA9FC((void (*)(void))sub_191E20EC8);
}

void sub_191E20908(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v22 = a8;
  uint64_t v23 = a5;
  uint64_t v24 = a4;
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v11 = *(void *)(a7 - 8);
  uint64_t v12 = (uint64_t *)MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v12;
  unint64_t v16 = v12[1];
  type metadata accessor for _TeaJSONDecoder();
  swift_initStackObject();
  _TeaJSONDecoder.init()();
  sub_191D5CB84(a7, v15, v16, a7, a9, (uint64_t)v14);
  swift_release();
  if (v9)
  {
    type metadata accessor for TestDataLoader.TestDataError();
    swift_getWitnessTable();
    unsigned int v17 = (void *)swift_allocError();
    *uint64_t v18 = v9;
    id v19 = v9;
    v24(v17);
  }
  else
  {
    v21(v14);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a7);
  }
}

uint64_t sub_191E20AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v25 = a4;
  uint64_t v23 = a3;
  uint64_t v7 = sub_191EE7C00();
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_191EE7C60();
  uint64_t v10 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_191EE7C10();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  sub_191D5E944();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCB48], v13);
  swift_retain();
  uint64_t v18 = (void *)sub_191EE8D70();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  id v19 = (void *)swift_allocObject();
  uint64_t v20 = v23;
  v19[2] = v24;
  uint64_t v19[3] = v20;
  v19[4] = v25;
  v19[5] = sub_191E21750;
  v19[6] = v17;
  aBlock[4] = sub_191E217D0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191D70378;
  aBlock[3] = &block_descriptor_9;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_191EE7C30();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_191D85870((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  sub_191DE2F58();
  sub_191D85870((unint64_t *)&qword_1EB50E628, (void (*)(uint64_t))sub_191DE2F58);
  sub_191EE9060();
  MEMORY[0x192FE7EF0](0, v12, v9, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  return swift_release();
}

uint64_t sub_191E20EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191E20AD4(a1, a2, a3, a4, v4);
}

void sub_191E20ED0(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(uint64_t, unint64_t))
{
  id v6 = objc_msgSend(self, sel_defaultManager);
  uint64_t v7 = (void *)sub_191EE80E0();
  id v8 = objc_msgSend(v6, sel_contentsAtPath_, v7);

  if (v8)
  {
    uint64_t v9 = sub_191EE7500();
    unint64_t v11 = v10;

    a4(v9, v11);
    sub_191D76D1C(v9, v11);
  }
  else
  {
    type metadata accessor for TestDataLoader.TestDataError();
    swift_getWitnessTable();
    uint64_t v12 = (void *)swift_allocError();
    *uint64_t v13 = 0;
    a2();
  }
}

uint64_t TestDataLoader.syncLoadDataWithType<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v8 = *v4;
  uint64_t v9 = sub_191EE7C90();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
  uint64_t v23 = sub_191EE8DF0();
  uint64_t v13 = swift_allocBox();
  uint64_t v15 = v14;
  __swift_storeEnumTagSinglePayload(v14, 1, 1, a2);
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = v4;
  uint64_t v30 = a1;
  firstly<A>(closure:)(sub_191E21350);
  unint64_t v16 = (void *)swift_allocObject();
  v16[2] = *(void *)(v8 + 80);
  v16[3] = a2;
  v16[4] = *(void *)(v8 + 88);
  v16[5] = a3;
  v16[6] = v13;
  swift_retain();
  uint64_t v17 = (void *)sub_191D73EB4(a2, MEMORY[0x1E4FBC848] + 8);
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v12;
  uint64_t v19 = qword_1EB50EC90;
  uint64_t v20 = v12;
  if (v19 != -1) {
    swift_once();
  }
  id v21 = (id)qword_1EB50EC78;
  sub_191DACC34((uint64_t)v21, (uint64_t)sub_191DB600C, v18);
  swift_release();
  swift_release();
  swift_release();

  sub_191EE7C70();
  sub_191EE8D80();

  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v26, v15);
  return swift_release();
}

uint64_t sub_191E21350()
{
  return TestDataLoader.loadDataWithType<A>(_:)();
}

uint64_t sub_191E21380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_191EE8DF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v9, a1, a4);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, a4);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
}

uint64_t sub_191E214CC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_191E21504(uint64_t a1)
{
  return sub_191E21380(a1, v1[6], v1[2], v1[3]);
}

uint64_t sub_191E21528()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t TestDataLoader.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TestDataLoader.__deallocating_deinit()
{
  TestDataLoader.deinit();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t dispatch thunk of TestDataLocatorType.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191E215D0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TestDataLoader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for TestDataLoader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TestDataLoader);
}

uint64_t dispatch thunk of TestDataLoader.__allocating_init(_:contentDirectory:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *initializeBufferWithCopyOfBuffer for SafeishError(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for SafeishError(id *a1)
{
}

void **assignWithCopy for SafeishError(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for SafeishError(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_191E21718()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191E21750(uint64_t a1, uint64_t a2)
{
  id v3 = *(uint64_t (**)(void *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_191E21788()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_191E217D0()
{
  sub_191E20ED0(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t, unint64_t))(v0 + 40));
}

uint64_t sub_191E217E0()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_191E21820(uint64_t a1)
{
  sub_191E20908(a1, *(void (**)(char *))(v1 + 48), *(void *)(v1 + 56), *(void (**)(void *))(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

double sub_191E21858(uint64_t a1)
{
  swift_getMetatypeMetadata();
  id v2 = objc_allocWithZone((Class)TFKey);
  id v10 = OUTLINED_FUNCTION_1_15((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, a1);
  objc_msgSend(v10, sel_address);

  if (!OUTLINED_FUNCTION_6_19(v11, v12, v13, v14, v15, v16, v17, v18, v21, v22, v23)) {
    return OUTLINED_FUNCTION_1_39();
  }
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_2_41(ObjectType);
  return result;
}

double sub_191E21ADC()
{
  OUTLINED_FUNCTION_11_14();
  swift_getMetatypeMetadata();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v9 = OUTLINED_FUNCTION_1_15((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v0);
  objc_msgSend(v9, sel_address);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  uint64_t v18 = OUTLINED_FUNCTION_7_18(v10, v11, v12, v13, v14, v15, v16, v17, v21, v22, v23);
  swift_bridgeObjectRelease();
  if (!v18) {
    return OUTLINED_FUNCTION_1_39();
  }
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_2_41(ObjectType);
  return result;
}

double sub_191E21DE0()
{
  OUTLINED_FUNCTION_10_17();
  swift_getMetatypeMetadata();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v9 = OUTLINED_FUNCTION_1_15((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v0);
  id v10 = objc_msgSend(v9, sel_address);

  uint64_t v11 = OUTLINED_FUNCTION_29();
  uint64_t v12 = OUTLINED_FUNCTION_3_28(v11);
  OUTLINED_FUNCTION_4_24(v12, (void (*)(void *))sub_191E23438, v13, v14, v15, v16, v17, v18, (uint64_t)v10);
  OUTLINED_FUNCTION_9_12();
  swift_bridgeObjectRelease();
  if (!v9) {
    return OUTLINED_FUNCTION_1_39();
  }
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_2_41(ObjectType);
  return result;
}

double sub_191E22138()
{
  OUTLINED_FUNCTION_5_27();
  swift_getMetatypeMetadata();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v9 = OUTLINED_FUNCTION_1_15((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v0);
  id v10 = objc_msgSend(v9, sel_address);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  uint64_t v11 = OUTLINED_FUNCTION_29();
  uint64_t v12 = OUTLINED_FUNCTION_3_28(v11);
  OUTLINED_FUNCTION_4_24(v12, (void (*)(void *))sub_191E23480, v13, v14, v15, v16, v17, v18, (uint64_t)v10);
  OUTLINED_FUNCTION_9_12();
  swift_bridgeObjectRelease();
  if (!v9) {
    return OUTLINED_FUNCTION_1_39();
  }
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_2_41(ObjectType);
  return result;
}

uint64_t sub_191E2233C(void *a1, void (*a2)(void))
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 104))(v3, v4);
  a2();

  return swift_unknownObjectRelease();
}

_OWORD *sub_191E2258C@<X0>(void *(*a1)(long long *__return_ptr)@<X1>, _OWORD *a2@<X8>)
{
  double result = a1(&v4);
  if (v5) {
    return sub_191D6DA60(&v4, a2);
  }
  __break(1u);
  return result;
}

double sub_191E225D8(void *a1)
{
  sub_191DD667C();
  id v2 = objc_allocWithZone((Class)TFKey);
  id v3 = a1;
  id v11 = OUTLINED_FUNCTION_1_15((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)a1);
  objc_msgSend(v11, sel_address);

  if (!OUTLINED_FUNCTION_6_19(v12, v13, v14, v15, v16, v17, v18, v19, v22, v23, v24)) {
    return OUTLINED_FUNCTION_1_39();
  }
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_2_41(ObjectType);
  return result;
}

double sub_191E22864()
{
  OUTLINED_FUNCTION_10_17();
  sub_191DD667C();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v2 = v0;
  id v10 = OUTLINED_FUNCTION_1_15((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  id v11 = objc_msgSend(v10, sel_address);

  uint64_t v12 = OUTLINED_FUNCTION_29();
  uint64_t v13 = OUTLINED_FUNCTION_3_28(v12);
  OUTLINED_FUNCTION_4_24(v13, (void (*)(void *))sub_191E23480, v14, v15, v16, v17, v18, v19, (uint64_t)v11);
  OUTLINED_FUNCTION_9_12();
  swift_bridgeObjectRelease();
  if (!v10) {
    return OUTLINED_FUNCTION_1_39();
  }
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_2_41(ObjectType);
  return result;
}

_OWORD *sub_191E22BC4@<X0>(void *(*a1)(long long *__return_ptr)@<X3>, _OWORD *a2@<X8>)
{
  double result = a1(&v4);
  if (v5) {
    return sub_191D6DA60(&v4, a2);
  }
  __break(1u);
  return result;
}

double sub_191E22C10()
{
  OUTLINED_FUNCTION_11_14();
  sub_191DD667C();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v2 = v0;
  id v10 = OUTLINED_FUNCTION_1_15((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  objc_msgSend(v10, sel_address);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  uint64_t v19 = OUTLINED_FUNCTION_7_18(v11, v12, v13, v14, v15, v16, v17, v18, v22, v23, v24);
  swift_bridgeObjectRelease();
  if (!v19) {
    return OUTLINED_FUNCTION_1_39();
  }
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_2_41(ObjectType);
  return result;
}

_OWORD *sub_191E22F1C@<X0>(void *(*a1)(long long *__return_ptr)@<X5>, _OWORD *a2@<X8>)
{
  double result = a1(&v4);
  if (v5) {
    return sub_191D6DA60(&v4, a2);
  }
  __break(1u);
  return result;
}

double sub_191E22F68()
{
  OUTLINED_FUNCTION_5_27();
  sub_191DD667C();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v2 = v0;
  id v10 = OUTLINED_FUNCTION_1_15((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  id v11 = objc_msgSend(v10, sel_address);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  uint64_t v12 = OUTLINED_FUNCTION_29();
  uint64_t v13 = OUTLINED_FUNCTION_3_28(v12);
  OUTLINED_FUNCTION_4_24(v13, (void (*)(void *))sub_191E23480, v14, v15, v16, v17, v18, v19, (uint64_t)v11);
  OUTLINED_FUNCTION_9_12();
  swift_bridgeObjectRelease();
  if (!v10) {
    return OUTLINED_FUNCTION_1_39();
  }
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_2_41(ObjectType);
  return result;
}

void sub_191E23340()
{
}

uint64_t type metadata accessor for BridgedResolver()
{
  return self;
}

uint64_t sub_191E233B4()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191E233EC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_191E23400()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191E23438(void *a1)
{
  return sub_191E2233C(a1, *(void (**)(void))(v1 + 16));
}

uint64_t UniqueCollection.array.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t UniqueCollection.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_191EE7DA0();
  uint64_t result = sub_191EE7D90();
  *a1 = v2;
  a1[1] = result;
  return result;
}

void UniqueCollection.append(_:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v1;
  int v4 = v3;
  uint64_t v5 = *(void *)(v1 + 16);
  OUTLINED_FUNCTION_1_2();
  uint64_t v31 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_10_18(v8, v30);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_14();
  MEMORY[0x1F4188790](v10);
  id v11 = *(uint64_t (**)(uint64_t))(*(void *)(v2 + 32) + 8);
  LODWORD(v2) = v4;
  uint64_t v12 = v11;
  uint64_t v13 = OUTLINED_FUNCTION_4_25();
  uint64_t v15 = v14(v13);
  OUTLINED_FUNCTION_21_8(v15, v16);
  MEMORY[0x192FE70E0](v32);
  swift_bridgeObjectRelease();
  uint64_t v17 = OUTLINED_FUNCTION_11_15();
  v18(v17);
  if (v2 == 1)
  {
    uint64_t v19 = OUTLINED_FUNCTION_4_25();
    uint64_t v20 = v12(v19);
    uint64_t v22 = v21;
    uint64_t v23 = *(void (**)(void))(v31 + 16);
    OUTLINED_FUNCTION_9_13();
    v23();
    __swift_storeEnumTagSinglePayload(v0, 0, 1, v5);
    v32[0] = v20;
    v32[1] = v22;
    OUTLINED_FUNCTION_19_10();
    OUTLINED_FUNCTION_27_8();
    OUTLINED_FUNCTION_9_13();
    v23();
    OUTLINED_FUNCTION_20_11();
    sub_191EE8630();
  }
  else
  {
    if (qword_1EB50EE78 != -1) {
      swift_once();
    }
    int v24 = byte_1EB513358;
    sub_191D939DC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191EEB6F0;
    uint64_t v26 = OUTLINED_FUNCTION_4_25();
    uint64_t v27 = v12(v26);
    uint64_t v29 = v28;
    *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 64) = sub_191D93A44();
    *(void *)(inited + 32) = v27;
    *(void *)(inited + 40) = v29;
    if (v24 != 1) {
      OUTLINED_FUNCTION_15_14((uint64_t)"collection must contain unique elements, duplicate=%{public}@");
    }
    swift_setDeallocating();
    sub_191DF53C4();
  }
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall UniqueCollection.append(contentsOf:)(Swift::OpaquePointer contentsOf)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 16);
  OUTLINED_FUNCTION_1_2();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v11 = sub_191EE8530();
  uint64_t v18 = v11;
  if (v11 != MEMORY[0x192FE7810](v2, v4))
  {
    uint64_t v16 = v8;
    while (1)
    {
      char v13 = sub_191EE85E0();
      sub_191EE8570();
      if (v13)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v10, v2+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v11, v4);
      }
      else
      {
        uint64_t v14 = sub_191EE91C0();
        if (v16 != 8)
        {
          __break(1u);
          return;
        }
        uint64_t v17 = v14;
        (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))(v10, &v17, v4);
        swift_unknownObjectRelease();
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x192FE7830](&v18, v2, v4);
      swift_bridgeObjectRelease();
      UniqueCollection.append(_:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v4);
      uint64_t v11 = v18;
      if (v11 == MEMORY[0x192FE7810](v2, v4))
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_36();
        return;
      }
    }
  }
  OUTLINED_FUNCTION_36();
  swift_bridgeObjectRelease();
}

void UniqueCollection.prepend(_:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v1;
  int v4 = v3;
  uint64_t v5 = *(void *)(v1 + 16);
  OUTLINED_FUNCTION_1_2();
  uint64_t v31 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_10_18(v8, v30);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_14();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)(v2 + 32) + 8);
  LODWORD(v2) = v4;
  uint64_t v12 = v11;
  uint64_t v13 = OUTLINED_FUNCTION_4_25();
  uint64_t v15 = v14(v13);
  OUTLINED_FUNCTION_21_8(v15, v16);
  MEMORY[0x192FE70E0](v32);
  swift_bridgeObjectRelease();
  uint64_t v17 = OUTLINED_FUNCTION_11_15();
  v18(v17);
  if (v2 == 1)
  {
    uint64_t v19 = OUTLINED_FUNCTION_4_25();
    uint64_t v20 = v12(v19);
    uint64_t v22 = v21;
    uint64_t v23 = *(void (**)(void))(v31 + 16);
    OUTLINED_FUNCTION_9_13();
    v23();
    __swift_storeEnumTagSinglePayload(v0, 0, 1, v5);
    v32[0] = v20;
    v32[1] = v22;
    OUTLINED_FUNCTION_19_10();
    OUTLINED_FUNCTION_27_8();
    OUTLINED_FUNCTION_9_13();
    v23();
    OUTLINED_FUNCTION_20_11();
    sub_191EE8640();
  }
  else
  {
    if (qword_1EB50EE78 != -1) {
      swift_once();
    }
    int v24 = byte_1EB513358;
    sub_191D939DC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191EEB6F0;
    uint64_t v26 = OUTLINED_FUNCTION_4_25();
    uint64_t v27 = v12(v26);
    uint64_t v29 = v28;
    *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 64) = sub_191D93A44();
    *(void *)(inited + 32) = v27;
    *(void *)(inited + 40) = v29;
    if (v24 != 1) {
      OUTLINED_FUNCTION_15_14((uint64_t)"collection must contain unique elements, duplicate=%{public}@");
    }
    swift_setDeallocating();
    sub_191DF53C4();
  }
  OUTLINED_FUNCTION_36();
}

void UniqueCollection.insert(_:at:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v3 + 16);
  OUTLINED_FUNCTION_1_2();
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v37 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v14 = v13;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_16_11();
  uint64_t v19 = *(uint64_t (**)(uint64_t))(*(void *)(v4 + 32) + 8);
  uint64_t v41 = v6;
  uint64_t v20 = v19;
  uint64_t v21 = OUTLINED_FUNCTION_12_15();
  uint64_t v23 = v22(v21);
  uint64_t v40 = v2;
  uint64_t v24 = *(void *)(v2 + 8);
  uint64_t v42 = v23;
  uint64_t v43 = v25;
  MEMORY[0x192FE70E0](&v42, v24, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  LODWORD(v4) = __swift_getEnumTagSinglePayload(v1, 1, v7);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v12);
  if (v4 == 1)
  {
    uint64_t v26 = OUTLINED_FUNCTION_12_15();
    uint64_t v27 = v20(v26);
    uint64_t v29 = v28;
    uint64_t v30 = *(void (**)(void))(v38 + 16);
    OUTLINED_FUNCTION_28_7();
    v30();
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v7);
    uint64_t v42 = v27;
    uint64_t v43 = v29;
    OUTLINED_FUNCTION_19_10();
    sub_191EE7F40();
    OUTLINED_FUNCTION_28_7();
    v30();
    OUTLINED_FUNCTION_20_11();
    sub_191EE8640();
  }
  else
  {
    if (qword_1EB50EE78 != -1) {
      swift_once();
    }
    int v31 = byte_1EB513358;
    sub_191D939DC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191EEB6F0;
    uint64_t v33 = OUTLINED_FUNCTION_12_15();
    uint64_t v34 = v20(v33);
    uint64_t v36 = v35;
    *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 64) = sub_191D93A44();
    *(void *)(inited + 32) = v34;
    *(void *)(inited + 40) = v36;
    if (v31 != 1) {
      OUTLINED_FUNCTION_15_14((uint64_t)"collection must contain unique elements, duplicate=%{public}@");
    }
    swift_setDeallocating();
    sub_191DF53C4();
  }
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall UniqueCollection.insert(contentsOf:at:)(Swift::OpaquePointer contentsOf, Swift::Int at)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v66 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_2_11();
  uint64_t v59 = v13;
  OUTLINED_FUNCTION_4_4();
  MEMORY[0x1F4188790](v14);
  uint64_t v65 = (char *)&v53 - v15;
  OUTLINED_FUNCTION_1_2();
  uint64_t v17 = v16;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  unint64_t v58 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v56 = v24;
  MEMORY[0x1F4188790](v21);
  uint64_t v67 = (char *)&v53 - v25;
  uint64_t v26 = sub_191EE7DA0();
  uint64_t v75 = v26;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v27 = sub_191EE8530();
  uint64_t v74 = v27;
  if (v27 != MEMORY[0x192FE7810](v8, v9))
  {
    uint64_t v54 = v6;
    uint64_t v69 = *(void *)(v4 + 32);
    uint64_t v71 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8);
    uint64_t v55 = v2;
    uint64_t v28 = v11;
    uint64_t v29 = (uint64_t *)(v2 + 8);
    uint64_t v70 = (void (**)(char *, unint64_t, uint64_t))(v17 + 16);
    BOOL v62 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v61 = v28 + 8;
    uint64_t v60 = v17 + 8;
    long long v57 = xmmword_191EEB6F0;
    uint64_t v64 = v17;
    uint64_t v63 = v8;
    while (1)
    {
      char v30 = sub_191EE85E0();
      sub_191EE8570();
      if (v30)
      {
        unint64_t v31 = v8
            + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
            + *(void *)(v17 + 72) * v27;
        uint64_t v32 = v67;
        uint64_t v68 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
        v68(v67, v31, v9);
      }
      else
      {
        OUTLINED_FUNCTION_25_8();
        uint64_t v52 = sub_191EE91C0();
        if (v56 != 8)
        {
          __break(1u);
          return;
        }
        uint64_t v72 = v52;
        uint64_t v32 = v67;
        uint64_t v68 = *v70;
        v68(v67, (unint64_t)&v72, v9);
        swift_unknownObjectRelease();
      }
      uint64_t v33 = v71;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      OUTLINED_FUNCTION_25_8();
      MEMORY[0x192FE7830]();
      swift_bridgeObjectRelease();
      (*v62)(v23, v32, v9);
      uint64_t v34 = v69;
      uint64_t v35 = v33(v9, v69);
      uint64_t v37 = v36;
      uint64_t v38 = *v29;
      uint64_t v72 = v35;
      uint64_t v73 = v37;
      uint64_t v39 = (uint64_t)v65;
      MEMORY[0x192FE70E0](&v72, v38, MEMORY[0x1E4FBB1A0], v9, MEMORY[0x1E4FBB1B0]);
      swift_bridgeObjectRelease();
      LODWORD(v37) = __swift_getEnumTagSinglePayload(v39, 1, v9);
      OUTLINED_FUNCTION_33();
      v40();
      if (v37 == 1)
      {
        uint64_t v41 = v33(v9, v34);
        uint64_t v43 = v42;
        uint64_t v44 = v59;
        uint64_t v45 = (void (*)(char *, char *, uint64_t))v68;
        v68((char *)v59, (unint64_t)v23, v9);
        __swift_storeEnumTagSinglePayload(v44, 0, 1, v9);
        uint64_t v72 = v41;
        uint64_t v73 = v43;
        sub_191EE7F20();
        sub_191EE7F40();
        v45(v58, v23, v9);
        OUTLINED_FUNCTION_26_8();
        sub_191EE8630();
        uint64_t v17 = v64;
        uint64_t v8 = v63;
      }
      else
      {
        if (qword_1EB50EE78 != -1) {
          swift_once();
        }
        char v46 = byte_1EB513358;
        sub_191D939DC();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v57;
        uint64_t v48 = v71(v9, v69);
        uint64_t v50 = v49;
        *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(inited + 64) = sub_191D93A44();
        *(void *)(inited + 32) = v48;
        *(void *)(inited + 40) = v50;
        uint64_t v17 = v64;
        uint64_t v8 = v63;
        if ((v46 & 1) == 0) {
          sub_191DF8AA4((uint64_t)"collection must contain unique elements, duplicate=%{public}@", 61, 2, inited);
        }
        swift_bridgeObjectRelease();
      }
      OUTLINED_FUNCTION_33();
      v51();
      uint64_t v27 = v74;
      if (v27 == MEMORY[0x192FE7810](v8, v9))
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = v75;
        uint64_t v6 = v54;
        goto LABEL_17;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v72 = v26;
  uint64_t v74 = v6;
  OUTLINED_FUNCTION_26_8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_191EE8C10();
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall UniqueCollection.remove(at:)(Swift::Int at)
{
  OUTLINED_FUNCTION_8_3();
  sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  v10[3] = v3;
  __n128 v10[4] = v2;
  MEMORY[0x1F4188790](v2);
  v10[1] = (char *)v10 - v4;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2_11();
  v10[2] = v6;
  OUTLINED_FUNCTION_4_4();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = *v1;
  uint64_t v11 = v1;
  uint64_t v12 = v8;
  uint64_t v13 = v1[1];
  uint64_t v9 = v13;
  UniqueCollection.startIndex.getter();
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  UniqueCollection.endIndex.getter();
}

uint64_t UniqueCollection.startIndex.getter()
{
  return sub_191EE8530();
}

void UniqueCollection.endIndex.getter()
{
}

void UniqueCollection.removeSubrange<A>(_:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v1;
  sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  v13[6] = v3;
  MEMORY[0x1F4188790](v4);
  v13[14] = (char *)v13 - v5;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_11();
  v13[15] = v7;
  OUTLINED_FUNCTION_4_4();
  MEMORY[0x1F4188790](v8);
  void v13[2] = (char *)v13 - v9;
  uint64_t v14 = *v0;
  uint64_t v10 = v14;
  uint64_t v11 = OUTLINED_FUNCTION_26_8();
  swift_getWitnessTable();
  v13[3] = v11;
  sub_191EE8480();
  void v13[4] = v16;
  uint64_t v12 = v0[1];
  v13[13] = v0 + 1;
  uint64_t v15 = v10;
  uint64_t v16 = v12;
  UniqueCollection.startIndex.getter();
  uint64_t v15 = v10;
  uint64_t v16 = v12;
  v13[11] = v2;
  UniqueCollection.endIndex.getter();
}

Swift::Void __swiftcall UniqueCollection.remove(for:)(Swift::String a1)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v4 = v3;
  uint64_t v31 = v5;
  uint64_t v32 = v6;
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_2_11();
  uint64_t v29 = v12;
  OUTLINED_FUNCTION_4_4();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_1_2();
  uint64_t v33 = v14;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_2_11();
  uint64_t v28 = v16;
  OUTLINED_FUNCTION_4_4();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v28 - v18;
  uint64_t v20 = *v1;
  char v30 = v1;
  uint64_t v21 = v1[1];
  uint64_t v34 = v20;
  uint64_t v35 = v21;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  UniqueCollection.subscript.getter(v31, v32, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v2, 1, v7) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v8);
  }
  else
  {
    uint64_t v32 = v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v19, v2, v7);
    uint64_t v34 = v20;
    uint64_t v35 = v21;
    swift_getWitnessTable();
    sub_191EE8B90();
    OUTLINED_FUNCTION_22_8();
    if (v22)
    {
      OUTLINED_FUNCTION_33();
      v23();
    }
    else
    {
      uint64_t v34 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 32) + 8))(v7);
      uint64_t v35 = v24;
      OUTLINED_FUNCTION_19_10();
      uint64_t v25 = v29;
      sub_191EE7E20();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v32);
      OUTLINED_FUNCTION_20_11();
      uint64_t v26 = v28;
      sub_191EE8650();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v27(v26, v7);
      v27((uint64_t)v19, v7);
    }
  }
  OUTLINED_FUNCTION_36();
}

uint64_t UniqueCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 8);
  v7[0] = a1;
  v7[1] = a2;
  uint64_t v5 = *(void *)(a3 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  MEMORY[0x192FE70E0](v7, v4, MEMORY[0x1E4FBB1A0], v5, MEMORY[0x1E4FBB1B0]);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall UniqueCollection.removeAll()()
{
  sub_191EE7F20();
  sub_191EE7F10();
  OUTLINED_FUNCTION_26_8();

  sub_191EE8690();
}

void UniqueCollection.replace(_:with:)()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = OUTLINED_FUNCTION_3_29(v2, v8);
  v4(v3);
  swift_getWitnessTable();
  OUTLINED_FUNCTION_7_19();
  uint64_t v5 = OUTLINED_FUNCTION_6_20();
  v6(v5);
  if (v0)
  {
    swift_getWitnessTable();
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_22_8();
    if (!v7) {
      OUTLINED_FUNCTION_24_8();
    }
    OUTLINED_FUNCTION_36();
  }
  else
  {
    __break(1u);
  }
}

void UniqueCollection.replace(_:withContentsOf:)()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = OUTLINED_FUNCTION_3_29(v2, v8);
  v4(v3);
  swift_getWitnessTable();
  OUTLINED_FUNCTION_7_19();
  uint64_t v5 = OUTLINED_FUNCTION_6_20();
  v6(v5);
  if (v0)
  {
    swift_getWitnessTable();
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_22_8();
    if (!v7) {
      OUTLINED_FUNCTION_24_8();
    }
    OUTLINED_FUNCTION_36();
  }
  else
  {
    __break(1u);
  }
}

Swift::Bool __swiftcall UniqueCollection.contains(identifier:)(Swift::String identifier)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v17 - v13;
  uint64_t v15 = v1[1];
  v17[0] = *v1;
  v17[1] = v15;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  UniqueCollection.subscript.getter(v7, v5, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  OUTLINED_FUNCTION_36();
  return result;
}

void UniqueCollection.move(_:to:)()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = OUTLINED_FUNCTION_3_29(v2, v8);
  v4(v3);
  swift_getWitnessTable();
  OUTLINED_FUNCTION_7_19();
  uint64_t v5 = OUTLINED_FUNCTION_6_20();
  v6(v5);
  if (v0)
  {
    swift_getWitnessTable();
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_22_8();
    if (!v7) {
      UniqueCollection.remove(at:)(v9);
    }
    OUTLINED_FUNCTION_36();
  }
  else
  {
    __break(1u);
  }
}

void UniqueCollection.subscript.getter()
{
}

uint64_t sub_191E2527C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (a1 < v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 > v1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a1 <= v1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  return sub_191EE86F0();
}

Swift::Int __swiftcall UniqueCollection.index(after:)(Swift::Int after)
{
  return MEMORY[0x1F4183F48](after, *v2, *(void *)(v1 + 16));
}

uint64_t sub_191E25300@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UniqueCollection.startIndex.getter();
  *a1 = result;
  return result;
}

void sub_191E25328()
{
}

uint64_t sub_191E25340(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

void sub_191E25350(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  sub_191E25408(v6, *a2, a3);
}

void (*sub_191E25390(uint64_t a1))(void *a1)
{
  *(void *)(v1 + 32) = a1;
  return sub_191E253C0;
}

void sub_191E253C0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void sub_191E25408(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = *(void *)(a3 + 16);
  OUTLINED_FUNCTION_1_2();
  *(void *)(v4 + 8) = v5;
  a1[2] = malloc(*(void *)(v6 + 64));
  UniqueCollection.subscript.getter();
}

void (*sub_191E2546C())(void *a1)
{
  return sub_191E2549C;
}

void sub_191E2549C(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

void sub_191E254F0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

Swift::Int sub_191E25500@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = UniqueCollection.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_191E2552C(Swift::Int *a1)
{
  Swift::Int result = UniqueCollection.index(after:)(*a1);
  *a1 = result;
  return result;
}

__n128 sub_191E25558@<Q0>(__n128 *a1@<X8>)
{
  __n128 v5 = *v1;
  uint64_t v3 = UniqueCollection.startIndex.getter();
  __n128 result = v5;
  *a1 = v5;
  a1[1].n128_u64[0] = v3;
  return result;
}

uint64_t sub_191E25598(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_191E255EC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t _s13TeaFoundation16UniqueCollectionV12arrayLiteralACyxGxd_tcfC_0@<X0>(Swift::OpaquePointer a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_191EE7DA0();
  a2[1] = sub_191EE7D90();
  type metadata accessor for UniqueCollection();
  UniqueCollection.append(contentsOf:)(a1);

  return swift_bridgeObjectRelease();
}

void UniqueCollection.init(keepingFirstUniqueFrom:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v22 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v12;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_16_11();
  uint64_t v14 = sub_191EE7DA0();
  *(void *)&long long v25 = v14;
  uint64_t v15 = sub_191EE7D90();
  *((void *)&v25 + 1) = v15;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v16 = sub_191EE8530();
  swift_bridgeObjectRelease();
  uint64_t v24 = v16;
  if (v16 != MEMORY[0x192FE7810](v5, v3))
  {
    uint64_t v19 = v7;
    uint64_t v21 = (void (**)(uint64_t, long long *, uint64_t))(v9 + 16);
    while (1)
    {
      char v17 = sub_191EE85E0();
      sub_191EE8570();
      if (v17)
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v0, v5+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v16, v3);
      }
      else
      {
        uint64_t v18 = sub_191EE91C0();
        if (v20 != 8)
        {
          __break(1u);
          return;
        }
        *(void *)&long long v23 = v18;
        (*v21)(v0, &v23, v3);
        swift_unknownObjectRelease();
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x192FE7830](&v24, v5, v3);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v13, v0, v3);
      long long v23 = v25;
      type metadata accessor for UniqueCollection();
      swift_getWitnessTable();
      if ((sub_191EE8470() & 1) == 0) {
        UniqueCollection.append(_:)();
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v3);
      uint64_t v16 = v24;
      if (v16 == MEMORY[0x192FE7810](v5, v3))
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = *((void *)&v25 + 1);
        uint64_t v14 = v25;
        char v7 = v19;
        goto LABEL_12;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_12:
  *char v7 = v14;
  v7[1] = v15;
  OUTLINED_FUNCTION_36();
}

uint64_t sub_191E259B4(uint64_t a1, void *a2)
{
  return UniqueCollection.init(arrayLiteral:)(a1, a2[2], a2[3], a2[4]);
}

uint64_t static UniqueCollection.== infix(_:_:)(void *a1, void *a2)
{
  return MEMORY[0x1F4183FC8](*a1, *a2);
}

uint64_t sub_191E259D0(void *a1, void *a2)
{
  return static UniqueCollection.== infix(_:_:)(a1, a2);
}

uint64_t UniqueCollection.description.getter()
{
  return sub_191EE81B0();
}

uint64_t sub_191E25A50()
{
  return swift_getWitnessTable();
}

uint64_t sub_191E25A6C()
{
  return MEMORY[0x1E4FBB568];
}

id zalgoIfMain.getter()
{
  return sub_191D5A114(&qword_1EB50E548, (void **)&qword_1EB50E4A8);
}

id zalgoIfNotMainElseUserInitiated.getter()
{
  return sub_191D5A114(&qword_1EB50E490, (void **)&qword_1EB50E488);
}

void sub_191E25AC4(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = sub_191EE7C10();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = v9 - v8;
  if (qword_1EB50EC90 != -1) {
    swift_once();
  }
  if (qword_1EB50EC78 == a1) {
    goto LABEL_16;
  }
  if (qword_1EB50E548 != -1) {
    swift_once();
  }
  if (qword_1EB50E4A8 == a1 && ([self (SEL)0x1F7194901] & 1) != 0) {
    goto LABEL_16;
  }
  if (qword_1EB50E490 != -1) {
    swift_once();
  }
  if (qword_1EB50E488 != a1)
  {
    if (qword_1EB50E4A8 != a1)
    {
      OUTLINED_FUNCTION_7_20();
      return;
    }
    goto LABEL_17;
  }
  if (([self (SEL)0x1F7194901] & 1) == 0)
  {
LABEL_16:
    a2();
    return;
  }
  if (qword_1EB50E4A8 == a1)
  {
LABEL_17:
    sub_191D5E944();
    uint64_t v11 = (void *)sub_191EE8D20();
    goto LABEL_18;
  }
  sub_191D5E944();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v10, *MEMORY[0x1E4FBCB28], v4);
  uint64_t v11 = (void *)sub_191EE8D70();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
LABEL_18:
  OUTLINED_FUNCTION_7_20();
}

uint64_t sub_191E25D8C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E25DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_191D90458(a1, a2, a3, a4, a5, a6);
}

uint64_t SignpostRecorder.init(createdDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(int *)(type metadata accessor for SignpostRecorder() + 28);
  type metadata accessor for Signpost();
  *(void *)(a2 + v4) = sub_191EE7DA0();
  uint64_t v5 = sub_191EE7640();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(a2, a1, v5);
}

uint64_t type metadata accessor for SignpostRecorder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SignpostRecorder.mark(comment:createdDate:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v38 = a3;
  uint64_t v44 = a2;
  uint64_t v42 = a1;
  uint64_t v43 = *(void *)(a4 + 16);
  uint64_t v7 = type metadata accessor for Signpost();
  sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v35 = v9;
  uint64_t v36 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - v10;
  sub_191DA6970(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_191EE7640();
  OUTLINED_FUNCTION_1_2();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_2_11();
  uint64_t v41 = v19;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_2();
  uint64_t v22 = v21;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_2_11();
  uint64_t v39 = v24;
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v34 - v27;
  uint64_t v34 = v17;
  uint64_t v29 = *(void (**)(void))(v17 + 16);
  uint64_t v40 = v26;
  OUTLINED_FUNCTION_2_44();
  v29();
  char v30 = (void *)(v5 + *(int *)(a4 + 28));
  uint64_t v37 = v5;
  uint64_t v38 = v30;
  uint64_t v45 = *v30;
  sub_191EE86B0();
  swift_getWitnessTable();
  sub_191EE7FD0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v15);
  }
  else
  {
    OUTLINED_FUNCTION_2_44();
    v29();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v15);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) != 1)
    {
      uint64_t v31 = v41;
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v41, v14, v15);
      goto LABEL_6;
    }
  }
  uint64_t v31 = v41;
  OUTLINED_FUNCTION_2_44();
  v29();
  sub_191E26220((uint64_t)v14);
LABEL_6:
  uint64_t v32 = v44;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191D9DDC4(v40, v31, v42, v32, (uint64_t)v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v39, v28, v7);
  sub_191EE8630();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v28, v7);
}

uint64_t sub_191E26220(uint64_t a1)
{
  sub_191DA6970(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191E2627C()
{
  uint64_t result = sub_191EE7640();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191E26314(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191EE7640();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_191E263E4(uint64_t a1)
{
  uint64_t v2 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_191E26458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_191E264D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191E26564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_191E265E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191E26664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191E26678);
}

uint64_t sub_191E26678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_191E26704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191E26718);
}

void sub_191E26718(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

TeaFoundation::VersionNumber __swiftcall VersionNumber.init(_:)(TeaFoundation::VersionNumber result)
{
  v1->numbers._rawValue = result.numbers._rawValue;
  return result;
}

TeaFoundation::VersionNumber_optional __swiftcall VersionNumber.init(_:)(Swift::String a1)
{
  unint64_t object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  unint64_t i = v1;
  uint64_t v28 = 46;
  uint64_t v29 = 0xE100000000000000;
  uint64_t v26 = &v28;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  int v5 = (void *)sub_191D66888(0x7FFFFFFFFFFFFFFFLL, 0, (uint64_t (*)(uint64_t))sub_191D66C6C, (uint64_t)v25, countAndFlagsBits, (unint64_t)object);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5[2];
  if (v6)
  {
    unint64_t v8 = v5[4];
    unint64_t v7 = v5[5];
    if ((v7 ^ v8) >= 0x4000)
    {
      unint64_t v24 = i;
      uint64_t v9 = v5 + 7;
      uint64_t v10 = MEMORY[0x1E4FBC860];
      for (unint64_t i = 1; ; ++i)
      {
        unint64_t v12 = *(v9 - 1);
        unint64_t v11 = *v9;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        if ((v11 & 0x1000000000000000) != 0)
        {
          uint64_t v15 = (uint64_t)sub_191E27318(v8, v7, v12, v11, 10);
          char v17 = v19;
        }
        else
        {
          if ((v11 & 0x2000000000000000) != 0)
          {
            uint64_t v14 = HIBYTE(v11) & 0xF;
            uint64_t v28 = v12;
            uint64_t v29 = v11 & 0xFFFFFFFFFFFFFFLL;
            uint64_t v13 = &v28;
          }
          else if ((v12 & 0x1000000000000000) != 0)
          {
            uint64_t v13 = (uint64_t *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
            uint64_t v14 = v12 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            uint64_t v13 = (uint64_t *)sub_191EE9270();
          }
          uint64_t v15 = sub_191E279F0((uint64_t)v13, v14, v8, v7, v12, v11, 10);
          char v27 = v16 & 1;
          char v17 = v16 & 1;
        }
        swift_bridgeObjectRelease();
        if (v17)
        {
LABEL_22:
          unint64_t i = v24;
          goto LABEL_23;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191DCBE74();
          uint64_t v10 = v20;
        }
        unint64_t v18 = *(void *)(v10 + 16);
        if (v18 >= *(void *)(v10 + 24) >> 1)
        {
          sub_191DCBE74();
          uint64_t v10 = v21;
        }
        *(void *)(v10 + 16) = v18 + 1;
        *(void *)(v10 + 8 * v18 + 32) = v15;
        if (v6 == i)
        {
          unint64_t i = v24;
          goto LABEL_25;
        }
        if (i >= v5[2]) {
          break;
        }
        unint64_t v8 = v9[1];
        unint64_t v7 = v9[2];
        if ((v7 ^ v8) < 0x4000) {
          goto LABEL_22;
        }
        v9 += 4;
      }
      __break(1u);
    }
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_25:
  uint64_t v22 = (void *)swift_bridgeObjectRelease();
  if (!*(void *)(v10 + 16))
  {
LABEL_26:
    uint64_t v22 = (void *)swift_bridgeObjectRelease();
    uint64_t v10 = 0;
  }
  *(void *)unint64_t i = v10;
  result.value.numbers._rawValue = v22;
  result.is_nil = v23;
  return result;
}

BOOL static VersionNumber.< infix(_:_:)(BOOL result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)result + 16);
  unint64_t v3 = *(void *)(*(void *)a2 + 16);
  if (v3 <= v2) {
    uint64_t v4 = *(void *)(*(void *)result + 16);
  }
  else {
    uint64_t v4 = *(void *)(*(void *)a2 + 16);
  }
  if (!v4) {
    return 0;
  }
  unint64_t v5 = 0;
  uint64_t v6 = *(void *)result + 32;
  while (1)
  {
    if (v5 >= v2)
    {
      if (v5 >= v3) {
        goto LABEL_14;
      }
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5);
      if (v5 >= v3)
      {
        if (v7)
        {
          uint64_t v8 = 0;
          return v7 < v8;
        }
        goto LABEL_14;
      }
    }
    if (v5 >= v3) {
      break;
    }
    uint64_t v8 = *(void *)(*(void *)a2 + 32 + 8 * v5);
    if (v7 != v8)
    {
      if (v5 >= v2) {
        uint64_t v7 = 0;
      }
      else {
        uint64_t v7 = *(void *)(v6 + 8 * v5);
      }
      return v7 < v8;
    }
LABEL_14:
    if (v4 == ++v5) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

void sub_191E26AA8()
{
  qword_1E92F3D40 = (uint64_t)&unk_1EE2B3548;
}

uint64_t static VersionNumber.min.getter@<X0>(void *a1@<X8>)
{
  return sub_191E26B18(&qword_1E92F2C78, &qword_1E92F3D40, a1);
}

void sub_191E26AE0()
{
  qword_1E92F3D48 = (uint64_t)&unk_1EE2B3520;
}

uint64_t static VersionNumber.max.getter@<X0>(void *a1@<X8>)
{
  return sub_191E26B18(qword_1E92F2C80, &qword_1E92F3D48, a1);
}

uint64_t sub_191E26B18@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t VersionNumber.numbers.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t VersionNumber.major.getter()
{
  if (*(void *)(*(void *)v0 + 16)) {
    return *(void *)(*(void *)v0 + 32);
  }
  else {
    return OUTLINED_FUNCTION_67();
  }
}

uint64_t VersionNumber.subscript.getter(uint64_t result)
{
  if (*(void *)(*(void *)v1 + 16) <= result) {
    return OUTLINED_FUNCTION_67();
  }
  if ((result & 0x8000000000000000) == 0) {
    return *(void *)(*(void *)v1 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t VersionNumber.minor.getter()
{
  if (*(void *)(*(void *)v0 + 16) < 2uLL) {
    return OUTLINED_FUNCTION_67();
  }
  else {
    return *(void *)(*(void *)v0 + 40);
  }
}

uint64_t VersionNumber.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

TeaFoundation::VersionNumber_optional __swiftcall VersionNumber.init(_:)(Swift::String_optional a1)
{
  unint64_t v2 = v1;
  if (a1.value._object)
  {
    *(TeaFoundation::VersionNumber_optional *)&a1.value._uint64_t countAndFlagsBits = VersionNumber.init(_:)(a1.value);
    uint64_t v3 = v4;
  }
  else
  {
    uint64_t v3 = 0;
  }
  *unint64_t v2 = v3;
  return *(TeaFoundation::VersionNumber_optional *)&a1.value._countAndFlagsBits;
}

uint64_t VersionNumber.description.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D6382C();
    sub_191DD7C64();
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = sub_191EE8FA0();
      uint64_t v5 = v4;
      unint64_t v6 = *(void *)(v10 + 16);
      if (v6 >= *(void *)(v10 + 24) >> 1) {
        sub_191D6382C();
      }
      ++v2;
      *(void *)(v10 + 16) = v6 + 1;
      uint64_t v7 = v10 + 16 * v6;
      *(void *)(v7 + 32) = v3;
      *(void *)(v7 + 40) = v5;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  sub_191D78A5C();
  sub_191D788B0();
  uint64_t v8 = sub_191EE7FE0();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t static VersionNumber.== infix(_:_:)(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)result + 16);
  unint64_t v3 = *(void *)(*(void *)a2 + 16);
  if (v3 <= v2) {
    uint64_t v4 = *(void *)(*(void *)result + 16);
  }
  else {
    uint64_t v4 = *(void *)(*(void *)a2 + 16);
  }
  if (!v4) {
    return 1;
  }
  unint64_t v5 = 0;
  while (1)
  {
    if (v5 >= v2)
    {
      if (v5 >= v3) {
        goto LABEL_14;
      }
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v6 = *(void *)(*(void *)result + 32 + 8 * v5);
      if (v5 >= v3)
      {
        if (v6) {
          return 0;
        }
        goto LABEL_14;
      }
    }
    if (v5 >= v3) {
      break;
    }
    if (v6 != *(void *)(*(void *)a2 + 32 + 8 * v5)) {
      return 0;
    }
LABEL_14:
    if (v4 == ++v5) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_191E26DF0(uint64_t *a1, uint64_t *a2)
{
  return sub_191ED6A84(*a1, *a2);
}

BOOL sub_191E26DFC(uint64_t *a1, uint64_t *a2)
{
  return sub_191EA3DE0(*a1, *a2);
}

BOOL sub_191E26E08(uint64_t *a1, uint64_t *a2)
{
  return sub_191EA3EA0(*a1, *a2);
}

uint64_t sub_191E26E1C()
{
  unint64_t v0 = sub_191E26E88();
  uint64_t v4 = sub_191E26EBC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_191E26E88()
{
  return sub_191EE8360();
}

uint64_t sub_191E26EBC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_191E27014(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unint64_t v11 = sub_191D773AC(v9, 0);
      unint64_t v12 = sub_191E27114((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_191EE9270();
LABEL_4:
        JUMPOUT(0x192FE73A0);
      }
    }
    else
    {
      unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x192FE73A0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x192FE73A0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_191E27014(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    TeaFoundation::VersionNumber_optional result = sub_191DD8774(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    TeaFoundation::VersionNumber_optional result = sub_191DD8774(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_191EE82D0();
}

unint64_t sub_191E27114(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    TeaFoundation::VersionNumber_optional result = v12;
    if ((v12 & 0xC) == v15) {
      TeaFoundation::VersionNumber_optional result = sub_191DD8774(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      TeaFoundation::VersionNumber_optional result = sub_191EE82E0();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        TeaFoundation::VersionNumber_optional result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          TeaFoundation::VersionNumber_optional result = sub_191EE9270();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      TeaFoundation::VersionNumber_optional result = sub_191DD8774(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_191EE82B0();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unsigned __int8 *sub_191E27318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_191E27E94();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v7 = sub_191EE8350();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_191E26E1C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_191EE9270();
  }
LABEL_7:
  uint64_t v13 = sub_191E274F4(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_191E2740C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v5 = sub_191EE8350();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_191E26E1C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_191EE9270();
  }
LABEL_7:
  unint64_t v11 = sub_191E27770(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_191E274F4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          char v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (unint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_191E27770(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unsigned int v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_191E279F0(uint64_t result, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v11 = a3;
  uint64_t v12 = result;
  uint64_t v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v13) = 1;
  }
  uint64_t v14 = 4 << v13;
  unint64_t v15 = a3 & 0xC;
  unint64_t v16 = a3;
  if (v15 == 4 << v13)
  {
    TeaFoundation::VersionNumber_optional result = sub_191DD8774(a3, a5, a6);
    unint64_t v16 = result;
  }
  uint64_t v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    unint64_t v19 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v19 = HIBYTE(a6) & 0xF;
    }
    if (v19 < v16 >> 16) {
      goto LABEL_96;
    }
    TeaFoundation::VersionNumber_optional result = sub_191EE82D0();
    uint64_t v18 = result;
    uint64_t v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    uint64_t v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    uint64_t v20 = v17;
    TeaFoundation::VersionNumber_optional result = sub_191DD8774(v11, a5, a6);
    uint64_t v17 = v20;
    unint64_t v11 = result;
  }
  if ((a4 & 0xC) == v14)
  {
    unint64_t v21 = a4;
    uint64_t v22 = v17;
    TeaFoundation::VersionNumber_optional result = sub_191DD8774(v21, a5, a6);
    uint64_t v17 = v22;
    a4 = result;
    if ((a6 & 0x1000000000000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    TeaFoundation::VersionNumber_optional result = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  unint64_t v23 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0) {
    unint64_t v23 = v17;
  }
  if (v23 < v11 >> 16) {
    goto LABEL_92;
  }
  if (v23 < a4 >> 16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  TeaFoundation::VersionNumber_optional result = sub_191EE82D0();
LABEL_22:
  uint64_t v24 = v18 + result;
  if (__OFADD__(v18, result))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v24 < v18)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unsigned __int8 v25 = (unsigned __int8 *)(v12 + v18);
  if (!v12) {
    unsigned __int8 v25 = 0;
  }
  int v26 = *v25;
  if (v26 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v37 = a7 + 48;
        unsigned __int8 v38 = a7 + 55;
        unsigned __int8 v39 = a7 + 87;
        if (a7 > 10)
        {
          unsigned __int8 v37 = 58;
        }
        else
        {
          unsigned __int8 v39 = 97;
          unsigned __int8 v38 = 65;
        }
        if (v25)
        {
          uint64_t v30 = 0;
          uint64_t v40 = v25 + 1;
          uint64_t v41 = result - 1;
          do
          {
            unsigned int v42 = *v40;
            if (v42 < 0x30 || v42 >= v37)
            {
              if (v42 < 0x41 || v42 >= v38)
              {
                uint64_t v35 = 0;
                if (v42 < 0x61 || v42 >= v39) {
                  return v35;
                }
                char v43 = -87;
              }
              else
              {
                char v43 = -55;
              }
            }
            else
            {
              char v43 = -48;
            }
            uint64_t v44 = v30 * a7;
            if ((unsigned __int128)(v30 * (__int128)a7) >> 64 != (v30 * a7) >> 63) {
              return 0;
            }
            uint64_t v30 = v44 + (v42 + v43);
            if (__OFADD__(v44, (v42 + v43))) {
              return 0;
            }
            ++v40;
            --v41;
          }
          while (v41);
          return v30;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_95;
  }
  if (v26 != 45)
  {
    if (v24 != v18)
    {
      unsigned __int8 v45 = a7 + 48;
      unsigned __int8 v46 = a7 + 55;
      unsigned __int8 v47 = a7 + 87;
      if (a7 > 10)
      {
        unsigned __int8 v45 = 58;
      }
      else
      {
        unsigned __int8 v47 = 97;
        unsigned __int8 v46 = 65;
      }
      if (v25)
      {
        uint64_t v48 = 0;
        do
        {
          unsigned int v49 = *v25;
          if (v49 < 0x30 || v49 >= v45)
          {
            if (v49 < 0x41 || v49 >= v46)
            {
              uint64_t v35 = 0;
              if (v49 < 0x61 || v49 >= v47) {
                return v35;
              }
              char v50 = -87;
            }
            else
            {
              char v50 = -55;
            }
          }
          else
          {
            char v50 = -48;
          }
          uint64_t v51 = v48 * a7;
          if ((unsigned __int128)(v48 * (__int128)a7) >> 64 != (v48 * a7) >> 63) {
            return 0;
          }
          uint64_t v48 = v51 + (v49 + v50);
          if (__OFADD__(v51, (v49 + v50))) {
            return 0;
          }
          ++v25;
          --result;
        }
        while (result);
        return v51 + (v49 + v50);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v27 = a7 + 48;
      unsigned __int8 v28 = a7 + 55;
      unsigned __int8 v29 = a7 + 87;
      if (a7 > 10)
      {
        unsigned __int8 v27 = 58;
      }
      else
      {
        unsigned __int8 v29 = 97;
        unsigned __int8 v28 = 65;
      }
      if (v25)
      {
        uint64_t v30 = 0;
        unint64_t v31 = v25 + 1;
        uint64_t v32 = result - 1;
        while (1)
        {
          unsigned int v33 = *v31;
          if (v33 < 0x30 || v33 >= v27)
          {
            if (v33 < 0x41 || v33 >= v28)
            {
              uint64_t v35 = 0;
              if (v33 < 0x61 || v33 >= v29) {
                return v35;
              }
              char v34 = -87;
            }
            else
            {
              char v34 = -55;
            }
          }
          else
          {
            char v34 = -48;
          }
          uint64_t v36 = v30 * a7;
          if ((unsigned __int128)(v30 * (__int128)a7) >> 64 != (v30 * a7) >> 63) {
            return 0;
          }
          uint64_t v30 = v36 - (v33 + v34);
          if (__OFSUB__(v36, (v33 + v34))) {
            return 0;
          }
          ++v31;
          if (!--v32) {
            return v30;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

unint64_t sub_191E27E38()
{
  unint64_t result = qword_1E92F3D50;
  if (!qword_1E92F3D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3D50);
  }
  return result;
}

ValueMetadata *type metadata accessor for VersionNumber()
{
  return &type metadata for VersionNumber;
}

unint64_t sub_191E27E94()
{
  unint64_t result = qword_1E92F3D58;
  if (!qword_1E92F3D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3D58);
  }
  return result;
}

uint64_t ProxyContainer.__allocating_init(publicContainer:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ProxyContainer.init(publicContainer:)(a1);
  return v2;
}

id sub_191E27F20()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (objc_class *)type metadata accessor for BridgedRegistrationContainer();
  int v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC13TeaFoundation28BridgedRegistrationContainer_registrationContainer] = v1;
  v16.receiver = v3;
  v16.super_class = v2;
  swift_retain();
  id v4 = objc_msgSendSuper2(&v16, sel_init);
  uint64_t v5 = v0[3];
  unsigned __int8 v6 = (char *)objc_allocWithZone(v2);
  *(void *)&v6[OBJC_IVAR____TtC13TeaFoundation28BridgedRegistrationContainer_registrationContainer] = v5;
  v15.receiver = v6;
  v15.super_class = v2;
  swift_retain();
  id v7 = objc_msgSendSuper2(&v15, sel_init);
  uint64_t v8 = v0[4];
  uint64_t v9 = (objc_class *)type metadata accessor for BridgedCallbackRegistration();
  unsigned int v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR____TtC13TeaFoundation27BridgedCallbackRegistration_callback] = v8;
  v14.receiver = v10;
  v14.super_class = v9;
  swift_retain();
  id v11 = objc_msgSendSuper2(&v14, sel_init);
  uint64_t v12 = (char *)objc_allocWithZone((Class)type metadata accessor for BridgedProxyContainer());
  return sub_191E28058((uint64_t)v4, (uint64_t)v7, (uint64_t)v11, v12);
}

uint64_t method lookup function for ProxyContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProxyContainer);
}

uint64_t dispatch thunk of ProxyContainer.__allocating_init(publicContainer:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

id sub_191E28058(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a4[OBJC_IVAR____TtC13TeaFoundation21BridgedProxyContainer_publicContainer] = a1;
  *(void *)&a4[OBJC_IVAR____TtC13TeaFoundation21BridgedProxyContainer_privateContainer] = a2;
  *(void *)&a4[OBJC_IVAR____TtC13TeaFoundation21BridgedProxyContainer_callback] = a3;
  v10.receiver = a4;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id AsyncBlockOperation.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return AsyncBlockOperation.init(_:)(a1, a2);
}

id AsyncBlockOperation.init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_191E28438(a1, a2, qword_1EB50C390);
}

void AsyncBlockOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  (*(void (**)(void))((char *)v2 + qword_1EB50C390))();
  unsigned __int8 v6 = (void *)OUTLINED_FUNCTION_23();
  uint64_t v7 = *(void *)(v5 + 240);
  v6[2] = v7;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  uint64_t v8 = (void *)sub_191D73EB4(v7, MEMORY[0x1E4FBC848] + 8);
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  uint64_t v9 = (void *)OUTLINED_FUNCTION_23();
  v9[2] = v7;
  v9[3] = a1;
  void v9[4] = a2;
  uint64_t v10 = qword_1EB50EC90;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB50EC78;
  sub_191D73E88((uint64_t)v11, (uint64_t)sub_191E28330, (uint64_t)v9);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_191E282D8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E28310(uint64_t a1)
{
  return sub_191E286AC(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_191E28330(void *a1)
{
  return sub_191E287B8(a1, *(void (**)(char *))(v1 + 24));
}

id AsyncBlockOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void AsyncBlockOperation.init()()
{
}

void sub_191E283B4()
{
}

uint64_t sub_191E283C4()
{
  return OUTLINED_FUNCTION_0_35();
}

uint64_t sub_191E283D8()
{
  return OUTLINED_FUNCTION_0_35();
}

id AsyncBlockCancellingOperation.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return AsyncBlockCancellingOperation.init(_:)(a1, a2);
}

id AsyncBlockCancellingOperation.init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_191E28438(a1, a2, qword_1E92F3D60);
}

id sub_191E28438(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = &v3[*a3];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

void AsyncBlockCancellingOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v6 = type metadata accessor for AsyncBlockCancelledReporter();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  uint64_t v8 = *(void (**)(void *))((char *)v2 + qword_1E92F3D60[0]);
  v16[3] = v6;
  v16[4] = &off_1EE2B5DC8;
  v16[0] = v7;
  uint64_t v9 = v2;
  swift_retain();
  v8(v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  objc_super v10 = (void *)OUTLINED_FUNCTION_23();
  uint64_t v11 = *(void *)(v5 + 240);
  v10[2] = v11;
  v10[3] = a1;
  __n128 v10[4] = a2;
  swift_retain();
  uint64_t v12 = (void *)sub_191D73EB4(v11, MEMORY[0x1E4FBC848] + 8);
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  uint64_t v13 = (void *)OUTLINED_FUNCTION_23();
  void v13[2] = v11;
  v13[3] = a1;
  void v13[4] = a2;
  uint64_t v14 = qword_1EB50EC90;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1EB50EC78;
  sub_191D73E88((uint64_t)v15, (uint64_t)sub_191E28A40, (uint64_t)v13);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t type metadata accessor for AsyncBlockCancelledReporter()
{
  return self;
}

uint64_t sub_191E286AC(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Result();
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))((char *)&v14 - v11, a1, a4);
  swift_storeEnumTagMultiPayload();
  a2(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v7);
}

uint64_t sub_191E287B8(void *a1, void (*a2)(char *))
{
  uint64_t v4 = type metadata accessor for Result();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

void AsyncBlockCancellingOperation.init()()
{
}

void sub_191E288B4()
{
}

uint64_t sub_191E288C4()
{
  return OUTLINED_FUNCTION_0_35();
}

uint64_t type metadata accessor for AsyncBlockOperation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncBlockOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncBlockOperation);
}

uint64_t dispatch thunk of AsyncBlockOperation.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t sub_191E28920()
{
  return swift_initClassMetadata2();
}

uint64_t sub_191E28968()
{
  return OUTLINED_FUNCTION_0_35();
}

uint64_t type metadata accessor for AsyncBlockCancellingOperation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncBlockCancellingOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncBlockCancellingOperation);
}

uint64_t dispatch thunk of AsyncBlockCancellingOperation.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

id sub_191E289BC()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_isCancelled);
}

uint64_t sub_191E289E0()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

unint64_t sub_191E28A18()
{
  return (unint64_t)sub_191E289BC() & 1;
}

uint64_t sub_191E28A54(uint64_t a1)
{
  return sub_191E28310(a1);
}

uint64_t static XPCClassBuilder.buildBlock(_:)()
{
  uint64_t v0 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  return sub_191DC09C8(v0);
}

ValueMetadata *type metadata accessor for XPCClassBuilder()
{
  return &type metadata for XPCClassBuilder;
}

uint64_t ShortDescription.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191D9EA80(a1, (uint64_t)v7);
  sub_191DD2F40((uint64_t)v7, a2, a3);
  return sub_191D9EB34(a1);
}

void ShortDescription.subscript.getter(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (*(void *)(v3 + 16))
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    unint64_t v4 = sub_191D636F4();
    if (v5)
    {
      sub_191D6D834(*(void *)(v3 + 56) + 32 * v4, (uint64_t)a1);
    }
    else
    {
      *a1 = 0u;
      a1[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a1 = 0u;
    a1[1] = 0u;
  }
}

uint64_t sub_191E28B9C@<X0>(_OWORD *a1@<X8>)
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  ShortDescription.subscript.getter(a1);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191E28C28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  sub_191D9EA80(a1, (uint64_t)v6);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return ShortDescription.subscript.setter((uint64_t)v6, v3, v4);
}

void (*ShortDescription.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, char a2)
{
  uint64_t v9 = malloc(0x60uLL);
  *a1 = v9;
  v9[10] = a4;
  v9[11] = v4;
  v9[8] = a2;
  v9[9] = a3;
  ShortDescription.subscript.getter(v9);
  return sub_191E28D18;
}

void sub_191E28D18(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v4 = v2[8];
    uint64_t v3 = v2[9];
    sub_191D9EA80(*a1, (uint64_t)(v2 + 4));
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    ShortDescription.subscript.setter((uint64_t)(v2 + 4), v4, v3);
    sub_191D9EB34((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = v2[8];
    uint64_t v5 = v2[9];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    ShortDescription.subscript.setter((uint64_t)v2, v6, v5);
  }

  free(v2);
}

uint64_t ShortDescription.shortDescription.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  uint64_t v5 = v2[2];
  a2[3] = a1;
  a2[4] = &protocol witness table for ShortDescription<A>;
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v5;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_191E28E14(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ShortDescribable.description.getter(a1, WitnessTable);
}

uint64_t sub_191E28E68(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191E28EAC()
{
  return 8;
}

void *sub_191E28EB8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t dispatch thunk of ShortDescribable.shortDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ShortDescriptionType.describe(withIndentation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t URLHandlerOpenOptions.sourceApplication.getter()
{
  uint64_t v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t URLHandlerOpenOptions.annotation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191D9EA80(v1 + 16, a1);
}

uint64_t URLHandlerOpenOptions.openInPlace.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t URLHandlerOpenOptions.init(sourceApplication:annotation:openInPlace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  uint64_t result = sub_191E28F68(a3, a5 + 16);
  *(unsigned char *)(a5 + 48) = a4;
  return result;
}

uint64_t sub_191E28F68(uint64_t a1, uint64_t a2)
{
  sub_191D9EAE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for URLHandlerOpenOptions(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  return result;
}

uint64_t initializeWithCopy for URLHandlerOpenOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v6)
  {
    *(void *)(a1 + 40) = v6;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    long long v7 = v5[1];
    *(_OWORD *)(a1 + 16) = *v5;
    *(_OWORD *)(a1 + 32) = v7;
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for URLHandlerOpenOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for URLHandlerOpenOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for URLHandlerOpenOptions(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLHandlerOpenOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t Dictionary<>.disableSafeishSafety.getter(uint64_t a1)
{
  sub_191DD7F38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = OUTLINED_FUNCTION_1_41();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_2_45();
  uint64_t result = __swift_getEnumTagSinglePayload(v1, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32))(v9, v1, v4);
    double v11 = sub_191DA9FD0(a1, &v13);
    (*(void (**)(unsigned char *, uint64_t, double))(v6 + 8))(v9, v4, v11);
    if (v14)
    {
      if (swift_dynamicCast()) {
        return v12[15];
      }
    }
    else
    {
      sub_191D9EB34((uint64_t)&v13);
    }
    return 0;
  }
  return result;
}

uint64_t Dictionary<>.disableSafeishSafety.setter(char a1)
{
  sub_191DD7F38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = OUTLINED_FUNCTION_1_41();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_2_45();
  uint64_t result = __swift_getEnumTagSinglePayload(v1, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32))(v9, v1, v4);
    uint64_t v12 = MEMORY[0x1E4FBB390];
    v11[0] = a1 & 1;
    return sub_191DD3048((uint64_t)v11, (uint64_t)v9);
  }
  return result;
}

uint64_t (*Dictionary<>.disableSafeishSafety.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = Dictionary<>.disableSafeishSafety.getter(*v1) & 1;
  return sub_191E29590;
}

uint64_t sub_191E29590(uint64_t a1)
{
  return Dictionary<>.disableSafeishSafety.setter(*(unsigned char *)(a1 + 8));
}

uint64_t sub_191E295B8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = Dictionary<>.disableSafeishSafety.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_191E295E8(char *a1)
{
  return Dictionary<>.disableSafeishSafety.setter(*a1);
}

uint64_t sub_191E29610()
{
  return 0;
}

id sub_191E29620()
{
  return sub_191E29644();
}

id sub_191E29644()
{
  return objc_msgSend(v0, sel_cancel);
}

uint64_t NonCancellingReporter.isCancelled.getter()
{
  return *v0;
}

TeaFoundation::NonCancellingReporter __swiftcall NonCancellingReporter.init()()
{
  *uint64_t v0 = 0;
  return result;
}

uint64_t dispatch thunk of Cancellable.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CancelledReporting.isCancelled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for NonCancellingReporter(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for NonCancellingReporter(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *TeaFoundation::NonCancellingReporter result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E297F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *TeaFoundation::NonCancellingReporter result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NonCancellingReporter()
{
  return &type metadata for NonCancellingReporter;
}

uint64_t static DateInterval.tf_safe(start:end:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191EE7640();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  sub_191E29A40();
  if (sub_191EE7FF0())
  {
    v24[1] = sub_191EE8C90();
    sub_191D939DC();
    uint64_t v9 = swift_allocObject();
    uint64_t v25 = a2;
    id v10 = (void *)v9;
    *(_OWORD *)(v9 + 16) = xmmword_191EEBD20;
    uint64_t v11 = sub_191EE7560();
    uint64_t v13 = v12;
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    v10[7] = MEMORY[0x1E4FBB1A0];
    unint64_t v15 = sub_191D93A44();
    v10[8] = v15;
    __n128 v10[4] = v11;
    void v10[5] = v13;
    uint64_t v16 = sub_191EE7560();
    v10[12] = v14;
    v10[13] = v15;
    v10[9] = v16;
    v10[10] = v17;
    sub_191D9399C();
    uint64_t v18 = (void *)sub_191EE8DD0();
    sub_191EE7910();
    swift_bridgeObjectRelease();

    uint64_t v19 = OUTLINED_FUNCTION_0_36();
    v20(v19);
    return sub_191EE7060();
  }
  else
  {
    uint64_t v22 = *(void (**)(uint64_t))(v5 + 16);
    uint64_t v23 = OUTLINED_FUNCTION_0_36();
    v22(v23);
    ((void (*)(char *, uint64_t, uint64_t))v22)(v8, a1, v4);
    return sub_191EE7050();
  }
}

unint64_t sub_191E29A40()
{
  unint64_t result = qword_1E92F28E8;
  if (!qword_1E92F28E8)
  {
    sub_191EE7640();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F28E8);
  }
  return result;
}

uint64_t MachService.name.getter()
{
  uint64_t v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

void *MachService.hostInterface.getter@<X0>(void *a1@<X8>)
{
  int v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_191E29ACC(v2);
}

void *sub_191E29ACC(void *result)
{
  if (result)
  {
    id v1 = result;
    return (void *)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t MachService.serviceInterface.getter@<X0>(void *a1@<X8>)
{
  int v2 = *(void **)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  id v4 = v2;

  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

__n128 MachService.init(name:hostInterface:serviceInterface:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, void *(*a3)(__n128 *__return_ptr)@<X2>, void (*a4)(__n128 *__return_ptr, void *)@<X4>, __n128 *a5@<X8>)
{
  uint64_t v9 = a3(&v12);
  __n128 v10 = v12;
  a4(&v12, v9);
  __n128 result = v12;
  a5->n128_u64[0] = a1;
  a5->n128_u64[1] = a2;
  a5[1] = v10;
  a5[2] = result;
  return result;
}

__n128 MachService.init(_:serviceInterface:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(__n128 *__return_ptr)@<X2>, __n128 *a4@<X8>)
{
  a3(&v8);
  __n128 result = v8;
  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  a4[1].n128_u64[0] = 0;
  a4[1].n128_u64[1] = 0;
  a4[2] = result;
  return result;
}

uint64_t destroy for MachService(uint64_t a1)
{
  swift_bridgeObjectRelease();
  int v2 = *(void **)(a1 + 16);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MachService(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = (void *)a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v6)
  {
    uint64_t v7 = a2[3];
    a1[2] = v6;
    a1[3] = v7;
    id v8 = v6;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v5;
  }
  uint64_t v9 = (void *)a2[4];
  uint64_t v10 = a2[5];
  a1[4] = v9;
  a1[5] = v10;
  id v11 = v9;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

void *assignWithCopy for MachService(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  if (!v4)
  {
    if (v5)
    {
      a1[2] = v5;
      a1[3] = a2[3];
      id v7 = v5;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      goto LABEL_8;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_191E29DF0((uint64_t)(a1 + 2));
    goto LABEL_7;
  }
  a1[2] = v5;
  id v6 = v5;

  a1[3] = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
LABEL_8:
  id v8 = (void *)a2[4];
  uint64_t v9 = (void *)a1[4];
  a1[4] = v8;
  id v10 = v8;

  a1[5] = a2[5];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191E29DF0(uint64_t a1)
{
  return a1;
}

void *assignWithTake for MachService(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)a1[2];
  uint64_t v6 = a2[2];
  if (!v5) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_191E29DF0((uint64_t)(a1 + 2));
LABEL_5:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_6;
  }
  a1[2] = v6;

  a1[3] = a2[3];
  swift_bridgeObjectRelease();
LABEL_6:
  id v7 = (void *)a1[4];
  a1[4] = a2[4];

  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HttpRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HttpRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MachService()
{
  return &type metadata for MachService;
}

uint64_t dispatch thunk of ReferenceTypeServiceType.referenceType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReferenceTypeServiceType.createReferences(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t StoreState.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_1_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  (*(void (**)(uint64_t))(v5 + 16))(v8 - v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, a1);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_5:
    uint64_t v14 = *(void *)(a1 + 16);
    uint64_t v12 = a2;
    uint64_t v13 = 1;
    return __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
  }
  uint64_t v11 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a2, v9, v11);
  uint64_t v12 = a2;
  uint64_t v13 = 0;
  uint64_t v14 = v11;
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
}

uint64_t StoreValue.observable.getter()
{
  return swift_retain();
}

uint64_t StoreValue.__allocating_init()()
{
  uint64_t v0 = OUTLINED_FUNCTION_2_6();
  StoreValue.init()();
  return v0;
}

uint64_t StoreValue.init()()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_4_0();
  uint64_t v3 = *(void *)(v2 + 80);
  type metadata accessor for StoreComputedValue();
  *(void *)(OUTLINED_FUNCTION_2_6() + 16) = v3;
  *(void *)(v1 + 16) = StoreComputedValue.__allocating_init(computation:)();
  return v1;
}

uint64_t type metadata accessor for StoreComputedValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E2A1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Promise();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  return Promise.__allocating_init(value:)();
}

uint64_t sub_191E2A280(uint64_t a1)
{
  return sub_191E2A1A4(a1, *(void *)(v1 + 16));
}

uint64_t StoreComputedValue.__allocating_init(computation:)()
{
  swift_allocObject();
  uint64_t v1 = OUTLINED_FUNCTION_7_21();
  StoreComputedValue.init(computation:)(v1, v2);
  return v0;
}

uint64_t StoreValue.__allocating_init(computation:)()
{
  OUTLINED_FUNCTION_2_6();
  uint64_t v1 = OUTLINED_FUNCTION_7_21();
  StoreValue.init(computation:)(v1, v2);
  return v0;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_6();
  uint64_t v1 = OUTLINED_FUNCTION_7_21();
  StoreValue.init(computation:)(v1, v2);
  return v0;
}

uint64_t StoreValue.init(computation:)(uint64_t a1, uint64_t a2)
{
  return sub_191E2A380(a1, a2, (uint64_t (*)(uint64_t, uint64_t))StoreComputedValue.__allocating_init(computation:));
}

{
  return sub_191E2A380(a1, a2, StoreComputedValue.__allocating_init(computation:));
}

uint64_t sub_191E2A380(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = v3;
  OUTLINED_FUNCTION_8_20();
  type metadata accessor for StoreComputedValue();
  *(void *)(v5 + 16) = a3(a1, a2);
  return v5;
}

uint64_t StoreComputedValue.__allocating_init(computation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v2 + 80);
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;

  return StoreComputedValue.__allocating_init(computation:)();
}

uint64_t StoreValue.nextInput(_:)(uint64_t a1)
{
  return StoreComputedValue.nextInput(_:)(a1);
}

uint64_t StoreComputedValue.nextInput(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = type metadata accessor for StoreState();
  OUTLINED_FUNCTION_1_2();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))((char *)&v13 - v8, a1, v3);
  swift_storeEnumTagMultiPayload();
  StoreComputedValue.nextInput(_:)((uint64_t)v9);
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  return v11;
}

void StoreValue.nextInput(_:)(uint64_t a1)
{
}

void StoreComputedValue.nextInput(_:)(uint64_t a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v39 = v6;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v7);
  unsigned int v42 = (char *)&v39 - v8;
  uint64_t v43 = type metadata accessor for StoreState();
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v9);
  uint64_t v40 = v5;
  uint64_t v10 = type metadata accessor for StoreState();
  OUTLINED_FUNCTION_1_2();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (void **)((char *)&v39 - v14);
  uint64_t v16 = *(uint64_t *)((char *)v1 + *(void *)(v4 + 136));
  UnfairLock.lock()();
  OUTLINED_FUNCTION_8_20();
  uint64_t v18 = *(void *)(v17 + 120);
  uint64_t v19 = *(void *)(v2 + v18);
  if (v19 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v41 = v4;
    *(void *)(v2 + v18) = v19 + 1;
    OUTLINED_FUNCTION_8_20();
    uint64_t v21 = v2 + *(void *)(v20 + 112);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v21, a1, v10);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
    (*(void (**)(void **, uint64_t, uint64_t))(v12 + 16))(v15, a1, v10);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v23 = v39;
        uint64_t v24 = v42;
        uint64_t v25 = v40;
        uint64_t v26 = (*(uint64_t (**)(void))(v39 + 32))();
        MEMORY[0x1F4188790](v26);
        *(&v39 - 2) = v2;
        *(&v39 - 1) = (uint64_t)v24;
        firstly<A>(closure:)(sub_191E2B1E8);
        OUTLINED_FUNCTION_8_20();
        uint64_t v28 = *(void *)(v27 + 144);
        unsigned __int8 v29 = *(void **)(v2 + v28);
        *(void *)(OUTLINED_FUNCTION_2_6() + 16) = v19;
        id v30 = v29;
        Promise.then<A, B>(on:disposeOn:closure:)();
        swift_release();

        swift_release();
        unint64_t v31 = *(void **)(v2 + v28);
        *(void *)(OUTLINED_FUNCTION_2_6() + 16) = v19;
        id v32 = v31;
        Promise.error<A>(on:disposeOn:closure:)();
        swift_release();

        swift_release();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v42, v25);
      }
      else
      {
        type metadata accessor for Promise();
        swift_storeEnumTagMultiPayload();
        Promise.__allocating_init(value:)();
      }
    }
    else
    {
      unsigned int v33 = *v15;
      OUTLINED_FUNCTION_8_20();
      uint64_t v35 = *(void **)(v2 + *(void *)(v34 + 144));
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v33;
      *(void *)(v36 + 24) = v19;
      id v37 = v35;
      id v38 = v33;
      firstly<A, B>(on:disposeOn:closure:)(v37, v2, (uint64_t)sub_191E2B4EC, v36, v43, v41);

      swift_release();
    }
  }
}

Swift::Void __swiftcall StoreValue.refresh()()
{
}

Swift::Void __swiftcall StoreComputedValue.refresh()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for StoreState();
  OUTLINED_FUNCTION_1_2();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  uint64_t v8 = (char *)v0 + *(void *)(v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v8, v2);
  StoreComputedValue.nextInput(_:)((uint64_t)v7);
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t StoreValue.deinit()
{
  swift_release();
  return v0;
}

uint64_t StoreValue.__deallocating_deinit()
{
  StoreValue.deinit();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t StoreComputedValue.observable.getter()
{
  return swift_retain();
}

void *StoreComputedValue.init(computation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = sub_191EE8D10();
  OUTLINED_FUNCTION_1_2();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  sub_191EE8CE0();
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = sub_191EE7C60();
  MEMORY[0x1F4188790](v10 - 8);
  OUTLINED_FUNCTION_2();
  type metadata accessor for StoreState();
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v11);
  type metadata accessor for AsyncObservable();
  swift_storeEnumTagMultiPayload();
  v2[2] = AsyncObservable.__allocating_init(value:)();
  OUTLINED_FUNCTION_1_17();
  type metadata accessor for StoreState();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_1_17();
  *(void *)((char *)v2 + *(void *)(v12 + 120)) = 1;
  OUTLINED_FUNCTION_1_17();
  *(void *)((char *)v2 + *(void *)(v13 + 128)) = 0;
  OUTLINED_FUNCTION_1_17();
  uint64_t v15 = *(void *)(v14 + 136);
  uint64_t v23 = v16;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)((char *)v2 + v15) = UnfairLock.init(options:)((int *)&v23);
  OUTLINED_FUNCTION_1_17();
  uint64_t v18 = *(void *)(v17 + 144);
  sub_191D5E944();
  sub_191EE7C30();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_191E2B698((unint64_t *)&qword_1EB50EE60, MEMORY[0x1E4FBCC10]);
  sub_191E2B640();
  sub_191E2B698((unint64_t *)&qword_1EB50EE58, (void (*)(uint64_t))sub_191E2B640);
  sub_191EE9060();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v8, *MEMORY[0x1E4FBCC58], v20);
  *(void *)((char *)v2 + v18) = sub_191EE8D60();
  v2[3] = a1;
  v2[4] = a2;
  return v2;
}

uint64_t sub_191E2AF0C(uint64_t a1, void (*a2)(uint64_t))
{
  return Promise.__allocating_init(value:)();
}

uint64_t sub_191E2AFB4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191E2AFEC(uint64_t a1)
{
  return sub_191E2AF0C(a1, *(void (**)(uint64_t))(v1 + 32));
}

uint64_t type metadata accessor for StoreState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E2B010(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v5 = type metadata accessor for StoreState();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - v7;
  *(void *)((char *)v11 - v7) = a2;
  swift_storeEnumTagMultiPayload();
  id v9 = a2;
  sub_191E2B14C((uint64_t)v8, a3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  type metadata accessor for Promise();
  AsyncObservable.value.getter((uint64_t)v8);
  return Promise.__allocating_init(value:)();
}

void sub_191E2B14C(uint64_t a1, unint64_t a2)
{
  UnfairLock.lock()();
  uint64_t v5 = *(void *)(*(void *)v2 + 128);
  if (*(void *)(v2 + v5) < a2)
  {
    AsyncObservable.next(value:quiet:)(a1, 0);
    *(void *)(v2 + v5) = a2;
  }

  sub_191E2B508(v2);
}

uint64_t sub_191E2B1E8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 24))(*(void *)(v0 + 24));
}

uint64_t sub_191E2B21C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)a2 + 88);
  uint64_t v6 = type metadata accessor for StoreState();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))((char *)&v11 - v8, a1, v5);
  swift_storeEnumTagMultiPayload();
  sub_191E2B14C((uint64_t)v9, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for Promise();
  AsyncObservable.value.getter((uint64_t)v9);
  return Promise.__allocating_init(value:)();
}

uint64_t sub_191E2B388(uint64_t a1, uint64_t a2)
{
  return sub_191E2B21C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_191E2B3A4(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = type metadata accessor for StoreState();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - v7;
  *(uint64_t *)((char *)&v11 - v7) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  id v9 = a1;
  sub_191E2B14C((uint64_t)v8, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_191E2B4AC(void *a1, uint64_t a2)
{
  return sub_191E2B3A4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_191E2B4B4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191E2B4EC(uint64_t a1)
{
  return sub_191E2B010(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_191E2B508(uint64_t a1)
{
}

uint64_t StoreComputedValue.deinit()
{
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_4_0();
  uint64_t v2 = v0 + *(void *)(v1 + 112);
  type metadata accessor for StoreState();
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t))(v3 + 8))(v2);
  swift_release();
  OUTLINED_FUNCTION_4_0();

  return v0;
}

uint64_t StoreComputedValue.__deallocating_deinit()
{
  StoreComputedValue.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

void sub_191E2B640()
{
  if (!qword_1EB50EE50)
  {
    sub_191EE8CE0();
    unint64_t v0 = sub_191EE86B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50EE50);
    }
  }
}

uint64_t sub_191E2B698(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191E2B6E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_191E2B778(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)uint64_t v3 = *(void *)a2;
    uint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(char *))(v4 + 16))(__dst);
      v3[v5] = 1;
    }
    else if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)uint64_t v3 = v14;
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_191E2B914(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else if (!v3)
  {
  }
}

unsigned char *sub_191E2BA1C(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *(void *)__dst = v10;
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_191E2BB78(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    char v9 = 8 * v7;
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << v9)) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v8)
    {
    }
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << v9)) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      id v19 = *__src;
      id v20 = v19;
      *__dst = v19;
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

unsigned char *sub_191E2BDB0(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_191E2BEFC(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    char v9 = 8 * v7;
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << v9)) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v8)
    {
    }
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << v9)) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      *__dst = *__src;
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_191E2C12C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_191E2C260(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x191E2C424);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_191E2C44C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t sub_191E2C504()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for StoreValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for StoreValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StoreValue);
}

uint64_t dispatch thunk of StoreValue.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of StoreValue.__allocating_init(computation:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_191E2C5B8()
{
  uint64_t result = type metadata accessor for StoreState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for StoreComputedValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StoreComputedValue);
}

uint64_t dispatch thunk of StoreComputedValue.__allocating_init(computation:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_191E2C6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_11_16();
  sub_191E2CD80(a1, a2);
  return v4;
}

uint64_t (*sub_191E2C6F8(void *a1))(void)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v4 = type metadata accessor for Seal.Resolution();
  OUTLINED_FUNCTION_1_2();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v7);
  unsigned int v9 = (uint64_t *)((char *)&v14 - v8);
  OUTLINED_FUNCTION_8_21();
  if (*(unsigned char *)(v1 + 24))
  {
    int v10 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    *unsigned int v9 = a1;
    swift_storeEnumTagMultiPayload();
    id v11 = a1;
    sub_191D83660();
    int v10 = v12;
    (*(void (**)(void *, uint64_t))(v6 + 8))(v9, v4);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  return v10;
}

uint64_t (*sub_191E2C820())(void)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v2 = type metadata accessor for Seal.Resolution();
  OUTLINED_FUNCTION_1_2();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - v6;
  OUTLINED_FUNCTION_8_21();
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v8 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v0 + 24) = 1;
    swift_storeEnumTagMultiPayload();
    sub_191D83660();
    uint64_t v8 = v9;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return v8;
}

void sub_191E2C930()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v26 = v1;
  uint64_t v27 = v2;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_4_0();
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v7 = OUTLINED_FUNCTION_12_16();
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_7_14();
  uint64_t v13 = v11 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v25 - v15;
  OUTLINED_FUNCTION_8_21();
  int v17 = (void *)swift_allocObject();
  void v17[2] = v6;
  int v18 = v26;
  uint64_t v19 = v27;
  v17[3] = v26;
  v17[4] = v4;
  uint64_t v25 = v4;
  v17[5] = v19;
  id v20 = v18;
  swift_retain();
  sub_191D8343C((uint64_t)sub_191E2E510, (uint64_t)v17, (uint64_t)v16);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v13, v16, v7);
  if (__swift_getEnumTagSinglePayload(v13, 1, v28) == 1)
  {
    uint64_t v21 = OUTLINED_FUNCTION_14_12();
    v22(v21);
  }
  else
  {
    sub_191D8431C(v20, v25, v19);
    uint64_t v23 = *(void (**)(uint64_t))(v9 + 8);
    uint64_t v24 = OUTLINED_FUNCTION_14_12();
    v23(v24);
    ((void (*)(uint64_t, uint64_t))v23)(v13, v7);
  }
  OUTLINED_FUNCTION_10_19();
  OUTLINED_FUNCTION_36();
}

void sub_191E2CAF4()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v34 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_4_0();
  uint64_t v7 = *(void *)(v6 + 80);
  uint64_t v8 = OUTLINED_FUNCTION_12_16();
  OUTLINED_FUNCTION_1_2();
  uint64_t v33 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_7_14();
  uint64_t v13 = (id *)(v11 - v12);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v32 - v15;
  OUTLINED_FUNCTION_8_21();
  int v17 = (void *)swift_allocObject();
  void v17[2] = v7;
  v17[3] = v5;
  id v32 = v3;
  v17[4] = v3;
  uint64_t v18 = v33;
  uint64_t v19 = v34;
  v17[5] = v34;
  id v20 = v5;
  swift_retain();
  sub_191D8343C((uint64_t)sub_191E2E500, (uint64_t)v17, (uint64_t)v16);
  uint64_t v21 = v35;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
  (*(void (**)(id *, char *, uint64_t))(v18 + 16))(v13, v16, v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v21) == 1)
  {
    uint64_t v22 = OUTLINED_FUNCTION_2_46();
    v23(v22);
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v25 = OUTLINED_FUNCTION_2_46();
        v26(v25);
      }
      else
      {
        sub_191D8431C(v20, v32, v19);
        uint64_t v30 = OUTLINED_FUNCTION_2_46();
        v31(v30);
      }
    }
    else
    {
      uint64_t v27 = OUTLINED_FUNCTION_2_46();
      v28(v27);
      OUTLINED_FUNCTION_19();
      (*(void (**)(id *, uint64_t))(v29 + 8))(v13, v21);
    }
  }
  OUTLINED_FUNCTION_10_19();
  OUTLINED_FUNCTION_36();
}

BOOL sub_191E2CD08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_191DBF95C(*a1, *a2);
}

uint64_t sub_191E2CD18()
{
  return sub_191DBF994();
}

uint64_t sub_191E2CD28()
{
  return sub_191DBF96C();
}

uint64_t sub_191E2CD38()
{
  return sub_191EE9A90();
}

uint64_t sub_191E2CD80(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v5 = type metadata accessor for Seal.Resolution();
  uint64_t v6 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v16 - v10);
  type metadata accessor for Seal.Handler();
  *(void *)(v2 + 32) = sub_191EE7DA0();
  OUTLINED_FUNCTION_4_0();
  __swift_storeEnumTagSinglePayload(v2 + *(void *)(v12 + 112), 1, 1, v5);
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 1;
  *uint64_t v11 = a2;
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v5);
  OUTLINED_FUNCTION_4_0();
  uint64_t v14 = v2 + *(void *)(v13 + 112);
  OUTLINED_FUNCTION_5();
  (*(void (**)(uint64_t, void *, uint64_t))(v8 + 40))(v14, v11, v6);
  swift_endAccess();
  return v2;
}

void sub_191E2CEEC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Seal.Resolution();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void **)((char *)&v17 - v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - v10, a1, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = *v11;
    uint64_t v13 = (void *)swift_allocObject();
    void v13[2] = a3;
    v13[3] = a4;
    void v13[4] = v12;
    swift_retain();
    id v14 = v12;
    uint64_t v15 = sub_191D8431C(a2, sub_191E2E578, (uint64_t)v13);
    uint64_t v16 = swift_release();
    ((void (*)(uint64_t))v15)(v16);
    swift_release();
  }
  else
  {
    (*(void (**)(void **, uint64_t))(v9 + 8))(v11, v8);
    __break(1u);
  }
}

uint64_t sub_191E2D07C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_191E2D0AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Seal.Resolution();
  uint64_t v9 = sub_191EE8DF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void **)((char *)&v20 - v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v20 - v11, a1, v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8) == 1)
  {
    uint64_t result = (*(uint64_t (**)(void **, uint64_t))(v10 + 8))(v12, v9);
LABEL_19:
    __break(1u);
    return result;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t result = (*(uint64_t (**)(void **, uint64_t))(*(void *)(v8 - 8) + 8))(v12, v8);
    goto LABEL_19;
  }
  uint64_t v13 = *v12;
  id v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  void v14[3] = a4;
  v14[4] = v13;
  swift_retain();
  id v15 = v13;
  if (qword_1EB50EC90 != -1) {
    swift_once();
  }
  if ((void *)qword_1EB50EC78 == a2) {
    goto LABEL_15;
  }
  if (qword_1EB50E548 != -1) {
    swift_once();
  }
  if (void *)qword_1EB50E4A8 == a2 && (objc_msgSend(self, sel_isMainThread)) {
    goto LABEL_15;
  }
  if (qword_1EB50E490 != -1) {
    swift_once();
  }
  if ((void *)qword_1EB50E488 == a2 && !objc_msgSend(self, sel_isMainThread))
  {
LABEL_15:
    uint64_t v18 = sub_191E2E578;
  }
  else
  {
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a2;
    v16[3] = sub_191E2E578;
    v16[4] = v14;
    id v17 = a2;
    uint64_t v18 = sub_191DB74C0;
  }

  return (uint64_t)v18;
}

uint64_t sub_191E2D3D4(uint64_t a1, void *a2, uint64_t (*a3)(), uint64_t a4)
{
  if (qword_1EB50EC90 != -1) {
    swift_once();
  }
  if ((void *)qword_1EB50EC78 != a2)
  {
    if (qword_1EB50E548 != -1) {
      swift_once();
    }
    if ((void *)qword_1EB50E4A8 != a2 || (objc_msgSend(self, sel_isMainThread) & 1) == 0)
    {
      if (qword_1EB50E490 != -1) {
        swift_once();
      }
      if ((void *)qword_1EB50E488 != a2 || objc_msgSend(self, sel_isMainThread))
      {
        uint64_t v7 = (void *)swift_allocObject();
        void v7[2] = a2;
        uint64_t v7[3] = a3;
        v7[4] = a4;
        id v8 = a2;
        a3 = sub_191D851E8;
      }
    }
  }
  uint64_t v9 = swift_retain();
  ((void (*)(uint64_t))a3)(v9);

  return swift_release();
}

uint64_t sub_191E2D564(uint64_t a1, void *a2, uint64_t (*a3)(), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Seal.Resolution();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - v10, a1, v8);
  if (swift_getEnumCaseMultiPayload() <= 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v13 = sub_191D8431C(a2, a3, a4);
  v13();
  return swift_release();
}

unsigned char *sub_191E2D6A0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E2D76CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for Seal.State()
{
  return __swift_instantiateGenericMetadata();
}

char *sub_191E2D7AC(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)int v3 = *(void *)a2;
    int v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)int v3 = v14;
      v3[v5] = 1;
    }
    else if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(__dst);
      v3[v5] = 0;
    }
  }
  return v3;
}

id *sub_191E2D970(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    char v9 = 8 * v7;
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << v9)) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << v9)) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      id v19 = *__src;
      id v20 = v19;
      *__dst = v19;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

unsigned char *sub_191E2DBA8(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_191E2DCF4(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    char v9 = 8 * v7;
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << v9)) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << v9)) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      *__dst = *__src;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_191E2DF24(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_191E2E058(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x191E2E21CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_191E2E244(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_191E2E2FC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_191E2E3D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_191E2E3F0()
{
  uint64_t v2 = *(void *)(OUTLINED_FUNCTION_13_15() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
  }
  else if (!EnumCaseMultiPayload)
  {
    OUTLINED_FUNCTION_19();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1 + v4, v0);
  }

  return MEMORY[0x1F4186498](v1, v4 + v5, v3 | 7);
}

uint64_t sub_191E2E500(uint64_t a1)
{
  return sub_191E2D564(a1, *(void **)(v1 + 24), *(uint64_t (**)())(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_191E2E510(uint64_t a1)
{
  return sub_191E2D3D4(a1, *(void **)(v1 + 24), *(uint64_t (**)())(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_191E2E520()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_191E2E588()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t *sub_191E2E5BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191EE73F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    int v10 = (uint64_t *)((char *)a1 + v8);
    unsigned int v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *int v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_191E2E69C(uint64_t a1)
{
  uint64_t v2 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_191E2E714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  int v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_191E2E7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_191E2E84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_191E2E8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_191E2E968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191E2E97C);
}

uint64_t sub_191E2E97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191EE73F0();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_191E2EA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191E2EA20);
}

void sub_191E2EA20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_191EE73F0();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t type metadata accessor for AuthTokenResponseItem()
{
  uint64_t result = qword_1EB5089B8;
  if (!qword_1EB5089B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191E2EAF4()
{
  uint64_t result = sub_191EE73F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191E2EB98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_191EE9770() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
    if (v6 || (sub_191EE9770() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6974617269707865 && a2 == 0xED00006374556E6FLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_191EE9770();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_191E2ECF4(char a1)
{
  if (!a1) {
    return 7107189;
  }
  if (a1 == 1) {
    return 0x6E656B6F74;
  }
  return 0x6974617269707865;
}

uint64_t sub_191E2ED4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v24 = v8 - v7;
  sub_191E2F0F8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = type metadata accessor for AuthTokenResponseItem();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2();
  uint64_t v13 = v12 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191E2F154();
  sub_191EE9AD0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_191E2F1A0();
  sub_191EE9570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v13, v24, v4);
  uint64_t v14 = sub_191EE9540();
  unsigned int v15 = (uint64_t *)(v13 + *(int *)(v10 + 20));
  *unsigned int v15 = v14;
  v15[1] = v16;
  sub_191EE9550();
  uint64_t v18 = v17;
  uint64_t v19 = OUTLINED_FUNCTION_2_47();
  v20(v19);
  *(void *)(v13 + *(int *)(v10 + 24)) = v18;
  sub_191E2F1F0(v13, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_191E2F254(v13);
}

uint64_t sub_191E2F038()
{
  return sub_191E2ECF4(*v0);
}

uint64_t sub_191E2F040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191E2EB98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191E2F068(uint64_t a1)
{
  unint64_t v2 = sub_191E2F154();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191E2F0A4(uint64_t a1)
{
  unint64_t v2 = sub_191E2F154();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191E2F0E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191E2ED4C(a1, a2);
}

void sub_191E2F0F8()
{
  if (!qword_1EB508B38)
  {
    sub_191E2F154();
    unint64_t v0 = sub_191EE9590();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508B38);
    }
  }
}

unint64_t sub_191E2F154()
{
  unint64_t result = qword_1EB508998;
  if (!qword_1EB508998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508998);
  }
  return result;
}

unint64_t sub_191E2F1A0()
{
  unint64_t result = qword_1EB508710;
  if (!qword_1EB508710)
  {
    sub_191EE73F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508710);
  }
  return result;
}

uint64_t sub_191E2F1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthTokenResponseItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191E2F254(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthTokenResponseItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for AuthTokenResponseItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E2F37CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenResponseItem.CodingKeys()
{
  return &type metadata for AuthTokenResponseItem.CodingKeys;
}

unint64_t sub_191E2F3B8()
{
  unint64_t result = qword_1E92F3E68;
  if (!qword_1E92F3E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3E68);
  }
  return result;
}

unint64_t sub_191E2F408()
{
  unint64_t result = qword_1EB5089A8;
  if (!qword_1EB5089A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5089A8);
  }
  return result;
}

unint64_t sub_191E2F458()
{
  unint64_t result = qword_1EB5089A0;
  if (!qword_1EB5089A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5089A0);
  }
  return result;
}

Swift::Bool __swiftcall Optional.isNil()()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v6);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, *(void *)(v1 + 16));
  if (EnumTagSinglePayload != 1) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  }
  return EnumTagSinglePayload == 1;
}

Swift::Bool __swiftcall Optional.isNotNil()()
{
  return !Optional.isNil()();
}

uint64_t Optional.unwrap()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = *(void (**)(void))(v5 + 16);
  OUTLINED_FUNCTION_1_43();
  v12();
  uint64_t v13 = *(void *)(a1 + 16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13) == 1)
  {
    OUTLINED_FUNCTION_1_43();
    v12();
    uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      a2[3] = v13;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2);
      return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(boxed_opaque_existential_0, v9, v13);
    }
  }
  else
  {
    a2[3] = v13;
    uint64_t v16 = __swift_allocate_boxed_opaque_existential_0(a2);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v16, v11, v13);
  }
  return result;
}

uint64_t Optional.safelyUnwrapped.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a2, v6, v8);
    uint64_t v9 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v9, 1, v8);
}

void static Promise.race(_:)(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v1 = sub_191EE86B0();
  swift_getWitnessTable();
  static Promise.race<A>(_:)((uint64_t)&v2, v1);
}

void sub_191E2F860()
{
}

uint64_t sub_191E2F8B4(unsigned char *a1, uint64_t a2, void *a3)
{
  uint64_t result = swift_beginAccess();
  if ((*a1 & 1) == 0)
  {
    swift_beginAccess();
    *a1 = 1;
    return DeferredPromise.reject(_:)(a3);
  }
  return result;
}

void static Promise.map<A>(on:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v90 = a1;
  OUTLINED_FUNCTION_1_2();
  uint64_t v104 = v8;
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v89 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v103 = (char *)&v71 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v92 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v16 = v15;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v93 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v91 = (char *)&v71 - v20;
  uint64_t v21 = *(void *)(v4 + 80);
  sub_191EE7F20();
  type metadata accessor for DeferredPromise();
  uint64_t v22 = DeferredPromise.__allocating_init()();
  unint64_t v94 = a2;
  uint64_t v95 = v22;
  unint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v75 = v4;
  if (MEMORY[0x192FE7090](v23, a3, v4, a4))
  {
    swift_getTupleTypeMetadata2();
    sub_191EE85C0();
    uint64_t v105 = sub_191EE7E50();
    uint64_t v25 = v95;
    DeferredPromise.resolve(_:)((uint64_t)&v105);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_48();
    if (*(void *)(v25 + 16))
    {
      swift_retain();
LABEL_39:
      swift_release();
      OUTLINED_FUNCTION_36();
      return;
    }
    goto LABEL_42;
  }
  uint64_t v26 = v16;
  uint64_t v105 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v88 = UnfairLock.init(options:)((int *)&v105);
  uint64_t v27 = swift_allocObject();
  uint64_t v83 = v21;
  uint64_t v28 = sub_191EE7D90();
  uint64_t v87 = v27;
  *(void *)(v27 + 16) = v28;
  uint64_t v86 = swift_allocObject();
  *(unsigned char *)(v86 + 16) = 0;
  uint64_t v84 = a4;
  if ((v94 & 0xC000000000000001) != 0)
  {
    uint64_t v29 = sub_191EE9410();
    unint64_t v74 = 0;
    uint64_t v30 = 0;
    unint64_t v31 = 0;
    unint64_t v32 = v29 | 0x8000000000000000;
  }
  else
  {
    unint64_t v32 = v94;
    uint64_t v33 = -1 << *(unsigned char *)(v94 + 32);
    uint64_t v30 = ~v33;
    uint64_t v34 = *(void *)(v94 + 64);
    unint64_t v74 = v94 + 64;
    uint64_t v35 = -v33;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v31 = v36 & v34;
  }
  uint64_t v37 = (uint64_t)v93;
  uint64_t v77 = v32 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v73 = v30;
  uint64_t v96 = v104 + 16;
  uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v26 + 32);
  uint64_t v102 = v104 + 32;
  uint64_t v81 = v10 + 7;
  uint64_t v80 = v104 + 8;
  int64_t v76 = (unint64_t)(v30 + 64) >> 6;
  int64_t v72 = v76 - 1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  int64_t v38 = 0;
  uint64_t v79 = MEMORY[0x1E4FBC848] + 8;
  unint64_t v82 = v32;
  uint64_t v78 = a3;
  if ((v32 & 0x8000000000000000) != 0) {
    goto LABEL_14;
  }
LABEL_11:
  if (v31)
  {
    uint64_t v39 = (v31 - 1) & v31;
    unint64_t v40 = __clz(__rbit64(v31)) | (v38 << 6);
    int64_t v41 = v38;
LABEL_13:
    OUTLINED_FUNCTION_5_29();
    v42();
    *(void *)(v37 + *(int *)(TupleTypeMetadata2 + 48)) = *(void *)(*(void *)(v32 + 56) + 8 * v40);
    __swift_storeEnumTagSinglePayload(v37, 0, 1, TupleTypeMetadata2);
    swift_retain();
    int64_t v43 = v41;
    goto LABEL_34;
  }
  int64_t v41 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  int64_t v43 = v38;
  if (v41 < v76)
  {
    unint64_t v46 = *(void *)(v74 + 8 * v41);
    if (v46)
    {
LABEL_19:
      uint64_t v39 = (v46 - 1) & v46;
      unint64_t v40 = __clz(__rbit64(v46)) + (v41 << 6);
      goto LABEL_13;
    }
    int64_t v43 = v38 + 1;
    if (v38 + 2 < v76)
    {
      unint64_t v46 = *(void *)(v74 + 8 * (v38 + 2));
      if (v46)
      {
        int64_t v41 = v38 + 2;
        goto LABEL_19;
      }
      int64_t v47 = v38 + 3;
      int64_t v43 = v38 + 2;
      if (v38 + 3 < v76)
      {
        unint64_t v46 = *(void *)(v74 + 8 * v47);
        if (v46)
        {
          int64_t v41 = v38 + 3;
          goto LABEL_19;
        }
        while (1)
        {
          int64_t v41 = v47 + 1;
          if (__OFADD__(v47, 1)) {
            break;
          }
          if (v41 >= v76)
          {
            int64_t v43 = v72;
            goto LABEL_33;
          }
          unint64_t v46 = *(void *)(v74 + 8 * v41);
          ++v47;
          if (v46) {
            goto LABEL_19;
          }
        }
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
  }
LABEL_33:
  __swift_storeEnumTagSinglePayload(v37, 1, 1, TupleTypeMetadata2);
  uint64_t v39 = 0;
LABEL_34:
  while (1)
  {
    uint64_t v48 = (uint64_t)v91;
    (*v85)(v91, v37, v92);
    if (__swift_getEnumTagSinglePayload(v48, 1, TupleTypeMetadata2) == 1) {
      break;
    }
    uint64_t v100 = *(void *)(v48 + *(int *)(TupleTypeMetadata2 + 48));
    uint64_t v49 = v100;
    uint64_t v50 = v104;
    v97 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 32);
    uint64_t v51 = v97(v103, v48, v24);
    MEMORY[0x1F4188790](v51);
    unint64_t v101 = v39;
    uint64_t v52 = v84;
    *(&v71 - 4) = v24;
    *(&v71 - 3) = v52;
    *(&v71 - 2) = v49;
    uint64_t v53 = v83;
    uint64_t v98 = firstly<A>(closure:)(sub_191E30B10);
    int64_t v99 = v43;
    uint64_t v54 = v89;
    OUTLINED_FUNCTION_5_29();
    v55();
    unint64_t v56 = (*(unsigned __int8 *)(v50 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v57 = TupleTypeMetadata2;
    unint64_t v58 = (v81 + v56) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v59 = (v58 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v60 = (void *)swift_allocObject();
    void v60[2] = v53;
    v60[3] = v24;
    v60[4] = v52;
    unint64_t v62 = v94;
    uint64_t v61 = v95;
    uint64_t v63 = v24;
    uint64_t v64 = v87;
    uint64_t v65 = v88;
    v60[5] = v88;
    uint64_t v66 = (char *)v60 + v56;
    uint64_t v67 = v86;
    v60[6] = v86;
    v60[7] = v64;
    v97(v66, (uint64_t)v54, v63);
    *(void *)((char *)v60 + v58) = v62;
    TupleTypeMetadata2 = v57;
    *(void *)((char *)v60 + v59) = v61;
    uint64_t v37 = (uint64_t)v93;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v68 = v90;
    Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    uint64_t v69 = (void *)swift_allocObject();
    void v69[2] = v65;
    v69[3] = v67;
    v69[4] = v61;
    swift_retain();
    unint64_t v32 = v82;
    swift_retain();
    swift_retain();
    sub_191D73E88(v68, (uint64_t)sub_191E30AD8, (uint64_t)v69);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v24 = v78;
    (*(void (**)(char *))(v104 + 8))(v103);
    int64_t v38 = v99;
    unint64_t v31 = v101;
    if ((v32 & 0x8000000000000000) == 0) {
      goto LABEL_11;
    }
LABEL_14:
    if (sub_191EE9420())
    {
      sub_191EE9730();
      swift_unknownObjectRelease();
      sub_191EE9730();
      swift_unknownObjectRelease();
      uint64_t v44 = v37;
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v44 = v37;
      uint64_t v45 = 1;
    }
    __swift_storeEnumTagSinglePayload(v44, v45, 1, TupleTypeMetadata2);
    int64_t v43 = v38;
    uint64_t v39 = v31;
  }
  sub_191D8CCD4();
  uint64_t v70 = v95;
  OUTLINED_FUNCTION_2_48();
  if (*(void *)(v70 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_39;
  }
LABEL_43:
  __break(1u);
}

void sub_191E301E4()
{
}

uint64_t sub_191E30244(unsigned char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v9 = *(void *)(*(void *)a6 + 80);
  uint64_t v10 = *(void *)(v9 + 24);
  uint64_t v11 = sub_191EE8DF0();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = *(void *)(v9 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v18 = (char *)&v21 - v17;
  uint64_t result = swift_beginAccess();
  if ((*a1 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v14, v22, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
    swift_beginAccess();
    sub_191EE7F40();
    swift_endAccess();
    swift_beginAccess();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v20 = sub_191EE7EA0();
    swift_bridgeObjectRelease();
    type metadata accessor for Promise();
    uint64_t result = sub_191EE7EA0();
    if (v20 == result)
    {
      swift_beginAccess();
      *a1 = 1;
      swift_beginAccess();
      uint64_t v24 = *a2;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      DeferredPromise.resolve(_:)((uint64_t)&v24);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_191E304CC()
{
}

uint64_t static Promise.all(_:)(uint64_t a1)
{
  uint64_t v7 = a1;
  uint64_t v1 = sub_191EE86B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  id v3 = sub_191D73E2C();
  static Promise.all<A>(on:_:)((uint64_t)v3, (uint64_t)&v7, v1, WitnessTable);
  uint64_t v5 = v4;

  return v5;
}

void static Promise.race<A>(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_1_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  v18[0] = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v18 - v12;
  if (sub_191EE8A40())
  {
    sub_191DB60C4();
    swift_allocError();
    *(_OWORD *)uint64_t v14 = xmmword_191EF0540;
    *(unsigned char *)(v14 + 16) = 2;
    OUTLINED_FUNCTION_36();
    Promise.__allocating_init(error:)();
  }
  else
  {
    type metadata accessor for OnlyOnceDeferredPromise();
    uint64_t v16 = OnlyOnceDeferredPromise.__allocating_init()();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, a2);
    sub_191EE8370();
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_191EE8E80();
      if (!v18[1]) {
        break;
      }
      id v17 = sub_191D73E2C();
      sub_191DB0E3C();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v18[0] + 8))(v13, AssociatedTypeWitness);
    swift_beginAccess();
    if (*(void *)(v16 + 16))
    {
      swift_retain();
      swift_release();
      OUTLINED_FUNCTION_36();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_191E30814()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191E3084C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_191E3085C()
{
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_6_23();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_10();
  v4(v3);
  swift_release();

  return MEMORY[0x1F4186498](v0, v2 + 8, v1);
}

uint64_t sub_191E3090C()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_191E30954()
{
}

uint64_t sub_191E30964()
{
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_6_23();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_10();
  v4(v3);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, ((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v1);
}

void sub_191E30A24()
{
}

uint64_t sub_191E30A90()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_191E30AD8()
{
}

uint64_t sub_191E30AE4()
{
  return sub_191E2F8B4(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_191E30AF0()
{
  return sub_191E30244(*(unsigned char **)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_191E30B00()
{
  return sub_191E2F8B4(*(unsigned char **)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_191E30B10()
{
  return sub_191D67AFC();
}

uint64_t Diffable.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t))(*(void *)(a3 + 16) + 8))(a2);
  sub_191EE8200();

  return swift_bridgeObjectRelease();
}

unint64_t JSON.subscript.getter@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*a1 + 16);
  if (!v6)
  {
    unint64_t result = sub_191D62B78(*v2);
    goto LABEL_22;
  }
  sub_191D62B78(*v2);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v7 = v4 + 40;
  while (!(v5 >> 61))
  {
    uint64_t v12 = *(void *)(v5 + 16);
    if (!*(void *)(v12 + 16)) {
      goto LABEL_20;
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D62B78(v5);
    unint64_t v13 = sub_191D636F4();
    if ((v14 & 1) == 0)
    {
      sub_191D59194(v5);
      swift_bridgeObjectRelease();
LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    sub_191D62B78(v11);
    sub_191D59194(v5);
    swift_bridgeObjectRelease();
LABEL_12:
    v7 += 16;
    sub_191D59194(v5);
    unint64_t v5 = v11;
    if (!--v6)
    {
      unint64_t result = swift_bridgeObjectRelease();
      unint64_t v5 = v11;
      goto LABEL_22;
    }
  }
  if (v5 >> 61 == 1)
  {
    uint64_t v8 = *(void *)((v5 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_retain();
    uint64_t v9 = JSONPointer.Component.index.getter();
    if ((v10 & 1) != 0 || v9 < 0 || v9 >= *(void *)(v8 + 16))
    {
      swift_bridgeObjectRelease();
      sub_191D59194(v5);
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v8 + 8 * v9 + 32);
    sub_191D62B78(v11);
    sub_191D59194(v5);
    goto LABEL_12;
  }
  unint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    goto LABEL_22;
  }
LABEL_21:
  unint64_t result = sub_191D59194(v5);
  unint64_t v5 = 0xF000000000000007;
LABEL_22:
  *a2 = v5;
  return result;
}

uint64_t Synchronizer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = dispatch_group_create();
  return v0;
}

uint64_t Synchronizer.init()()
{
  *(void *)(v0 + 16) = dispatch_group_create();
  return v0;
}

uint64_t Synchronizer.synchronize(on:closure:)(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  sub_191DD2CD8(0, (unint64_t *)&qword_1EB50C440, (uint64_t (*)(void, uint64_t))type metadata accessor for Promise);
  uint64_t v8 = swift_allocObject();
  uint64_t v12 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  swift_retain();
  id v9 = a1;
  uint64_t v10 = UnfairLock.init(options:)((int *)&v12);
  sub_191DD2CD8(0, &qword_1EB50C430, (uint64_t (*)(void, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(void *)(v8 + 16) = sub_191D81D48(v10);
  swift_retain_n();
  sub_191E30F00((uint64_t)sub_191DD2D2C, v8, (uint64_t)sub_191E3141C, v8, v4, a2, a3, v9);

  swift_release();
  swift_release_n();
  return v8;
}

void sub_191E30F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, void *a8)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  char v14 = *(NSObject **)(a5 + 16);
  swift_retain();
  dispatch_group_enter(v14);
  a6();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a5;
  v15[3] = a8;
  uint64_t v15[4] = sub_191D742F8;
  v15[5] = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_191E31508;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = qword_1EB50EC90;
  swift_retain();
  id v18 = a8;
  if (v17 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EB50EC78;
  sub_191D81594(v19, sub_191E31514, v16);
  swift_release();
  swift_release();

  uint64_t v20 = (void *)qword_1EB50EC78;
  swift_retain();
  id v21 = v20;
  sub_191DACC34((uint64_t)v21, (uint64_t)sub_191E31544, a5);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_191E310C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v17[0] = a2;
  uint64_t v6 = sub_191EE7C00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191EE7C60();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  aBlock[4] = sub_191D6EA74;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191D70378;
  aBlock[3] = &block_descriptor_11;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_191EE7C30();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_191D85870((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  sub_191DE2F58();
  sub_191D85870((unint64_t *)&qword_1EB50E628, (void (*)(uint64_t))sub_191DE2F58);
  sub_191EE9060();
  sub_191EE8CC0();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_191E31398(uint64_t a1)
{
}

uint64_t Synchronizer.deinit()
{
  return v0;
}

uint64_t Synchronizer.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_191E313F8(void *a1, void (*a2)(void), uint64_t a3)
{
  return Synchronizer.synchronize(on:closure:)(a1, a2, a3);
}

uint64_t sub_191E3141C(uint64_t a1)
{
  return sub_191DAABF0(a1, v1);
}

uint64_t dispatch thunk of SynchronizerType.synchronize(on:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for Synchronizer()
{
  return self;
}

uint64_t method lookup function for Synchronizer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Synchronizer);
}

uint64_t dispatch thunk of Synchronizer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_191E31488()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191E314C0()
{
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191E31508()
{
  return sub_191E310C8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_191E31514()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_191E31544()
{
  sub_191E31398(v0);
}

uint64_t sub_191E31554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 1u)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t destroy for ReferenceCodingError(uint64_t a1)
{
  return sub_191E315C4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_191E315C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 1u)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ReferenceCodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_191E31554(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ReferenceCodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_191E31554(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_191E315C4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ReferenceCodingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_191E315C4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferenceCodingError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferenceCodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191E317CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_191E317E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReferenceCodingError()
{
  return &type metadata for ReferenceCodingError;
}

uint64_t sub_191E31810()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t method lookup function for RegistrationContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RegistrationContainer);
}

void __swiftcall NSURL.appendQueryItem(with:value:)(NSURL_optional *__return_ptr retstr, Swift::String with, Swift::String value)
{
  Swift::String v46 = value;
  Swift::String v45 = with;
  uint64_t v3 = sub_191EE71B0();
  OUTLINED_FUNCTION_0();
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v5);
  int64_t v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191D62894(0, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v48 = (char *)&v41 - v8;
  uint64_t v9 = sub_191EE70D0();
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191D62894(0, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v41 - v25;
  sub_191EE7380();
  sub_191EE7120();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  uint64_t v47 = v18;
  unsigned int v42 = v27;
  v27((uint64_t)v23, v18);
  if (OUTLINED_FUNCTION_1_45() || (uint64_t v29 = sub_191EE7100()) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v28 = v29;
  }
  sub_191EE70A0();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v17, v9);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_191DCC3D0();
    uint64_t v28 = v39;
  }
  unint64_t v30 = *(void *)(v28 + 16);
  if (v30 >= *(void *)(v28 + 24) >> 1)
  {
    sub_191DCC3D0();
    uint64_t v28 = v40;
  }
  *(void *)(v28 + 16) = v30 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v30, v15, v9);
  if (OUTLINED_FUNCTION_1_45()) {
    swift_bridgeObjectRelease();
  }
  else {
    sub_191EE7110();
  }
  uint64_t v32 = v47;
  uint64_t v31 = (uint64_t)v48;
  if (OUTLINED_FUNCTION_1_45())
  {
    __swift_storeEnumTagSinglePayload(v31, 1, 1, v32);
  }
  else
  {
    uint64_t v33 = v43;
    uint64_t v34 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v26, v3);
    sub_191EE7130();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v3);
    if (__swift_getEnumTagSinglePayload(v31, 1, v32) != 1)
    {
      sub_191EE7350();
      uint64_t v37 = OUTLINED_FUNCTION_2_49();
      v38(v37);
      v42(v31, v32);
      goto LABEL_16;
    }
  }
  uint64_t v35 = OUTLINED_FUNCTION_2_49();
  v36(v35);
LABEL_16:
  sub_191D79C68((uint64_t)v26);
}

ValueMetadata *type metadata accessor for AuthTokenRequest()
{
  return &type metadata for AuthTokenRequest;
}

uint64_t sub_191E31CA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_191EE9770() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473694C6C7275 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_191EE9770();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_191E31D80(char a1)
{
  if (a1) {
    return 0x7473694C6C7275;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_191E31DB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[0] = a4;
  sub_191E32008();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191E32064();
  sub_191EE9B10();
  char v14 = 0;
  sub_191EE95B0();
  if (!v4)
  {
    v12[1] = v12[0];
    char v13 = 1;
    sub_191DCFCF0(0);
    sub_191E320B0();
    sub_191EE95E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_191E31F40()
{
  return sub_191E31D80(*v0);
}

uint64_t sub_191E31F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191E31CA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191E31F70(uint64_t a1)
{
  unint64_t v2 = sub_191E32064();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191E31FAC(uint64_t a1)
{
  unint64_t v2 = sub_191E32064();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191E31FE8(void *a1)
{
  return sub_191E31DB0(a1, *v1, v1[1], v1[2]);
}

void sub_191E32008()
{
  if (!qword_1EB508B48)
  {
    sub_191E32064();
    unint64_t v0 = sub_191EE95F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508B48);
    }
  }
}

unint64_t sub_191E32064()
{
  unint64_t result = qword_1EB5087D0;
  if (!qword_1EB5087D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5087D0);
  }
  return result;
}

unint64_t sub_191E320B0()
{
  unint64_t result = qword_1EB508AC8;
  if (!qword_1EB508AC8)
  {
    sub_191DCFCF0(255);
    sub_191E32120();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB508AC8);
  }
  return result;
}

unint64_t sub_191E32120()
{
  unint64_t result = qword_1EB5086F8;
  if (!qword_1EB5086F8)
  {
    sub_191EE73F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5086F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AuthTokenRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E3223CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenRequest.CodingKeys()
{
  return &type metadata for AuthTokenRequest.CodingKeys;
}

unint64_t sub_191E32278()
{
  unint64_t result = qword_1E92F3E70;
  if (!qword_1E92F3E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3E70);
  }
  return result;
}

unint64_t sub_191E322C8()
{
  unint64_t result = qword_1EB5087E0;
  if (!qword_1EB5087E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5087E0);
  }
  return result;
}

unint64_t sub_191E32318()
{
  unint64_t result = qword_1EB5087D8;
  if (!qword_1EB5087D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5087D8);
  }
  return result;
}

uint64_t sub_191E32368(uint64_t a1)
{
  return sub_191E325AC(a1, &qword_1E92F2668, &qword_1EB5082D8, (uint64_t)&type metadata for AnyReference, (void (*)(uint64_t, uint64_t))sub_191E1C2BC);
}

uint64_t sub_191E32398(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AuthToken();
  uint64_t v5 = OUTLINED_FUNCTION_86(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  uint64_t v14 = 0;
  type metadata accessor for UnfairLock();
  OUTLINED_FUNCTION_11_3();
  UnfairLock.init(options:)((int *)&v14);
  uint64_t v9 = OUTLINED_FUNCTION_28_8();
  sub_191DE2270(v9, v10);
  sub_191E35328(0, &qword_1EB508A20, (void (*)(uint64_t))type metadata accessor for AuthToken);
  swift_allocObject();
  uint64_t v11 = OUTLINED_FUNCTION_13_16();
  uint64_t v12 = sub_191E32880(v11, v8);
  sub_191DE5024(a1);
  *(void *)(v2 + 16) = v12;
  return v2;
}

uint64_t sub_191E32480(uint64_t a1)
{
  OUTLINED_FUNCTION_25_2();
  uint64_t v2 = OUTLINED_FUNCTION_11_3();
  uint64_t v3 = OUTLINED_FUNCTION_47(v2);
  sub_191E35328(0, &qword_1EB508A28, (void (*)(uint64_t))sub_191DA5E5C);
  OUTLINED_FUNCTION_107();
  uint64_t v4 = sub_191E32AA8(v3, a1, (void (*)(uint64_t, uint64_t))sub_191DB6734);
  return OUTLINED_FUNCTION_41_4(v4);
}

uint64_t sub_191E32518(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_25_2();
  uint64_t v4 = OUTLINED_FUNCTION_11_3();
  uint64_t v5 = OUTLINED_FUNCTION_47(v4);
  sub_191E35328(0, &qword_1E92F2A50, (void (*)(uint64_t))sub_191DCFFB8);
  swift_allocObject();
  uint64_t v6 = sub_191E32A14(v5, a1, a2);
  return OUTLINED_FUNCTION_41_4(v6);
}

uint64_t sub_191E325AC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_25_2();
  uint64_t v11 = OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_47(v11);
  sub_191E353CC(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  OUTLINED_FUNCTION_107();
  uint64_t v12 = OUTLINED_FUNCTION_13_16();
  *(void *)(v5 + 16) = sub_191E32AA8(v12, a1, a5);
  return v5;
}

uint64_t sub_191E32658()
{
  uint64_t v1 = v0;
  sub_191EE6F60();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v4 - v3;
  uint64_t v12 = 0;
  type metadata accessor for UnfairLock();
  OUTLINED_FUNCTION_11_3();
  UnfairLock.init(options:)((int *)&v12);
  OUTLINED_FUNCTION_15_0();
  v6();
  sub_191E35328(0, &qword_1E92F2A48, MEMORY[0x1E4F26C48]);
  swift_allocObject();
  uint64_t v7 = OUTLINED_FUNCTION_13_16();
  uint64_t v8 = sub_191E32B34(v7, v5);
  uint64_t v9 = OUTLINED_FUNCTION_28_8();
  v10(v9);
  *(void *)(v1 + 16) = v8;
  return v1;
}

uint64_t sub_191E3277C(char a1)
{
  char v1 = a1 & 1;
  OUTLINED_FUNCTION_25_2();
  uint64_t v2 = OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_47(v2);
  sub_191D65B54(0, &qword_1EB50B5C8, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for Seal);
  OUTLINED_FUNCTION_107();
  uint64_t v3 = OUTLINED_FUNCTION_13_16();
  uint64_t v4 = sub_191E32CF8(v3, v1);
  return OUTLINED_FUNCTION_41_4(v4);
}

uint64_t sub_191E32804()
{
  OUTLINED_FUNCTION_25_2();
  uint64_t v0 = OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_47(v0);
  sub_191D65B54(0, &qword_1EB50C430, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for Seal);
  OUTLINED_FUNCTION_107();
  uint64_t v1 = OUTLINED_FUNCTION_39_3();
  uint64_t v2 = sub_191E32D7C(v1);
  return OUTLINED_FUNCTION_41_4(v2);
}

uint64_t sub_191E32880(uint64_t a1, uint64_t a2)
{
  sub_191E35378(0, &qword_1EB5089D8, &qword_1EB5089D0, (void (*)(uint64_t))type metadata accessor for AuthToken);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v13 - v6;
  *(void *)(v2 + 32) = MEMORY[0x1E4FBC860];
  uint64_t v8 = v2 + *(void *)(*(void *)v2 + 112);
  sub_191E35448(0, &qword_1EB5089D0, (void (*)(uint64_t))type metadata accessor for AuthToken);
  uint64_t v10 = v9;
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 1;
  sub_191E3549C(a2, (uint64_t)v7);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
  uint64_t v11 = v2 + *(void *)(*(void *)v2 + 112);
  swift_beginAccess();
  sub_191E35500((uint64_t)v7, v11, &qword_1EB5089D8, &qword_1EB5089D0, (void (*)(uint64_t))type metadata accessor for AuthToken);
  swift_endAccess();
  return v2;
}

uint64_t sub_191E32A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 56) = -1;
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = 1;
  swift_beginAccess();
  uint64_t v6 = *(void **)(v3 + 40);
  uint64_t v7 = *(void *)(v3 + 48);
  *(void *)(v3 + 40) = a2;
  *(void *)(v3 + 48) = a3;
  char v8 = *(unsigned char *)(v3 + 56);
  *(unsigned char *)(v3 + 56) = 0;
  sub_191DCFE40(v6, v7, v8);
  return v3;
}

uint64_t sub_191E32AA8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 32) = v6;
  *(unsigned char *)(v3 + 48) = -1;
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = 1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = a2;
  uint64_t v8 = *(unsigned __int8 *)(v3 + 48);
  *(unsigned char *)(v3 + 48) = 0;
  a3(v7, v8);
  return v3;
}

uint64_t sub_191E32B34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x1E4F26C48];
  sub_191E35378(0, &qword_1E92F2A18, &qword_1E92F2A10, MEMORY[0x1E4F26C48]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - v7;
  *(void *)(v2 + 32) = MEMORY[0x1E4FBC860];
  uint64_t v9 = v2 + *(void *)(*(void *)v2 + 112);
  sub_191E35448(0, &qword_1E92F2A10, v5);
  uint64_t v11 = v10;
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 1;
  uint64_t v12 = sub_191EE6F60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v8, a2, v12);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v11);
  uint64_t v13 = v2 + *(void *)(*(void *)v2 + 112);
  swift_beginAccess();
  sub_191E35500((uint64_t)v8, v13, &qword_1E92F2A18, &qword_1E92F2A10, v5);
  swift_endAccess();
  return v2;
}

uint64_t sub_191E32CF8(uint64_t a1, char a2)
{
  *(void *)(v2 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = -1;
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 1;
  uint64_t v3 = a2 & 1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = v3;
  char v5 = *(unsigned char *)(v2 + 48);
  *(unsigned char *)(v2 + 48) = 0;
  sub_191D74368(v4, v5);
  return v2;
}

uint64_t sub_191E32D7C(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 32) = v2;
  *(unsigned char *)(v1 + 48) = -1;
  *(void *)(v1 + 16) = a1;
  *(unsigned char *)(v1 + 24) = 1;
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = 0;
  char v4 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(v1 + 48) = 0;
  sub_191D74368(v3, v4);
  return v1;
}

uint64_t Cache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  Cache.init()();
  return v0;
}

uint64_t Cache.__allocating_init(_:)()
{
  uint64_t v0 = swift_allocObject();
  Cache.init(_:)();
  return v0;
}

void Cache.init(_:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v4 = *v0;
  uint64_t v5 = *(void *)(*v0 + 88);
  uint64_t v6 = OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_86(v6);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_35_5();
  uint64_t v89 = v8;
  OUTLINED_FUNCTION_1_2();
  uint64_t v79 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_12_17(v11, v71);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_29_6(v13, v14, v15, v16, v17, v18, v19, v20, v71);
  OUTLINED_FUNCTION_1_2();
  uint64_t v78 = v21;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_2_11();
  uint64_t v87 = v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v86 = (char *)&v71 - v25;
  uint64_t v99 = v5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v93 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_2_11();
  uint64_t v96 = v29;
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_30_5(v31, v32, v33, v34, v35, v36, v37, v38, v71);
  uint64_t v39 = *(void *)(v4 + 96);
  uint64_t v90 = v1;
  uint64_t v85 = v39;
  uint64_t v40 = sub_191EE7D90();
  unint64_t v74 = v0;
  v0[2] = v40;
  uint64_t v41 = (uint64_t)(v0 + 2);
  uint64_t v100 = qword_1EE2B6670;
  type metadata accessor for UnfairLock();
  OUTLINED_FUNCTION_11_3();
  uint64_t v42 = UnfairLock.init(options:)((int *)&v100);
  uint64_t v84 = v0 + 2;
  v0[3] = v42;
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v43 = sub_191EE9410();
    uint64_t v75 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    unint64_t v46 = v43 | 0x8000000000000000;
  }
  else
  {
    uint64_t v75 = v3 + 64;
    OUTLINED_FUNCTION_11_1();
    uint64_t v45 = v47 & v48;
  }
  int64_t v49 = 0;
  uint64_t v77 = v46 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v73 = v44;
  uint64_t v98 = v78 + 16;
  uint64_t v97 = v79 + 16;
  uint64_t v92 = v27 + 32;
  uint64_t v83 = v78 + 32;
  uint64_t v82 = v79 + 32;
  uint64_t v81 = v79 + 8;
  uint64_t v80 = v78 + 8;
  int64_t v76 = (unint64_t)(v44 + 64) >> 6;
  int64_t v72 = v76 - 1;
  unint64_t v91 = v46;
  uint64_t v50 = TupleTypeMetadata2;
  if ((v46 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v51 = v95;
  if (v45)
  {
    uint64_t v41 = (v45 - 1) & v45;
    int64_t v52 = v49;
LABEL_7:
    OUTLINED_FUNCTION_40_3();
    uint64_t v53 = v96;
    OUTLINED_FUNCTION_1_35();
    v54();
    OUTLINED_FUNCTION_1_35();
    v55();
    uint64_t v56 = 0;
    goto LABEL_17;
  }
  int64_t v52 = v49 + 1;
  uint64_t v53 = v96;
  if (__OFADD__(v49, 1))
  {
    __break(1u);
  }
  else
  {
    if (v52 >= v76)
    {
      OUTLINED_FUNCTION_44_4();
      int64_t v52 = v49;
      goto LABEL_17;
    }
    uint64_t v58 = *(void *)(v75 + 8 * v52);
    if (v58) {
      goto LABEL_13;
    }
    if (v49 + 2 >= v76)
    {
      OUTLINED_FUNCTION_44_4();
      goto LABEL_17;
    }
    uint64_t v58 = *(void *)(v75 + 8 * (v49 + 2));
    if (v58)
    {
      int64_t v52 = v49 + 2;
LABEL_13:
      uint64_t v41 = (v58 - 1) & v58;
      goto LABEL_7;
    }
    int64_t v69 = v49 + 3;
    if (v49 + 3 >= v76)
    {
      OUTLINED_FUNCTION_44_4();
      int64_t v52 = v70;
      goto LABEL_17;
    }
    uint64_t v58 = *(void *)(v75 + 8 * v69);
    if (v58)
    {
      int64_t v52 = v49 + 3;
      goto LABEL_13;
    }
    while (1)
    {
      int64_t v52 = v69 + 1;
      if (__OFADD__(v69, 1)) {
        break;
      }
      if (v52 >= v76)
      {
        OUTLINED_FUNCTION_44_4();
        int64_t v52 = v72;
LABEL_17:
        while (1)
        {
          __swift_storeEnumTagSinglePayload(v53, v56, 1, v50);
          OUTLINED_FUNCTION_22_9();
          OUTLINED_FUNCTION_15();
          v59();
          if (__swift_getEnumTagSinglePayload(v51, 1, v50) == 1) {
            break;
          }
          OUTLINED_FUNCTION_15();
          v60();
          uint64_t v61 = v99;
          OUTLINED_FUNCTION_15();
          v62();
          OUTLINED_FUNCTION_1_35();
          v63();
          uint64_t v64 = v88;
          OUTLINED_FUNCTION_1_35();
          v65();
          uint64_t v66 = v89;
          sub_191D732DC(v64, v61, v89);
          __swift_storeEnumTagSinglePayload(v66, 0, 1, v90);
          swift_beginAccess();
          sub_191EE7F20();
          OUTLINED_FUNCTION_13_16();
          sub_191EE7F40();
          swift_endAccess();
          OUTLINED_FUNCTION_33();
          v67();
          uint64_t v50 = TupleTypeMetadata2;
          OUTLINED_FUNCTION_33();
          v68();
          int64_t v49 = v52;
          uint64_t v45 = v41;
          if ((v91 & 0x8000000000000000) == 0) {
            goto LABEL_5;
          }
LABEL_8:
          uint64_t v57 = sub_191EE9420();
          uint64_t v51 = v95;
          uint64_t v53 = v96;
          if (v57)
          {
            sub_191EE9730();
            swift_unknownObjectRelease();
            sub_191EE9730();
            swift_unknownObjectRelease();
            uint64_t v56 = 0;
          }
          else
          {
            uint64_t v56 = 1;
          }
          int64_t v52 = v49;
          uint64_t v41 = v45;
        }
        sub_191D8CCD4();
        OUTLINED_FUNCTION_36();
        return;
      }
      uint64_t v58 = *(void *)(v75 + 8 * v52);
      ++v69;
      if (v58) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
}

uint64_t Cache.dictionary.getter()
{
  UnfairLock.lock()();
  swift_beginAccess();
  OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_0_22();
  type metadata accessor for CacheEntry();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v1 = sub_191EE7F00();
  swift_bridgeObjectRelease();
  sub_191E33644(v0);
  return v1;
}

void sub_191E33644(uint64_t a1)
{
}

void sub_191E33650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v7 = sub_191EE8DF0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - v10;
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v14 - v12, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  Cache.subscript.setter();
}

void (*Cache.subscript.modify(void *a1))()
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_33_6();
  uint64_t v5 = sub_191EE8DF0();
  v3[1] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[2] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  v3[5] = *(void *)(v4 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  v3[6] = v8;
  size_t v11 = *(void *)(v10 + 64);
  v3[7] = malloc(v11);
  v3[8] = malloc(v11);
  (*(void (**)(void))(v9 + 16))();
  Cache.subscript.getter();
  return sub_191E33920;
}

void sub_191E33920()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 56);
  uint64_t v3 = *(void **)(*v0 + 64);
  uint64_t v6 = *(void **)(*v0 + 24);
  uint64_t v5 = *(void **)(*v0 + 32);
  if (v4)
  {
    uint64_t v7 = *(void *)(v1 + 8);
    uint64_t v8 = *(void *)(v1 + 16);
    OUTLINED_FUNCTION_15_0();
    v9();
    uint64_t v10 = OUTLINED_FUNCTION_28_8();
    v11(v10);
    Cache.subscript.setter();
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    Cache.subscript.setter();
  }
  free(v3);
  free(v2);
  free(v5);
  free(v6);
  OUTLINED_FUNCTION_36();
  free(v12);
}

void Cache.subscript.getter(uint64_t a1, double a2)
{
  uint64_t v7 = *v2;
  uint64_t v8 = *(void *)(*v2 + 88);
  uint64_t v9 = sub_191EE8DF0();
  OUTLINED_FUNCTION_86(v9);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_35_5();
  uint64_t v53 = v11;
  uint64_t v60 = OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_1_2();
  uint64_t v58 = v12;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_1_2();
  uint64_t v61 = v14;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_4_28(v16, v48);
  uint64_t v17 = *(void *)(v7 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v19 = v18;
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  int64_t v52 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v48 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v54 = (char *)&v48 - v27;
  uint64_t v28 = *(void *)(v7 + 96);
  uint64_t v55 = v8;
  uint64_t v64 = v28;
  v66[1] = sub_191EE7D90();
  uint64_t v29 = v2;
  uint64_t v50 = v2[3];
  UnfairLock.lock()();
  if (a2 < 0.0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v30 = sub_191EE8530();
    v66[0] = v30;
    OUTLINED_FUNCTION_25_9();
    if (v30 != v31)
    {
      uint64_t v49 = v21;
      uint64_t v32 = v29 + 2;
      uint64_t v62 = v19 + 32;
      uint64_t v63 = (void (**)(void))(v19 + 16);
      uint64_t v59 = v61 + 32;
      uint64_t v56 = v61 + 8;
      uint64_t v61 = v19 + 8;
      uint64_t v51 = v55 - 8;
      uint64_t v57 = v19;
      v58 += 8;
      uint64_t v33 = v54;
      do
      {
        char v34 = sub_191EE85E0();
        OUTLINED_FUNCTION_32_6();
        if (v34)
        {
          OUTLINED_FUNCTION_15_15();
          uint64_t v35 = *(void (**)(void))(v19 + 16);
          ((void (*)(char *))v35)(v33);
        }
        else
        {
          uint64_t v47 = sub_191EE91C0();
          if (v49 != 8) {
            goto LABEL_20;
          }
          uint64_t v65 = v47;
          uint64_t v35 = *v63;
          OUTLINED_FUNCTION_15_0();
          v35();
          swift_unknownObjectRelease();
        }
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        MEMORY[0x192FE7830](v66, a1, v17);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_15();
        v36();
        OUTLINED_FUNCTION_2_29();
        MEMORY[0x192FE70E0](v26, *v32, v17, v3, v64);
        if (__swift_getEnumTagSinglePayload(v4, 1, v3) == 1)
        {
          OUTLINED_FUNCTION_33();
          v37();
          swift_endAccess();
        }
        else
        {
          OUTLINED_FUNCTION_22_9();
          OUTLINED_FUNCTION_15();
          v38();
          swift_endAccess();
          double v39 = sub_191D7218C();
          if (v39 >= -a2 && v39 <= a2)
          {
            OUTLINED_FUNCTION_15_0();
            v35();
            uint64_t v41 = v53;
            OUTLINED_FUNCTION_1_35();
            v42();
            OUTLINED_FUNCTION_31_6(v41);
            sub_191EE7F20();
            uint64_t v33 = v54;
            sub_191EE7F40();
          }
          OUTLINED_FUNCTION_22_9();
          OUTLINED_FUNCTION_33();
          v43();
          uint64_t v19 = v57;
        }
        OUTLINED_FUNCTION_33();
        v44();
        uint64_t v45 = v66[0];
        OUTLINED_FUNCTION_25_9();
      }
      while (v45 != v46);
    }
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v50 + 16));
  }
}

void static Cache.+= infix(_:_:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v67 = type metadata accessor for CacheEntry();
  uint64_t v7 = sub_191EE8DF0();
  OUTLINED_FUNCTION_86(v7);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_4_28(v9, v57);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_12_17(v12, v58);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_29_6(v14, v15, v16, v17, v18, v19, v20, v21, v59);
  uint64_t v69 = v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_7_14();
  uint64_t v26 = v24 - v25;
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_30_5(v28, v29, v30, v31, v32, v33, v34, v35, v60);
  uint64_t v61 = *(void *)(v5 + 24);
  UnfairLock.lock()();
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v36 = sub_191EE9410();
    unint64_t v62 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    unint64_t v39 = v36 | 0x8000000000000000;
  }
  else
  {
    unint64_t v62 = v3 + 64;
    OUTLINED_FUNCTION_11_1();
    uint64_t v38 = v40 & v41;
    unint64_t v39 = v3;
  }
  uint64_t v64 = v5 + 16;
  int64_t v63 = (unint64_t)(v37 + 64) >> 6;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  int64_t v42 = 0;
  if ((v39 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v43 = v68;
  if (v38)
  {
    uint64_t v1 = (v38 - 1) & v38;
    int64_t v44 = v42;
LABEL_7:
    OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_1_35();
    v45();
    OUTLINED_FUNCTION_1_35();
    v46();
    uint64_t v47 = 0;
    goto LABEL_17;
  }
  int64_t v44 = v42 + 1;
  if (__OFADD__(v42, 1))
  {
    __break(1u);
  }
  else
  {
    if (v44 >= v63)
    {
      OUTLINED_FUNCTION_38_4();
      int64_t v44 = v42;
      goto LABEL_17;
    }
    uint64_t v48 = *(void *)(v62 + 8 * v44);
    if (v48) {
      goto LABEL_13;
    }
    if (v42 + 2 >= v63)
    {
      OUTLINED_FUNCTION_38_4();
      goto LABEL_17;
    }
    uint64_t v48 = *(void *)(v62 + 8 * (v42 + 2));
    if (v48)
    {
      int64_t v44 = v42 + 2;
LABEL_13:
      uint64_t v1 = (v48 - 1) & v48;
      goto LABEL_7;
    }
    int64_t v55 = v42 + 3;
    if (v42 + 3 >= v63)
    {
      OUTLINED_FUNCTION_38_4();
      int64_t v44 = v56;
      goto LABEL_17;
    }
    uint64_t v48 = *(void *)(v62 + 8 * v55);
    if (v48)
    {
      int64_t v44 = v42 + 3;
      goto LABEL_13;
    }
    while (1)
    {
      int64_t v44 = v55 + 1;
      if (__OFADD__(v55, 1)) {
        break;
      }
      if (v44 >= v63)
      {
        OUTLINED_FUNCTION_38_4();
        int64_t v44 = v63 - 1;
LABEL_17:
        while (1)
        {
          __swift_storeEnumTagSinglePayload(v26, v47, 1, TupleTypeMetadata2);
          OUTLINED_FUNCTION_22_9();
          OUTLINED_FUNCTION_15();
          v49();
          if (__swift_getEnumTagSinglePayload(v43, 1, TupleTypeMetadata2) == 1) {
            break;
          }
          int64_t v70 = v44;
          OUTLINED_FUNCTION_15();
          v50();
          OUTLINED_FUNCTION_15();
          v51();
          OUTLINED_FUNCTION_1_35();
          v52();
          sub_191D732DC(v65, v69, v66);
          __swift_storeEnumTagSinglePayload(v66, 0, 1, v67);
          uint64_t v53 = v1;
          uint64_t v1 = v64;
          swift_beginAccess();
          sub_191EE7F20();
          OUTLINED_FUNCTION_13_16();
          sub_191EE7F40();
          swift_endAccess();
          OUTLINED_FUNCTION_33();
          v54();
          int64_t v42 = v70;
          uint64_t v38 = v53;
          if ((v39 & 0x8000000000000000) == 0) {
            goto LABEL_5;
          }
LABEL_8:
          uint64_t v43 = v68;
          if (sub_191EE9420())
          {
            sub_191EE9730();
            swift_unknownObjectRelease();
            sub_191EE9730();
            swift_unknownObjectRelease();
            uint64_t v47 = 0;
          }
          else
          {
            uint64_t v47 = 1;
          }
          int64_t v44 = v42;
          uint64_t v1 = v38;
        }
        sub_191D8CCD4();
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 16));
        OUTLINED_FUNCTION_36();
        return;
      }
      uint64_t v48 = *(void *)(v62 + 8 * v44);
      ++v55;
      if (v48) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
}

uint64_t Cache.read(_:maxAge:)(uint64_t a1, double a2)
{
  return Promise.__allocating_init(value:)();
}

uint64_t Cache.write(values:)()
{
  static Cache.+= infix(_:_:)();
  sub_191EE7F20();
  type metadata accessor for Promise();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return Promise.__allocating_init(value:)();
}

Swift::Void __swiftcall Cache.removeAll()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  UnfairLock.lock()();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_0_22();
  type metadata accessor for CacheEntry();
  OUTLINED_FUNCTION_0_22();
  sub_191D83A24();
  sub_191EE7F20();
  sub_191EE7F10();
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t Cache.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t Cache.__deallocating_deinit()
{
  Cache.deinit();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t Cache<>.readAsync(_:)(uint64_t a1)
{
  return Cache.read(_:maxAge:)(a1, 1.79769313e308);
}

uint64_t Cache<>.deleteAsync(_:)()
{
  swift_retain();
  sub_191D866C0((void (*)(void))sub_191E34EEC);
  swift_release();
  uint64_t v0 = MEMORY[0x1E4FBB1A0];
  sub_191E353CC(0, &qword_1E92F3BD8, (unint64_t *)&qword_1EB50DB98, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  uint64_t v1 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return sub_191E325AC(v1, &qword_1E92F3BE0, (unint64_t *)&qword_1EB50DB98, v0, (void (*)(uint64_t, uint64_t))sub_191E1C2BC);
}

uint64_t sub_191E34D74()
{
  -= infix<A, B>(_:_:)();
  return swift_endAccess();
}

uint64_t sub_191E34E08(uint64_t a1)
{
  return Cache<>.readAsync(_:)(a1);
}

uint64_t sub_191E34E2C()
{
  return Cache<>.readAsync(_:maxAge:)();
}

uint64_t sub_191E34E50()
{
  return Cache<>.writeAsync(_:)();
}

uint64_t sub_191E34E74()
{
  return Cache<>.deleteAsync(_:)();
}

uint64_t sub_191E34E98()
{
  OUTLINED_FUNCTION_19();
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_191E34EEC()
{
  return sub_191E34D74();
}

void sub_191E34EF4()
{
}

uint64_t sub_191E34F20()
{
  return 24;
}

__n128 sub_191E34F2C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for Cache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Cache);
}

uint64_t dispatch thunk of Cache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of Cache.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t *sub_191E34F80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_191EE7640();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = v7 + v10;
  int v13 = *(_DWORD *)(v6 + 80) | v10;
  uint64_t v14 = v13;
  int v15 = v13 & 0x100000;
  if (v14 > 7
    || v15 != 0
    || (v12 & (unint64_t)~v11) + *(void *)(*(void *)(v8 - 8) + 64) > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v19 = v8;
    uint64_t v20 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v20, ((unint64_t)a2 + v12) & v20, v19);
  }
  return a1;
}

uint64_t sub_191E350EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_191EE7640();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_191E35198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_191EE7640();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_191E35244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_191EE7640();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

void sub_191E35328(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OUTLINED_FUNCTION_39_3();
    unint64_t v4 = type metadata accessor for Seal();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_191E35378(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_191E35448(255, a3, a4);
    OUTLINED_FUNCTION_39_3();
    unint64_t v5 = sub_191EE8DF0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_191E353CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_191D65B54(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_191E35448(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OUTLINED_FUNCTION_39_3();
    unint64_t v4 = type metadata accessor for Seal.Resolution();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191E3549C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191E35500(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_191E35378(0, a3, a4, a5);
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(a2, a1);
  return a2;
}

unint64_t sub_191E35574(unint64_t result, int64_t a2, void *a3, uint64_t a4, void *a5)
{
  unint64_t v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v5)
    {

      uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_8:

      swift_unknownObjectRelease();
      return v12;
    }
    int64_t v9 = result;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_191EE92E0();
    __n128 result = sub_191E35A0C();
    if (a2 >= v9 && (v5 & 0x8000000000000000) == 0)
    {
      do
      {
        id v10 = a3;
        swift_unknownObjectRetain();
        id v11 = a5;
        sub_191E357D4(v10, a4, a5);
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
        --v5;
      }
      while (v5);
      uint64_t v12 = v14;

      a5 = v11;
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t URLSessionPool.__allocating_init(size:configuration:delegate:delegateQueue:)(int64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  URLSessionPool.init(size:configuration:delegate:delegateQueue:)(a1, a2, a3, a4);
  return v8;
}

uint64_t URLSessionPool.init(size:configuration:delegate:delegateQueue:)(int64_t a1, void *a2, uint64_t a3, void *a4)
{
  v4[3] = 0;
  uint64_t v10 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t result = UnfairLock.init(options:)((int *)&v10);
  v4[4] = result;
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    void v4[2] = sub_191E35574(0, a1, a2, a3, a4);
    return (uint64_t)v4;
  }
  return result;
}

id sub_191E357D4(void *a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, a3);

  swift_unknownObjectRelease();
  return v5;
}

NSURLSession __swiftcall URLSessionPool.nextSession()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  UnfairLock.lock()();
  unint64_t v4 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  sub_191E359E8(v3, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0) {
    result.super.Class isa = (Class)MEMORY[0x192FE8380](v3, v4);
  }
  else {
    result.super.Class isa = (Class)*(id *)(v4 + 8 * v3 + 32);
  }
  Class isa = result.super.isa;
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
  }
  else if (!(v4 >> 62))
  {
    uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_6;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v9 = sub_191EE94B0();
  result.super.Class isa = (Class)swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_14;
  }
LABEL_6:
  if (v8 != 0x8000000000000000 || v9 != -1)
  {
    *(void *)(v1 + 24) = v8 % v9;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
    return (NSURLSession)isa;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t URLSessionPool.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t URLSessionPool.__deallocating_deinit()
{
  URLSessionPool.deinit();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t type metadata accessor for URLSessionPool()
{
  return self;
}

uint64_t method lookup function for URLSessionPool(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for URLSessionPool);
}

uint64_t dispatch thunk of URLSessionPool.__allocating_init(size:configuration:delegate:delegateQueue:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_191E359E8(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_191E35A0C()
{
  unint64_t result = qword_1EB50D3A0;
  if (!qword_1EB50D3A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB50D3A0);
  }
  return result;
}

uint64_t URLHandlerContext.init(match:clientContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_191E081BC(a1, a4);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for URLHandlerContext() + 28);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v8(v7, a2, a3);
}

uint64_t type metadata accessor for URLHandlerContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t URLHandlerContext.match.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191E08074(v1, a1);
}

uint64_t URLHandlerContext.clientContext.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t sub_191E35B30()
{
  uint64_t result = type metadata accessor for URLHandlerMatch();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_191E35BFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11;
  unint64_t v13 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
  unsigned int v14 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  int v15 = (*(_DWORD *)(v7 + 80) | v11) & 0x100000;
  if (v14 > 7 || v15 != 0 || (v13 & ~v12) + *(void *)(v10 + 64) > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v23 = ~v12;
    uint64_t v24 = v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    uint64_t v19 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v19 = *v20;
    v19[1] = v20[1];
    v19[2] = v20[2];
    uint64_t v19[3] = v20[3];
    v19[4] = v20[4];
    v19[5] = v20[5];
    v19[6] = v20[6];
    v19[7] = v20[7];
    v19[8] = v20[8];
    v19[9] = v20[9];
    *(void *)(((unint64_t)v19 + 87) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v20 + 87) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v21(((unint64_t)a1 + v13) & v23, ((unint64_t)a2 + v13) & v23, v24);
  }
  return a1;
}

uint64_t sub_191E35E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191EE73F0();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = *(uint64_t (**)(unint64_t))(v7 + 8);
  unint64_t v9 = (a1 + *(unsigned __int8 *)(v7 + 80) + (((v6 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);

  return v8(v9);
}

uint64_t sub_191E35F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  unint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  void v9[4] = v10[4];
  v9[5] = v10[5];
  v9[6] = v10[6];
  v9[7] = v10[7];
  v9[8] = v10[8];
  v9[9] = v10[9];
  *(void *)(((unint64_t)v9 + 87) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 87) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  unint64_t v14 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v13 + 8;
  unint64_t v17 = (v14 + a1) & ~v13;
  unint64_t v15 = (v14 + a2) & ~v13;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v18(v17, v15, v11);
  return a1;
}

uint64_t sub_191E36114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  unint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  v9[1] = v10[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[2] = v10[2];
  v9[3] = v10[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  void v9[4] = v10[4];
  v9[5] = v10[5];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[6] = v10[6];
  v9[7] = v10[7];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[8] = v10[8];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[9] = v10[9];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v9 + 87) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 87) & 0xFFFFFFFFFFFFFFF8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))((v13 + a1) & ~v12, (v13 + a2) & ~v12);
  return a1;
}

uint64_t sub_191E362D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  memcpy((void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8), (const void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8), 0x50uLL);
  *(void *)((((v8 + a1) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((v8 + a2) & 0xFFFFFFFFFFFFFFF8)
                                                                                             + 87) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v10 + 8;
  (*(void (**)(unint64_t, unint64_t))(v9 + 32))((v11 + a1) & ~v10, (v11 + a2) & ~v10);
  return a1;
}

uint64_t sub_191E363E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  uint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v9[2] = v10[2];
  v9[3] = v10[3];
  swift_bridgeObjectRelease();
  void v9[4] = v10[4];
  v9[5] = v10[5];
  swift_bridgeObjectRelease();
  v9[6] = v10[6];
  v9[7] = v10[7];
  swift_bridgeObjectRelease();
  v9[8] = v10[8];
  swift_bridgeObjectRelease();
  v9[9] = v10[9];
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v9 + 87) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 87) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))((v13 + a1) & ~v12, (v13 + a2) & ~v12);
  return a1;
}

uint64_t sub_191E36568(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE73F0();
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v11 = *(unsigned int *)(v9 + 84);
  if (v11 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = *(void *)(v9 + 64);
  if (!a2) {
    return 0;
  }
  unint64_t v16 = ((((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v14 + 8;
  if (a2 <= v12) {
    goto LABEL_28;
  }
  uint64_t v17 = (v16 & ~v14) + v15;
  char v18 = 8 * v17;
  if (v17 > 3) {
    goto LABEL_10;
  }
  unsigned int v21 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
  if (HIWORD(v21))
  {
    int v19 = *(_DWORD *)((char *)a1 + v17);
    if (v19) {
      goto LABEL_18;
    }
  }
  else
  {
    if (v21 <= 0xFF)
    {
      if (v21 < 2) {
        goto LABEL_28;
      }
LABEL_10:
      int v19 = *((unsigned __int8 *)a1 + v17);
      if (!*((unsigned char *)a1 + v17)) {
        goto LABEL_28;
      }
LABEL_18:
      int v22 = (v19 - 1) << v18;
      if (v17 > 3) {
        int v22 = 0;
      }
      if (v17)
      {
        if (v17 <= 3) {
          int v23 = v17;
        }
        else {
          int v23 = 4;
        }
        switch(v23)
        {
          case 2:
            int v24 = *a1;
            break;
          case 3:
            int v24 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v24 = *(_DWORD *)a1;
            break;
          default:
            int v24 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v24 = 0;
      }
      return v12 + (v24 | v22) + 1;
    }
    int v19 = *(unsigned __int16 *)((char *)a1 + v17);
    if (*(unsigned __int16 *)((char *)a1 + v17)) {
      goto LABEL_18;
    }
  }
LABEL_28:
  if (v10 < v11)
  {
    uint64_t v25 = ((unint64_t)a1 + v16) & ~v14;
    uint64_t v7 = v11;
LABEL_32:
    return __swift_getEnumTagSinglePayload(v25, v7, v8);
  }
  if (v7 >= 0x7FFFFFFF)
  {
    uint64_t v25 = (uint64_t)a1;
    uint64_t v8 = v6;
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)((((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v26 >= 0xFFFFFFFF) {
    LODWORD(v26) = -1;
  }
  return (v26 + 1);
}

double sub_191E367DC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_191EE73F0();
  uint64_t v10 = *(unsigned int *)(*(void *)(v8 - 8) + 84);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(*(void *)(v8 - 8) + 84);
  }
  uint64_t v12 = *(void *)(a4 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  if (v14 <= v11) {
    unsigned int v15 = v11;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64);
  size_t v17 = ((((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  size_t v19 = ((v17 + v18) & ~v18) + *(void *)(v13 + 64);
  char v20 = 8 * v19;
  if (a3 <= v15)
  {
    int v21 = 0;
  }
  else if (v19 <= 3)
  {
    unsigned int v24 = ((a3 - v15 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v24))
    {
      int v21 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v21 = 2;
    }
    else
    {
      int v21 = v24 > 1;
    }
  }
  else
  {
    int v21 = 1;
  }
  if (v15 < a2)
  {
    unsigned int v22 = ~v15 + a2;
    if (v19 < 4)
    {
      int v23 = (v22 >> v20) + 1;
      if (v19)
      {
        int v25 = v22 & ~(-1 << v20);
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        a1[v19] = v23;
        return result;
      case 2:
        *(_WORD *)&a1[v19] = v23;
        return result;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)&a1[v19] = v23;
        return result;
      default:
        return result;
    }
  }
  switch(v21)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_27;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x191E36B0CLL);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return result;
      }
LABEL_27:
      if (v11 < v14)
      {
        uint64_t v26 = (unint64_t)&a1[v17 + v18] & ~v18;
        uint64_t v27 = a2;
        uint64_t v10 = v14;
LABEL_29:
        __swift_storeEnumTagSinglePayload(v26, v27, v10, v12);
        return result;
      }
      if (v11 >= a2)
      {
        if (v10 < 0x7FFFFFFF)
        {
          unint64_t v29 = (unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)(v29 + 72) = 0;
            double result = 0.0;
            *(_OWORD *)(v29 + 56) = 0u;
            *(_OWORD *)(v29 + 40) = 0u;
            *(_OWORD *)(v29 + 24) = 0u;
            *(_OWORD *)(v29 + 8) = 0u;
            *(void *)unint64_t v29 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v29 + 8) = (a2 - 1);
          }
          return result;
        }
        uint64_t v26 = (uint64_t)a1;
        uint64_t v27 = a2;
        uint64_t v12 = v8;
        goto LABEL_29;
      }
      if (((((v16 + 7) & 0xFFFFFFF8) + 87) & 0xFFFFFFF8) != 0xFFFFFFF8)
      {
        int v28 = ~v11 + a2;
        bzero(a1, v17);
        *(_DWORD *)a1 = v28;
      }
      return result;
  }
}

uint64_t SignpostReporter.init(createdDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(int *)(type metadata accessor for SignpostReporter() + 28);
  type metadata accessor for SignpostEntry();
  *(void *)(a2 + v4) = sub_191EE7DA0();
  uint64_t v5 = sub_191EE7640();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(a2, a1, v5);
}

uint64_t type metadata accessor for SignpostReporter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SignpostReporter.create(date:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unsigned int v15 = (char *)&v18 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16((char *)&v18 - v14, v3, v7);
  v16(v13, a1, v7);
  sub_191EE2958((uint64_t)v15, (uint64_t)v13, *(void *)(v3 + *(int *)(a2 + 28)), a3);
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t SignpostReporter.add(_:object:date:comment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v42 = a5;
  uint64_t v39 = a6;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v38 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2_11();
  uint64_t v35 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_191EE8DF0();
  OUTLINED_FUNCTION_0();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = type metadata accessor for SignpostEntry();
  OUTLINED_FUNCTION_0();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_2_11();
  uint64_t v34 = v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v34 - v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v36, v13);
  uint64_t v27 = *(void *)(v37 + *(int *)(type metadata accessor for SignpostRecorder() + 28));
  int v28 = *(void (**)(char *))(v7 + 16);
  uint64_t v29 = (uint64_t)v12;
  uint64_t v30 = v12;
  uint64_t v31 = v38;
  v28(v30);
  uint64_t v32 = v35;
  ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v35, v40, v31);
  sub_191E0CCA8((uint64_t)v18, v27, v29, v32, v41, v42, (uint64_t)v26);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v34, v26, v19);
  sub_191EE86B0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191EE8630();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v19);
}

uint64_t sub_191E36F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191E36FA4);
}

uint64_t sub_191E36FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_191E37030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191E37044);
}

void sub_191E37044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_191EE7640();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

id sub_191E370CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a5;
  uint64_t v11 = sub_191EE7690();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191DA50A8(a1, a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4 + OBJC_IVAR____TtC13TeaFoundation9Container_identifier, v11);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v20;
  *(void *)(v15 + 24) = a6;
  sub_191E37E38(0, &qword_1EB50D7E0, MEMORY[0x1E4FBC838] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for Definition);
  swift_allocObject();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  uint64_t v16 = sub_191E25DCC(a1, a2, a3, (uint64_t)v14, (uint64_t)sub_191E37E08, v15);
  swift_beginAccess();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  sub_191DA53FC();
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v17 = (objc_class *)type metadata accessor for BridgedDefinition();
  uint64_t v18 = (char *)objc_allocWithZone(v17);
  *(void *)&v18[OBJC_IVAR____TtC13TeaFoundation17BridgedDefinition_definition] = v16;
  v21.receiver = v18;
  v21.super_class = v17;
  return objc_msgSendSuper2(&v21, sel_init);
}

id sub_191E37354()
{
  OUTLINED_FUNCTION_21();
  swift_getMetatypeMetadata();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v9 = OUTLINED_FUNCTION_1_15((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v0);
  objc_msgSend(v9, sel_address);

  uint64_t v10 = OUTLINED_FUNCTION_29();
  uint64_t v11 = OUTLINED_FUNCTION_5_30(v10);
  id v15 = OUTLINED_FUNCTION_2_50(v11, v12, v13, v14, (uint64_t)sub_191E37EEC);
  swift_release();
  return v15;
}

double sub_191E374B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if ((id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1))
  {
    sub_191EE8FC0();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

id sub_191E3752C()
{
  OUTLINED_FUNCTION_3_32();
  swift_getMetatypeMetadata();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v9 = OUTLINED_FUNCTION_1_15((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v0);
  objc_msgSend(v9, sel_address);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  uint64_t v10 = OUTLINED_FUNCTION_29();
  uint64_t v11 = OUTLINED_FUNCTION_4_29(v10);
  id v15 = OUTLINED_FUNCTION_1_46(v11, v12, v13, v14, (uint64_t)sub_191E37EEC);
  swift_bridgeObjectRelease();
  swift_release();
  return v15;
}

uint64_t sub_191E375F8(void *a1, void (*a2)(void *__return_ptr))
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4);
  a2(v7);
  swift_unknownObjectRelease();
  sub_191E37E38(0, (unint64_t *)&qword_1EB50E540, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  uint64_t v5 = sub_191EE8DE0();
  sub_191D9EB34((uint64_t)v7);
  return v5;
}

id sub_191E377A8()
{
  OUTLINED_FUNCTION_21();
  sub_191DD667C();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v2 = v0;
  id v10 = OUTLINED_FUNCTION_1_15((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  objc_msgSend(v10, sel_address);

  uint64_t v11 = OUTLINED_FUNCTION_29();
  uint64_t v12 = OUTLINED_FUNCTION_5_30(v11);
  id v16 = OUTLINED_FUNCTION_2_50(v12, v13, v14, v15, (uint64_t)sub_191E37EEC);
  swift_release();
  return v16;
}

id sub_191E37898()
{
  OUTLINED_FUNCTION_3_32();
  sub_191DD667C();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v2 = v0;
  id v10 = OUTLINED_FUNCTION_1_15((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  objc_msgSend(v10, sel_address);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  uint64_t v11 = OUTLINED_FUNCTION_29();
  uint64_t v12 = OUTLINED_FUNCTION_4_29(v11);
  id v16 = OUTLINED_FUNCTION_1_46(v12, v13, v14, v15, (uint64_t)sub_191E37EEC);
  swift_bridgeObjectRelease();
  swift_release();
  return v16;
}

id sub_191E379A0()
{
  OUTLINED_FUNCTION_21();
  sub_191DD667C();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v2 = v0;
  id v10 = OUTLINED_FUNCTION_1_15((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  objc_msgSend(v10, sel_address);

  uint64_t v11 = OUTLINED_FUNCTION_29();
  uint64_t v12 = OUTLINED_FUNCTION_5_30(v11);
  id v16 = OUTLINED_FUNCTION_2_50(v12, v13, v14, v15, (uint64_t)sub_191E37EEC);
  swift_release();
  return v16;
}

id sub_191E37A90(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, uint64_t (*a7)(id, uint64_t, uint64_t))
{
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  id v13 = a3;
  id v14 = a1;
  uint64_t v15 = (void *)a7(v13, a6, v12);

  swift_release();

  return v15;
}

id sub_191E37B44()
{
  OUTLINED_FUNCTION_3_32();
  sub_191DD667C();
  id v1 = objc_allocWithZone((Class)TFKey);
  id v2 = v0;
  id v10 = OUTLINED_FUNCTION_1_15((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  objc_msgSend(v10, sel_address);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  uint64_t v11 = OUTLINED_FUNCTION_29();
  uint64_t v12 = OUTLINED_FUNCTION_4_29(v11);
  id v16 = OUTLINED_FUNCTION_1_46(v12, v13, v14, v15, (uint64_t)sub_191E37DEC);
  swift_bridgeObjectRelease();
  swift_release();
  return v16;
}

id sub_191E37C4C(void *a1, int a2, void *a3, uint64_t a4, void *aBlock, uint64_t a6, uint64_t a7, uint64_t (*a8)(id, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = _Block_copy(aBlock);
  if (a4)
  {
    uint64_t v14 = sub_191EE8110();
    a4 = v15;
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  id v17 = a3;
  id v18 = a1;
  uint64_t v19 = (void *)a8(v17, v14, a4, a7, v16);

  swift_release();
  swift_bridgeObjectRelease();

  return v19;
}

void sub_191E37D38()
{
}

uint64_t type metadata accessor for BridgedRegistrationContainer()
{
  return self;
}

uint64_t sub_191E37DAC()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

double sub_191E37DE4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_191E374B4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_191E37DEC(void *a1)
{
  return sub_191E375F8(a1, *(void (**)(void *__return_ptr))(v1 + 16));
}

uint64_t sub_191E37E08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void sub_191E37E38(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_191E37E84()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t BridgedContainer.resolver.getter()
{
  return swift_unknownObjectRetain();
}

id BridgedContainer.__allocating_init(bundleAssemblies:assemblies:)(unint64_t a1, unint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return BridgedContainer.init(bundleAssemblies:assemblies:)(a1, a2);
}

id BridgedContainer.init(bundleAssemblies:assemblies:)(unint64_t a1, unint64_t a2)
{
  unint64_t v77 = a2;
  uint64_t ObjectType = swift_getObjectType();
  if (a1 >> 62)
  {
    uint64_t v73 = v2;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    id result = (id)sub_191EE94B0();
    uint64_t v5 = (uint64_t)result;
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v6 = v2;
    id result = (id)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  unint64_t v74 = (objc_class *)ObjectType;
  uint64_t v75 = v2;
  if (v5)
  {
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_52;
    }
    uint64_t v8 = 0;
    uint64_t v9 = MEMORY[0x1E4FBC860];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x192FE8380](v8, a1);
      }
      else
      {
        uint64_t v10 = *(void *)(a1 + 8 * v8 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v82 = v10;
      sub_191D6D890(0, &qword_1EB50DEE0);
      swift_unknownObjectRetain();
      if (swift_dynamicCast())
      {
        uint64_t v11 = sub_191D6DE58(v81, (uint64_t)v86);
        OUTLINED_FUNCTION_2_51(v11, v12, v13, v14, v15, v16, v17, v18, (uint64_t)v74, (uint64_t)v75, v76, v77, (uint64_t)v78.receiver, (uint64_t)v78.super_class);
      }
      else
      {
        OUTLINED_FUNCTION_0_37();
        sub_191E38570(v19, (unint64_t *)&unk_1E92F3EA0, &qword_1EB50DEE0);
        uint64_t v80 = &unk_1EE2CE870;
        swift_unknownObjectRetain();
        uint64_t v20 = swift_dynamicCastObjCProtocolConditional();
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = type metadata accessor for BridgedBundleAssembly();
          uint64_t v23 = swift_allocObject();
          *(void *)(v23 + 16) = v21;
          *((void *)&v84 + 1) = v22;
          uint64_t v85 = &protocol witness table for BridgedBundleAssembly;
          *(void *)&long long v83 = v23;
        }
        else
        {
          swift_unknownObjectRelease();
          uint64_t v85 = 0;
          long long v83 = 0u;
          long long v84 = 0u;
        }
      }
      swift_unknownObjectRelease();
      if (*((void *)&v84 + 1))
      {
        uint64_t v24 = sub_191D6DE58(&v83, (uint64_t)v86);
        OUTLINED_FUNCTION_2_51(v24, v25, v26, v27, v28, v29, v30, v31, (uint64_t)v74, (uint64_t)v75, v76, v77, (uint64_t)v78.receiver, (uint64_t)v78.super_class);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191DCC42C();
          uint64_t v9 = v34;
        }
        unint64_t v33 = *(void *)(v9 + 16);
        unint64_t v32 = *(void *)(v9 + 24);
        if (v33 >= v32 >> 1)
        {
          OUTLINED_FUNCTION_1_47(v32);
          sub_191DCC42C();
          uint64_t v9 = v35;
        }
        *(void *)(v9 + 16) = v33 + 1;
        sub_191D6DE58(&v83, v9 + 40 * v33 + 32);
      }
      else
      {
        sub_191E38570((uint64_t)&v83, (unint64_t *)&unk_1E92F3EA0, &qword_1EB50DEE0);
      }
      ++v8;
    }
    while (v5 != v8);
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  if (v77 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    id result = (id)sub_191EE94B0();
    uint64_t v36 = (uint64_t)result;
  }
  else
  {
    uint64_t v36 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  if (!v36)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
LABEL_48:
    swift_bridgeObjectRelease_n();
    type metadata accessor for SingletonPool();
    *(void *)(swift_allocObject() + 16) = MEMORY[0x1E4FBC868];
    LOBYTE(v86[0]) = 3;
    type metadata accessor for Container(0);
    swift_allocObject();
    *(void *)&v75[OBJC_IVAR___TFContainer_container] = Container.init(bundleAssemblies:assemblies:singletonPool:environment:)(v9, v39);
    Container.resolver.getter(v86);
    uint64_t v71 = v87;
    uint64_t v72 = v88;
    __swift_project_boxed_opaque_existential_1(v86, v87);
    *(void *)&v75[OBJC_IVAR___TFContainer_resolver] = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 72))(v71, v72);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    v78.receiver = v75;
    v78.super_class = v74;
    return objc_msgSendSuper2(&v78, sel_init);
  }
  if (v36 >= 1)
  {
    uint64_t v37 = 0;
    unint64_t v38 = v77 & 0xC000000000000001;
    uint64_t v39 = MEMORY[0x1E4FBC860];
    uint64_t v40 = (unint64_t *)&qword_1EB50E2D8;
    do
    {
      if (v38)
      {
        uint64_t v41 = MEMORY[0x192FE8380](v37, v77);
      }
      else
      {
        uint64_t v41 = *(void *)(v77 + 8 * v37 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v82 = v41;
      sub_191D6D890(0, v40);
      swift_unknownObjectRetain();
      if (swift_dynamicCast())
      {
        uint64_t v42 = sub_191D6DE58(v81, (uint64_t)v86);
        OUTLINED_FUNCTION_2_51(v42, v43, v44, v45, v46, v47, v48, v49, (uint64_t)v74, (uint64_t)v75, v76, v77, (uint64_t)v78.receiver, (uint64_t)v78.super_class);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v76 = v39;
        uint64_t v50 = v9;
        uint64_t v51 = v36;
        unint64_t v52 = v38;
        OUTLINED_FUNCTION_0_37();
        uint64_t v53 = v40;
        sub_191E38570(v54, &qword_1E92F3EB0, v40);
        uint64_t v79 = &unk_1EE2CE7B0;
        swift_unknownObjectRetain();
        uint64_t v55 = swift_dynamicCastObjCProtocolConditional();
        if (v55)
        {
          uint64_t v56 = v55;
          uint64_t v57 = type metadata accessor for BridgedAssembly();
          uint64_t v58 = swift_allocObject();
          *(void *)(v58 + 16) = v56;
          *((void *)&v84 + 1) = v57;
          uint64_t v85 = &protocol witness table for BridgedAssembly;
          *(void *)&long long v83 = v58;
        }
        else
        {
          swift_unknownObjectRelease();
          uint64_t v85 = 0;
          long long v83 = 0u;
          long long v84 = 0u;
        }
        swift_unknownObjectRelease();
        uint64_t v40 = v53;
        unint64_t v38 = v52;
        uint64_t v36 = v51;
        uint64_t v9 = v50;
        uint64_t v39 = v76;
      }
      if (*((void *)&v84 + 1))
      {
        uint64_t v59 = sub_191D6DE58(&v83, (uint64_t)v86);
        OUTLINED_FUNCTION_2_51(v59, v60, v61, v62, v63, v64, v65, v66, (uint64_t)v74, (uint64_t)v75, v76, v77, (uint64_t)v78.receiver, (uint64_t)v78.super_class);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191DCC410();
          uint64_t v39 = v69;
        }
        unint64_t v68 = *(void *)(v39 + 16);
        unint64_t v67 = *(void *)(v39 + 24);
        if (v68 >= v67 >> 1)
        {
          OUTLINED_FUNCTION_1_47(v67);
          sub_191DCC410();
          uint64_t v39 = v70;
        }
        *(void *)(v39 + 16) = v68 + 1;
        sub_191D6DE58(&v83, v39 + 40 * v68 + 32);
      }
      else
      {
        sub_191E38570((uint64_t)&v83, &qword_1E92F3EB0, v40);
      }
      ++v37;
    }
    while (v36 != v37);
    goto LABEL_48;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_191E38570(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_191E385CC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_191E385CC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_191D6D890(255, a3);
    unint64_t v4 = sub_191EE8DF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id BridgedContainer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedContainer.init()()
{
}

id BridgedContainer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedContainer()
{
  return self;
}

uint64_t method lookup function for BridgedContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedContainer);
}

uint64_t dispatch thunk of BridgedContainer.__allocating_init(bundleAssemblies:assemblies:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_191E387CC(int64_t a1, int64_t a2, void *a3, void *a4, uint64_t a5)
{
  if (a1 == a2)
  {
LABEL_6:

    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v10 = a1;
    if (a2 >= a1)
    {
      while (v10 < a2)
      {
        int64_t v11 = v10;
        sub_191E38CC8((unint64_t *)&v11, a3, a4, a5);
        if (v5)
        {
          swift_bridgeObjectRelease();

          return;
        }
        if (a2 == ++v10) {
          goto LABEL_6;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t NSAttributedString.init(_:arguments:)(void *a1, unint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, a1);
  if (!(a2 >> 62))
  {
    int64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      if (v5 == 1)
      {
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_5:
        sub_191E35994(0, (a2 & 0xC000000000000001) == 0, a2);
        if ((a2 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x192FE8380](0, a2);
        }
        else {
          id v6 = *(id *)(a2 + 32);
        }
        uint64_t v7 = v6;
        swift_bridgeObjectRelease_n();
        sub_191D74B24(0, &qword_1EB50CAC8);
        id v8 = objc_msgSend(v4, sel_string);
        sub_191EE8110();

        id v9 = sub_191E38C54();
        int64_t v10 = (void *)sub_191EE80E0();
        id v11 = objc_msgSend(v9, sel_rangeOfString_, v10);
        uint64_t v13 = v12;

        sub_191E38AE8((uint64_t)v7, (uint64_t)v11, v13, v4, a1);
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v14 = sub_191EE94B0();
  swift_bridgeObjectRelease();
  if (v14 == 1)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (sub_191EE94B0()) {
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v14 < 2)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_16:
    id v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithAttributedString_, v4);

    return (uint64_t)v16;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  int64_t v5 = sub_191EE94B0();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v5 & 0x8000000000000000) == 0)
  {
LABEL_15:
    sub_191E387CC(0, v5, v4, a1, a2);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_191E38AE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  if (sub_191EE6EC0() == a2)
  {
    sub_191EE8C80();
    sub_191D939DC();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_191EEB6F0;
    id v11 = objc_msgSend(a5, sel_string);
    uint64_t v12 = sub_191EE8110();
    uint64_t v14 = v13;

    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = sub_191D93A44();
    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = v14;
    sub_191D74B24(0, (unint64_t *)&qword_1EB50DBA8);
    id v15 = (id)sub_191EE8DD0();
    sub_191EE7910();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(a4, sel_replaceCharactersInRange_withAttributedString_, a2, a3, a1);
  }
}

id sub_191E38C54()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v1 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

void sub_191E38CC8(unint64_t *a1, void *a2, void *a3, uint64_t a4)
{
  unint64_t v7 = *a1;
  id v8 = (id)sub_191D74B24(0, &qword_1EB50CAC8);
  id v9 = objc_msgSend(a2, sel_string);
  uint64_t v10 = sub_191EE8110();

  id v11 = sub_191E38C54();
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v12 = v11;
  sub_191EE9620();
  sub_191EE8280();
  swift_bridgeObjectRelease();
  sub_191EE8280();
  uint64_t v13 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v12, sel_rangeOfString_, v13, 37, 0xE100000000000000);
  uint64_t v10 = v14;

  sub_191E35994(v7, (a4 & 0xC000000000000001) == 0, a4);
  if ((a4 & 0xC000000000000001) != 0)
  {
LABEL_6:
    id v15 = (id)MEMORY[0x192FE8380](v7, a4);
    goto LABEL_4;
  }
  id v15 = *(id *)(a4 + 8 * v7 + 32);
LABEL_4:
  id v16 = v15;
  sub_191E38AE8((uint64_t)v15, (uint64_t)v8, v10, a2, a3);
}

id NSAttributedString.addingAttribute(_:value:)(uint64_t a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v2);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  objc_msgSend(v5, sel_addAttribute_value_range_, a1, sub_191EE9750(), 0, objc_msgSend(v2, sel_length));
  swift_unknownObjectRelease();
  return v5;
}

uint64_t OperationID.string.getter()
{
  uint64_t v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t sub_191E38F3C()
{
  uint64_t result = sub_191EE8210();
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v1 = result;
  id v2 = sub_191E392F0(result, 0);
  uint64_t v3 = sub_191E39234(&v4, v2 + 4, v1, 0xD000000000000010, 0x8000000191EF7F80);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 != (void *)v1)
  {
    __break(1u);
LABEL_4:
    id v2 = (void *)MEMORY[0x1E4FBC860];
  }
  off_1EB50DD68 = v2;
  return result;
}

TeaFoundation::OperationID __swiftcall OperationID.init()()
{
  uint64_t v1 = v0;
  if (qword_1EB50DD78 != -1) {
LABEL_17:
  }
    swift_once();
  uint64_t v2 = 0;
  uint64_t v3 = off_1EB50DD68;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v5 = v3[2];
    if (v5)
    {
      uint64_t v19 = 0;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x192FE9A30](&v19, 8);
      uint64_t v6 = ((unint64_t)v19 * (unsigned __int128)v5) >> 64;
      if (v5 > v19 * v5)
      {
        unint64_t v7 = -(uint64_t)v5 % v5;
        if (v7 > v19 * v5)
        {
          do
          {
            uint64_t v19 = 0;
            MEMORY[0x192FE9A30](&v19, 8);
          }
          while (v7 > v19 * v5);
          uint64_t v6 = ((unint64_t)v19 * (unsigned __int128)v5) >> 64;
        }
      }
      if (v6 >= v3[2])
      {
        __break(1u);
        goto LABEL_17;
      }
      id v8 = (char *)&v3[2 * v6];
      uint64_t v10 = *((void *)v8 + 4);
      uint64_t v9 = *((void *)v8 + 5);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191DCC448(0, *(void *)(v4 + 16) + 1, 1, v4);
        uint64_t v4 = v14;
      }
      unint64_t v12 = *(void *)(v4 + 16);
      unint64_t v11 = *(void *)(v4 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_191DCC448(v11 > 1, v12 + 1, 1, v4);
        uint64_t v4 = v15;
      }
      *(void *)(v4 + 16) = v12 + 1;
      uint64_t v13 = v4 + 16 * v12;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      uint64_t v3 = off_1EB50DD68;
    }
    ++v2;
  }
  while (v2 != 16);
  uint64_t v19 = v4;
  sub_191E3937C(0, &qword_1EB50DB88, MEMORY[0x1E4FBB320]);
  sub_191E391B8();
  uint64_t v16 = sub_191EE8340();
  *uint64_t v1 = v16;
  v1[1] = (uint64_t)v17;
  result.string._unint64_t object = v17;
  result.string._uint64_t countAndFlagsBits = v16;
  return result;
}

unint64_t sub_191E391B8()
{
  unint64_t result = qword_1EB50DB90;
  if (!qword_1EB50DB90)
  {
    sub_191E3937C(255, &qword_1EB50DB88, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB50DB90);
  }
  return result;
}

ValueMetadata *type metadata accessor for OperationID()
{
  return &type metadata for OperationID;
}

void *sub_191E39234(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5 = result;
  uint64_t v6 = HIBYTE(a5) & 0xF;
  uint64_t v12 = a4;
  unint64_t v13 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v14 = v6;
  if (!a2)
  {
    uint64_t v7 = 0;
LABEL_14:
    *unint64_t v5 = a4;
    v5[1] = a5;
    void v5[2] = 0;
    v5[3] = v6;
    return (void *)v7;
  }
  uint64_t v7 = a3;
  if (!a3) {
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    id v8 = a2;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = sub_191EE8290();
      if (!v11) {
        break;
      }
      ++v9;
      *id v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    uint64_t v7 = v9;
LABEL_13:
    uint64_t v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_191E392F0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_191E3937C(0, &qword_1EB50DBC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  void v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 16);
  return v4;
}

void sub_191E3937C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBAF58]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191E393CC()
{
  sub_191D822A8();
  OUTLINED_FUNCTION_17_0();
  v0();

  return swift_release();
}

uint64_t sub_191E3940C()
{
  sub_191E3951C();
  OUTLINED_FUNCTION_17_0();
  v0();

  return swift_release();
}

uint64_t sub_191E3944C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191E39494(a1, a2, a3, (void (*)(void))sub_191E39668);
}

uint64_t sub_191E39464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191E39494(a1, a2, a3, (void (*)(void))sub_191E39878);
}

uint64_t sub_191E3947C(uint64_t a1, uint64_t a2)
{
  return sub_191E39D24(a1, a2, (void (*)(uint64_t, void))sub_191DC1080);
}

uint64_t sub_191E39494(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  OUTLINED_FUNCTION_17_0();
  v4();

  return swift_release();
}

uint64_t sub_191E394D8()
{
  sub_191E39BE0();
  OUTLINED_FUNCTION_17_0();
  v0();

  return swift_release();
}

uint64_t (*sub_191E3951C())(void)
{
  uint64_t v1 = *(void *)(v0 + 16);
  UnfairLock.lock()();
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v2 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v0 + 24) = 1;
    sub_191DC0BEC();
    uint64_t v2 = v3;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return v2;
}

uint64_t sub_191E395A8(uint64_t a1)
{
  return sub_191E39C88(a1, (void (*)(uint64_t, void))sub_191DC0CB8);
}

uint64_t sub_191E395C0(uint64_t a1)
{
  return sub_191D8247C(a1, (void (*)(uint64_t, void))sub_191DC0D74);
}

uint64_t sub_191E395D8()
{
  OUTLINED_FUNCTION_4_30();
  if ((*(unsigned char *)(v1 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_13_17();
    sub_191DC0E20();
    OUTLINED_FUNCTION_12_18();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
  return OUTLINED_FUNCTION_104();
}

uint64_t sub_191E39650(uint64_t a1)
{
  return sub_191D8247C(a1, (void (*)(uint64_t, void))sub_191DC0EEC);
}

uint64_t (*sub_191E39668(uint64_t a1, unint64_t a2))(void)
{
  uint64_t v5 = *(void *)(v2 + 16);
  UnfairLock.lock()();
  if (*(unsigned char *)(v2 + 24))
  {
    uint64_t v6 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v2 + 24) = 1;
    sub_191D76FA0(a1, a2);
    uint64_t v6 = (uint64_t (*)(void))sub_191DC0FB0();
    sub_191D76D1C(a1, a2);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return v6;
}

uint64_t sub_191E3971C(uint64_t a1)
{
  return sub_191D8247C(a1, (void (*)(uint64_t, void))sub_191DC1080);
}

uint64_t sub_191E39734(uint64_t a1)
{
  sub_191E3D674(0, &qword_1EB5089D0);
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v8 - v5;
  OUTLINED_FUNCTION_4_30();
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_13_17();
    sub_191E3D6C8(a1, (uint64_t)v6, (void (*)(void))type metadata accessor for AuthToken);
    swift_storeEnumTagMultiPayload();
    sub_191DC1134();
    OUTLINED_FUNCTION_12_18();
    sub_191E3D624((uint64_t)v6, &qword_1EB5089D0);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return OUTLINED_FUNCTION_104();
}

uint64_t sub_191E39860(uint64_t a1)
{
  return sub_191D8247C(a1, (void (*)(uint64_t, void))sub_191DC12B4);
}

uint64_t (*sub_191E39878())(void)
{
  OUTLINED_FUNCTION_4_30();
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v2 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v2 = (uint64_t (*)(void))sub_191DC1368();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
  return v2;
}

uint64_t sub_191E3992C(uint64_t a1)
{
  return sub_191D8247C(a1, (void (*)(uint64_t, void))sub_191DC1444);
}

uint64_t sub_191E39944(uint64_t a1)
{
  return sub_191E39A98(a1, &qword_1E92F2A10, MEMORY[0x1E4F26C48], MEMORY[0x1E4F26C48], (void (*)(char *))sub_191DC14EC);
}

uint64_t (*sub_191E3998C())(void)
{
  uint64_t v1 = *(void *)(v0 + 16);
  UnfairLock.lock()();
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v2 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v0 + 24) = 1;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v2 = (uint64_t (*)(void))sub_191DC166C();
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return v2;
}

uint64_t sub_191E39A38(uint64_t a1)
{
  return sub_191D8247C(a1, (void (*)(uint64_t, void))sub_191DC1758);
}

uint64_t sub_191E39A50(uint64_t a1)
{
  return sub_191E39A98(a1, &qword_1E92F3398, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0], (void (*)(char *))sub_191DC180C);
}

uint64_t sub_191E39A98(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void), void (*a5)(char *))
{
  sub_191E3D674(0, a2);
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v13 = *(void *)(v5 + 16);
  UnfairLock.lock()();
  if ((*(unsigned char *)(v5 + 24) & 1) == 0)
  {
    *(unsigned char *)(v5 + 24) = 1;
    a4(0);
    OUTLINED_FUNCTION_26();
    (*(void (**)(char *, uint64_t))(v14 + 16))(v12, a1);
    swift_storeEnumTagMultiPayload();
    a5(v12);
    sub_191E3D624((uint64_t)v12, a2);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  return OUTLINED_FUNCTION_158();
}

uint64_t sub_191E39BE0()
{
  OUTLINED_FUNCTION_4_30();
  if ((*(unsigned char *)(v1 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_13_17();
    sub_191DC198C();
    OUTLINED_FUNCTION_12_18();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
  return OUTLINED_FUNCTION_104();
}

uint64_t sub_191E39C58(uint64_t a1)
{
  return sub_191D8247C(a1, (void (*)(uint64_t, void))sub_191DC1A58);
}

uint64_t sub_191E39C70(uint64_t a1)
{
  return sub_191E39C88(a1, (void (*)(uint64_t, void))sub_191DC1B1C);
}

uint64_t sub_191E39C88(uint64_t a1, void (*a2)(uint64_t, void))
{
  OUTLINED_FUNCTION_4_30();
  if ((*(unsigned char *)(v3 + 24) & 1) == 0)
  {
    *(unsigned char *)(v3 + 24) = 1;
    uint64_t v5 = swift_retain();
    a2(v5, 0);
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  return OUTLINED_FUNCTION_158();
}

uint64_t sub_191E39D24(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  sub_191D8247C(a1, a3);
  OUTLINED_FUNCTION_17_0();
  v3();

  return swift_release();
}

uint64_t sub_191E39D68()
{
  uint64_t v0 = (void (*)(void))sub_191DBA378();
  v0();

  return swift_release();
}

uint64_t sub_191E39DAC()
{
  uint64_t v0 = (void (*)(void))sub_191DBA754();
  v0();

  return swift_release();
}

void sub_191E39DF0(void *a1, char a2, void (*a3)(id *), uint64_t a4, void (*a5)(void), uint64_t a6, void (*a7)(void *))
{
  if (a2)
  {
    id v13 = a1;
    sub_191E3D2FC(a1, 1);
    id v11 = a1;
    sub_191D6D890(0, (unint64_t *)&qword_1EB50E0E0);
    if (swift_dynamicCast())
    {

      a5();
      id v12 = v13;
    }
    else
    {

      a7(a1);
      id v12 = a1;
    }
  }
  else
  {
    id v13 = a1;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    a3(&v13);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_191E39EF8(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    uint64_t v5 = sub_191E3D2B8;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  swift_retain();
  sub_191D771A4(a1);
  sub_191EDD82C((uint64_t)v5, v4);
  sub_191D771B4(a1);

  return swift_release();
}

uint64_t AuthTokenService.__allocating_init(endpointUrl:networkProxy:requestSigner:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  AuthTokenService.init(endpointUrl:networkProxy:requestSigner:eventHandler:)(a1, a2, a3, a4);
  return v8;
}

uint64_t AuthTokenService.init(endpointUrl:networkProxy:requestSigner:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  sub_191E3A0AC(a2, v4 + 24);
  sub_191E3A108(a3, v4 + 72, &qword_1EB50C820);
  sub_191E3A108(a4, v4 + 112, &qword_1EB50C9D0);
  return v4;
}

uint64_t sub_191E3A0AC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191E3A108(uint64_t a1, uint64_t a2, void *a3)
{
  OUTLINED_FUNCTION_5_31(a1, a2, a3);
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v3, v4);
  return v3;
}

void sub_191E3A158(uint64_t a1, void *a2)
{
  if (!*a2)
  {
    uint64_t v3 = OUTLINED_FUNCTION_10_20();
    sub_191D6D890(v3, v4);
    unint64_t v5 = sub_191EE8DF0();
    if (!v6) {
      atomic_store(v5, v2);
    }
  }
}

uint64_t AuthTokenService.__allocating_init(endpointUrl:networkProxy:requestSigner:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  uint64_t v6 = swift_allocObject();
  AuthTokenService.init(endpointUrl:networkProxy:requestSigner:eventHandler:)(a1, a2, a3, (uint64_t)v8);
  return v6;
}

uint64_t AuthTokenService.fetchAuthTokens(for:tokenType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v93 = a3;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_191E3D440(0, &qword_1EB50E130, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v8);
  uint64_t v86 = (uint64_t)&v83 - v9;
  uint64_t v10 = sub_191EE7690();
  OUTLINED_FUNCTION_0();
  uint64_t v88 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v87 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191E3D440(0, &qword_1EB50E4A0, MEMORY[0x1E4F276F0], v7);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v83 - v15;
  uint64_t v96 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v18 = v17;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v90 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v83 - v22;
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_191EE7940();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  uint64_t v92 = v25;
  uint64_t v26 = sub_191EE7920();
  os_log_type_t v27 = sub_191EE8CA0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v94 = v18;
  uint64_t v95 = v23;
  if (v28)
  {
    uint64_t v85 = v10;
    uint64_t v29 = swift_slowAlloc();
    long long v84 = (void (*)(unint64_t, char *, uint64_t))a2;
    uint64_t v30 = (uint8_t *)v29;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v91 = v4;
    v99[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    uint64_t v32 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v33 = MEMORY[0x192FE76F0](v32, v96);
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_191D76D74(v33, v35, v99);
    OUTLINED_FUNCTION_14_13(v36);
    uint64_t v18 = v94;
    uint64_t v23 = v95;
    uint64_t v37 = v93;
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v26, v27, "AuthTokenService will fetch auth tokens for URLs: %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    uint64_t v4 = v91;
    OUTLINED_FUNCTION_0_1();
    a2 = (uint64_t)v84;
    OUTLINED_FUNCTION_0_1();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v37 = v93;
  }
  (*(void (**)(void))(*(void *)(v4 + 16) + 16))();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v96) == 1)
  {
    sub_191E3AE60((uint64_t)v16);
    unint64_t v38 = sub_191EE7920();
    os_log_type_t v39 = sub_191EE8CA0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_191D4D000, v38, v39, "AuthTokenService endpoint URL is nil; auth tokens cannot be fetched",
        v40,
        2u);
      OUTLINED_FUNCTION_0_1();
    }

    sub_191E3AEEC();
    swift_allocError();
    *uint64_t v41 = 0x8000000000000000;
    sub_191E3AF38();
    swift_allocObject();
    return sub_191E13D48();
  }
  else
  {
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v43(v23, v16, v96);
    sub_191EE6FE0();
    swift_allocObject();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation16ReferenceEncoderCACycfc_0();
    v99[0] = a2;
    v99[1] = v37;
    v99[2] = a1;
    sub_191E3C7C0();
    uint64_t v44 = sub_191EE6FB0();
    unint64_t v46 = v45;
    long long v84 = (void (*)(unint64_t, char *, uint64_t))v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_191D76FA0(v44, v46);
    sub_191EE7680();
    uint64_t v92 = sub_191EE7650();
    uint64_t v85 = v47;
    OUTLINED_FUNCTION_33();
    v48();
    sub_191E3C80C(0, qword_1E92F2A70, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
    unint64_t v49 = v46;
    uint64_t v50 = v4;
    uint64_t v51 = swift_allocObject();
    v99[0] = 0;
    type metadata accessor for UnfairLock();
    swift_allocObject();
    sub_191D76FA0(v44, v49);
    swift_retain();
    uint64_t v52 = UnfairLock.init(options:)((int *)v99);
    uint64_t v93 = v44;
    uint64_t v53 = v52;
    sub_191E3C80C(0, &qword_1E92F2A58, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
    swift_allocObject();
    *(void *)(v51 + 16) = sub_191DB74E8(v53);
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = sub_191E3C8C8;
    *(void *)(v54 + 24) = v51;
    sub_191E3D308(v50 + 72, (uint64_t)&v97, &qword_1EB50C820);
    uint64_t v91 = v50;
    if (v98)
    {
      sub_191D6DE58(&v97, (uint64_t)v99);
      uint64_t v55 = sub_191EE87D0();
      uint64_t v56 = v86;
      __swift_storeEnumTagSinglePayload(v86, 1, 1, v55);
      sub_191D702F0((uint64_t)v99, (uint64_t)&v97);
      uint64_t v57 = (void *)swift_allocObject();
      v57[2] = 0;
      v57[3] = 0;
      sub_191D6DE58(&v97, (uint64_t)(v57 + 4));
      uint64_t v58 = v93;
      v57[9] = v93;
      v57[10] = v49;
      v57[11] = sub_191E21750;
      v57[12] = v54;
      v57[13] = sub_191E3C8D0;
      v57[14] = v51;
      swift_retain_n();
      sub_191D76FA0(v58, v49);
      swift_retain_n();
      sub_191D5ACF0(v56, (uint64_t)&unk_1E92F3ED0, (uint64_t)v57);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      swift_release();
      swift_release_n();
      uint64_t v59 = v58;
    }
    else
    {
      swift_retain_n();
      swift_release();
      sub_191E3CCA8((uint64_t)&v97, &qword_1EB50C820);
      sub_191E3998C();
      OUTLINED_FUNCTION_17_0();
      v60();
      swift_release();
      swift_release_n();
      swift_release();
      uint64_t v59 = v93;
    }
    unint64_t v61 = v49;
    sub_191D76D1C(v59, v49);
    uint64_t v62 = v94 + 16;
    uint64_t v63 = v90;
    uint64_t v64 = v96;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v90, v95, v96);
    unint64_t v65 = (*(unsigned __int8 *)(v62 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 64);
    unint64_t v66 = (v89 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v67 = swift_allocObject();
    v84(v67 + v65, v63, v64);
    unint64_t v68 = (void *)(v67 + v66);
    *unint64_t v68 = v93;
    v68[1] = v61;
    uint64_t v69 = (uint64_t *)(v67 + ((v66 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v70 = v92;
    uint64_t v71 = v85;
    *uint64_t v69 = v92;
    v69[1] = v71;
    uint64_t v72 = qword_1EB50EC90;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v72 != -1) {
      swift_once();
    }
    id v73 = (id)qword_1EB50EC78;
    sub_191E1450C();
    swift_release();
    swift_release();

    unint64_t v74 = (void *)swift_allocObject();
    v74[2] = v91;
    v74[3] = v70;
    v74[4] = v71;
    uint64_t v75 = (void *)qword_1EB50EC78;
    swift_retain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    id v76 = v75;
    sub_191E14620();
    swift_release();
    swift_release();

    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = v70;
    *(void *)(v77 + 24) = v71;
    objc_super v78 = (void *)qword_1EB50EC78;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    id v79 = v78;
    sub_191DBB500();
    swift_release();
    swift_release();

    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = v70;
    *(void *)(v80 + 24) = v71;
    id v81 = (id)qword_1EB50EC78;
    uint64_t v42 = sub_191DACA08((uint64_t)v81, (uint64_t)sub_191E3CB00, v80);
    swift_release();
    swift_release();

    sub_191D76D1C(v93, v61);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v96);
  }
  return v42;
}

uint64_t sub_191E3AE60(uint64_t a1)
{
  sub_191E3D440(0, &qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191E3AEEC()
{
  unint64_t result = qword_1E92F3EC0;
  if (!qword_1E92F3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92F3EC0);
  }
  return result;
}

void sub_191E3AF38()
{
  if (!qword_1EB508A50)
  {
    sub_191E3CF20(255, &qword_1EB50CA88, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = type metadata accessor for Promise();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508A50);
    }
  }
}

uint64_t sub_191E3AFAC(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v25 = a2;
  uint64_t v9 = sub_191EE73F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_191EE6F60();
  uint64_t v13 = *(void *)(v28 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v28);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v24 - v17;
  uint64_t v19 = *a1;
  uint64_t v20 = a1[1];
  v24[1] = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v25, v9);
  sub_191EE6F20();
  sub_191EE6ED0();
  sub_191D76FA0(a3, a4);
  sub_191EE6F50();
  sub_191EE6F40();
  sub_191EE6F40();
  if (v20) {
    sub_191EE6F40();
  }
  uint64_t v21 = v28;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v28);
  sub_191E3D440(0, &qword_1E92F2A60, MEMORY[0x1E4F26C48], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  uint64_t v22 = sub_191E32658();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v21);
  return v22;
}

uint64_t sub_191E3B2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v6 = sub_191EE6F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v9((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  sub_191E3CFD0(a2 + 24, (uint64_t)v26);
  uint64_t v23 = (char *)sub_191E3B4E8((uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v26);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  v9((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  unint64_t v14 = v13 + v11;
  uint64_t v15 = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14, (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v16 = (void *)(v13 + v12);
  uint64_t v17 = v25;
  *uint64_t v16 = v24;
  v16[1] = v17;
  uint64_t v18 = (uint64_t *)&v15[qword_1EB50D3E0];
  swift_beginAccess();
  uint64_t v19 = *v18;
  *uint64_t v18 = (uint64_t)sub_191E3D124;
  v18[1] = v13;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191D771B4(v19);
  if (qword_1EB50DBD8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_191E3C610(v15);

  return v20;
}

id sub_191E3B4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191EE6F60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v9 + v8, v7, v4);
  sub_191E3D440(0, qword_1EB50D358, MEMORY[0x1E4F26C48], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_191E3D3D0;
  *(void *)(v10 + 24) = v9;
  sub_191E3CFD0(a2, (uint64_t)v15);
  sub_191E3D4A0();
  id v12 = objc_allocWithZone(v11);
  id v13 = sub_191E3C48C(v10, (uint64_t)v15);
  sub_191E3CC54(a2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v13;
}

uint64_t sub_191E3B6B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  char v10 = *((unsigned char *)a1 + 16);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_191E3D308(result + 112, (uint64_t)v16, &qword_1EB50C9D0);
    swift_release();
    uint64_t v12 = v17;
    if (v17)
    {
      uint64_t v13 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      v14[0] = v8;
      v14[1] = v9;
      char v15 = v10;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v14, a3, a4, a5, v12, v13);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
    else
    {
      return sub_191E3CCA8((uint64_t)v16, &qword_1EB50C9D0);
    }
  }
  return result;
}

uint64_t sub_191E3B7D8@<X0>(uint64_t *a1@<X0>, void (**a2)(char *, uint64_t, uint64_t)@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v58 = type metadata accessor for AuthToken();
  uint64_t v55 = *(void *)(v58 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v58);
  uint64_t v62 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)&v48 - v12;
  uint64_t v13 = sub_191EE73F0();
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t isUniquelyReferenced_nonNull_native = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for AuthTokenResponseItem();
  uint64_t v61 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v59 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  if (qword_1EB508A90 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v18 = sub_191EE7940();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB512E90);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_191EE7920();
  os_log_type_t v20 = sub_191EE8CA0();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  unint64_t v49 = a4;
  uint64_t v50 = v5;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v64 = (void *)v60;
    *(_DWORD *)uint64_t v23 = 134349314;
    LODWORD(v53) = v21;
    unint64_t v24 = a3;
    uint64_t v25 = *(void *)(v17 + 16);
    swift_bridgeObjectRelease();
    uint64_t v63 = v25;
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v63 = sub_191D76D74((uint64_t)a2, v24, (uint64_t *)&v64);
    a4 = v49;
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191D4D000, v19, (os_log_type_t)v53, "AuthTokenService successfully fetched %{public}ld tokens; X-REQUEST-ID=%{public}s",
      (uint8_t *)v23,
      0x16u);
    uint64_t v26 = v60;
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v26, -1, -1);
    MEMORY[0x192FE9A10](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v27 = *(void *)(v17 + 16);
  if (v27)
  {
    uint64_t v5 = v17 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
    uint64_t v60 = v51 + 16;
    uint64_t v52 = *(void *)(v61 + 72);
    uint64_t v53 = (void (**)(char *, uint64_t))(v51 + 8);
    uint64_t v48 = v17;
    swift_bridgeObjectRetain_n();
    uint64_t v28 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v17 = (uint64_t)v59;
    a2 = (void (**)(char *, uint64_t, uint64_t))v60;
    uint64_t v54 = v13;
    while (1)
    {
      uint64_t v61 = v27;
      sub_191E3D6C8(v5, v17, (void (*)(void))type metadata accessor for AuthTokenResponseItem);
      uint64_t v29 = *a2;
      (*a2)(isUniquelyReferenced_nonNull_native, v17, v13);
      a3 = (unint64_t)v57;
      _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
      uint64_t v30 = isUniquelyReferenced_nonNull_native;
      uint64_t v31 = v58;
      v29((char *)(a3 + *(int *)(v58 + 20)), v17, v13);
      uint64_t v32 = (uint64_t *)(v17 + *(int *)(v56 + 20));
      uint64_t v33 = *v32;
      uint64_t v13 = v32[1];
      uint64_t v34 = *(void *)(v17 + *(int *)(v56 + 24));
      unint64_t v35 = (void *)(a3 + *(int *)(v31 + 24));
      *unint64_t v35 = v33;
      v35[1] = v13;
      *(void *)(a3 + *(int *)(v31 + 28)) = v34;
      sub_191E3549C(a3, v62);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      uint64_t v64 = v28;
      uint64_t v17 = (uint64_t)v30;
      sub_191DA42E0();
      uint64_t v38 = v28[2];
      BOOL v39 = (v37 & 1) == 0;
      a4 = (void *)(v38 + v39);
      if (__OFADD__(v38, v39))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      a3 = v36;
      char v40 = v37;
      sub_191E3CF20(0, &qword_1EB508AE0, MEMORY[0x1E4FBBCB8]);
      char v41 = sub_191EE93D0();
      uint64_t isUniquelyReferenced_nonNull_native = (char *)v17;
      uint64_t v17 = (uint64_t)v59;
      if (v41)
      {
        sub_191DA42E0();
        if ((v40 & 1) != (v43 & 1))
        {
          uint64_t result = sub_191EE99B0();
          __break(1u);
          return result;
        }
        a3 = v42;
      }
      uint64_t v28 = v64;
      if (v40)
      {
        sub_191E1BDCC(v62, v64[7] + *(void *)(v55 + 72) * a3);
        uint64_t v13 = v54;
      }
      else
      {
        v64[(a3 >> 6) + 8] |= 1 << a3;
        uint64_t v13 = v54;
        v29((char *)(v28[6] + *(void *)(v51 + 72) * a3), (uint64_t)isUniquelyReferenced_nonNull_native, v54);
        sub_191E3549C(v62, v28[7] + *(void *)(v55 + 72) * a3);
        uint64_t v44 = v28[2];
        BOOL v45 = __OFADD__(v44, 1);
        uint64_t v46 = v44 + 1;
        if (v45) {
          goto LABEL_20;
        }
        void v28[2] = v46;
        uint64_t v28 = v64;
      }
      swift_bridgeObjectRelease();
      (*v53)(isUniquelyReferenced_nonNull_native, v13);
      sub_191E2F254(v17);
      v5 += v52;
      uint64_t v27 = v61 - 1;
      if (v61 == 1)
      {
        swift_bridgeObjectRelease();
        a4 = v49;
        goto LABEL_18;
      }
    }
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v28 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v28;
  return result;
}

void sub_191E3BE60(void *a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EB508A90 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_191EE7940();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB512E90);
  id v7 = a1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v8 = a1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v9 = sub_191EE7920();
  os_log_type_t v10 = sub_191EE8C80();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136446466;
    swift_getErrorValue();
    uint64_t v13 = sub_191EE9A10();
    sub_191D76D74(v13, v14, &v15);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2082;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D76D74(a2, a3, &v15);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191D4D000, v9, v10, "AuthTokenService failed to fetch tokens. error=%{public}s; X-REQUEST-ID=%{public}s",
      (uint8_t *)v11,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v12, -1, -1);
    MEMORY[0x192FE9A10](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_191E3C098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = v10;
  v8[8] = v11;
  v8[5] = a7;
  void v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  _OWORD v8[2] = a4;
  return MEMORY[0x1F4188298](sub_191E3C0CC, 0, 0);
}

uint64_t sub_191E3C0CC()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  id v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_191E3C1D4;
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  return v8(v6, v5, v2, v3);
}

uint64_t sub_191E3C1D4(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_6();
  uint64_t v6 = v5;
  *(void *)(v5 + 80) = v2;
  swift_task_dealloc();
  if (v2)
  {
    id v7 = sub_191E3C358;
  }
  else
  {
    *(void *)(v6 + 88) = a2;
    *(void *)(v6 + 96) = a1;
    id v7 = sub_191E3C2E4;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_191E3C2E4()
{
  (*(void (**)(void, void))(v0 + 40))(*(void *)(v0 + 96), *(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191E3C358()
{
  uint64_t v1 = *(void **)(v0 + 80);
  (*(void (**)(void *))(v0 + 56))(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t AuthTokenService.deinit()
{
  swift_release();
  sub_191E3CC54(v0 + 24);
  sub_191E3CCA8(v0 + 72, &qword_1EB50C820);
  sub_191E3CCA8(v0 + 112, &qword_1EB50C9D0);
  return v0;
}

uint64_t AuthTokenService.__deallocating_deinit()
{
  AuthTokenService.deinit();

  return MEMORY[0x1F4186488](v0, 152, 7);
}

uint64_t sub_191E3C468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AuthTokenService.fetchAuthTokens(for:tokenType:)(a1, a2, a3);
}

id sub_191E3C48C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_191EE7640();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[qword_1EB50D228] = MEMORY[0x1E4FBC860];
  uint64_t v11 = &v3[qword_1EB50D3E0];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v3[qword_1EB50D218] = a1;
  sub_191E3CFD0(a2, (uint64_t)&v3[qword_1EB50D210]);
  uint64_t v12 = v3;
  swift_retain();
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[qword_1EB50D4A8], v10, v7);

  v15.receiver = v12;
  v15.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_release();
  sub_191E3CC54(a2);
  return v13;
}

uint64_t sub_191E3C610(void *a1)
{
  uint64_t v2 = v1;
  sub_191E3D1A4(0, &qword_1EB508A38, (uint64_t)&type metadata for AuthTokenResponse, (uint64_t (*)(void, uint64_t))type metadata accessor for Promise);
  uint64_t v4 = swift_allocObject();
  uint64_t v9 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  id v5 = a1;
  swift_retain();
  uint64_t v6 = UnfairLock.init(options:)((int *)&v9);
  sub_191E3D1A4(0, &qword_1EB508A18, (uint64_t)&type metadata for AuthTokenResponse, (uint64_t (*)(void, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(void *)(v4 + 16) = sub_191D81D48(v6);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = sub_191E3D220;
  uint64_t v7[3] = v4;
  void v7[4] = sub_191E3D230;
  v7[5] = v4;
  v7[6] = sub_191E3D228;
  void v7[7] = v4;
  swift_retain_n();
  sub_191E39EF8((uint64_t)sub_191E3D2A8, (uint64_t)v7);

  swift_release_n();
  objc_msgSend(*(id *)(v2 + 24), sel_addOperation_, v5);
  swift_release();
  return v4;
}

unint64_t sub_191E3C7C0()
{
  unint64_t result = qword_1EB5087E8;
  if (!qword_1EB5087E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5087E8);
  }
  return result;
}

void sub_191E3C80C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_191E3D1A4(255, &qword_1EB50C500, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_191E3C890(uint64_t *a1, uint64_t a2)
{
  return sub_191E39494(*a1, a1[1], a2, (void (*)(void))sub_191E3998C);
}

uint64_t sub_191E3C8C8(uint64_t *a1)
{
  return sub_191E3C890(a1, v1);
}

uint64_t sub_191E3C8D0(uint64_t a1)
{
  return sub_191DAAC38(a1, v1);
}

uint64_t sub_191E3C8D8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191E3C910()
{
  sub_191EE73F0();
  OUTLINED_FUNCTION_26();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (*(void *)(v1 + 56) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_33();
  v5();
  sub_191D76D1C(*(void *)(v0 + v4), *(void *)(v0 + v4 + 8));
  swift_bridgeObjectRelease();
  uint64_t v6 = OUTLINED_FUNCTION_104();

  return MEMORY[0x1F4186498](v6, v7, v3);
}

uint64_t sub_191E3C9C4(uint64_t *a1)
{
  uint64_t v3 = sub_191EE73F0();
  OUTLINED_FUNCTION_2_0(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_191E3AFAC(a1, v1 + v8, *(void *)(v1 + v9), *(void *)(v1 + v9 + 8), *(void *)(v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_191E3CA4C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E3CA8C(uint64_t a1)
{
  return sub_191E3B2A4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_191E3CAAC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_191E3B7D8(a1, *(void (***)(char *, uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_191E3CAC8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_191E3CB00(void *a1)
{
  sub_191E3BE60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_191E3CB08()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_191D76D1C(*(void *)(v0 + 72), *(void *)(v0 + 80));
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_191E3CB60(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v11 = v1[2];
  uint64_t v5 = v1[9];
  uint64_t v6 = v1[10];
  uint64_t v7 = v1[11];
  uint64_t v8 = v1[12];
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_191E015C8;
  return sub_191E3C098(a1, v11, v4, (uint64_t)(v1 + 4), v5, v6, v7, v8);
}

uint64_t sub_191E3CC54(uint64_t a1)
{
  return a1;
}

uint64_t sub_191E3CCA8(uint64_t a1, void *a2)
{
  sub_191E3A158(0, a2);
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_33();
  v3();
  return a1;
}

uint64_t dispatch thunk of AuthTokenServiceType.fetchAuthTokens(for:tokenType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for AuthTokenService()
{
  return self;
}

uint64_t method lookup function for AuthTokenService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AuthTokenService);
}

uint64_t dispatch thunk of AuthTokenService.__allocating_init(endpointUrl:networkProxy:requestSigner:eventHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *initializeBufferWithCopyOfBuffer for AuthTokenServiceError(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = (id)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = v3;
  return a1;
}

void destroy for AuthTokenServiceError(void *a1)
{
}

uint64_t *assignWithCopy for AuthTokenServiceError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = (id)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

uint64_t *assignWithTake for AuthTokenServiceError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AuthTokenServiceError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AuthTokenServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_191E3CEB8(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_191E3CED4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_191E3CEE4(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenServiceError()
{
  return &type metadata for AuthTokenServiceError;
}

void sub_191E3CF20(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    OUTLINED_FUNCTION_10_20();
    uint64_t v6 = sub_191EE73F0();
    uint64_t v7 = type metadata accessor for AuthToken();
    uint64_t v8 = sub_191E3D5DC((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
    unint64_t v9 = a3(a1, v6, v7, v8);
    if (!v10) {
      atomic_store(v9, v3);
    }
  }
}

uint64_t sub_191E3CFD0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191E3D02C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191E3D064()
{
  uint64_t v1 = sub_191EE6F60();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  swift_bridgeObjectRelease();
  uint64_t v7 = OUTLINED_FUNCTION_158();

  return MEMORY[0x1F4186498](v7, v8, v6);
}

uint64_t sub_191E3D124(uint64_t *a1)
{
  uint64_t v3 = sub_191EE6F60();
  OUTLINED_FUNCTION_2_0(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = v1 + v8;
  uint64_t v11 = (uint64_t *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];

  return sub_191E3B6B4(a1, v9, v10, v12, v13);
}

void sub_191E3D1A4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_191E3D1F0(uint64_t *a1, uint64_t a2)
{
  return sub_191E39D24(*a1, a2, (void (*)(uint64_t, void))sub_191DC1444);
}

uint64_t sub_191E3D220(uint64_t *a1)
{
  return sub_191E3D1F0(a1, v1);
}

uint64_t sub_191E3D228()
{
  return sub_191E39D68();
}

uint64_t sub_191E3D230()
{
  return sub_191E39DAC();
}

void sub_191E3D238(uint64_t a1, void (*a2)(id *), uint64_t a3, void (*a4)(void), uint64_t a5, void (*a6)(void *))
{
}

uint64_t sub_191E3D260()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_191E3D2A8(uint64_t a1)
{
  sub_191E3D238(a1, *(void (**)(id *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), *(void (**)(void *))(v1 + 48));
}

uint64_t sub_191E3D2B8(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

id sub_191E3D2FC(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
}

uint64_t sub_191E3D308(uint64_t a1, uint64_t a2, void *a3)
{
  OUTLINED_FUNCTION_5_31(a1, a2, a3);
  OUTLINED_FUNCTION_26();
  uint64_t v4 = OUTLINED_FUNCTION_171();
  v5(v4);
  return v3;
}

uint64_t sub_191E3D34C()
{
  sub_191EE6F60();
  OUTLINED_FUNCTION_26();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  OUTLINED_FUNCTION_33();
  v5();

  return MEMORY[0x1F4186498](v0, v3, v4);
}

uint64_t sub_191E3D3D0()
{
  uint64_t v1 = *(void *)(sub_191EE6F60() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_191E64048(v2);
}

void sub_191E3D440(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = OUTLINED_FUNCTION_10_20();
    uint64_t v9 = v8(v7);
    unint64_t v10 = a4(a1, v9);
    if (!v11) {
      atomic_store(v10, v4);
    }
  }
}

void sub_191E3D4A0()
{
  if (!qword_1EB508800)
  {
    sub_191E3D534();
    sub_191E3D5DC(&qword_1EB5087F0, (void (*)(uint64_t))sub_191E3D534);
    unint64_t v0 = type metadata accessor for NetworkOperation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB508800);
    }
  }
}

void sub_191E3D534()
{
  if (!qword_1EB5087F8)
  {
    sub_191E3D590();
    unint64_t v0 = type metadata accessor for JSONDeserializer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB5087F8);
    }
  }
}

unint64_t sub_191E3D590()
{
  unint64_t result = qword_1EB5088E8[0];
  if (!qword_1EB5088E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB5088E8);
  }
  return result;
}

uint64_t sub_191E3D5DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191E3D624(uint64_t a1, void *a2)
{
  sub_191E3D674(0, a2);
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_33();
  v3();
  return a1;
}

void sub_191E3D674(uint64_t a1, void *a2)
{
  if (!*a2)
  {
    uint64_t v3 = OUTLINED_FUNCTION_10_20();
    v4(v3);
    unint64_t v5 = type metadata accessor for Seal.Resolution();
    if (!v6) {
      atomic_store(v5, v2);
    }
  }
}

uint64_t sub_191E3D6C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_26();
  uint64_t v4 = OUTLINED_FUNCTION_171();
  v5(v4);
  return a2;
}

void AsyncObservable.value.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  UnfairLock.lock()();
  OUTLINED_FUNCTION_1_17();
  uint64_t v5 = v1 + *(void *)(v4 + 104);
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v5);
  sub_191D83280(v2);
}

uint64_t AsyncObservable.__allocating_init(value:)()
{
  uint64_t v0 = swift_allocObject();
  AsyncObservable.init(value:)();
  return v0;
}

BOOL AsyncObservable<A>.next(value:quietIfUnchanged:)(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v6 = *(void *)(v5 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v17[-v10];
  uint64_t v12 = *(void *)(v2 + 16);
  UnfairLock.lock()();
  OUTLINED_FUNCTION_1_17();
  uint64_t v14 = v2 + *(void *)(v13 + 104);
  OUTLINED_FUNCTION_1_3();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v11, v14, v6);
  char v15 = sub_191EE80C0();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v6);
  OUTLINED_FUNCTION_5();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v14, a1, v6);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  if ((a2 & 1) == 0 || (v15 & 1) == 0) {
    sub_191E3DB2C();
  }
  return (v15 & 1) == 0;
}

void AsyncObservable.next(value:quiet:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 16);
  UnfairLock.lock()();
  OUTLINED_FUNCTION_1_17();
  uint64_t v8 = v3 + *(void *)(v7 + 104);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, a1);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  if ((a2 & 1) == 0) {
    sub_191E3DB2C();
  }
}

uint64_t AsyncObservable.init(value:)()
{
  uint64_t v3 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v0 + 16) = UnfairLock.init(options:)((int *)&v3);
  _s13TeaFoundation8ObserverCMa_0();
  *(void *)(v0 + 24) = sub_191EE7DA0();
  OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_19();
  (*(void (**)(void))(v1 + 32))();
  return v0;
}

uint64_t sub_191E3DB2C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  UnfairLock.lock()();
  swift_beginAccess();
  _s13TeaFoundation8ObserverCMa_0();
  sub_191EE86B0();
  sub_191D6EE1C();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_getWitnessTable();
  uint64_t v2 = sub_191EE83D0();
  swift_bridgeObjectRelease();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_getWitnessTable();
  *(void *)(v0 + 24) = sub_191EE92A0();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v4 = v2 + 40;
    do
    {
      uint64_t v5 = *(void (**)(uint64_t))(v4 - 8);
      uint64_t v6 = swift_retain();
      v5(v6);
      swift_release();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t AsyncObservable.mutate(with:quiet:)(void (*a1)(unsigned char *), uint64_t a2, int a3)
{
  int v20 = a3;
  OUTLINED_FUNCTION_4_0();
  uint64_t v6 = *(void *)(v5 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v8 = v7;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = &v19[-v13];
  uint64_t v15 = v3[2];
  UnfairLock.lock()();
  uint64_t v16 = (char *)v3 + *(void *)(*v3 + 104);
  OUTLINED_FUNCTION_1_3();
  (*(void (**)(unsigned char *, char *, uint64_t))(v8 + 16))(v12, v16, v6);
  a1(v12);
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  v17(v12, v6);
  OUTLINED_FUNCTION_5();
  (*(void (**)(char *, unsigned char *, uint64_t))(v8 + 24))(v16, v14, v6);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
  if ((v20 & 1) == 0) {
    sub_191E3DB2C();
  }
  return ((uint64_t (*)(unsigned char *, uint64_t))v17)(v14, v6);
}

uint64_t AsyncObservable.onNext(on:eager:block:)@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_191E3DF54(a1, a2, a3, a4, 0, (uint64_t)&unk_1EE2BF5E0, sub_191E3E748, a5);
}

uint64_t sub_191E3DEC4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_191E3E600(a1, a2, a3, a4, a5);
}

uint64_t AsyncObservable.onNextOnlyOnce(on:eager:block:)@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_191E3DF54(a1, a2, a3, a4, 1, (uint64_t)&unk_1EE2BF608, sub_191E3E748, a5);
}

uint64_t sub_191E3DF54@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t (*a7)()@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v39 = a6;
  char v40 = a7;
  uint64_t v10 = v8;
  LODWORD(v41) = a2;
  unint64_t v42 = a8;
  uint64_t v14 = *(void *)(*v10 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v16 = v15;
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v38 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  BOOL v22 = (char *)&v37 - v21;
  uint64_t v23 = _s13TeaFoundation8ObserverCMa_0();
  id v24 = a1;
  swift_retain();
  uint64_t v25 = swift_retain();
  uint64_t v26 = sub_191E3DEC4(v25, (uint64_t)v24, a5, a3, a4);
  uint64_t v27 = v10[2];
  UnfairLock.lock()();
  uint64_t v43 = v26;
  OUTLINED_FUNCTION_5();
  sub_191EE86B0();
  swift_retain();
  sub_191EE8630();
  swift_endAccess();
  uint64_t v28 = (char *)v10 + *(void *)(*v10 + 104);
  OUTLINED_FUNCTION_1_3();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v29(v22, v28, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 16));
  if (v41)
  {
    char v41 = *(void **)(v26 + 40);
    uint64_t v30 = v38;
    v29(v38, v22, v14);
    unint64_t v31 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v14;
    *(void *)(v32 + 24) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v32 + v31, v30, v14);
    swift_retain();
    uint64_t v33 = sub_191D8431C(v41, v40, v32);
    uint64_t v34 = swift_release();
    ((void (*)(uint64_t))v33)(v34);
    swift_release();
  }
  unint64_t v35 = v42;
  v42[3] = v23;
  void v35[4] = (uint64_t)&off_1EE2B6CB0;
  *unint64_t v35 = v26;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, v14);
}

uint64_t sub_191E3E1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x192FE9B40](a1 + 16);
  uint64_t result = swift_unknownObjectRelease();
  if (v4) {
    return (*(uint64_t (**)(uint64_t))(a1 + 24))(a2);
  }
  return result;
}

Swift::Void __swiftcall AsyncObservable.triggerObservers()()
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v1 = *(void *)(v0 + 80);
  OUTLINED_FUNCTION_1_2();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v7 - v5;
  AsyncObservable.value.getter((uint64_t)&v7 - v5);
  sub_191E3DB2C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
}

uint64_t sub_191E3E2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)MEMORY[0x1F4188790](a1);
  uint64_t v10 = MEMORY[0x192FE9B40](v9 + 16);
  swift_unknownObjectRelease();
  if (v10)
  {
    uint64_t v19 = *(void **)(v9 + 40);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a3;
    *(void *)(v12 + 24) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
    swift_retain();
    uint64_t v13 = sub_191D8431C(v19, sub_191E3E8F8, v12);
    uint64_t v15 = v14;
    swift_release();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v13;
    *(void *)(result + 24) = v15;
    uint64_t v17 = sub_191D6EA9C;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t result = 0;
  }
  *a4 = v17;
  a4[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_191E3E494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x192FE9B40](a1 + 16);
  uint64_t result = swift_unknownObjectRelease();
  if (v4)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(a1 + 24))(a2);
    if (*(unsigned char *)(a1 + 48) == 1)
    {
      return swift_unknownObjectWeakAssign();
    }
  }
  return result;
}

uint64_t AsyncObservable.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_19();
  (*(void (**)(void))(v1 + 8))();
  return v0;
}

uint64_t AsyncObservable.__deallocating_deinit()
{
  AsyncObservable.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_191E3E600(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  *(void *)(v5 + 32) = a5;
  *(void *)(v5 + 40) = a2;
  *(unsigned char *)(v5 + 48) = a3;
  *(void *)(v5 + 24) = a4;
  return v5;
}

uint64_t sub_191E3E66C()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_191E3E678()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_191E3E684()
{
  sub_191DA5CC4(v0 + 16);
  swift_release();

  return v0;
}

uint64_t sub_191E3E6B4()
{
  uint64_t v0 = sub_191E3E684();

  return MEMORY[0x1F4186488](v0, 49, 7);
}

uint64_t sub_191E3E6E4()
{
  return sub_191E3E66C();
}

uint64_t sub_191E3E708()
{
  return sub_191E3E678();
}

uint64_t _s13TeaFoundation8ObserverCMa_0()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E3E750()
{
  uint64_t v1 = OUTLINED_FUNCTION_1_48();
  return sub_191E3E1E4(v1, v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t sub_191E3E77C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncObservable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncObservable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncObservable);
}

uint64_t dispatch thunk of AsyncObservable.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_191E3E870()
{
  return swift_initClassMetadata2();
}

uint64_t sub_191E3E8D8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  return sub_191E3E2D8(a1, *(void *)(v2 + 24), *(void *)(v2 + 16), a2);
}

uint64_t sub_191E3E8F8()
{
  uint64_t v1 = OUTLINED_FUNCTION_1_48();
  return sub_191E3E494(v1, v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t sub_191E3E918()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t static XPCBlockBuilder.buildBlock(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

ValueMetadata *type metadata accessor for XPCBlockBuilder()
{
  return &type metadata for XPCBlockBuilder;
}

uint64_t _s13TeaFoundation8NonEmptyV8elementsxvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_191E3E9E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + a1 - 16);
  uint64_t v5 = NonEmpty.rawElements.read();
  (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 16))(a3);
  return ((uint64_t (*)(uint64_t *, void))v5)(&v7, 0);
}

uint64_t (*NonEmpty.rawElements.read())(void)
{
  return nullsub_1;
}

uint64_t sub_191E3EA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 16);
  uint64_t v6 = type metadata accessor for NonEmpty();
  uint64_t v7 = NonEmpty.rawElements.modify(v10, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(v8, a1, v5);
  return ((uint64_t (*)(void *, void))v7)(v10, 0);
}

uint64_t (*NonEmpty.rawElements.modify(void *a1, uint64_t a2))(uint64_t *a1)
{
  *a1 = a2;
  a1[1] = v2;
  return sub_191E3EB5C;
}

uint64_t sub_191E3EB5C(uint64_t *a1)
{
  return sub_191E3EB6C(a1[1], *(void *)(*a1 + 16));
}

uint64_t sub_191E3EB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v5);
  char v6 = sub_191EE8A40();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t NonEmpty.rawElements.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v2, a1, v4);
  sub_191E3EB6C(v2, v4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);

  return v7(a1, v4);
}

void NonEmpty.init<A, B>(_:)()
{
  OUTLINED_FUNCTION_31_1();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_15_0();
  v3();
  sub_191EE86D0();
  sub_191EE86B0();
  swift_getWitnessTable();
  NonEmpty.init(_:)();
  uint64_t v4 = OUTLINED_FUNCTION_22_10();
  v5(v4);
  *uint64_t v1 = v6;
  OUTLINED_FUNCTION_26_3();
}

void NonEmpty.first.getter()
{
}

void NonEmpty.randomElement<A>(using:)()
{
  OUTLINED_FUNCTION_8_3();
  swift_getAssociatedTypeWitness();
  uint64_t v0 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_4_31();
  sub_191EE8A90();
  OUTLINED_FUNCTION_3_33();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_19();
    uint64_t v3 = OUTLINED_FUNCTION_2_52();
    v4(v3);
    OUTLINED_FUNCTION_36();
  }
}

void NonEmpty.randomElement()()
{
}

void sub_191E3EF0C()
{
  OUTLINED_FUNCTION_31_1();
  uint64_t v1 = v0;
  uint64_t v3 = *(void *)(v2 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_86(v4);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_4_31();
  v1(v6, v3);
  OUTLINED_FUNCTION_3_33();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_19();
    uint64_t v8 = OUTLINED_FUNCTION_2_52();
    v9(v8);
    OUTLINED_FUNCTION_26_3();
  }
}

void NonEmpty.min(by:)()
{
}

void NonEmpty.min<>()()
{
}

void NonEmpty.max(by:)()
{
}

void sub_191E3F03C()
{
  OUTLINED_FUNCTION_23_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v16 = v8;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(*(void *)(v9 + 24) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_191EE8DF0();
  OUTLINED_FUNCTION_86(v13);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_18_11();
  v3(v7, v5, v10, v11);
  if (v0) {
    goto LABEL_4;
  }
  if (__swift_getEnumTagSinglePayload(v1, 1, AssociatedTypeWitness) != 1)
  {
    OUTLINED_FUNCTION_19();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v1, AssociatedTypeWitness);
LABEL_4:
    OUTLINED_FUNCTION_16();
    return;
  }
  __break(1u);
}

uint64_t static NonEmpty<>.== infix(_:_:)()
{
  return sub_191EE80C0() & 1;
}

uint64_t sub_191E3F188()
{
  return static NonEmpty<>.== infix(_:_:)();
}

uint64_t NonEmpty<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41835C8](a1, *(void *)(a2 + 16));
}

uint64_t NonEmpty<>.hashValue.getter(uint64_t a1)
{
  sub_191EE9A70();
  NonEmpty<>.hash(into:)((uint64_t)v3, a1);
  return sub_191EE9A90();
}

uint64_t sub_191E3F1F4(uint64_t a1)
{
  return NonEmpty<>.hashValue.getter(a1);
}

uint64_t sub_191E3F1FC(uint64_t a1, uint64_t a2)
{
  return NonEmpty<>.hash(into:)(a1, a2);
}

uint64_t sub_191E3F204(uint64_t a1, uint64_t a2)
{
  sub_191EE9A70();
  NonEmpty<>.hash(into:)((uint64_t)v4, a2);
  return sub_191EE9A90();
}

uint64_t NonEmpty.withContiguousStorageIfAvailable<A>(_:)()
{
  return sub_191EE83B0();
}

uint64_t NonEmpty._customContainsEquatableElement(_:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4183BC8](a1, *(void *)(a2 + 16), *(void *)(*(void *)(a2 + 24) + 8));
}

uint64_t NonEmpty._copyToContiguousArray()()
{
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t))(v3 + 16))(v2 - v1);
  return sub_191EE8390();
}

uint64_t sub_191E3F32C(uint64_t a1)
{
  NonEmpty.makeIterator()();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v3(v1, a1);
}

uint64_t NonEmpty.underestimatedCount.getter()
{
  return sub_191EE8380();
}

uint64_t sub_191E3F3A4(uint64_t a1)
{
  uint64_t v3 = NonEmpty._copyToContiguousArray()();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_191E3F408()
{
  return NonEmpty.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t NonEmpty.isEmpty.getter()
{
  return sub_191EE8A40();
}

uint64_t NonEmpty.count.getter()
{
  return sub_191EE89F0();
}

uint64_t NonEmpty.indices.getter(uint64_t a1)
{
  return MEMORY[0x1F4184318](*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t NonEmpty.startIndex.getter()
{
  return sub_191EE89C0();
}

uint64_t NonEmpty.endIndex.getter()
{
  return sub_191EE8A60();
}

uint64_t NonEmpty.index(after:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4184300](a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t NonEmpty.formIndex(after:)()
{
  return sub_191EE8A70();
}

uint64_t NonEmpty.index(_:offsetBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4184310](a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t NonEmpty.index(_:offsetBy:limitedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F4184308](a1, a2, a3, *(void *)(a4 + 16), *(void *)(a4 + 24));
}

uint64_t NonEmpty.distance(from:to:)()
{
  return sub_191EE8A50();
}

uint64_t NonEmpty.subscript.getter()
{
  uint64_t v0 = (uint64_t (*)(uint64_t *))OUTLINED_FUNCTION_19_11();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_19();
  uint64_t v1 = OUTLINED_FUNCTION_25_10();
  uint64_t v3 = v2(v1);
  uint64_t v11 = OUTLINED_FUNCTION_29_7(v3, v4, v5, v6, v7, v8, v9, v10, v13);
  return v0(v11);
}

{
  return sub_191EE8BB0();
}

uint64_t NonEmpty._customIndexOfEquatableElement(_:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41842E8](a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t NonEmpty._customLastIndexOfEquatableElement(_:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41842F0](a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

void (*sub_191E3F568(uint64_t **a1))(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_191E3F614(v2);
  return sub_191E3F5D8;
}

void sub_191E3F5D8(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_27_10(a1);
  v3(v2);

  free(v1);
}

void (*sub_191E3F614(uint64_t *a1))(void *)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(void *)(v3 + 64));
  NonEmpty.subscript.getter();
  return sub_191E3F6E8;
}

uint64_t NonEmpty<>.subscript.getter()
{
  uint64_t v0 = (uint64_t (*)(uint64_t *))OUTLINED_FUNCTION_19_11();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_19();
  uint64_t v1 = OUTLINED_FUNCTION_25_10();
  uint64_t v3 = v2(v1);
  uint64_t v11 = OUTLINED_FUNCTION_29_7(v3, v4, v5, v6, v7, v8, v9, v10, v13);
  return v0(v11);
}

{
  return sub_191EE8BB0();
}

uint64_t sub_191E3F7B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NonEmpty();
  uint64_t v5 = NonEmpty<>.subscript.read(v10, a1, v4);
  uint64_t v7 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, v7, AssociatedTypeWitness);
  return ((uint64_t (*)(void *, void))v5)(v10, 0);
}

void (*NonEmpty<>.subscript.read(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = malloc(0x58uLL);
  *a1 = v5;
  v5[4] = *(void *)(a3 + 16);
  v5[5] = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  v5[6] = v6;
  v5[7] = malloc(*(void *)(v7 + 64));
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  v5[8] = v8;
  v5[9] = malloc(*(void *)(v10 + 64));
  (*(void (**)(void))(v9 + 16))();
  OUTLINED_FUNCTION_31_7();
  v11();
  v5[10] = sub_191EE8BC0();
  return sub_191E3FA00;
}

void sub_191E3FA00()
{
  OUTLINED_FUNCTION_31_1();
  uint64_t v1 = *(void **)(*v0 + 72);
  uint64_t v2 = *(void **)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 64);
  uint64_t v4 = *(void *)(*v0 + 40);
  uint64_t v5 = *(void *)(*v0 + 48);
  uint64_t v6 = *(void *)(*v0 + 32);
  (*(void (**)(void, void))(*v0 + 80))(*v0, 0);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v2, v4);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v1, v6);
  free(v1);
  free(v2);
  OUTLINED_FUNCTION_26_3();
  free(v7);
}

uint64_t sub_191E3FAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = &v15[-v7];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(&v15[-v7], a3, AssociatedTypeWitness);
  type metadata accessor for NonEmpty();
  NonEmpty<>.subscript.modify();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v12, a1, v13);
  v10(v15, 0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
}

void NonEmpty<>.subscript.modify()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = v0;
  uint64_t v2 = malloc(0x40uLL);
  *uint64_t v1 = v2;
  v2[4] = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  uint64_t v4 = v3;
  v2[5] = v3;
  v2[6] = malloc(*(void *)(v5 + 64));
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_191EE80A0();
  OUTLINED_FUNCTION_36();
}

void sub_191E3FD54(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void **)(*(void *)a1 + 48);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  uint64_t v4 = *(void *)(*(void *)a1 + 40);
  uint64_t v5 = OUTLINED_FUNCTION_26_9();
  v6(v5);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

void NonEmpty<>.subscript.setter()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v13 = v0;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_2();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_14();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = *(void (**)(void))(v2 + 16);
  OUTLINED_FUNCTION_31_7();
  v5();
  OUTLINED_FUNCTION_31_7();
  v5();
  uint64_t v6 = (void (*)(uint64_t *, void))sub_191EE80A0();
  uint64_t v8 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_4_3();
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v8, v13, AssociatedTypeWitness);
  v6(&v14, 0);
  uint64_t v12 = *(void (**)(void))(v2 + 8);
  OUTLINED_FUNCTION_14_14();
  v12();
  OUTLINED_FUNCTION_14_14();
  v12();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  OUTLINED_FUNCTION_14_14();
  v12();
  OUTLINED_FUNCTION_36();
}

{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  uint64_t v24;
  void (*v25)(uint64_t *, void);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_8_3();
  uint64_t v26 = v0;
  uint64_t v27 = v1;
  uint64_t v2 = v1;
  uint64_t v28 = *(void *)(v3 + 8);
  uint64_t v29 = v4;
  uint64_t v6 = *(void *)(v5 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = sub_191EE8C50();
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v16((char *)&v24 - v14, v2, v7);
  v16(v13, v15, v7);
  uint64_t v25 = (void (*)(uint64_t *, void))sub_191EE8090();
  uint64_t v18 = v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_4_3();
  uint64_t v21 = v20;
  BOOL v22 = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 24))(v18, v29, AssociatedTypeWitness);
  v25(&v30, 0);
  uint64_t v23 = *(void (**)(void))(v9 + 8);
  OUTLINED_FUNCTION_13_18();
  v23();
  sub_191E3EB6C(v26, v6);
  OUTLINED_FUNCTION_13_18();
  v23();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, AssociatedTypeWitness);
  OUTLINED_FUNCTION_13_18();
  v23();
  OUTLINED_FUNCTION_36();
}

uint64_t sub_191E3FF94@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for NonEmpty();
  uint64_t v2 = NonEmpty<>.subscript.read(v7);
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v4, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t *, void))v2)(v7, 0);
}

void (*NonEmpty<>.subscript.read(uint64_t *a1))(void *)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(void *)(v3 + 64));
  sub_191EE8BB0();
  return sub_191E3F6E8;
}

uint64_t sub_191E4015C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_191EE8C50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v15 - v7, a3, v5);
  uint64_t v9 = type metadata accessor for NonEmpty();
  uint64_t v10 = NonEmpty<>.subscript.modify(v15, (uint64_t)v8, v9);
  uint64_t v12 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(v12, a1, AssociatedTypeWitness);
  ((void (*)(void *, void))v10)(v15, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void (*NonEmpty<>.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v5 = malloc(0x68uLL);
  *a1 = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5[8] = sub_191EE8C50();
  OUTLINED_FUNCTION_1_2();
  v5[9] = v6;
  v5[10] = malloc(*(void *)(v7 + 64));
  OUTLINED_FUNCTION_31_7();
  v8();
  v5[11] = NonEmpty.rawElements.modify(v5, a3);
  v5[12] = sub_191EE8090();
  return sub_191E4049C;
}

void sub_191E4049C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = OUTLINED_FUNCTION_26_9();
  v2(v6);
  free(v3);

  free(v1);
}

uint64_t NonEmpty<>.partition(by:)()
{
  return sub_191EE8040();
}

uint64_t NonEmpty<>.swapAt(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4183778](a1, a2, *(void *)(a3 + 16));
}

void sub_191E40770()
{
}

uint64_t (*sub_191E40778(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  NonEmpty<>.subscript.modify();
  v2[4] = v3;
  return sub_191E407F0;
}

void sub_191E407F4()
{
}

uint64_t (*sub_191E407FC(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = NonEmpty<>.subscript.modify(v6, a2, a3);
  return sub_191E407F0;
}

void sub_191E40874(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_27_10(a1);
  v3(v2);

  free(v1);
}

uint64_t sub_191E408B0()
{
  return NonEmpty<>.partition(by:)();
}

uint64_t sub_191E408CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return NonEmpty<>.swapAt(_:_:)(a1, a2, a3);
}

uint64_t sub_191E408D4()
{
  return sub_191EE8060();
}

uint64_t sub_191E408F8()
{
  return sub_191EE8050();
}

uint64_t NonEmpty<>.index(before:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41836A8](a1, *(void *)(a2 + 16));
}

uint64_t NonEmpty<>.formIndex(before:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41836C8](a1, *(void *)(a2 + 16));
}

uint64_t NonEmpty<>.last.getter()
{
  swift_getAssociatedTypeWitness();
  uint64_t v0 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v1);
  sub_191EE7FD0();
  uint64_t result = OUTLINED_FUNCTION_3_33();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_19();
    uint64_t v4 = OUTLINED_FUNCTION_2_52();
    return v5(v4);
  }
  return result;
}

uint64_t sub_191E409FC(uint64_t a1, uint64_t a2)
{
  return NonEmpty<>.index(before:)(a1, a2);
}

uint64_t sub_191E40A04(uint64_t a1, uint64_t a2)
{
  return NonEmpty<>.formIndex(before:)(a1, a2);
}

uint64_t NonEmpty<>.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191EE9AF0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_191EE9860();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_191E40AB8(void *a1)
{
  return NonEmpty<>.encode(to:)(a1);
}

void NonEmpty<>.init(from:)()
{
  OUTLINED_FUNCTION_23_0();
  uint64_t v31 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v29 = v9;
  uint64_t v10 = type metadata accessor for NonEmpty();
  uint64_t v11 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v28 = v12;
  OUTLINED_FUNCTION_7();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_18_11();
  uint64_t v32 = v6;
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_14();
  MEMORY[0x1F4188790](v15);
  uint64_t v33 = (char *)&v25 - v16;
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_191EE9AB0();
  if (!v0)
  {
    uint64_t v26 = v11;
    uint64_t v27 = v4;
    uint64_t v17 = v30;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    sub_191EE97E0();
    OUTLINED_FUNCTION_15_0();
    v18();
    NonEmpty.init(_:)();
    if (__swift_getEnumTagSinglePayload(v1, 1, v10) != 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v32);
      OUTLINED_FUNCTION_19();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v29, v1, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      uint64_t v23 = (uint64_t)v8;
      goto LABEL_7;
    }
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v1, v26);
    sub_191EE9210();
    swift_allocError();
    uint64_t v20 = v19;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    sub_191EE9790();
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    sub_191EE9190();
    swift_bridgeObjectRelease();
    uint64_t v34 = 0x6E6120646E756F46;
    unint64_t v35 = 0xEF207974706D6520;
    uint64_t v21 = v32;
    sub_191EE9C30();
    sub_191EE8280();
    swift_bridgeObjectRelease();
    sub_191EE8280();
    sub_191EE9200();
    OUTLINED_FUNCTION_19();
    (*(void (**)(uint64_t))(v22 + 104))(v20);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  uint64_t v23 = (uint64_t)v8;
LABEL_7:
  __swift_destroy_boxed_opaque_existential_1(v23);
  OUTLINED_FUNCTION_16();
}

void sub_191E40E74()
{
}

uint64_t sub_191E40E98()
{
  return swift_getWitnessTable();
}

uint64_t sub_191E40EE0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E40F00()
{
  return swift_getWitnessTable();
}

uint64_t sub_191E40F1C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E40F38()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E40F54()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E40F70()
{
  return swift_getWitnessTable();
}

uint64_t sub_191E40F8C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E40FB0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E40FD4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E40FF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_191E41040()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E41064()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191E410B8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

uint64_t sub_191E4122C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a6;
  uint64_t v8 = sub_191EE8740();
  v6[5] = v8;
  v6[6] = *(void *)(v8 - 8);
  v6[7] = swift_task_alloc();
  int v11 = (uint64_t (*)(void *))((char *)a4 + *a4);
  int v9 = (void *)swift_task_alloc();
  v6[8] = v9;
  *int v9 = v6;
  v9[1] = sub_191E41370;
  return v11(v6 + 2);
}

uint64_t sub_191E41370()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_36_5();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_191E41448()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = (void (*)(void))sub_191E39C70(*(void *)(v0 + 16));
  v1();
  swift_release();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v2();
}

uint64_t sub_191E414D0()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v1 = *(void **)(v0 + 72);
  *(void *)(v0 + 24) = v1;
  id v2 = v1;
  sub_191D62D64(0, (unint64_t *)&qword_1EB50E0E0);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 72);
  if (v3)
  {
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 40);

    uint64_t v8 = (void (*)(void))sub_191DBA8E4();
    v8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v9 = *(void **)(v0 + 24);
  }
  else
  {

    unsigned int v10 = (void (*)(void))sub_191DBA5DC();
    v10();
    swift_release();
    uint64_t v9 = v4;
  }

  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v11();
}

uint64_t sub_191E41608()
{
  uint64_t v1 = v0;
  uint64_t v4 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v2 = UnfairLock.init(options:)((int *)&v4);
  sub_191D85758(0, &qword_1E92F4028, MEMORY[0x1E4FBC9E8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_191D81D4C(v2);
  return v1;
}

#error "191E41740: call analysis failed (funcsize=55)"

void sub_191E417A4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  UnfairLock.lock()();
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_191DBF67C();
    swift_release();
    *(void *)(v0 + 24) = 0;
    swift_release();
  }
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);

  os_unfair_lock_unlock(v2);
}

void sub_191E41814(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  UnfairLock.lock()();
  if (*(void *)(v1 + 24))
  {
    swift_retain();
    sub_191DBF4E8(a1);
    swift_release();
    *(void *)(v1 + 24) = 0;
    swift_release();
  }
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);

  os_unfair_lock_unlock(v4);
}

void sub_191E4188C()
{
}

void sub_191E418B4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  UnfairLock.lock()();
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_191E41C3C();
    swift_release();
    *(void *)(v0 + 24) = 0;
    swift_release();
  }
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);

  os_unfair_lock_unlock(v2);
}

uint64_t sub_191E41930(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_191E4AFB0(0, (unint64_t *)&qword_1EB50E530, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191EF0EC0;
  *(void *)(inited + 32) = v4;
  swift_retain();
  *(void *)(inited + 40) = sub_191E41FB4(a1, a2, a3, a4);
  sub_191EE8550();
  uint64_t v10 = sub_191E4215C(inited);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_191E41A10()
{
  return sub_191D82050();
}

uint64_t sub_191E41A28()
{
  return sub_191D82050();
}

uint64_t sub_191E41A40()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    uint64_t v1 = (void (*)(uint64_t))sub_191E395D8();
    swift_release();
    uint64_t v2 = swift_retain();
    v1(v2);
    return swift_release_n();
  }
  return result;
}

uint64_t sub_191E41AC4()
{
  return sub_191D82050();
}

uint64_t sub_191E41ADC()
{
  return sub_191D82050();
}

uint64_t sub_191E41AF4()
{
  return sub_191E41BE0();
}

uint64_t sub_191E41B0C()
{
  return sub_191D82050();
}

uint64_t sub_191E41B24()
{
  uint64_t result = OUTLINED_FUNCTION_25_11();
  if (result)
  {
    OUTLINED_FUNCTION_24_9();
    swift_release();
    sub_191E39878();
    OUTLINED_FUNCTION_9_15();
    swift_retain();
    OUTLINED_FUNCTION_39_4();
    v0();
    return OUTLINED_FUNCTION_42_3();
  }
  return result;
}

uint64_t sub_191E41B80()
{
  return sub_191D82050();
}

uint64_t sub_191E41B98()
{
  return sub_191E41BE0();
}

uint64_t sub_191E41BB0()
{
  return sub_191D82050();
}

uint64_t sub_191E41BC8()
{
  return sub_191E41BE0();
}

uint64_t sub_191E41BE0()
{
  uint64_t result = OUTLINED_FUNCTION_25_11();
  if (result)
  {
    OUTLINED_FUNCTION_24_9();
    swift_release();
    ((void (*)(uint64_t))v0)(v1);
    OUTLINED_FUNCTION_9_15();
    swift_retain();
    OUTLINED_FUNCTION_39_4();
    v0();
    return OUTLINED_FUNCTION_42_3();
  }
  return result;
}

uint64_t sub_191E41C3C()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    uint64_t v1 = (void (*)(uint64_t))sub_191E39BE0();
    swift_release();
    uint64_t v2 = swift_retain();
    v1(v2);
    return swift_release_n();
  }
  return result;
}

uint64_t sub_191E41CC4()
{
  return sub_191D82050();
}

uint64_t sub_191E41CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v12 = sub_191EE7C00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_191EE7C60();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a3;
  v20[3] = a4;
  v20[4] = a7;
  v20[5] = a8;
  aBlock[4] = sub_191DE2F4C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191D70378;
  aBlock[3] = &block_descriptor_79;
  uint64_t v21 = _Block_copy(aBlock);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  sub_191EE7C30();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_191E4B040((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  sub_191D85758(0, (unint64_t *)&qword_1EB50E620, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_191DB6CD4();
  sub_191EE9060();
  MEMORY[0x192FE7EA0](v24, v19, v15, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return swift_release();
}

uint64_t sub_191E41FB4(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = sub_191EE7C90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = &v19[-v13];
  sub_191EE7C80();
  MEMORY[0x192FE6EC0](v12, a4);
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  id v16 = sub_191DE2500(a1);
  id v20 = v16;
  uint64_t v21 = v14;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  sub_191E4AFB0(0, &qword_1EB50B4E0, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  uint64_t v17 = sub_191DAAAD8((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_191E4AFFC, (uint64_t)v19);

  v15(v14, v8);
  return v17;
}

uint64_t sub_191E4215C(unint64_t a1)
{
  if (a1 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v2 = sub_191EE94B0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    sub_191DB60C4();
    swift_allocError();
    *(_OWORD *)uint64_t v8 = xmmword_191EF0540;
    *(unsigned char *)(v8 + 16) = 2;
    sub_191E4AFB0(0, &qword_1EB50B4E0, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for Promise);
    swift_allocObject();
    return sub_191E13EB4();
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_14;
  }
LABEL_3:
  sub_191E4AFB0(0, &qword_1E92F4058, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for OnlyOnceDeferredPromise);
  swift_allocObject();
  uint64_t result = (uint64_t)sub_191E49D4C();
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x192FE8380](v5, a1);
      }
      else {
        swift_retain();
      }
      if (qword_1EB50EC90 != -1) {
        swift_once();
      }
      ++v5;
      id v6 = (id)qword_1EB50EC78;
      sub_191E416B4();
      swift_release();
    }
    while (v2 != v5);
    swift_bridgeObjectRelease();
    uint64_t result = swift_beginAccess();
    uint64_t v7 = *(void *)(v4 + 16);
    if (v7)
    {
      swift_retain();
      swift_release();
      return v7;
    }
  }
  __break(1u);
  return result;
}

BOOL static BackgroundFetchResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BackgroundFetchResult.hash(into:)()
{
  return sub_191EE9A80();
}

uint64_t BackgroundFetchResult.hashValue.getter()
{
  return sub_191EE9A90();
}

uint64_t BackgroundFetchTrigger.readableString.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (!v1) {
    return 0x7266655220707041;
  }
  if (v1 == 1 || v1 == 2) {
    return 0x20676E697661654CLL;
  }
  sub_191EE8280();
  return 0x656C756465686353;
}

BOOL static BackgroundFetchTrigger.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      OUTLINED_FUNCTION_4_32(*a1, 0);
      uint64_t v6 = v4;
      unint64_t v7 = 0;
      goto LABEL_24;
    }
    OUTLINED_FUNCTION_1_49();
    unint64_t v3 = 0;
    goto LABEL_14;
  }
  if (v3 != 1)
  {
    if (v3 == 2)
    {
      if (v5 == 2)
      {
        OUTLINED_FUNCTION_4_32(*a1, 2uLL);
        uint64_t v6 = v4;
        unint64_t v7 = 2;
LABEL_24:
        OUTLINED_FUNCTION_10_22(v6, v7);
        return 1;
      }
      OUTLINED_FUNCTION_1_49();
      unint64_t v3 = 2;
    }
    else
    {
      if (v5 >= 3)
      {
        uint64_t v8 = *a1;
        if (v2 == v4 && v3 == v5)
        {
          sub_191DF7F0C(v8, v3);
          OUTLINED_FUNCTION_8_22();
          OUTLINED_FUNCTION_4_32(v2, v3);
          uint64_t v6 = v2;
          unint64_t v7 = v3;
          goto LABEL_24;
        }
        char v11 = sub_191EE9770();
        OUTLINED_FUNCTION_1_49();
        OUTLINED_FUNCTION_8_22();
        OUTLINED_FUNCTION_4_32(v2, v3);
        OUTLINED_FUNCTION_10_22(v4, v5);
        return (v11 & 1) != 0;
      }
      OUTLINED_FUNCTION_1_49();
      OUTLINED_FUNCTION_8_22();
    }
LABEL_14:
    OUTLINED_FUNCTION_4_32(v2, v3);
    OUTLINED_FUNCTION_10_22(v4, v5);
    return 0;
  }
  if (v5 != 1)
  {
    OUTLINED_FUNCTION_1_49();
    unint64_t v3 = 1;
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_4_32(*a1, 1uLL);
  OUTLINED_FUNCTION_10_22(v4, 1uLL);
  return v5;
}

uint64_t BackgroundFetchTrigger.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (v1)
  {
    if (v1 == 1)
    {
      OUTLINED_FUNCTION_14_15();
    }
    else if (v1 == 2)
    {
      OUTLINED_FUNCTION_15_16();
    }
    else
    {
      OUTLINED_FUNCTION_22_11();
    }
  }
  else
  {
    OUTLINED_FUNCTION_23_11();
  }

  return sub_191EE8200();
}

void *static BackgroundFetchTrigger.allCases.getter()
{
  return &unk_1EE2B5630;
}

uint64_t BackgroundFetchTrigger.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_191EE9A70();
  if (v1)
  {
    if (v1 == 1)
    {
      OUTLINED_FUNCTION_14_15();
    }
    else if (v1 == 2)
    {
      OUTLINED_FUNCTION_15_16();
    }
    else
    {
      OUTLINED_FUNCTION_22_11();
    }
  }
  else
  {
    OUTLINED_FUNCTION_23_11();
  }
  sub_191EE8200();
  return sub_191EE9A90();
}

void sub_191E427AC(void *a1@<X8>)
{
  *a1 = &unk_1EE2B5630;
}

uint64_t sub_191E427C4()
{
  return sub_191EE9A90();
}

TeaFoundation::BackgroundFetchConditions __swiftcall BackgroundFetchConditions.init(rawValue:)(TeaFoundation::BackgroundFetchConditions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static BackgroundFetchConditions.inexpensiveNetwork.getter(void *a1@<X8>)
{
}

void static BackgroundFetchConditions.unconstrainedNetwork.getter(void *a1@<X8>)
{
}

void static BackgroundFetchConditions.wifiNetwork.getter(void *a1@<X8>)
{
}

void static BackgroundFetchConditions.externalPower.getter(void *a1@<X8>)
{
}

uint64_t BackgroundFetchConditions.rawValue.getter()
{
  return *(void *)v0;
}

TeaFoundation::BackgroundFetchConditions sub_191E42848(Swift::Int *a1)
{
  return BackgroundFetchConditions.init(rawValue:)(*a1);
}

TeaFoundation::BackgroundFetchConditions sub_191E42850@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  result.rawValue = BackgroundFetchConditions.init(rawValue:)(*a1).rawValue;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_191E4287C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BackgroundFetchConditions.rawValue.getter();
  *a1 = result;
  return result;
}

void sub_191E428A4()
{
}

void BackgroundFetchWorker.backgroundFetchTriggers.getter()
{
}

void sub_191E428C8(void *a1@<X8>)
{
}

void BackgroundFetchWorker.backgroundFetchPreconditions(for:)(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_191E428E8()
{
  return BackgroundFetchWorker.performBackgroundFetch()();
}

uint64_t sub_191E42900()
{
  return sub_191E3277C(0);
}

uint64_t BackgroundFetchWorker.performBackgroundFetch()()
{
  return sub_191E3277C(0);
}

uint64_t sub_191E429C4(uint64_t a1)
{
  sub_191E10CA8(a1, (uint64_t)v2);
  sub_191E4AFB0(0, &qword_1EB50B4E0, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  return sub_191E3277C(0);
}

uint64_t BackgroundFetchWorker.performBackgroundFetch(trigger:conditions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a1 + 8))
  {
    sub_191E4AFB0(0, &qword_1EB50B4E0, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for Promise);
    swift_allocObject();
    return sub_191E3277C(0);
  }
  else
  {
    unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
    return v5(a3, a4);
  }
}

uint64_t BackgroundFetchManager.journal.getter()
{
  return swift_unknownObjectRetain();
}

id BackgroundFetchManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id BackgroundFetchManager.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_configuredTriggers] = MEMORY[0x1E4FBC870];
  uint64_t v2 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_networkReachability;
  uint64_t v3 = qword_1E92F28E0;
  uint64_t v4 = v0;
  if (v3 != -1) {
    swift_once();
  }
  *(void *)&v4[v2] = qword_1E92F47A8;
  uint64_t v5 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_backgroundTaskSchedulingQueue;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F28F08]);
  swift_retain();
  id v7 = objc_msgSend(v6, sel_init);
  *(void *)&v4[v5] = v7;
  *(void *)&v4[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager] = 0;
  *(void *)&v4[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor] = 0;
  *(void *)&v4[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_journal] = 0;
  id v8 = v7;
  objc_msgSend(v8, sel_setMaxConcurrentOperationCount_, 1);

  v10.receiver = v4;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id BackgroundFetchManager.__allocating_init(journal:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return BackgroundFetchManager.init(journal:)(a1);
}

id BackgroundFetchManager.init(journal:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers] = MEMORY[0x1E4FBC860];
  *(void *)&v2[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_configuredTriggers] = MEMORY[0x1E4FBC870];
  uint64_t v5 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_networkReachability;
  uint64_t v6 = qword_1E92F28E0;
  id v7 = v2;
  if (v6 != -1) {
    swift_once();
  }
  *(void *)&v7[v5] = qword_1E92F47A8;
  uint64_t v8 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_backgroundTaskSchedulingQueue;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F28F08]);
  swift_retain();
  id v10 = objc_msgSend(v9, sel_init);
  *(void *)&v7[v8] = v10;
  *(void *)&v7[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager] = 0;
  *(void *)&v7[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor] = 0;
  *(void *)&v7[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_journal] = a1;
  swift_unknownObjectRetain();
  id v11 = v10;
  objc_msgSend(v11, sel_setMaxConcurrentOperationCount_, 1);

  v14.receiver = v7;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_init);
  swift_unknownObjectRelease();
  return v12;
}

uint64_t BackgroundFetchManager.performBackgroundFetch()()
{
  uint64_t v2 = 0;
  memset(v1, 0, sizeof(v1));
  return sub_191E42E40((uint64_t)v1);
}

uint64_t sub_191E42E40(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_191E10CA8(a1, (uint64_t)v19);
  if (qword_1E92F2948 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_191EE7940();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E92F4790);
  sub_191E4A920(v19, (void (*)(void, void, void, void, void))sub_191DF7F0C);
  sub_191E4A920(v19, (void (*)(void, void, void, void, void))sub_191DF7F0C);
  uint64_t v4 = sub_191EE7920();
  os_log_type_t v5 = sub_191EE8CA0();
  if (!os_log_type_enabled(v4, v5))
  {
    sub_191E4A920(v19, (void (*)(void, void, void, void, void))sub_191DF7F54);
    sub_191E4A920(v19, (void (*)(void, void, void, void, void))sub_191DF7F54);

    goto LABEL_14;
  }
  uint64_t v6 = (uint8_t *)swift_slowAlloc();
  uint64_t v7 = swift_slowAlloc();
  uint64_t v20 = v7;
  *(_DWORD *)uint64_t v6 = 136446210;
  sub_191E10CA8((uint64_t)v19, (uint64_t)&v23);
  if (v24)
  {
    if (v24 == 2)
    {
      uint64_t v8 = 0x20676E697661654CLL;
      uint64_t v9 = 1802661719;
    }
    else
    {
      if (v24 != 1)
      {
        uint64_t v21 = 0x656C756465686353;
        unint64_t v22 = 0xEB00000000203A64;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        swift_retain();
        sub_191EE8280();
        sub_191E4A920(v19, (void (*)(void, void, void, void, void))sub_191DF7F54);
        uint64_t v8 = v21;
        unint64_t v10 = v22;
        goto LABEL_13;
      }
      uint64_t v8 = 0x20676E697661654CLL;
      uint64_t v9 = 1701670728;
    }
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
  }
  else
  {
    uint64_t v8 = 0x7266655220707041;
    unint64_t v10 = 0xEB00000000687365;
  }
LABEL_13:
  uint64_t v21 = sub_191D76D74(v8, v10, &v20);
  sub_191EE8EA0();
  swift_bridgeObjectRelease();
  sub_191E4A920(v19, (void (*)(void, void, void, void, void))sub_191DF7F54);
  sub_191E4A920(v19, (void (*)(void, void, void, void, void))sub_191DF7F54);
  _os_log_impl(&dword_191D4D000, v4, v5, "will perform background fetch for trigger: %{public}s", v6, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x192FE9A10](v7, -1, -1);
  MEMORY[0x192FE9A10](v6, -1, -1);

LABEL_14:
  id v11 = *(void **)(v2 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_journal);
  if (v11)
  {
    sub_191E10CA8((uint64_t)v19, (uint64_t)&v20);
    id v12 = (void *)sub_191EE80E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_addEntryWithReason_, v12);
  }
  sub_191E446D0(v2, v19);
  sub_191D74B24(0, (unint64_t *)&qword_1EB50EE70);
  uint64_t v13 = (void *)sub_191EE8D20();
  sub_191DBB944();
  swift_release();

  objc_super v14 = (void *)sub_191EE8D20();
  sub_191DACA60((uint64_t)v14, (uint64_t)sub_191E45378, 0);
  swift_release();

  sub_191E10CA8((uint64_t)v19, (uint64_t)&v21);
  if (v22 > 2) {
    double v15 = 120.0;
  }
  else {
    double v15 = dbl_191EF12D8[v22];
  }
  if (qword_1EB50EC90 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EB50EC78;
  uint64_t v17 = sub_191E41930(v16, 0, 0, v15);
  swift_release();

  return v17;
}

uint64_t BackgroundFetchManager.performBackgroundFetch(trigger:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  uint64_t v5 = v1;
  return sub_191E42E40((uint64_t)v4);
}

uint64_t BackgroundFetchManager.add(worker:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v31 = type metadata accessor for DisposableWorker();
  uint64_t v4 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = swift_unknownObjectRetain();
  uint64_t v7 = sub_191E49F5C(v6, v4, ObjectType, a1);
  uint64_t v8 = (void *)(v2 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers);
  swift_beginAccess();
  uint64_t v9 = swift_retain();
  MEMORY[0x192FE76B0](v9);
  sub_191D742B4(*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10));
  uint64_t v30 = v7;
  sub_191EE85F0();
  sub_191EE8550();
  swift_endAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(ObjectType, a1);
  uint64_t v11 = result;
  int64_t v12 = 0;
  uint64_t v13 = 1 << *(unsigned char *)(result + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  uint64_t v15 = v14 & *(void *)(result + 56);
  uint64_t v33 = result + 56;
  int64_t v34 = (unint64_t)(v13 + 63) >> 6;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  OUTLINED_FUNCTION_38_5();
  for (int64_t i = v16 | (v12 << 6); ; int64_t i = v20 + (v12 << 6))
  {
    uint64_t v21 = (void *)(*(void *)(v11 + 48) + 40 * i);
    uint64_t v22 = v21[1];
    uint64_t v23 = v21[2];
    uint64_t v24 = v21[3];
    uint64_t v25 = v21[4];
    v35[0] = *v21;
    v35[1] = v22;
    v35[2] = v23;
    v35[3] = v24;
    void v35[4] = v25;
    uint64_t v26 = OUTLINED_FUNCTION_32_7();
    sub_191DF7F0C(v26, v27);
    sub_191E43648((uint64_t)v35);
    uint64_t v28 = OUTLINED_FUNCTION_32_7();
    uint64_t result = sub_191DF7F54(v28, v29);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v18 >= v34) {
      goto LABEL_21;
    }
    ++v12;
    if (!*(void *)(v33 + 8 * v18))
    {
      int64_t v12 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_21;
      }
      if (!*(void *)(v33 + 8 * v12))
      {
        int64_t v12 = v18 + 2;
        if (v18 + 2 >= v34) {
          goto LABEL_21;
        }
        if (!*(void *)(v33 + 8 * v12)) {
          break;
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_37_7();
  }
  int64_t v19 = v18 + 3;
  if (v19 >= v34)
  {
LABEL_21:
    uint64_t result = swift_release();
    a2[3] = v31;
    a2[4] = (uint64_t)&off_1EE2B3BD8;
    *a2 = v30;
    return result;
  }
  if (*(void *)(v33 + 8 * v19))
  {
    int64_t v12 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v12 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v12 >= v34) {
      goto LABEL_21;
    }
    ++v19;
    if (*(void *)(v33 + 8 * v12)) {
      goto LABEL_18;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_191E43648(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_191E10CA8(a1, (uint64_t)v47);
  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_configuredTriggers];
  swift_beginAccess();
  uint64_t v4 = *v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  char v5 = sub_191E104F4((uint64_t)v47, v4);
  swift_bridgeObjectRelease();
  if (v5) {
    return;
  }
  if (qword_1E92F2948 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_191EE7940();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E92F4790);
  sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F0C);
  sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F0C);
  uint64_t v7 = sub_191EE7920();
  os_log_type_t v8 = sub_191EE8CA0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v48 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    sub_191E10CA8((uint64_t)v47, (uint64_t)&v53);
    if (v54)
    {
      if (v54 == 2)
      {
        uint64_t v11 = 1802661719;
      }
      else
      {
        if (v54 != 1)
        {
          unint64_t v42 = 0xEB00000000203A64;
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
          swift_retain();
          sub_191EE8280();
          sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F54);
          uint64_t v13 = 0x656C756465686353;
          unint64_t v12 = 0xEB00000000203A64;
          goto LABEL_14;
        }
        uint64_t v11 = 1701670728;
      }
      unint64_t v12 = v11 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      uint64_t v13 = 0x20676E697661654CLL;
    }
    else
    {
      unint64_t v12 = 0xEB00000000687365;
      uint64_t v13 = 0x7266655220707041;
    }
LABEL_14:
    uint64_t aBlock = sub_191D76D74(v13, v12, &v48);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F54);
    sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F54);
    _os_log_impl(&dword_191D4D000, v7, v8, "configuring trigger: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v10, -1, -1);
    MEMORY[0x192FE9A10](v9, -1, -1);

    goto LABEL_15;
  }
  sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F54);
  sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F54);

LABEL_15:
  sub_191E10CA8((uint64_t)v47, (uint64_t)&v48);
  unint64_t v14 = v49;
  switch(v49)
  {
    case 0uLL:
LABEL_28:
      swift_beginAccess();
      sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F0C);
      sub_191E4E2C0((uint64_t)&aBlock, v47);
      swift_endAccess();
      sub_191DF7F54(aBlock, v42);
      return;
    case 2uLL:
      id v15 = objc_msgSend(self, sel_defaultManager);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v2;
      BOOL v45 = sub_191E4AA04;
      uint64_t v46 = (void *)v19;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      unint64_t v42 = 1107296256;
      uint64_t v43 = sub_191E45708;
      uint64_t v44 = &block_descriptor_35;
      uint64_t v17 = _Block_copy(&aBlock);
      id v20 = v2;
      swift_release();
      objc_msgSend(v15, sel_fetchLocationsOfInterestOfType_withHandler_, 1, v17);
      goto LABEL_20;
    case 1uLL:
      id v15 = objc_msgSend(self, sel_defaultManager);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v2;
      BOOL v45 = sub_191E4AA38;
      uint64_t v46 = (void *)v16;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      unint64_t v42 = 1107296256;
      uint64_t v43 = sub_191E45708;
      uint64_t v44 = &block_descriptor_41;
      uint64_t v17 = _Block_copy(&aBlock);
      id v18 = v2;
      swift_release();
      objc_msgSend(v15, sel_fetchLocationsOfInterestOfType_withHandler_, 0, v17);
LABEL_20:
      _Block_release(v17);

      goto LABEL_28;
  }
  uint64_t v21 = v48;
  uint64_t v23 = v50;
  uint64_t v22 = v51;
  uint64_t v24 = v52;
  uint64_t v25 = self;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  id v40 = objc_msgSend(v25, sel_sharedScheduler);
  uint64_t v39 = (void *)sub_191EE80E0();
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v27 = (void *)swift_allocObject();
  v27[2] = v26;
  sub_191E10CA8((uint64_t)v47, (uint64_t)(v27 + 3));
  uint64_t v38 = v22;
  v27[8] = v21;
  v27[9] = v14;
  uint64_t v37 = v23;
  v27[10] = v23;
  v27[11] = v22;
  v27[12] = v24;
  BOOL v45 = sub_191E4A9BC;
  uint64_t v46 = v27;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v42 = 1107296256;
  uint64_t v43 = sub_191E467E0;
  uint64_t v44 = &block_descriptor_29;
  uint64_t v28 = _Block_copy(&aBlock);
  sub_191E4A920(v47, (void (*)(void, void, void, void, void))sub_191DF7F0C);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  swift_release();
  LODWORD(v27) = objc_msgSend(v40, sel_registerForTaskWithIdentifier_usingQueue_launchHandler_, v39, 0, v28);
  _Block_release(v28);

  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v27)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    unint64_t v29 = sub_191EE7920();
    os_log_type_t v30 = sub_191EE8CA0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t aBlock = v32;
      *(_DWORD *)uint64_t v31 = 136446210;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_191D76D74(v21, v14, &aBlock);
      sub_191EE8EA0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191D4D000, v29, v30, "registered task handler for %{public}s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v32, -1, -1);
      MEMORY[0x192FE9A10](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t aBlock = v37;
    sub_191E445A4(v21, v14, &aBlock, v38, v24);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v33 = sub_191EE7920();
  os_log_type_t v34 = sub_191EE8C80();
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t aBlock = v36;
    *(_DWORD *)unint64_t v35 = 136446210;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D76D74(v21, v14, &aBlock);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191D4D000, v33, v34, "failed to register task handler for %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v36, -1, -1);
    MEMORY[0x192FE9A10](v35, -1, -1);
    swift_release();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
  }
}

uint64_t BackgroundFetchManager.add(for:workerBlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  type metadata accessor for BlockBasedBackgroundFetchWorker();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  void v9[4] = a3;
  uint64_t v34 = type metadata accessor for DisposableWorker();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 24) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(v10 + 40) = 0;
  *(void *)(v10 + 24) = &off_1EE2B61C0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  *(void *)(v10 + 40) = v9;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  swift_retain();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();
  uint64_t v11 = (void *)(v5 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers);
  swift_beginAccess();
  uint64_t v12 = swift_retain();
  MEMORY[0x192FE76B0](v12);
  sub_191D742B4(*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10));
  uint64_t v33 = v10;
  sub_191EE85F0();
  sub_191EE8550();
  swift_endAccess();
  uint64_t v13 = v9[2];
  uint64_t v36 = v13 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v13 + 56);
  int64_t v37 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    uint64_t v24 = (void *)(*(void *)(v13 + 48) + 40 * i);
    uint64_t v25 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v26 = v24[3];
    uint64_t v28 = v24[4];
    v38[0] = *v24;
    v38[1] = v25;
    void v38[2] = v27;
    v38[3] = v26;
    v38[4] = v28;
    uint64_t v29 = OUTLINED_FUNCTION_29_8();
    sub_191DF7F0C(v29, v30);
    sub_191E43648((uint64_t)v38);
    uint64_t v31 = OUTLINED_FUNCTION_29_8();
    uint64_t result = sub_191DF7F54(v31, v32);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v21 >= v37) {
      goto LABEL_21;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_21;
      }
      unint64_t v22 = *(void *)(v36 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v37) {
          goto LABEL_21;
        }
        unint64_t v22 = *(void *)(v36 + 8 * v18);
        if (!v22) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v16 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v37)
  {
LABEL_21:
    swift_release();
    a4[3] = v34;
    a4[4] = (uint64_t)&off_1EE2B3BD8;
    uint64_t result = swift_release();
    *a4 = v33;
    return result;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v37) {
      goto LABEL_21;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_191E442A8()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

Swift::Void __swiftcall BackgroundFetchManager.rescheduleBackgroundTasks()()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      unint64_t v5 = v2 & 0xC000000000000001;
      uint64_t v30 = v2 + 32;
      uint64_t v31 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v33 = v3;
      uint64_t v34 = v2;
      unint64_t v32 = v2 & 0xC000000000000001;
      while (1)
      {
        if (v5)
        {
          uint64_t v6 = MEMORY[0x192FE8380](v4, v2);
        }
        else
        {
          if (v4 >= *(void *)(v31 + 16)) {
            goto LABEL_39;
          }
          uint64_t v6 = *(void *)(v30 + 8 * v4);
          swift_retain();
        }
        if (__OFADD__(v4++, 1)) {
          goto LABEL_38;
        }
        uint64_t v8 = MEMORY[0x192FE9B40](v6 + 32);
        swift_unknownObjectRelease();
        if (v8)
        {
          if (MEMORY[0x192FE9B40](v6 + 16)) {
            break;
          }
        }
LABEL_34:
        swift_release();
        if (v4 == v3) {
          goto LABEL_35;
        }
      }
      uint64_t v9 = *(void *)(v6 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
      int64_t v12 = 0;
      uint64_t v35 = v11 + 56;
      uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
      if (v13 < 64) {
        uint64_t v14 = ~(-1 << v13);
      }
      else {
        uint64_t v14 = -1;
      }
      uint64_t v2 = v14 & *(void *)(v11 + 56);
      int64_t v15 = (unint64_t)(v13 + 63) >> 6;
      while (v2)
      {
        OUTLINED_FUNCTION_38_5();
        int64_t v17 = v16 | (v12 << 6);
LABEL_31:
        int64_t v21 = (uint64_t *)(*(void *)(v11 + 48) + 40 * v17);
        unint64_t v22 = v21[1];
        if (v22 >= 3)
        {
          uint64_t v23 = v21[3];
          uint64_t v24 = v21[4];
          uint64_t v25 = *v21;
          uint64_t v36 = v21[2];
          OUTLINED_FUNCTION_41_5();
          sub_191DF7F0C(v26, v27);
          swift_retain();
          sub_191E445A4(v25, v22, &v36, v23, v24);
          swift_release();
          OUTLINED_FUNCTION_41_5();
          sub_191DF7F54(v28, v29);
        }
      }
      int64_t v18 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v18 >= v15) {
        goto LABEL_33;
      }
      ++v12;
      if (*(void *)(v35 + 8 * v18)) {
        goto LABEL_30;
      }
      int64_t v12 = v18 + 1;
      if (v18 + 1 >= v15) {
        goto LABEL_33;
      }
      if (*(void *)(v35 + 8 * v12)) {
        goto LABEL_30;
      }
      int64_t v12 = v18 + 2;
      if (v18 + 2 >= v15) {
        goto LABEL_33;
      }
      if (*(void *)(v35 + 8 * v12)) {
        goto LABEL_30;
      }
      int64_t v19 = v18 + 3;
      if (v19 >= v15)
      {
LABEL_33:
        swift_unknownObjectRelease();
        swift_release();
        uint64_t v3 = v33;
        uint64_t v2 = v34;
        unint64_t v5 = v32;
        goto LABEL_34;
      }
      if (*(void *)(v35 + 8 * v19)) {
        break;
      }
      while (1)
      {
        int64_t v12 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          break;
        }
        if (v12 >= v15) {
          goto LABEL_33;
        }
        ++v19;
        if (*(void *)(v35 + 8 * v12)) {
          goto LABEL_30;
        }
      }
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v3 = sub_191EE94B0();
      if (!v3) {
        goto LABEL_35;
      }
    }
    int64_t v12 = v19;
LABEL_30:
    OUTLINED_FUNCTION_37_7();
    int64_t v17 = v20 + (v12 << 6);
    goto LABEL_31;
  }
LABEL_35:
  swift_bridgeObjectRelease();
}

void sub_191E445A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *a3;
  uint64_t v11 = *(void **)&v5[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_backgroundTaskSchedulingQueue];
  int64_t v12 = (void *)swift_allocObject();
  void v12[2] = a4;
  v12[3] = a5;
  v12[4] = a1;
  void v12[5] = a2;
  v12[6] = v5;
  v12[7] = v10;
  sub_191E4AFB0(0, &qword_1E92F2910, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for AsyncBlockOperation);
  uint64_t v14 = v13;
  int64_t v15 = (char *)objc_allocWithZone(v13);
  uint64_t v16 = &v15[qword_1EB50C390];
  *(void *)uint64_t v16 = sub_191E4A778;
  *((void *)v16 + 1) = v12;
  v20.receiver = v15;
  v20.super_class = v14;
  id v17 = v11;
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  int64_t v18 = v5;
  id v19 = objc_msgSendSuper2(&v20, sel_init);
  objc_msgSend(v17, sel_addOperation_, v19, v20.receiver, v20.super_class);
}

uint64_t sub_191E446D0(uint64_t a1, void *a2)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  sub_191E447D8(v10);
  uint64_t v4 = v10[0];
  sub_191E10CA8((uint64_t)a2, (uint64_t)v10);
  uint64_t v9 = v4;
  sub_191E4A920(a2, (void (*)(void, void, void, void, void))sub_191DF7F0C);
  sub_191E44B54((uint64_t)v10, &v9, a1, &v11, a2, v4);
  uint64_t v5 = qword_1EB50EC90;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v5 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EB50EC78;
  uint64_t v7 = sub_191DC03B0();
  swift_bridgeObjectRelease_n();

  return v7;
}

uint64_t sub_191E447D8@<X0>(unint64_t *a1@<X8>)
{
  if (TFDrawingUnlimitedPower()) {
    uint64_t v2 = 8;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_retain();
  sub_191EDB95C();
  unint64_t v3 = sub_191E05818();
  swift_release();
  swift_release();
  unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFELL | (v3 >> 2) & 1;
  swift_retain();
  sub_191EDB95C();
  unint64_t v5 = sub_191E05818();
  swift_release();
  swift_release();
  uint64_t v6 = v4 | (v5 >> 2) & 2;
  swift_retain();
  sub_191EDB95C();
  LOBYTE(v5) = sub_191E05818();
  swift_release();
  uint64_t result = swift_release();
  *a1 = (v6 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v5 & 1))) ^ 3;
  return result;
}

uint64_t sub_191E448C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (qword_1E92F2948 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_191EE7940();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E92F4790);
  swift_unknownObjectRetain_n();
  uint64_t v11 = sub_191EE7920();
  os_log_type_t v12 = sub_191EE8CA0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v18 = a4;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = v14;
    v21[0] = 0;
    *(_DWORD *)uint64_t v13 = 136446210;
    v21[1] = 0xE000000000000000;
    v19[0] = a1;
    v19[1] = a2;
    sub_191D62D64(0, (unint64_t *)&unk_1E92F4070);
    sub_191EE93A0();
    v21[0] = sub_191D76D74(v21[0], 0xE000000000000000, &v20);
    sub_191EE8EA0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v11, v12, "will trigger worker: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v14, -1, -1);
    int64_t v15 = v13;
    a4 = v18;
    MEMORY[0x192FE9A10](v15, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t ObjectType = swift_getObjectType();
  sub_191E10CA8(a4, (uint64_t)v21);
  v19[0] = a5;
  (*(void (**)(uint64_t *, void *, uint64_t, uint64_t))(a2 + 32))(v21, v19, ObjectType, a2);
  MEMORY[0x192FE76B0]();
  sub_191D742B4(*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_191EE85F0();
  return sub_191EE8550();
}

void *sub_191E44B54(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  sub_191E10CA8(a1, (uint64_t)v45);
  uint64_t v39 = *a2;
  uint64_t v8 = (uint64_t *)(a3 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v35 = v8;
  if ((unint64_t)*v8 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = (void *)sub_191EE94B0();
    uint64_t v10 = (uint64_t)result;
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v10)
    {
LABEL_3:
      if (v10 >= 1)
      {
        uint64_t v12 = 0;
        unint64_t v13 = v9 & 0xC000000000000001;
        while (1)
        {
          if (v13)
          {
            uint64_t v14 = MEMORY[0x192FE8380](v12, v9);
          }
          else
          {
            uint64_t v14 = *(void *)(v9 + 8 * v12 + 32);
            swift_retain();
          }
          uint64_t v15 = MEMORY[0x192FE9B40](v14 + 32);
          swift_unknownObjectRelease();
          if (v15 && (uint64_t v16 = MEMORY[0x192FE9B40](v14 + 16)) != 0)
          {
            uint64_t v17 = v16;
            uint64_t v18 = *(void *)(v14 + 24);
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(ObjectType, v18);
            char v21 = sub_191E104F4((uint64_t)v45, v20);
            swift_bridgeObjectRelease();
            if ((v21 & 1) == 0)
            {
              if (qword_1E92F2948 != -1) {
                swift_once();
              }
              uint64_t v22 = sub_191EE7940();
              __swift_project_value_buffer(v22, (uint64_t)qword_1E92F4790);
              swift_unknownObjectRetain_n();
              uint64_t v23 = sub_191EE7920();
              os_log_type_t v24 = sub_191EE8CA0();
              if (os_log_type_enabled(v23, v24))
              {
                uint64_t v25 = swift_slowAlloc();
                uint64_t v26 = swift_slowAlloc();
                uint64_t v43 = v18;
                uint64_t v44 = v26;
                *(_DWORD *)uint64_t v25 = 136446210;
                uint64_t v40 = 0;
                unint64_t v41 = 0xE000000000000000;
                uint64_t v42 = v17;
                sub_191D62D64(0, (unint64_t *)&unk_1E92F4070);
                sub_191EE93A0();
                *(void *)(v25 + 4) = sub_191D76D74(v40, v41, &v44);
                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_191D4D000, v23, v24, "skipping worker because it hasn't requested this trigger, worker=%{public}s", (uint8_t *)v25, 0xCu);
                goto LABEL_22;
              }
              goto LABEL_23;
            }
            sub_191E10CA8((uint64_t)v45, (uint64_t)&v40);
            (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t))(v18 + 16))(&v42, &v40, ObjectType, v18);
            if ((v42 & ~v39) != 0)
            {
              if (qword_1E92F2948 != -1) {
                swift_once();
              }
              uint64_t v27 = sub_191EE7940();
              __swift_project_value_buffer(v27, (uint64_t)qword_1E92F4790);
              swift_unknownObjectRetain_n();
              uint64_t v23 = sub_191EE7920();
              os_log_type_t v28 = sub_191EE8CA0();
              if (os_log_type_enabled(v23, v28))
              {
                uint64_t v25 = swift_slowAlloc();
                uint64_t v26 = swift_slowAlloc();
                uint64_t v43 = v18;
                uint64_t v44 = v26;
                *(_DWORD *)uint64_t v25 = 136446210;
                uint64_t v40 = 0;
                unint64_t v41 = 0xE000000000000000;
                uint64_t v42 = v17;
                sub_191D62D64(0, (unint64_t *)&unk_1E92F4070);
                sub_191EE93A0();
                *(void *)(v25 + 4) = sub_191D76D74(v40, v41, &v44);
                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_191D4D000, v23, v28, "skipping worker because its preconditions aren't satisfied, worker=%{public}s", (uint8_t *)v25, 0xCu);
LABEL_22:
                swift_arrayDestroy();
                MEMORY[0x192FE9A10](v26, -1, -1);
                MEMORY[0x192FE9A10](v25, -1, -1);
                swift_unknownObjectRelease();
                swift_release();

LABEL_24:
                unint64_t v13 = v9 & 0xC000000000000001;
                goto LABEL_25;
              }
LABEL_23:

              swift_release();
              swift_unknownObjectRelease_n();
              goto LABEL_24;
            }
            sub_191E448C4(v17, v18, a4, (uint64_t)a5, a6);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
LABEL_25:
          if (v10 == ++v12) {
            goto LABEL_28;
          }
        }
      }
      __break(1u);
      goto LABEL_44;
    }
  }
LABEL_28:
  swift_bridgeObjectRelease();
  unint64_t v29 = *v35;
  uint64_t v40 = MEMORY[0x1E4FBC860];
  if (!(v29 >> 62))
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v30) {
      goto LABEL_30;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x1E4FBC860];
LABEL_42:
    *uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    return sub_191E4A920(a5, (void (*)(void, void, void, void, void))sub_191DF7F54);
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t result = (void *)sub_191EE94B0();
  uint64_t v30 = (uint64_t)result;
  if (!result) {
    goto LABEL_41;
  }
LABEL_30:
  if (v30 >= 1)
  {
    for (uint64_t i = 0; i != v30; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0)
      {
        uint64_t v32 = MEMORY[0x192FE8380](i, v29);
      }
      else
      {
        uint64_t v32 = *(void *)(v29 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v33 = MEMORY[0x192FE9B40](v32 + 32);
      swift_unknownObjectRelease();
      if (v33)
      {
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = v40;
    goto LABEL_42;
  }
LABEL_44:
  __break(1u);
  return result;
}

void sub_191E45194(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = sub_191DF487C(1, *a1);
  if (qword_1E92F2948 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191EE7940();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E92F4790);
  unint64_t v5 = sub_191EE7920();
  os_log_type_t v6 = sub_191EE8CA0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v11 = a2;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    BYTE8(v12) = 0;
    char v9 = v3 & 1;
    *(void *)&long long v12 = v3 & 1;
    sub_191EE93A0();
    sub_191D76D74(*(uint64_t *)((char *)&v12 + 1), 0xE000000000000000, &v13);
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v5, v6, "successfully performed background fetch with result%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v8, -1, -1);
    uint64_t v10 = v7;
    a2 = v11;
    MEMORY[0x192FE9A10](v10, -1, -1);
  }
  else
  {

    char v9 = v3 & 1;
  }
  *a2 = v9;
}

void sub_191E45378(void *a1)
{
  id v2 = a1;
  sub_191D62D64(0, (unint64_t *)&qword_1EB50E0E0);
  if (!swift_dynamicCast()) {
    goto LABEL_4;
  }
  if (v18)
  {
    sub_191DAA880(v15, v17, v18);
LABEL_4:
    if (qword_1E92F2948 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_191EE7940();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E92F4790);
    id v4 = a1;
    id v5 = a1;
    os_log_type_t v6 = sub_191EE7920();
    os_log_type_t v7 = sub_191EE8C80();
    if (!os_log_type_enabled(v6, v7))
    {

      goto LABEL_10;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    char v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138543362;
    id v10 = a1;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    sub_191EE8EA0();
    *char v9 = v16;

    _os_log_impl(&dword_191D4D000, v6, v7, "background fetch failed with error: %{public}@", v8, 0xCu);
    sub_191DA5470();
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v9, -1, -1);
    uint64_t v11 = v8;
    goto LABEL_8;
  }
  sub_191DAA880(v15, v17, 0);
  if (qword_1E92F2948 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_191EE7940();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E92F4790);
  os_log_type_t v6 = sub_191EE7920();
  os_log_type_t v13 = sub_191EE8C80();
  if (os_log_type_enabled(v6, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_191D4D000, v6, v13, "background fetch timed out", v14, 2u);
    uint64_t v11 = v14;
LABEL_8:
    MEMORY[0x192FE9A10](v11, -1, -1);
  }
LABEL_10:
}

void sub_191E45620(uint64_t a1)
{
  sub_191E47800();
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v2 = qword_1EB50EC90;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v2 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EB50EC78;
  sub_191DBBB58();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_191E45708(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_191D74B24(0, &qword_1E92F4050);
    uint64_t v4 = sub_191EE8520();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_191E457AC(unint64_t a1, id a2, uint64_t a3, const char *a4, const char *a5, const char *a6)
{
  if (a2)
  {
    id v8 = a2;
    if (qword_1E92F2948 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_191EE7940();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E92F4790);
    id v10 = a2;
    id v11 = a2;
    oslog = sub_191EE7920();
    os_log_type_t v12 = sub_191EE8C80();
    if (os_log_type_enabled(oslog, v12))
    {
      os_log_type_t v13 = (uint8_t *)OUTLINED_FUNCTION_27();
      uint64_t v14 = (void *)OUTLINED_FUNCTION_54_0();
      *(_DWORD *)os_log_type_t v13 = 138543362;
      id v15 = a2;
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      sub_191EE8EA0();
      *uint64_t v14 = v28;

      _os_log_impl(&dword_191D4D000, oslog, v12, a4, v13, 0xCu);
      sub_191DA5470();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_1();
      OUTLINED_FUNCTION_0_1();

      return;
    }

    goto LABEL_24;
  }
  if (!a1) {
    goto LABEL_20;
  }
  if (a1 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v23 = sub_191EE94B0();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_9;
    }
LABEL_20:
    if (qword_1E92F2948 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_191EE7940();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E92F4790);
    oslog = sub_191EE7920();
    os_log_type_t v25 = sub_191EE8CA0();
    if (os_log_type_enabled(oslog, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_191D4D000, oslog, v25, a6, v26, 2u);
      OUTLINED_FUNCTION_0_1();
    }
LABEL_24:

    return;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_20;
  }
LABEL_9:
  if (qword_1E92F2948 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_191EE7940();
  __swift_project_value_buffer(v19, (uint64_t)qword_1E92F4790);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_191EE7920();
  os_log_type_t v21 = sub_191EE8CA0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_27();
    *(_DWORD *)uint64_t v22 = 134217984;
    if (a1 >> 62)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_191EE94B0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_191EE8EA0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v20, v21, a5, v22, 0xCu);
    OUTLINED_FUNCTION_0_1();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_191E45620(a1);
}

void sub_191E45BB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = a2 + 16;
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x192FE9B40](v16);
  if (v17)
  {
    unsigned __int8 v18 = (void *)v17;
    uint64_t v29 = a6;
    uint64_t v30 = a7;
    sub_191E10CA8(a3, (uint64_t)v31);
    sub_191E42E40((uint64_t)v31);
    *(void *)(swift_allocObject() + 16) = a1;
    uint64_t v19 = qword_1EB50EC90;
    id v20 = a1;
    if (v19 != -1) {
      swift_once();
    }
    id v21 = (id)qword_1EB50EC78;
    sub_191DBBA4C();
    swift_release();
    swift_release();

    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v20;
    uint64_t v23 = (void *)qword_1EB50EC78;
    id v24 = v20;
    id v25 = v23;
    sub_191D73E88((uint64_t)v25, (uint64_t)sub_191E4AEB8, v22);
    swift_release();
    swift_release();

    uint64_t v26 = (void *)swift_allocObject();
    _OWORD v26[2] = a2;
    v26[3] = a4;
    void v26[4] = a5;
    v26[5] = v29;
    v26[6] = v30;
    v26[7] = a8;
    uint64_t v27 = (void *)qword_1EB50EC78;
    swift_retain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    id v28 = v27;
    sub_191DACC34((uint64_t)v28, (uint64_t)sub_191E4AF14, (uint64_t)v26);

    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_191E45DF4(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v10 = sub_191EE7640();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x192FE9B40](a1 + 16);
  if (result)
  {
    id v15 = (void *)result;
    unint64_t v16 = a4;
    a5(result);
    sub_191E45F34(a2, a3, &v16, (uint64_t)v13);

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return result;
}

void sub_191E45F34(uint64_t a1, unint64_t a2, unint64_t *a3, uint64_t a4)
{
  v56[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_191EE7640();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v53 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)&v51 - v12;
  unint64_t v54 = *a3;
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_sharedScheduler);
  unint64_t v16 = (void *)sub_191EE80E0();
  objc_msgSend(v15, sel_cancelTaskRequestWithIdentifier_, v16);

  sub_191EE7570();
  sub_191E4B040(&qword_1E92F28F8, MEMORY[0x1E4F27928]);
  LOBYTE(v15) = sub_191EE80C0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v13, v8);
  if (v15)
  {
    uint64_t v18 = a1;
    if (qword_1E92F2948 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_191EE7940();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E92F4790);
    swift_bridgeObjectRetain_n();
    id v20 = sub_191EE7920();
    os_log_type_t v21 = sub_191EE8CA0();
    if (!os_log_type_enabled(v20, v21))
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    v56[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v55 = sub_191D76D74(v18, a2, (uint64_t *)v56);
    sub_191EE8EA0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191D4D000, v20, v21, "will not schedule task request for %{public}s in distant future", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v23, -1, -1);
    MEMORY[0x192FE9A10](v22, -1, -1);
  }
  else
  {
    sub_191D74B24(0, (unint64_t *)&unk_1E92F3FC8);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v52 = a1;
    id v24 = sub_191E47694();
    id v25 = (void *)sub_191EE75A0();
    objc_msgSend(v24, sel_setEarliestBeginDate_, v25);

    objc_msgSend(v24, sel_setRequiresNetworkConnectivity_, 1);
    objc_msgSend(v24, sel_setRequiresExternalPower_, (v54 >> 3) & 1);
    id v26 = objc_msgSend(v14, sel_sharedScheduler);
    v56[0] = 0;
    unsigned int v27 = objc_msgSend(v26, sel_submitTaskRequest_error_, v24, v56);

    if (v27)
    {
      uint64_t v28 = qword_1E92F2948;
      id v29 = v56[0];
      if (v28 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_191EE7940();
      __swift_project_value_buffer(v30, (uint64_t)qword_1E92F4790);
      uint64_t v31 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v53, a4, v8);
      swift_bridgeObjectRetain_n();
      id v20 = sub_191EE7920();
      os_log_type_t v32 = sub_191EE8CA0();
      if (os_log_type_enabled(v20, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        unint64_t v54 = swift_slowAlloc();
        v56[0] = (id)v54;
        *(_DWORD *)uint64_t v33 = 136446466;
        os_log_t v51 = v20;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        uint64_t v55 = sub_191D76D74(v52, a2, (uint64_t *)v56);
        sub_191EE8EA0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v33 + 12) = 2082;
        sub_191E4B040(&qword_1E92F3FC0, MEMORY[0x1E4F27928]);
        uint64_t v34 = sub_191EE9620();
        uint64_t v55 = sub_191D76D74(v34, v35, (uint64_t *)v56);
        sub_191EE8EA0();
        swift_bridgeObjectRelease();
        v17(v31, v8);
        os_log_t v36 = v51;
        _os_log_impl(&dword_191D4D000, v51, v32, "successfully scheduled task request for %{public}s at %{public}s", (uint8_t *)v33, 0x16u);
        unint64_t v37 = v54;
        swift_arrayDestroy();
        MEMORY[0x192FE9A10](v37, -1, -1);
        MEMORY[0x192FE9A10](v33, -1, -1);

        return;
      }
      swift_bridgeObjectRelease_n();

      v17(v31, v8);
    }
    else
    {
      id v38 = v56[0];
      uint64_t v39 = (void *)sub_191EE7300();

      swift_willThrow();
      if (qword_1E92F2948 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_191EE7940();
      __swift_project_value_buffer(v40, (uint64_t)qword_1E92F4790);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      id v41 = v39;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      id v42 = v39;
      id v20 = sub_191EE7920();
      os_log_type_t v43 = sub_191EE8C80();
      BOOL v44 = os_log_type_enabled(v20, v43);
      uint64_t v45 = v52;
      if (v44)
      {
        uint64_t v46 = swift_slowAlloc();
        uint64_t v47 = (void *)swift_slowAlloc();
        uint64_t v48 = (void *)swift_slowAlloc();
        v56[0] = v48;
        *(_DWORD *)uint64_t v46 = 136446466;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        uint64_t v55 = sub_191D76D74(v45, a2, (uint64_t *)v56);
        sub_191EE8EA0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v46 + 12) = 2114;
        id v49 = v39;
        uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v55 = v50;
        sub_191EE8EA0();
        *uint64_t v47 = v50;

        _os_log_impl(&dword_191D4D000, v20, v43, "failed to schedule task request for  %{public}s with error: %{public}@", (uint8_t *)v46, 0x16u);
        sub_191DA5470();
        swift_arrayDestroy();
        MEMORY[0x192FE9A10](v47, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x192FE9A10](v48, -1, -1);
        MEMORY[0x192FE9A10](v46, -1, -1);

        return;
      }

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_191E467E0(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void *sub_191E46848(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, unint64_t a4, void *a5, char *a6)
{
  uint64_t v12 = MEMORY[0x1E4FBC848] + 8;
  sub_191E4AFB0(0, (unint64_t *)&qword_1EB50C440, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for Promise);
  os_log_type_t v13 = (void *)swift_allocObject();
  uint64_t v17 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v14 = a5;
  uint64_t v15 = UnfairLock.init(options:)((int *)&v17);
  sub_191E4AFB0(0, &qword_1EB50C430, v12, (uint64_t (*)(void, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  void v13[2] = sub_191D81D48(v15);
  swift_retain_n();
  sub_191E469EC((void (*)(void))sub_191DD2D2C, v13, (uint64_t)sub_191E3141C, (uint64_t)v13, a1, a2, a3, a4, (uint64_t)v14, a6);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  return v13;
}

uint64_t sub_191E469EC(void (*a1)(void), void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char *a10)
{
  uint64_t v51 = a7;
  unint64_t v52 = a8;
  uint64_t v13 = sub_191EE7640();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = swift_allocObject();
  id v48 = a2;
  id v49 = a1;
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  uint64_t v21 = swift_retain();
  a5(v21);
  sub_191EE7570();
  sub_191E4B040(&qword_1E92F28F8, MEMORY[0x1E4F27928]);
  char v22 = sub_191EE80C0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v17, v13);
  if (v22)
  {
    uint64_t v24 = v51;
    swift_release();
    if (qword_1E92F2948 != -1) {
      swift_once();
    }
    uint64_t v47 = v19;
    uint64_t v25 = sub_191EE7940();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E92F4790);
    swift_bridgeObjectRetain_n();
    id v26 = sub_191EE7920();
    os_log_type_t v27 = sub_191EE8CA0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v50 = v23;
      uint64_t v30 = v29;
      aBlock[0] = v29;
      *(_DWORD *)uint64_t v28 = 136446210;
      unint64_t v31 = v52;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v53 = sub_191D76D74(v24, v31, aBlock);
      sub_191EE8EA0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191D4D000, v26, v27, "cancelling task request for %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      uint64_t v32 = v30;
      uint64_t v23 = v50;
      MEMORY[0x192FE9A10](v32, -1, -1);
      MEMORY[0x192FE9A10](v28, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v43 = objc_msgSend(self, sel_sharedScheduler);
    BOOL v44 = (void *)sub_191EE80E0();
    objc_msgSend(v43, sel_cancelTaskRequestWithIdentifier_, v44);

    v49();
    os_log_t v36 = v47;
  }
  else
  {
    uint64_t v47 = a10;
    uint64_t v50 = v23;
    id v48 = objc_msgSend(self, sel_sharedScheduler);
    uint64_t v33 = swift_allocObject();
    id v49 = (void (*)(void))(v14 + 8);
    unint64_t v34 = v52;
    uint64_t v35 = v33;
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    os_log_t v36 = v19;
    unint64_t v37 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    id v38 = (char *)swift_allocObject();
    *((void *)v38 + 2) = sub_191D742F8;
    *((void *)v38 + 3) = v20;
    *((void *)v38 + 4) = v51;
    *((void *)v38 + 5) = v34;
    uint64_t v39 = v47;
    *((void *)v38 + 6) = v35;
    *((void *)v38 + 7) = v39;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v38[v37], v17, v13);
    aBlock[4] = (uint64_t)sub_191E4A8A4;
    aBlock[5] = (uint64_t)v38;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_191E47610;
    aBlock[3] = (uint64_t)&block_descriptor_12;
    uint64_t v40 = _Block_copy(aBlock);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_release();
    id v41 = v48;
    objc_msgSend(v48, sel_getPendingTaskRequestsWithCompletionHandler_, v40);
    id v42 = v40;
    uint64_t v23 = v50;
    _Block_release(v42);
  }
  return ((uint64_t (*)(char *, uint64_t))v23)(v36, v13);
}

uint64_t sub_191E46F18(unint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, unint64_t a5, void (**a6)(char *, char *, uint64_t), void *a7, uint64_t a8)
{
  uint64_t v72 = a4;
  unint64_t v73 = a5;
  sub_191D85758(0, qword_1EB50DEE8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v60 - v15;
  uint64_t v17 = sub_191EE7640();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v70 = (char *)&v60 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v74 = a1;
  uint64_t v67 = v26;
  if (a1 >> 62)
  {
LABEL_31:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v33 = sub_191EE94B0();
    if (v33) {
      goto LABEL_3;
    }
  }
  else
  {
    os_log_type_t v27 = a6;
    uint64_t v28 = a3;
    uint64_t v29 = a2;
    uint64_t v30 = a7;
    uint64_t v31 = a8;
    uint64_t v32 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v33 = v32;
    a8 = v31;
    a7 = v30;
    a2 = v29;
    a3 = v28;
    a6 = v27;
    if (v33)
    {
LABEL_3:
      uint64_t v62 = a6;
      uint64_t v63 = a7;
      uint64_t v64 = a8;
      uint64_t v65 = a3;
      uint64_t v61 = v20;
      unint64_t v66 = a2;
      uint64_t v34 = v74;
      unint64_t v71 = v74 & 0xC000000000000001;
      a6 = (void (**)(char *, char *, uint64_t))(v67 + 32);
      unint64_t v68 = (void (**)(uint64_t, uint64_t))(v67 + 8);
      uint64_t v69 = v25;
      a3 = 4;
      while (1)
      {
        a8 = v33;
        if (v71) {
          id v35 = (id)MEMORY[0x192FE8380](a3 - 4, v34);
        }
        else {
          id v35 = *(id *)(v34 + 8 * a3);
        }
        a7 = v35;
        a2 = (uint64_t (*)(uint64_t))(a3 - 3);
        if (__OFADD__(a3 - 4, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        uint64_t v25 = (char *)v17;
        id v36 = objc_msgSend(v35, sel_identifier);
        uint64_t v20 = sub_191EE8110();
        uint64_t v38 = v37;

        if (v20 == v72 && v38 == v73)
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = (uint64_t)v25;
        }
        else
        {
          uint64_t v20 = sub_191EE9770();
          swift_bridgeObjectRelease();
          uint64_t v17 = (uint64_t)v25;
          if ((v20 & 1) == 0) {
            goto LABEL_19;
          }
        }
        id v40 = objc_msgSend(a7, sel_earliestBeginDate);
        if (!v40)
        {
          __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v17);
LABEL_21:

          sub_191E4AE10((uint64_t)v16, qword_1EB50DEE8, MEMORY[0x1E4F27928]);
          goto LABEL_22;
        }
        id v41 = v40;
        uint64_t v25 = v70;
        sub_191EE7600();

        id v42 = *a6;
        (*a6)(v16, v25, v17);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v17);
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1) {
          goto LABEL_21;
        }
        uint64_t v25 = v69;
        v42(v69, v16, v17);
        sub_191EE75D0();
        if (v43 < 86400.0)
        {
          swift_bridgeObjectRelease();
          if (qword_1E92F2948 != -1) {
            swift_once();
          }
          uint64_t v44 = sub_191EE7940();
          __swift_project_value_buffer(v44, (uint64_t)qword_1E92F4790);
          uint64_t v45 = v61;
          uint64_t v46 = v69;
          (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v61, v69, v17);
          unint64_t v47 = v73;
          swift_bridgeObjectRetain_n();
          id v48 = sub_191EE7920();
          os_log_type_t v49 = sub_191EE8CA0();
          if (os_log_type_enabled(v48, v49))
          {
            uint64_t v50 = swift_slowAlloc();
            uint64_t v74 = swift_slowAlloc();
            v76[0] = v74;
            *(_DWORD *)uint64_t v50 = 136446466;
            _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
            uint64_t v75 = sub_191D76D74(v72, v47, v76);
            sub_191EE8EA0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v50 + 12) = 2082;
            sub_191E4B040(&qword_1E92F3FC0, MEMORY[0x1E4F27928]);
            uint64_t v51 = sub_191EE9620();
            uint64_t v75 = sub_191D76D74(v51, v52, v76);
            sub_191EE8EA0();
            swift_bridgeObjectRelease();
            uint64_t v53 = *v68;
            (*v68)(v45, v17);
            _os_log_impl(&dword_191D4D000, v48, v49, "found existing task request for %{public}s, scheduledDate=%{public}s", (uint8_t *)v50, 0x16u);
            uint64_t v54 = v74;
            swift_arrayDestroy();
            MEMORY[0x192FE9A10](v54, -1, -1);
            MEMORY[0x192FE9A10](v50, -1, -1);

            uint64_t v55 = ((uint64_t (*)(char *, uint64_t))v53)(v69, v17);
          }
          else
          {

            uint64_t v56 = *v68;
            (*v68)(v45, v17);
            swift_bridgeObjectRelease_n();
            uint64_t v55 = ((uint64_t (*)(char *, uint64_t))v56)(v46, v17);
          }
          return v66(v55);
        }
        (*v68)((uint64_t)v25, v17);
LABEL_19:

LABEL_22:
        ++a3;
        uint64_t v33 = a8;
        uint64_t v34 = v74;
        if (a2 == (uint64_t (*)(uint64_t))a8)
        {
          swift_bridgeObjectRelease();
          a2 = v66;
          a7 = v63;
          a8 = v64;
          a6 = v62;
          goto LABEL_33;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_33:
  swift_beginAccess();
  uint64_t v58 = MEMORY[0x192FE9B40](a6 + 2);
  if (v58)
  {
    uint64_t v59 = (void *)v58;
    uint64_t v75 = (uint64_t)a7;
    sub_191E45F34(v72, v73, (unint64_t *)&v75, a8);
  }
  return a2(v58);
}

uint64_t sub_191E47610(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_191D74B24(0, (unint64_t *)&unk_1E92F3FB0);
  uint64_t v2 = sub_191EE8520();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_191E47694()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_191EE80E0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithIdentifier_, v1);

  return v2;
}

id sub_191E47708()
{
  uint64_t v1 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager);
  }
  else
  {
    id v4 = sub_191E4776C(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_191E4776C(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E600]), sel_init);
  objc_msgSend(v2, sel_setDelegate_, a1);
  objc_msgSend(v2, sel_setDesiredAccuracy_, *MEMORY[0x1E4F1E6E8]);
  objc_msgSend(v2, sel_setAllowsBackgroundLocationUpdates_, 1);
  objc_msgSend(v2, sel_setPausesLocationUpdatesAutomatically_, 0);
  return v2;
}

uint64_t sub_191E47800()
{
  uint64_t v1 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor;
  if (*(void *)&v0[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor];
  }
  else
  {
    uint64_t v2 = sub_191E47868(v0);
    *(void *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_191E47868(void *a1)
{
  sub_191D85758(0, (unint64_t *)&qword_1EB50E130, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v11 - v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  sub_191D85758(0, &qword_1E92F4008, MEMORY[0x1E4FBC9E8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  id v6 = a1;
  uint64_t v7 = sub_191E41608();
  uint64_t v8 = sub_191EE87D0();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = &unk_1E92F4000;
  v9[5] = v5;
  v9[6] = v7;
  swift_retain();
  sub_191D5ACF0((uint64_t)v4, (uint64_t)&unk_1E92F4018, (uint64_t)v9);
  swift_release();
  return v7;
}

uint64_t sub_191E479F8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_191EE78F0();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[4] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_191E47AB0;
  return MEMORY[0x1F41869D8](0xD000000000000019, 0x8000000191EF82D0);
}

uint64_t sub_191E47AB0()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_36_5();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 40) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_191E47B7C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (uint64_t *)v0[2];
  sub_191E47BF4(v1);
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_191E47BF4(uint64_t a1)
{
  sub_191D85758(0, (unint64_t *)&qword_1EB50E130, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v14 - v4;
  uint64_t v6 = sub_191EE87D0();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = 0;
  uint64_t v7[3] = 0;
  uint64_t v7[4] = a1;
  v7[5] = v1;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6);
  swift_retain();
  id v9 = v1;
  if (EnumTagSinglePayload == 1)
  {
    sub_191E4AE10((uint64_t)v5, (unint64_t *)&qword_1EB50E130, MEMORY[0x1E4FBCFE8]);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_191EE87C0();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_191EE8700();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  if (v11 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    void v14[2] = v10;
    void v14[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

size_t sub_191E47E24(uint64_t *a1, unint64_t a2)
{
  uint64_t v36 = sub_191EE7860();
  uint64_t v5 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191D85758(0, (unint64_t *)&qword_1EB50E130, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *a1;
  if (a2 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v12 = sub_191EE94B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (!v12)
  {
LABEL_13:
    uint64_t v27 = sub_191EE87D0();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v27);
    uint64_t v28 = (void *)swift_allocObject();
    void v28[2] = 0;
    v28[3] = 0;
    v28[4] = v13;
    v28[5] = v11;
    swift_retain();
    sub_191D5ACF0((uint64_t)v10, (uint64_t)&unk_1E92F3FE0, (uint64_t)v28);
    return swift_release();
  }
  uint64_t v37 = MEMORY[0x1E4FBC860];
  size_t result = sub_191DD3898(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v11;
    uint64_t v31 = v10;
    uint64_t v15 = 0;
    unint64_t v34 = a2 & 0xC000000000000001;
    uint64_t v35 = v12;
    uint64_t v13 = v37;
    uint64_t v32 = v2;
    uint64_t v33 = v5 + 32;
    unint64_t v16 = a2;
    do
    {
      if (v34) {
        id v17 = (id)MEMORY[0x192FE8380](v15, a2);
      }
      else {
        id v17 = *(id *)(a2 + 8 * v15 + 32);
      }
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v17, sel_location);
      objc_msgSend(v19, sel_latitude);
      CLLocationDegrees v21 = v20;

      id v22 = objc_msgSend(v18, sel_location);
      objc_msgSend(v22, sel_longitude);
      CLLocationDegrees v24 = v23;

      CLLocationCoordinate2DMake(v21, v24);
      sub_191EE7850();

      uint64_t v37 = v13;
      unint64_t v26 = *(void *)(v13 + 16);
      unint64_t v25 = *(void *)(v13 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_191DD3898(v25 > 1, v26 + 1, 1);
        uint64_t v13 = v37;
      }
      ++v15;
      *(void *)(v13 + 16) = v26 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v26, v7, v36);
      a2 = v16;
    }
    while (v35 != v15);
    uint64_t v10 = v31;
    uint64_t v11 = v30;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_191E48188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return MEMORY[0x1F4188298](sub_191E481A8, 0, 0);
}

uint64_t sub_191E481A8()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 72) = v2;
  if (v2)
  {
    uint64_t v3 = sub_191EE7860();
    *(void *)(v0 + 80) = v3;
    OUTLINED_FUNCTION_0();
    uint64_t v5 = v4;
    *(void *)(v0 + 88) = v4;
    int v6 = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 112) = v6;
    *(void *)(v0 + 96) = *(void *)(v7 + 72);
    *(void *)(v0 + 104) = 0;
    uint64_t v8 = v1 + ((v6 + 32) & ~(unint64_t)v6);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    *(void *)(v0 + 40) = v3;
    *(void *)(v0 + 48) = sub_191E4B040(&qword_1E92F3FE8, MEMORY[0x1E4FBC9C8]);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_0, v8, v3);
    sub_191EE78F0();
    sub_191E4B040(&qword_1E92F3FF0, MEMORY[0x1E4FBC9E8]);
    uint64_t v11 = sub_191EE8700();
    return MEMORY[0x1F4188298](sub_191E48364, v11, v10);
  }
  else
  {
    OUTLINED_FUNCTION_8_1();
    return v12();
  }
}

uint64_t sub_191E48364()
{
  OUTLINED_FUNCTION_3();
  sub_191EE7870();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_191E483EC()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v1 = *(void *)(v0 + 104) + 1;
  if (v1 == *(void *)(v0 + 72))
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_1();
    return v2();
  }
  else
  {
    *(void *)(v0 + 104) = v1;
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 80);
    unint64_t v6 = *(void *)(v0 + 56)
       + ((*(unsigned __int8 *)(v0 + 112) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 112))
       + *(void *)(v0 + 96) * v1;
    *(void *)(v0 + 40) = v5;
    *(void *)(v0 + 48) = sub_191E4B040(&qword_1E92F3FE8, MEMORY[0x1E4FBC9C8]);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v6, v5);
    sub_191EE78F0();
    sub_191E4B040(&qword_1E92F3FF0, MEMORY[0x1E4FBC9E8]);
    uint64_t v9 = sub_191EE8700();
    return MEMORY[0x1F4188298](sub_191E48364, v9, v8);
  }
}

uint64_t sub_191E48580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  uint64_t v6 = sub_191EE78A0();
  v5[17] = v6;
  v5[18] = *(void *)(v6 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  sub_191D85758(0, &qword_1E92F4040, MEMORY[0x1E4FBC9D0], MEMORY[0x1E4FBB718]);
  v5[24] = swift_task_alloc();
  uint64_t v7 = sub_191EE78D0();
  v5[25] = v7;
  v5[26] = *(void *)(v7 - 8);
  v5[27] = swift_task_alloc();
  uint64_t v8 = sub_191EE78C0();
  v5[28] = v8;
  v5[29] = *(void *)(v8 - 8);
  v5[30] = swift_task_alloc();
  sub_191EE78F0();
  sub_191E4B040(&qword_1E92F3FF0, MEMORY[0x1E4FBC9E8]);
  uint64_t v10 = sub_191EE8700();
  return MEMORY[0x1F4188298](sub_191E487E0, v10, v9);
}

uint64_t sub_191E487E0()
{
  OUTLINED_FUNCTION_3();
  sub_191EE78E0();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v0, v1, v2);
}

uint64_t sub_191E48844()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  sub_191EE78B0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_191E4B040(&qword_1E92F4048, MEMORY[0x1E4FBC9D8]);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[31] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_191E48940;
  uint64_t v5 = OUTLINED_FUNCTION_26_10();
  return MEMORY[0x1F4187C78](v5, v6, v7);
}

uint64_t sub_191E48940()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_36_5();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v5 = v4;
  *(void *)(v6 + 256) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_191E48A18()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 136);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 144) + 32))(*(void *)(v0 + 184), v1, v2);
    if (sub_191EE7890() == 2)
    {
      if (qword_1E92F2948 != -1) {
        swift_once();
      }
      uint64_t v5 = *(void *)(v0 + 144);
      uint64_t v6 = sub_191EE7940();
      __swift_project_value_buffer(v6, (uint64_t)qword_1E92F4790);
      uint64_t v7 = *(void (**)(void))(v5 + 16);
      OUTLINED_FUNCTION_6_25();
      v7();
      OUTLINED_FUNCTION_6_25();
      v7();
      uint64_t v8 = sub_191EE7920();
      os_log_type_t v9 = sub_191EE8CA0();
      BOOL v10 = os_log_type_enabled(v8, v9);
      uint64_t v11 = *(void *)(v0 + 152);
      uint64_t v12 = *(void *)(v0 + 136);
      uint64_t v13 = (void (**)(void))(*(void *)(v0 + 144) + 8);
      if (v10)
      {
        uint64_t v14 = swift_slowAlloc();
        *(void *)(v0 + 112) = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136446466;
        uint64_t v15 = sub_191EE7880();
        *(void *)(v14 + 4) = sub_191D76D74(v15, v16, (uint64_t *)(v0 + 112));
        swift_bridgeObjectRelease();
        id v17 = *v13;
        OUTLINED_FUNCTION_28_9();
        v17();
        *(_WORD *)(v14 + 12) = 2082;
        sub_191EE7890();
        OUTLINED_FUNCTION_2_53();
        uint64_t v25 = v24 | 0x6673697461730000;
        if (v26) {
          unint64_t v19 = 0xEB00000000646569;
        }
        else {
          uint64_t v25 = 0x6E776F6E6B6E55;
        }
        if (v18 == 3) {
          unint64_t v19 = v23;
        }
        else {
          uint64_t v22 = v25;
        }
        BOOL v26 = v18 == 1;
        if (v18 == 1) {
          uint64_t v27 = v20;
        }
        else {
          uint64_t v27 = v22;
        }
        if (v26) {
          unint64_t v28 = v21;
        }
        else {
          unint64_t v28 = v19;
        }
        *(void *)(v14 + 14) = sub_191D76D74(v27, v28, (uint64_t *)(v0 + 112));
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_28_9();
        v17();
        _os_log_impl(&dword_191D4D000, v8, v9, "processing region event, id=%{public}s, state=%{public}s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0_1();
        OUTLINED_FUNCTION_0_1();
      }
      else
      {
        id v17 = *v13;
        OUTLINED_FUNCTION_28_9();
        v17();
        ((void (*)(uint64_t, uint64_t))v17)(v11, v12);
      }

      sub_191EE7880();
      char v50 = OUTLINED_FUNCTION_31_8();
      swift_bridgeObjectRelease();
      if (v50)
      {
        *(_OWORD *)(v0 + 56) = xmmword_191EED470;
        *(void *)(v0 + 80) = 0;
        *(void *)(v0 + 88) = 0;
        *(void *)(v0 + 72) = 0;
        sub_191E42E40(v0 + 56);
        swift_release();
      }
      sub_191EE7880();
      char v51 = OUTLINED_FUNCTION_31_8();
      swift_bridgeObjectRelease();
      uint64_t v52 = *(void *)(v0 + 184);
      uint64_t v53 = *(void *)(v0 + 136);
      if (v51)
      {
        *(_OWORD *)(v0 + 16) = xmmword_191EF0ED0;
        *(void *)(v0 + 40) = 0;
        *(void *)(v0 + 48) = 0;
        *(void *)(v0 + 32) = 0;
        sub_191E42E40(v0 + 16);
        swift_release();
        ((void (*)(uint64_t, uint64_t))v17)(v52, v53);
      }
      else
      {
        ((void (*)(void, void))v17)(*(void *)(v0 + 184), *(void *)(v0 + 136));
      }
    }
    else
    {
      if (qword_1E92F2948 != -1) {
        swift_once();
      }
      uint64_t v29 = *(void *)(v0 + 144);
      uint64_t v30 = sub_191EE7940();
      __swift_project_value_buffer(v30, (uint64_t)qword_1E92F4790);
      uint64_t v31 = *(void (**)(void))(v29 + 16);
      OUTLINED_FUNCTION_6_25();
      v31();
      OUTLINED_FUNCTION_6_25();
      v31();
      uint64_t v32 = sub_191EE7920();
      os_log_type_t v33 = sub_191EE8CA0();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = *(void *)(v0 + 144);
        uint64_t v35 = swift_slowAlloc();
        *(void *)(v0 + 104) = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 136446466;
        uint64_t v36 = sub_191EE7880();
        *(void *)(v35 + 4) = sub_191D76D74(v36, v37, (uint64_t *)(v0 + 104));
        swift_bridgeObjectRelease();
        uint64_t v38 = *(void (**)(void))(v34 + 8);
        OUTLINED_FUNCTION_18_12();
        v38();
        *(_WORD *)(v35 + 12) = 2082;
        sub_191EE7890();
        OUTLINED_FUNCTION_2_53();
        uint64_t v46 = v45 | 0x6673697461730000;
        if (v26) {
          unint64_t v40 = 0xEB00000000646569;
        }
        else {
          uint64_t v46 = 0x6E776F6E6B6E55;
        }
        if (v39 == 3) {
          unint64_t v40 = v44;
        }
        else {
          uint64_t v43 = v46;
        }
        BOOL v47 = v39 == 1;
        if (v39 == 1) {
          uint64_t v48 = v41;
        }
        else {
          uint64_t v48 = v43;
        }
        if (v47) {
          unint64_t v49 = v42;
        }
        else {
          unint64_t v49 = v40;
        }
        *(void *)(v35 + 14) = sub_191D76D74(v48, v49, (uint64_t *)(v0 + 104));
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_18_12();
        v38();
        _os_log_impl(&dword_191D4D000, v32, v33, "ignoring region event, id=%{public}s, state=%{public}s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0_1();
        OUTLINED_FUNCTION_0_1();

        OUTLINED_FUNCTION_18_12();
        v38();
      }
      else
      {
        uint64_t v54 = *(void *)(v0 + 144);

        uint64_t v55 = *(void (**)(void))(v54 + 8);
        OUTLINED_FUNCTION_18_12();
        v55();
        OUTLINED_FUNCTION_18_12();
        v55();
        OUTLINED_FUNCTION_18_12();
        v55();
      }
    }
    sub_191E4B040(&qword_1E92F4048, MEMORY[0x1E4FBC9D8]);
    uint64_t v56 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v56;
    void *v56 = v0;
    v56[1] = sub_191E48940;
    uint64_t v57 = OUTLINED_FUNCTION_26_10();
    return MEMORY[0x1F4187C78](v57, v58, v59);
  }
}

uint64_t sub_191E49120()
{
  OUTLINED_FUNCTION_3();
  *(void *)(v0 + 96) = *(void *)(v0 + 256);
  sub_191D62D64(0, (unint64_t *)&qword_1EB50E0E0);
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_191E491B4()
{
  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v1();
}

uint64_t CLMonitoringState.readableString.getter(uint64_t a1)
{
  uint64_t v1 = 0x6E776F6E6B6E55;
  if (a1 == 2) {
    uint64_t v1 = 0x6673697461736E55;
  }
  if (a1 == 3) {
    uint64_t v1 = 0x6F74696E6F6D6E55;
  }
  if (a1 == 1) {
    return 0x6569667369746153;
  }
  else {
    return v1;
  }
}

id BackgroundFetchManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall BackgroundFetchManager.locationManager(_:didStartMonitoringFor:)(CLLocationManager _, CLRegion didStartMonitoringFor)
{
  id internal = _._internal;
  id v3 = objc_msgSend(_._internal, sel_identifier, didStartMonitoringFor.super.isa);
  sub_191EE8110();

  OUTLINED_FUNCTION_43_2();
  LOBYTE(v3) = sub_191EE8300();
  swift_bridgeObjectRelease();
  if (v3)
  {
    if (qword_1E92F2948 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_191EE7940();
    __swift_project_value_buffer(v4, (uint64_t)qword_1E92F4790);
    uint64_t v5 = sub_191EE7920();
    os_log_type_t v6 = sub_191EE8CA0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_191D4D000, v5, v6, "successfully setup monitoring for Home region", v7, 2u);
      OUTLINED_FUNCTION_0_1();
    }
  }
  id v8 = objc_msgSend(internal, sel_identifier);
  sub_191EE8110();

  OUTLINED_FUNCTION_43_2();
  LOBYTE(v8) = sub_191EE8300();
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (qword_1E92F2948 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_191EE7940();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E92F4790);
    oslog = sub_191EE7920();
    os_log_type_t v10 = sub_191EE8CA0();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_191D4D000, oslog, v10, "successfully setup monitoring for Work region", v11, 2u);
      OUTLINED_FUNCTION_0_1();
    }
  }
}

void BackgroundFetchManager.locationManager(_:monitoringDidFailFor:withError:)(uint64_t a1, void *a2, void *a3)
{
  if (a2)
  {
    os_log_type_t v6 = v3;
    id v7 = a2;
    id v8 = objc_msgSend(v7, sel_identifier);
    sub_191EE8110();

    LOBYTE(v8) = OUTLINED_FUNCTION_16_12();
    swift_bridgeObjectRelease();
    unint64_t v9 = 0x1E92F2000uLL;
    os_log_type_t v10 = "";
    if (v8)
    {
      if (qword_1E92F2948 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_191EE7940();
      __swift_project_value_buffer(v11, (uint64_t)qword_1E92F4790);
      id v12 = a3;
      id v13 = a3;
      uint64_t v14 = sub_191EE7920();
      os_log_type_t v15 = sub_191EE8C80();
      if (os_log_type_enabled(v14, v15))
      {
        OUTLINED_FUNCTION_27();
        os_log_t oslog = v6;
        unint64_t v16 = (void *)OUTLINED_FUNCTION_54_0();
        OUTLINED_FUNCTION_45_2(5.8381e-34);
        _swift_stdlib_bridgeErrorToNSError();
        OUTLINED_FUNCTION_17_12();
        unint64_t v9 = 0x1E92F2000;
        os_log_type_t v10 = "ReferenceService" + 16;
        sub_191EE8EA0();
        *unint64_t v16 = v4;

        OUTLINED_FUNCTION_44_5(&dword_191D4D000, v17, v18, "failed to setup monitoring for Home region with error: %{public}@");
        sub_191DA5470();
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0_1();
        OUTLINED_FUNCTION_0_1();
      }
      else
      {
      }
      OUTLINED_FUNCTION_30_6((__n128)xmmword_191EED470, v26, v27, v28, v29, v30, v31, v32, v33, v53, (uint64_t)oslog, v34, v56, v58, v59);
      swift_release();
    }
    id v35 = objc_msgSend(v7, sel_identifier);
    sub_191EE8110();

    LOBYTE(v35) = OUTLINED_FUNCTION_16_12();
    swift_bridgeObjectRelease();
    if (v35)
    {
      if (*(void *)(v9 + 2376) != -1) {
        swift_once();
      }
      uint64_t v36 = sub_191EE7940();
      __swift_project_value_buffer(v36, (uint64_t)qword_1E92F4790);
      id v37 = a3;
      id v38 = a3;
      uint64_t v39 = sub_191EE7920();
      os_log_type_t v40 = sub_191EE8C80();
      if (os_log_type_enabled(v39, v40))
      {
        OUTLINED_FUNCTION_27();
        uint64_t v41 = (void *)OUTLINED_FUNCTION_54_0();
        OUTLINED_FUNCTION_45_2(COERCE_FLOAT(*((void *)v10 + 246)));
        _swift_stdlib_bridgeErrorToNSError();
        OUTLINED_FUNCTION_17_12();
        sub_191EE8EA0();
        *uint64_t v41 = v4;

        OUTLINED_FUNCTION_44_5(&dword_191D4D000, v42, v43, "failed to setup monitoring for Work region with error: %{public}@");
        sub_191DA5470();
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0_1();
        OUTLINED_FUNCTION_0_1();
      }
      else
      {
      }
      OUTLINED_FUNCTION_30_6((__n128)xmmword_191EF0ED0, v44, v45, v46, v47, v48, v49, v50, v51, v53, (uint64_t)oslog, v52, v56, v58, v59);

      swift_release();
    }
    else
    {
    }
  }
  else
  {
    if (qword_1E92F2948 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_191EE7940();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E92F4790);
    id v20 = a3;
    id v21 = a3;
    osloga = sub_191EE7920();
    os_log_type_t v22 = sub_191EE8C80();
    if (os_log_type_enabled(osloga, v22))
    {
      unint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_27();
      unsigned __int16 v24 = (void *)OUTLINED_FUNCTION_54_0();
      *(_DWORD *)unint64_t v23 = 138543362;
      id v25 = a3;
      uint64_t v57 = _swift_stdlib_bridgeErrorToNSError();
      sub_191EE8EA0();
      void *v24 = v57;

      _os_log_impl(&dword_191D4D000, osloga, v22, "failed to setup monitoring for unknown region with error: %{public}@", v23, 0xCu);
      sub_191DA5470();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_1();
      OUTLINED_FUNCTION_0_1();
    }
    else
    {
    }
  }
}

uint64_t sub_191E49C14()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_191E49C3C()
{
  uint64_t v0 = sub_191E49C14();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

void sub_191E49C70(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_191E10CA8(a1, (uint64_t)v3);
  sub_191D5B620(a2);
}

uint64_t sub_191E49CB0(uint64_t a1)
{
  sub_191E10CA8(a1, (uint64_t)v2);
  return sub_191E429C4((uint64_t)v2);
}

uint64_t sub_191E49CEC()
{
  sub_191DA5CC4(v0 + 16);
  sub_191DA5CC4(v0 + 32);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_191E49D1C()
{
  uint64_t v0 = sub_191E49CEC();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

void *sub_191E49D4C()
{
  uint64_t v1 = v0;
  v0[3] = 0;
  v0[2] = 0;
  objc_super v2 = v0 + 2;
  *(void *)id v7 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  v0[4] = UnfairLock.init(options:)(v7);
  *(void *)id v7 = 0;
  swift_allocObject();
  uint64_t v3 = UnfairLock.init(options:)(v7);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  sub_191E4AFB0(0, &qword_1EB50B4E0, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for Promise);
  uint64_t v4 = swift_allocObject();
  sub_191E4AFB0(0, &qword_1EB50B5C8, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(void *)(v4 + 16) = sub_191D81D48(v3);
  sub_191E4AFB0(0, (unint64_t *)&unk_1E92F4060, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(void, uint64_t))type metadata accessor for PromiseWeakResolver);
  swift_allocObject();
  swift_unownedRetain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_191DBF374();
  swift_unownedRetainStrong();
  v1[3] = v5;
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *objc_super v2 = v4;
  swift_release();
  return v1;
}

uint64_t type metadata accessor for DisposableWorker()
{
  return self;
}

void sub_191E49F54()
{
}

uint64_t sub_191E49F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a2 + 24) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 24) = a4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return a2;
}

uint64_t type metadata accessor for BlockBasedBackgroundFetchWorker()
{
  return self;
}

unint64_t sub_191E4A00C()
{
  unint64_t result = qword_1E92F3F10;
  if (!qword_1E92F3F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3F10);
  }
  return result;
}

unint64_t sub_191E4A05C()
{
  unint64_t result = qword_1E92F3F18;
  if (!qword_1E92F3F18)
  {
    sub_191E4AFB0(255, (unint64_t *)&unk_1E92F3F20, (uint64_t)&type metadata for BackgroundFetchTrigger, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3F18);
  }
  return result;
}

unint64_t sub_191E4A0D4()
{
  unint64_t result = qword_1E92F2928;
  if (!qword_1E92F2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F2928);
  }
  return result;
}

unint64_t sub_191E4A124()
{
  unint64_t result = qword_1E92F3F30;
  if (!qword_1E92F3F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3F30);
  }
  return result;
}

unint64_t sub_191E4A174()
{
  unint64_t result = qword_1E92F3F38;
  if (!qword_1E92F3F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F3F38);
  }
  return result;
}

unint64_t sub_191E4A1C4()
{
  unint64_t result = qword_1E92F2A00;
  if (!qword_1E92F2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F2A00);
  }
  return result;
}

unint64_t sub_191E4A214()
{
  unint64_t result = qword_1E92F2A08;
  if (!qword_1E92F2A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F2A08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BackgroundFetchResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E4A32CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for BackgroundFetchResult()
{
}

unint64_t destroy for BackgroundFetchTrigger(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for BackgroundFetchTrigger(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
  }
  return a1;
}

void *assignWithCopy for BackgroundFetchTrigger(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v6 = a2[4];
      a1[3] = a2[3];
      a1[4] = v6;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_retain();
      return a1;
    }
LABEL_7:
    long long v7 = *(_OWORD *)a2;
    long long v8 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v7;
    *((_OWORD *)a1 + 1) = v8;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BackgroundFetchTrigger(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_5:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundFetchTrigger(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BackgroundFetchTrigger(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

double sub_191E4A64C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for BackgroundFetchTrigger()
{
}

void type metadata accessor for BackgroundFetchConditions()
{
}

uint64_t dispatch thunk of BackgroundFetchWorker.backgroundFetchTriggers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BackgroundFetchWorker.backgroundFetchPreconditions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BackgroundFetchWorker.performBackgroundFetch()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BackgroundFetchWorker.performBackgroundFetch(trigger:conditions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t type metadata accessor for BackgroundFetchManager()
{
  return self;
}

uint64_t method lookup function for BackgroundFetchManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BackgroundFetchManager);
}

uint64_t dispatch thunk of BackgroundFetchManager.__allocating_init(journal:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_191E4A730()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void *sub_191E4A778()
{
  return sub_191E46848(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(char **)(v0 + 56));
}

uint64_t sub_191E4A788()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191E4A7C0()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = OUTLINED_FUNCTION_12_2();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_191E4A7F0()
{
  uint64_t v1 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 64) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return MEMORY[0x1F4186498](v0, v8, v9);
}

uint64_t sub_191E4A8A4(unint64_t a1)
{
  uint64_t v3 = *(void *)(sub_191EE7640() - 8);
  uint64_t v4 = (uint64_t (*)(uint64_t))v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = v1[5];
  uint64_t v8 = (void (**)(char *, char *, uint64_t))v1[6];
  uint64_t v9 = (void *)v1[7];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_191E46F18(a1, v4, v5, v6, v7, v8, v9, v10);
}

void *sub_191E4A920(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_191E4A95C()
{
  swift_release();
  if (*(void *)(v0 + 32) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_191E4A9BC(void *a1)
{
  sub_191E45BB0(a1, v1[2], (uint64_t)(v1 + 3), v1[8], v1[9], v1[10], v1[11], v1[12]);
}

uint64_t sub_191E4A9D4()
{
  uint64_t v1 = OUTLINED_FUNCTION_12_2();

  return MEMORY[0x1F4186498](v1, v2, v3);
}

void sub_191E4AA04(unint64_t a1, void *a2)
{
  sub_191E457AC(a1, a2, *(void *)(v2 + 16), "failed to fetch Work location with error: %{public}@", "found %ld Work locations to monitor", "found no Work locations to monitor");
}

void sub_191E4AA38(unint64_t a1, void *a2)
{
  sub_191E457AC(a1, a2, *(void *)(v2 + 16), "failed to fetch Home location with error: %{public}@", "found %ld Home locations to monitor", "found no Home locations to monitor");
}

uint64_t sub_191E4AA6C()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_12_2();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

size_t sub_191E4AA9C(uint64_t *a1)
{
  return sub_191E47E24(a1, *(void *)(v1 + 16));
}

uint64_t sub_191E4AAB8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_53();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_191E4AAF8()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191D88378;
  uint64_t v3 = OUTLINED_FUNCTION_20_12();
  return sub_191E48188(v3, v4, v5, v6, v7);
}

uint64_t sub_191E4AB98()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_11_2(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_191D88378;
  return sub_191E479F8(v2, v3);
}

uint64_t sub_191E4AC2C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_191E4AC74()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = (int *)v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_11_2(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_191D88064;
  return sub_191E4122C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_191E4AD30()
{
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v1 = OUTLINED_FUNCTION_53();

  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_191E4AD70()
{
  OUTLINED_FUNCTION_15_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_191D88064;
  uint64_t v3 = OUTLINED_FUNCTION_20_12();
  return sub_191E48580(v3, v4, v5, v6, v7);
}

uint64_t sub_191E4AE10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_191D85758(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id sub_191E4AE80()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setTaskCompletedWithSuccess_, 1);
}

id sub_191E4AEB8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setTaskCompletedWithSuccess_, 0);
}

uint64_t sub_191E4AECC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_191E4AF14()
{
  return sub_191E45DF4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(uint64_t))(v0 + 48));
}

void sub_191E4AF24()
{
  if (!qword_1EB50B5D8)
  {
    sub_191E4AFB0(255, &qword_1EB50B5F0, (uint64_t)&type metadata for BackgroundFetchResult, MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for Promise();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50B5D8);
    }
  }
}

void sub_191E4AFA8()
{
}

void sub_191E4AFB0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_191E4AFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191E41CDC(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

uint64_t sub_191E4B008()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_53();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_191E4B040(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of URLRequestProcessor.process(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_191E4B0C8(uint64_t *a1, void (*a2)(void *))
{
  uint64_t v3 = v2;
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = *(void **)(v2 + 48);
  if (v8) {
    objc_msgSend(*(id *)(v2 + 48), sel_lock);
  }
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    uint64_t v12 = 0;
    if (!v8) {
      return v12;
    }
LABEL_9:
    objc_msgSend(v8, sel_unlock, v15, v16, v17, v18);
    return v12;
  }
  if (!swift_weakLoadStrong())
  {
    swift_release();
    goto LABEL_8;
  }
  uint64_t v9 = sub_191D68FF8(a2);
  uint64_t v10 = v9;
  uint64_t v16 = v6;
  uint64_t v17 = v5;
  uint64_t v15 = v7;
  uint64_t v18 = v7;
  if (v9)
  {
    uint64_t v11 = v9;
  }
  else
  {
    uint64_t v11 = *(void *)(v2 + 40);
    swift_retain();
  }
  swift_retain();
  uint64_t v12 = sub_191EBD788(&v16, v2, v11);
  swift_release();
  if (v12)
  {
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v16 = v6;
    uint64_t v17 = v5;
    uint64_t v18 = v15;
    if (!v10)
    {
      uint64_t v14 = *(void *)(v3 + 40);
      swift_retain();
      uint64_t v10 = v14;
    }
    swift_retain();
    uint64_t v12 = sub_191EBD788(&v16, v3, v10);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  if (v8) {
    goto LABEL_9;
  }
  return v12;
}

uint64_t ProxyResolver.resolve<A>(_:name:with:)()
{
  OUTLINED_FUNCTION_7_23();
  uint64_t v4 = toKey<A>(type:name:)(v0, v1, v2, v3, &v16);
  OUTLINED_FUNCTION_0_38(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);

  return swift_bridgeObjectRelease();
}

{
  long long v1;
  uint64_t v2;
  long long v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_23();
  toKey<A>(type:name:)();
  uint64_t v1 = v3;
  uint64_t v2 = v4;
  OUTLINED_FUNCTION_3_34((uint64_t *)&v1, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  return v5;
}

id ProxyResolver.bridgedResolver.getter()
{
  uint64_t v1 = (objc_class *)type metadata accessor for BridgedResolver();
  uint64_t v2 = (char *)objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR____TtC13TeaFoundation15BridgedResolver_resolver] = v0;
  v4.receiver = v2;
  v4.super_class = v1;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_191E4B410()
{
  return ProxyResolver.resolve<A>(_:with:)();
}

uint64_t sub_191E4B434()
{
  return ProxyResolver.resolve<A>(_:name:with:)();
}

uint64_t sub_191E4B458()
{
  return ProxyResolver.resolve<A>(_:name:with:)();
}

id sub_191E4B47C()
{
  return ProxyResolver.bridgedResolver.getter();
}

uint64_t method lookup function for ProxyResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProxyResolver);
}

uint64_t Accessor.value.getter()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t Accessor.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t Accessor.init(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t Accessor.map<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  type metadata accessor for Accessor();
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a3;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = v4;
  uint64_t v9 = Accessor.__allocating_init(_:)((uint64_t)sub_191E4B720, (uint64_t)v8);
  swift_retain();
  swift_retain();
  return v9;
}

uint64_t type metadata accessor for Accessor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E4B5E4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)a3 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t))(v9 + 16))(v6);
  a1(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_191E4B6E0()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191E4B720()
{
  return sub_191E4B5E4(*(void (**)(char *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t Accessor.deinit()
{
  swift_release();
  return v0;
}

uint64_t Accessor.__deallocating_deinit()
{
  Accessor.deinit();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t method lookup function for Accessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Accessor);
}

uint64_t dispatch thunk of Accessor.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_191E4B7AC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *(void *)(type metadata accessor for ManualClock.WakeUp() - 8);
  uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v10 = *(void *)(v8 + 72);
  while (1)
  {
    char v11 = a1(v9);
    if (v3 || (v11 & 1) != 0) {
      break;
    }
    ++v7;
    v9 += v10;
    if (v4 == v7) {
      return 0;
    }
  }
  return v7;
}

uint64_t ManualClock.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = _s13TeaFoundation11ManualClockV17minimumResolutions8DurationVvg_0();
  uint64_t v4 = v3;
  sub_191E4CFCC();
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 56) = 0;
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v4;
  uint64_t v6 = MEMORY[0x1E4FBC870];
  *(void *)(result + 32) = MEMORY[0x1E4FBC860];
  *(void *)(result + 40) = v6;
  *(void *)(result + 48) = v6;
  *a1 = result;
  return result;
}

uint64_t ManualClock.advance(by:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ManualClock.WakeUp();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *v2;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  char v11 = v10 + 4;
  uint64_t v12 = v10 + 14;
  os_unfair_lock_lock(v10 + 14);
  sub_191E4D074(v11, &v20);
  os_unfair_lock_unlock(v12);
  sub_191E4BEA0(&v20);
  uint64_t v13 = *(void *)(v20 + 16);
  if (v13)
  {
    uint64_t v14 = v20 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v15 = *(void *)(v6 + 72);
    do
    {
      sub_191E4D090(v14, (uint64_t)v9);
      sub_191E4D0F4((uint64_t)v9);
      swift_continuation_throwingResume();
      v14 += v15;
      --v13;
    }
    while (v13);
  }
  return swift_bridgeObjectRelease();
}

void sub_191E4BA48(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v35 = a4;
  sub_191E541E4(0, &qword_1E92F40E8, (uint64_t (*)(uint64_t))type metadata accessor for ManualClock.WakeUp, MEMORY[0x1E4FBBB08]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v40 = (uint64_t)&v34 - v8;
  uint64_t v41 = type metadata accessor for ManualClock.WakeUp();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  id v37 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = MEMORY[0x192FE8CE0](*a1, a1[1], a2, a3);
  a1[1] = v10;
  uint64_t v11 = *(void *)(a1[2] + 16);
  if (v11)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v36 = a1;
    uint64_t v13 = (uint64_t)v37;
    while (1)
    {
      uint64_t v14 = a1[2];
      if (v11 > *(void *)(v14 + 16)) {
        break;
      }
      uint64_t v15 = v11 - 1;
      unint64_t v16 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      uint64_t v17 = *(void *)(v39 + 72);
      uint64_t v18 = v17 * (v11 - 1);
      sub_191E4D090(v14 + v16 + v18, v13);
      if ((sub_191EE9B20() & 1) == 0)
      {
        sub_191E4D090(v13, v40);
        unint64_t v19 = *(void *)(v12 + 16);
        if (!swift_isUniquelyReferenced_nonNull_native() || v19 >= *(void *)(v12 + 24) >> 1)
        {
          sub_191DCC544();
          uint64_t v12 = v20;
        }
        unint64_t v21 = v12 + v16;
        swift_arrayDestroy();
        if (v17 < 0 || v17 >= *(void *)(v12 + 16) * v17)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v17)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        ++*(void *)(v12 + 16);
        if (v17 >= 1)
        {
          char v22 = 0;
          uint64_t v23 = -v17;
          uint64_t v24 = v12 + v16;
          while ((v22 & 1) == 0)
          {
            uint64_t v38 = v15;
            unint64_t v25 = v16;
            uint64_t v26 = v12;
            uint64_t v27 = v18;
            uint64_t v28 = v23;
            sub_191E4D090(v40, v24);
            uint64_t v23 = v28;
            uint64_t v18 = v27;
            uint64_t v12 = v26;
            unint64_t v16 = v25;
            uint64_t v15 = v38;
            v24 += v17;
            char v22 = 1;
            if (v24 + v23 >= v21) {
              goto LABEL_17;
            }
          }
          goto LABEL_34;
        }
LABEL_17:
        sub_191E53E98(v40, &qword_1E92F40E8, (uint64_t (*)(uint64_t))type metadata accessor for ManualClock.WakeUp, MEMORY[0x1E4FBBB08]);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a1 = v36;
        v36[2] = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_191DD9E10();
          uint64_t v14 = v33;
          a1[2] = v33;
        }
        uint64_t v30 = *(void *)(v14 + 16);
        if (v11 > v30) {
          goto LABEL_33;
        }
        uint64_t v31 = v30 - 1;
        sub_191E4D0F4(v14 + v16 + v18);
        if (v31 - v15 < 0)
        {
          sub_191EE94F0();
          __break(1u);
          return;
        }
        if (v17 > 0 || v14 + v16 + v18 >= v14 + v16 + v18 + v17 + (v31 - v15) * v17)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v17)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(v14 + 16) = v31;
        a1[2] = v14;
        uint64_t v13 = (uint64_t)v37;
      }
      sub_191E4D0F4(v13);
      uint64_t v11 = v15;
      if (!v15) {
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_36:
  *id v35 = v12;
}

uint64_t ManualClock.Instant.advanced(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = MEMORY[0x192FE8CE0](*v3, v3[1], a1, a2);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t static ManualClock.Instant.< infix(_:_:)()
{
  return sub_191EE9B20();
}

void sub_191E4BEA0(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ManualClock.WakeUp() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_191DD9E10();
    uint64_t v3 = v5;
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  sub_191E52C30(v6);
  *a1 = v3;
}

uint64_t static ManualClock.Instant.initial.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s13TeaFoundation11ManualClockV17minimumResolutions8DurationVvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void ManualClock.Instant.duration(to:)()
{
}

uint64_t ManualClock.Instant.hash(into:)()
{
  return sub_191EE9B60();
}

uint64_t static ManualClock.Instant.== infix(_:_:)(void *a1, void *a2)
{
  return MEMORY[0x1F4186188](*a1, a1[1], *a2, a2[1]);
}

uint64_t ManualClock.Instant.hashValue.getter()
{
  return sub_191EE9A90();
}

uint64_t sub_191E4BFEC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return ManualClock.Instant.advanced(by:)(*a1, a1[1], a2);
}

void sub_191E4BFF8()
{
}

uint64_t sub_191E4C010(uint64_t result, uint64_t a2)
{
  *uint64_t v2 = result;
  v2[1] = a2;
  return result;
}

BOOL sub_191E4C024()
{
  return sub_191ED6AB4();
}

BOOL sub_191E4C038()
{
  return sub_191EA3E14();
}

uint64_t sub_191E4C04C()
{
  return sub_191EA3ED0();
}

uint64_t sub_191E4C068()
{
  return sub_191EE9A90();
}

void ManualClock.now.getter(__n128 *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (__n128 *)&(*v1)[4];
  uint64_t v5 = v3 + 14;
  os_unfair_lock_lock(v3 + 14);
  sub_191E4C120(v4, a1);

  os_unfair_lock_unlock(v5);
}

__n128 sub_191E4C120@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t ManualClock.sleep(until:tolerance:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  uint64_t v4 = sub_191EE7690();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = *(void *)(v4 - 8);
  *(void *)(v1 + 32) = swift_task_alloc();
  *(_OWORD *)(v1 + 40) = *v3;
  *(void *)(v1 + 56) = *v0;
  return MEMORY[0x1F4188298](sub_191E4C1FC, 0, 0);
}

uint64_t sub_191E4C1FC()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  sub_191EE7680();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  void v5[2] = v3;
  v5[3] = v4;
  v5[4] = v1;
  v5[5] = v2;
  uint64_t v6 = swift_task_alloc();
  v0[9] = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[10] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_191E4C31C;
  uint64_t v8 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v7, &unk_1E92F4098, v5, sub_191E4D210, v6, 0, 0, v8);
}

uint64_t sub_191E4C31C()
{
  OUTLINED_FUNCTION_0_6();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v3 = v2;
  *(void *)(v4 + 88) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_191E4C4A8;
  }
  else {
    uint64_t v5 = sub_191E4C444;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_191E4C444()
{
  OUTLINED_FUNCTION_3();
  uint64_t v0 = OUTLINED_FUNCTION_11_18();
  v1(v0);
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v2();
}

uint64_t sub_191E4C4A8()
{
  OUTLINED_FUNCTION_3();
  uint64_t v0 = OUTLINED_FUNCTION_11_18();
  v1(v0);
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v2();
}

uint64_t sub_191E4C50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  return MEMORY[0x1F4188298](sub_191E4C530, 0, 0);
}

uint64_t sub_191E4C530()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = (os_unfair_lock_s *)v0[13];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  v0[2] = v0;
  v0[3] = sub_191E4C5E8;
  uint64_t v5 = swift_continuation_init();
  sub_191E4C6CC(v5, v4, v3, v2, v1);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_191E4C5E8()
{
  OUTLINED_FUNCTION_0_6();
  uint64_t v1 = *v0;
  if (*(void *)(v2 + 48)) {
    swift_willThrow();
  }
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_191E4C6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, os_unfair_lock_s *a5)
{
  uint64_t v10 = type metadata accessor for ManualClock.WakeUp();
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_191EE7690();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a2, v14);
  uint64_t v15 = &v13[*(int *)(v11 + 28)];
  *uint64_t v15 = a3;
  v15[1] = a4;
  *(void *)&v13[*(int *)(v11 + 32)] = a1;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = v13;
  os_unfair_lock_lock(a5 + 14);
  sub_191E52C10((uint64_t)&a5[4], &v24);
  os_unfair_lock_unlock(a5 + 14);
  if (v24)
  {
    if (v24 != 1)
    {
      sub_191EE8740();
      sub_191E54248((unint64_t *)&qword_1EB50CB20, MEMORY[0x1E4FBCF50]);
      uint64_t v16 = swift_allocError();
      sub_191EE7DB0();
      sub_191D5EB0C();
      swift_allocError();
      *uint64_t v17 = v16;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return sub_191E4D0F4((uint64_t)v13);
}

uint64_t sub_191E4C89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  v22[0] = a5;
  v22[1] = a3;
  v22[3] = a4;
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_191E541E4(0, &qword_1E92F40E0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v22 - v12;
  sub_191E53B94(a2, (uint64_t)v22 - v12);
  uint64_t v14 = sub_191EE7690();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  uint64_t result = sub_191E53E98((uint64_t)v13, &qword_1E92F40E0, v9, v10);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t v17 = v22[0];
    uint64_t result = sub_191EE9B20();
    if (result)
    {
      sub_191D93914();
      uint64_t v18 = *(void *)(*(void *)(a1 + 16) + 16);
      sub_191D93CEC(v18);
      uint64_t v19 = *(void *)(a1 + 16);
      *(void *)(v19 + 16) = v18 + 1;
      uint64_t v20 = *(void *)(type metadata accessor for ManualClock.WakeUp() - 8);
      uint64_t result = sub_191E4D090(v17, v19+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v18);
      *(void *)(a1 + 16) = v19;
      char v21 = 1;
    }
    else
    {
      char v21 = 0;
    }
  }
  else
  {
    char v21 = 2;
  }
  *a6 = v21;
  return result;
}

uint64_t sub_191E4CA78(os_unfair_lock_s *a1, uint64_t a2)
{
  uint64_t result = sub_191E4CB54(a2, a1);
  if (result)
  {
    sub_191EE8740();
    sub_191E54248((unint64_t *)&qword_1EB50CB20, MEMORY[0x1E4FBCF50]);
    uint64_t v3 = swift_allocError();
    sub_191EE7DB0();
    sub_191D5EB0C();
    swift_allocError();
    *uint64_t v4 = v3;
    return swift_continuation_throwingResumeWithError();
  }
  return result;
}

uint64_t sub_191E4CB54(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = (uint64_t)&a2[4];
  uint64_t v3 = a2 + 14;
  os_unfair_lock_lock(a2 + 14);
  sub_191E4DC10(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_191E4CBB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ManualClock.minimumResolution.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_191E4CBE0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_191D88378;
  return ManualClock.sleep(until:tolerance:)();
}

uint64_t sub_191E4CC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = type metadata accessor for ManualClock.WakeUp();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191EE7690();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v15 = a1 + 16;
  uint64_t v26 = a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  unint64_t v17 = sub_191E4B7AC((uint64_t (*)(uint64_t))sub_191E4DC2C, (uint64_t)v25, v16);
  LOBYTE(a2) = v18;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v23, v8);
    sub_191E4E720((uint64_t)v14, v12);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    *uint64_t v27 = 0;
  }
  else
  {
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < *(void *)(*(void *)v15 + 16))
    {
      *uint64_t v27 = *(void *)(*(void *)v15
                       + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
                       + *(void *)(v21 + 72) * v17
                       + *(int *)(v22 + 24));
      sub_191DEA428(v17, (uint64_t)v7);
      return sub_191E4D0F4((uint64_t)v7);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_191E4CEE0(uint64_t a1)
{
  return sub_191E4DB24(a1);
}

uint64_t sub_191E4CEEC(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_191EE9430();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      type metadata accessor for ManualClock.WakeUp();
      uint64_t v2 = sub_191EE85D0();
      *(void *)(v2 + 16) = a1;
    }
    else
    {
      uint64_t v2 = MEMORY[0x1E4FBC860];
    }
    type metadata accessor for ManualClock.WakeUp();
    return v2;
  }
  return result;
}

void sub_191E4CFCC()
{
  if (!qword_1E92F4080)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_191EE9260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F4080);
    }
  }
}

uint64_t type metadata accessor for ManualClock.WakeUp()
{
  uint64_t result = qword_1E92F40C8;
  if (!qword_1E92F40C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_191E4D074(void *a1@<X0>, void *a2@<X8>)
{
  sub_191E4BA48(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_191E4D090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManualClock.WakeUp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191E4D0F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ManualClock.WakeUp();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191E4D150(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_191D88378;
  return sub_191E4C50C(a1, v4, v5, v7, v6);
}

uint64_t sub_191E4D210()
{
  return sub_191E4CA78(*(os_unfair_lock_s **)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_191E4D21C()
{
  unint64_t result = qword_1E92F40A0;
  if (!qword_1E92F40A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F40A0);
  }
  return result;
}

unint64_t sub_191E4D26C()
{
  unint64_t result = qword_1E92F40A8;
  if (!qword_1E92F40A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F40A8);
  }
  return result;
}

uint64_t sub_191E4D2B8()
{
  return MEMORY[0x1E4FBC720];
}

unint64_t sub_191E4D2C8()
{
  unint64_t result = qword_1E92F40B0;
  if (!qword_1E92F40B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F40B0);
  }
  return result;
}

unint64_t sub_191E4D318()
{
  unint64_t result = qword_1E92F40B8;
  if (!qword_1E92F40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F40B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ManualClock()
{
  return &type metadata for ManualClock;
}

uint64_t getEnumTagSinglePayload for ManualClock.Instant(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ManualClock.Instant(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ManualClock.Instant()
{
  return &type metadata for ManualClock.Instant;
}

uint64_t *sub_191E4D3CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191EE7690();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_191E4D4A0(uint64_t a1)
{
  uint64_t v2 = sub_191EE7690();
  char v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_191E4D504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7690();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_191E4D588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7690();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_191E4D620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7690();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_191E4D6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7690();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_191E4D728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191E4D73C);
}

uint64_t sub_191E4D73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_191EE7690();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_191E4D7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191E4D7DC);
}

void sub_191E4D7DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_191EE7690();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

uint64_t sub_191E4D864()
{
  uint64_t result = sub_191EE7690();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ManualClock.State()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManualClock.State(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

void *assignWithCopy for ManualClock.State(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ManualClock.State(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManualClock.State(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManualClock.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManualClock.State()
{
  return &type metadata for ManualClock.State;
}

uint64_t sub_191E4DB18(uint64_t a1)
{
  return sub_191E4DB24(a1);
}

uint64_t sub_191E4DB24(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_15_17();
    uint64_t result = OUTLINED_FUNCTION_14_16();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_191EE85D0();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_191E4DB94(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_15_17();
    uint64_t result = OUTLINED_FUNCTION_14_16();
    __break(1u);
  }
  else if (a1)
  {
    sub_191DCDEC0();
    uint64_t result = sub_191EE85D0();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_191E4DC10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_191E4CC74(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_191E4DC2C()
{
  return sub_191EE7660() & 1;
}

void sub_191E4DC60()
{
}

uint64_t sub_191E4DC88()
{
  OUTLINED_FUNCTION_22_12();
  uint64_t v5 = *v1;
  sub_191EE9A70();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191EE8200();
  uint64_t v6 = sub_191EE9A90();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  OUTLINED_FUNCTION_2_37();
  if (v9)
  {
    uint64_t v10 = *(void *)(v5 + 48);
    OUTLINED_FUNCTION_25_12(v10 + 16 * v8);
    BOOL v12 = v12 && v11 == v3;
    if (v12 || (OUTLINED_FUNCTION_8_24() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = (uint64_t *)(*(void *)(*v2 + 48) + 16 * v8);
      uint64_t v14 = v13[1];
      *uint64_t v0 = *v13;
      v0[1] = v14;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      return 0;
    }
    uint64_t v16 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v16;
      OUTLINED_FUNCTION_2_37();
      if ((v17 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_25_12(v10 + 16 * v8);
      BOOL v19 = v12 && v18 == v3;
      if (v19 || (OUTLINED_FUNCTION_8_24() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191E5001C(v4, v3, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v21;
  swift_bridgeObjectRelease();
  *uint64_t v0 = v4;
  v0[1] = v3;
  return 1;
}

uint64_t sub_191E4DDF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_191EE9A60();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_12_19();
    sub_191E501B8(a2, v9, v14);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  if (*(void *)(*(void *)(v6 + 48) + 8 * v9) != a2)
  {
    uint64_t v10 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v10;
      OUTLINED_FUNCTION_31_9();
      if ((v12 & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v11 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_191E4DED0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  sub_191E54248((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  id v35 = a2;
  uint64_t v13 = sub_191EE7F90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v34 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v30 = v2;
    uint64_t v31 = a1;
    uint64_t v32 = ~v14;
    uint64_t v29 = v8;
    uint64_t v18 = *(void (**)(void, void, void))(v8 + 16);
    uint64_t v17 = v8 + 16;
    uint64_t v16 = v18;
    uint64_t v33 = *(void *)(v17 + 56);
    BOOL v19 = (void (**)(char *, uint64_t))(v17 - 8);
    v28[1] = v17 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v20 = v12;
      unint64_t v21 = v33 * v15;
      uint64_t v22 = v16;
      v16(v11, *(void *)(v12 + 48) + v33 * v15, v6);
      sub_191E54248(&qword_1EB508708, MEMORY[0x1E4F276F0]);
      char v23 = sub_191EE80C0();
      uint64_t v24 = *v19;
      (*v19)(v11, v6);
      if (v23) {
        break;
      }
      unint64_t v15 = (v15 + 1) & v32;
      uint64_t v12 = v20;
      uint64_t v16 = v22;
      if (((*(void *)(v34 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v30;
        a1 = v31;
        uint64_t v8 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v24(v35, v6);
    v22(v31, *(void *)(*v30 + 48) + v21, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(void, void, void))(v8 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = v35;
    v16(v11, v35, v6);
    uint64_t v36 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_191E502DC((uint64_t)v11, v15, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v36;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v26, v6);
    return 1;
  }
}

uint64_t sub_191E4E1CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_191EE9A70();
  sub_191EE9A80();
  uint64_t v6 = sub_191EE9A90();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    uint64_t v10 = *(void *)(v5 + 48);
    while (*(void *)(v10 + 8 * v8) != a2)
    {
      unint64_t v8 = (v8 + 1) & v9;
      OUTLINED_FUNCTION_31_9();
      if ((v11 & 1) == 0) {
        goto LABEL_5;
      }
    }
    uint64_t result = 0;
    a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
  }
  else
  {
LABEL_5:
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_12_19();
    sub_191E505A4(a2, v8, v12);
    *uint64_t v2 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_191E4E2C0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_191E10CA8((uint64_t)a2, (uint64_t)v81);
  uint64_t v72 = v81[0];
  unint64_t v73 = v81[1];
  uint64_t v74 = v81[2];
  uint64_t v75 = v81[3];
  uint64_t v76 = v81[4];
  uint64_t v6 = *v3;
  sub_191EE9A70();
  sub_191E10CA8((uint64_t)a2, (uint64_t)&v88);
  uint64_t v69 = (void *)a1;
  if (v89 == 2 || v89 == 1)
  {
    uint64_t v7 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    OUTLINED_FUNCTION_20_13(v7, v8, v9, v10, v11, v12, v13, v14, v67, a1, v70, v72, v73, v74, v75, v76, v77, v79);
  }
  else if (v89)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191EE8200();
  }
  else
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  sub_191EE8200();
  uint64_t v15 = sub_191EE9A90();
  uint64_t v16 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v17 = v15 & ~v16;
  uint64_t v18 = v6 + 56;
  uint64_t v68 = (uint64_t)v3;
  if (((*(void *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v78 = *(void *)v68;
    *(void *)uint64_t v68 = 0x8000000000000000;
    sub_191E4A920(a2, (void (*)(void, void, void, void, void))sub_191DF7F0C);
    sub_191E506E8(a2, v17, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v68 = v78;
    swift_bridgeObjectRelease();
    sub_191E10CA8((uint64_t)a2, (uint64_t)v69);
    return 1;
  }
  uint64_t v19 = ~v16;
  uint64_t v71 = v6;
  while (1)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v6 + 48) + 40 * v17);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    switch(v22)
    {
      case 0:
        sub_191E10CA8((uint64_t)a2, (uint64_t)v82);
        if (v83) {
          goto LABEL_17;
        }
        uint64_t v43 = v21;
        unint64_t v44 = 0;
        goto LABEL_33;
      case 1:
        sub_191E10CA8((uint64_t)a2, (uint64_t)v84);
        if (v85 != 1)
        {
LABEL_17:
          sub_191E4A920(a2, (void (*)(void, void, void, void, void))sub_191DF7F0C);
LABEL_20:
          uint64_t v23 = OUTLINED_FUNCTION_4_34();
          OUTLINED_FUNCTION_9_16(v23, v24, v25, v26, v27, v28, v29, v30, v68, (uint64_t)v69, v71, v72, v73);
          goto LABEL_21;
        }
        uint64_t v43 = v21;
        unint64_t v44 = 1;
LABEL_33:
        uint64_t v45 = sub_191DF7F54(v43, v44);
        OUTLINED_FUNCTION_9_16(v45, v46, v47, v48, v49, v50, v51, v52, v68, (uint64_t)v69, v71, v72, v73);
        swift_bridgeObjectRelease();
        goto LABEL_36;
      case 2:
        sub_191E10CA8((uint64_t)a2, (uint64_t)v86);
        if (v87 != 2) {
          goto LABEL_17;
        }
        uint64_t v43 = v21;
        unint64_t v44 = 2;
        goto LABEL_33;
    }
    sub_191E10CA8((uint64_t)a2, (uint64_t)&v79);
    if (v80 < 3)
    {
      sub_191E4A920(a2, (void (*)(void, void, void, void, void))sub_191DF7F0C);
      OUTLINED_FUNCTION_5_32();
      goto LABEL_20;
    }
    if (v21 == v79 && v22 == v80) {
      break;
    }
    char v32 = sub_191EE9770();
    sub_191E4A920(a2, (void (*)(void, void, void, void, void))sub_191DF7F0C);
    OUTLINED_FUNCTION_5_32();
    uint64_t v33 = OUTLINED_FUNCTION_4_34();
    OUTLINED_FUNCTION_9_16(v33, v34, v35, v36, v37, v38, v39, v40, v68, (uint64_t)v69, v71, v72, v73);
    if (v32) {
      goto LABEL_35;
    }
LABEL_21:
    unint64_t v17 = (v17 + 1) & v19;
    uint64_t v6 = v71;
    if (((*(void *)(v18 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
      goto LABEL_29;
    }
  }
  sub_191E4A920(a2, (void (*)(void, void, void, void, void))sub_191DF7F0C);
  OUTLINED_FUNCTION_5_32();
  uint64_t v53 = OUTLINED_FUNCTION_4_34();
  OUTLINED_FUNCTION_9_16(v53, v54, v55, v56, v57, v58, v59, v60, v68, (uint64_t)v69, v71, v72, v73);
LABEL_35:
  swift_bridgeObjectRelease();
  sub_191E4A920(a2, (void (*)(void, void, void, void, void))sub_191DF7F54);
LABEL_36:
  uint64_t v61 = (uint64_t *)(*(void *)(*(void *)v68 + 48) + 40 * v17);
  uint64_t v62 = *v61;
  unint64_t v63 = v61[1];
  uint64_t v64 = v61[2];
  uint64_t v65 = v61[3];
  uint64_t v66 = v61[4];
  *uint64_t v69 = *v61;
  v69[1] = v63;
  void v69[2] = v64;
  v69[3] = v65;
  v69[4] = v66;
  sub_191DF7F0C(v62, v63);
  return 0;
}

uint64_t sub_191E4E720(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_191EE7690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_191E54248((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v33 = a2;
  uint64_t v11 = sub_191EE7F90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_191E54248(&qword_1EB50E7E8, MEMORY[0x1E4F27990]);
      char v21 = sub_191EE80C0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_191E50B58((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

void sub_191E4EA44()
{
  OUTLINED_FUNCTION_19_12();
  unint64_t v1 = (void *)*v0;
  sub_191E54370(0, v2, v3);
  uint64_t v4 = sub_191EE9130();
  if (v1[2])
  {
    OUTLINED_FUNCTION_7_24();
    uint64_t v28 = v1 + 7;
    OUTLINED_FUNCTION_21_9();
    unint64_t v7 = v6 & v5;
    int64_t v9 = (unint64_t)(v8 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_4;
    }
LABEL_3:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      uint64_t v16 = (uint64_t *)(v1[6] + 16 * i);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      sub_191EE9A70();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_191EE8200();
      swift_bridgeObjectRelease();
      sub_191EE9A90();
      OUTLINED_FUNCTION_10_23();
      if (v19)
      {
        OUTLINED_FUNCTION_24_10();
        while (++v22 != v23 || (v21 & 1) == 0)
        {
          BOOL v24 = v22 == v23;
          if (v22 == v23) {
            uint64_t v22 = 0;
          }
          v21 |= v24;
          if (*(void *)(v4 + 56 + 8 * v22) != -1)
          {
            OUTLINED_FUNCTION_23_12();
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_26_11();
LABEL_27:
      OUTLINED_FUNCTION_6_26(v20);
      uint64_t v26 = (void *)(*(void *)(v4 + 48) + 16 * v25);
      *uint64_t v26 = v17;
      v26[1] = v18;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_3;
      }
LABEL_4:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_35;
      }
      if (v13 >= v9) {
        goto LABEL_29;
      }
      unint64_t v14 = v28[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v9) {
          goto LABEL_29;
        }
        unint64_t v14 = v28[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v9) {
            goto LABEL_29;
          }
          unint64_t v14 = v28[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v9)
            {
LABEL_29:
              swift_release();
              OUTLINED_FUNCTION_7_24();
              if (v27 > 63) {
                sub_191EA28DC(0, (unint64_t)(v27 + 63) >> 6, v28);
              }
              else {
                *uint64_t v28 = -1 << v27;
              }
              _OWORD v1[2] = 0;
              break;
            }
            unint64_t v14 = v28[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_36;
                }
                if (v10 >= v9) {
                  goto LABEL_29;
                }
                unint64_t v14 = v28[v10];
                ++v15;
                if (v14) {
                  goto LABEL_17;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_17:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  swift_release();
  *uint64_t v0 = v4;
  OUTLINED_FUNCTION_18_13();
}

uint64_t sub_191E4ECB0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191E54324(0, (unint64_t *)&qword_1EB50DBB0);
  uint64_t v3 = sub_191EE9130();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_191EE9A70();
      sub_191EE8200();
      uint64_t result = sub_191EE9A90();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *uint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              unint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_191EA28DC(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                void *v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_191E4EFA0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191E54324(0, &qword_1E92F4100);
  uint64_t result = sub_191EE9130();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v7 = (uint64_t *)(v2 + 56);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = -1 << v8;
    uint64_t v28 = v1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v6;
    uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = result + 56;
    if ((v9 & v6) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v13 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = sub_191EE9A60();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v11) {
        goto LABEL_32;
      }
      unint64_t v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        int64_t v5 = v15 + 1;
        if (v15 + 1 >= v11) {
          goto LABEL_32;
        }
        unint64_t v16 = v7[v5];
        if (!v16)
        {
          int64_t v5 = v15 + 2;
          if (v15 + 2 >= v11) {
            goto LABEL_32;
          }
          unint64_t v16 = v7[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63) {
                sub_191EA28DC(0, v11, (void *)(v2 + 56));
              }
              else {
                *unint64_t v7 = v27;
              }
              unint64_t v1 = v28;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v11) {
                  goto LABEL_32;
                }
                unint64_t v16 = v7[v5];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_191E4F238()
{
  unint64_t v1 = v0;
  uint64_t v42 = sub_191EE73F0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_191E54290();
  uint64_t v5 = sub_191EE9130();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_191E54248((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
      uint64_t result = sub_191EE7F90();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              unint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_191EA28DC(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v6;
  return result;
}

unint64_t sub_191E4F62C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191E54370(0, &qword_1E92F40F0, (void (*)(void))sub_191DCF584);
  uint64_t v3 = sub_191EE9130();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      unint64_t result = sub_191E4FE18(*(void *)(*(void *)(v2 + 48) + 8 * i), v3);
      if (v7) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
              if (v16 > 63) {
                sub_191EA28DC(0, (unint64_t)(v16 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v5 = -1 << v16;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_28;
                }
                if (v10 >= v8) {
                  goto LABEL_22;
                }
                unint64_t v14 = v5[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_19:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  unint64_t result = swift_release();
  *unint64_t v1 = v3;
  return result;
}

uint64_t sub_191E4F81C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191E54370(0, (unint64_t *)&qword_1E92F2980, (void (*)(void))sub_191DF7EC0);
  uint64_t v3 = sub_191EE9130();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      sub_191E10CA8(*(void *)(v2 + 48) + 40 * i, (uint64_t)v17);
      uint64_t result = sub_191E4FEBC((uint64_t)v17, v3);
      if (v7) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
              if (v16 > 63) {
                sub_191EA28DC(0, (unint64_t)(v16 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v5 = -1 << v16;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_28;
                }
                if (v10 >= v8) {
                  goto LABEL_22;
                }
                unint64_t v14 = v5[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_19:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v3;
  return result;
}

uint64_t sub_191E4FA24()
{
  unint64_t v1 = v0;
  uint64_t v42 = sub_191EE7690();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_191E52B7C();
  uint64_t v5 = sub_191EE9130();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_191E54248((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
      uint64_t result = sub_191EE7F90();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              unint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_191EA28DC(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v6;
  return result;
}

unint64_t sub_191E4FE18(uint64_t a1, uint64_t a2)
{
  sub_191EE9A70();
  sub_191EE9A80();
  sub_191EE9A90();
  unint64_t result = sub_191EE9090();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_191E4FEBC(uint64_t a1, uint64_t a2)
{
  sub_191EE9A70();
  sub_191E10CA8(a1, (uint64_t)v6);
  if (v6[1] > 2uLL) {
    sub_191EE8200();
  }
  sub_191EE8200();
  sub_191EE9A90();
  unint64_t v4 = sub_191EE9090();
  *(void *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  uint64_t result = sub_191E10CA8(a1, *(void *)(a2 + 48) + 40 * v4);
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_191E5001C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_191E4ECB0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_191E50FA8();
      goto LABEL_22;
    }
    sub_191E51B54();
  }
  uint64_t v11 = *v4;
  sub_191EE9A70();
  sub_191EE8200();
  uint64_t result = sub_191EE9A90();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_191EE9770(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_191EE99A0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_191EE9770();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_191E501B8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_191E4EFA0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_191E51170();
      goto LABEL_14;
    }
    sub_191E51E14();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_191EE9A60();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_191EE99A0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_191E502DC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_191EE73F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_191E4F238();
  }
  else
  {
    if (v11 > v10)
    {
      sub_191E516BC(MEMORY[0x1E4F276F0], (void (*)(void))sub_191E54290);
      goto LABEL_12;
    }
    sub_191E52088();
  }
  uint64_t v12 = *v3;
  sub_191E54248((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
  uint64_t v13 = sub_191EE7F90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_191E54248(&qword_1EB508708, MEMORY[0x1E4F276F0]);
      char v21 = sub_191EE80C0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_191EE99A0();
  __break(1u);
  return result;
}

uint64_t sub_191E505A4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_191E4F62C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_191E5131C();
      goto LABEL_12;
    }
    sub_191E52430();
  }
  uint64_t v8 = *v3;
  sub_191EE9A70();
  sub_191EE9A80();
  uint64_t result = sub_191EE9A90();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    while (*(void *)(*(void *)(v8 + 48) + 8 * a2) != v5)
    {
      a2 = (a2 + 1) & v10;
      if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_12;
      }
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_191EE99A0();
  __break(1u);
  return result;
}

uint64_t sub_191E506E8(void *a1, unint64_t a2, char a3)
{
  sub_191E10CA8((uint64_t)a1, (uint64_t)v28);
  unint64_t v24 = v28[1];
  uint64_t v25 = v28[0];
  unint64_t v9 = *(void *)(*v3 + 16);
  unint64_t v10 = *(void *)(*v3 + 24);
  uint64_t v22 = v3;
  if (v10 <= v9 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_191E4F81C();
    }
    else
    {
      if (v10 > v9)
      {
        sub_191E514D4();
        goto LABEL_32;
      }
      sub_191E525E4();
    }
    uint64_t v23 = *v3;
    sub_191EE9A70();
    sub_191E10CA8((uint64_t)a1, (uint64_t)&v35);
    uint64_t v4 = v36;
    if (v36 > 2) {
      sub_191EE8200();
    }
    sub_191EE8200();
    uint64_t v11 = sub_191EE9A90();
    uint64_t v12 = -1 << *(unsigned char *)(v23 + 32);
    a2 = v11 & ~v12;
    if ((*(void *)(v23 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v13 = ~v12;
      while (1)
      {
        uint64_t v14 = (uint64_t *)(*(void *)(v23 + 48) + 40 * a2);
        uint64_t v4 = *v14;
        unint64_t v5 = v14[1];
        if (!v5)
        {
          sub_191E10CA8((uint64_t)a1, (uint64_t)v29);
          if (!v30) {
            goto LABEL_36;
          }
          sub_191E4A920(a1, (void (*)(void, void, void, void, void))sub_191DF7F0C);
          unint64_t v5 = 0;
          goto LABEL_23;
        }
        if (v5 == 1)
        {
          sub_191E10CA8((uint64_t)a1, (uint64_t)v31);
          if (v32 == 1) {
            goto LABEL_36;
          }
          sub_191E4A920(a1, (void (*)(void, void, void, void, void))sub_191DF7F0C);
          unint64_t v5 = 1;
          goto LABEL_23;
        }
        if (v5 == 2) {
          break;
        }
        sub_191E10CA8((uint64_t)a1, (uint64_t)&v26);
        if (v27 < 3)
        {
          sub_191E4A920(a1, (void (*)(void, void, void, void, void))sub_191DF7F0C);
          sub_191DF7F0C(v4, v5);
LABEL_23:
          sub_191DF7F54(v4, v5);
          sub_191DF7F54(v25, v24);
          goto LABEL_24;
        }
        if (v4 == v26 && v5 == v27) {
          goto LABEL_35;
        }
        char v16 = sub_191EE9770();
        sub_191E4A920(a1, (void (*)(void, void, void, void, void))sub_191DF7F0C);
        sub_191DF7F0C(v4, v5);
        sub_191DF7F54(v4, v5);
        sub_191DF7F54(v25, v24);
        if (v16) {
          goto LABEL_37;
        }
LABEL_24:
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v23 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_32;
        }
      }
      sub_191E10CA8((uint64_t)a1, (uint64_t)v33);
      if (v34 == 2) {
        goto LABEL_36;
      }
      sub_191E4A920(a1, (void (*)(void, void, void, void, void))sub_191DF7F0C);
      unint64_t v5 = 2;
      goto LABEL_23;
    }
  }
LABEL_32:
  uint64_t v17 = *v3;
  *(void *)(*v22 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_191E10CA8((uint64_t)a1, *(void *)(v17 + 48) + 40 * a2);
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
LABEL_35:
    sub_191E4A920(a1, (void (*)(void, void, void, void, void))sub_191DF7F0C);
    sub_191DF7F0C(v4, v5);
LABEL_36:
    sub_191DF7F54(v4, v5);
    sub_191DF7F54(v25, v24);
LABEL_37:
    uint64_t result = sub_191EE99A0();
    __break(1u);
  }
  else
  {
    *(void *)(v17 + 16) = v21;
  }
  return result;
}

uint64_t sub_191E50B58(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_191EE7690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_191E4FA24();
  }
  else
  {
    if (v11 > v10)
    {
      sub_191E516BC(MEMORY[0x1E4F27990], (void (*)(void))sub_191E52B7C);
      goto LABEL_12;
    }
    sub_191E527D4();
  }
  uint64_t v12 = *v3;
  sub_191E54248((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  uint64_t v13 = sub_191EE7F90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_191E54248(&qword_1EB50E7E8, MEMORY[0x1E4F27990]);
      char v21 = sub_191EE80C0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_191EE99A0();
  __break(1u);
  return result;
}

void sub_191E50E20(unint64_t *a1, void (*a2)(void))
{
  uint64_t v4 = v2;
  sub_191E54370(0, a1, a2);
  unint64_t v5 = (void *)*v2;
  uint64_t v6 = sub_191EE9120();
  if (!v5[2])
  {
LABEL_26:
    swift_release();
    *uint64_t v4 = v6;
    return;
  }
  OUTLINED_FUNCTION_7_24();
  uint64_t v8 = v5 + 7;
  unint64_t v10 = (unint64_t)(v9 + 63) >> 6;
  if ((void *)v6 != v5 || v7 >= &v5[v10 + 7]) {
    memmove(v7, v5 + 7, 8 * v10);
  }
  uint64_t v12 = 0;
  *(void *)(v6 + 16) = v5[2];
  OUTLINED_FUNCTION_7_24();
  OUTLINED_FUNCTION_13_19();
  int64_t v14 = v13 >> 6;
  if (!v3) {
    goto LABEL_10;
  }
LABEL_9:
  OUTLINED_FUNCTION_29_9();
  for (uint64_t i = v15 | (v12 << 6); ; uint64_t i = v19 + (v12 << 6))
  {
    uint64_t v20 = (void *)(v5[6] + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v6 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v3) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v14) {
      goto LABEL_26;
    }
    ++v12;
    if (!v8[v17])
    {
      uint64_t v12 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_26;
      }
      if (!v8[v12])
      {
        uint64_t v12 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_26;
        }
        if (!v8[v12]) {
          break;
        }
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_30_7();
  }
  uint64_t v18 = v17 + 3;
  if (v18 >= v14) {
    goto LABEL_26;
  }
  if (v8[v18])
  {
    uint64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v14) {
      goto LABEL_26;
    }
    ++v18;
    if (v8[v12]) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

void *sub_191E50FA8()
{
  unint64_t v1 = v0;
  sub_191E54324(0, (unint64_t *)&qword_1EB50DBB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191EE9120();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_191E51170()
{
  unint64_t v1 = v0;
  sub_191E54324(0, &qword_1E92F4100);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191EE9120();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(void *)(*(void *)(v4 + 48) + 8 * i) = *(void *)(*(void *)(v2 + 48) + 8 * i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_191E5131C()
{
  unint64_t v1 = v0;
  sub_191E54370(0, &qword_1E92F40F0, (void (*)(void))sub_191DCF584);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191EE9120();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(void *)(*(void *)(v4 + 48) + 8 * i) = *(void *)(*(void *)(v2 + 48) + 8 * i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_191E514D4()
{
  unint64_t v1 = v0;
  sub_191E54370(0, (unint64_t *)&qword_1E92F2980, (void (*)(void))sub_191DF7EC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191EE9120();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 5 * i;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 48) + 8 * v20);
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    uint64_t v25 = v21[3];
    uint64_t v26 = v21[4];
    uint64_t v27 = (uint64_t *)(*(void *)(v4 + 48) + 8 * v20);
    *uint64_t v27 = *v21;
    v27[1] = v23;
    v27[2] = v24;
    v27[3] = v25;
    v27[4] = v26;
    uint64_t result = (void *)sub_191DF7F0C(v22, v23);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_191E516BC(uint64_t (*a1)(void), void (*a2)(void))
{
  unint64_t v5 = v2;
  uint64_t v6 = a1(0);
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v26 - v10;
  a2(0);
  uint64_t v12 = (void *)*v2;
  uint64_t v13 = sub_191EE9120();
  if (!v12[2])
  {
    swift_release();
LABEL_28:
    *unint64_t v5 = v13;
    return;
  }
  OUTLINED_FUNCTION_7_24();
  unint64_t v16 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v27 = v5;
  unint64_t v28 = v12 + 7;
  if ((void *)v13 != v12 || v14 >= &v12[v16 + 7]) {
    memmove(v14, v28, 8 * v16);
  }
  uint64_t v18 = 0;
  *(void *)(v13 + 16) = v12[2];
  OUTLINED_FUNCTION_7_24();
  OUTLINED_FUNCTION_13_19();
  int64_t v29 = v19 >> 6;
  if (!v3) {
    goto LABEL_10;
  }
LABEL_9:
  OUTLINED_FUNCTION_29_9();
  for (uint64_t i = v20 | (v18 << 6); ; uint64_t i = v24 + (v18 << 6))
  {
    uint64_t v25 = *(void *)(v8 + 72) * i;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12[6] + v25, v6);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(*(void *)(v13 + 48) + v25, v11, v6);
    if (v3) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v29) {
      goto LABEL_26;
    }
    ++v18;
    if (!*((void *)v28 + v22))
    {
      uint64_t v18 = v22 + 1;
      if (v22 + 1 >= v29) {
        goto LABEL_26;
      }
      if (!*((void *)v28 + v18))
      {
        uint64_t v18 = v22 + 2;
        if (v22 + 2 >= v29) {
          goto LABEL_26;
        }
        if (!*((void *)v28 + v18)) {
          break;
        }
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_30_7();
  }
  uint64_t v23 = v22 + 3;
  if (v23 >= v29)
  {
LABEL_26:
    swift_release();
    unint64_t v5 = v27;
    goto LABEL_28;
  }
  if (*((void *)v28 + v23))
  {
    uint64_t v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v29) {
      goto LABEL_26;
    }
    ++v23;
    if (*((void *)v28 + v18)) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
}

void sub_191E51918()
{
  OUTLINED_FUNCTION_19_12();
  uint64_t v1 = *v0;
  sub_191E54370(0, v2, v3);
  uint64_t v4 = sub_191EE9130();
  if (!*(void *)(v1 + 16))
  {
    swift_release();
LABEL_31:
    *uint64_t v0 = v4;
    OUTLINED_FUNCTION_18_13();
    return;
  }
  OUTLINED_FUNCTION_7_24();
  uint64_t v5 = v1 + 56;
  OUTLINED_FUNCTION_21_9();
  unint64_t v8 = v7 & v6;
  int64_t v27 = (unint64_t)(v9 + 63) >> 6;
  swift_retain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_4;
  }
LABEL_3:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    unint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_191EE9A70();
    swift_bridgeObjectRetain_n();
    sub_191EE8200();
    swift_bridgeObjectRelease();
    sub_191EE9A90();
    OUTLINED_FUNCTION_10_23();
    if (v19)
    {
      OUTLINED_FUNCTION_24_10();
      while (++v22 != v23 || (v21 & 1) == 0)
      {
        BOOL v24 = v22 == v23;
        if (v22 == v23) {
          uint64_t v22 = 0;
        }
        v21 |= v24;
        if (*(void *)(v4 + 56 + 8 * v22) != -1)
        {
          OUTLINED_FUNCTION_23_12();
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    OUTLINED_FUNCTION_26_11();
LABEL_27:
    OUTLINED_FUNCTION_6_26(v20);
    uint64_t v26 = (void *)(*(void *)(v4 + 48) + 16 * v25);
    *uint64_t v26 = v17;
    v26[1] = v18;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_3;
    }
LABEL_4:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_33;
    }
    if (v13 >= v27) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v27) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v27) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_17:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v27)
  {
LABEL_29:
    swift_release_n();
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_17;
    }
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_191E51B54()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191E54324(0, (unint64_t *)&qword_1EB50DBB0);
  uint64_t v3 = sub_191EE9130();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_191EE9A70();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191EE8200();
    uint64_t result = sub_191EE9A90();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191E51E14()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191E54324(0, &qword_1E92F4100);
  uint64_t result = sub_191EE9130();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = sub_191EE9A60();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191E52088()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191EE73F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_191E54290();
  uint64_t v7 = sub_191EE9130();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_191E54248((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
    uint64_t result = sub_191EE7F90();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_191E52430()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191E54370(0, &qword_1E92F40F0, (void (*)(void))sub_191DCF584);
  uint64_t v3 = sub_191EE9130();
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    unint64_t result = swift_release();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    unint64_t result = sub_191E4FE18(*(void *)(*(void *)(v2 + 48) + 8 * i), v3);
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_191E525E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_191E54370(0, (unint64_t *)&qword_1E92F2980, (void (*)(void))sub_191DF7EC0);
  uint64_t v3 = sub_191EE9130();
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_24:
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    sub_191E10CA8(*(void *)(v2 + 48) + 40 * i, (uint64_t)v16);
    sub_191E4A920(v16, (void (*)(void, void, void, void, void))sub_191DF7F0C);
    uint64_t result = sub_191E4FEBC((uint64_t)v16, v3);
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    uint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_191E527D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191EE7690();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_191E52B7C();
  uint64_t v7 = sub_191EE9130();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_191E54248((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
    uint64_t result = sub_191EE7F90();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_191E52B7C()
{
  if (!qword_1E92F40D8)
  {
    sub_191EE7690();
    sub_191E54248((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_191EE9150();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F40D8);
    }
  }
}

uint64_t sub_191E52C10@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_191E4C89C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_191E52C30(uint64_t *a1)
{
  uint64_t v138 = type metadata accessor for ManualClock.WakeUp();
  uint64_t v130 = *(void *)(v138 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v138);
  uint64_t v127 = (uint64_t)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v139 = (uint64_t)&v121 - v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v136 = (uint64_t)&v121 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v135 = (uint64_t)&v121 - v9;
  uint64_t v10 = a1[1];
  uint64_t v11 = sub_191EE9600();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10) {
        sub_191E5357C(0, v10, 1, a1);
      }
      return;
    }
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  uint64_t v12 = v11;
  uint64_t v131 = v1;
  v137 = a1;
  uint64_t v124 = sub_191E4CEEC(v10 / 2);
  unint64_t v129 = v13;
  if (v10 > 0)
  {
    uint64_t v123 = v12;
    uint64_t v14 = 0;
    int64_t v15 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v16 = v10;
    uint64_t v125 = v10;
    while (1)
    {
      uint64_t v17 = v14;
      uint64_t v18 = v14 + 1;
      if (v14 + 1 >= v16)
      {
        ++v14;
      }
      else
      {
        uint64_t v19 = *v137;
        uint64_t v20 = *(void *)(v130 + 72);
        uint64_t v21 = v135;
        sub_191E4D090(*v137 + v20 * v18, v135);
        uint64_t v22 = v19 + v20 * v14;
        uint64_t v23 = v136;
        sub_191E4D090(v22, v136);
        LODWORD(v133) = sub_191EE9B20();
        sub_191E4D0F4(v23);
        sub_191E4D0F4(v21);
        uint64_t v14 = v17 + 2;
        uint64_t v132 = v19;
        uint64_t v134 = v20;
        if (v17 + 2 < v16)
        {
          uint64_t v24 = v16;
          uint64_t v128 = v17;
          uint64_t v25 = v20 * v18;
          uint64_t v26 = v19;
          uint64_t v27 = v20 * v14;
          while (1)
          {
            uint64_t v28 = v14;
            uint64_t v29 = v135;
            sub_191E4D090(v26 + v27, v135);
            uint64_t v30 = v136;
            sub_191E4D090(v26 + v25, v136);
            int v31 = sub_191EE9B20();
            sub_191E4D0F4(v30);
            sub_191E4D0F4(v29);
            if ((v133 ^ v31)) {
              break;
            }
            uint64_t v14 = v28 + 1;
            v26 += v134;
            if (v28 + 1 >= v24)
            {
              uint64_t v16 = v24;
              uint64_t v14 = v24;
              uint64_t v17 = v128;
              goto LABEL_12;
            }
          }
          uint64_t v14 = v28;
          uint64_t v17 = v128;
          uint64_t v16 = v24;
        }
LABEL_12:
        if (v133)
        {
          if (v14 < v17) {
            goto LABEL_142;
          }
          if (v17 < v14)
          {
            uint64_t v133 = v16;
            v122 = v15;
            uint64_t v32 = 0;
            uint64_t v33 = v134;
            uint64_t v34 = v134 * (v14 - 1);
            uint64_t v35 = v17;
            uint64_t v36 = v14 * v134;
            uint64_t v37 = v35;
            uint64_t v128 = v35;
            uint64_t v38 = v35 * v134;
            uint64_t v39 = v137;
            do
            {
              if (v37 != v14 + v32 - 1)
              {
                uint64_t v40 = v132;
                if (!v132) {
                  goto LABEL_148;
                }
                uint64_t v41 = v14;
                unint64_t v42 = v132 + v38;
                uint64_t v43 = v132 + v34;
                sub_191DEAC88(v132 + v38, v127);
                if (v38 < v34 || v42 >= v40 + v36)
                {
                  swift_arrayInitWithTakeFrontToBack();
                  uint64_t v33 = v134;
                }
                else
                {
                  uint64_t v33 = v134;
                  if (v38 != v34) {
                    swift_arrayInitWithTakeBackToFront();
                  }
                }
                sub_191DEAC88(v127, v43);
                uint64_t v39 = v137;
                uint64_t v14 = v41;
              }
              ++v37;
              --v32;
              v34 -= v33;
              v36 -= v33;
              v38 += v33;
            }
            while (v37 < v14 + v32);
            int64_t v15 = v122;
            uint64_t v17 = v128;
            uint64_t v16 = v133;
            goto LABEL_30;
          }
        }
      }
      uint64_t v39 = v137;
LABEL_30:
      if (v14 < v16)
      {
        if (__OFSUB__(v14, v17)) {
          goto LABEL_139;
        }
        if (v14 - v17 < v123)
        {
          if (__OFADD__(v17, v123)) {
            goto LABEL_143;
          }
          if (v17 + v123 >= v16) {
            uint64_t v45 = v16;
          }
          else {
            uint64_t v45 = v17 + v123;
          }
          if (v45 < v17)
          {
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
            return;
          }
          if (v14 != v45)
          {
            uint64_t v128 = v17;
            v122 = v15;
            uint64_t v46 = *(void *)(v130 + 72);
            uint64_t v47 = v46 * (v14 - 1);
            uint64_t v132 = v46;
            uint64_t v48 = v14 * v46;
            uint64_t v126 = v45;
            do
            {
              uint64_t v49 = 0;
              uint64_t v50 = v128;
              uint64_t v133 = v48;
              uint64_t v134 = v14;
              while (1)
              {
                uint64_t v51 = *v39;
                uint64_t v52 = v48 + v49 + *v39;
                uint64_t v53 = v135;
                sub_191E4D090(v52, v135);
                uint64_t v54 = v47;
                uint64_t v55 = v47 + v49 + v51;
                uint64_t v56 = v136;
                sub_191E4D090(v55, v136);
                LOBYTE(v51) = sub_191EE9B20();
                sub_191E4D0F4(v56);
                sub_191E4D0F4(v53);
                if ((v51 & 1) == 0) {
                  break;
                }
                uint64_t v57 = *v39;
                if (!*v39) {
                  goto LABEL_146;
                }
                uint64_t v48 = v133;
                uint64_t v47 = v54;
                uint64_t v58 = v57 + v54 + v49;
                sub_191DEAC88(v57 + v133 + v49, v139);
                swift_arrayInitWithTakeFrontToBack();
                sub_191DEAC88(v139, v58);
                v49 -= v132;
                ++v50;
                uint64_t v59 = v134;
                uint64_t v39 = v137;
                if (v134 == v50) {
                  goto LABEL_46;
                }
              }
              uint64_t v48 = v133;
              uint64_t v59 = v134;
              uint64_t v47 = v54;
LABEL_46:
              uint64_t v14 = v59 + 1;
              v47 += v132;
              v48 += v132;
            }
            while (v14 != v126);
            uint64_t v14 = v126;
            int64_t v15 = v122;
            uint64_t v17 = v128;
          }
        }
      }
      if (v14 < v17) {
        goto LABEL_138;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v15 = sub_191DDA160(0, *((void *)v15 + 2) + 1, 1, v15);
      }
      unint64_t v61 = *((void *)v15 + 2);
      unint64_t v60 = *((void *)v15 + 3);
      unint64_t v62 = v61 + 1;
      if (v61 >= v60 >> 1) {
        int64_t v15 = sub_191DDA160((char *)(v60 > 1), v61 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v62;
      unint64_t v63 = v15 + 32;
      uint64_t v64 = &v15[16 * v61 + 32];
      *(void *)uint64_t v64 = v17;
      *((void *)v64 + 1) = v14;
      if (v61)
      {
        while (1)
        {
          unint64_t v65 = v62 - 1;
          if (v62 >= 4)
          {
            uint64_t v70 = &v63[16 * v62];
            uint64_t v71 = *((void *)v70 - 8);
            uint64_t v72 = *((void *)v70 - 7);
            BOOL v76 = __OFSUB__(v72, v71);
            uint64_t v73 = v72 - v71;
            if (v76) {
              goto LABEL_123;
            }
            uint64_t v75 = *((void *)v70 - 6);
            uint64_t v74 = *((void *)v70 - 5);
            BOOL v76 = __OFSUB__(v74, v75);
            uint64_t v68 = v74 - v75;
            char v69 = v76;
            if (v76) {
              goto LABEL_124;
            }
            unint64_t v77 = v62 - 2;
            uint64_t v78 = &v63[16 * v62 - 32];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v76 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v76) {
              goto LABEL_125;
            }
            BOOL v76 = __OFADD__(v68, v81);
            uint64_t v82 = v68 + v81;
            if (v76) {
              goto LABEL_127;
            }
            if (v82 >= v73)
            {
              uint64_t v100 = &v63[16 * v65];
              uint64_t v102 = *(void *)v100;
              uint64_t v101 = *((void *)v100 + 1);
              BOOL v76 = __OFSUB__(v101, v102);
              uint64_t v103 = v101 - v102;
              if (v76) {
                goto LABEL_133;
              }
              BOOL v93 = v68 < v103;
              goto LABEL_85;
            }
          }
          else
          {
            if (v62 != 3)
            {
              uint64_t v94 = *((void *)v15 + 4);
              uint64_t v95 = *((void *)v15 + 5);
              BOOL v76 = __OFSUB__(v95, v94);
              uint64_t v87 = v95 - v94;
              char v88 = v76;
              goto LABEL_79;
            }
            uint64_t v67 = *((void *)v15 + 4);
            uint64_t v66 = *((void *)v15 + 5);
            BOOL v76 = __OFSUB__(v66, v67);
            uint64_t v68 = v66 - v67;
            char v69 = v76;
          }
          if (v69) {
            goto LABEL_126;
          }
          unint64_t v77 = v62 - 2;
          uint64_t v83 = &v63[16 * v62 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v86 = __OFSUB__(v84, v85);
          uint64_t v87 = v84 - v85;
          char v88 = v86;
          if (v86) {
            goto LABEL_128;
          }
          uint64_t v89 = &v63[16 * v65];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v76 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v76) {
            goto LABEL_130;
          }
          if (__OFADD__(v87, v92)) {
            goto LABEL_132;
          }
          if (v87 + v92 >= v68)
          {
            BOOL v93 = v68 < v92;
LABEL_85:
            if (v93) {
              unint64_t v65 = v77;
            }
            goto LABEL_87;
          }
LABEL_79:
          if (v88) {
            goto LABEL_129;
          }
          uint64_t v96 = &v63[16 * v65];
          uint64_t v98 = *(void *)v96;
          uint64_t v97 = *((void *)v96 + 1);
          BOOL v76 = __OFSUB__(v97, v98);
          uint64_t v99 = v97 - v98;
          if (v76) {
            goto LABEL_131;
          }
          if (v99 < v87) {
            goto LABEL_96;
          }
LABEL_87:
          unint64_t v104 = v65 - 1;
          if (v65 - 1 >= v62)
          {
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
            goto LABEL_134;
          }
          if (!*v137) {
            goto LABEL_147;
          }
          uint64_t v105 = v14;
          v106 = v15;
          v107 = &v63[16 * v104];
          uint64_t v108 = *(void *)v107;
          v109 = &v63[16 * v65];
          uint64_t v110 = *((void *)v109 + 1);
          uint64_t v111 = v131;
          sub_191E537CC(*v137 + *(void *)(v130 + 72) * *(void *)v107, *v137 + *(void *)(v130 + 72) * *(void *)v109, *v137 + *(void *)(v130 + 72) * v110, v129);
          uint64_t v131 = v111;
          if (v111)
          {
            uint64_t v10 = v125;
LABEL_102:
            swift_bridgeObjectRelease();
            if (v10 >= -1)
            {
              *(void *)(v124 + 16) = 0;
              swift_bridgeObjectRelease();
              return;
            }
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            goto LABEL_144;
          }
          if (v110 < v108) {
            goto LABEL_120;
          }
          if (v65 > *((void *)v106 + 2)) {
            goto LABEL_121;
          }
          *(void *)v107 = v108;
          *(void *)&v63[16 * v104 + 8] = v110;
          unint64_t v112 = *((void *)v106 + 2);
          if (v65 >= v112) {
            goto LABEL_122;
          }
          int64_t v15 = v106;
          unint64_t v62 = v112 - 1;
          memmove(&v63[16 * v65], v109 + 16, 16 * (v112 - 1 - v65));
          *((void *)v106 + 2) = v112 - 1;
          uint64_t v14 = v105;
          if (v112 <= 2) {
            goto LABEL_96;
          }
        }
      }
      unint64_t v62 = 1;
LABEL_96:
      uint64_t v16 = v137[1];
      uint64_t v10 = v125;
      if (v14 >= v16) {
        goto LABEL_105;
      }
    }
  }
  int64_t v15 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v62 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_105:
  if (v62 >= 2)
  {
    uint64_t v113 = *v137;
    while (1)
    {
      unint64_t v114 = v62 - 2;
      if (v62 < 2) {
        break;
      }
      if (!v113) {
        goto LABEL_149;
      }
      v115 = v15;
      uint64_t v116 = *(void *)&v15[16 * v114 + 32];
      uint64_t v117 = *(void *)&v15[16 * v62 + 24];
      uint64_t v118 = v131;
      sub_191E537CC(v113 + *(void *)(v130 + 72) * v116, v113 + *(void *)(v130 + 72) * *(void *)&v15[16 * v62 + 16], v113 + *(void *)(v130 + 72) * v117, v129);
      uint64_t v131 = v118;
      if (v118) {
        goto LABEL_102;
      }
      if (v117 < v116) {
        goto LABEL_135;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v115 = sub_191DDA254();
      }
      if (v114 >= *((void *)v115 + 2)) {
        goto LABEL_136;
      }
      v119 = &v115[16 * v114 + 32];
      *(void *)v119 = v116;
      *((void *)v119 + 1) = v117;
      unint64_t v120 = *((void *)v115 + 2);
      if (v62 > v120) {
        goto LABEL_137;
      }
      memmove(&v115[16 * v62 + 16], &v115[16 * v62 + 32], 16 * (v120 - v62));
      *((void *)v115 + 2) = v120 - 1;
      unint64_t v62 = v120 - 1;
      int64_t v15 = v115;
      if (v120 <= 2) {
        goto LABEL_116;
      }
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
LABEL_116:
  swift_bridgeObjectRelease();
  if (v10 < -1) {
    goto LABEL_145;
  }
  *(void *)(v124 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_191E5357C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = a1;
  uint64_t v27 = type metadata accessor for ManualClock.WakeUp();
  uint64_t v7 = MEMORY[0x1F4188790](v27);
  uint64_t v28 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  int64_t v15 = (char *)&v22 - v14;
  uint64_t v26 = a3;
  uint64_t v23 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v30 = v16 * (v26 - 1);
    uint64_t v25 = v16;
    uint64_t v29 = v16 * v26;
    while (2)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v24;
      do
      {
        uint64_t v19 = *a4;
        sub_191E4D090(v29 + v17 + *a4, (uint64_t)v15);
        sub_191E4D090(v30 + v17 + v19, (uint64_t)v11);
        LOBYTE(v19) = sub_191EE9B20();
        sub_191E4D0F4((uint64_t)v11);
        uint64_t result = sub_191E4D0F4((uint64_t)v15);
        if ((v19 & 1) == 0) {
          break;
        }
        uint64_t v20 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v21 = v20 + v30 + v17;
        sub_191DEAC88(v20 + v29 + v17, v28);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_191DEAC88(v28, v21);
        v17 -= v25;
        ++v18;
      }
      while (v26 != v18);
      v30 += v25;
      v29 += v25;
      if (++v26 != v23) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_191E537CC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v51 = type metadata accessor for ManualClock.WakeUp();
  uint64_t v8 = MEMORY[0x1F4188790](v51);
  uint64_t v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v49 = (uint64_t)&v44 - v10;
  uint64_t v12 = *(void *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  int64_t v13 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_75;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_76;
  }
  uint64_t v17 = v13 / v12;
  uint64_t v18 = v15 / v12;
  if (v13 / v12 >= v15 / v12)
  {
    sub_191DCD54C(a2, v15 / v12, a4);
    uint64_t v28 = v18 * v12;
    unint64_t v19 = a4 + v18 * v12;
    if (v28 < 1 || a1 >= a2) {
      goto LABEL_69;
    }
    unint64_t v47 = a4;
    uint64_t v48 = -v12;
    uint64_t v45 = v12;
    unint64_t v46 = a1;
    while (1)
    {
      unint64_t v30 = a3;
      uint64_t v31 = v48;
      uint64_t v32 = v49;
      a3 += v48;
      unint64_t v33 = v19 + v48;
      sub_191E4D090(v19 + v48, v49);
      unint64_t v34 = a2 + v31;
      uint64_t v35 = a2 + v31;
      uint64_t v36 = v50;
      sub_191E4D090(v35, v50);
      char v37 = sub_191EE9B20();
      sub_191E4D0F4(v36);
      sub_191E4D0F4(v32);
      if (v37)
      {
        if (v30 >= a2 && a3 < a2)
        {
          unint64_t v40 = v46;
          a4 = v47;
          if (v30 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v34;
          uint64_t v12 = v45;
          goto LABEL_65;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v34;
      }
      else
      {
        if (v30 >= v19 && a3 < v19)
        {
          a4 = v47;
          if (v30 != v19) {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v19 = v33;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack();
        unint64_t v19 = v33;
      }
      a4 = v47;
LABEL_64:
      uint64_t v12 = v45;
      unint64_t v40 = v46;
LABEL_65:
      if (v19 <= a4 || a2 <= v40) {
        goto LABEL_69;
      }
    }
  }
  sub_191DCD54C(a1, v13 / v12, a4);
  unint64_t v19 = a4 + v17 * v12;
  if (v17 * v12 >= 1 && a2 < a3)
  {
    do
    {
      uint64_t v21 = v49;
      sub_191E4D090(a2, v49);
      uint64_t v22 = v50;
      sub_191E4D090(a4, v50);
      char v23 = sub_191EE9B20();
      sub_191E4D0F4(v22);
      sub_191E4D0F4(v21);
      if (v23)
      {
        unint64_t v24 = a2 + v12;
        if (a1 < a2 || a1 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        if (a1 < a4 || a1 >= a4 + v12)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v24 = a2;
        a4 += v12;
      }
      a1 += v12;
      BOOL v27 = a4 >= v19 || v24 >= a3;
      a2 = v24;
    }
    while (!v27);
  }
  a2 = a1;
LABEL_69:
  int64_t v42 = v19 - a4;
  if (v12 != -1 || v42 != 0x8000000000000000)
  {
    sub_191DCD54C(a4, v42 / v12, a2);
    return;
  }
LABEL_77:
  __break(1u);
}

uint64_t sub_191E53B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_191EE7690();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_191E54248((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v30 = a1;
  uint64_t v10 = sub_191EE7F90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v29 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = a2;
    uint64_t v28 = ~v11;
    uint64_t v25 = v6;
    int64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    int64_t v13 = v15;
    uint64_t v16 = *(void *)(v14 + 56);
    while (1)
    {
      v13(v8, *(void *)(v9 + 48) + v16 * v12, v5);
      sub_191E54248(&qword_1EB50E7E8, MEMORY[0x1E4F27990]);
      char v17 = sub_191EE80C0();
      (*(void (**)(char *, uint64_t))(v14 - 8))(v8, v5);
      if (v17) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v28;
      if (((*(void *)(v29 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 1;
        a2 = v27;
        return __swift_storeEnumTagSinglePayload(a2, v18, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    uint64_t v31 = *v19;
    uint64_t *v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_191E516BC(MEMORY[0x1E4F27990], (void (*)(void))sub_191E52B7C);
      uint64_t v21 = v31;
    }
    unint64_t v22 = *(void *)(v21 + 48) + v16 * v12;
    a2 = v27;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 32))(v27, v22, v5);
    sub_191E53EF4(v12);
    uint64_t *v19 = v31;
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a2, v18, 1, v5);
}

uint64_t sub_191E53E98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_191E541E4(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_191E53EF4(int64_t a1)
{
  uint64_t v3 = sub_191EE7690();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = *v1 + 56;
  uint64_t v10 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(v9 + 8 * (v11 >> 6))) != 0)
  {
    unint64_t v34 = v1;
    uint64_t v12 = ~v10;
    swift_retain();
    uint64_t v13 = sub_191EE9070();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v36 = (v13 + 1) & v12;
      int64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v14 = v4 + 16;
      uint64_t v35 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v37 = v14;
      uint64_t v38 = v16;
      char v17 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        uint64_t v18 = v9;
        int64_t v19 = v38 * v11;
        v35(v7, *(void *)(v8 + 48) + v38 * v11, v3);
        sub_191E54248((unint64_t *)&qword_1EB50E7E0, MEMORY[0x1E4F27990]);
        uint64_t v20 = sub_191EE7F90();
        (*v17)(v7, v3);
        unint64_t v21 = v20 & v12;
        if (a1 >= (uint64_t)v36)
        {
          if (v21 < v36 || a1 < (uint64_t)v21)
          {
LABEL_20:
            uint64_t v9 = v18;
            goto LABEL_24;
          }
        }
        else if (v21 < v36 && a1 < (uint64_t)v21)
        {
          goto LABEL_20;
        }
        uint64_t v23 = *(void *)(v8 + 48);
        int64_t v24 = v38 * a1;
        unint64_t v25 = v23 + v38 * a1;
        unint64_t v26 = v23 + v19 + v38;
        BOOL v27 = v38 * a1 < v19 || v25 >= v26;
        uint64_t v9 = v18;
        if (v27)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_23:
          a1 = v11;
          goto LABEL_24;
        }
        a1 = v11;
        if (v24 != v19)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v34;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v29 = *v1;
  uint64_t v30 = *(void *)(*v1 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v29 + 16) = v32;
    ++*(_DWORD *)(v29 + 36);
  }
  return result;
}

void sub_191E541E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_191E54248(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_191E54290()
{
  if (!qword_1E92F40F8)
  {
    sub_191EE73F0();
    sub_191E54248((unint64_t *)&qword_1EB50C800, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_191EE9150();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92F40F8);
    }
  }
}

void sub_191E54324(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_191EE9150();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_191E54370(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_191EE9150();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t whenFirst<A, B, C>(on:providers:provide:where:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v57 = a6;
  uint64_t v58 = a4;
  uint64_t v54 = a5;
  unint64_t v62 = a3;
  uint64_t v56 = (void *)a1;
  uint64_t v60 = a9;
  uint64_t v13 = sub_191EE8DF0();
  OUTLINED_FUNCTION_19();
  MEMORY[0x1F4188790](v14);
  uint64_t v52 = (uint64_t)&v49 - v15;
  OUTLINED_FUNCTION_1_2();
  uint64_t v51 = v16;
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v19);
  uint64_t v59 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_58();
  uint64_t v20 = sub_191EE8DF0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v22 = v21;
  MEMORY[0x1F4188790](v23);
  unint64_t v25 = (char *)&v49 - v24;
  OUTLINED_FUNCTION_1_2();
  uint64_t v61 = v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a8;
  uint64_t v53 = a10;
  uint64_t v30 = a2;
  sub_191EE8B00();
  uint64_t v31 = a7;
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, a7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v20);
    type metadata accessor for Promise();
    __swift_storeEnumTagSinglePayload(v52, 1, 1, v60);
    return Promise.__allocating_init(value:)();
  }
  else
  {
    uint64_t v33 = v60;
    uint64_t v52 = v13;
    uint64_t v34 = a7;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v29, v25, a7);
    uint64_t v35 = v58;
    if (v62(v29))
    {
      uint64_t v50 = v29;
      uint64_t v36 = v51;
      uint64_t v37 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v59, v30, v55);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      unint64_t v39 = (v18 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = (char *)swift_allocObject();
      *((void *)v40 + 2) = v34;
      *((void *)v40 + 3) = v37;
      uint64_t v41 = v53;
      *((void *)v40 + 4) = v33;
      *((void *)v40 + 5) = v41;
      uint64_t v42 = v57;
      *((void *)v40 + 6) = v54;
      *((void *)v40 + 7) = v42;
      uint64_t v43 = v34;
      uint64_t v44 = v56;
      *((void *)v40 + 8) = v56;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v40[v38], v59, v37);
      uint64_t v45 = &v40[v39];
      *(void *)uint64_t v45 = v62;
      *((void *)v45 + 1) = v35;
      swift_retain();
      id v46 = v44;
      swift_retain();
      Promise.then<A>(on:closure:)();
      uint64_t v32 = v47;
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v50, v43);
    }
    else
    {
      uint64_t v32 = sub_191E561E8((uint64_t)v56, v30, (uint64_t)v62, v35, v54, v57, a7, v55, v33);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v29, v31);
    }
  }
  return v32;
}

void when2<A, B>(on:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_11_6();
  a21 = v22;
  a22 = v23;
  uint64_t v25 = v24;
  uint64_t v46 = v26;
  uint64_t v28 = *(void *)(*(void *)v27 + 80);
  uint64_t v29 = *(void *)(*(void *)v24 + 80);
  uint64_t v30 = type metadata accessor for WhenEither2();
  type metadata accessor for Promise();
  sub_191DE2414();
  OUTLINED_FUNCTION_2_19();
  uint64_t v31 = sub_191EE8560();
  uint64_t v33 = v32;
  uint64_t v34 = OUTLINED_FUNCTION_29();
  *(void *)(v34 + 16) = v28;
  *(void *)(v34 + 24) = v29;
  uint64_t v35 = (void *)sub_191D73EB4(v28, v30);
  Promise.then<A>(on:closure:)();
  uint64_t v37 = v36;
  swift_release();

  void *v33 = v37;
  uint64_t v38 = OUTLINED_FUNCTION_29();
  *(void *)(v38 + 16) = v28;
  *(void *)(v38 + 24) = v29;
  unint64_t v39 = (void *)sub_191D73EB4(v29, v30);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_25_13();

  v33[1] = v25;
  sub_191D5E704();
  a10 = v31;
  uint64_t v40 = sub_191EE86B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  static Promise.all<A>(on:_:)(v46, (uint64_t)&a10, v40, WitnessTable);
  swift_bridgeObjectRelease();
  uint64_t v42 = OUTLINED_FUNCTION_29();
  *(void *)(v42 + 16) = v28;
  *(void *)(v42 + 24) = v29;
  uint64_t v43 = sub_191EE86B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v45 = (void *)sub_191D73EB4(v43, TupleTypeMetadata2);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_22_13();
  swift_release();

  OUTLINED_FUNCTION_8_4();
}

uint64_t sub_191E549D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v29 = (char *)&TupleTypeMetadata2 - v7;
  uint64_t v30 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v28 = (char *)&TupleTypeMetadata2 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WhenEither2();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&TupleTypeMetadata2 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&TupleTypeMetadata2 - v15;
  uint64_t v17 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&TupleTypeMetadata2 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  sub_191EE86F0();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = v16;
LABEL_6:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_191E5D7F8();
    swift_allocError();
    void *v25 = 0xD00000000000001FLL;
    v25[1] = 0x8000000191EF8470;
    swift_willThrow();
    return v20;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, a2);
  sub_191EE86F0();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a2);
    goto LABEL_6;
  }
  uint64_t v21 = v30;
  uint64_t v22 = v28;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v28, v13, a3);
  uint64_t v23 = TupleTypeMetadata2;
  type metadata accessor for Promise();
  uint64_t v24 = &v29[*(int *)(v23 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v29, v19, a2);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v22, a3);
  uint64_t v20 = Promise.__allocating_init(value:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, a3);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a2);
  return v20;
}

void when3<A, B, C>(on:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_26_12();
  uint64_t v14 = *v13;
  uint64_t v16 = *v15;
  uint64_t v18 = *v17;
  sub_191DE2414();
  swift_allocObject();
  uint64_t v35 = sub_191EE8560();
  uint64_t v20 = v19;
  uint64_t v21 = (void *)OUTLINED_FUNCTION_23();
  uint64_t v22 = *(void *)(v14 + 80);
  v21[2] = v22;
  uint64_t v23 = *(void *)(v16 + 80);
  void v21[3] = v23;
  uint64_t v24 = *(void *)(v18 + 80);
  void v21[4] = v24;
  OUTLINED_FUNCTION_24_11();
  uint64_t v25 = type metadata accessor for WhenEither3();
  uint64_t v26 = (void *)sub_191D73EB4(v22, v25);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_10_1();

  *uint64_t v20 = v10;
  uint64_t v27 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_13(v27);
  uint64_t v28 = (void *)sub_191D73EB4(v23, v25);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_10_1();

  v20[1] = v12;
  uint64_t v29 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_13(v29);
  uint64_t v30 = (void *)sub_191D73EB4(v24, v25);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_10_1();

  void v20[2] = v11;
  type metadata accessor for Promise();
  sub_191D5E704();
  when<A>(on:_:)(a10, v35);
  swift_bridgeObjectRelease();
  uint64_t v31 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_13(v31);
  uint64_t v32 = sub_191EE86B0();
  OUTLINED_FUNCTION_24_11();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v34 = (void *)sub_191D73EB4(v32, TupleTypeMetadata3);
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  OUTLINED_FUNCTION_8_4();
}

uint64_t sub_191E55014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v7 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v49 = (char *)&v44 - v8;
  uint64_t v50 = *(void *)(a4 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v51 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WhenEither3();
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v54 = a2;
  uint64_t v22 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191EE86F0();
  if (swift_getEnumCaseMultiPayload()) {
    goto LABEL_8;
  }
  uint64_t v46 = a4;
  uint64_t v47 = v22;
  a4 = v54;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v21, v54);
  sub_191EE86F0();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v15 = v18;
LABEL_7:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v24, a4);
    uint64_t v21 = v15;
LABEL_8:
    (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v12);
    sub_191E5D7F8();
    swift_allocError();
    *uint64_t v42 = 0xD00000000000001FLL;
    v42[1] = 0x8000000191EF8450;
    swift_willThrow();
    return a4;
  }
  uint64_t v25 = v51;
  uint64_t v26 = v52;
  uint64_t v27 = v18;
  uint64_t v28 = a3;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v27, a3);
  sub_191EE86F0();
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, a3);
    a4 = v54;
    goto LABEL_7;
  }
  uint64_t v29 = v26;
  uint64_t v30 = v50;
  uint64_t v31 = v46;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v15, v46);
  uint64_t v32 = TupleTypeMetadata3;
  uint64_t v33 = type metadata accessor for Promise();
  uint64_t v44 = v28;
  uint64_t v45 = v24;
  uint64_t v55 = v33;
  uint64_t v34 = &v49[*(int *)(v32 + 48)];
  uint64_t v35 = &v49[*(int *)(v32 + 64)];
  uint64_t v36 = v24;
  uint64_t v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v49, v36, v54);
  uint64_t v38 = v34;
  unint64_t v39 = v25;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v38, v25, v28);
  uint64_t v40 = v35;
  uint64_t v41 = v53;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v40, v53, v31);
  a4 = Promise.__allocating_init(value:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v31);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v39, v44);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v45, v54);
  return a4;
}

uint64_t when4<A, B, C, D>(on:_:_:_:_:)(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a3;
  uint64_t v8 = *a4;
  uint64_t v9 = *a5;
  sub_191DE2414();
  swift_allocObject();
  uint64_t v36 = sub_191EE8560();
  uint64_t v11 = v10;
  uint64_t v12 = (void *)OUTLINED_FUNCTION_2_19();
  uint64_t v13 = *(void *)(v6 + 80);
  void v12[2] = v13;
  uint64_t v14 = *(void *)(v7 + 80);
  v12[3] = v14;
  uint64_t v15 = *(void *)(v8 + 80);
  v12[4] = v15;
  uint64_t v16 = *(void *)(v9 + 80);
  void v12[5] = v16;
  uint64_t v17 = type metadata accessor for WhenEither4();
  uint64_t v18 = (void *)sub_191D73EB4(v13, v17);
  Promise.then<A>(on:closure:)();
  uint64_t v20 = v19;
  swift_release();

  *uint64_t v11 = v20;
  uint64_t v21 = (void *)OUTLINED_FUNCTION_2_19();
  OUTLINED_FUNCTION_7_25(v21);
  uint64_t v22 = (void *)sub_191D73EB4(v14, v17);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_10_1();

  v11[1] = a3;
  uint64_t v23 = (void *)OUTLINED_FUNCTION_2_19();
  OUTLINED_FUNCTION_7_25(v23);
  uint64_t v24 = (void *)sub_191D73EB4(v15, v17);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_10_1();

  void v11[2] = a4;
  uint64_t v25 = (void *)OUTLINED_FUNCTION_2_19();
  OUTLINED_FUNCTION_7_25(v25);
  uint64_t v26 = (void *)sub_191D73EB4(v16, v17);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_10_1();

  v11[3] = a5;
  type metadata accessor for Promise();
  sub_191D5E704();
  when<A>(on:_:)(a1, v36);
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)OUTLINED_FUNCTION_2_19();
  OUTLINED_FUNCTION_7_25(v27);
  uint64_t v28 = sub_191EE86B0();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v30 = (void *)sub_191D73EB4(v28, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  uint64_t v32 = v31;
  swift_release();
  swift_release();

  return v32;
}

uint64_t sub_191E5587C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E55924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E559C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E55A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E55B18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a3;
  uint64_t v74 = a1;
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v9 = MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v60 = (char *)&v54 - v10;
  uint64_t v61 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v62 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = *(void *)(a4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v64 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v66 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a2;
  uint64_t v71 = v7;
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  uint64_t v16 = type metadata accessor for WhenEither4();
  char v69 = *(char **)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v54 - v27;
  uint64_t v67 = a2;
  uint64_t v68 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = (void *)*v74;
  sub_191EE86F0();
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v31 = v69;
LABEL_12:
    (*((void (**)(char *, uint64_t))v31 + 1))(v28, v16);
    sub_191E5D7F8();
    swift_allocError();
    *uint64_t v52 = 0xD00000000000001FLL;
    v52[1] = 0x8000000191EF8430;
    swift_willThrow();
    return v16;
  }
  uint64_t v56 = a5;
  uint64_t v57 = v19;
  uint64_t v32 = v67;
  uint64_t v33 = v68;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
  uint64_t v58 = v30;
  v34(v30, v28, v67);
  sub_191EE86F0();
  uint64_t v35 = v33;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v50 = v58;
    uint64_t v31 = v69;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v35 + 8))(v50, v32);
    uint64_t v28 = v25;
    goto LABEL_12;
  }
  uint64_t v36 = v65;
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v66, v25, v7);
  sub_191EE86F0();
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v25 = v22;
    uint64_t v51 = v66;
    uint64_t v50 = v58;
    uint64_t v31 = v69;
LABEL_10:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v51, v7);
    goto LABEL_11;
  }
  uint64_t v55 = v7;
  uint64_t v38 = v63;
  uint64_t v37 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v64, v22, a4);
  unint64_t v39 = v57;
  sub_191EE86F0();
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, a4);
    uint64_t v51 = v66;
    uint64_t v35 = v68;
    uint64_t v31 = v69;
    uint64_t v50 = v58;
    uint64_t v25 = v39;
    uint64_t v7 = v55;
    goto LABEL_10;
  }
  uint64_t v40 = v61;
  uint64_t v41 = v39;
  uint64_t v42 = v37;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v62, v41, v56);
  uint64_t v43 = (int *)TupleTypeMetadata;
  uint64_t v74 = (void *)type metadata accessor for Promise();
  uint64_t v44 = v32;
  uint64_t v45 = &v60[v43[12]];
  uint64_t v57 = &v60[v43[16]];
  char v69 = &v60[v43[20]];
  uint64_t v46 = v68;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v60, v58, v44);
  uint64_t v47 = v55;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v45, v66, v55);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v57, v42, a4);
  uint64_t v48 = v62;
  uint64_t v49 = v56;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v69, v62, v56);
  uint64_t v16 = Promise.__allocating_init(value:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v48, v49);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v64, a4);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v66, v47);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v58, v67);
  return v16;
}

uint64_t sub_191E561E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v11 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v17 = (char *)&v21 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, a8);
  sub_191DB7578();
  sub_191EE8B50();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = whenFirst<A, B, C>(on:providers:provide:where:)(v21, v17, v22, v23, v24, v25, v26, AssociatedTypeWitness, a9, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
  return v19;
}

uint64_t sub_191E563D4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v20 = a7;
  uint64_t v21 = a8;
  uint64_t v16 = sub_191EE8DF0();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v20 - v17;
  if ((a2(a1) & 1) == 0) {
    return sub_191E561E8(a4, a5, a6, v20, (uint64_t)a2, a3, v21, a9, a10);
  }
  type metadata accessor for Promise();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 16))(v18, a1, a10);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, a10);
  return Promise.__allocating_init(value:)();
}

uint64_t sub_191E5652C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_1_2();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 72) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v9, v8);
}

uint64_t sub_191E565F4(uint64_t a1)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80);
  uint64_t v3 = (uint64_t *)(v1 + ((*(void *)(*(void *)(*(void *)(v1 + 24) - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_191E563D4(a1, *(uint64_t (**)(uint64_t))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), v1 + v2, *v3, v3[1], *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t type metadata accessor for WhenEither2()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t whenSome<A>(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Promise();
  sub_191EE86B0();
  type metadata accessor for Result();
  type metadata accessor for Promise();
  swift_getWitnessTable();
  sub_191D6E030();
  uint64_t v12 = v5;
  uint64_t v6 = sub_191EE86B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  static Promise.all<A>(on:_:)(a1, (uint64_t)&v12, v6, WitnessTable);
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = a3;
  uint64_t v8 = sub_191EE86B0();
  sub_191EE86B0();
  sub_191E5979C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = (void *)sub_191D73EB4(v8, TupleTypeMetadata2);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_22_13();
  swift_release();

  return TupleTypeMetadata2;
}

void sub_191E56880(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v4 = type metadata accessor for Result();
  uint64_t v5 = (void *)sub_191D73EB4(a1, v4);
  Promise.then<A>(on:closure:)();
  swift_release();

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  uint64_t v8 = (void *)sub_191D73EB4(v4, v7);
  uint64_t v9 = Promise.recover(on:closure:)((uint64_t)v8, (uint64_t)sub_191E5D7DC, v6);
  swift_release();
  swift_release();

  *a2 = v9;
}

uint64_t sub_191E56994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return swift_storeEnumTagMultiPayload();
}

id sub_191E56A18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for Result();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_191E56A70()
{
  sub_191EE7DA0();
  type metadata accessor for Result();
  sub_191EE86B0();
  sub_191EE86B0();
  sub_191E5979C();
  swift_getTupleTypeMetadata2();
  swift_getWitnessTable();
  sub_191EE8430();
  swift_getWitnessTable();
  if ((sub_191EE8B30() & 1) != 0 && *(void *)(v2 + 16))
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(v2 + 16))
    {
      id v1 = *(id *)(v2 + 32);
      swift_bridgeObjectRelease();
      return swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for Promise();
    return Promise.__allocating_init(value:)();
  }
  return result;
}

void sub_191E56C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = type metadata accessor for Result();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (id *)((char *)v20 - v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v20 - v13, a2, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v16 = *v14;
    id v17 = *v14;
    sub_191D9392C();
    uint64_t v18 = *(void *)(*(void *)(a1 + 8) + 16);
    sub_191D93D04(v18);
    uint64_t v19 = *(void *)(a1 + 8);
    *(void *)(v19 + 16) = v18 + 1;
    *(void *)(v19 + 8 * v18 + 32) = v16;

    *(void *)(a1 + 8) = v19;
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v6 + 32))(v11, v14, a3);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, a3);
    sub_191EE86B0();
    sub_191EE8630();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, a3);
  }
}

uint64_t whenSome<A, B>(on:_:_:)(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a3;
  sub_191DE2414();
  OUTLINED_FUNCTION_2_19();
  uint64_t v6 = sub_191EE8560();
  uint64_t v8 = v7;
  uint64_t v9 = OUTLINED_FUNCTION_29();
  uint64_t v10 = *(void *)(v4 + 80);
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = *(void *)(v5 + 80);
  *(void *)(v9 + 24) = v11;
  OUTLINED_FUNCTION_58();
  uint64_t v12 = type metadata accessor for WhenEither2();
  uint64_t v13 = (void *)sub_191D73EB4(v10, v12);
  Promise.then<A>(on:closure:)();
  uint64_t v15 = v14;
  swift_release();

  *uint64_t v8 = v15;
  uint64_t v16 = OUTLINED_FUNCTION_29();
  *(void *)(v16 + 16) = v10;
  *(void *)(v16 + 24) = v11;
  id v17 = (void *)sub_191D73EB4(v11, v12);
  Promise.then<A>(on:closure:)();
  uint64_t v19 = v18;
  swift_release();

  v8[1] = v19;
  type metadata accessor for Promise();
  sub_191D5E704();
  whenSome<A>(on:_:)(a1, v6, v12);
  swift_bridgeObjectRelease();
  uint64_t v20 = OUTLINED_FUNCTION_29();
  *(void *)(v20 + 16) = v10;
  *(void *)(v20 + 24) = v11;
  sub_191EE86B0();
  sub_191E5979C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_191EE8DF0();
  sub_191EE8DF0();
  OUTLINED_FUNCTION_58();
  uint64_t v22 = swift_getTupleTypeMetadata2();
  uint64_t v23 = (void *)sub_191D73EB4(TupleTypeMetadata2, v22);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_22_13();
  swift_release();

  return v22;
}

uint64_t sub_191E570A8()
{
  OUTLINED_FUNCTION_18_14();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1_35();
  v0();
  type metadata accessor for WhenEither2();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E5711C()
{
  OUTLINED_FUNCTION_18_14();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1_35();
  v0();
  type metadata accessor for WhenEither2();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E5718C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  v29[0] = sub_191EE8DF0();
  uint64_t v33 = *(void *)(v29[0] - 8);
  MEMORY[0x1F4188790](v29[0]);
  uint64_t v6 = (char *)v29 - v5;
  uint64_t v36 = sub_191EE8DF0();
  uint64_t v7 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v9 = (char *)v29 - v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v35 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v31 = (char *)v29 - v14;
  uint64_t v15 = *a1;
  uint64_t v34 = type metadata accessor for Promise();
  uint64_t v39 = v15;
  uint64_t v16 = a2;
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, a2);
  id v17 = v6;
  uint64_t v18 = v32;
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v32);
  uint64_t v19 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v29[1] = v7 + 32;
  uint64_t v30 = v20;
  v20(v13, v9, v36);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  uint64_t v22 = v29[0];
  v21(v19, v17, v29[0]);
  uint64_t v37 = v16;
  uint64_t v38 = v18;
  type metadata accessor for WhenEither2();
  sub_191EE86B0();
  swift_getWitnessTable();
  uint64_t v23 = v31;
  sub_191EE8440();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, TupleTypeMetadata2);
  uint64_t v24 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v25 = v23;
  uint64_t v26 = &v23[v24];
  uint64_t v27 = &v13[v24];
  v30(v13, v25, v36);
  v21(v27, v26, v22);
  return Promise.__allocating_init(value:)();
}

uint64_t sub_191E57508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v32 = a1;
  uint64_t v8 = sub_191EE8DF0();
  uint64_t v9 = sub_191EE8DF0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = type metadata accessor for WhenEither2();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v31 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v31 - v14, v31, v13);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v18 = a5;
  uint64_t v19 = a5 + *(int *)(TupleTypeMetadata2 + 48);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a4 - 8) + 32))(v19, v15, a4);
    uint64_t v20 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v21 = &v12[v20];
    uint64_t v31 = v19;
    uint64_t v22 = v32 + v20;
    uint64_t v23 = *(void *)(v8 - 8);
    (*(void (**)(char *))(v23 + 16))(v12);
    uint64_t v24 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v21, v22, v9);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v18, v12, v8);
    __swift_storeEnumTagSinglePayload(v31, 0, 1, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v21, v9);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v18, v15, a3);
    __swift_storeEnumTagSinglePayload(v18, 0, 1, a3);
    uint64_t v26 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v27 = &v12[v26];
    uint64_t v28 = v32 + v26;
    uint64_t v29 = *(void *)(v8 - 8);
    (*(void (**)(char *))(v29 + 16))(v12);
    uint64_t v30 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v27, v28, v9);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v19, v27, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v8);
  }
}

void whenSome3<A, B, C>(on:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_26_12();
  uint64_t v14 = *v13;
  uint64_t v16 = *v15;
  uint64_t v18 = *v17;
  sub_191DE2414();
  swift_allocObject();
  uint64_t v35 = sub_191EE8560();
  uint64_t v20 = v19;
  uint64_t v21 = (void *)OUTLINED_FUNCTION_23();
  uint64_t v22 = *(void *)(v14 + 80);
  v21[2] = v22;
  uint64_t v23 = *(void *)(v16 + 80);
  void v21[3] = v23;
  uint64_t v24 = *(void *)(v18 + 80);
  void v21[4] = v24;
  uint64_t v25 = type metadata accessor for WhenEither3();
  uint64_t v26 = (void *)sub_191D73EB4(v22, v25);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_25_13();

  *uint64_t v20 = v10;
  uint64_t v27 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_17_13(v27);
  uint64_t v28 = (void *)sub_191D73EB4(v23, v25);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_25_13();

  v20[1] = v12;
  uint64_t v29 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_17_13(v29);
  uint64_t v30 = (void *)sub_191D73EB4(v24, v25);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_25_13();

  void v20[2] = v11;
  type metadata accessor for Promise();
  sub_191D5E704();
  whenSome<A>(on:_:)(a10, v35, v25);
  swift_bridgeObjectRelease();
  uint64_t v31 = (void *)OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_17_13(v31);
  sub_191EE86B0();
  sub_191E5979C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_191EE8DF0();
  sub_191EE8DF0();
  sub_191EE8DF0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v34 = (void *)sub_191D73EB4(TupleTypeMetadata2, TupleTypeMetadata3);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_22_13();
  swift_release();

  OUTLINED_FUNCTION_8_4();
}

uint64_t sub_191E57B98()
{
  OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1_35();
  v0();
  OUTLINED_FUNCTION_4_35();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E57C00()
{
  OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1_35();
  v0();
  OUTLINED_FUNCTION_4_35();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E57C64()
{
  OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1_35();
  v0();
  OUTLINED_FUNCTION_4_35();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191E57CCC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a1;
  uint64_t v40 = a4;
  uint64_t v45 = sub_191EE8DF0();
  uint64_t v47 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v39 = (uint64_t)&v33 - v6;
  uint64_t v34 = a3;
  uint64_t v44 = sub_191EE8DF0();
  uint64_t v46 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v33 = (char *)&v33 - v7;
  uint64_t v35 = a2;
  uint64_t v43 = sub_191EE8DF0();
  uint64_t v9 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v11 = (char *)&v33 - v10;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v41 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v33 - v16;
  uint64_t v18 = *v42;
  uint64_t v42 = (uint64_t *)type metadata accessor for Promise();
  uint64_t v51 = v18;
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, a2);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, a3);
  uint64_t v20 = v39;
  uint64_t v19 = v40;
  __swift_storeEnumTagSinglePayload(v39, 1, 1, v40);
  uint64_t v21 = &v15[*(int *)(TupleTypeMetadata3 + 48)];
  uint64_t v22 = &v15[*(int *)(TupleTypeMetadata3 + 64)];
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v37 = v9 + 32;
  uint64_t v38 = v23;
  v23(v15, v11, v43);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v46 += 32;
  uint64_t v36 = v24;
  v24(v21, v33, v44);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
  v47 += 32;
  v25(v22, v20, v45);
  uint64_t v48 = v35;
  uint64_t v49 = v34;
  uint64_t v50 = v19;
  type metadata accessor for WhenEither3();
  sub_191EE86B0();
  swift_getWitnessTable();
  sub_191EE8440();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, TupleTypeMetadata3);
  uint64_t v26 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v27 = &v17[v26];
  uint64_t v28 = *(int *)(TupleTypeMetadata3 + 64);
  uint64_t v29 = &v17[v28];
  uint64_t v30 = &v15[v26];
  uint64_t v31 = &v15[v28];
  v38(v15, v17, v43);
  v36(v30, v27, v44);
  v25(v31, (uint64_t)v29, v45);
  return Promise.__allocating_init(value:)();
}

uint64_t sub_191E58140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v92 = a6;
  uint64_t v93 = a1;
  uint64_t v10 = sub_191EE8DF0();
  uint64_t v94 = sub_191EE8DF0();
  uint64_t v95 = sub_191EE8DF0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v12 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v91 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v76 - v14;
  uint64_t v16 = a5;
  uint64_t v17 = type metadata accessor for WhenEither3();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v76 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v76 - v18, a2, v17);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v40 = v92;
    uint64_t v85 = (char *)(v92 + *(int *)(TupleTypeMetadata3 + 48));
    uint64_t v87 = (char *)(v92 + *(int *)(TupleTypeMetadata3 + 64));
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v92, v19, a3);
    __swift_storeEnumTagSinglePayload(v40, 0, 1, a3);
    uint64_t v41 = *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v42 = &v15[v41];
    uint64_t v43 = *(int *)(TupleTypeMetadata3 + 64);
    char v88 = &v15[v43];
    uint64_t v44 = v93 + v41;
    uint64_t v92 = v93 + v43;
    uint64_t v86 = *(void *)(v10 - 8);
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
    uint64_t v83 = (char *)v44;
    uint64_t v84 = v45;
    v45(v15, v93, v10);
    uint64_t v46 = v94;
    uint64_t v47 = *(void *)(v94 - 8);
    uint64_t v90 = v10;
    uint64_t v48 = v47;
    uint64_t v82 = *(void *)(v47 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v82)(v42, v44, v94);
    uint64_t v49 = *(void *)(v95 - 8);
    uint64_t v89 = v15;
    uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
    v81(v88, v92, v95);
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v85, v42, v46);
    uint64_t v50 = v91;
    uint64_t v51 = &v91[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v52 = &v91[*(int *)(TupleTypeMetadata3 + 64)];
    v84(v91, v93, v90);
    ((void (*)(char *, char *, uint64_t))v82)(v51, v83, v46);
    uint64_t v53 = v95;
    v81(v52, v92, v95);
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v87, v52, v53);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v46);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v86 + 8);
    uint64_t v54 = v50;
    uint64_t v55 = v90;
    v37(v54, v90);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v88, v53);
    uint64_t v38 = v89;
    uint64_t v39 = v55;
    return ((uint64_t (*)(char *, uint64_t))v37)(v38, v39);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v83 = (char *)(v92 + *(int *)(TupleTypeMetadata3 + 48));
    uint64_t v22 = v92;
    (*(void (**)(void))(*(void *)(a4 - 8) + 32))();
    uint64_t v23 = *(int *)(TupleTypeMetadata3 + 64);
    uint64_t v86 = v22 + v23;
    uint64_t v24 = *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v25 = &v15[v24];
    uint64_t v85 = &v15[v24];
    uint64_t v87 = &v15[v23];
    uint64_t v26 = v93 + v24;
    char v88 = (char *)(v93 + v23);
    uint64_t v27 = *(void *)(v10 - 8);
    uint64_t v82 = v27;
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    uint64_t v80 = (void (*)(char *, uint64_t, uint64_t))(v93 + v24);
    uint64_t v81 = v28;
    v28(v15, v93, v10);
    uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v94 - 8);
    uint64_t v79 = (void (*)(char *, uint64_t, uint64_t))*((void *)v84 + 2);
    v79(v25, v26, v94);
    uint64_t v29 = *(void *)(v95 - 8);
    uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    v78(v87, v88, v95);
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v92, v15, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, a4);
    uint64_t v30 = v91;
    uint64_t v31 = &v91[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v32 = &v91[*(int *)(TupleTypeMetadata3 + 64)];
    v81(v91, v93, v10);
    uint64_t v33 = v94;
    v79(v31, (uint64_t)v80, v94);
    uint64_t v34 = v95;
    v78(v32, v88, v95);
    uint64_t v35 = v32;
    uint64_t v36 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v86, v35, v34);
    uint64_t v37 = (void (*)(char *, uint64_t))*((void *)v84 + 1);
    v37(v31, v33);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v30, v10);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v87, v36);
    uint64_t v38 = v85;
    uint64_t v39 = v33;
    return ((uint64_t (*)(char *, uint64_t))v37)(v38, v39);
  }
  uint64_t v57 = v92;
  uint64_t v86 = v92 + *(int *)(TupleTypeMetadata3 + 64);
  uint64_t v87 = (char *)v16;
  (*(void (**)(void))(*(void *)(v16 - 8) + 32))();
  uint64_t v58 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v59 = &v15[v58];
  uint64_t v84 = (void (*)(char *, uint64_t, uint64_t))(v57 + v58);
  uint64_t v85 = &v15[v58];
  uint64_t v60 = *(int *)(TupleTypeMetadata3 + 64);
  uint64_t v61 = (uint64_t)&v15[v60];
  unint64_t v62 = v15;
  uint64_t v89 = v15;
  uint64_t v90 = v10;
  uint64_t v63 = v93;
  uint64_t v64 = (void (*)(char *, uint64_t, uint64_t))(v93 + v58);
  char v88 = (char *)(v93 + v60);
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v82 = v65;
  uint64_t v83 = (char *)v61;
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
  uint64_t v79 = v64;
  uint64_t v80 = v66;
  v66(v62, v93, v10);
  uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v94 - 8);
  uint64_t v78 = (void (*)(char *, char *, uint64_t))*((void *)v81 + 2);
  v78(v59, (char *)v64, v94);
  uint64_t v67 = *(void *)(v95 - 8);
  unint64_t v77 = *(void (**)(uint64_t, char *, uint64_t))(v67 + 16);
  v77(v61, v88, v95);
  uint64_t v68 = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v92, v89, v90);
  char v69 = v91;
  uint64_t v70 = &v91[*(int *)(TupleTypeMetadata3 + 48)];
  uint64_t v71 = &v91[*(int *)(TupleTypeMetadata3 + 64)];
  v80(v91, v63, v68);
  uint64_t v72 = v94;
  v78(v70, (char *)v79, v94);
  uint64_t v73 = v95;
  v77((uint64_t)v71, v88, v95);
  uint64_t v74 = v81;
  (*((void (**)(void *, char *, uint64_t))v81 + 4))(v84, v70, v72);
  __swift_storeEnumTagSinglePayload(v86, 0, 1, (uint64_t)v87);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v67 + 8);
  v75(v71, v73);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v69, v68);
  v75(v83, v73);
  return (*((uint64_t (**)(char *, uint64_t))v74 + 1))(v85, v72);
}

uint64_t whenSome<A, B>(_:transform:)()
{
  OUTLINED_FUNCTION_3();
  v0[8] = v1;
  v0[9] = v2;
  v0[6] = v3;
  v0[7] = v4;
  v0[5] = v5;
  OUTLINED_FUNCTION_1_2();
  v0[10] = v6;
  v0[11] = swift_task_alloc();
  v0[12] = swift_task_alloc();
  sub_191D5EB0C();
  uint64_t v7 = sub_191EE9AA0();
  v0[13] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v0[14] = v8;
  v0[15] = *(void *)(v8 + 64);
  v0[16] = swift_task_alloc();
  v0[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191E58BF8, 0, 0);
}

uint64_t sub_191E58BF8()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  *(void *)(v0 + 16) = *(void *)(v0 + 40);
  uint64_t v3 = OUTLINED_FUNCTION_2_19();
  *(void *)(v0 + 144) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 64);
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v4;
  sub_191EE86B0();
  swift_getWitnessTable();
  *uint64_t v4 = v0;
  v4[1] = sub_191E58D30;
  return Sequence<>.concurrentMap<A>(_:)();
}

uint64_t sub_191E58D30()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4();
  *uint64_t v2 = v1;
  *(void *)(v4 + 160) = v3;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_191E58E20, 0, 0);
}

uint64_t sub_191E58E20()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[13];
  uint64_t v3 = sub_191EE7DA0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v4 = sub_191EE8530();
  swift_bridgeObjectRelease();
  uint64_t v28 = v4;
  if (v4 != MEMORY[0x192FE7810](v1, v2))
  {
    uint64_t v6 = v0[14];
    uint64_t v26 = v0[15];
    id v27 = 0;
    uint64_t v7 = v0[10];
    uint64_t v8 = (void (**)(uint64_t, void, uint64_t))(v7 + 32);
    uint64_t v9 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v10 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    while (1)
    {
      char v11 = sub_191EE85E0();
      sub_191EE8570();
      if (v11)
      {
        (*(void (**)(void, unint64_t, void))(v6 + 16))(v0[17], v0[20]+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v4, v0[13]);
      }
      else
      {
        uint64_t result = sub_191EE91C0();
        if (v26 != 8)
        {
          __break(1u);
          return result;
        }
        v0[3] = result;
        OUTLINED_FUNCTION_1_35();
        v22();
        swift_unknownObjectRelease();
      }
      uint64_t v12 = v0[20];
      uint64_t v14 = v0[16];
      uint64_t v13 = v0[17];
      uint64_t v15 = v0[13];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x192FE7830](&v28, v12, v15);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v14, v13, v15);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v17 = (id *)v0[16];
      if (EnumCaseMultiPayload == 1)
      {

        id v27 = *v17;
      }
      else
      {
        uint64_t v19 = v0[11];
        uint64_t v18 = v0[12];
        uint64_t v20 = v0[9];
        (*v8)(v18, v0[16], v20);
        (*v9)(v19, v18, v20);
        sub_191EE86B0();
        sub_191EE8630();
        (*v10)(v18, v20);
      }
      uint64_t v4 = v28;
      if (v4 == MEMORY[0x192FE7810](v0[20], v0[13]))
      {
        uint64_t v5 = v27;
        goto LABEL_13;
      }
    }
  }
  uint64_t v5 = 0;
LABEL_13:
  swift_bridgeObjectRelease();
  v0[4] = v3;
  sub_191EE86B0();
  swift_getWitnessTable();
  if (sub_191EE8B30())
  {
    if (v5)
    {
      id v23 = v5;
      swift_bridgeObjectRelease();
      swift_willThrow();

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_8_1();
      return v24();
    }
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(uint64_t))v0[1];
  return v25(v3);
}

uint64_t sub_191E591E0(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6[2] = a1;
  v6[3] = a6;
  v6[4] = *(void *)(a6 - 8);
  uint64_t v9 = swift_task_alloc();
  void v6[5] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v10 = (void *)swift_task_alloc();
  v6[6] = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_191E59324;
  return v12(v9, a2);
}

uint64_t sub_191E59324()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_6();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_4();
  *uint64_t v3 = v2;
  *(void *)(v4 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_191E594B0;
  }
  else {
    uint64_t v5 = sub_191E59408;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_191E59408()
{
  OUTLINED_FUNCTION_3();
  (*(void (**)(void, void, void))(v0[4] + 32))(v0[2], v0[5], v0[3]);
  sub_191D5EB0C();
  sub_191EE9AA0();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v1();
}

uint64_t sub_191E594B0()
{
  OUTLINED_FUNCTION_3();
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  sub_191D5EB0C();
  sub_191EE9AA0();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_1();
  return v1();
}

uint64_t sub_191E59544()
{
  return OUTLINED_FUNCTION_1_5(v0, 32);
}

uint64_t sub_191E59550()
{
  return sub_191E570A8();
}

uint64_t sub_191E5956C()
{
  return OUTLINED_FUNCTION_1_5(v0, 32);
}

uint64_t sub_191E59578()
{
  return sub_191E5711C();
}

uint64_t sub_191E59594()
{
  return OUTLINED_FUNCTION_1_5(v0, 32);
}

uint64_t sub_191E595A0(uint64_t *a1)
{
  return sub_191E549D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_191E595BC()
{
  return OUTLINED_FUNCTION_1_5(v0, 40);
}

uint64_t sub_191E595C8()
{
  return sub_191E57B98();
}

uint64_t type metadata accessor for WhenEither3()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E595FC()
{
  return OUTLINED_FUNCTION_1_5(v0, 40);
}

uint64_t sub_191E59608()
{
  return sub_191E57C00();
}

uint64_t sub_191E59624()
{
  return OUTLINED_FUNCTION_1_5(v0, 40);
}

uint64_t sub_191E59630()
{
  return sub_191E57C64();
}

uint64_t sub_191E5964C()
{
  return OUTLINED_FUNCTION_1_5(v0, 40);
}

uint64_t sub_191E59658()
{
  OUTLINED_FUNCTION_13_20();
  return sub_191E55014(v0, v1, v2, v3);
}

uint64_t sub_191E59674()
{
  return OUTLINED_FUNCTION_1_5(v0, 48);
}

uint64_t sub_191E59680()
{
  OUTLINED_FUNCTION_14_17();
  return sub_191E5587C(v0, v1, v2);
}

uint64_t type metadata accessor for WhenEither4()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191E596B4()
{
  return OUTLINED_FUNCTION_1_5(v0, 48);
}

uint64_t sub_191E596C0()
{
  OUTLINED_FUNCTION_14_17();
  return sub_191E55924(v0, v1, v2);
}

uint64_t sub_191E596DC()
{
  return OUTLINED_FUNCTION_1_5(v0, 48);
}

uint64_t sub_191E596E8()
{
  OUTLINED_FUNCTION_14_17();
  return sub_191E559C8(v0, v1, v2);
}

uint64_t sub_191E59704()
{
  return OUTLINED_FUNCTION_1_5(v0, 48);
}

uint64_t sub_191E59710()
{
  OUTLINED_FUNCTION_14_17();
  return sub_191E55A70(v0, v1, v2);
}

uint64_t sub_191E5972C()
{
  return OUTLINED_FUNCTION_1_5(v0, 48);
}

uint64_t sub_191E59738()
{
  OUTLINED_FUNCTION_14_17();
  return sub_191E55B18(v0, v1, v2, v3, v4);
}

void sub_191E59754(uint64_t *a1@<X8>)
{
  sub_191E56880(*(void *)(v1 + 16), a1);
}

uint64_t sub_191E59774()
{
  return OUTLINED_FUNCTION_1_5(v0, 24);
}

uint64_t sub_191E59780()
{
  return sub_191E56A70();
}

void sub_191E5979C()
{
  if (!qword_1EB50B208)
  {
    sub_191D5EB0C();
    unint64_t v0 = sub_191EE86B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB50B208);
    }
  }
}

uint64_t sub_191E597F4()
{
  return OUTLINED_FUNCTION_1_5(v0, 32);
}

uint64_t sub_191E59800()
{
  return OUTLINED_FUNCTION_1_5(v0, 32);
}

uint64_t sub_191E5980C()
{
  return OUTLINED_FUNCTION_1_5(v0, 32);
}

uint64_t sub_191E59818(uint64_t *a1)
{
  return sub_191E5718C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_191E59834()
{
  return OUTLINED_FUNCTION_1_5(v0, 40);
}

uint64_t sub_191E59840()
{
  return OUTLINED_FUNCTION_1_5(v0, 40);
}

uint64_t sub_191E5984C()
{
  return OUTLINED_FUNCTION_1_5(v0, 40);
}

uint64_t sub_191E59858()
{
  return OUTLINED_FUNCTION_1_5(v0, 40);
}

uint64_t sub_191E59864()
{
  OUTLINED_FUNCTION_13_20();
  return sub_191E57CCC(v0, v1, v2, v3);
}

uint64_t sub_191E59880()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191E598B8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = (int *)v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_191D88378;
  return sub_191E591E0(a1, a2, v9, v8, v6, v7);
}

ValueMetadata *type metadata accessor for WhenError()
{
  return &type metadata for WhenError;
}

uint64_t sub_191E59990()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

void *sub_191E59ADC(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(a3[3] - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    unint64_t v6 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = a3[4];
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void *)(v7 - 8);
  if (*(void *)(v9 + 64) <= v6) {
    unint64_t v10 = v6;
  }
  else {
    unint64_t v10 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  uint64_t v11 = *(void *)(v8 - 8);
  if (*(void *)(v11 + 64) <= v10) {
    unint64_t v12 = v10;
  }
  else {
    unint64_t v12 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  int v13 = *(_DWORD *)(v11 + 80);
  uint64_t v14 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v9 + 80) | v13);
  if (v14 <= 7
    && v12 + 1 <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v9 + 80) | v13) & 0x100000) == 0)
  {
    unsigned int v18 = a2[v12];
    if (v18 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v19 = v12;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_27;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_27:
          int v21 = (v20 | ((v18 - 4) << (8 * v12))) + 4;
          unsigned int v22 = v20 + 4;
          if (v12 >= 4) {
            unsigned int v18 = v22;
          }
          else {
            unsigned int v18 = v21;
          }
          break;
        default:
          break;
      }
    }
    switch(v18)
    {
      case 1u:
        (*(void (**)(void *))(v5 + 16))(a1);
        char v23 = 1;
        goto LABEL_35;
      case 2u:
        (*(void (**)(void *))(v9 + 16))(a1);
        char v23 = 2;
        goto LABEL_35;
      case 3u:
        (*(void (**)(void *))(v11 + 16))(a1);
        char v23 = 3;
LABEL_35:
        *((unsigned char *)a1 + v12) = v23;
        break;
      default:
        (*(void (**)(void *))(v4 + 16))(a1);
        *((unsigned char *)a1 + v12) = 0;
        break;
    }
  }
  else
  {
    uint64_t v17 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_191E59DC8(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *(void *)(a2[2] - 8);
  uint64_t v3 = *(void *)(a2[3] - 8);
  if (*(void *)(v3 + 64) <= *(void *)(v2 + 64)) {
    unint64_t v4 = *(void *)(*(void *)(a2[2] - 8) + 64);
  }
  else {
    unint64_t v4 = *(void *)(v3 + 64);
  }
  uint64_t v5 = *(void *)(a2[4] - 8);
  if (*(void *)(v5 + 64) > v4) {
    unint64_t v4 = *(void *)(v5 + 64);
  }
  unint64_t v6 = *(void *)(*(void *)(a2[5] - 8) + 64);
  if (v6 <= v4) {
    unint64_t v6 = v4;
  }
  unsigned int v7 = a1[v6];
  unsigned int v8 = v7 - 4;
  if (v7 >= 4)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_17;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_17:
        int v11 = (v10 | (v8 << (8 * v6))) + 4;
        unsigned int v7 = v10 + 4;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  switch(v7)
  {
    case 1u:
      uint64_t v2 = *(void *)(a2[3] - 8);
      break;
    case 2u:
      uint64_t v2 = *(void *)(a2[4] - 8);
      break;
    case 3u:
      uint64_t v2 = *(void *)(a2[5] - 8);
      break;
    default:
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_191E59FF4(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(a3[3] - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    unint64_t v6 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = *(void *)(a3[4] - 8);
  if (*(void *)(v7 + 64) > v6) {
    unint64_t v6 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a3[5] - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 4;
  if (v10 >= 4)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_18:
        int v14 = (v13 | (v11 << (8 * v9))) + 4;
        unsigned int v10 = v13 + 4;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  char v15 = 0;
  switch(v10)
  {
    case 1u:
      char v15 = 1;
      uint64_t v4 = *(void *)(a3[3] - 8);
      break;
    case 2u:
      char v15 = 2;
      uint64_t v4 = *(void *)(a3[4] - 8);
      break;
    case 3u:
      char v15 = 3;
      uint64_t v4 = *(void *)(a3[5] - 8);
      break;
    default:
      break;
  }
  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *(unsigned char *)(a1 + v9) = v15;
  return a1;
}

unsigned __int8 *sub_191E5A264(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v6 = a3[3];
    uint64_t v7 = *(void *)(v5 - 8);
    unint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v6 - 8);
    if (*(void *)(v9 + 64) > v8) {
      unint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = *(void *)(a3[4] - 8);
    if (*(void *)(v11 + 64) > v8) {
      unint64_t v8 = *(void *)(v11 + 64);
    }
    uint64_t v12 = *(void *)(v10 - 8);
    if (*(void *)(v12 + 64) <= v8) {
      unint64_t v13 = v8;
    }
    else {
      unint64_t v13 = *(void *)(*(void *)(v10 - 8) + 64);
    }
    unsigned int v14 = a1[v13];
    unsigned int v15 = v14 - 4;
    if (v14 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          goto LABEL_18;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          goto LABEL_18;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_18;
        case 4:
          int v17 = *(_DWORD *)a1;
LABEL_18:
          int v18 = (v17 | (v15 << (8 * v13))) + 4;
          unsigned int v14 = v17 + 4;
          if (v13 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v19 = *(void *)(a3[2] - 8);
    uint64_t v20 = a3[2];
    switch(v14)
    {
      case 1u:
        uint64_t v19 = *(void *)(v6 - 8);
        uint64_t v20 = a3[3];
        break;
      case 2u:
        uint64_t v19 = *(void *)(a3[4] - 8);
        uint64_t v20 = a3[4];
        break;
      case 3u:
        uint64_t v19 = *(void *)(v10 - 8);
        uint64_t v20 = a3[5];
        break;
      default:
        break;
    }
    uint64_t v29 = a3[4];
    (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(a1, v20);
    unsigned int v21 = a2[v13];
    unsigned int v22 = v21 - 4;
    if (v21 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v23 = v13;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          goto LABEL_33;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v24 = *(_DWORD *)a2;
LABEL_33:
          int v25 = (v24 | (v22 << (8 * v13))) + 4;
          unsigned int v21 = v24 + 4;
          if (v13 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v26 = v9;
    char v27 = 0;
    switch(v21)
    {
      case 1u:
        char v27 = 1;
        uint64_t v7 = v26;
        uint64_t v5 = v6;
        break;
      case 2u:
        char v27 = 2;
        uint64_t v7 = v11;
        uint64_t v5 = v29;
        break;
      case 3u:
        char v27 = 3;
        uint64_t v7 = v12;
        uint64_t v5 = v10;
        break;
      default:
        break;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    a1[v13] = v27;
  }
  return a1;
}

uint64_t sub_191E5A600(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(a3[3] - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    unint64_t v6 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = *(void *)(a3[4] - 8);
  if (*(void *)(v7 + 64) > v6) {
    unint64_t v6 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a3[5] - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 4;
  if (v10 >= 4)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_18:
        int v14 = (v13 | (v11 << (8 * v9))) + 4;
        unsigned int v10 = v13 + 4;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  char v15 = 0;
  switch(v10)
  {
    case 1u:
      char v15 = 1;
      uint64_t v4 = *(void *)(a3[3] - 8);
      break;
    case 2u:
      char v15 = 2;
      uint64_t v4 = *(void *)(a3[4] - 8);
      break;
    case 3u:
      char v15 = 3;
      uint64_t v4 = *(void *)(a3[5] - 8);
      break;
    default:
      break;
  }
  (*(void (**)(uint64_t))(v4 + 32))(a1);
  *(unsigned char *)(a1 + v9) = v15;
  return a1;
}

unsigned __int8 *sub_191E5A870(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v6 = a3[3];
    uint64_t v7 = *(void *)(v5 - 8);
    unint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v6 - 8);
    if (*(void *)(v9 + 64) > v8) {
      unint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = *(void *)(a3[4] - 8);
    if (*(void *)(v11 + 64) > v8) {
      unint64_t v8 = *(void *)(v11 + 64);
    }
    uint64_t v12 = *(void *)(v10 - 8);
    if (*(void *)(v12 + 64) <= v8) {
      unint64_t v13 = v8;
    }
    else {
      unint64_t v13 = *(void *)(*(void *)(v10 - 8) + 64);
    }
    unsigned int v14 = a1[v13];
    unsigned int v15 = v14 - 4;
    if (v14 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          goto LABEL_18;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          goto LABEL_18;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_18;
        case 4:
          int v17 = *(_DWORD *)a1;
LABEL_18:
          int v18 = (v17 | (v15 << (8 * v13))) + 4;
          unsigned int v14 = v17 + 4;
          if (v13 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v19 = *(void *)(a3[2] - 8);
    uint64_t v20 = a3[2];
    switch(v14)
    {
      case 1u:
        uint64_t v19 = *(void *)(v6 - 8);
        uint64_t v20 = a3[3];
        break;
      case 2u:
        uint64_t v19 = *(void *)(a3[4] - 8);
        uint64_t v20 = a3[4];
        break;
      case 3u:
        uint64_t v19 = *(void *)(v10 - 8);
        uint64_t v20 = a3[5];
        break;
      default:
        break;
    }
    uint64_t v29 = a3[4];
    (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(a1, v20);
    unsigned int v21 = a2[v13];
    unsigned int v22 = v21 - 4;
    if (v21 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v23 = v13;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          goto LABEL_33;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v24 = *(_DWORD *)a2;
LABEL_33:
          int v25 = (v24 | (v22 << (8 * v13))) + 4;
          unsigned int v21 = v24 + 4;
          if (v13 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v26 = v9;
    char v27 = 0;
    switch(v21)
    {
      case 1u:
        char v27 = 1;
        uint64_t v7 = v26;
        uint64_t v5 = v6;
        break;
      case 2u:
        char v27 = 2;
        uint64_t v7 = v11;
        uint64_t v5 = v29;
        break;
      case 3u:
        char v27 = 3;
        uint64_t v7 = v12;
        uint64_t v5 = v10;
        break;
      default:
        break;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    a1[v13] = v27;
  }
  return a1;
}

uint64_t sub_191E5AC0C(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  unint64_t v3 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v4 = *(void *)(a3[4] - 8);
  if (*(void *)(*(void *)(a3[3] - 8) + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(a3[3] - 8) + 64);
  }
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  unint64_t v5 = *(void *)(*(void *)(a3[5] - 8) + 64);
  if (v5 <= v3) {
    unint64_t v5 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_26;
  }
  unint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 252) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v10 < 2)
    {
LABEL_26:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 4) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_26;
  }
LABEL_18:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 253;
}

void sub_191E5AD90(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  unint64_t v5 = *(void *)(*(void *)(a4[2] - 8) + 64);
  if (*(void *)(*(void *)(a4[3] - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(a4[3] - 8) + 64);
  }
  uint64_t v6 = *(void *)(a4[4] - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a4[5] - 8);
  if (*(void *)(v7 + 64) > v5) {
    unint64_t v5 = *(void *)(v7 + 64);
  }
  size_t v8 = v5 + 1;
  char v9 = 8 * (v5 + 1);
  if (a3 < 0xFD)
  {
    int v10 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << v9) - 252) >> v9) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v11 = a2 - 253;
    if (v8 < 4)
    {
      int v12 = (v11 >> v9) + 1;
      if (v5 != -1)
      {
        int v14 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v8] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v12;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x191E5AFA4);
      case 4:
        *(_DWORD *)&a1[v8] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_191E5AFCC(unsigned __int8 *a1, void *a2)
{
  unint64_t v2 = *(void *)(*(void *)(a2[2] - 8) + 64);
  uint64_t v3 = *(void *)(a2[3] - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  uint64_t v4 = *(void *)(a2[4] - 8);
  if (*(void *)(v4 + 64) > v2) {
    unint64_t v2 = *(void *)(v4 + 64);
  }
  unint64_t v5 = *(void *)(*(void *)(a2[5] - 8) + 64);
  if (v5 <= v2) {
    unint64_t v5 = v2;
  }
  uint64_t v6 = a1[v5];
  int v7 = v6 - 4;
  if (v6 >= 4)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_16;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_16:
        unsigned int v10 = (v9 | (v7 << (8 * v5))) + 4;
        LODWORD(v6) = v9 + 4;
        if (v5 >= 4) {
          uint64_t v6 = v6;
        }
        else {
          uint64_t v6 = v10;
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

void sub_191E5B0D4(unsigned char *a1, unsigned int a2, void *a3)
{
  if (a2 > 3)
  {
    size_t v5 = *(void *)(*(void *)(a3[2] - 8) + 64);
    uint64_t v6 = *(void *)(a3[3] - 8);
    if (*(void *)(v6 + 64) > v5) {
      size_t v5 = *(void *)(v6 + 64);
    }
    uint64_t v7 = *(void *)(a3[4] - 8);
    if (*(void *)(v7 + 64) > v5) {
      size_t v5 = *(void *)(v7 + 64);
    }
    uint64_t v8 = *(void *)(a3[5] - 8);
    if (*(void *)(v8 + 64) <= v5) {
      size_t v9 = v5;
    }
    else {
      size_t v9 = *(void *)(v8 + 64);
    }
    unsigned int v10 = a2 - 4;
    if (v9 < 4)
    {
      unsigned int v11 = v10 >> (8 * v9);
      int v12 = v10 & ~(-1 << (8 * v9));
      a1[v9] = v11 + 4;
      bzero(a1, v9);
      if (v9 == 3)
      {
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
      }
      else if (v9 == 2)
      {
        *(_WORD *)a1 = v12;
      }
      else
      {
        *a1 = v12;
      }
    }
    else
    {
      a1[v9] = 4;
      bzero(a1, v9);
      *(_DWORD *)a1 = v10;
    }
  }
  else
  {
    unint64_t v4 = *(void *)(*(void *)(a3[2] - 8) + 64);
    if (*(void *)(*(void *)(a3[3] - 8) + 64) > v4) {
      unint64_t v4 = *(void *)(*(void *)(a3[3] - 8) + 64);
    }
    if (*(void *)(*(void *)(a3[4] - 8) + 64) > v4) {
      unint64_t v4 = *(void *)(*(void *)(a3[4] - 8) + 64);
    }
    if (*(void *)(*(void *)(a3[5] - 8) + 64) > v4) {
      unint64_t v4 = *(void *)(*(void *)(a3[5] - 8) + 64);
    }
    a1[v4] = a2;
  }
}

uint64_t sub_191E5B280()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

void *sub_191E5B38C(void *a1, unsigned __int8 *a2, void *a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = a3[4];
  uint64_t v6 = *(void *)(a3[3] - 8);
  if (*(void *)(v6 + 64) <= *(void *)(v4 + 64)) {
    unint64_t v7 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v7 = *(void *)(v6 + 64);
  }
  uint64_t v8 = *(void *)(v5 - 8);
  if (*(void *)(v8 + 64) <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  uint64_t v10 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v8 + 80));
  if (v10 <= 7
    && v9 + 1 <= 0x18
    && ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) == 0)
  {
    unsigned int v14 = a2[v9];
    unsigned int v15 = v14 - 3;
    if (v14 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v16 = v9;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_24;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_24;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_24;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_24:
          int v18 = (v17 | (v15 << (8 * v9))) + 3;
          unsigned int v14 = v17 + 3;
          if (v9 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 2)
    {
      (*(void (**)(void *))(v8 + 16))(a1);
      char v19 = 2;
    }
    else
    {
      if (v14 != 1)
      {
        (*(void (**)(void *))(v4 + 16))(a1);
        *((unsigned char *)v3 + v9) = 0;
        return v3;
      }
      (*(void (**)(void *))(v6 + 16))(a1);
      char v19 = 1;
    }
    *((unsigned char *)v3 + v9) = v19;
  }
  else
  {
    uint64_t v13 = *(void *)a2;
    *unint64_t v3 = *(void *)a2;
    unint64_t v3 = (void *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  return v3;
}

uint64_t sub_191E5B5DC(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *(void *)(a2[2] - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(a2[3] - 8);
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  unint64_t v5 = *(void *)(*(void *)(a2[4] - 8) + 64);
  if (v5 <= v3) {
    unint64_t v5 = v3;
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_14;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_14:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6)
  {
    if (v6 == 2) {
      uint64_t v2 = *(void *)(a2[4] - 8);
    }
    else {
      uint64_t v2 = *(void *)(a2[3] - 8);
    }
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_191E5B784(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(a3[3] - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a3[4] - 8);
  if (*(void *)(v7 + 64) <= v5) {
    unint64_t v8 = v5;
  }
  else {
    unint64_t v8 = *(void *)(v7 + 64);
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 3;
  if (v9 >= 3)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_15;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_15:
        int v13 = (v12 | (v10 << (8 * v8))) + 3;
        unsigned int v9 = v12 + 3;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9)
  {
    if (v9 == 2)
    {
      char v14 = 2;
      uint64_t v4 = *(void *)(a3[4] - 8);
    }
    else
    {
      char v14 = 1;
      uint64_t v4 = *(void *)(a3[3] - 8);
    }
  }
  else
  {
    char v14 = 0;
  }
  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *(unsigned char *)(a1 + v8) = v14;
  return a1;
}

unsigned __int8 *sub_191E5B96C(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v6 = a3[3];
    uint64_t v7 = *(void *)(v5 - 8);
    unint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v6 - 8);
    if (*(void *)(v9 + 64) > v8) {
      unint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    uint64_t v10 = a3[4];
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(void *)(v11 + 64) <= v8) {
      unint64_t v12 = v8;
    }
    else {
      unint64_t v12 = *(void *)(v11 + 64);
    }
    unsigned int v13 = a1[v12];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          goto LABEL_16;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v16 = *(_DWORD *)a1;
LABEL_16:
          int v17 = (v16 | (v14 << (8 * v12))) + 3;
          unsigned int v13 = v16 + 3;
          if (v12 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13)
    {
      if (v13 == 2)
      {
        uint64_t v18 = *(void *)(a3[4] - 8);
        uint64_t v19 = a3[4];
      }
      else
      {
        uint64_t v18 = *(void *)(v6 - 8);
        uint64_t v19 = a3[3];
      }
    }
    else
    {
      uint64_t v18 = *(void *)(a3[2] - 8);
      uint64_t v19 = a3[2];
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v18 + 8))(a1, v19);
    unsigned int v20 = a2[v12];
    unsigned int v21 = v20 - 3;
    if (v20 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v22 = v12;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          goto LABEL_32;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v23 = *(_DWORD *)a2;
LABEL_32:
          int v24 = (v23 | (v21 << (8 * v12))) + 3;
          unsigned int v20 = v23 + 3;
          if (v12 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v20)
    {
      if (v20 == 2)
      {
        char v25 = 2;
        uint64_t v7 = v11;
        uint64_t v5 = v10;
      }
      else
      {
        char v25 = 1;
        uint64_t v7 = v9;
        uint64_t v5 = v6;
      }
    }
    else
    {
      char v25 = 0;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    a1[v12] = v25;
  }
  return a1;
}

uint64_t sub_191E5BC48(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(a3[3] - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a3[4] - 8);
  if (*(void *)(v7 + 64) <= v5) {
    unint64_t v8 = v5;
  }
  else {
    unint64_t v8 = *(void *)(v7 + 64);
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 3;
  if (v9 >= 3)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_15;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_15:
        int v13 = (v12 | (v10 << (8 * v8))) + 3;
        unsigned int v9 = v12 + 3;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9)
  {
    if (v9 == 2)
    {
      char v14 = 2;
      uint64_t v4 = *(void *)(a3[4] - 8);
    }
    else
    {
      char v14 = 1;
      uint64_t v4 = *(void *)(a3[3] - 8);
    }
  }
  else
  {
    char v14 = 0;
  }
  (*(void (**)(uint64_t))(v4 + 32))(a1);
  *(unsigned char *)(a1 + v8) = v14;
  return a1;
}

unsigned __int8 *sub_191E5BE30(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v6 = a3[3];
    uint64_t v7 = *(void *)(v5 - 8);
    unint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v6 - 8);
    if (*(void *)(v9 + 64) > v8) {
      unint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    uint64_t v10 = a3[4];
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(void *)(v11 + 64) <= v8) {
      unint64_t v12 = v8;
    }
    else {
      unint64_t v12 = *(void *)(v11 + 64);
    }
    unsigned int v13 = a1[v12];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          goto LABEL_16;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v16 = *(_DWORD *)a1;
LABEL_16:
          int v17 = (v16 | (v14 << (8 * v12))) + 3;
          unsigned int v13 = v16 + 3;
          if (v12 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13)
    {
      if (v13 == 2)
      {
        uint64_t v18 = *(void *)(a3[4] - 8);
        uint64_t v19 = a3[4];
      }
      else
      {
        uint64_t v18 = *(void *)(v6 - 8);
        uint64_t v19 = a3[3];
      }
    }
    else
    {
      uint64_t v18 = *(void *)(a3[2] - 8);
      uint64_t v19 = a3[2];
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v18 + 8))(a1, v19);
    unsigned int v20 = a2[v12];
    unsigned int v21 = v20 - 3;
    if (v20 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v22 = v12;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          goto LABEL_32;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v23 = *(_DWORD *)a2;
LABEL_32:
          int v24 = (v23 | (v21 << (8 * v12))) + 3;
          unsigned int v20 = v23 + 3;
          if (v12 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v20)
    {
      if (v20 == 2)
      {
        char v25 = 2;
        uint64_t v7 = v11;
        uint64_t v5 = v10;
      }
      else
      {
        char v25 = 1;
        uint64_t v7 = v9;
        uint64_t v5 = v6;
      }
    }
    else
    {
      char v25 = 0;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    a1[v12] = v25;
  }
  return a1;
}

uint64_t sub_191E5C10C(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  unint64_t v3 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v4 = *(void *)(a3[3] - 8);
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  unint64_t v5 = *(void *)(*(void *)(a3[4] - 8) + 64);
  if (v5 <= v3) {
    unint64_t v5 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  unint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v10 < 2)
    {
LABEL_24:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 3) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_24;
  }
LABEL_16:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 254;
}

void sub_191E5C270(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  unint64_t v5 = *(void *)(*(void *)(a4[2] - 8) + 64);
  if (*(void *)(*(void *)(a4[3] - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(a4[3] - 8) + 64);
  }
  uint64_t v6 = *(void *)(a4[4] - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  size_t v7 = v5 + 1;
  char v8 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    int v9 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v10 = a2 - 254;
    if (v7 < 4)
    {
      int v11 = (v10 >> v8) + 1;
      if (v5 != -1)
      {
        int v13 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v7] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v11;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x191E5C464);
      case 4:
        *(_DWORD *)&a1[v7] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_191E5C48C(unsigned __int8 *a1, void *a2)
{
  unint64_t v2 = *(void *)(*(void *)(a2[2] - 8) + 64);
  uint64_t v3 = *(void *)(a2[3] - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  unint64_t v4 = *(void *)(*(void *)(a2[4] - 8) + 64);
  if (v4 <= v2) {
    unint64_t v4 = v2;
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_14;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_14:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 3;
        LODWORD(v5) = v8 + 3;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_191E5C574(unsigned char *a1, unsigned int a2, void *a3)
{
  if (a2 > 2)
  {
    size_t v5 = *(void *)(*(void *)(a3[2] - 8) + 64);
    uint64_t v6 = *(void *)(a3[3] - 8);
    if (*(void *)(v6 + 64) > v5) {
      size_t v5 = *(void *)(v6 + 64);
    }
    uint64_t v7 = *(void *)(a3[4] - 8);
    if (*(void *)(v7 + 64) <= v5) {
      size_t v8 = v5;
    }
    else {
      size_t v8 = *(void *)(v7 + 64);
    }
    unsigned int v9 = a2 - 3;
    if (v8 < 4)
    {
      unsigned int v10 = v9 >> (8 * v8);
      int v11 = v9 & ~(-1 << (8 * v8));
      a1[v8] = v10 + 3;
      bzero(a1, v8);
      if (v8 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if (v8 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
    else
    {
      a1[v8] = 3;
      bzero(a1, v8);
      *(_DWORD *)a1 = v9;
    }
  }
  else
  {
    unint64_t v4 = *(void *)(*(void *)(a3[2] - 8) + 64);
    if (*(void *)(*(void *)(a3[3] - 8) + 64) > v4) {
      unint64_t v4 = *(void *)(*(void *)(a3[3] - 8) + 64);
    }
    if (*(void *)(*(void *)(a3[4] - 8) + 64) > v4) {
      unint64_t v4 = *(void *)(*(void *)(a3[4] - 8) + 64);
    }
    a1[v4] = a2;
  }
}

uint64_t sub_191E5C6DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_191E5C7A8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_191E5C97C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_191E5CAB8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_191E5CC2C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_191E5CE6C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_191E5CFE0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_191E5D220(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_191E5D364(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x191E5D538);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_191E5D560(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_191E5D628(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t sub_191E5D750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_191E58140(a1, a2, v3[2], v3[3], v3[4], a3);
}

uint64_t sub_191E5D770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_191E57508(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

void sub_191E5D78C(uint64_t a1, uint64_t a2)
{
  sub_191E56C0C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_191E5D7A8()
{
  return OUTLINED_FUNCTION_1_5(v0, 24);
}

uint64_t sub_191E5D7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191E56994(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_191E5D7D0()
{
  return OUTLINED_FUNCTION_1_5(v0, 24);
}

id sub_191E5D7DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_191E56A18(a1, a2);
}

unint64_t sub_191E5D7F8()
{
  unint64_t result = qword_1E92F4120;
  if (!qword_1E92F4120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F4120);
  }
  return result;
}

uint64_t sub_191E5D844()
{
  return sub_191E59550();
}

uint64_t sub_191E5D85C()
{
  return sub_191E59578();
}

uint64_t sub_191E5D874()
{
  return sub_191E595C8();
}

uint64_t sub_191E5D88C()
{
  return sub_191E59608();
}

uint64_t sub_191E5D8A4()
{
  return sub_191E59630();
}

uint64_t type metadata accessor for AnyURLHandlerProcessor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for AnyAsyncURLHandler()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E5D900()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_191E5D93C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  return a1;
}

void *sub_191E5D980(void *a1, void *a2)
{
  *a1 = *a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191E5D9E0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t sub_191E5DA28(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191E5DA68(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AnyURLHandler()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E5DAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = OUTLINED_FUNCTION_1_51(a1, a2, a3);
  v4(v3);
  uint64_t v5 = OUTLINED_FUNCTION_4_36();
  sub_191E5DD90(v5, v6, v7, v8);
  OUTLINED_FUNCTION_3_36();
  uint64_t v9 = OUTLINED_FUNCTION_5_33();
  v10(v9);
  return OUTLINED_FUNCTION_6_27();
}

uint64_t sub_191E5DB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = OUTLINED_FUNCTION_1_51(a1, a2, a3);
  v4(v3);
  uint64_t v5 = OUTLINED_FUNCTION_4_36();
  sub_191E5DECC(v5, v6, v7, v8);
  OUTLINED_FUNCTION_3_36();
  uint64_t v9 = OUTLINED_FUNCTION_5_33();
  v10(v9);
  return OUTLINED_FUNCTION_6_27();
}

uint64_t sub_191E5DB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = OUTLINED_FUNCTION_1_51(a1, a2, a3);
  v4(v3);
  uint64_t v5 = OUTLINED_FUNCTION_4_36();
  sub_191E5DC5C(v5, v6, v7, v8);
  OUTLINED_FUNCTION_3_36();
  uint64_t v9 = OUTLINED_FUNCTION_5_33();
  v10(v9);
  return OUTLINED_FUNCTION_6_27();
}

uint64_t sub_191E5DBE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_191E5DC08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 1;
}

uint64_t sub_191E5DC34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t (*sub_191E5DC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unsigned int v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_191E5E004;
}

uint64_t sub_191E5DD88(uint64_t a1, uint64_t a2)
{
  return sub_191E5DBE0(a1, a2, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t (*sub_191E5DD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unsigned int v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_191E5E06C;
}

uint64_t sub_191E5DEBC()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_191E5DEC4(uint64_t a1, uint64_t a2)
{
  return sub_191E5DC08(a1, a2, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t (*sub_191E5DECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unsigned int v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_191E5E038;
}

uint64_t sub_191E5DFF8(uint64_t a1, uint64_t a2)
{
  return sub_191E5DC34(a1, a2, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_191E5E004()
{
  OUTLINED_FUNCTION_0_39();
  OUTLINED_FUNCTION_2_54();
  return v0();
}

uint64_t sub_191E5E038()
{
  OUTLINED_FUNCTION_0_39();
  OUTLINED_FUNCTION_2_54();
  return v0();
}

uint64_t sub_191E5E06C()
{
  OUTLINED_FUNCTION_0_39();
  OUTLINED_FUNCTION_2_54();
  return v0() & 1;
}

uint64_t static NetworkResponseOperationError.== infix(_:_:)(uint64_t *a1, id *a2)
{
  uint64_t v2 = *a1;
  id v3 = *a2;
  if (!*a1)
  {
    if (v3) {
      goto LABEL_12;
    }
    uint64_t v2 = 0;
LABEL_10:
    char v4 = 1;
    goto LABEL_13;
  }
  if (v2 == 1)
  {
    if (v3 != (id)1) {
      goto LABEL_12;
    }
    uint64_t v2 = 1;
    goto LABEL_10;
  }
  if (v2 != 2)
  {
    if ((unint64_t)v3 >= 3)
    {
      sub_191DF42F4();
      sub_191E5E17C(v3);
      sub_191E5E17C((id)v2);
      char v4 = sub_191EE8DB0();
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v3 != (id)2)
  {
LABEL_12:
    sub_191E5E17C(*a2);
    sub_191E5E17C((id)v2);
    char v4 = 0;
    goto LABEL_13;
  }
  char v4 = 1;
  uint64_t v2 = 2;
LABEL_13:
  sub_191E5E18C((id)v2);
  sub_191E5E18C(v3);
  return v4 & 1;
}

id sub_191E5E17C(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

void sub_191E5E18C(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

uint64_t NetworkOperationResult.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191E5E1AC(v1, a1);
}

uint64_t sub_191E5E1AC(uint64_t a1, uint64_t a2)
{
  sub_191DA54D8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *NetworkOperationResult.response.getter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 28));
  id v3 = v2;
  return v2;
}

uint64_t NetworkOperationResult.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 32));
}

uint64_t sub_191E5E274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_191E60930(a1, a5);
  uint64_t v9 = type metadata accessor for NetworkOperationResult();
  *(void *)(a5 + *(int *)(v9 + 28)) = a2;
  uint64_t v10 = a5 + *(int *)(v9 + 32);
  unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);

  return v11(v10, a3, a4);
}

uint64_t NetworkResponseOperation.underlyingOperationID.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + qword_1EB50CF00) + qword_1EB50D8F8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t NetworkResponseOperation.eventHandler.getter()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + qword_1EB50CF00) + qword_1EB50D3E0);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_191D771A4(*v1);
  return v2;
}

uint64_t sub_191E5E3C0@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t result = NetworkResponseOperation.eventHandler.getter();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_191E60928;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t sub_191E5E430(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_191E60920;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_191D771A4(v1);
  return NetworkResponseOperation.eventHandler.setter((uint64_t)v4, v3);
}

uint64_t NetworkResponseOperation.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(*(void *)(v2 + qword_1EB50CF00) + qword_1EB50D3E0);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_191D771B4(v6);
}

uint64_t (*NetworkResponseOperation.eventHandler.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = NetworkResponseOperation.eventHandler.getter();
  a1[1] = v3;
  return sub_191E5E578;
}

uint64_t sub_191E5E578(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if ((a2 & 1) == 0) {
    return NetworkResponseOperation.eventHandler.setter(*a1, v3);
  }
  sub_191D771A4(*a1);
  NetworkResponseOperation.eventHandler.setter(v2, v3);

  return sub_191D771B4(v2);
}

id NetworkResponseOperation.__allocating_init(requestAccessor:networkProxy:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return NetworkResponseOperation.init(requestAccessor:networkProxy:)(a1, a2);
}

id NetworkResponseOperation.init(requestAccessor:networkProxy:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for NetworkOperation();
  sub_191E3CFD0(a2, (uint64_t)v10);
  id v5 = v2;
  uint64_t v6 = swift_retain();
  *(void *)&v5[qword_1EB50CF00] = NetworkOperation.__allocating_init(requestAccessor:networkProxy:)(v6, (uint64_t)v10);

  v9.receiver = v5;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  swift_release();
  sub_191E3CC54(a2);
  return v7;
}

void NetworkResponseOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)()
{
}

void NetworkResponseOperation.init(requestAccessor:networkProxy:earliestBeginDate:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_191EE7640();
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_7_26();
  type metadata accessor for NetworkOperation();
  sub_191E3CFD0(v5, (uint64_t)v15);
  OUTLINED_FUNCTION_15_0();
  v11();
  int v12 = v0;
  uint64_t v13 = swift_retain();
  *(void *)&v12[qword_1EB50CF00] = NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)(v13, (uint64_t)v15, v1);

  v14.receiver = v12;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, sel_init);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v7);
  sub_191E3CC54(v5);
  OUTLINED_FUNCTION_8_25();
  OUTLINED_FUNCTION_36();
}

void NetworkResponseOperation.__allocating_init(request:networkProxy:)()
{
  id v1 = objc_allocWithZone(v0);
  NetworkResponseOperation.init(request:networkProxy:)();
}

void NetworkResponseOperation.init(request:networkProxy:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_191EE6F60();
  OUTLINED_FUNCTION_1_2();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  unsigned int v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NetworkOperation();
  OUTLINED_FUNCTION_15_0();
  v12();
  sub_191E3CFD0(v2, (uint64_t)v15);
  uint64_t v13 = v0;
  *(void *)&v13[qword_1EB50CF00] = NetworkOperation.__allocating_init(request:networkProxy:)((uint64_t)v11, (uint64_t)v15);

  v14.receiver = v13;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, sel_init);
  sub_191E3CC54(v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v6);
  OUTLINED_FUNCTION_8_25();
  OUTLINED_FUNCTION_36();
}

void NetworkResponseOperation.__allocating_init(request:networkProxy:earliestBeginDate:)()
{
}

void NetworkResponseOperation.init(request:networkProxy:earliestBeginDate:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v18 = v7;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v19 = sub_191EE7640();
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_7_26();
  uint64_t v17 = sub_191EE6F60();
  OUTLINED_FUNCTION_1_2();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_4_37();
  type metadata accessor for NetworkOperation();
  OUTLINED_FUNCTION_15_0();
  v14();
  sub_191E3CFD0(v6, (uint64_t)v22);
  OUTLINED_FUNCTION_15_0();
  v15();
  uint64_t v16 = v0;
  *(void *)&v16[qword_1EB50CF00] = NetworkOperation.__allocating_init(request:networkProxy:earliestBeginDate:)(v2, (uint64_t)v22, v1);

  v21.receiver = v16;
  v21.super_class = ObjectType;
  objc_msgSendSuper2(&v21, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v19);
  sub_191E3CC54(v6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v18, v17);
  OUTLINED_FUNCTION_8_25();
  OUTLINED_FUNCTION_36();
}

void NetworkResponseOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)()
{
}

void NetworkResponseOperation.init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = sub_191EE7640();
  OUTLINED_FUNCTION_1_2();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_4_37();
  type metadata accessor for NetworkOperation();
  sub_191E3CFD0(v6, (uint64_t)v20);
  OUTLINED_FUNCTION_15_0();
  v15();
  uint64_t v16 = v2;
  uint64_t v17 = swift_retain();
  *(void *)&v16[qword_1EB50CF00] = NetworkOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)(v17, v10, v8, (uint64_t)v20, v1);

  v19.receiver = v16;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, sel_init);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v11);
  sub_191E3CC54(v6);
  OUTLINED_FUNCTION_8_25();
  OUTLINED_FUNCTION_36();
}

void NetworkResponseOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)()
{
}

void NetworkResponseOperation.init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v1 = v0;
  uint64_t v26 = v3;
  uint64_t v27 = v2;
  uint64_t v5 = v4;
  uint64_t v28 = v6;
  uint64_t v25 = v7;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = sub_191EE7640();
  OUTLINED_FUNCTION_1_2();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_191EE73F0();
  OUTLINED_FUNCTION_1_2();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  objc_super v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NetworkOperation();
  OUTLINED_FUNCTION_15_0();
  v20();
  sub_191E3CFD0(v5, (uint64_t)v31);
  uint64_t v21 = v26;
  OUTLINED_FUNCTION_15_0();
  v22();
  uint64_t v23 = v1;
  *(void *)&v23[qword_1EB50CF00] = NetworkOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)((uint64_t)v19, v27, v28, (uint64_t)v31, (uint64_t)v13);

  v30.receiver = v23;
  v30.super_class = ObjectType;
  objc_msgSendSuper2(&v30, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v8);
  sub_191E3CC54(v5);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v25, v14);
  OUTLINED_FUNCTION_8_25();
  OUTLINED_FUNCTION_36();
}

uint64_t NetworkResponseOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = *(void *)(v5 + 240);
  v6[3] = *(void *)(v5 + 248);
  v6[4] = a1;
  void v6[5] = a2;
  swift_retain();
  sub_191E639CC((uint64_t)sub_191E5F2E4, (uint64_t)v6);

  return swift_release();
}

uint64_t sub_191E5F174(uint64_t a1, void (*a2)(char *))
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for NetworkOperationResult();
  uint64_t v4 = type metadata accessor for Result();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - v6;
  type metadata accessor for NetworkResponseOperation();
  sub_191E5F2F0(a1, v7);
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_191E5F2AC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191E5F2E4(uint64_t a1)
{
  return sub_191E5F174(a1, *(void (**)(char *))(v1 + 32));
}

uint64_t sub_191E5F2F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for NetworkOperationResult();
  uint64_t v5 = type metadata accessor for Result();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (void **)((char *)&v13 - v7);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v9((char *)&v13 - v7, a1, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v8;
    uint64_t v11 = sub_191E5F47C(*v8);

    *(void *)a2 = v11;
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    v9(a2, a1, v5);
    return (*(uint64_t (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8))(v8, v4);
  }
}

void *sub_191E5F47C(void *a1)
{
  uint64_t v1 = a1;
  id v2 = a1;
  sub_191D5EB0C();
  if (swift_dynamicCast())
  {
    sub_191E60994();
    uint64_t v1 = (void *)swift_allocError();
    *uint64_t v3 = v6;
  }
  else
  {
    id v4 = v1;
  }
  return v1;
}

id NetworkResponseOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void NetworkResponseOperation.init()()
{
}

void sub_191E5F570()
{
}

void sub_191E5F580()
{
}

id NetworkResponseOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191E5F5D0()
{
  return 16;
}

__n128 sub_191E5F5DC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void *initializeBufferWithCopyOfBuffer for NetworkResponseOperationError(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for NetworkResponseOperationError(void **a1)
{
  id v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for NetworkResponseOperationError(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for NetworkResponseOperationError(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkResponseOperationError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NetworkResponseOperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkResponseOperationError()
{
  return &type metadata for NetworkResponseOperationError;
}

void sub_191E5F7E0()
{
  sub_191DA54D8(319);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_191E5F8B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE6F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v10 = *(void *)(v7 + 64);
  }
  else {
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v11 = *(void *)(v8 - 8);
  int v12 = *(_DWORD *)(v9 + 80);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v9 + 64);
  unsigned int v15 = v12 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (((*(_DWORD *)(v7 + 80) | v12) & 0x100000) != 0
    || (((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~(unint64_t)v12)
      + v14 <= 0x18
      ? (BOOL v16 = v15 > 7)
      : (BOOL v16 = 1),
        v16))
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = v6;
    unint64_t v18 = ~(unint64_t)v12;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      memcpy(a1, a2, v10);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v17);
    }
    int v20 = (void *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void **)(((unint64_t)a2 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    BOOL v22 = *v21;
    *int v20 = *v21;
    uint64_t v23 = ((unint64_t)v20 + v13 + 8) & v18;
    uint64_t v24 = ((unint64_t)v21 + v13 + 8) & v18;
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    id v26 = v22;
    v25(v23, v24, v8);
  }
  return a1;
}

uint64_t sub_191E5FAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191EE6F60();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v4);
  uint64_t v6 = *(void *)(v4 - 8);
  if (!EnumTagSinglePayload) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v7;
  }
  uint64_t v8 = (id *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);

  uint64_t v9 = *(void *)(*(void *)(a2 + 16) - 8);
  size_t v10 = *(uint64_t (**)(unint64_t))(v9 + 8);
  unint64_t v11 = ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);

  return v10(v11);
}

void *sub_191E5FBE0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE6F60();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = v8;
  if (EnumTagSinglePayload)
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v10 = *(void *)(v8 + 64);
    }
    else {
      size_t v10 = *(void *)(v8 + 64) + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v11 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v11 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v12 = v11 + 7;
  uint64_t v13 = (void *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void **)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v15 = *v14;
  *uint64_t v13 = *v14;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = ((unint64_t)v13 + v19 + 8) & ~v19;
  uint64_t v21 = ((unint64_t)v14 + v19 + 8) & ~v19;
  id v22 = v15;
  v18(v20, v21, v16);
  return a1;
}

void *sub_191E5FD3C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE6F60();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = v9;
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v9 + 84);
    size_t v12 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v10 + 84);
    size_t v12 = *(void *)(v10 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v14 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v10 + 64) + 1;
  }
  uint64_t v15 = v14 + 7;
  uint64_t v16 = (void **)(((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void **)(((unint64_t)a2 + v15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = *v17;
  uint64_t v19 = *v16;
  *uint64_t v16 = *v17;
  id v20 = v18;

  uint64_t v21 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 24))(((unint64_t)v16 + *(unsigned __int8 *)(v21 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), ((unint64_t)v17 + *(unsigned __int8 *)(v21 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

void *sub_191E5FEFC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE6F60();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = v8;
  if (EnumTagSinglePayload)
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v10 = *(void *)(v8 + 64);
    }
    else {
      size_t v10 = *(void *)(v8 + 64) + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v11 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v11 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v12 = v11 + 7;
  size_t v13 = (void *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *size_t v13 = *v14;
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v15 + 32))(((unint64_t)v13 + *(unsigned __int8 *)(v15 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), ((unint64_t)v14 + *(unsigned __int8 *)(v15 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  return a1;
}

void *sub_191E60048(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE6F60();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = v9;
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v9 + 84);
    size_t v12 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v10 + 84);
    size_t v12 = *(void *)(v10 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v14 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v10 + 64) + 1;
  }
  uint64_t v15 = v14 + 7;
  uint64_t v16 = (void **)(((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void **)(((unint64_t)a2 + v15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = *v16;
  *uint64_t v16 = *v17;

  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 40))(((unint64_t)v16 + *(unsigned __int8 *)(v19 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)v17 + *(unsigned __int8 *)(v19 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

uint64_t sub_191E60204(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE6F60();
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11) {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v12 = v8;
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = v12;
  }
  if (v7) {
    uint64_t v14 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(v6 - 8) + 64) + 1;
  }
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v10 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 > v13)
  {
    uint64_t v17 = ((v15 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v15) + v16;
    char v18 = 8 * v17;
    if (v17 > 3) {
      goto LABEL_16;
    }
    unsigned int v20 = ((a2 - v13 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      int v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19) {
        goto LABEL_33;
      }
      goto LABEL_23;
    }
    if (v20 > 0xFF)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(unsigned __int16 *)((char *)a1 + v17)) {
        goto LABEL_33;
      }
      goto LABEL_23;
    }
    if (v20 >= 2)
    {
LABEL_16:
      int v19 = *((unsigned __int8 *)a1 + v17);
      if (!*((unsigned char *)a1 + v17)) {
        goto LABEL_33;
      }
LABEL_23:
      int v21 = (v19 - 1) << v18;
      if (v17 > 3) {
        int v21 = 0;
      }
      if (v17)
      {
        if (v17 <= 3) {
          int v22 = v17;
        }
        else {
          int v22 = 4;
        }
        switch(v22)
        {
          case 2:
            int v23 = *a1;
            break;
          case 3:
            int v23 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v23 = *(_DWORD *)a1;
            break;
          default:
            int v23 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v23 = 0;
      }
      return v13 + (v23 | v21) + 1;
    }
  }
LABEL_33:
  if (v8 == v13)
  {
    if (v7 < 2) {
      return 0;
    }
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v6);
    if (EnumTagSinglePayload >= 2) {
      return EnumTagSinglePayload - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v25 = (unint64_t *)(((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v12 > 0x7FFFFFFE)
    {
      return __swift_getEnumTagSinglePayload(((unint64_t)v25 + v15 + 8) & ~v15, v11, v9);
    }
    else
    {
      unint64_t v26 = *v25;
      if (v26 >= 0xFFFFFFFF) {
        LODWORD(v26) = -1;
      }
      if ((v26 + 1) >= 2) {
        return v26;
      }
      else {
        return 0;
      }
    }
  }
}

void sub_191E604A0(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_191EE6F60();
  int v9 = 0;
  uint64_t v10 = *(unsigned int *)(*(void *)(v8 - 8) + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  uint64_t v12 = *(void *)(a4 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  if (v11 <= v14) {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v15 = v11;
  }
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  if (v10) {
    uint64_t v17 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v17 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  size_t v19 = ((v18 + ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v18) + *(void *)(v13 + 64);
  char v20 = 8 * v19;
  if (a3 > v16)
  {
    if (v19 <= 3)
    {
      unsigned int v21 = ((a3 - v16 + ~(-1 << v20)) >> v20) + 1;
      if (HIWORD(v21))
      {
        int v9 = 4;
      }
      else if (v21 >= 0x100)
      {
        int v9 = 2;
      }
      else
      {
        int v9 = v21 > 1;
      }
    }
    else
    {
      int v9 = 1;
    }
  }
  if (v16 < a2)
  {
    unsigned int v22 = ~v16 + a2;
    if (v19 < 4)
    {
      int v23 = (v22 >> v20) + 1;
      if (v19)
      {
        int v24 = v22 & ~(-1 << v20);
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v19] = v23;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v23;
        return;
      case 3:
        goto LABEL_52;
      case 4:
        *(_DWORD *)&a1[v19] = v23;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_52:
      __break(1u);
      JUMPOUT(0x191E607A4);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (!a2) {
        return;
      }
LABEL_33:
      if (v11 == v16)
      {
        uint64_t v25 = (a2 + 1);
        uint64_t v26 = (uint64_t)a1;
        uint64_t v12 = v8;
      }
      else
      {
        uint64_t v27 = (void *)((unint64_t)&a1[v17 + 7] & 0xFFFFFFFFFFFFFFF8);
        if (v15 <= 0x7FFFFFFE)
        {
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v27 = 0;
            *(_DWORD *)uint64_t v27 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *uint64_t v27 = a2;
          }
          return;
        }
        uint64_t v26 = ((unint64_t)v27 + v18 + 8) & ~v18;
        uint64_t v25 = a2;
        uint64_t v10 = v14;
      }
      __swift_storeEnumTagSinglePayload(v26, v25, v10, v12);
      return;
  }
}

uint64_t type metadata accessor for NetworkOperationResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191E607E4()
{
  return swift_initClassMetadata2();
}

void sub_191E6082C(uint64_t a1)
{
}

uint64_t type metadata accessor for NetworkResponseOperation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for NetworkResponseOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NetworkResponseOperation);
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(requestAccessor:networkProxy:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(request:networkProxy:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(request:networkProxy:earliestBeginDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t sub_191E608E8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191E60920(uint64_t a1)
{
  return sub_191E6336C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_191E60928(uint64_t a1)
{
  return sub_191E63344(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_191E60930(uint64_t a1, uint64_t a2)
{
  sub_191DA54D8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191E60994()
{
  unint64_t result = qword_1E92F4128;
  if (!qword_1E92F4128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F4128);
  }
  return result;
}

uint64_t BridgedAssembly.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t BridgedAssembly.init(_:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t BridgedAssembly.load(in:)()
{
  objc_msgSend(*(id *)(v0 + 16), sel_loadInRegistry_, sub_191E27F20());

  return swift_unknownObjectRelease();
}

uint64_t BridgedAssembly.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t BridgedAssembly.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_191E60AD4()
{
  return BridgedAssembly.load(in:)();
}

uint64_t type metadata accessor for BridgedAssembly()
{
  return self;
}

uint64_t method lookup function for BridgedAssembly(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedAssembly);
}

uint64_t dispatch thunk of BridgedAssembly.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_191E60B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    JUMPOUT(0x191E60CA4);
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v5)
  {
    case 1uLL:
      uint64_t v9 = a2 >> 32;
      uint64_t v10 = (int)a2;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_191DD89D4(v10, a1, v9, a2, a3);
  if ((v12 & 1) == 0)
  {
    uint64_t v13 = v11;
    uint64_t v14 = 0;
    switch((int)v5)
    {
      case 0:
      case 3:
        goto LABEL_13;
      case 1:
        goto LABEL_10;
      case 2:
        goto LABEL_12;
      default:
        goto LABEL_17;
    }
  }
  switch((int)v5)
  {
    case 0:
    case 3:
      goto LABEL_14;
    case 1:
      uint64_t v13 = a2 >> 32;
LABEL_10:
      uint64_t v14 = (int)a2;
      goto LABEL_13;
    case 2:
      uint64_t v13 = *(void *)(a2 + 24);
LABEL_12:
      uint64_t v14 = *(void *)(a2 + 16);
LABEL_13:
      if (v13 < v14) {
        goto LABEL_16;
      }
LABEL_14:
      uint64_t v15 = sub_191EE74B0();
      uint64_t v17 = v16;
      uint64_t result = sub_191D76D1C(a2, a3);
      *a4 = v15;
      a4[1] = v17;
      return result;
    default:
LABEL_17:
      JUMPOUT(0);
  }
}

uint64_t JSONBridge.object.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t JSONBridge.init(object:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t JSONBridge.write(to:)()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  sub_191EE6FE0();
  swift_allocObject();
  _s13TeaFoundation16ReferenceEncoderCACycfc_0();
  uint64_t v1 = sub_191EE6FB0();
  unint64_t v3 = v2;
  uint64_t result = swift_release();
  if (!v0)
  {
    uint64_t v8 = sub_191EE7520();
    uint64_t v5 = sub_191DA8CD0((uint64_t)&v8, (uint64_t)&v9);
    unint64_t v7 = v6;
    sub_191EE7540();
    sub_191D76D1C(v5, v7);
    sub_191EE7540();
    return sub_191D76D1C(v1, v3);
  }
  return result;
}

uint64_t static JSONBridge.read(from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v12 = (char *)&v19 - v11;
  uint64_t result = (uint64_t)sub_191E1CD44();
  if (!v3)
  {
    uint64_t v14 = result;
    uint64_t v19 = v7;
    char v20 = a3;
    uint64_t v15 = *a1;
    unint64_t v16 = a1[1];
    sub_191D76FA0(*a1, v16);
    uint64_t v21 = v14;
    unint64_t v22 = v16;
    uint64_t v24 = v15;
    sub_191E60B48(v14, v15, v16, (uint64_t *)&v23);
    long long v17 = v23;
    sub_191EE6FA0();
    swift_allocObject();
    sub_191EE6F90();
    sub_191EE6F80();
    sub_191D76D1C(v17, *((unint64_t *)&v17 + 1));
    swift_release();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v18(v10, v12, a2);
    v18(v20, v10, a2);
    uint64_t result = sub_191DE09B4(v21, v24, v22, (uint64_t *)&v23);
    *(_OWORD *)a1 = v23;
  }
  return result;
}

uint64_t sub_191E61044()
{
  return JSONBridge.write(to:)();
}

uint64_t sub_191E6105C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return static JSONBridge.read(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_191E6107C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191E6110C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_191E61258(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x191E6145CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for JSONBridge()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t StringDeserializer.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t StringDeserializer.init()()
{
  return v0;
}

uint64_t StringDeserializer.deserialize(_:)()
{
  uint64_t v0 = sub_191EE8190();
  MEMORY[0x1F4188790](v0 - 8);
  sub_191EE8170();
  uint64_t result = sub_191EE8130();
  if (!v2)
  {
    sub_191E61574();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_191E61574()
{
  unint64_t result = qword_1E92F4130;
  if (!qword_1E92F4130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F4130);
  }
  return result;
}

uint64_t StringDeserializer.deinit()
{
  return v0;
}

uint64_t StringDeserializer.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_191E615D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = StringDeserializer.__allocating_init()();
  *a1 = result;
  return result;
}

uint64_t sub_191E61600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = StringDeserializer.deserialize(_:)();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t type metadata accessor for StringDeserializer()
{
  return self;
}

uint64_t method lookup function for StringDeserializer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StringDeserializer);
}

uint64_t dispatch thunk of StringDeserializer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

BOOL static BinaryDecoder.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BinaryDecoder.Error.hash(into:)()
{
  return sub_191EE9A80();
}

uint64_t BinaryDecoder.Error.hashValue.getter()
{
  return sub_191EE9A90();
}

uint64_t static BinaryDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a2;
  unint64_t v10 = a3;
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(a5 + 8);
  sub_191D76FA0(a2, a3);
  v7(&v9, a4, a5);
  return sub_191D76D1C(v9, v10);
}

uint64_t BinaryDecoder.deinit()
{
  return v0;
}

uint64_t BinaryDecoder.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_191E617B8()
{
  unint64_t result = qword_1E92F4138;
  if (!qword_1E92F4138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92F4138);
  }
  return result;
}

uint64_t type metadata accessor for BinaryDecoder()
{
  return self;
}

uint64_t method lookup function for BinaryDecoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BinaryDecoder);
}

unsigned char *storeEnumTagSinglePayload for BinaryDecoder.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191E6190CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryDecoder.Error()
{
  return &type metadata for BinaryDecoder.Error;
}

uint64_t sub_191E61944(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = sub_191EE94B0();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v4) {
      goto LABEL_12;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = MEMORY[0x192FE8380](i, v3);
    }
    else
    {
      uint64_t v7 = *(void *)(v3 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v8 = MEMORY[0x192FE9B40](v7 + 32);
    swift_unknownObjectRelease();
    if (v8 && MEMORY[0x192FE9B40](v7 + 16))
    {
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v11 = *v2;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v12) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_28:
    *uint64_t v2 = v16;
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t result = sub_191EE94B0();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_14:
  if (v12 >= 1)
  {
    for (uint64_t j = 0; j != v12; ++j)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = MEMORY[0x192FE8380](j, v11);
      }
      else
      {
        uint64_t v14 = *(void *)(v11 + 8 * j + 32);
        swift_retain();
      }
      uint64_t v15 = MEMORY[0x192FE9B40](v14 + 32);
      swift_unknownObjectRelease();
      if (v15)
      {
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v17;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_191E61BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v7 = *(void *)(a1 + 16);
  if (v7 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = sub_191EE94B0();
    uint64_t v8 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v8) {
      goto LABEL_12;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = MEMORY[0x192FE8380](i, v7);
    }
    else
    {
      uint64_t v11 = *(void *)(v7 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v12 = MEMORY[0x192FE9B40](v11 + 32);
    swift_unknownObjectRelease();
    if (v12 && MEMORY[0x192FE9B40](v11 + 16))
    {
      uint64_t v13 = *(void *)(v11 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32))(a2, a3, ObjectType, v13);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v15 = *v6;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (!((unint64_t)*v6 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v16) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_28:
    *unsigned int v6 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t result = sub_191EE94B0();
  uint64_t v16 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_14:
  if (v16 >= 1)
  {
    for (uint64_t j = 0; j != v16; ++j)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        uint64_t v18 = MEMORY[0x192FE8380](j, v15);
      }
      else
      {
        uint64_t v18 = *(void *)(v15 + 8 * j + 32);
        swift_retain();
      }
      uint64_t v19 = MEMORY[0x192FE9B40](v18 + 32);
      swift_unknownObjectRelease();
      if (v19)
      {
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v21;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_191E61E24(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = sub_191EE94B0();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v4) {
      goto LABEL_12;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = MEMORY[0x192FE8380](i, v3);
    }
    else
    {
      uint64_t v7 = *(void *)(v3 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v8 = MEMORY[0x192FE9B40](v7 + 32);
    swift_unknownObjectRelease();
    if (v8 && MEMORY[0x192FE9B40](v7 + 16))
    {
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v11 = *v2;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v12) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_28:
    *uint64_t v2 = v16;
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t result = sub_191EE94B0();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_14:
  if (v12 >= 1)
  {
    for (uint64_t j = 0; j != v12; ++j)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = MEMORY[0x192FE8380](j, v11);
      }
      else
      {
        uint64_t v14 = *(void *)(v11 + 8 * j + 32);
        swift_retain();
      }
      uint64_t v15 = MEMORY[0x192FE9B40](v14 + 32);
      swift_unknownObjectRelease();
      if (v15)
      {
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v17;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_191E62080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v7 = *(void *)(a1 + 16);
  if (v7 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = sub_191EE94B0();
    uint64_t v8 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v8) {
      goto LABEL_12;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = MEMORY[0x192FE8380](i, v7);
    }
    else
    {
      uint64_t v11 = *(void *)(v7 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v12 = MEMORY[0x192FE9B40](v11 + 32);
    swift_unknownObjectRelease();
    if (v12 && MEMORY[0x192FE9B40](v11 + 16))
    {
      uint64_t v13 = *(void *)(v11 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, a3, ObjectType, v13);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v15 = *v6;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (!((unint64_t)*v6 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v16) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_28:
    *unsigned int v6 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t result = sub_191EE94B0();
  uint64_t v16 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_14:
  if (v16 >= 1)
  {
    for (uint64_t j = 0; j != v16; ++j)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        uint64_t v18 = MEMORY[0x192FE8380](j, v15);
      }
      else
      {
        uint64_t v18 = *(void *)(v15 + 8 * j + 32);
        swift_retain();
      }
      uint64_t v19 = MEMORY[0x192FE9B40](v18 + 32);
      swift_unknownObjectRelease();
      if (v19)
      {
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v21;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_191E62304(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t result = sub_191EE94B0();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v4) {
      goto LABEL_12;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = MEMORY[0x192FE8380](i, v3);
    }
    else
    {
      uint64_t v7 = *(void *)(v3 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v8 = MEMORY[0x192FE9B40](v7 + 32);
    swift_unknownObjectRelease();
    if (v8 && MEMORY[0x192FE9B40](v7 + 16))
    {
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 72))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v11 = *v2;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v12) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_28:
    *uint64_t v2 = v16;
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t result = sub_191EE94B0();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_14:
  if (v12 >= 1)
  {
    for (uint64_t j = 0; j != v12; ++j)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = MEMORY[0x192FE8380](j, v11);
      }
      else
      {
        uint64_t v14 = *(void *)(v11 + 8 * j + 32);
        swift_retain();
      }
      uint64_t v15 = MEMORY[0x192FE9B40](v14 + 32);
      swift_unknownObjectRelease();
      if (v15)
      {
        sub_191EE92B0();
        sub_191EE92F0();
        sub_191EE9300();
        sub_191EE92C0();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v17;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t SceneStateManager.didBecomeActive(with:sourceApplication:sceneID:)()
{
  return sub_191D886EC((void (*)(void))sub_191E6262C);
}

uint64_t sub_191E625A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 16))(a3, a4, a5, a6, a7, ObjectType, a2);
}

uint64_t sub_191E6262C(uint64_t a1, uint64_t a2)
{
  return sub_191E625A4(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

Swift::Void __swiftcall SceneStateManager.willResignActive()()
{
  sub_191E61944(v0);
}

Swift::Void __swiftcall SceneStateManager.willResignActive(with:)(Swift::String with)
{
  unint64_t object = with._object;
  uint64_t countAndFlagsBits = with._countAndFlagsBits;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  sub_191E61BA0(v1, countAndFlagsBits, (uint64_t)object);
}

Swift::Void __swiftcall SceneStateManager.didEnterBackground()()
{
  sub_191E61E24(v0);
}

Swift::Void __swiftcall SceneStateManager.didEnterBackground(with:)(Swift::String with)
{
  unint64_t object = with._object;
  uint64_t countAndFlagsBits = with._countAndFlagsBits;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();

  sub_191E62080(v1, countAndFlagsBits, (uint64_t)object);
}

Swift::Void __swiftcall SceneStateManager.sceneDidDisconnect()()
{
  sub_191E62304(v0);
}

uint64_t SceneStateManager.insert(monitor:before:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = (void *)(v3 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(v3 + 16);
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_unknownObjectRetain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v7) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return SceneStateManager.add(monitor:)(a1, a3);
  }
LABEL_17:
  swift_unknownObjectRetain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  uint64_t v7 = sub_191EE94B0();
  if (!v7) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v8 = 0;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x192FE8380](v8, v6);
    }
    else
    {
      uint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
      swift_retain();
    }
    uint64_t v10 = MEMORY[0x192FE9B40](v9 + 16);
    swift_release();
    if (v10)
    {
      swift_unknownObjectRelease();
      if (v10 == a2) {
        break;
      }
    }
    uint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    ++v8;
    if (v11 == v7) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v13 = _s13TeaFoundation17DisposableMonitorCMa_0();
  swift_allocObject();
  uint64_t v14 = swift_unknownObjectRetain();
  uint64_t v15 = (void (*)(void))sub_191D5FD58(v14, a1);
  swift_beginAccess();
  if (*v5 >> 62)
  {
    swift_retain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v16 = sub_191EE94B0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_retain();
  }
  if (v16 < v8)
  {
    __break(1u);
  }
  else
  {
    sub_191DF32F8(v8, v8, v15);
    uint64_t result = swift_endAccess();
    a3[3] = v13;
    a3[4] = (uint64_t)&off_1EE2B40D0;
    *a3 = (uint64_t)v15;
  }
  return result;
}

uint64_t SceneStateManager.remove(monitor:)(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  for (; v4; uint64_t v4 = sub_191EE94B0())
  {
    for (unint64_t i = 0; ; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x192FE8380](i, v3);
      }
      else
      {
        uint64_t v6 = *(void *)(v3 + 8 * i + 32);
        swift_retain();
      }
      unint64_t v7 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      uint64_t v8 = MEMORY[0x192FE9B40](v6 + 16);
      if (v8)
      {
        uint64_t v9 = v8;
        swift_unknownObjectRelease();
        if (v9 == a1)
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_191DEA3FC(i);
          swift_endAccess();
          swift_release();
          return swift_release();
        }
      }
      swift_release();
      if (v7 == v4) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_14:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t SceneStateManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SceneStateManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_191E62AE0()
{
  return SceneStateManager.didBecomeActive(with:sourceApplication:sceneID:)();
}

void sub_191E62B04()
{
}

void sub_191E62B28(uint64_t a1, uint64_t a2)
{
}

void sub_191E62B4C()
{
}

void sub_191E62B70(uint64_t a1, uint64_t a2)
{
}

void sub_191E62B94()
{
}

uint64_t sub_191E62BB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return SceneStateManager.insert(monitor:before:)(a1, a2, a3);
}

uint64_t sub_191E62BDC(uint64_t a1)
{
  return SceneStateManager.remove(monitor:)(a1);
}

uint64_t dispatch thunk of SceneStateManagerType.didBecomeActive(with:sourceApplication:sceneID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of SceneStateManagerType.willResignActive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SceneStateManagerType.willResignActive(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SceneStateManagerType.didEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SceneStateManagerType.didEnterBackground(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of SceneStateManagerType.sceneDidDisconnect()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of SceneStateManagerType.insert(monitor:before:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 88))();
}

uint64_t dispatch thunk of SceneStateManagerType.remove(monitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t method lookup function for SceneStateManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SceneStateManager);
}

uint64_t initializeWithCopy for SceneConnectionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for SceneConnectionOptions(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

_OWORD *assignWithTake for SceneConnectionOptions(_OWORD *a1, _OWORD *a2)
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for SceneConnectionOptions(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SceneConnectionOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t dispatch thunk of BackgroundTaskManagerType.backgroundTask(withName:work:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_191E62DFC@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  unint64_t v22 = a3;
  uint64_t v6 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_3_4();
  uint64_t v8 = MEMORY[0x1E4F27928];
  uint64_t v9 = MEMORY[0x1E4FBB718];
  sub_191E64914(0, qword_1EB50DEE8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v20 - v11;
  sub_191E6B550(v5, (uint64_t)&v20 - v11, (uint64_t)qword_1EB50DEE8, v8, v9, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_191E64914);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (result == 1)
  {
    uint64_t v14 = v22;
    *unint64_t v22 = 0u;
    v14[1] = 0u;
  }
  else
  {
    OUTLINED_FUNCTION_53_0();
    v17(v15, v16);
    v21(v4);
    uint64_t v18 = OUTLINED_FUNCTION_12_20();
    return v19(v18);
  }
  return result;
}

uint64_t sub_191E62FC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0() + 48;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = MEMORY[0x1E4FBC840] + 8;
  do
  {
    sub_191E6B550(v2, (uint64_t)&v10, (uint64_t)&qword_1EB50E540, v4, MEMORY[0x1E4FBB718], (void (*)(void, uint64_t, uint64_t, uint64_t))sub_191E6B470);
    if (v11)
    {
      sub_191D6DA60(&v10, v12);
      *(void *)&long long v10 = 0;
      *((void *)&v10 + 1) = 0xE000000000000000;
      sub_191EE8280();
      sub_191EE8280();
      sub_191EE93A0();
      long long v5 = v10;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191D78788();
        uint64_t v3 = v7;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      if (v6 >= *(void *)(v3 + 24) >> 1)
      {
        sub_191D78788();
        uint64_t v3 = v8;
      }
      *(void *)(v3 + 16) = v6 + 1;
      *(_OWORD *)(v3 + 16 * v6 + 32) = v5;
    }
    else
    {
      sub_191E6B7CC((uint64_t)&v10, (uint64_t)&qword_1EB50E540, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (void (*)(void))sub_191E6B470);
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

id NetworkOperation.__allocating_init(request:networkProxy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191EE6F60();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_15_0();
  v8();
  uint64_t v9 = swift_allocObject();
  OUTLINED_FUNCTION_53_0();
  v10();
  sub_191E64914(0, qword_1EB50D358, MEMORY[0x1E4F26C48], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  uint64_t v11 = OUTLINED_FUNCTION_29();
  *(void *)(v11 + 16) = sub_191E64078;
  *(void *)(v11 + 24) = v9;
  sub_191E3CFD0(a2, (uint64_t)v14);
  id v12 = NetworkOperation.__allocating_init(requestAccessor:networkProxy:)(v11, (uint64_t)v14);
  sub_191E3CC54(a2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  return v12;
}

uint64_t sub_191E63344(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_191E6336C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id NetworkOperation.__allocating_init(requestAccessor:networkProxy:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return NetworkOperation.init(requestAccessor:networkProxy:)(a1, a2);
}

id NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return NetworkOperation.init(requestAccessor:networkProxy:earliestBeginDate:)(a1, a2, a3);
}

id NetworkOperation.__allocating_init(request:networkProxy:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_3_4();
  uint64_t v10 = sub_191EE6F60();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_15_0();
  v14();
  uint64_t v15 = swift_allocObject();
  OUTLINED_FUNCTION_53_0();
  v16();
  sub_191E64914(0, qword_1EB50D358, MEMORY[0x1E4F26C48], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  uint64_t v17 = OUTLINED_FUNCTION_29();
  *(void *)(v17 + 16) = sub_191E64078;
  *(void *)(v17 + 24) = v15;
  uint64_t v18 = a2;
  sub_191E3CFD0(a2, (uint64_t)v23);
  OUTLINED_FUNCTION_15_0();
  v19();
  id v20 = NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)(v17, (uint64_t)v23, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a3, v6);
  sub_191E3CC54(v18);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v10);
  return v20;
}

id NetworkOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_2();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  sub_191E64914(0, qword_1EB50D358, MEMORY[0x1E4F26C48], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  uint64_t v18 = OUTLINED_FUNCTION_29();
  *(void *)(v18 + 16) = sub_191E64860;
  *(void *)(v18 + 24) = v17;
  sub_191E3CFD0(a4, (uint64_t)v22);
  OUTLINED_FUNCTION_15_0();
  v19();
  id v20 = NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)(v18, (uint64_t)v22, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a5, v10);
  sub_191E3CC54(a4);
  return v20;
}

id NetworkOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_191EE73F0();
  OUTLINED_FUNCTION_0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_15_0();
  v18();
  uint64_t v19 = swift_allocObject();
  OUTLINED_FUNCTION_53_0();
  v20();
  sub_191E64914(0, &qword_1E92F4140, MEMORY[0x1E4F276F0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  uint64_t v21 = OUTLINED_FUNCTION_29();
  *(void *)(v21 + 16) = sub_191E648E8;
  *(void *)(v21 + 24) = v19;
  sub_191E3CFD0(a4, (uint64_t)v28);
  OUTLINED_FUNCTION_15_0();
  v22();
  id v23 = NetworkOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)(v21, a2, a3, (uint64_t)v28, v13);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a5, v7);
  sub_191E3CC54(a4);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v14);
  return v23;
}

uint64_t sub_191E639CC(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)swift_allocObject();
  void v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  id v6 = v2;
  swift_retain();
  sub_191E654E0((uint64_t)sub_191E6B7BC, (uint64_t)v5);

  return swift_release();
}

BOOL static NetworkOperationError.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  if (*((unsigned char *)a1 + 8) != 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 == v3;
    }
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1) {
        char v7 = *(unsigned char *)(a2 + 8);
      }
      else {
        char v7 = 0;
      }
      return (v7 & 1) != 0;
    }
    BOOL v4 = v3 == 1;
  }
  else
  {
    BOOL v4 = v3 == 0;
  }
  if (v4) {
    char v6 = *(unsigned char *)(a2 + 8);
  }
  else {
    char v6 = 0;
  }
  return (v6 & 1) != 0;
}

uint64_t NetworkOperation.requestProcessors.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t NetworkOperation.requestProcessors.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_6_29();
  *uint64_t v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*NetworkOperation.requestProcessors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191E63B84@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  unint64_t v3 = (uint64_t *)(*a1 + qword_1EB50D3E0);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    char v7 = sub_191D74300;
  }
  else
  {
    char v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_191D771A4(v4);
}

uint64_t sub_191E63C24(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_191E6B1E4;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  char v7 = (uint64_t *)(*a2 + qword_1EB50D3E0);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *char v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_191D771A4(v3);
  return sub_191D771B4(v8);
}

uint64_t NetworkOperation.eventHandler.getter()
{
  OUTLINED_FUNCTION_7_27();
  uint64_t v0 = OUTLINED_FUNCTION_13_21();
  sub_191D771A4(v0);
  return OUTLINED_FUNCTION_13_21();
}

uint64_t NetworkOperation.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_29();
  uint64_t v5 = *v2;
  *uint64_t v2 = a1;
  v2[1] = a2;
  return sub_191D771B4(v5);
}

uint64_t (*NetworkOperation.eventHandler.modify())()
{
  return j__swift_endAccess;
}

id NetworkOperation.init(requestAccessor:networkProxy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_191EE7640();
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2();
  uint64_t v13 = v12 - v11;
  *(void *)&v3[qword_1EB50D228] = MEMORY[0x1E4FBC860];
  uint64_t v14 = &v3[qword_1EB50D3E0];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  *(void *)&v3[qword_1EB50D218] = a1;
  sub_191E3CFD0(a2, (uint64_t)&v3[qword_1EB50D210]);
  uint64_t v15 = v3;
  swift_retain();
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(&v15[qword_1EB50D4A8], v13, v7);

  v18.receiver = v15;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  swift_release();
  sub_191E3CC54(a2);
  return v16;
}

id NetworkOperation.init(requestAccessor:networkProxy:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[qword_1EB50D228] = MEMORY[0x1E4FBC860];
  uint64_t v9 = &v4[qword_1EB50D3E0];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  *(void *)&v4[qword_1EB50D218] = a1;
  sub_191E3CFD0(a2, (uint64_t)&v4[qword_1EB50D210]);
  uint64_t v10 = sub_191EE7640();
  uint64_t v11 = *(void *)(v10 - 8);
  OUTLINED_FUNCTION_15_0();
  v12();
  v15.receiver = v4;
  v15.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v15, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a3, v10);
  sub_191E3CC54(a2);
  return v13;
}

uint64_t sub_191E64048(uint64_t a1)
{
  return sub_191E6486C(a1, MEMORY[0x1E4F26C48]);
}

uint64_t sub_191E64060()
{
  return objectdestroyTm_2(MEMORY[0x1E4F26C48]);
}

uint64_t sub_191E64078()
{
  return sub_191E640BC(MEMORY[0x1E4F26C48], MEMORY[0x1E4F26C48]);
}

uint64_t sub_191E640A4()
{
  return objectdestroyTm_2(MEMORY[0x1E4F26C48]);
}

uint64_t sub_191E640BC(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = *(void *)(a1(0) - 8);
  return sub_191E6486C(v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), a2);
}

uint64_t sub_191E64138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v58 = a4;
  uint64_t v6 = sub_191EE6F60();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_191E64914(0, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v56 = (char *)&v49 - v11;
  sub_191E64914(0, (unint64_t *)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8], v9);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v15 = sub_191EE71B0();
  uint64_t v60 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_191EE73F0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v55 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v49 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v49 - v26;
  (*(void (**)(uint64_t))(a1 + 16))(v25);
  sub_191EE7120();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
  {
    sub_191E6B7CC((uint64_t)v14, (uint64_t)&qword_1EB50D0B0, MEMORY[0x1E4F26ED8], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v24, v27, v18);
    sub_191EE6F20();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v27, v18);
  }
  uint64_t v52 = v27;
  uint64_t v59 = v19;
  uint64_t v29 = v60;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v17, v14, v15);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_191EE7110();
  uint64_t v30 = (uint64_t)v56;
  sub_191EE7130();
  if (__swift_getEnumTagSinglePayload(v30, 1, v18) == 1)
  {
    sub_191E6B7CC(v30, (uint64_t)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
    uint64_t v31 = v59;
    uint64_t v32 = v52;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v24, v52, v18);
    sub_191EE6F20();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v18);
  }
  uint64_t v50 = v17;
  uint64_t v51 = v15;
  uint64_t v33 = v59;
  uint64_t v34 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v55, v30, v18);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  uint64_t v57 = v18;
  v35(v24, v34, v18);
  sub_191EE6F20();
  uint64_t v36 = a3 + 64;
  uint64_t v37 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v38 = -1;
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  uint64_t v39 = v38 & *(void *)(a3 + 64);
  int64_t v40 = (unint64_t)(v37 + 63) >> 6;
  uint64_t result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  int64_t v41 = 0;
  if (!v39) {
    goto LABEL_9;
  }
LABEL_8:
  for (v39 &= v39 - 1; ; uint64_t v39 = (v45 - 1) & v45)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191EE6F40();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v42 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v43 = v59;
    uint64_t v44 = v60;
    if (v42 >= v40) {
      goto LABEL_25;
    }
    uint64_t v45 = *(void *)(v36 + 8 * v42);
    ++v41;
    if (!v45)
    {
      int64_t v41 = v42 + 1;
      if (v42 + 1 >= v40) {
        goto LABEL_25;
      }
      uint64_t v45 = *(void *)(v36 + 8 * v41);
      if (!v45)
      {
        int64_t v41 = v42 + 2;
        if (v42 + 2 >= v40) {
          goto LABEL_25;
        }
        uint64_t v45 = *(void *)(v36 + 8 * v41);
        if (!v45) {
          break;
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v46 = v42 + 3;
  if (v46 >= v40)
  {
LABEL_25:
    swift_release();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v48 = v57;
    v47(v55, v57);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v50, v51);
    v47(v52, v48);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v53 + 32))(v58, v8, v54);
  }
  uint64_t v45 = *(void *)(v36 + 8 * v46);
  if (v45)
  {
    int64_t v41 = v46;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v41 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v41 >= v40) {
      goto LABEL_25;
    }
    uint64_t v45 = *(void *)(v36 + 8 * v41);
    ++v46;
    if (v45) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_191E64818()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191E64860@<X0>(uint64_t a1@<X8>)
{
  return sub_191E64138(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_191E6486C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_26();
  uint64_t v2 = OUTLINED_FUNCTION_13_21();

  return v3(v2);
}

uint64_t sub_191E648D0()
{
  return objectdestroyTm_2(MEMORY[0x1E4F276F0]);
}

uint64_t sub_191E648E8()
{
  return sub_191E640BC(MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

void sub_191E64914(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t NetworkOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  if (qword_1EB50DD40 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_191EE7940();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB513328);
  uint64_t v7 = v2;
  unint64_t v8 = sub_191EE7920();
  os_log_type_t v9 = sub_191EE8CA0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = a2;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v12 = a1;
    uint64_t v14 = *(void *)((char *)v7 + qword_1EB50D8F8);
    unint64_t v13 = *(void *)((char *)v7 + qword_1EB50D8F8 + 8);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v15 = v14;
    a1 = v12;
    sub_191D76D74(v15, v13, &v22);
    sub_191EE8EA0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191D4D000, v8, v9, "Network operation %{public}s started", v10, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v11;
    a2 = v21;
    MEMORY[0x192FE9A10](v16, -1, -1);
    MEMORY[0x192FE9A10](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = *(void *)(v5 + 240);
  v17[3] = *(void *)(v5 + 248);
  v17[4] = a1;
  v17[5] = a2;
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v7;
  v18[3] = sub_191E64D80;
  void v18[4] = v17;
  uint64_t v19 = v7;
  swift_retain();
  swift_retain();
  sub_191E654E0((uint64_t)sub_191E65300, (uint64_t)v18);
  swift_release();
  return swift_release();
}

uint64_t sub_191E64C24(uint64_t a1, void (*a2)(void *))
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for Result();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v9 - v6);
  type metadata accessor for NetworkOperation();
  sub_191E64D8C(a1, v7);
  a2(v7);
  return (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_191E64D50()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_53();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_191E64D80(uint64_t a1)
{
  return sub_191E64C24(a1, *(void (**)(void *))(v1 + 32));
}

uint64_t sub_191E64D8C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for Result();
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = type metadata accessor for NetworkOperationResult();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for Result();
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (void **)((char *)&v18 - v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v18 - v12, a1, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = *v13;
    uint64_t v16 = sub_191E6AB7C(*v13);

    void *v19 = v16;
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v8 + 32))(v10, v13, v7);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v6, &v10[*(int *)(v7 + 32)], AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(void *, char *, uint64_t))(v18 + 32))(v19, v6, v4);
  }
}

uint64_t sub_191E6505C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = sub_191E6530C(a1);
  if (v9) {
    return a3(a1);
  }
  double v10 = *(double *)&v8;
  if (qword_1EB50DD40 != -1) {
    swift_once();
  }
  double v11 = v10;
  uint64_t v12 = sub_191EE7940();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB513328);
  unint64_t v13 = a2;
  uint64_t v14 = sub_191EE7920();
  os_log_type_t v15 = sub_191EE8CA0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v25 = v17;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v24 = a3;
    uint64_t v19 = *(void *)&v13[qword_1EB50D8F8];
    unint64_t v18 = *(void *)&v13[qword_1EB50D8F8 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D76D74(v19, v18, &v25);
    sub_191EE8EA0();

    a3 = v24;
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2050;
    sub_191EE8EA0();
    _os_log_impl(&dword_191D4D000, v14, v15, "Network operation %{public}s will retry with longer timeout after delay: %{public}f", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v17, -1, -1);
    MEMORY[0x192FE9A10](v16, -1, -1);
  }
  else
  {
  }
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v13;
  void v21[3] = a3;
  void v21[4] = a4;
  uint64_t v22 = qword_1EB50DBD8;
  uint64_t v23 = v13;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  TaskScheduler.scheduleAfter(_:_:)((uint64_t)sub_191E6B764, (uint64_t)v21, v11);
  return swift_release();
}

uint64_t sub_191E65300(uint64_t a1)
{
  return sub_191E6505C(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_191E6530C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for NetworkOperationResult();
  uint64_t v3 = type metadata accessor for Result();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (void **)((char *)&v10 - v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v4, a1, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = *v5;
    uint64_t v8 = sub_191E6A764(v7);
  }
  else
  {
    (*(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8))(v5, v2);
    return 0;
  }
  return v8;
}

uint64_t sub_191E654AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191E654E0(a2, a3);
}

uint64_t sub_191E654E0(uint64_t a1, uint64_t a2)
{
  sub_191E3CFD0(v2 + qword_1EB50D210, (uint64_t)v7);
  switch(v8)
  {
    case 1:
      sub_191E66024(*(void **)&v7[0], a1, a2);
      return swift_release();
    case 2:
      sub_191E66910(*(uint64_t *)&v7[0], a1, a2);
      return swift_release();
    case 3:
      if (qword_1EB50D3D0 != -1) {
        swift_once();
      }
      sub_191D702F0((uint64_t)qword_1EB50D370, (uint64_t)v6);
      goto LABEL_9;
    default:
      sub_191D6DE58(v7, (uint64_t)v6);
LABEL_9:
      sub_191E658B4(v6, a1, a2);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
}

uint64_t sub_191E65614(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = sub_191E6530C(a1);
  if (v9) {
    return a3(a1);
  }
  double v10 = *(double *)&v8;
  if (qword_1EB50DD40 != -1) {
    swift_once();
  }
  double v11 = v10;
  uint64_t v12 = sub_191EE7940();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB513328);
  unint64_t v13 = a2;
  uint64_t v14 = sub_191EE7920();
  os_log_type_t v15 = sub_191EE8CA0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v25 = v17;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v24 = a3;
    uint64_t v19 = *(void *)&v13[qword_1EB50D8F8];
    unint64_t v18 = *(void *)&v13[qword_1EB50D8F8 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_191D76D74(v19, v18, &v25);
    sub_191EE8EA0();

    a3 = v24;
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2050;
    sub_191EE8EA0();
    _os_log_impl(&dword_191D4D000, v14, v15, "Network operation %{public}s will retry with longer timeout after delay: %{public}f", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v17, -1, -1);
    MEMORY[0x192FE9A10](v16, -1, -1);
  }
  else
  {
  }
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v13;
  void v21[3] = a3;
  void v21[4] = a4;
  uint64_t v22 = qword_1EB50DBD8;
  uint64_t v23 = v13;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  TaskScheduler.scheduleAfter(_:_:)((uint64_t)sub_191E6B828, (uint64_t)v21, v11);
  return swift_release();
}

uint64_t sub_191E658B4(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v57)(uint64_t *__return_ptr, char *, uint64_t (*)(uint64_t, unint64_t, void *, void *, void *), void *, uint64_t, uint64_t);
  id v58;
  void v60[2];
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void (**v72)(char *, uint64_t);
  void (**v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76[3];
  uint64_t v77;
  uint64_t v78;

  uint64_t v4 = v3;
  uint64_t v66 = sub_191EE73F0();
  uint64_t v63 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  unint64_t v62 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191E64914(0, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v65 = (char *)v60 - v10;
  uint64_t v11 = sub_191EE6F60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  os_log_type_t v15 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v60 - v16;
  uint64_t v67 = swift_allocBox();
  unint64_t v18 = *(void (**)(void))(*(void *)&v3[qword_1EB50D218] + 16);
  uint64_t v71 = v19;
  v18();
  uint64_t v20 = &v3[qword_1EB50D228];
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(*(void *)v20 + 16);
  char v69 = a2;
  uint64_t v70 = v4;
  uint64_t v68 = v12;
  if (v22)
  {
    uint64_t v64 = a1;
    uint64_t v61 = a3;
    uint64_t v23 = v21 + 32;
    uint64_t v73 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v74 = v17;
    uint64_t v72 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v24 = (void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
    v60[1] = v21;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v25 = v71;
    uint64_t v26 = (uint64_t)v74;
    do
    {
      sub_191D702F0(v23, (uint64_t)v76);
      uint64_t v27 = v77;
      uint64_t v28 = v78;
      __swift_project_boxed_opaque_existential_1(v76, v77);
      (*v73)(v15, v25, v11);
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 8))(v15, v27, v28);
      (*v72)(v15, v11);
      (*v24)(v25, v26, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
      v23 += 40;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a3 = v61;
    a2 = v69;
    uint64_t v4 = v70;
    uint64_t v12 = v68;
    a1 = v64;
    uint64_t v17 = v74;
  }
  uint64_t v29 = v65;
  uint64_t v30 = v71;
  sub_191EE6F30();
  uint64_t v31 = (uint64_t)v29;
  uint64_t v32 = (uint64_t)v29;
  uint64_t v33 = v66;
  if (__swift_getEnumTagSinglePayload(v32, 1, v66))
  {
    sub_191E6B7CC(v31, (uint64_t)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
  }
  else
  {
    uint64_t v34 = v63;
    uint64_t v35 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v31, v33);
    sub_191E6B7CC(v31, (uint64_t)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
    uint64_t v74 = (char *)sub_191EE7320();
    uint64_t v36 = v33;
    unint64_t v38 = v37;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    if (qword_1EB50DD40 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_191EE7940();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EB513328);
    int64_t v40 = v4;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    int64_t v41 = sub_191EE7920();
    os_log_type_t v42 = sub_191EE8CA0();
    int v43 = v42;
    BOOL v44 = os_log_type_enabled(v41, v42);
    a2 = v69;
    if (v44)
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v64 = a1;
      uint64_t v46 = v45;
      uint64_t v73 = (void (**)(char *, uint64_t, uint64_t))swift_slowAlloc();
      v76[0] = (uint64_t)v73;
      *(_DWORD *)uint64_t v46 = 136446466;
      LODWORD(v72) = v43;
      uint64_t v48 = *(void *)&v40[qword_1EB50D8F8];
      unint64_t v47 = *(void *)&v40[qword_1EB50D8F8 + 8];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v75 = sub_191D76D74(v48, v47, v76);
      sub_191EE8EA0();

      uint64_t v30 = v71;
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2082;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v75 = sub_191D76D74((uint64_t)v74, v38, v76);
      a2 = v69;
      sub_191EE8EA0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191D4D000, v41, (os_log_type_t)v72, "Network operation %{public}s will issue request to URL: %{public}s", (uint8_t *)v46, 0x16u);
      uint64_t v49 = v73;
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v49, -1, -1);
      uint64_t v50 = v46;
      a1 = v64;
      MEMORY[0x192FE9A10](v50, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v12 = v68;
  }
  sub_191EE6EF0();
  uint64_t v51 = a1[3];
  uint64_t v52 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v51);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v30, v11);
  uint64_t v53 = (void *)swift_allocObject();
  uint64_t v54 = v70;
  v53[2] = v70;
  v53[3] = a2;
  uint64_t v74 = (char *)v11;
  uint64_t v55 = v17;
  uint64_t v56 = v67;
  v53[4] = a3;
  v53[5] = v56;
  uint64_t v57 = *(void (**)(uint64_t *__return_ptr, char *, uint64_t (*)(uint64_t, unint64_t, void *, void *, void *), void *, uint64_t, uint64_t))(v52 + 8);
  uint64_t v58 = v54;
  swift_retain();
  swift_retain();
  v57(v76, v55, sub_191E6B24C, v53, v51, v52);
  swift_release();
  (*(void (**)(char *, char *))(v12 + 8))(v55, v74);
  sub_191E6B278((uint64_t)v76);
  return swift_release();
}

uint64_t sub_191E66024(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v79 = a3;
  uint64_t v78 = a2;
  uint64_t v83 = a1;
  uint64_t v76 = *MEMORY[0x1E4FBC8C8] & *(void *)v3;
  uint64_t v5 = sub_191EE73F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v74 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191E64914(0, (unint64_t *)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v75 = (char *)v71 - v9;
  uint64_t v10 = sub_191EE6F60();
  uint64_t v81 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  os_log_type_t v15 = (char *)v71 - v14;
  uint64_t v82 = swift_allocBox();
  uint64_t v17 = v16;
  (*(void (**)(void))(*(void *)&v3[qword_1EB50D218] + 16))();
  unint64_t v18 = &v3[qword_1EB50D228];
  swift_beginAccess();
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(*(void *)v18 + 16);
  uint64_t v80 = v4;
  uint64_t v86 = v15;
  uint64_t v87 = v17;
  if (v20)
  {
    uint64_t v72 = v6;
    uint64_t v73 = v5;
    uint64_t v21 = v19 + 32;
    uint64_t v22 = v13;
    uint64_t v23 = v10;
    uint64_t v84 = (void (**)(char *, uint64_t))(v81 + 8);
    uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v81 + 16);
    uint64_t v24 = (void (**)(uint64_t, char *, uint64_t))(v81 + 40);
    v71[1] = v19;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v26 = v86;
    uint64_t v25 = v87;
    do
    {
      sub_191D702F0(v21, (uint64_t)v89);
      uint64_t v27 = v90;
      uint64_t v28 = v91;
      __swift_project_boxed_opaque_existential_1(v89, v90);
      (*v85)(v22, v25, v23);
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 8))(v22, v27, v28);
      (*v84)(v22, v23);
      (*v24)(v25, v26, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
      v21 += 40;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v4 = v80;
    uint64_t v10 = v23;
    uint64_t v5 = v73;
    uint64_t v6 = v72;
  }
  uint64_t v29 = (uint64_t)v75;
  sub_191EE6F30();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v29, 1, v5);
  uint64_t v77 = v10;
  if (EnumTagSinglePayload)
  {
    sub_191E6B7CC(v29, (uint64_t)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
  }
  else
  {
    uint64_t v31 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v74, v29, v5);
    sub_191E6B7CC(v29, (uint64_t)&qword_1EB50E4A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
    uint64_t v32 = (void (**)(char *, uint64_t, uint64_t))sub_191EE7320();
    unint64_t v34 = v33;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v5);
    if (qword_1EB50DD40 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_191EE7940();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EB513328);
    uint64_t v36 = v4;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    unint64_t v37 = sub_191EE7920();
    os_log_type_t v38 = sub_191EE8CA0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v85 = v32;
      uint64_t v40 = v39;
      uint64_t v41 = swift_slowAlloc();
      v89[0] = v41;
      *(_DWORD *)uint64_t v40 = 136446466;
      uint64_t v42 = *(void *)&v36[qword_1EB50D8F8];
      unint64_t v43 = *(void *)&v36[qword_1EB50D8F8 + 8];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v88 = sub_191D76D74(v42, v43, v89);
      sub_191EE8EA0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2082;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v88 = sub_191D76D74((uint64_t)v85, v34, v89);
      sub_191EE8EA0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191D4D000, v37, v38, "Network operation %{public}s will issue background request to URL: %{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v41, -1, -1);
      MEMORY[0x192FE9A10](v40, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v4 = v80;
  }
  sub_191EE6EF0();
  uint64_t v44 = *(void *)&v4[qword_1EB50D8F8];
  uint64_t v45 = *(void *)&v4[qword_1EB50D8F8 + 8];
  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v47 = (void *)swift_allocObject();
  uint64_t v48 = v76;
  uint64_t v85 = *(void (***)(char *, uint64_t, uint64_t))(v76 + 240);
  v47[2] = v85;
  uint64_t v49 = *(void *)(v48 + 248);
  v47[3] = v49;
  uint64_t v47[4] = v46;
  void v47[5] = v44;
  v47[6] = v45;
  uint64_t v50 = v78;
  uint64_t v51 = v79;
  v47[7] = v78;
  v47[8] = v51;
  v47[9] = v82;
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  swift_retain();
  sub_191D9F5CC(v44, v45, (uint64_t)sub_191E6B644, (uint64_t)v47, v52, v53, v54, v55);
  swift_release();
  swift_release();
  uint64_t v56 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v57 = (void *)swift_allocObject();
  v57[2] = v85;
  v57[3] = v49;
  v57[4] = v56;
  v57[5] = v44;
  v57[6] = v45;
  v57[7] = v50;
  unsigned char v57[8] = v51;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  swift_retain();
  uint64_t v58 = v44;
  sub_191D9F8D8(v44, v45, (uint64_t)sub_191E6B6C8, (uint64_t)v57, v59, v60, v61, v62);
  swift_release();
  swift_release();
  uint64_t v63 = v83[5];
  uint64_t v64 = v83[6];
  __swift_project_boxed_opaque_existential_1(v83 + 2, v63);
  uint64_t v65 = v87;
  swift_beginAccess();
  uint64_t v66 = v81;
  uint64_t v67 = v86;
  uint64_t v68 = v65;
  uint64_t v69 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v86, v68, v77);
  (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v64 + 16))(v89, v67, v58, v45, &v4[qword_1EB50D4A8], v63, v64);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v69);
  sub_191E6B278((uint64_t)v89);
  return swift_release();
}

uint64_t sub_191E66910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v5 = sub_191EE7C00();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191EE7C60();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191EE7C90();
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  os_log_type_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v25 - v16;
  sub_191EB7230();
  sub_191D74B24(0, (unint64_t *)&qword_1EB50EE70);
  uint64_t v27 = sub_191EE8D20();
  sub_191EE7C80();
  MEMORY[0x192FE6EC0](v15, 0.1);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v15, v11);
  unint64_t v18 = (void *)swift_allocObject();
  uint64_t v20 = v25;
  uint64_t v19 = v26;
  v18[2] = v25;
  v18[3] = a1;
  void v18[4] = v19;
  v18[5] = a3;
  aBlock[4] = sub_191E6B754;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191D70378;
  aBlock[3] = &block_descriptor_13;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v20;
  swift_retain();
  swift_retain();
  swift_release();
  sub_191EE7C30();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_191E6B770((unint64_t *)&qword_1EB50E610, MEMORY[0x1E4FBCB00]);
  sub_191E64914(0, (unint64_t *)&qword_1EB50E620, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_191DB6CD4();
  sub_191EE9060();
  uint64_t v23 = (void *)v27;
  MEMORY[0x192FE7EA0](v17, v10, v7, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return ((uint64_t (*)(char *, uint64_t))v28)(v17, v29);
}

uint64_t sub_191E66D08(uint64_t a1, unint64_t a2, void *a3, void *a4, void *a5, void *a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v98 = a8;
  uint64_t v101 = a7;
  sub_191E64914(0, &qword_1EB50D550, MEMORY[0x1E4F26C48], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v90 - v15;
  swift_getAssociatedTypeWitness();
  type metadata accessor for NetworkOperationResult();
  uint64_t v99 = type metadata accessor for Result();
  uint64_t v97 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v100 = (uint64_t *)((char *)&v90 - v17);
  uint64_t v18 = sub_191EE6F60();
  uint64_t v19 = swift_projectBox();
  sub_191E67904(a3, a4, a5);
  if (a5)
  {
    id v20 = a5;
    if (qword_1EB50DD40 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_191EE7940();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB513328);
    id v22 = a5;
    id v23 = a5;
    uint64_t v24 = a6;
    uint64_t v25 = sub_191EE7920();
    os_log_type_t v26 = sub_191EE8C80();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      v102[0] = v29;
      *(_DWORD *)uint64_t v27 = 136446466;
      uint64_t v31 = *(void *)&v24[qword_1EB50D8F8];
      unint64_t v30 = *(void *)&v24[qword_1EB50D8F8 + 8];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      id v103 = (id)sub_191D76D74(v31, v30, v102);
      sub_191EE8EA0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2114;
      id v32 = a5;
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      id v103 = (id)v33;
      unint64_t v34 = v101;
      sub_191EE8EA0();
      *uint64_t v28 = v33;

      _os_log_impl(&dword_191D4D000, v25, v26, "Network operation %{public}s failed with error: %{public}@", (uint8_t *)v27, 0x16u);
      sub_191E6B300(0, (unint64_t *)&qword_1EB50E140, (uint64_t)&qword_1EB50E0D0, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_191D74B24);
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v28, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v29, -1, -1);
      MEMORY[0x192FE9A10](v27, -1, -1);

      uint64_t v35 = v99;
      uint64_t v36 = v97;
    }
    else
    {

      uint64_t v35 = v99;
      uint64_t v36 = v97;
      unint64_t v34 = v101;
    }
    uint64_t v50 = v100;
    *uint64_t v100 = (uint64_t)a5;
    swift_storeEnumTagMultiPayload();
    id v51 = a5;
    v34(v50);

    return (*(uint64_t (**)(uint64_t *, uint64_t))(v36 + 8))(v50, v35);
  }
  uint64_t v95 = v19;
  uint64_t v96 = (char *)a1;
  if (!a3) {
    goto LABEL_10;
  }
  self;
  uint64_t v37 = swift_dynamicCastObjCClass();
  if (!v37) {
    goto LABEL_10;
  }
  os_log_type_t v38 = (void *)v37;
  id v39 = a3;
  if (sub_191DA3B48())
  {

LABEL_10:
    if (a2 >> 60 == 15)
    {
      if (qword_1EB50DD40 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_191EE7940();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EB513328);
      uint64_t v41 = a6;
      uint64_t v42 = sub_191EE7920();
      os_log_type_t v43 = sub_191EE8C80();
      BOOL v44 = os_log_type_enabled(v42, v43);
      uint64_t v45 = v101;
      if (v44)
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        v102[0] = v47;
        *(_DWORD *)uint64_t v46 = 136446210;
        uint64_t v48 = *(void *)&v41[qword_1EB50D8F8];
        unint64_t v49 = *(void *)&v41[qword_1EB50D8F8 + 8];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        id v103 = (id)sub_191D76D74(v48, v49, v102);
        sub_191EE8EA0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_191D4D000, v42, v43, "Network operation %{public}s failed with unknown error", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FE9A10](v47, -1, -1);
        MEMORY[0x192FE9A10](v46, -1, -1);
      }
      else
      {
      }
      uint64_t v36 = v97;
      sub_191E6B35C();
      uint64_t v71 = swift_allocError();
      *(void *)uint64_t v72 = 0;
      *(unsigned char *)(v72 + 8) = 1;
      uint64_t v35 = v99;
      uint64_t v50 = v100;
      *uint64_t v100 = v71;
      swift_storeEnumTagMultiPayload();
      v45(v50);
    }
    else
    {
      uint64_t v53 = v96;
      sub_191D77104((uint64_t)v96, a2);
      id v54 = a3;
      sub_191D77104((uint64_t)v53, a2);
      id v55 = a4;
      uint64_t v56 = sub_191E67C78((uint64_t)v53, a2, (uint64_t)a3, a4);
      unint64_t v58 = v57;
      sub_191D76D1C((uint64_t)v53, a2);

      if (qword_1EB50DD40 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_191EE7940();
      __swift_project_value_buffer(v59, (uint64_t)qword_1EB513328);
      uint64_t v60 = a6;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v61 = sub_191EE7920();
      os_log_type_t v62 = sub_191EE8CA0();
      int v63 = v62;
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v64 = swift_slowAlloc();
        unint64_t v92 = v58;
        uint64_t v65 = v64;
        uint64_t v94 = swift_slowAlloc();
        v102[0] = v94;
        *(_DWORD *)uint64_t v65 = 136446466;
        uint64_t v91 = v56;
        int v93 = v63;
        uint64_t v66 = *(void *)&v60[qword_1EB50D8F8];
        unint64_t v67 = *(void *)&v60[qword_1EB50D8F8 + 8];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        id v103 = (id)sub_191D76D74(v66, v67, v102);
        sub_191EE8EA0();

        uint64_t v53 = v96;
        swift_bridgeObjectRelease();
        *(_WORD *)(v65 + 12) = 2082;
        os_log_t v90 = v61;
        unint64_t v68 = v92;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        id v103 = (id)sub_191D76D74(v91, v68, v102);
        sub_191EE8EA0();
        swift_bridgeObjectRelease_n();
        os_log_t v69 = v90;
        _os_log_impl(&dword_191D4D000, v90, (os_log_type_t)v93, "Network operation %{public}s received response (%{public}s", (uint8_t *)v65, 0x16u);
        uint64_t v70 = v94;
        swift_arrayDestroy();
        MEMORY[0x192FE9A10](v70, -1, -1);
        MEMORY[0x192FE9A10](v65, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v73 = v101;
      uint64_t v36 = v97;
      uint64_t v74 = v95;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v74, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      uint64_t v50 = v100;
      sub_191E68608(a3, (uint64_t)v16, v53, (char *)a2, (uint64_t)v100);
      sub_191E6B7CC((uint64_t)v16, (uint64_t)&qword_1EB50D550, MEMORY[0x1E4F26C48], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
      v73(v50);
      sub_191D76FF8((uint64_t)v53, a2);
      uint64_t v35 = v99;
    }
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v36 + 8))(v50, v35);
  }
  if (qword_1EB50DD40 != -1) {
    swift_once();
  }
  uint64_t v75 = sub_191EE7940();
  __swift_project_value_buffer(v75, (uint64_t)qword_1EB513328);
  uint64_t v76 = a6;
  id v77 = v39;
  uint64_t v78 = sub_191EE7920();
  os_log_type_t v79 = sub_191EE8C80();
  BOOL v80 = os_log_type_enabled(v78, v79);
  uint64_t v81 = v101;
  if (v80)
  {
    uint64_t v82 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    v102[0] = v83;
    *(_DWORD *)uint64_t v82 = 136446466;
    uint64_t v84 = *(void *)&v76[qword_1EB50D8F8];
    unint64_t v85 = *(void *)&v76[qword_1EB50D8F8 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    id v103 = (id)sub_191D76D74(v84, v85, v102);
    sub_191EE8EA0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v82 + 12) = 2050;
    id v103 = objc_msgSend(v38, sel_statusCode);
    uint64_t v81 = v101;
    sub_191EE8EA0();

    _os_log_impl(&dword_191D4D000, v78, v79, "Network operation %{public}s failed with HTTP status code: %{public}ld", (uint8_t *)v82, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v83, -1, -1);
    MEMORY[0x192FE9A10](v82, -1, -1);
  }
  else
  {
  }
  uint64_t v35 = v99;
  uint64_t v36 = v97;
  sub_191DA3D74();
  uint64_t v86 = swift_allocError();
  void *v87 = v38;
  uint64_t v88 = v100;
  *uint64_t v100 = v86;
  swift_storeEnumTagMultiPayload();
  id v89 = v77;
  v81(v88);

  uint64_t v50 = v88;
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v36 + 8))(v50, v35);
}

void sub_191E67904(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    uint64_t v6 = (void (**)(uint64_t *))((char *)v3 + qword_1EB50D3E0);
    swift_beginAccess();
    uint64_t v7 = *v6;
    if (*v6)
    {
      uint64_t v32 = (uint64_t)a3;
      uint64_t v33 = 0;
      char v34 = 2;
      id v8 = a3;
      sub_191D771A4((uint64_t)v7);
      v7(&v32);
      sub_191D771B4((uint64_t)v7);
    }
  }
  else if (a1)
  {
    self;
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (v11)
    {
      uint64_t v12 = v11;
      id v30 = a1;
      if (sub_191DA3B48())
      {
        if (a2)
        {
          id v13 = objc_msgSend(a2, sel_transactionMetrics);
          sub_191D74B24(0, &qword_1EB50D3B8);
          unint64_t v14 = sub_191EE8520();
        }
        else
        {
          unint64_t v14 = MEMORY[0x1E4FBC860];
        }
        if (v14 >> 62) {
          goto LABEL_30;
        }
        uint64_t v18 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        while (v18)
        {
          uint64_t v4 = (void (**)(void))((char *)v4 + qword_1EB50D3E0);
          unint64_t v31 = v14 & 0xC000000000000001;
          swift_beginAccess();
          uint64_t v19 = 4;
          uint64_t v29 = v4;
          while (1)
          {
            id v20 = v31 ? (id)MEMORY[0x192FE8380](v19 - 4, v14) : *(id *)(v14 + 8 * v19);
            uint64_t v21 = v20;
            uint64_t v22 = v19 - 3;
            if (__OFADD__(v19 - 4, 1)) {
              break;
            }
            if (objc_msgSend(v20, sel_resourceFetchType) == (id)3)
            {

LABEL_27:
              swift_bridgeObjectRelease();
              return;
            }
            id v23 = (void (*)(uint64_t *))*v4;
            if (*v4)
            {
              uint64_t v32 = v12;
              uint64_t v33 = v21;
              char v34 = 0;
              uint64_t v24 = v18;
              unint64_t v25 = v14;
              uint64_t v26 = v12;
              id v27 = v30;
              sub_191D771A4((uint64_t)v23);
              id v28 = v21;
              v23(&v32);
              sub_191D771B4((uint64_t)v23);

              uint64_t v12 = v26;
              unint64_t v14 = v25;
              uint64_t v18 = v24;
              uint64_t v4 = v29;
            }
            else
            {
            }
            ++v19;
            if (v22 == v18) {
              goto LABEL_27;
            }
          }
          __break(1u);
LABEL_30:
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
          uint64_t v18 = sub_191EE94B0();
          swift_bridgeObjectRelease();
        }

        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = (void (**)(uint64_t *))((char *)v4 + qword_1EB50D3E0);
        swift_beginAccess();
        uint64_t v16 = *v15;
        if (*v15)
        {
          uint64_t v32 = v12;
          uint64_t v33 = 0;
          char v34 = 1;
          id v17 = v30;
          sub_191D771A4((uint64_t)v16);
          v16(&v32);
          sub_191D771B4((uint64_t)v16);
        }
        else
        {
        }
      }
    }
  }
}

uint64_t sub_191E67C78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v77 = a3;
  uint64_t v78 = a1;
  uint64_t v79 = a2;
  uint64_t v5 = sub_191EE7090();
  uint64_t v76 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v75 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_191E64914(0, &qword_1EB50D1F0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v80 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v73 - v11;
  sub_191E64914(0, qword_1EB50DEE8, MEMORY[0x1E4F27928], v7);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v73 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  unint64_t v25 = (char *)&v73 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  id v28 = (char *)&v73 - v27;
  MEMORY[0x1F4188790](v26);
  id v30 = (char *)&v73 - v29;
  uint64_t v82 = v5;
  uint64_t v83 = v25;
  if (a4)
  {
    id v31 = objc_msgSend(a4, sel_transactionMetrics);
    sub_191D74B24(0, &qword_1EB50D3B8);
    unint64_t v32 = sub_191EE8520();

    uint64_t v74 = v28;
    if (v32 >> 62)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      uint64_t v48 = sub_191EE94B0();
      swift_bridgeObjectRelease();
      if (v48)
      {
LABEL_4:
        sub_191E35994(0, (v32 & 0xC000000000000001) == 0, v32);
        if ((v32 & 0xC000000000000001) != 0) {
          id v33 = (id)MEMORY[0x192FE8380](0, v32);
        }
        else {
          id v33 = *(id *)(v32 + 32);
        }
        char v34 = v33;
        uint64_t v5 = v82;
        swift_bridgeObjectRelease();
        if (v34)
        {
          id v81 = v34;
          id v35 = objc_msgSend(v34, sel_fetchStartDate);
          if (v35)
          {
            uint64_t v36 = v35;
            sub_191EE7600();

            uint64_t v37 = sub_191EE7640();
            uint64_t v38 = 0;
          }
          else
          {
            uint64_t v37 = sub_191EE7640();
            uint64_t v38 = 1;
          }
          uint64_t v41 = 1;
          __swift_storeEnumTagSinglePayload((uint64_t)v22, v38, 1, v37);
          sub_191E6B4BC((uint64_t)v22, (uint64_t)v30);
          id v42 = objc_msgSend(v81, sel_responseStartDate);
          id v28 = v74;
          if (v42)
          {
            os_log_type_t v43 = v42;
            sub_191EE7600();

            uint64_t v41 = 0;
          }
          uint64_t v44 = sub_191EE7640();
          uint64_t v45 = 1;
          __swift_storeEnumTagSinglePayload((uint64_t)v19, v41, 1, v44);
          sub_191E6B4BC((uint64_t)v19, (uint64_t)v28);
          id v46 = objc_msgSend(v81, sel_requestStartDate);
          if (v46)
          {
            uint64_t v47 = v46;
            sub_191EE7600();

            uint64_t v45 = 0;
          }
          uint64_t v5 = v82;
          __swift_storeEnumTagSinglePayload((uint64_t)v16, v45, 1, v44);
          sub_191E6B4BC((uint64_t)v16, (uint64_t)v83);
          goto LABEL_19;
        }
LABEL_18:
        uint64_t v49 = sub_191EE7640();
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 1, 1, v49);
        id v28 = v74;
        __swift_storeEnumTagSinglePayload((uint64_t)v74, 1, 1, v49);
        __swift_storeEnumTagSinglePayload((uint64_t)v83, 1, 1, v49);
        id v81 = 0;
LABEL_19:
        id v50 = objc_msgSend(a4, sel_taskInterval);
        sub_191EE7040();

        uint64_t v40 = 0;
        goto LABEL_20;
      }
    }
    else if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v82;
    goto LABEL_18;
  }
  uint64_t v39 = sub_191EE7640();
  uint64_t v40 = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v30, 1, 1, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v39);
  id v81 = 0;
LABEL_20:
  __swift_storeEnumTagSinglePayload((uint64_t)v12, v40, 1, v5);
  sub_191E64914(0, &qword_1EB50D3C0, (uint64_t (*)(uint64_t))sub_191DA6A08, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191EEC0C0;
  *(void *)(inited + 32) = 0x6F43737574617473;
  *(void *)(inited + 40) = 0xEA00000000006564;
  if (v77 && (self, (uint64_t v52 = (void *)swift_dynamicCastObjCClass()) != 0))
  {
    id v53 = objc_msgSend(v52, sel_statusCode);
    *(void *)(inited + 72) = MEMORY[0x1E4FBB550];
    *(void *)(inited + 48) = v53;
  }
  else
  {
    *(_OWORD *)(inited + 48) = 0u;
    *(_OWORD *)(inited + 64) = 0u;
  }
  *(void *)(inited + 80) = 1702521203;
  *(void *)(inited + 88) = 0xE400000000000000;
  id v54 = self;
  id v55 = objc_msgSend(v54, sel_stringFromByteCount_countStyle_, sub_191EE7520(), 2);
  uint64_t v56 = sub_191EE8110();
  uint64_t v58 = v57;

  uint64_t v59 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 96) = v56;
  *(void *)(inited + 104) = v58;
  *(void *)(inited + 120) = v59;
  *(void *)(inited + 128) = 0x646575657571;
  *(void *)(inited + 136) = 0xE600000000000000;
  MEMORY[0x1F4188790](v60);
  *(&v73 - 2) = (uint64_t)v12;
  uint64_t v62 = sub_191E62DFC((void (*)(uint64_t))sub_191E6B3A8, (uint64_t)(&v73 - 4), v61);
  *(void *)(inited + 176) = 1650881652;
  *(void *)(inited + 184) = 0xE400000000000000;
  MEMORY[0x1F4188790](v62);
  *(&v73 - 2) = (uint64_t)v83;
  sub_191E62DFC((void (*)(uint64_t))sub_191E6B40C, (uint64_t)(&v73 - 4), v63);
  *(void *)(inited + 224) = 0x6C61746F74;
  *(void *)(inited + 232) = 0xE500000000000000;
  uint64_t v64 = v80;
  sub_191E6B550((uint64_t)v12, v80, (uint64_t)&qword_1EB50D1F0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718], (void (*)(void, uint64_t, uint64_t, uint64_t))sub_191E64914);
  uint64_t v65 = v82;
  if (__swift_getEnumTagSinglePayload(v64, 1, v82) == 1)
  {
    *(_OWORD *)(inited + 240) = 0u;
    *(_OWORD *)(inited + 256) = 0u;
  }
  else
  {
    uint64_t v66 = v64;
    unint64_t v68 = v75;
    uint64_t v67 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v75, v66, v65);
    sub_191DA3934((uint64_t *)(inited + 240));
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v65);
  }
  uint64_t v84 = sub_191E62FC0(inited);
  sub_191E6B470(0, (unint64_t *)&qword_1EB50DB98, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_191D788B0();
  uint64_t v69 = sub_191EE7FE0();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_191DF515C();

  uint64_t v70 = MEMORY[0x1E4F27928];
  uint64_t v71 = MEMORY[0x1E4FBB718];
  sub_191E6B7CC((uint64_t)v28, (uint64_t)qword_1EB50DEE8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
  sub_191E6B7CC((uint64_t)v30, (uint64_t)qword_1EB50DEE8, v70, v71, (void (*)(void))sub_191E64914);
  sub_191E6B7CC((uint64_t)v12, (uint64_t)&qword_1EB50D1F0, MEMORY[0x1E4F26E60], v71, (void (*)(void))sub_191E64914);
  sub_191E6B7CC((uint64_t)v83, (uint64_t)qword_1EB50DEE8, v70, v71, (void (*)(void))sub_191E64914);
  return v69;
}

void sub_191E68608(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v30 = a2;
  uint64_t v29 = *MEMORY[0x1E4FBC8C8] & *v5;
  uint64_t v11 = sub_191EE8190();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v27 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB50DD40 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_191EE7940();
  uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB513328);
  uint64_t v15 = v6;
  sub_191D76FA0((uint64_t)a3, (unint64_t)a4);
  uint64_t v28 = v14;
  uint64_t v16 = sub_191EE7920();
  os_log_type_t v17 = sub_191EE8CA0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v31 = v25;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v26 = a1;
    uint64_t v19 = (uint64_t)a3;
    uint64_t v20 = a5;
    uint64_t v22 = *(void *)&v15[qword_1EB50D8F8];
    unint64_t v21 = *(void *)&v15[qword_1EB50D8F8 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    uint64_t v32 = sub_191D76D74(v22, v21, &v31);
    sub_191EE8EA0();

    a5 = v20;
    a3 = (char *)v19;
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2048;
    uint64_t v32 = sub_191EE7520();
    a1 = v26;
    sub_191EE8EA0();
    sub_191D76D1C(v19, (unint64_t)a4);
    _os_log_impl(&dword_191D4D000, v16, v17, "Network operation %{public}s attempting to parse response with %ld bytes", (uint8_t *)v18, 0x16u);
    uint64_t v23 = v25;
    swift_arrayDestroy();
    MEMORY[0x192FE9A10](v23, -1, -1);
    MEMORY[0x192FE9A10](v18, -1, -1);
  }
  else
  {

    sub_191D76D1C((uint64_t)a3, (unint64_t)a4);
  }

  uint64_t v24 = (void *)MEMORY[0x192FE8FC0]();
  sub_191E6A08C(a3, a4, v15, v30, a1, a5);
}

uint64_t sub_191E68C7C(void *a1, char *a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v38 = a8;
  uint64_t v39 = a7;
  uint64_t v35 = a5;
  unint64_t v36 = a6;
  sub_191E64914(0, &qword_1EB50D550, MEMORY[0x1E4F26C48], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v35 - v13;
  swift_getAssociatedTypeWitness();
  type metadata accessor for NetworkOperationResult();
  uint64_t v37 = type metadata accessor for Result();
  uint64_t v15 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  os_log_type_t v17 = (uint64_t *)((char *)&v35 - v16);
  uint64_t v18 = a4 + 16;
  uint64_t v19 = sub_191EE6F60();
  uint64_t v20 = swift_projectBox();
  swift_beginAccess();
  uint64_t v21 = MEMORY[0x192FE9B40](v18);
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    if (a3)
    {
      *os_log_type_t v17 = (uint64_t)a1;
      uint64_t v23 = v37;
      swift_storeEnumTagMultiPayload();
      sub_191E6B6FC(a1, (unint64_t)a2, 1);
      id v31 = a1;
      v39(v17);

      sub_191E6B708(a1, (unint64_t)a2, 1);
    }
    else
    {
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v20, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v19);
      sub_191D76FA0((uint64_t)a1, (unint64_t)a2);
      sub_191E68608(0, (uint64_t)v14, (char *)a1, a2, (uint64_t)v17);
      sub_191E6B7CC((uint64_t)v14, (uint64_t)&qword_1EB50D550, MEMORY[0x1E4F26C48], MEMORY[0x1E4FBB718], (void (*)(void))sub_191E64914);
      v39(v17);
      sub_191E6B708(a1, (unint64_t)a2, 0);

      uint64_t v23 = v37;
    }
  }
  else
  {
    uint64_t v25 = v35;
    unint64_t v24 = v36;
    if (qword_1EB50DD40 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_191EE7940();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EB513328);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_191EE7920();
    os_log_type_t v28 = sub_191EE8CA0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v40[0] = v30;
      *(_DWORD *)uint64_t v29 = 136446210;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v40[3] = sub_191D76D74(v25, v24, v40);
      sub_191EE8EA0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191D4D000, v27, v28, "Network operation %{public}s was abandoned", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE9A10](v30, -1, -1);
      MEMORY[0x192FE9A10](v29, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_191E6B35C();
    uint64_t v32 = swift_allocError();
    *(void *)uint64_t v33 = 1;
    *(unsigned char *)(v33 + 8) = 1;
    *os_log_type_t v17 = v32;
    uint64_t v23 = v37;
    swift_storeEnumTagMultiPayload();
    v39(v17);
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v23);
}