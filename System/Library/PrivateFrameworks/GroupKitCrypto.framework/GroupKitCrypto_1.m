uint64_t *assignWithTake for UserKeyingInfo(uint64_t *a1, char *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_250511528(v6, v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = &a2[v8];
  v11 = sub_2505BDF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = &a2[v12];
  v15 = sub_2505BE040();
  v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = &a2[v17];
  v20 = sub_2505BE0B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  v16((char *)a1 + a3[8], &a2[a3[8]], v15);
  *(uint64_t *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  v21 = a3[10];
  v22 = (char *)a1 + v21;
  v23 = &a2[v21];
  v24 = sub_2505BDF90();
  v25 = *(void *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  LODWORD(v16) = v26(v22, 1, v24);
  v27 = v26(v23, 1, v24);
  if (v16)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_7:
  v29 = a3[11];
  v30 = (char *)a1 + v29;
  v31 = &a2[v29];
  v32 = sub_2505BE000();
  v33 = *(void *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v30, v31, *(void *)(*(void *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserKeyingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250568DB8);
}

uint64_t sub_250568DB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2505BDF30();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_13:
    v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v15(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_2505BE040();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_13;
  }
  uint64_t v11 = sub_2505BE0B0();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_13;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[9]);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
    if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
    {
      uint64_t v7 = v14;
      uint64_t v8 = *(void *)(v14 - 8);
      uint64_t v9 = a3[10];
      goto LABEL_13;
    }
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[11];
    return v17(v19, a2, v18);
  }
}

uint64_t storeEnumTagSinglePayload for UserKeyingInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250568FE8);
}

uint64_t sub_250568FE8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_2505BDF30();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_11:
    v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v15(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_2505BE040();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_11;
  }
  uint64_t result = sub_2505BE0B0();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
    goto LABEL_11;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[9]) = (a2 - 1);
    return result;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_11;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a4[11];
  return v17(v19, a2, a2, v18);
}

void sub_250569204()
{
  sub_2505BDF30();
  if (v0 <= 0x3F)
  {
    sub_2505BE040();
    if (v1 <= 0x3F)
    {
      sub_2505BE0B0();
      if (v2 <= 0x3F)
      {
        sub_2505693D4(319, &qword_269AB68C8, MEMORY[0x263F047A0]);
        if (v3 <= 0x3F)
        {
          sub_2505693D4(319, &qword_269AB68D0, MEMORY[0x263F047C0]);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_2505693D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2505BE410();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_250569428(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2505BE0B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2505BE040();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_250569530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2505BE0B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2505BE040();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_2505695D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BE040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_250569690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BE040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_250569748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BE040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_250569800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BE040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2505698B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2505698CC);
}

uint64_t sub_2505698CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_2505BE040();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2505699C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2505699D8);
}

uint64_t sub_2505699D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2505BE0B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_2505BE040();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for UserKeyingInfo.ExternalVKsAndSigs(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB68D8);
}

uint64_t sub_250569AFC()
{
  uint64_t result = sub_2505BE0B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2505BE040();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_250569BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserKeyingInfo.ExternalVKsAndSigs(0);
  uint64_t v9 = MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12, v13, v14, v15);
  v17 = (char *)&v33 - v16;
  uint64_t v18 = sub_2505BDEE0();
  unint64_t v20 = v19;
  uint64_t v21 = sub_2505BDEE0();
  unint64_t v23 = v22;
  char v24 = sub_25051AAD8(v18, v20, v21, v22);
  sub_250511528(v21, v23);
  sub_250511528(v18, v20);
  sub_250569D90(a1, (uint64_t)v17, type metadata accessor for UserKeyingInfo.ExternalVKsAndSigs);
  sub_250569D90(a2, (uint64_t)v11, type metadata accessor for UserKeyingInfo.ExternalVKsAndSigs);
  if (v24)
  {
    uint64_t v25 = sub_2505BE030();
    unint64_t v27 = v26;
    uint64_t v28 = sub_2505BE030();
    unint64_t v30 = v29;
    char v31 = sub_25051AAD8(v25, v27, v28, v29);
    sub_250511528(v28, v30);
    sub_250511528(v25, v27);
  }
  else
  {
    char v31 = 0;
  }
  sub_2505659B0((uint64_t)v11, type metadata accessor for UserKeyingInfo.ExternalVKsAndSigs);
  sub_2505659B0((uint64_t)v17, type metadata accessor for UserKeyingInfo.ExternalVKsAndSigs);
  return v31 & 1;
}

uint64_t sub_250569D90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250569DF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_250569E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_250569E88(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_250569EB0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_250569EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6910);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2505C0400;
  *(void *)(inited + 32) = sub_2505BE140();
  *(void *)(inited + 40) = v9;
  uint64_t v10 = (void *)*MEMORY[0x263F171C8];
  type metadata accessor for CFString(0);
  uint64_t v12 = v11;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 80) = sub_2505BE140();
  *(void *)(inited + 88) = v13;
  uint64_t v14 = MEMORY[0x263F8D310];
  *(void *)(inited + 120) = MEMORY[0x263F8D310];
  *(void *)(inited + 96) = a3;
  *(void *)(inited + 104) = a4;
  *(void *)(inited + 128) = sub_2505BE140();
  *(void *)(inited + 136) = v15;
  *(void *)(inited + 168) = v14;
  *(void *)(inited + 144) = a1;
  *(void *)(inited + 152) = a2;
  *(void *)(inited + 176) = sub_2505BE140();
  *(void *)(inited + 184) = v16;
  uint64_t v17 = MEMORY[0x263F8D4F8];
  *(void *)(inited + 216) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 192) = 1;
  *(void *)(inited + 224) = sub_2505BE140();
  *(void *)(inited + 232) = v18;
  *(void *)(inited + 264) = v17;
  *(unsigned char *)(inited + 240) = 1;
  unint64_t result = *MEMORY[0x263F170A8];
  if (*MEMORY[0x263F170A8])
  {
    unint64_t result = sub_2505BE140();
    *(void *)(inited + 272) = result;
    *(void *)(inited + 280) = v20;
    uint64_t v21 = (void *)*MEMORY[0x263F17118];
    if (*MEMORY[0x263F17118])
    {
      *(void *)(inited + 312) = v12;
      *(void *)(inited + 288) = v21;
      id v22 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = v21;
      return sub_2504E1668(inited);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_25056A068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = sub_250569EE0(a1, a2, a3, a4);
  uint64_t v5 = sub_2505BE140();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x263F8D4F8];
  uint64_t v28 = MEMORY[0x263F8D4F8];
  LOBYTE(v27) = 1;
  sub_250527D34(&v27, v26);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2505143A4(v26, v5, v7, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_2505BE140();
  uint64_t v12 = v11;
  uint64_t v28 = v8;
  LOBYTE(v27) = 1;
  sub_250527D34(&v27, v26);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_2505143A4(v26, v10, v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_2505BE140();
  uint64_t v16 = v15;
  uint64_t v28 = v8;
  LOBYTE(v27) = 1;
  sub_250527D34(&v27, v26);
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_2505143A4(v26, v14, v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_2505BE140();
  uint64_t v20 = v19;
  uint64_t v21 = (void *)*MEMORY[0x263F17408];
  type metadata accessor for CFString(0);
  uint64_t v28 = v22;
  *(void *)&long long v27 = v21;
  sub_250527D34(&v27, v26);
  id v23 = v21;
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_2505143A4(v26, v18, v20, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25056A25C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = (unint64_t *)(a3 + 40); ; i += 2)
    {
      uint64_t v8 = *(i - 1);
      unint64_t v9 = *i;
      sub_2504DBC4C(v8, *i);
      unint64_t v10 = sub_250569EE0(v21, a2, a4, a5);
      uint64_t v11 = sub_2505BE140();
      uint64_t v13 = v12;
      uint64_t v27 = MEMORY[0x263F06F78];
      *(void *)&long long v26 = v8;
      *((void *)&v26 + 1) = v9;
      sub_250527D34(&v26, v25);
      sub_2504DBC4C(v8, v9);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v28 = v10;
      sub_2505143A4(v25, v11, v13, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      CFDictionaryRef v15 = (const __CFDictionary *)sub_2505BE0F0();
      swift_bridgeObjectRelease();
      OSStatus v16 = SecItemDelete(v15);

      if (v16 != -25300)
      {
        if (v16) {
          break;
        }
      }
      sub_250511528(v8, v9);
      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v26 = 0;
    *((void *)&v26 + 1) = 0xE000000000000000;
    sub_2505BE4B0();
    sub_2505BE190();
    CFStringRef v17 = SecCopyErrorMessageString(v16, 0);
    if (v17)
    {
      uint64_t v18 = (__CFString *)v17;
      sub_2505BE140();
    }
    else
    {
      LODWORD(v25[0]) = v16;
      sub_2505BE770();
    }
    sub_2505BE190();
    swift_bridgeObjectRelease();
    long long v19 = v26;
    sub_25056AC90();
    swift_allocError();
    *(_OWORD *)uint64_t v20 = v19;
    *(_DWORD *)(v20 + 16) = v16;
    swift_willThrow();
    return sub_250511528(v8, v9);
  }
  return result;
}

uint64_t sub_25056A4D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  id v6 = (id)*MEMORY[0x263F175A8];
  uint64_t v7 = sub_2505BE160();
  if (!*(void *)(v5 + 16) || (unint64_t v9 = sub_250512FEC(v7, v8), (v10 & 1) == 0))
  {
    long long v54 = 0u;
    long long v55 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_25052857C(*(void *)(v5 + 56) + 32 * v9, (uint64_t)&v54);
  swift_bridgeObjectRelease();
  if (!*((void *)&v55 + 1))
  {
LABEL_9:
    sub_25056AD4C((uint64_t)&v54);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    uint64_t v16 = swift_allocError();
    *(_WORD *)uint64_t v17 = 395;
    *(_OWORD *)(v17 + 8) = xmmword_2505C55D0;
    *(void *)(v17 + 24) = 0x80000002505CBA00;
    *(void *)(v17 + 32) = 0xD00000000000005FLL;
    *(void *)(v17 + 40) = 0x80000002505CBA20;
    uint64_t result = swift_willThrow();
LABEL_11:
    *a2 = v16;
    return result;
  }
  id v11 = (id)*MEMORY[0x263F175B0];
  uint64_t v12 = sub_2505BE160();
  if (*(void *)(v5 + 16) && (unint64_t v14 = sub_250512FEC(v12, v13), (v15 & 1) != 0))
  {
    sub_25052857C(*(void *)(v5 + 56) + 32 * v14, (uint64_t)&v54);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v55 + 1))
  {
    sub_25056AD4C((uint64_t)&v54);
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    uint64_t v16 = swift_allocError();
    *(_WORD *)uint64_t v24 = 395;
    *(_OWORD *)(v24 + 8) = xmmword_2505C55C0;
    *(void *)(v24 + 24) = 0x80000002505CBA00;
    *(void *)(v24 + 32) = 0xD00000000000005FLL;
    *(void *)(v24 + 40) = 0x80000002505CBA20;
    swift_willThrow();
LABEL_35:
    uint64_t result = sub_250511528(v52, v53);
    goto LABEL_11;
  }
  unint64_t v56 = v53;
  id v19 = (id)*MEMORY[0x263F17090];
  uint64_t v20 = sub_2505BE160();
  if (*(void *)(v5 + 16) && (unint64_t v22 = sub_250512FEC(v20, v21), (v23 & 1) != 0))
  {
    sub_25052857C(*(void *)(v5 + 56) + 32 * v22, (uint64_t)&v54);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v55 + 1))
  {
    sub_25056AD4C((uint64_t)&v54);
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_33:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    uint64_t v16 = swift_allocError();
    *(_WORD *)uint64_t v32 = 395;
    long long v33 = xmmword_2505C55B0;
LABEL_34:
    *(_OWORD *)(v32 + 8) = v33;
    *(void *)(v32 + 24) = 0x80000002505CBA00;
    *(void *)(v32 + 32) = 0xD00000000000005FLL;
    *(void *)(v32 + 40) = 0x80000002505CBA20;
    swift_willThrow();
    sub_250511528(v52, v56);
    goto LABEL_35;
  }
  uint64_t result = v52;
  uint64_t v25 = HIBYTE(v53) & 0xF;
  uint64_t v26 = v52 & 0xFFFFFFFFFFFFLL;
  if ((v53 & 0x2000000000000000) != 0) {
    uint64_t v27 = HIBYTE(v53) & 0xF;
  }
  else {
    uint64_t v27 = v52 & 0xFFFFFFFFFFFFLL;
  }
  if (!v27)
  {
    swift_bridgeObjectRelease();
LABEL_85:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    uint64_t v16 = swift_allocError();
    *(_WORD *)uint64_t v32 = 396;
    long long v33 = xmmword_2505C55A0;
    goto LABEL_34;
  }
  if ((v53 & 0x1000000000000000) != 0)
  {
    uint64_t v31 = sub_25056ADAC(v52, v53, 10);
    uint64_t result = swift_bridgeObjectRelease();
    if ((v31 & 0x100000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_85;
  }
  if ((v53 & 0x2000000000000000) == 0)
  {
    if ((v52 & 0x1000000000000000) != 0) {
      unint64_t v28 = (unsigned __int8 *)((v53 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v28 = (unsigned __int8 *)sub_2505BE530();
    }
    unint64_t v29 = sub_25056AE94(v28, v26, 10);
    char v30 = BYTE4(v29) & 1;
    LODWORD(v31) = v29;
LABEL_63:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
LABEL_64:
      *(_DWORD *)a3 = v31;
      *(void *)(a3 + 8) = v52;
      *(void *)(a3 + 16) = v53;
      unint64_t v41 = v56;
      *(void *)(a3 + 24) = v52;
      *(void *)(a3 + 32) = v41;
      return result;
    }
    goto LABEL_85;
  }
  *(void *)&long long v54 = v52;
  *((void *)&v54 + 1) = v53 & 0xFFFFFFFFFFFFFFLL;
  if (v52 == 43)
  {
    if (v25)
    {
      if (v25 != 1)
      {
        LODWORD(v31) = (BYTE1(v52) - 48);
        if (v31 <= 9)
        {
          if (v25 == 2) {
            goto LABEL_62;
          }
          if ((BYTE2(v52) - 48) <= 9u)
          {
            LODWORD(v31) = 10 * v31 + (BYTE2(v52) - 48);
            uint64_t v37 = v25 - 3;
            if (v37)
            {
              v38 = (unsigned __int8 *)&v54 + 3;
              while (1)
              {
                unsigned int v39 = *v38 - 48;
                if (v39 > 9) {
                  goto LABEL_59;
                }
                uint64_t v40 = 10 * v31;
                if ((v40 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_59;
                }
                LODWORD(v31) = v40 + v39;
                if (__CFADD__(v40, v39)) {
                  goto LABEL_59;
                }
                char v30 = 0;
                ++v38;
                if (!--v37) {
                  goto LABEL_63;
                }
              }
            }
            goto LABEL_62;
          }
        }
      }
      goto LABEL_59;
    }
  }
  else
  {
    if (v52 != 45)
    {
      if (v25)
      {
        LODWORD(v31) = (v52 - 48);
        if (v31 <= 9)
        {
          if (v25 == 1) {
            goto LABEL_62;
          }
          if ((BYTE1(v52) - 48) <= 9u)
          {
            LODWORD(v31) = 10 * v31 + (BYTE1(v52) - 48);
            uint64_t v42 = v25 - 2;
            if (v42)
            {
              v43 = (unsigned __int8 *)&v54 + 2;
              while (1)
              {
                unsigned int v44 = *v43 - 48;
                if (v44 > 9) {
                  goto LABEL_59;
                }
                uint64_t v45 = 10 * v31;
                if ((v45 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_59;
                }
                LODWORD(v31) = v45 + v44;
                if (__CFADD__(v45, v44)) {
                  goto LABEL_59;
                }
                char v30 = 0;
                ++v43;
                if (!--v42) {
                  goto LABEL_63;
                }
              }
            }
            goto LABEL_62;
          }
        }
      }
LABEL_59:
      LODWORD(v31) = 0;
LABEL_60:
      char v30 = 1;
      goto LABEL_63;
    }
    if (v25)
    {
      if (v25 != 1)
      {
        unsigned __int8 v34 = BYTE1(v52) - 48;
        if ((BYTE1(v52) - 48) <= 9u)
        {
          LODWORD(v31) = 0;
          BOOL v35 = v34 == 0;
          unsigned int v36 = -v34;
          if (!v35) {
            goto LABEL_60;
          }
          if (v25 == 2)
          {
            char v30 = 0;
            LODWORD(v31) = v36;
            goto LABEL_63;
          }
          unsigned __int8 v46 = BYTE2(v52) - 48;
          if ((BYTE2(v52) - 48) <= 9u)
          {
            uint64_t v47 = 10 * v36;
            if ((v47 & 0xFFFFFFFF00000000) == 0)
            {
              LODWORD(v31) = v47 - v46;
              if (v47 >= v46)
              {
                uint64_t v48 = v25 - 3;
                if (v48)
                {
                  v49 = (unsigned __int8 *)&v54 + 3;
                  while (1)
                  {
                    unsigned int v50 = *v49 - 48;
                    if (v50 > 9) {
                      goto LABEL_59;
                    }
                    uint64_t v51 = 10 * v31;
                    if ((v51 & 0xFFFFFFFF00000000) != 0) {
                      goto LABEL_59;
                    }
                    LODWORD(v31) = v51 - v50;
                    if (v51 < v50) {
                      goto LABEL_59;
                    }
                    char v30 = 0;
                    ++v49;
                    if (!--v48) {
                      goto LABEL_63;
                    }
                  }
                }
LABEL_62:
                char v30 = 0;
                goto LABEL_63;
              }
            }
          }
        }
      }
      goto LABEL_59;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_25056AB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_250569EE0(a1, a2, a3, a4);
  CFDictionaryRef v4 = (const __CFDictionary *)sub_2505BE0F0();
  swift_bridgeObjectRelease();
  OSStatus v5 = SecItemDelete(v4);

  if (v5 != -25300 && v5 != 0)
  {
    sub_2505BE4B0();
    swift_bridgeObjectRelease();
    CFStringRef v7 = SecCopyErrorMessageString(v5, 0);
    if (v7)
    {
      uint64_t v8 = (__CFString *)v7;
      sub_2505BE140();
    }
    else
    {
      sub_2505BE770();
    }
    sub_2505BE190();
    swift_bridgeObjectRelease();
    sub_25056AC90();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000001BLL;
    *(void *)(v9 + 8) = 0x80000002505CB9A0;
    *(_DWORD *)(v9 + 16) = v5;
    swift_willThrow();
  }
}

unint64_t sub_25056AC90()
{
  unint64_t result = qword_269AB6908;
  if (!qword_269AB6908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6908);
  }
  return result;
}

void *sub_25056ACE4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6008);
  CFDictionaryRef v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25056AD4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6918);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25056ADAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2505BE200();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    CFStringRef v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_25056B114();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    CFStringRef v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    CFStringRef v7 = (unsigned __int8 *)sub_2505BE530();
  }
LABEL_7:
  id v11 = sub_25056AE94(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_25056AE94(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25056B114()
{
  unint64_t v0 = sub_2505BE210();
  uint64_t v4 = sub_25056B194(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25056B194(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_25056B2EC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      char v11 = sub_25056ACE4(v9, 0);
      unint64_t v12 = sub_25056B3EC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_2505BE530();
LABEL_4:
        JUMPOUT(0x25337F0E0);
      }
    }
    else
    {
      char v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x25337F0E0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x25337F0E0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_25056B2EC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_2505715C4(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_2505715C4(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_25056B3EC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_2505715C4(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_2505BE1E0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_2505BE530();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_2505715C4(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_2505BE1B0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

CFTypeID sub_25056B600(const void *a1)
{
  CFTypeID v1 = CFGetTypeID(a1);
  if (v1 == CFArrayGetTypeID())
  {
    type metadata accessor for CFArray(0);
    id v2 = (id)swift_dynamicCastUnknownClassUnconditional();
    __swift_instantiateConcreteTypeFromMangledName(qword_269AB6920);
    sub_2505BE2B0();
    CFTypeID v1 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    swift_allocError();
    *(_WORD *)uint64_t v4 = 395;
    *(_OWORD *)(v4 + 8) = xmmword_2505C55F0;
    *(void *)(v4 + 24) = 0x80000002505CBA80;
    *(void *)(v4 + 32) = 0xD00000000000005FLL;
    *(void *)(v4 + 40) = 0x80000002505CBA20;
    swift_willThrow();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    swift_allocError();
    *(_WORD *)uint64_t v3 = 395;
    *(_OWORD *)(v3 + 8) = xmmword_2505C55E0;
    *(void *)(v3 + 24) = 0x80000002505CBA80;
    *(void *)(v3 + 32) = 0xD00000000000005FLL;
    *(void *)(v3 + 40) = 0x80000002505CBA20;
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_25056B798()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25056B834(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7 & 0xFC | 3;
  int v9 = v7 & 0x100000;
  if (v8 > 7 || v9 != 0 || ((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 > 0x18)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_DWORD *)(((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)a2 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL);
  }
  return v4;
}

uint64_t sub_25056B92C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_25056B958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(_DWORD *)((*(void *)(v5 + 48) + 3 + a1) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(void *)(v5 + 48) + 3 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_25056B9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(_DWORD *)((*(void *)(v5 + 40) + 3 + a1) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(void *)(v5 + 40) + 3 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_25056BA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_DWORD *)((*(void *)(v5 + 32) + 3 + a1) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(void *)(v5 + 32) + 3 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_25056BACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_DWORD *)((*(void *)(v5 + 24) + 3 + a1) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(void *)(v5 + 24) + 3 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_25056BB48(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFFC;
    if ((v6 & 0xFFFFFFFC) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25056BC5CLL);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_25056BC70(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            uint64_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 3) & 0xFFFFFFFC) != 0xFFFFFFFC)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x25056BE1CLL);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for KeychainStore.RetrievedVersionedGroupInfo()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25056BE60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for KeyStoreError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for KeyStoreError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyStoreError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyStoreError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyStoreError()
{
  return &type metadata for KeyStoreError;
}

ValueMetadata *type metadata accessor for KeychainStore()
{
  return &type metadata for KeychainStore;
}

uint64_t sub_25056BFF0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4)
{
  LODWORD(v48) = a4;
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v7 = *a2;
  unint64_t v8 = a2[1];
  uint64_t v37 = a3[1];
  uint64_t v38 = *a3;
  uint64_t v35 = a3[3];
  uint64_t v36 = a3[2];
  uint64_t v9 = a3[6];
  uint64_t v33 = a3[5];
  uint64_t v34 = a3[4];
  uint64_t v10 = a3[7];
  swift_beginAccess();
  uint64_t v11 = *(void *)(v4 + 16);
  if (!*(void *)(v11 + 16)) {
    goto LABEL_14;
  }
  sub_2504DBC4C(v7, v8);
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_250512FE8(v7, v8);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_250511528(v7, v8);
LABEL_14:
    v47[0] = v5;
    v47[1] = v6;
    v46[0] = v7;
    v46[1] = v8;
    *(void *)&long long v39 = v38;
    *((void *)&v39 + 1) = v37;
    uint64_t v40 = v36;
    uint64_t v41 = v35;
    uint64_t v42 = v34;
    uint64_t v43 = v33;
    uint64_t v44 = v9;
    uint64_t v45 = v10;
    return sub_25056C324(v47, v46, &v39, v48);
  }
  uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_250511528(v7, v8);
  if (!*(void *)(v14 + 16))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_2504DBC4C(v5, v6);
  unint64_t v15 = sub_250512FE8(v5, v6);
  if ((v16 & 1) == 0)
  {
    sub_250511528(v5, v6);
    goto LABEL_13;
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  sub_250511528(v5, v6);
  if (!*(void *)(v17 + 16) || (unint64_t v18 = sub_250513290(v48), (v19 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v20 = (uint64_t *)(*(void *)(v17 + 56) + (v18 << 6));
  unint64_t v21 = v20[1];
  uint64_t v48 = *v20;
  uint64_t v23 = v20[2];
  unint64_t v22 = v20[3];
  uint64_t v25 = v20[4];
  unint64_t v24 = v20[5];
  uint64_t v26 = v20[6];
  unint64_t v27 = v20[7];
  sub_2504DBC4C(v48, v21);
  sub_2504DBC4C(v23, v22);
  sub_2504DBC4C(v25, v24);
  sub_2504DBC4C(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250511528(v48, v21);
  sub_250511528(v23, v22);
  sub_250511528(v25, v24);
  sub_250511528(v26, v27);
  sub_2505BE4B0();
  swift_bridgeObjectRelease();
  *(void *)&long long v39 = 0xD000000000000014;
  *((void *)&v39 + 1) = 0x80000002505CBB10;
  CFStringRef v28 = SecCopyErrorMessageString(-25299, 0);
  if (v28)
  {
    unsigned int v29 = (__CFString *)v28;
    sub_2505BE140();
  }
  else
  {
    LODWORD(v47[0]) = -25299;
    sub_2505BE770();
  }
  sub_2505BE190();
  swift_bridgeObjectRelease();
  uint64_t v31 = *((void *)&v39 + 1);
  sub_25056AC90();
  swift_allocError();
  *(void *)uint64_t v32 = v39;
  *(void *)(v32 + 8) = v31;
  *(_DWORD *)(v32 + 16) = -25299;
  return swift_willThrow();
}

uint64_t sub_25056C324(uint64_t *a1, uint64_t *a2, _OWORD *a3, int a4)
{
  uint64_t v6 = v4;
  LODWORD(v7) = a4;
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  uint64_t v10 = *a2;
  unint64_t v11 = a2[1];
  long long v12 = a3[1];
  v44[0] = *a3;
  v44[1] = v12;
  long long v13 = a3[3];
  v44[2] = a3[2];
  v44[3] = v13;
  unint64_t v14 = v4 + 16;
  swift_beginAccess();
  sub_2504DBC4C(v10, v11);
  sub_2504DBC4C(v8, v9);
  sub_25056CF3C((uint64_t *)v44);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *(void *)(v4 + 16);
  uint64_t v42 = v16;
  *(void *)(v6 + 16) = 0x8000000000000000;
  unint64_t v18 = sub_250512FE8(v10, v11);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v5 = v17;
  if (*(void *)(v16 + 24) >= v21)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_19;
    }
  }
  else
  {
    sub_2505B455C(v21, isUniquelyReferenced_nonNull_native);
    unint64_t v22 = sub_250512FE8(v10, v11);
    if ((v5 & 1) != (v23 & 1))
    {
      sub_2505BE7E0();
      __break(1u);
      goto LABEL_21;
    }
    unint64_t v18 = v22;
  }
  while (1)
  {
    unsigned int v41 = v7;
    *(void *)unint64_t v14 = v16;
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)v14;
    swift_bridgeObjectRetain();
    if ((v5 & 1) == 0)
    {
      unint64_t v25 = sub_2504E1EA8(MEMORY[0x263F8EE78]);
      sub_2505B67F8(v18, v10, v11, v25, v24);
      sub_2504DBC4C(v10, v11);
    }
    uint64_t v26 = *(void *)(v24 + 56);
    swift_bridgeObjectRelease();
    uint64_t v7 = 8 * v18;
    char v5 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *(void *)(v26 + 8 * v18);
    uint64_t v42 = v27;
    *(void *)(v26 + 8 * v18) = 0x8000000000000000;
    unint64_t v14 = sub_250512FE8(v8, v9);
    uint64_t v29 = *(void *)(v27 + 16);
    BOOL v30 = (v28 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (!__OFADD__(v29, v30)) {
      break;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    sub_2505B6AAC();
    uint64_t v16 = v42;
  }
  char v32 = v28;
  if (*(void *)(v27 + 24) >= v31)
  {
    if ((v5 & 1) == 0) {
      sub_2505B6AB8();
    }
    goto LABEL_14;
  }
  sub_2505B4568(v31, v5);
  unint64_t v33 = sub_250512FE8(v8, v9);
  if ((v32 & 1) != (v34 & 1))
  {
LABEL_21:
    uint64_t result = sub_2505BE7E0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v33;
LABEL_14:
  *(void *)(v26 + v7) = v27;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v26 + v7);
  if ((v32 & 1) == 0)
  {
    unint64_t v36 = sub_25051B738(MEMORY[0x263F8EE78]);
    sub_2505B67F8(v14, v8, v9, v36, v35);
    sub_2504DBC4C(v8, v9);
  }
  uint64_t v37 = *(void *)(v35 + 56);
  uint64_t v38 = 8 * v14;
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v43 = *(void *)(v37 + v38);
  *(void *)(v37 + v38) = 0x8000000000000000;
  sub_250514928(v44, v41, v39);
  *(void *)(v37 + v38) = v43;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_250511528(v8, v9);
  return sub_250511528(v10, v11);
}

uint64_t sub_25056C620@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v8 = *a2;
  unint64_t v7 = a2[1];
  unint64_t v9 = (uint64_t *)(v3 + 16);
  uint64_t result = swift_beginAccess();
  if (!*(void *)(*(void *)(v3 + 16) + 16)) {
    goto LABEL_16;
  }
  sub_2504DBC4C(v8, v7);
  swift_bridgeObjectRetain();
  sub_250512FE8(v8, v7);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = v8;
    unint64_t v30 = v7;
LABEL_15:
    uint64_t result = sub_250511528(v29, v30);
LABEL_16:
    *(_OWORD *)a3 = xmmword_2505BFEE0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_DWORD *)(a3 + 64) = 0;
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_250511528(v8, v7);
  swift_bridgeObjectRelease();
  uint64_t v12 = *v9;
  if (!*(void *)(*v9 + 16))
  {
    sub_2504DBC4C(v6, v5);
    __break(1u);
    goto LABEL_18;
  }
  sub_2504DBC4C(v8, v7);
  sub_2504DBC4C(v6, v5);
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_250512FE8(v8, v7);
  if ((v14 & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    sub_250511528(v8, v7);
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease();
    sub_250511528(v6, v5);
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_250511528(v8, v7);
  if (!*(void *)(v15 + 16) || (sub_250512FE8(v6, v5), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = v6;
    unint64_t v30 = v5;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_250511528(v6, v5);
  swift_bridgeObjectRelease();
  uint64_t v17 = *v9;
  if (!*(void *)(*v9 + 16))
  {
LABEL_20:
    sub_2504DBC4C(v6, v5);
    __break(1u);
    goto LABEL_21;
  }
  sub_2504DBC4C(v8, v7);
  sub_2504DBC4C(v6, v5);
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_250512FE8(v8, v7);
  if (v19)
  {
    uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_250511528(v8, v7);
    if (*(void *)(v20 + 16))
    {
      unint64_t v21 = sub_250512FE8(v6, v5);
      if (v22)
      {
        uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_250511528(v6, v5);
        sub_25056C938(v23, (int64_t)v31);
        uint64_t result = swift_bridgeObjectRelease();
        long long v24 = v32;
        if ((unint64_t)v32 >> 60 != 15)
        {
          int v25 = v31[0];
          long long v26 = v33;
          long long v27 = v34;
          uint64_t v28 = v35;
          *(void *)a3 = v31[1];
          *(_OWORD *)(a3 + 8) = v24;
          *(_OWORD *)(a3 + 24) = v26;
          *(_OWORD *)(a3 + 40) = v27;
          *(void *)(a3 + 56) = v28;
          *(_DWORD *)(a3 + 64) = v25;
          return result;
        }
        goto LABEL_22;
      }
    }
    goto LABEL_19;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t result = sub_250511528(v8, v7);
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

double sub_25056C938@<D0>(uint64_t a1@<X0>, int64_t a2@<X8>)
{
  uint64_t v3 = a1 + 64;
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = 1 << v4;
  uint64_t v6 = -1;
  if (1 << v4 < 64) {
    uint64_t v6 = ~(-1 << (1 << v4));
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  if (v7)
  {
    long long v34 = (void *)a2;
    uint64_t v8 = 0;
    unint64_t v9 = __clz(__rbit64(v7));
    unint64_t v10 = (v7 - 1) & v7;
    int64_t v11 = (unint64_t)(v5 + 63) >> 6;
    while (2)
    {
      unsigned int v12 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v9);
      unint64_t v13 = (uint64_t *)(*(void *)(a1 + 56) + (v9 << 6));
      uint64_t v15 = *v13;
      unint64_t v14 = v13[1];
      uint64_t v16 = v13[2];
      unint64_t v17 = v13[3];
      uint64_t v46 = v13[4];
      unint64_t v47 = v13[5];
      uint64_t v45 = v13[6];
      unint64_t v48 = v13[7];
      swift_bridgeObjectRetain();
      uint64_t v43 = v15;
      unint64_t v41 = v14;
      sub_2504DBC4C(v15, v14);
      uint64_t v44 = v16;
      unint64_t v42 = v17;
      sub_2504DBC4C(v16, v17);
      sub_2504DBC4C(v46, v47);
      sub_2504DBC4C(v45, v48);
      uint64_t v35 = v3;
      int64_t v36 = v11;
      if (v10)
      {
LABEL_6:
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v8 << 6);
        goto LABEL_7;
      }
      while (1)
      {
        a2 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          break;
        }
        if (a2 >= v11) {
          goto LABEL_27;
        }
        unint64_t v22 = *(void *)(v3 + 8 * a2);
        ++v8;
        if (!v22)
        {
          uint64_t v8 = a2 + 1;
          if (a2 + 1 >= v11) {
            goto LABEL_27;
          }
          unint64_t v22 = *(void *)(v3 + 8 * v8);
          if (!v22)
          {
            uint64_t v8 = a2 + 2;
            if (a2 + 2 >= v11) {
              goto LABEL_27;
            }
            unint64_t v22 = *(void *)(v3 + 8 * v8);
            if (!v22)
            {
              uint64_t v8 = a2 + 3;
              if (a2 + 3 >= v11) {
                goto LABEL_27;
              }
              unint64_t v22 = *(void *)(v3 + 8 * v8);
              if (!v22)
              {
                a2 += 4;
                if (a2 >= v11)
                {
LABEL_27:
                  swift_release();
                  *long long v34 = v12;
                  v34[1] = v43;
                  v34[2] = v41;
                  v34[3] = v44;
                  v34[4] = v42;
                  v34[5] = v46;
                  v34[6] = v47;
                  v34[7] = v45;
                  v34[8] = v48;
                  return result;
                }
                unint64_t v22 = *(void *)(v3 + 8 * a2);
                if (!v22)
                {
                  while (1)
                  {
                    uint64_t v8 = a2 + 1;
                    if (__OFADD__(a2, 1)) {
                      break;
                    }
                    if (v8 >= v11) {
                      goto LABEL_27;
                    }
                    unint64_t v22 = *(void *)(v3 + 8 * v8);
                    ++a2;
                    if (v22) {
                      goto LABEL_24;
                    }
                  }
                  __break(1u);
LABEL_44:
                  uint64_t v31 = 0;
                  uint64_t v32 = 6;
                  if (v11 > 6) {
                    uint64_t v32 = v11;
                  }
                  uint64_t v33 = v32 - 6;
                  while (v33 != v31)
                  {
                    unint64_t v30 = *(void *)(a1 + 112 + 8 * v31++);
                    if (v30)
                    {
                      uint64_t v8 = v31 + 5;
                      goto LABEL_31;
                    }
                  }
                  goto LABEL_50;
                }
                uint64_t v8 = a2;
              }
            }
          }
        }
LABEL_24:
        unsigned int v18 = v22 - 1;
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_7:
        unsigned int v21 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v20);
        if (v21 >= v12)
        {
          uint64_t v23 = (uint64_t *)(*(void *)(a1 + 56) + (v20 << 6));
          uint64_t v24 = v23[6];
          uint64_t v26 = v23[4];
          unint64_t v25 = v23[5];
          uint64_t v27 = v23[2];
          unint64_t v28 = v23[3];
          unint64_t v39 = v23[1];
          unint64_t v40 = v23[7];
          unint64_t v37 = v28;
          uint64_t v38 = *v23;
          sub_2504DBC4C(*v23, v39);
          sub_2504DBC4C(v27, v28);
          sub_2504DBC4C(v26, v25);
          sub_2504DBC4C(v24, v40);
          sub_250511528(v43, v41);
          sub_250511528(v44, v42);
          sub_250511528(v46, v47);
          sub_250511528(v45, v48);
          unsigned int v12 = v21;
          uint64_t v43 = v38;
          uint64_t v44 = v27;
          uint64_t v3 = v35;
          unint64_t v41 = v39;
          unint64_t v42 = v37;
          uint64_t v46 = v26;
          int64_t v11 = v36;
          unint64_t v47 = v25;
          uint64_t v45 = v24;
          unint64_t v48 = v40;
          if (v10) {
            goto LABEL_6;
          }
        }
        else if (v10)
        {
          goto LABEL_6;
        }
      }
      __break(1u);
LABEL_38:
      if (v18 >= 9)
      {
        unint64_t v30 = *(void *)(a1 + 96);
        if (v30)
        {
          uint64_t v8 = 4;
        }
        else
        {
          unint64_t v30 = *(void *)(a1 + 104);
          if (!v30) {
            goto LABEL_44;
          }
          uint64_t v8 = 5;
        }
LABEL_31:
        unint64_t v10 = (v30 - 1) & v30;
        unint64_t v9 = __clz(__rbit64(v30)) + (v8 << 6);
        continue;
      }
      break;
    }
  }
  else
  {
    unsigned int v18 = v4 & 0x3F;
    if (v18 > 6)
    {
      int64_t v11 = (unint64_t)(v5 + 63) >> 6;
      unint64_t v30 = *(void *)(a1 + 72);
      if (v30)
      {
        long long v34 = (void *)a2;
        uint64_t v8 = 1;
        goto LABEL_31;
      }
      if (v18 >= 8)
      {
        unint64_t v30 = *(void *)(a1 + 80);
        long long v34 = (void *)a2;
        if (v30)
        {
          uint64_t v8 = 2;
        }
        else
        {
          unint64_t v30 = *(void *)(a1 + 88);
          if (!v30) {
            goto LABEL_38;
          }
          uint64_t v8 = 3;
        }
        goto LABEL_31;
      }
    }
  }
LABEL_50:
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0xF000000000000000;
  double result = 0.0;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  return result;
}

uint64_t sub_25056CCF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v6 = *a2;
  unint64_t v5 = a2[1];
  unint64_t v7 = (uint64_t *)(v2 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v2 + 16);
  if (*(void *)(v9 + 16))
  {
    sub_2504DBC4C(v6, v5);
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_250512FE8(v6, v5);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_250511528(v6, v5);
      sub_2504DBC4C(v3, v4);
      sub_2505B3F70(v3, v4);
      sub_250511528(v3, v4);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_2504DBC4C(v6, v5);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v14 = *v7;
      *unint64_t v7 = 0x8000000000000000;
      sub_250514130(v12, v6, v5, isUniquelyReferenced_nonNull_native);
      *unint64_t v7 = v14;
      swift_bridgeObjectRelease();
      sub_250511528(v6, v5);
      return swift_endAccess();
    }
    else
    {
      swift_bridgeObjectRelease();
      return sub_250511528(v6, v5);
    }
  }
  return result;
}

uint64_t sub_25056CE74()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnitTestStorageInteraction()
{
  return self;
}

uint64_t sub_25056CED0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25056C620(a1, a2, a3);
}

uint64_t sub_25056CEF4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4)
{
  return sub_25056BFF0(a1, a2, a3, a4);
}

uint64_t sub_25056CF18(uint64_t *a1, uint64_t *a2)
{
  return sub_25056CCF4(a1, a2);
}

uint64_t *sub_25056CF3C(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  sub_2504DBC4C(*a1, a1[1]);
  sub_2504DBC4C(v2, v3);
  sub_2504DBC4C(v4, v5);
  sub_2504DBC4C(v6, v7);
  return a1;
}

uint64_t sub_25056CFB4(unint64_t a1, unint64_t a2)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  *(void *)&long long v43 = a1;
  *((void *)&v43 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A10);
  if (swift_dynamicCast())
  {
    sub_2504DAEE4(v41, (uint64_t)&v44);
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    sub_2505BD820();
    swift_bridgeObjectRelease();
    v41[0] = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    return *(void *)&v41[0];
  }
  uint64_t v42 = 0;
  memset(v41, 0, sizeof(v41));
  sub_2504DAF60((uint64_t)v41, &qword_269AB6A18);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v44 = a1;
      uint64_t v45 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v44 + (HIBYTE(a2) & 0xF);
      unint64_t v7 = &v44;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_2505BE530();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      unint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_25057233C(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v41[0] = v8;
      *((void *)&v41[0] + 1) = v10;
      return *(void *)&v41[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_2505BE1A0();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v41[0] = sub_2505723A0(v11);
  *((void *)&v41[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v41[0], v12, v13, v14, v15);
  unint64_t v16 = (unint64_t)sub_250571640((void *(*)(uint64_t *__return_ptr, char *, char *))sub_25057389C);
  uint64_t v19 = *((void *)&v41[0] + 1) >> 62;
  uint64_t v20 = v16;
  uint64_t v21 = v3;
  unint64_t v22 = v17;
  switch(*((void *)&v41[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v23) = DWORD1(v41[0]) - LODWORD(v41[0]);
      if (__OFSUB__(DWORD1(v41[0]), v41[0])) {
        goto LABEL_73;
      }
      uint64_t v23 = (int)v23;
LABEL_23:
      if (v18 != v23)
      {
        if (v19)
        {
          if (v19 == 1) {
            uint64_t v27 = *(uint64_t *)&v41[0] >> 32;
          }
          else {
            uint64_t v27 = *(void *)(*(void *)&v41[0] + 24);
          }
        }
        else
        {
          uint64_t v27 = BYTE14(v41[0]);
        }
LABEL_61:
        if (v27 < v18)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_2505BD8E0();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v28 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v28 = v16 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v43 + 7) = 0;
      *(void *)&long long v43 = 0;
      if (4 * v28 == v17 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v29) = 0;
      uint64_t v30 = (v16 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v30) = 1;
      }
      uint64_t v31 = 4 << v30;
      uint64_t v38 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v36 = (uint64_t)v8;
      uint64_t v37 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v25 = *(void *)(*(void *)&v41[0] + 16);
      uint64_t v24 = *(void *)(*(void *)&v41[0] + 24);
      BOOL v26 = __OFSUB__(v24, v25);
      uint64_t v23 = v24 - v25;
      if (!v26) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v18) {
        goto LABEL_29;
      }
      uint64_t v27 = 0;
      goto LABEL_61;
    default:
      uint64_t v23 = BYTE14(v41[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v32 = v22 & 0xC;
    unint64_t v2 = v22;
    if (v32 == v31) {
      unint64_t v2 = sub_2505715C4(v22, v20, v21);
    }
    unint64_t v33 = v2 >> 16;
    if (v2 >> 16 >= v28)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v21 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_2505BE1E0();
      char v34 = v2;
      if (v32 != v31) {
        goto LABEL_47;
      }
    }
    else if ((v21 & 0x2000000000000000) != 0)
    {
      uint64_t v44 = v20;
      uint64_t v45 = v38;
      char v34 = *((unsigned char *)&v44 + v33);
      if (v32 != v31) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v37;
      if ((v20 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_2505BE530();
      }
      char v34 = *(unsigned char *)(v2 + v33);
      if (v32 != v31)
      {
LABEL_47:
        if ((v21 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_2505715C4(v22, v20, v21);
    unint64_t v22 = v2;
    if ((v21 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v22 = (v22 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v28 <= v22 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_2505BE1B0();
    unint64_t v22 = v2;
LABEL_53:
    *((unsigned char *)&v43 + v29) = v34;
    unsigned int v29 = v29 + 1;
    if ((v29 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v43) = v29;
    if (v29 == 14)
    {
      uint64_t v44 = v43;
      LODWORD(v45) = DWORD2(v43);
      WORD2(v45) = WORD6(v43);
      sub_2505BD8F0();
      LOBYTE(v29) = 0;
      BYTE14(v43) = 0;
    }
  }
  while (4 * v28 != v22 >> 14);
  uint64_t v8 = (unsigned char *)v36;
  if ((_BYTE)v29)
  {
    uint64_t v44 = v43;
    LODWORD(v45) = DWORD2(v43);
    WORD2(v45) = WORD6(v43);
    sub_2505BD8F0();
    sub_25051B8D4(v36, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_25051B8D4((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v41[0];
}

uint64_t sub_25056D4E4(uint64_t a1)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6010);
  uint64_t v7 = MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  unint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7, v10, v11, v12, v13);
  sub_2504DAEFC(a1, (uint64_t)&v23[-v14], &qword_269AB6010);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A10);
  if (!swift_dynamicCast())
  {
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
    sub_2504DAF60((uint64_t)v25, &qword_269AB6A18);
    v25[0] = xmmword_2505BFEF0;
    *(void *)((char *)&v24 + 7) = 0;
    *(void *)&long long v24 = 0;
    sub_2504DAEFC(a1, (uint64_t)v9, &qword_269AB6010);
    uint64_t v15 = sub_25059ECF0(&v27, &v24, 0);
    uint64_t v16 = v27;
    if (v15)
    {
      if (v15 <= 0)
      {
        sub_2505BD8E0();
        goto LABEL_6;
      }
    }
    else
    {
      unint64_t v18 = *((void *)&v27 + 1);
      *(void *)((char *)&v27 + 7) = 0;
      *(void *)&long long v27 = 0;
      if (!v28 || (uint64_t v19 = *(void *)(v16 + 16), v18 == v19))
      {
LABEL_6:
        swift_bridgeObjectRelease();
        sub_2504DAF60(a1, &qword_269AB6010);
        return *(void *)&v25[0];
      }
      if ((v18 & 0x8000000000000000) != 0) {
LABEL_26:
      }
        __break(1u);
      if (v18 < *(void *)(v16 + 16))
      {
        LOBYTE(v20) = 0;
        uint64_t v21 = v28 - 1;
        uint64_t v22 = v19 - 1;
        do
        {
          *((unsigned char *)&v27 + v20) = *(unsigned char *)(v16 + v18 + 32);
          __int16 v20 = v20 + 1;
          if ((v20 & 0x100) != 0) {
            goto LABEL_24;
          }
          if (v20 == 14)
          {
            *(void *)&long long v24 = v27;
            DWORD2(v24) = DWORD2(v27);
            WORD6(v24) = WORD6(v27);
            sub_2505BD8F0();
            if (!v21 || v22 == v18) {
              goto LABEL_6;
            }
            LOBYTE(v20) = 0;
          }
          else if (v22 == v18 || !v21)
          {
            *(void *)&long long v24 = v27;
            DWORD2(v24) = DWORD2(v27);
            WORD6(v24) = WORD6(v27);
            sub_2505BD8F0();
            goto LABEL_6;
          }
          ++v18;
          --v21;
        }
        while (v18 < *(void *)(v16 + 16));
      }
      __break(1u);
LABEL_24:
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  sub_2504DAEE4(v25, (uint64_t)&v27);
  __swift_project_boxed_opaque_existential_1(&v27, v29);
  sub_2505BD820();
  sub_2504DAF60(a1, &qword_269AB6010);
  v25[0] = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  return *(void *)&v25[0];
}

uint64_t sub_25056D81C(uint64_t a1, unint64_t a2)
{
  v28[5] = *MEMORY[0x263EF8340];
  v28[3] = MEMORY[0x263F06F78];
  v28[4] = MEMORY[0x263F06F68];
  v28[0] = a1;
  v28[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v28, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_2504DBC4C(a1, a2);
      sub_2504DBC4C(v5, v6);
      uint64_t v8 = (unsigned char *)sub_2505BD7D0();
      if (v8)
      {
        uint64_t v9 = sub_2505BD800();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = sub_2505BD7F0();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      uint64_t v12 = &v8[v11];
      if (v8) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      sub_250571944(v8, v13, &v27);
      sub_250511528(v5, v6);
LABEL_27:
      sub_250511528(a1, a2);
      uint64_t v24 = v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_2504DBC4C(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v16 = (unsigned char *)sub_2505BD7D0();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = sub_2505BD800();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = sub_2505BD7F0();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      uint64_t v22 = &v16[v21];
      if (v16) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 0;
      }
      sub_250571944(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_2504DBC4C(a1, a2);
      uint64_t v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_2504DBC4C(a1, a2);
      uint64_t v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_250571944(v26, v7, &v27);
      goto LABEL_27;
  }
}

uint64_t sub_25056DAD0(uint64_t a1, uint64_t a2)
{
  v8[3] = MEMORY[0x263F8D3E8];
  v8[4] = MEMORY[0x263F07B80];
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x263F8D3E8]);
  uint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (uint64_t v4 = (unsigned char *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_250572178(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_25057223C((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_2505722B8((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_25056DB8C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v50 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  uint64_t v49 = (uint64_t)&v43 - v14;
  uint64_t v15 = type metadata accessor for Group.MemberIDAndDiversifiedKey(0);
  uint64_t v48 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15 - 8, v16, v17, v18, v19);
  uint64_t v21 = (uint64_t *)((char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!v22) {
    return v23;
  }
  uint64_t v53 = MEMORY[0x263F8EE78];
  sub_25051204C(0, v22, 0);
  uint64_t result = sub_25051A020(a1);
  uint64_t v26 = result;
  uint64_t v27 = 0;
  uint64_t v28 = a1 + 64;
  char v29 = *(unsigned char *)(a1 + 32);
  uint64_t v43 = a1 + 88;
  int64_t v44 = v22;
  uint64_t v46 = a1 + 64;
  uint64_t v47 = v21;
  uint64_t v45 = v25;
  while ((v26 & 0x8000000000000000) == 0 && v26 < 1 << v29)
  {
    unint64_t v32 = (unint64_t)v26 >> 6;
    if ((*(void *)(v28 + 8 * ((unint64_t)v26 >> 6)) & (1 << v26)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(a1 + 36) != v25) {
      goto LABEL_30;
    }
    uint64_t v33 = v49;
    sub_250573DF8(*(void *)(a1 + 56) + *(void *)(v51 + 72) * v26, v49, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v34 = v33;
    uint64_t v23 = v50;
    sub_250571F44(v34, v50, type metadata accessor for GroupMembership.MemberProperties);
    sub_25057081C(v23, &v52, v21);
    sub_250573D98(v23, type metadata accessor for GroupMembership.MemberProperties);
    if (v1)
    {
      swift_release();
      return v23;
    }
    uint64_t v23 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25051204C(0, *(void *)(v23 + 16) + 1, 1);
      uint64_t v23 = v53;
    }
    unint64_t v36 = *(void *)(v23 + 16);
    unint64_t v35 = *(void *)(v23 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_25051204C(v35 > 1, v36 + 1, 1);
      uint64_t v23 = v53;
    }
    *(void *)(v23 + 16) = v36 + 1;
    uint64_t v37 = v23
        + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))
        + *(void *)(v48 + 72) * v36;
    uint64_t v21 = v47;
    uint64_t result = sub_250571F44((uint64_t)v47, v37, type metadata accessor for Group.MemberIDAndDiversifiedKey);
    char v29 = *(unsigned char *)(a1 + 32);
    unint64_t v30 = 1 << v29;
    if (v26 >= 1 << v29) {
      goto LABEL_31;
    }
    uint64_t v28 = v46;
    uint64_t v38 = *(void *)(v46 + 8 * v32);
    if ((v38 & (1 << v26)) == 0) {
      goto LABEL_32;
    }
    LODWORD(v25) = v45;
    if (*(_DWORD *)(a1 + 36) != v45) {
      goto LABEL_33;
    }
    unint64_t v39 = v38 & (-2 << (v26 & 0x3F));
    if (v39)
    {
      unint64_t v30 = __clz(__rbit64(v39)) | v26 & 0xFFFFFFFFFFFFFFC0;
      int64_t v31 = v44;
    }
    else
    {
      unint64_t v40 = v32 + 1;
      unint64_t v41 = (v30 + 63) >> 6;
      int64_t v31 = v44;
      if (v32 + 1 < v41)
      {
        unint64_t v42 = *(void *)(v46 + 8 * v40);
        if (!v42)
        {
          unint64_t v40 = v32 + 2;
          if (v32 + 2 >= v41) {
            goto LABEL_4;
          }
          unint64_t v42 = *(void *)(v46 + 8 * v40);
          if (!v42)
          {
            while (v41 - 3 != v32)
            {
              unint64_t v42 = *(void *)(v43 + 8 * v32++);
              if (v42)
              {
                unint64_t v40 = v32 + 2;
                goto LABEL_20;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_20:
        unint64_t v30 = __clz(__rbit64(v42)) + (v40 << 6);
      }
    }
LABEL_4:
    ++v27;
    uint64_t v26 = v30;
    if (v27 == v31) {
      return v23;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t static Group.GroupDBDecryptionKey.KeyType.== infix(_:_:)()
{
  return 1;
}

uint64_t Group.GroupDBDecryptionKey.p256DecryptionKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2504DAEFC(v1, a1, &qword_269AB5A78);
}

uint64_t Group.GroupDBDecryptionKey.hash(into:)(uint64_t a1)
{
  return sub_25056F8E0(a1, MEMORY[0x263F047A0], &qword_269AB5A78, MEMORY[0x263F04778]);
}

BOOL static Group.GroupDBDecryptionKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_250571B6C(a1, a2, MEMORY[0x263F047A0], &qword_269AB68F0, &qword_269AB5A78, MEMORY[0x263F04778]);
}

uint64_t Group.GroupDBDecryptionKey.hashValue.getter()
{
  return sub_25056FB3C(MEMORY[0x263F047A0], &qword_269AB5A78, MEMORY[0x263F04778]);
}

uint64_t sub_25056E084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25056FD50(a1, a2, a3, MEMORY[0x263F047A0], &qword_269AB5A78, MEMORY[0x263F04778]);
}

uint64_t sub_25056E0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25056FF58(a1, a2, a3, MEMORY[0x263F047A0], &qword_269AB5A78, MEMORY[0x263F04778]);
}

BOOL sub_25056E0EC(uint64_t a1, uint64_t a2)
{
  return sub_250571B6C(a1, a2, MEMORY[0x263F047A0], &qword_269AB68F0, &qword_269AB5A78, MEMORY[0x263F04778]);
}

uint64_t Group.generateVersionGroupDBDecryptionKeys(serviceName:version:keyType:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
  MEMORY[0x270FA5388](v10 - 8, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Group.GroupDBDecryptionKey(0);
  MEMORY[0x270FA5388](v17 - 8, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC14GroupKitCrypto5Group_state) != 6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v24 = 421;
    long long v25 = xmmword_2505C5740;
    goto LABEL_5;
  }
  swift_beginAccess();
  if (*(_DWORD *)(v4 + 64) < a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v24 = 422;
    long long v25 = xmmword_2505C5760;
LABEL_5:
    *(_OWORD *)(v24 + 8) = v25;
    *(void *)(v24 + 24) = 0x80000002505CBB30;
    *(void *)(v24 + 32) = 0xD00000000000005BLL;
    *(void *)(v24 + 40) = 0x80000002505CBB80;
    return swift_willThrow();
  }
  LOBYTE(v30) = 1;
  uint64_t result = sub_25050BC40(a3, (unsigned __int8 *)&v30, v32);
  if (!v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F40);
    if (swift_dynamicCast())
    {
      uint64_t v27 = v30;
      unint64_t v28 = v31;
      sub_2504DBC4C(v30, v31);
      swift_bridgeObjectRetain();
      sub_25055DF7C(a1, a2, v27, v28);
      sub_250511528(v27, v28);
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_2505BDF90();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 0, 1, v29);
      sub_2505283F0((uint64_t)v16, (uint64_t)v23, &qword_269AB5A78);
      sub_250571F44((uint64_t)v23, a4, type metadata accessor for Group.GroupDBDecryptionKey);
      return sub_250511528(v27, v28);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v24 = 423;
    long long v25 = xmmword_2505C5750;
    goto LABEL_5;
  }
  return result;
}

uint64_t Group.generateCurrentGroupDBDecryptionKeys(serviceName:keyType:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  return Group.generateVersionGroupDBDecryptionKeys(serviceName:version:keyType:)(a1, a2, *(_DWORD *)(v3 + 64), a3);
}

uint64_t Group.generateGroupDBAllPreviousDecryptionKeys(serviceName:keyType:)(unint64_t a1, unint64_t a2)
{
  unint64_t v28 = a1;
  unint64_t v29 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB69A8);
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v10 = (unsigned int *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Group.GroupDBDecryptionKey(0);
  MEMORY[0x270FA5388](v11 - 8, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  int v19 = *(_DWORD *)(v2 + 64);
  if (v19 == 1)
  {
    return MEMORY[0x263F8EE78];
  }
  else
  {
    if (v19)
    {
      unint64_t v20 = MEMORY[0x263F8EE78];
      unsigned int v21 = 1;
      while (v19 != v21)
      {
        Group.generateVersionGroupDBDecryptionKeys(serviceName:version:keyType:)(v28, v29, v21, (uint64_t)v17);
        if (v3)
        {
          swift_bridgeObjectRelease();
          return v20;
        }
        uint64_t v22 = (uint64_t)v10 + *(int *)(v27 + 48);
        *uint64_t v10 = v21;
        sub_250571F44((uint64_t)v17, v22, type metadata accessor for Group.GroupDBDecryptionKey);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v20 = sub_250571358(0, *(void *)(v20 + 16) + 1, 1, v20, &qword_269AB6A40, &qword_269AB69A8);
        }
        unint64_t v24 = *(void *)(v20 + 16);
        unint64_t v23 = *(void *)(v20 + 24);
        if (v24 >= v23 >> 1) {
          unint64_t v20 = sub_250571358(v23 > 1, v24 + 1, 1, v20, &qword_269AB6A40, &qword_269AB69A8);
        }
        ++v21;
        *(void *)(v20 + 16) = v24 + 1;
        uint64_t result = sub_2505283F0((uint64_t)v10, v20+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v24, &qword_269AB69A8);
        if (v19 == v21) {
          return v20;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t Group.stableIdentifierForMember(memberId:serviceName:)(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v130 = a3;
  uint64_t v129 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB69B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7, v8, v9, v10);
  v124 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_2505BDCE0();
  uint64_t v125 = *(void *)(v126 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v126, v12, v13, v14, v15);
  v128 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v18, v19, v20, v21);
  v127 = (char *)&v120 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
  MEMORY[0x270FA5388](v23 - 8, v24, v25, v26, v27);
  unint64_t v29 = (char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_2505BE0B0();
  uint64_t v133 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141, v30, v31, v32, v33);
  v132 = (char *)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  MEMORY[0x270FA5388](v35 - 8, v36, v37, v38, v39);
  unint64_t v41 = (char *)&v120 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42, v44, v45, v46, v47);
  uint64_t v49 = OBJC_IVAR____TtC14GroupKitCrypto5Group_state;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC14GroupKitCrypto5Group_state) != 6)
  {
    uint64_t v56 = v3;
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_2505BDC40();
    __swift_project_value_buffer(v57, (uint64_t)qword_269AC3188);
    os_log_type_t v58 = sub_2505BE3D0();
    swift_retain_n();
    v59 = sub_2505BDC20();
    if (os_log_type_enabled(v59, v58))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v138 = v61;
      *(_DWORD *)v60 = 136315138;
      unint64_t v62 = sub_2504E0D6C(*(unsigned char *)(v56 + v49));
      *(void *)&long long v135 = sub_25051171C(v62, v63, &v138);
      sub_2505BE430();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2504D2000, v59, v58, "invalid group state, current state %s", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v61, -1, -1);
      MEMORY[0x25337FF10](v60, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v65 = 310;
    long long v66 = xmmword_2505C5770;
    goto LABEL_20;
  }
  uint64_t v120 = v6;
  uint64_t v121 = v5;
  uint64_t v123 = (uint64_t)&v120 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = *a1;
  unint64_t v50 = a1[1];
  swift_beginAccess();
  uint64_t v122 = v3;
  uint64_t v52 = *(void *)(v3 + 56);
  if (!*(void *)(v52 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v41, 1, 1, v42);
LABEL_14:
    sub_2504DAF60((uint64_t)v41, &qword_269AB5A80);
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_2505BDC40();
    __swift_project_value_buffer(v67, (uint64_t)qword_269AC3188);
    os_log_type_t v68 = sub_2505BE3D0();
    sub_2504DBC4C(v51, v50);
    sub_2504DBC4C(v51, v50);
    v69 = sub_2505BDC20();
    os_log_type_t v70 = v68;
    if (os_log_type_enabled(v69, v68))
    {
      v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v138 = v72;
      *(_DWORD *)v71 = 136315138;
      uint64_t v141 = (uint64_t)(v71 + 4);
      sub_2504DBC4C(v51, v50);
      uint64_t v73 = sub_2505BD8B0();
      unint64_t v75 = v74;
      sub_250511528(v51, v50);
      *(void *)&long long v135 = sub_25051171C(v73, v75, &v138);
      sub_2505BE430();
      swift_bridgeObjectRelease();
      sub_250511528(v51, v50);
      sub_250511528(v51, v50);
      _os_log_impl(&dword_2504D2000, v69, v70, "group member %s not found", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v72, -1, -1);
      MEMORY[0x25337FF10](v71, -1, -1);
    }
    else
    {
      sub_250511528(v51, v50);
      sub_250511528(v51, v50);
    }

    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v65 = 420;
    long long v66 = xmmword_2505C5790;
LABEL_20:
    *(_OWORD *)(v65 + 8) = v66;
    *(void *)(v65 + 24) = 0x80000002505CBBE0;
    *(void *)(v65 + 32) = 0xD00000000000005BLL;
    *(void *)(v65 + 40) = 0x80000002505CBB80;
    swift_willThrow();
    return v64;
  }
  swift_bridgeObjectRetain();
  sub_2504DBC4C(v51, v50);
  unint64_t v53 = sub_250512FE8(v51, v50);
  if (v54)
  {
    sub_250573DF8(*(void *)(v52 + 56) + *(void *)(v43 + 72) * v53, (uint64_t)v41, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v41, v55, 1, v42);
  swift_bridgeObjectRelease();
  sub_250511528(v51, v50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1) {
    goto LABEL_14;
  }
  uint64_t v77 = v123;
  sub_250571F44((uint64_t)v41, v123, type metadata accessor for GroupMembership.MemberProperties);
  sub_2504DAEFC(v77 + *(int *)(v42 + 28), (uint64_t)v29, &qword_269AB5ED0);
  uint64_t v78 = v133;
  uint64_t v79 = v141;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v29, 1, v141) == 1)
  {
    sub_2504DAF60((uint64_t)v29, &qword_269AB5ED0);
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v80 = sub_2505BDC40();
    __swift_project_value_buffer(v80, (uint64_t)qword_269AC3188);
    os_log_type_t v81 = sub_2505BE3D0();
    sub_2504DBC4C(v51, v50);
    sub_2504DBC4C(v51, v50);
    v82 = sub_2505BDC20();
    os_log_type_t v83 = v81;
    if (os_log_type_enabled(v82, v81))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      uint64_t v138 = v85;
      *(_DWORD *)v84 = 136315138;
      uint64_t v141 = (uint64_t)(v84 + 4);
      sub_2504DBC4C(v51, v50);
      uint64_t v86 = sub_2505BD8B0();
      unint64_t v88 = v87;
      sub_250511528(v51, v50);
      *(void *)&long long v135 = sub_25051171C(v86, v88, &v138);
      sub_2505BE430();
      swift_bridgeObjectRelease();
      sub_250511528(v51, v50);
      sub_250511528(v51, v50);
      _os_log_impl(&dword_2504D2000, v82, v83, "group member %s not found", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v85, -1, -1);
      MEMORY[0x25337FF10](v84, -1, -1);
    }
    else
    {
      sub_250511528(v51, v50);
      sub_250511528(v51, v50);
    }

    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v93 = 420;
    *(_OWORD *)(v93 + 8) = xmmword_2505C5780;
    *(void *)(v93 + 24) = 0x80000002505CBBE0;
    *(void *)(v93 + 32) = 0xD00000000000005BLL;
    *(void *)(v93 + 40) = 0x80000002505CBB80;
    swift_willThrow();
    goto LABEL_37;
  }
  v89 = v132;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v132, v29, v79);
  if (v130 >> 60 == 15) {
    uint64_t v90 = 0;
  }
  else {
    uint64_t v90 = v129;
  }
  if (v130 >> 60 == 15) {
    unint64_t v91 = 0xC000000000000000;
  }
  else {
    unint64_t v91 = v130;
  }
  LOBYTE(v135) = 1;
  sub_25051B908(v129, v130);
  uint64_t v64 = v122;
  uint64_t v92 = v131;
  sub_25050BC40(1u, (unsigned __int8 *)&v135, &v138);
  if (v92)
  {
    sub_250511528(v90, v91);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v89, v79);
LABEL_37:
    sub_250573D98(v123, type metadata accessor for GroupMembership.MemberProperties);
    return v64;
  }
  uint64_t v94 = v139;
  uint64_t v95 = v140;
  __swift_project_boxed_opaque_existential_1(&v138, v139);
  *(void *)&long long v135 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 40))(v94, v95);
  *((void *)&v135 + 1) = v96;
  sub_2505BDCC0();
  if (qword_269AB5480 != -1) {
    swift_once();
  }
  long long v135 = xmmword_269AC3260;
  uint64_t v97 = sub_2505BE0E0();
  sub_2505725C0((unint64_t *)&qword_269AB5FB0, MEMORY[0x263F047F8]);
  sub_25051AE60();
  uint64_t v131 = v97;
  sub_2505BDDF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2505C0090;
  if (qword_269AB5488 != -1) {
    swift_once();
  }
  uint64_t v99 = qword_269AC3270;
  unint64_t v100 = *(void *)algn_269AC3278;
  *(void *)(inited + 32) = qword_269AC3270;
  *(void *)(inited + 40) = v100;
  sub_2504DBC4C(v99, v100);
  *(void *)(inited + 48) = sub_2505BDF10();
  *(void *)(inited + 56) = v101;
  *(void *)(inited + 64) = sub_250572440((uint64_t)&unk_2701918C8);
  *(void *)(inited + 72) = v102;
  *(void *)(inited + 80) = v90;
  *(void *)(inited + 88) = v91;
  long long v135 = xmmword_2505BFEF0;
  uint64_t v104 = *(void *)(inited + 32);
  unint64_t v103 = *(void *)(inited + 40);
  sub_2504DBC4C(v90, v91);
  sub_2504DBC4C(v104, v103);
  sub_2505BD960();
  swift_bridgeObjectRetain();
  sub_250511528(v104, v103);
  uint64_t v105 = *(void *)(inited + 48);
  unint64_t v106 = *(void *)(inited + 56);
  sub_2504DBC4C(v105, v106);
  sub_2505BD960();
  sub_250511528(v105, v106);
  uint64_t v107 = *(void *)(inited + 64);
  unint64_t v108 = *(void *)(inited + 72);
  sub_2504DBC4C(v107, v108);
  sub_2505BD960();
  sub_250511528(v107, v108);
  uint64_t v109 = *(void *)(inited + 80);
  unint64_t v110 = *(void *)(inited + 88);
  sub_2504DBC4C(v109, v110);
  sub_2505BD960();
  sub_250511528(v109, v110);
  swift_bridgeObjectRelease_n();
  unint64_t v112 = *((void *)&v135 + 1);
  uint64_t v111 = v135;
  v113 = v124;
  v114 = v128;
  sub_2505BDE10();
  sub_250511528(v111, v112);
  uint64_t v115 = v121;
  uint64_t v136 = v121;
  uint64_t v137 = sub_250522D7C(&qword_269AB69B8, &qword_269AB69B0);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v135);
  uint64_t v117 = v120;
  (*(void (**)(uint64_t *, char *, uint64_t))(v120 + 16))(boxed_opaque_existential_1, v113, v115);
  __swift_project_boxed_opaque_existential_1(&v135, v136);
  sub_2505BD820();
  uint64_t v64 = v134;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v135);
  sub_250511528(v90, v91);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v113, v115);
  v118 = *(void (**)(char *, uint64_t))(v125 + 8);
  uint64_t v119 = v126;
  v118(v114, v126);
  v118(v127, v119);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v141);
  sub_250573D98(v123, type metadata accessor for GroupMembership.MemberProperties);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v138);
  return v64;
}

uint64_t static Group.GroupDBSigningKey.KeyType.== infix(_:_:)()
{
  return 1;
}

uint64_t Group.GroupDBSigningKey.KeyType.hash(into:)()
{
  return sub_2505BE860();
}

uint64_t Group.GroupDBSigningKey.p256SigningKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2504DAEFC(v1, a1, &qword_269AB5A28);
}

uint64_t Group.GroupDBSigningKey.hash(into:)(uint64_t a1)
{
  return sub_25056F8E0(a1, MEMORY[0x263F047C0], &qword_269AB5A28, MEMORY[0x263F047A8]);
}

uint64_t sub_25056F8E0(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x270FA5388](v15 - 8, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2505BE860();
  sub_2504DAEFC(v4, (uint64_t)v21, a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v7) == 1) {
    return sub_2505BE870();
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v21, v7);
  uint64_t v23 = sub_2505BE870();
  uint64_t v24 = a4(v23);
  unint64_t v26 = v25;
  sub_2505BD950();
  sub_250511528(v24, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
}

BOOL static Group.GroupDBSigningKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_250571B6C(a1, a2, MEMORY[0x263F047C0], &qword_269AB68E8, &qword_269AB5A28, MEMORY[0x263F047A8]);
}

uint64_t Group.GroupDBSigningKey.hashValue.getter()
{
  return sub_25056FB3C(MEMORY[0x263F047C0], &qword_269AB5A28, MEMORY[0x263F047A8]);
}

uint64_t sub_25056FB3C(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = a1(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x270FA5388](v14 - 8, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2505BE850();
  sub_2505BE860();
  sub_2504DAEFC(v3, (uint64_t)v20, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v20, 1, v6) == 1)
  {
    sub_2505BE870();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v20, v6);
    uint64_t v21 = sub_2505BE870();
    uint64_t v22 = a3(v21);
    unint64_t v24 = v23;
    sub_2505BD950();
    sub_250511528(v22, v24);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  return sub_2505BE880();
}

uint64_t sub_25056FD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25056FD50(a1, a2, a3, MEMORY[0x263F047C0], &qword_269AB5A28, MEMORY[0x263F047A8]);
}

uint64_t sub_25056FD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v9 = a4(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x270FA5388](v17 - 8, v18, v19, v20, v21);
  unint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2505BE860();
  sub_2504DAEFC(v6, (uint64_t)v23, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v23, 1, v9) == 1) {
    return sub_2505BE870();
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v23, v9);
  uint64_t v25 = sub_2505BE870();
  uint64_t v26 = a6(v25);
  unint64_t v28 = v27;
  sub_2505BD950();
  sub_250511528(v26, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t sub_25056FF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25056FF58(a1, a2, a3, MEMORY[0x263F047C0], &qword_269AB5A28, MEMORY[0x263F047A8]);
}

uint64_t sub_25056FF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v9 = a4(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x270FA5388](v17 - 8, v18, v19, v20, v21);
  unint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2505BE850();
  sub_2505BE860();
  sub_2504DAEFC(v6, (uint64_t)v23, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v23, 1, v9) == 1)
  {
    sub_2505BE870();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v23, v9);
    uint64_t v24 = sub_2505BE870();
    uint64_t v25 = a6(v24);
    unint64_t v27 = v26;
    sub_2505BD950();
    sub_250511528(v25, v27);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
  return sub_2505BE880();
}

BOOL sub_250570134(uint64_t a1, uint64_t a2)
{
  return sub_250571B6C(a1, a2, MEMORY[0x263F047C0], &qword_269AB68E8, &qword_269AB5A28, MEMORY[0x263F047A8]);
}

uint64_t Group.retrieveDiversifiedSigningKey(keyType:)@<X0>(char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2505BE000();
  uint64_t v15 = MEMORY[0x270FA5388](v10, v11, v12, v13, v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15, v18, v19, v20, v21);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14GroupKitCrypto5Group_state) == 6)
  {
    uint64_t v51 = a1;
    uint64_t v52 = (char *)&v48 - v22;
    uint64_t v53 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2505BFEC0;
    if (qword_269AB5680 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_269AC37B0;
    unint64_t v26 = *(void *)algn_269AC37B8;
    *(void *)(inited + 32) = qword_269AC37B0;
    *(void *)(inited + 40) = v26;
    uint64_t v27 = *(void *)(v1 + 16);
    unint64_t v28 = *(void *)(v1 + 24);
    *(void *)(inited + 48) = v27;
    *(void *)(inited + 56) = v28;
    sub_2504DBC4C(v25, v26);
    sub_2504DBC4C(v27, v28);
    uint64_t v29 = sub_250576544(inited);
    unint64_t v31 = v30;
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v32 = v1 + OBJC_IVAR____TtC14GroupKitCrypto5Group_memberKeyingMaterial;
    swift_beginAccess();
    uint64_t v33 = type metadata accessor for UserKeyingInfo(0);
    sub_2504DAEFC(v32 + *(int *)(v33 + 44), (uint64_t)v9, &qword_269AB5A28);
    uint64_t v34 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v9, 1, v10) == 1)
    {
      sub_2504DAF60((uint64_t)v9, &qword_269AB5A28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(_WORD *)uint64_t v35 = 425;
      *(_OWORD *)(v35 + 8) = xmmword_2505C57C0;
      *(void *)(v35 + 24) = 0x80000002505CBC20;
      *(void *)(v35 + 32) = 0xD00000000000005BLL;
      *(void *)(v35 + 40) = 0x80000002505CBB80;
      swift_willThrow();
      return sub_250511528(v29, v31);
    }
    else
    {
      uint64_t v49 = v29;
      unint64_t v50 = v31;
      uint64_t v38 = v52;
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      v48(v52, v9, v10);
      uint64_t v39 = (uint64_t *)(v1 + OBJC_IVAR____TtC14GroupKitCrypto5Group_memberKeyOffset);
      unint64_t v40 = *(void *)(v1 + OBJC_IVAR____TtC14GroupKitCrypto5Group_memberKeyOffset + 8);
      if (v40 >> 60 == 15)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v41 = 426;
        *(_OWORD *)(v41 + 8) = xmmword_2505C57B0;
        *(void *)(v41 + 24) = 0x80000002505CBC20;
        *(void *)(v41 + 32) = 0xD00000000000005BLL;
        *(void *)(v41 + 40) = 0x80000002505CBB80;
        swift_willThrow();
        sub_250511528(v49, v50);
        return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v38, v10);
      }
      else
      {
        uint64_t v42 = *v39;
        sub_2504DBC4C(*v39, *(void *)(v1 + OBJC_IVAR____TtC14GroupKitCrypto5Group_memberKeyOffset + 8));
        sub_2504DBC4C(v42, v40);
        uint64_t v43 = v49;
        uint64_t v44 = v38;
        unint64_t v45 = v50;
        sub_2505BDFE0();
        sub_250511528(v43, v45);
        sub_25051B8D4(v42, v40);
        sub_25051B8D4(v42, v40);
        uint64_t v46 = v53;
        (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v10);
        uint64_t v47 = v51;
        v48(v51, v17, v10);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v10);
      }
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v37 = 424;
    *(_OWORD *)(v37 + 8) = xmmword_2505C57A0;
    *(void *)(v37 + 24) = 0x80000002505CBC20;
    *(void *)(v37 + 32) = 0xD00000000000005BLL;
    *(void *)(v37 + 40) = 0x80000002505CBB80;
    return swift_willThrow();
  }
}

uint64_t Group.MemberIDAndDiversifiedKey.userID.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2504DBC4C(v2, v3);
}

uint64_t Group.MemberIDAndDiversifiedKey.diversifiedPublicKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Group.MemberIDAndDiversifiedKey(0) + 20);
  uint64_t v4 = sub_2505BE0B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Group.retrieveDiversifiedVerificationKeys()()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_25056DB8C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_25057081C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v44 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UserKeyingInfo(0);
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v46 = v11;
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  uint64_t v17 = (uint64_t *)((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
  MEMORY[0x270FA5388](v18 - 8, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_2505BE0B0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25, v27, v28, v29, v30);
  uint64_t v48 = (char *)&v43 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for GroupMembership.MemberProperties(0);
  sub_2504DAEFC(a1 + *(int *)(v32 + 28), (uint64_t)v24, &qword_269AB5ED0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_2504DAF60((uint64_t)v24, &qword_269AB5ED0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    uint64_t v33 = swift_allocError();
    *(_WORD *)uint64_t v34 = 427;
    *(_OWORD *)(v34 + 8) = xmmword_2505C57E0;
    *(void *)(v34 + 24) = 0x80000002505CBCF0;
    *(void *)(v34 + 32) = 0xD00000000000005BLL;
    *(void *)(v34 + 40) = 0x80000002505CBB80;
    uint64_t result = swift_willThrow();
LABEL_5:
    *uint64_t v47 = v33;
    return result;
  }
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v36(v48, v24, v25);
  sub_2504DAEFC(a1 + *(int *)(v32 + 24), (uint64_t)v10, &qword_269AB5E80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v10, 1, v46) == 1)
  {
    sub_2504DAF60((uint64_t)v10, &qword_269AB5E80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    uint64_t v33 = swift_allocError();
    *(_WORD *)uint64_t v37 = 428;
    *(_OWORD *)(v37 + 8) = xmmword_2505C57D0;
    *(void *)(v37 + 24) = 0x80000002505CBCF0;
    *(void *)(v37 + 32) = 0xD00000000000005BLL;
    *(void *)(v37 + 40) = 0x80000002505CBB80;
    swift_willThrow();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v48, v25);
    goto LABEL_5;
  }
  sub_250571F44((uint64_t)v10, (uint64_t)v17, type metadata accessor for UserKeyingInfo);
  uint64_t v38 = (uint64_t (*)(char *, char *, uint64_t))v36;
  uint64_t v39 = *v17;
  unint64_t v40 = v17[1];
  sub_2504DBC4C(*v17, v40);
  sub_250573D98((uint64_t)v17, type metadata accessor for UserKeyingInfo);
  uint64_t v41 = type metadata accessor for Group.MemberIDAndDiversifiedKey(0);
  uint64_t v42 = v44;
  uint64_t result = v38((char *)v44 + *(int *)(v41 + 20), v48, v25);
  *uint64_t v42 = v39;
  v42[1] = v40;
  return result;
}

void *sub_250570C9C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E28);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_250573A38(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_250570DC0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_250573B48(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_250570ED0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250570F38(a1, a2, a3, a4, &qword_269AB6A48, MEMORY[0x263F04620], MEMORY[0x263F04620]);
}

uint64_t sub_250570F04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250570F38(a1, a2, a3, a4, &qword_269AB5F50, type metadata accessor for UserKeyingInfo, type metadata accessor for UserKeyingInfo);
}

uint64_t sub_250570F38(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_2505BE5E0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_250573C3C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_2505711B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250571358(a1, a2, a3, a4, &qword_269AB5FD8, &qword_269AB5FC8);
}

uint64_t sub_2505711CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250570F38(a1, a2, a3, a4, &qword_269AB6A20, type metadata accessor for UserAndAllInfo, type metadata accessor for UserAndAllInfo);
}

uint64_t sub_250571200(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250570F38(a1, a2, a3, a4, &qword_269AB6A28, type metadata accessor for GKCrypto_GroupAETextToSign.User, type metadata accessor for GKCrypto_GroupAETextToSign.User);
}

void *sub_250571234(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F60);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_250573928(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_250571358(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_2505BE5E0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_250573E60(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_2505715C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_2505BE1F0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x25337F130](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

char *sub_250571640(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_2505BFEF0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_2505BD7D0() && __OFSUB__((int)v4, sub_2505BD800())) {
        goto LABEL_24;
      }
      sub_2505BD810();
      swift_allocObject();
      uint64_t v13 = sub_2505BD7B0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_250571A2C((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_2505BD890();
      uint64_t result = sub_250571A2C(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_250571944@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_250572178(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_25057223C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_2505722B8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_2505719BC(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_250571A2C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_2505BD7D0();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_2505BD800();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_2505BD7F0();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_250571AE0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2505BE4C0();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_250571B6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  uint64_t v64 = a6;
  uint64_t v10 = a3(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v65 = (char *)&v61 - v16;
  long long v66 = a4;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v30 = MEMORY[0x270FA5388](v25 - 8, v26, v27, v28, v29);
  uint64_t v32 = (char *)&v61 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v30, v33, v34, v35, v36);
  uint64_t v39 = (char *)&v61 - v38;
  MEMORY[0x270FA5388](v37, v40, v41, v42, v43);
  uint64_t v45 = (char *)&v61 - v44;
  sub_2504DAEFC(a1, (uint64_t)&v61 - v44, a5);
  uint64_t v46 = a2;
  uint64_t v47 = v11;
  sub_2504DAEFC(v46, (uint64_t)v39, a5);
  uint64_t v48 = (uint64_t)&v24[*(int *)(v18 + 56)];
  sub_2504DAEFC((uint64_t)v45, (uint64_t)v24, a5);
  sub_2504DAEFC((uint64_t)v39, v48, a5);
  uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v49((uint64_t)v24, 1, v10) == 1)
  {
    sub_2504DAF60((uint64_t)v39, a5);
    sub_2504DAF60((uint64_t)v45, a5);
    if (v49(v48, 1, v10) == 1)
    {
      sub_2504DAF60((uint64_t)v24, a5);
      return 1;
    }
    goto LABEL_6;
  }
  sub_2504DAEFC((uint64_t)v24, (uint64_t)v32, a5);
  if (v49(v48, 1, v10) == 1)
  {
    sub_2504DAF60((uint64_t)v39, a5);
    sub_2504DAF60((uint64_t)v45, a5);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v10);
LABEL_6:
    sub_2504DAF60((uint64_t)v24, v66);
    return 0;
  }
  unint64_t v50 = *(uint64_t (**)(void))(v47 + 32);
  unint64_t v63 = v32;
  uint64_t v51 = v50();
  uint64_t v52 = v64;
  uint64_t v62 = ((uint64_t (*)(uint64_t))v64)(v51);
  unint64_t v54 = v53;
  uint64_t v55 = v52();
  unint64_t v57 = v56;
  uint64_t v58 = v62;
  LODWORD(v66) = sub_25051AAD8(v62, v54, v55, v56);
  sub_250511528(v55, v57);
  sub_250511528(v58, v54);
  v59 = *(void (**)(char *, uint64_t))(v47 + 8);
  v59(v65, v10);
  sub_2504DAF60((uint64_t)v39, a5);
  sub_2504DAF60((uint64_t)v45, a5);
  v59(v63, v10);
  sub_2504DAF60((uint64_t)v24, a5);
  return (v66 & 1) != 0;
}

uint64_t type metadata accessor for Group.GroupDBDecryptionKey(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB69E0);
}

uint64_t sub_250571F44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s14GroupKitCrypto0A0C25MemberIDAndDiversifiedKeyV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Group.MemberIDAndDiversifiedKey(0);
  uint64_t v9 = MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = *a1;
  unint64_t v19 = a1[1];
  uint64_t v20 = *a2;
  unint64_t v21 = a2[1];
  sub_2504DBC4C(*a1, v19);
  sub_2504DBC4C(v20, v21);
  char v22 = sub_25051AAD8(v18, v19, v20, v21);
  sub_250511528(v20, v21);
  sub_250511528(v18, v19);
  sub_250573DF8((uint64_t)a1, (uint64_t)v17, type metadata accessor for Group.MemberIDAndDiversifiedKey);
  sub_250573DF8((uint64_t)a2, (uint64_t)v11, type metadata accessor for Group.MemberIDAndDiversifiedKey);
  if (v22)
  {
    uint64_t v23 = sub_2505BDEE0();
    unint64_t v25 = v24;
    uint64_t v26 = sub_2505BDEE0();
    unint64_t v28 = v27;
    char v29 = sub_25051AAD8(v23, v25, v26, v27);
    sub_250511528(v26, v28);
    sub_250511528(v23, v25);
  }
  else
  {
    char v29 = 0;
  }
  sub_250573D98((uint64_t)v11, type metadata accessor for Group.MemberIDAndDiversifiedKey);
  sub_250573D98((uint64_t)v17, type metadata accessor for Group.MemberIDAndDiversifiedKey);
  return v29 & 1;
}

uint64_t sub_250572178(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_25057223C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_2505BD810();
  swift_allocObject();
  uint64_t result = sub_2505BD7C0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2505BD8C0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_2505722B8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_2505BD810();
  swift_allocObject();
  uint64_t result = sub_2505BD7C0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_25057233C(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_250572178(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_25057223C((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_2505722B8((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_2505723A0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_2505BD810();
      swift_allocObject();
      sub_2505BD7E0();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_2505BD8C0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_250572440(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A30);
  uint64_t v10 = sub_250522D7C(&qword_269AB6A38, &qword_269AB6A30);
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  char v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_250571944(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t type metadata accessor for Group.MemberIDAndDiversifiedKey(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB6A00);
}

unint64_t sub_250572524()
{
  unint64_t result = qword_269AB69C0;
  if (!qword_269AB69C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB69C0);
  }
  return result;
}

uint64_t sub_250572578()
{
  return sub_2505725C0(&qword_269AB69C8, (void (*)(uint64_t))type metadata accessor for Group.GroupDBDecryptionKey);
}

uint64_t sub_2505725C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25057260C()
{
  unint64_t result = qword_269AB69D0;
  if (!qword_269AB69D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB69D0);
  }
  return result;
}

uint64_t sub_250572660()
{
  return sub_2505725C0(&qword_269AB69D8, (void (*)(uint64_t))type metadata accessor for Group.GroupDBSigningKey);
}

uint64_t type metadata accessor for Group.GroupDBSigningKey(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB69F0);
}

uint64_t *_s20GroupDBDecryptionKeyVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_250572814(a1, a2, a3, &qword_269AB5A78, MEMORY[0x263F047A0]);
}

uint64_t _s20GroupDBDecryptionKeyVwxx(uint64_t a1, uint64_t a2)
{
  return sub_250572988(a1, a2, MEMORY[0x263F047A0]);
}

void *_s20GroupDBDecryptionKeyVwcp(void *a1, const void *a2, uint64_t a3)
{
  return sub_250572A7C(a1, a2, a3, MEMORY[0x263F047A0], &qword_269AB5A78);
}

void *_s20GroupDBDecryptionKeyVwca(void *a1, void *a2, uint64_t a3)
{
  return sub_250572BB8(a1, a2, a3, MEMORY[0x263F047A0], &qword_269AB5A78);
}

void *_s20GroupDBDecryptionKeyVwtk(void *a1, const void *a2, uint64_t a3)
{
  return sub_250572D58(a1, a2, a3, MEMORY[0x263F047A0], &qword_269AB5A78);
}

void *_s20GroupDBDecryptionKeyVwta(void *a1, void *a2, uint64_t a3)
{
  return sub_250572E94(a1, a2, a3, MEMORY[0x263F047A0], &qword_269AB5A78);
}

uint64_t _s20GroupDBDecryptionKeyVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250572794);
}

uint64_t sub_250572794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, &qword_269AB5A78);
}

uint64_t _s20GroupDBDecryptionKeyVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2505727B4);
}

uint64_t sub_2505727B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, &qword_269AB5A78);
}

void sub_2505727C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

ValueMetadata *type metadata accessor for Group.GroupDBDecryptionKey.KeyType()
{
  return &type metadata for Group.GroupDBDecryptionKey.KeyType;
}

uint64_t *_s17GroupDBSigningKeyVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_250572814(a1, a2, a3, &qword_269AB5A28, MEMORY[0x263F047C0]);
}

uint64_t *sub_250572814(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a4) - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  if ((v9 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v9 + 16) & ~(unint64_t)v9));
    swift_retain();
  }
  else
  {
    uint64_t v10 = v8;
    uint64_t v11 = a5(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      memcpy(a1, a2, *(void *)(v10 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t _s17GroupDBSigningKeyVwxx(uint64_t a1, uint64_t a2)
{
  return sub_250572988(a1, a2, MEMORY[0x263F047C0]);
}

uint64_t sub_250572988(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3(0);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v4);
  if (!result)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v6(a1, v4);
  }
  return result;
}

void *_s17GroupDBSigningKeyVwcp(void *a1, const void *a2, uint64_t a3)
{
  return sub_250572A7C(a1, a2, a3, MEMORY[0x263F047C0], &qword_269AB5A28);
}

void *sub_250572A7C(void *a1, const void *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = a4(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  return a1;
}

void *_s17GroupDBSigningKeyVwca(void *a1, void *a2, uint64_t a3)
{
  return sub_250572BB8(a1, a2, a3, MEMORY[0x263F047C0], &qword_269AB5A28);
}

void *sub_250572BB8(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = a4(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(a1, 1, v8);
  int v12 = v10(a2, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(a1, a2, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  return a1;
}

void *_s17GroupDBSigningKeyVwtk(void *a1, const void *a2, uint64_t a3)
{
  return sub_250572D58(a1, a2, a3, MEMORY[0x263F047C0], &qword_269AB5A28);
}

void *sub_250572D58(void *a1, const void *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = a4(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  return a1;
}

void *_s17GroupDBSigningKeyVwta(void *a1, void *a2, uint64_t a3)
{
  return sub_250572E94(a1, a2, a3, MEMORY[0x263F047C0], &qword_269AB5A28);
}

void *sub_250572E94(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = a4(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(a1, 1, v8);
  int v12 = v10(a2, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(a1, a2, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 32))(a1, a2, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  return a1;
}

uint64_t _s17GroupDBSigningKeyVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250573028);
}

uint64_t sub_250573028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, &qword_269AB5A28);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  return v7(a1, a2, v6);
}

uint64_t _s17GroupDBSigningKeyVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2505730B4);
}

uint64_t sub_2505730B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, &qword_269AB5A28);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(a1, a2, a2, v7);
}

void sub_250573130(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_250573150(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_2505693D4(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *_s20GroupDBDecryptionKeyV7KeyTypeOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x250573290);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Group.GroupDBSigningKey.KeyType()
{
  return &type metadata for Group.GroupDBSigningKey.KeyType;
}

uint64_t *_s25MemberIDAndDiversifiedKeyVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_2504DBC4C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    int v11 = (char *)a2 + v9;
    uint64_t v12 = sub_2505BE0B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t _s25MemberIDAndDiversifiedKeyVwxx(uint64_t a1, uint64_t a2)
{
  sub_250511528(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2505BE0B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *_s25MemberIDAndDiversifiedKeyVwcp(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_2504DBC4C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2505BE0B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *_s25MemberIDAndDiversifiedKeyVwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_2504DBC4C(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_250511528(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2505BE0B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *_s25MemberIDAndDiversifiedKeyVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2505BE0B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *_s25MemberIDAndDiversifiedKeyVwta(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_250511528(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2505BE0B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t _s25MemberIDAndDiversifiedKeyVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250573684);
}

uint64_t sub_250573684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_2505BE0B0();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t _s25MemberIDAndDiversifiedKeyVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250573754);
}

void *sub_250573754(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_2505BE0B0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_250573804()
{
  uint64_t result = sub_2505BE0B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_25057389C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  uint64_t result = sub_2505719BC((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_250573908, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_250573908@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_250571AE0(a1, a2);
}

uint64_t sub_250573928(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F68);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

uint64_t sub_250573A38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E30);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

uint64_t sub_250573B48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

uint64_t sub_250573C3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

uint64_t sub_250573D98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250573DF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250573E60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

double sub_250573FBC()
{
  byte_26B202498 = 2;
  double result = 0.0;
  unk_26B2024A0 = 0u;
  unk_26B2024B0 = 0u;
  unk_26B2024C0 = 0u;
  unk_26B2024D0 = 0u;
  unk_26B2024E0 = 0u;
  unk_26B2024F0 = 0u;
  unk_26B202500 = 0u;
  unk_26B202510 = 0u;
  unk_26B202520 = 0u;
  unk_26B202530 = 0u;
  unk_26B202540 = 0u;
  unk_26B202550 = 0u;
  unk_26B202560 = 0u;
  unk_26B202570 = 0u;
  unk_26B202580 = 0u;
  qword_26B202590 = 0;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> initializeProductionDependencies()()
{
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_26B202498 == 2)
  {
    LOBYTE(v24) = 2;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    uint64_t v40 = 0;
    swift_beginAccess();
    sub_250574498((uint64_t)&v24, (uint64_t)&byte_26B202498);
    byte_26B202498 = 0;
    swift_endAccess();
    type metadata accessor for CoreDataUtils();
    swift_allocObject();
    uint64_t v1 = sub_250557F6C(0, 0, 0x6F74707972636B67, 0xEF6574696C71732ELL, 0xD000000000000020, (void *)0x80000002505CBD20, 1);
    if (!v0)
    {
      qword_26B202568 = v1;
      swift_retain();
      swift_release();
      uint64_t v2 = type metadata accessor for DeviceToDeviceEncryptedContainerInteraction();
      swift_allocObject();
      uint64_t v3 = swift_retain();
      sub_25059AA0C(v3, 0);
      *(void *)&long long v26 = v2;
      *((void *)&v26 + 1) = &off_270193A30;
      unint64_t v24 = v4;
      swift_beginAccess();
      sub_250528518((uint64_t)&v24, (uint64_t)&unk_26B202540, &qword_26B2022D8);
      swift_endAccess();
      uint64_t v5 = swift_retain();
      sub_25058F328(v5, 0);
      unint64_t v7 = v6;
      uint64_t v9 = v8;
      char v11 = v10;
      swift_release();
      *(void *)&long long v26 = &type metadata for CoreDataInteraction;
      *((void *)&v26 + 1) = &off_2701938A0;
      unint64_t v24 = v7;
      *(void *)&long long v25 = v9;
      BYTE8(v25) = v11 & 1;
      swift_beginAccess();
      sub_250528518((uint64_t)&v24, (uint64_t)&unk_26B2024C8, &qword_26B202178);
      *(void *)&long long v26 = &type metadata for KeychainInteraction;
      *((void *)&v26 + 1) = &off_270193878;
      unint64_t v24 = 0xD000000000000019;
      *(void *)&long long v25 = 0x80000002505CAFD0;
      sub_250528518((uint64_t)&v24, (uint64_t)&unk_26B2024A0, &qword_26B202178);
      swift_endAccess();
      uint64_t v12 = swift_retain();
      sub_25058F328(v12, 1);
      unint64_t v14 = v13;
      uint64_t v16 = v15;
      char v18 = v17;
      swift_release();
      *(void *)&long long v26 = &type metadata for CoreDataInteraction;
      *((void *)&v26 + 1) = &off_2701938A0;
      unint64_t v24 = v14;
      *(void *)&long long v25 = v16;
      BYTE8(v25) = v18 & 1;
      swift_beginAccess();
      sub_250528518((uint64_t)&v24, (uint64_t)&unk_26B2024F0, &qword_26B202178);
      swift_endAccess();
      swift_allocObject();
      uint64_t v19 = swift_retain();
      sub_25059AA0C(v19, 1);
      *(void *)&long long v26 = v2;
      *((void *)&v26 + 1) = &off_270193A30;
      unint64_t v24 = v20;
      swift_beginAccess();
      sub_250528518((uint64_t)&v24, (uint64_t)&unk_26B202518, &qword_26B2022D8);
      uint64_t v21 = type metadata accessor for PCSInterface();
      uint64_t v22 = swift_allocObject();
      *(void *)&long long v26 = v21;
      *((void *)&v26 + 1) = &off_2701935E8;
      unint64_t v24 = v22;
      sub_250528518((uint64_t)&v24, (uint64_t)&unk_26B202570, &qword_26B202158);
      swift_endAccess();
      swift_release();
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    swift_allocError();
    *(_WORD *)uint64_t v23 = 387;
    *(_OWORD *)(v23 + 8) = xmmword_2505C5A70;
    *(void *)(v23 + 24) = 0x80000002505CBD50;
    *(void *)(v23 + 32) = 0xD000000000000066;
    *(void *)(v23 + 40) = 0x80000002505CBD80;
    swift_willThrow();
  }
}

uint64_t sub_250574498(uint64_t a1, uint64_t a2)
{
  return a2;
}

ValueMetadata *type metadata accessor for ICloudSecurityLevel()
{
  return &type metadata for ICloudSecurityLevel;
}

uint64_t destroy for DependencyContainer(void *a1)
{
  if (a1[4]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 1));
  }
  if (a1[9]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 6));
  }
  if (a1[14]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 11));
  }
  if (a1[19]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 16));
  }
  if (a1[24]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 21));
  }
  uint64_t result = swift_release();
  if (a1[30])
  {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 27));
  }
  return result;
}

uint64_t initializeWithCopy for DependencyContainer(uint64_t a1, char *a2)
{
  char v5 = *a2;
  unint64_t v4 = a2 + 8;
  *(unsigned char *)a1 = v5;
  uint64_t v6 = a1 + 8;
  uint64_t v7 = *((void *)a2 + 4);
  if (v7)
  {
    uint64_t v8 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }
  else
  {
    long long v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(void *)(v6 + 32) = *((void *)v4 + 4);
  }
  char v10 = (_OWORD *)(a1 + 48);
  char v11 = a2 + 48;
  uint64_t v12 = *((void *)a2 + 9);
  if (v12)
  {
    uint64_t v13 = *((void *)a2 + 10);
    *(void *)(a1 + 72) = v12;
    *(void *)(a1 + 80) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    long long v14 = *((_OWORD *)a2 + 4);
    *char v10 = *v11;
    *(_OWORD *)(a1 + 64) = v14;
    *(void *)(a1 + 80) = *((void *)a2 + 10);
  }
  uint64_t v15 = (_OWORD *)(a1 + 88);
  uint64_t v16 = a2 + 88;
  uint64_t v17 = *((void *)a2 + 14);
  if (v17)
  {
    uint64_t v18 = *((void *)a2 + 15);
    *(void *)(a1 + 112) = v17;
    *(void *)(a1 + 120) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 104);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 104) = v19;
    *(void *)(a1 + 120) = *((void *)a2 + 15);
  }
  unint64_t v20 = (_OWORD *)(a1 + 128);
  uint64_t v21 = a2 + 128;
  uint64_t v22 = *((void *)a2 + 19);
  if (v22)
  {
    uint64_t v23 = *((void *)a2 + 20);
    *(void *)(a1 + 152) = v22;
    *(void *)(a1 + 160) = v23;
    (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
  }
  else
  {
    long long v24 = *((_OWORD *)a2 + 9);
    *unint64_t v20 = *v21;
    *(_OWORD *)(a1 + 144) = v24;
    *(void *)(a1 + 160) = *((void *)a2 + 20);
  }
  long long v25 = (_OWORD *)(a1 + 168);
  long long v26 = a2 + 168;
  uint64_t v27 = *((void *)a2 + 24);
  if (v27)
  {
    uint64_t v28 = *((void *)a2 + 25);
    *(void *)(a1 + 192) = v27;
    *(void *)(a1 + 200) = v28;
    (**(void (***)(_OWORD *, _OWORD *))(v27 - 8))(v25, v26);
  }
  else
  {
    long long v29 = *(_OWORD *)(a2 + 184);
    *long long v25 = *v26;
    *(_OWORD *)(a1 + 184) = v29;
    *(void *)(a1 + 200) = *((void *)a2 + 25);
  }
  *(void *)(a1 + 208) = *((void *)a2 + 26);
  uint64_t v30 = *((void *)a2 + 30);
  swift_retain();
  if (v30)
  {
    uint64_t v31 = *((void *)a2 + 31);
    *(void *)(a1 + 240) = v30;
    *(void *)(a1 + 248) = v31;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))(a1 + 216, (uint64_t)(a2 + 216), v30);
  }
  else
  {
    long long v32 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v32;
    *(void *)(a1 + 248) = *((void *)a2 + 31);
  }
  return a1;
}

uint64_t assignWithCopy for DependencyContainer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = a1 + 8;
  char v5 = (long long *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
    goto LABEL_8;
  }
  long long v7 = *v5;
  long long v8 = v5[1];
  *(void *)(v4 + 32) = *((void *)v5 + 4);
  *(_OWORD *)uint64_t v4 = v7;
  *(_OWORD *)(v4 + 16) = v8;
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  else if (v9)
  {
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, a2 + 48);
    goto LABEL_15;
  }
  long long v10 = *(_OWORD *)(a2 + 48);
  long long v11 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v11;
LABEL_15:
  uint64_t v12 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v12)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
      goto LABEL_22;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  }
  else if (v12)
  {
    *(void *)(a1 + 112) = v12;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 88, a2 + 88);
    goto LABEL_22;
  }
  long long v13 = *(_OWORD *)(a2 + 88);
  long long v14 = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 88) = v13;
  *(_OWORD *)(a1 + 104) = v14;
LABEL_22:
  uint64_t v15 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v15)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
      goto LABEL_29;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  }
  else if (v15)
  {
    *(void *)(a1 + 152) = v15;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 128, a2 + 128);
    goto LABEL_29;
  }
  long long v16 = *(_OWORD *)(a2 + 128);
  long long v17 = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v16;
  *(_OWORD *)(a1 + 144) = v17;
LABEL_29:
  uint64_t v18 = *(void *)(a2 + 192);
  if (*(void *)(a1 + 192))
  {
    if (v18)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 168), (uint64_t *)(a2 + 168));
      goto LABEL_36;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  }
  else if (v18)
  {
    *(void *)(a1 + 192) = v18;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 168, a2 + 168);
    goto LABEL_36;
  }
  long long v19 = *(_OWORD *)(a2 + 168);
  long long v20 = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(_OWORD *)(a1 + 168) = v19;
  *(_OWORD *)(a1 + 184) = v20;
LABEL_36:
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  uint64_t v21 = *(void *)(a2 + 240);
  if (!*(void *)(a1 + 240))
  {
    if (v21)
    {
      *(void *)(a1 + 240) = v21;
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 216, a2 + 216);
      return a1;
    }
LABEL_42:
    long long v22 = *(_OWORD *)(a2 + 216);
    long long v23 = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v22;
    *(_OWORD *)(a1 + 232) = v23;
    return a1;
  }
  if (!v21)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 216);
    goto LABEL_42;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        long long v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy256_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

uint64_t assignWithTake for DependencyContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 8;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = a1 + 8;
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  long long v6 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)v4;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(v4 + 32);
  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  if (*(void *)(a1 + 112)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  }
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v8;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  if (*(void *)(a1 + 152)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  }
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  if (*(void *)(a1 + 192)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  }
  long long v10 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v10;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_release();
  if (*(void *)(a1 + 240)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 216);
  }
  long long v11 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v11;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  return a1;
}

uint64_t getEnumTagSinglePayload for DependencyContainer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 256)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DependencyContainer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 256) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 256) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DependencyContainer()
{
  return &type metadata for DependencyContainer;
}

unint64_t sub_250574FE4()
{
  unint64_t result = qword_269AB6A50;
  if (!qword_269AB6A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6A50);
  }
  return result;
}

unsigned char *_s14GroupKitCrypto19ICloudSecurityLevelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x250575104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DependencyEnvironment()
{
  return &type metadata for DependencyEnvironment;
}

unint64_t sub_250575140()
{
  unint64_t result = qword_269AB6A58;
  if (!qword_269AB6A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6A58);
  }
  return result;
}

void sub_250575194(uint64_t a1, uint64_t a2)
{
  if (a1 < 0 || (uint64_t v3 = a2 - 1, a2 < 1))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (a1 <= 1) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = a1;
  }
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    goto LABEL_27;
  }
  double v7 = ceil(log2((double)v6) * 0.125);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v8 = (uint64_t)v7;
  if ((uint64_t)v7 > a2)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v14[0] = sub_2505723A0(a2);
  v14[1] = v9;
  sub_25057532C(v14, 0);
  if (__OFSUB__(a2, v8))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (a2 - v8 < a2)
  {
    uint64_t v10 = -v8;
    while (1)
    {
      uint64_t v11 = a2 + v10;
      if (__OFSUB__(v3, a2 + v10)) {
        break;
      }
      if ((unint64_t)(v3 - (a2 + v10) - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_25;
      }
      BOOL v13 = __CFADD__(v10++, 1);
      sub_2505BD910();
      if (v13) {
        return;
      }
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        return;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_33:
  __break(1u);
}

void *sub_25057532C(void *result, int __c)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  unint64_t v2 = result[1];
  uint64_t v4 = result;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t result = sub_250575520((int *)&__b, __c);
      uint64_t v5 = __b;
      unint64_t v6 = v19 | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_2505BD890();
      uint64_t v7 = v19;
      uint64_t v8 = *(void *)(__b + 16);
      uint64_t v9 = *(void *)(__b + 24);
      uint64_t v10 = sub_2505BD7D0();
      if (!v10)
      {
        __break(1u);
        JUMPOUT(0x250575510);
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_2505BD800();
      uint64_t v13 = v8 - v12;
      if (__OFSUB__(v8, v12))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v14 = __OFSUB__(v9, v8);
      int64_t v15 = v9 - v8;
      if (v14) {
        goto LABEL_14;
      }
      uint64_t v16 = sub_2505BD7F0();
      if (v16 >= v15) {
        size_t v17 = v15;
      }
      else {
        size_t v17 = v16;
      }
      unint64_t result = memset((void *)(v11 + v13), __c, v17);
      *uint64_t v4 = __b;
      v4[1] = v7 | 0x8000000000000000;
      return result;
    case 3uLL:
      return result;
    default:
      uint64_t __b = *result;
      LOWORD(v19) = v2;
      BYTE2(v19) = BYTE2(v2);
      BYTE3(v19) = BYTE3(v2);
      BYTE4(v19) = BYTE4(v2);
      BYTE5(v19) = BYTE5(v2);
      BYTE6(v19) = BYTE6(v2);
      unint64_t result = memset(&__b, __c, BYTE6(v2));
      uint64_t v5 = __b;
      unint64_t v6 = v19 | ((unint64_t)BYTE4(v19) << 32) | ((unint64_t)BYTE5(v19) << 40) | ((unint64_t)BYTE6(v19) << 48);
LABEL_4:
      *uint64_t v4 = v5;
      v4[1] = v6;
      return result;
  }
}

char *sub_250575520(int *a1, int a2)
{
  unint64_t result = (char *)sub_2505BD8A0();
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t result = (char *)sub_2505BD7D0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  unint64_t result = (char *)sub_2505BD800();
  uint64_t v8 = v5 - (void)result;
  if (__OFSUB__(v5, result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v9 = v6 - v5;
  uint64_t v10 = sub_2505BD7F0();
  if (v10 >= v9) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v10;
  }
  return (char *)memset(&v7[v8], a2, v11);
}

id sub_2505755B4(uint64_t *a1, uint64_t *a2, uint64_t a3, unint64_t a4, unsigned int a5, void *a6)
{
  id v41 = a6;
  uint64_t v7 = v6;
  unsigned int v44 = a5;
  uint64_t v42 = a3;
  unint64_t v43 = a4;
  uint64_t v11 = sub_2505BD9F0();
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  size_t v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  unint64_t v18 = a1[1];
  uint64_t v20 = *a2;
  unint64_t v38 = a2[1];
  uint64_t v39 = v20;
  id v35 = objc_msgSend(objc_allocWithZone(v7), sel_initWithContext_, a6);
  v34[9] = sub_2505BD990();
  v34[8] = sub_2505BD990();
  v34[7] = sub_2505BD990();
  v34[6] = sub_2505BD990();
  v34[5] = sub_2505BD990();
  v34[4] = sub_2505BD990();
  v34[3] = sub_2505BD990();
  v34[2] = sub_2505BD990();
  v34[1] = sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD9C0();
  sub_250511528(v19, v18);
  uint64_t v21 = (void *)sub_2505BD9A0();
  uint64_t v22 = v37;
  uint64_t v36 = *(void *)(v36 + 8);
  ((void (*)(char *, uint64_t))v36)(v17, v37);
  id v23 = v35;
  objc_msgSend(v35, sel_setGroupID_, v21);

  unint64_t v24 = v38;
  uint64_t v25 = v39;
  uint64_t v26 = v40;
  uint64_t v27 = sub_2504DCA88(v39, v38);
  uint64_t v40 = v26;
  uint64_t v45 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
  sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
  sub_2505BE110();
  swift_bridgeObjectRelease();
  sub_250511528(v25, v24);
  uint64_t v28 = (void *)sub_2505BE130();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setUserID_, v28);

  sub_2505BD9E0();
  long long v29 = (void *)sub_2505BD9A0();
  ((void (*)(char *, uint64_t))v36)(v17, v22);
  objc_msgSend(v23, sel_setDedupeID_, v29);

  uint64_t v31 = v42;
  unint64_t v30 = v43;
  long long v32 = (void *)sub_2505BD920();
  objc_msgSend(v23, sel_setBlobData_, v32);

  objc_msgSend(v23, sel_setGroupVersion_, v44);
  sub_250511528(v31, v30);

  return v23;
}

id sub_250575A4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupKitCryptoGroupBlob();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroupKitCryptoGroupBlob()
{
  return self;
}

uint64_t sub_250575AA4(void *a1)
{
  id v148 = a1;
  objc_super v2 = v1;
  uint64_t v160 = *MEMORY[0x263EF8340];
  uint64_t v150 = sub_2505BD9F0();
  uint64_t v3 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150, v4, v5, v6, v7);
  v145 = &v136[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB67D8);
  MEMORY[0x270FA5388](v9, v10, v11, v12, v13);
  uint64_t v15 = &v136[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB67E0);
  uint64_t v21 = MEMORY[0x270FA5388](v16 - 8, v17, v18, v19, v20);
  v142 = &v136[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = MEMORY[0x270FA5388](v21, v23, v24, v25, v26);
  v143 = &v136[-v28];
  uint64_t v33 = MEMORY[0x270FA5388](v27, v29, v30, v31, v32);
  uint64_t v140 = &v136[-v34];
  uint64_t v39 = MEMORY[0x270FA5388](v33, v35, v36, v37, v38);
  uint64_t v141 = &v136[-v40];
  uint64_t v45 = MEMORY[0x270FA5388](v39, v41, v42, v43, v44);
  uint64_t v47 = &v136[-v46];
  uint64_t v52 = MEMORY[0x270FA5388](v45, v48, v49, v50, v51);
  unint64_t v54 = &v136[-v53];
  MEMORY[0x270FA5388](v52, v55, v56, v57, v58);
  v60 = &v136[-v59];
  v146 = v2;
  id v61 = objc_msgSend(v2, sel_groupID);
  if (v61)
  {
    uint64_t v62 = v61;
    sub_2505BD9B0();

    uint64_t v63 = v3;
    uint64_t v64 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v65 = v60;
    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v63 = v3;
    uint64_t v64 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v65 = v60;
    uint64_t v66 = 1;
  }
  v147 = v64;
  v64(v65, v66, 1, v150);
  id v67 = v148;
  id v68 = objc_msgSend(v148, sel_groupID);
  if (v68)
  {
    v69 = v68;
    sub_2505BD9B0();

    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v70 = 1;
  }
  uint64_t v71 = v63;
  uint64_t v72 = v150;
  uint64_t v144 = v63 + 56;
  v147(v54, v70, 1, v150);
  uint64_t v73 = (uint64_t)&v15[*(int *)(v9 + 48)];
  sub_25055AF68((uint64_t)v60, (uint64_t)v15);
  sub_25055AF68((uint64_t)v54, v73);
  unint64_t v74 = (void *)(v63 + 48);
  unint64_t v75 = *(unsigned int (**)(void, void, void))(v63 + 48);
  uint64_t v76 = v72;
  uint64_t v77 = v74;
  if (v75(v15, 1, v76) == 1)
  {
    sub_2504DAF60((uint64_t)v54, &qword_269AB67E0);
    sub_2504DAF60((uint64_t)v60, &qword_269AB67E0);
    if (v75(v73, 1, v150) == 1)
    {
      uint64_t v138 = v77;
      uint64_t v139 = v75;
      sub_2504DAF60((uint64_t)v15, &qword_269AB67E0);
      uint64_t v77 = v146;
      goto LABEL_14;
    }
LABEL_12:
    sub_2504DAF60((uint64_t)v15, &qword_269AB67D8);
    goto LABEL_31;
  }
  sub_25055AF68((uint64_t)v15, (uint64_t)v47);
  uint64_t v139 = v75;
  if (v75(v73, 1, v150) == 1)
  {
    sub_2504DAF60((uint64_t)v54, &qword_269AB67E0);
    sub_2504DAF60((uint64_t)v60, &qword_269AB67E0);
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v47, v150);
    goto LABEL_12;
  }
  uint64_t v138 = v77;
  uint64_t v78 = v145;
  uint64_t v79 = v150;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v71 + 32))(v145, v73, v150);
  sub_2505764EC();
  int v137 = sub_2505BE120();
  uint64_t v80 = *(void (**)(unsigned char *, uint64_t))(v71 + 8);
  v80(v78, v79);
  sub_2504DAF60((uint64_t)v54, &qword_269AB67E0);
  sub_2504DAF60((uint64_t)v60, &qword_269AB67E0);
  v80(v47, v79);
  id v67 = v148;
  sub_2504DAF60((uint64_t)v15, &qword_269AB67E0);
  uint64_t v77 = v146;
  if ((v137 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_14:
  id v81 = objc_msgSend(v77, sel_userID);
  if (v81)
  {
    v82 = v81;
    uint64_t v83 = sub_2505BE140();
    uint64_t v85 = v84;
  }
  else
  {
    uint64_t v83 = 0;
    uint64_t v85 = 0;
  }
  id v86 = objc_msgSend(v67, sel_userID);
  if (!v86)
  {
    if (!v85) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  unint64_t v87 = v86;
  uint64_t v88 = sub_2505BE140();
  uint64_t v90 = v89;

  if (!v85)
  {
    if (!v90) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  if (!v90)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (v83 == v88 && v85 == v90)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  char v91 = sub_2505BE780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v91 & 1) == 0)
  {
LABEL_31:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    uint64_t v99 = swift_allocError();
    *(_WORD *)uint64_t v100 = 402;
    *(_OWORD *)(v100 + 8) = xmmword_2505C5BB0;
    *(void *)(v100 + 24) = 0x80000002505CB190;
    *(void *)(v100 + 32) = 0xD000000000000072;
    *(void *)(v100 + 40) = 0x80000002505CBDF0;
    uint64_t v149 = v99;
    swift_willThrow();
    return v77 & 1;
  }
LABEL_28:
  id v92 = objc_msgSend(v77, sel_groupVersion);
  if (v92 == objc_msgSend(v67, sel_groupVersion))
  {
    id v93 = objc_msgSend(v77, sel_dedupeID);
    if (v93)
    {
      uint64_t v94 = v93;
      uint64_t v95 = (uint64_t)v140;
      sub_2505BD9B0();

      uint64_t v96 = 0;
      uint64_t v97 = v139;
    }
    else
    {
      uint64_t v96 = 1;
      uint64_t v97 = v139;
      uint64_t v95 = (uint64_t)v140;
    }
    uint64_t v98 = (uint64_t)v141;
    uint64_t v103 = v150;
    v147((unsigned char *)v95, v96, 1, v150);
    sub_25055B02C(v95, v98);
    uint64_t v139 = v97;
    if (v97(v98, 1, v103))
    {
      sub_2504DAF60(v98, &qword_269AB67E0);
      uint64_t v104 = 0;
      unint64_t v105 = 0xC000000000000000;
    }
    else
    {
      unint64_t v106 = v145;
      uint64_t v107 = v150;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v71 + 16))(v145, v98, v150);
      sub_2504DAF60(v98, &qword_269AB67E0);
      uint64_t __src = sub_2505BD9D0();
      char v152 = v108;
      char v153 = v109;
      char v154 = v110;
      char v155 = v111;
      char v156 = v112;
      char v157 = v113;
      char v158 = v114;
      char v159 = v115;
      uint64_t v104 = sub_25055B094(&__src, 16);
      unint64_t v105 = v116;
      (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v106, v107);
    }
    id v117 = objc_msgSend(v67, sel_dedupeID);
    if (v117)
    {
      v118 = v117;
      uint64_t v119 = (uint64_t)v142;
      sub_2505BD9B0();

      uint64_t v120 = 0;
    }
    else
    {
      uint64_t v120 = 1;
      uint64_t v119 = (uint64_t)v142;
    }
    uint64_t v121 = (uint64_t)v143;
    uint64_t v122 = v150;
    v147((unsigned char *)v119, v120, 1, v150);
    sub_25055B02C(v119, v121);
    if (v139(v121, 1, v122))
    {
      sub_2504DAF60(v121, &qword_269AB67E0);
      uint64_t v123 = 0;
      unint64_t v124 = 0xC000000000000000;
    }
    else
    {
      uint64_t v125 = v145;
      uint64_t v126 = v150;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v71 + 16))(v145, v121, v150);
      sub_2504DAF60(v121, &qword_269AB67E0);
      uint64_t __src = sub_2505BD9D0();
      char v152 = v127;
      char v153 = v128;
      char v154 = v129;
      char v155 = v130;
      char v156 = v131;
      char v157 = v132;
      char v158 = v133;
      char v159 = v134;
      uint64_t v123 = sub_25055B094(&__src, 16);
      unint64_t v124 = v135;
      (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v125, v126);
    }
    LOBYTE(v77) = sub_250559F4C(v104, v105, v123, v124);
    sub_250511528(v104, v105);
    sub_250511528(v123, v124);
  }
  else
  {
    id v102 = objc_msgSend(v77, sel_groupVersion);
    LOBYTE(v77) = (uint64_t)objc_msgSend(v67, sel_groupVersion) < (uint64_t)v102;
  }
  return v77 & 1;
}

unint64_t sub_2505764EC()
{
  unint64_t result = qword_269AB67E8;
  if (!qword_269AB67E8)
  {
    sub_2505BD9F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB67E8);
  }
  return result;
}

uint64_t sub_250576544(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  long long v32 = xmmword_2505C5C00;
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    objc_super v2 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v3 = MEMORY[0x263F8D3E8];
    uint64_t v4 = MEMORY[0x263F07B80];
    while (1)
    {
      uint64_t v7 = *(v2 - 1);
      unint64_t v8 = *v2;
      unint64_t v9 = *v2 >> 62;
      v2 += 2;
      LODWORD(v10) = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v7), v7)) {
            goto LABEL_29;
          }
          unint64_t v10 = HIDWORD(v7) - (int)v7;
LABEL_10:
          sub_2504DBC4C(v7, v8);
          if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10))
          {
LABEL_32:
            sub_2505BE5E0();
            __break(1u);
            JUMPOUT(0x2505768D8);
          }
LABEL_12:
          unsigned int v30 = bswap32(v10);
          v31[3] = v3;
          v31[4] = v4;
          v31[0] = &v30;
          v31[1] = v31;
          uint64_t v13 = (const void **)__swift_project_boxed_opaque_existential_1(v31, v3);
          uint64_t v14 = *v13;
          if (!*v13 || (v15 = v13[1], uint64_t v16 = v15 - v14, v15 == v14))
          {
            uint64_t v5 = 0;
            unint64_t v6 = 0xC000000000000000;
          }
          else if (v16 <= 14)
          {
            memset(__dst, 0, sizeof(__dst));
            unsigned __int8 v29 = (_BYTE)v15 - (_BYTE)v14;
            memcpy(__dst, v14, v15 - v14);
            uint64_t v5 = *(void *)__dst;
            unint64_t v6 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v29 << 48);
          }
          else
          {
            sub_2505BD810();
            swift_allocObject();
            uint64_t v17 = sub_2505BD7C0();
            uint64_t v18 = v17;
            if ((unint64_t)v16 >= 0x7FFFFFFF)
            {
              sub_2505BD8C0();
              uint64_t v5 = swift_allocObject();
              *(void *)(v5 + 16) = 0;
              *(void *)(v5 + 24) = v16;
              unint64_t v6 = v18 | 0x8000000000000000;
            }
            else
            {
              uint64_t v5 = v16 << 32;
              unint64_t v6 = v17 | 0x4000000000000000;
            }
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
          sub_2505BD960();
          sub_250511528(v5, v6);
          sub_2505BD960();
          sub_250511528(v7, v8);
          if (!--v1)
          {
            swift_bridgeObjectRelease();
            unsigned __int8 v19 = BYTE14(v32);
            LODWORD(v20) = 0;
            switch(*((void *)&v32 + 1) >> 62)
            {
              case 1:
                LODWORD(v20) = DWORD1(v32) - v32;
                if (__OFSUB__(DWORD1(v32), v32)) {
                  goto LABEL_30;
                }
                unint64_t v20 = (int)v20;
LABEL_25:
                if ((v20 & 0x8000000000000000) == 0 && !HIDWORD(v20)) {
                  goto LABEL_27;
                }
                goto LABEL_32;
              case 2:
                uint64_t v22 = *(void *)(v32 + 16);
                uint64_t v21 = *(void *)(v32 + 24);
                BOOL v23 = __OFSUB__(v21, v22);
                unint64_t v20 = v21 - v22;
                if (!v23) {
                  goto LABEL_25;
                }
                goto LABEL_31;
              case 3:
                goto LABEL_27;
              default:
                goto LABEL_23;
            }
          }
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v7 + 16);
          uint64_t v11 = *(void *)(v7 + 24);
          unint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_10;
          }
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        case 3uLL:
          goto LABEL_12;
        default:
          LODWORD(v10) = BYTE6(v8);
          goto LABEL_12;
      }
    }
  }
  unsigned __int8 v19 = 4;
LABEL_23:
  LODWORD(v20) = v19;
LABEL_27:
  LODWORD(v31[0]) = bswap32(v20);
  uint64_t v24 = sub_25056DAD0((uint64_t)v31, (uint64_t)v31 + 4);
  unint64_t v26 = v25;
  sub_250586214(v24, v25);
  sub_250511528(v24, v26);
  return v32;
}

uint64_t sub_2505768F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_2505BE0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v31 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a2;
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, a2, v6);
  sub_2505BD810();
  swift_allocObject();
  uint64_t v15 = sub_2505BD7E0();
  uint64_t v34 = 0x2000000000;
  uint64_t v35 = v15;
  sub_250511D3C((int *)&v34);
  uint64_t v16 = v34;
  uint64_t v17 = v35;
  uint64_t v18 = v35 | 0x4000000000000000;
  uint64_t v19 = type metadata accessor for MembershipVerifier(0);
  uint64_t v20 = *(int *)(v19 + 24);
  uint64_t v33 = a3;
  uint64_t v21 = (uint64_t *)(a3 + v20);
  *uint64_t v21 = v16;
  v21[1] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2505BFEC0;
  sub_2504DBC4C(v16, v17 | 0x4000000000000000);
  if (qword_269AB5680 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_269AC37B0;
  unint64_t v24 = *(void *)algn_269AC37B8;
  *(void *)(inited + 32) = qword_269AC37B0;
  *(void *)(inited + 40) = v24;
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 56) = v14;
  sub_2504DBC4C(v23, v24);
  uint64_t v25 = sub_250576544(inited);
  unint64_t v27 = v26;
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v28 = v31;
  uint64_t v29 = v32;
  sub_2505BE080();
  swift_release();
  sub_250511528(v25, v27);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v29, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v33 + *(int *)(v19 + 20), v28, v6);
}

uint64_t Invite.init(invitersID:invitersSigningKey:invitedID:groupID:groupVersion:invitedMembershipVerifier:invitedEncryptionPK:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v68 = a7;
  uint64_t v71 = a6;
  int v66 = a5;
  uint64_t v67 = sub_2505BE0B0();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67, v13, v14, v15, v16);
  uint64_t v64 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v56 = *a3;
  uint64_t v57 = v18;
  uint64_t v55 = a3[1];
  uint64_t v20 = *a4;
  uint64_t v59 = a4[1];
  uint64_t v60 = v20;
  uint64_t v21 = (int *)type metadata accessor for Invite(0);
  uint64_t v58 = (void *)((char *)a8 + v21[7]);
  uint64_t v22 = (void *)((char *)a8 + v21[13]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  v22[2] = 0xF000000000000000;
  uint64_t v23 = (char *)a8 + v21[14];
  uint64_t v24 = sub_2505BE040();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = (char *)a8 + v21[16];
  uint64_t v26 = sub_2505BE000();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v63 = v27;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v28(v25, 1, 1, v26);
  uint64_t v29 = v57;
  *a8 = v19;
  a8[1] = v29;
  uint64_t v30 = v55;
  a8[2] = v56;
  a8[3] = v30;
  uint64_t v31 = (char *)a8 + v21[6];
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v62 = v26;
  v32(v31, a2, v26);
  v28(v31, 0, 1, v26);
  sub_2505BD810();
  swift_allocObject();
  uint64_t v33 = sub_2505BD7E0();
  uint64_t v69 = 0x2000000000;
  uint64_t v70 = v33;
  uint64_t v34 = v61;
  sub_250511D3C((int *)&v69);
  uint64_t v61 = v34;
  uint64_t v35 = v70 | 0x4000000000000000;
  uint64_t v36 = v58;
  *uint64_t v58 = v69;
  v36[1] = v35;
  uint64_t v37 = (void *)((char *)a8 + v21[8]);
  uint64_t v38 = v59;
  *uint64_t v37 = v60;
  v37[1] = v38;
  sub_2505865A4(v71, (uint64_t)a8 + v21[10], type metadata accessor for MembershipVerifier);
  uint64_t v39 = (char *)a8 + v21[11];
  uint64_t v40 = sub_2505BDF30();
  uint64_t v41 = *(void *)(v40 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, v68, v40);
  *((unsigned char *)a8 + v21[15]) = 0;
  uint64_t v42 = (char *)a8 + v21[12];
  uint64_t v43 = sub_2505BDF90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
  *(_DWORD *)((char *)a8 + v21[9]) = v66;
  uint64_t v44 = v64;
  uint64_t v45 = a2;
  sub_2505BDFA0();
  uint64_t v46 = v44;
  uint64_t v47 = sub_2505BDF10();
  unint64_t v49 = v48;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v67);
  uint64_t v50 = sub_2504DBF8C(v47, v49);
  uint64_t v52 = v51;
  sub_250511528(v47, v49);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v68, v40);
  sub_250582308(v71, type metadata accessor for MembershipVerifier);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v45, v62);
  unint64_t v54 = (void *)((char *)a8 + v21[17]);
  *unint64_t v54 = v50;
  v54[1] = v52;
  return result;
}

uint64_t type metadata accessor for Invite(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB6A88);
}

uint64_t sub_250576FC4@<X0>(uint64_t *a1@<X8>)
{
  v190 = a1;
  uint64_t v212 = *MEMORY[0x263EF8340];
  uint64_t v191 = type metadata accessor for GKCrypto_EncryptedInvitation(0);
  MEMORY[0x270FA5388](v191, v1, v2, v3, v4);
  v192 = (char *)&v171 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_2505BDF30();
  uint64_t v195 = *(void *)(v196 - 8);
  MEMORY[0x270FA5388](v196, v6, v7, v8, v9);
  uint64_t v194 = (uint64_t)&v171 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for GKCrypto_SignedInvite(0);
  MEMORY[0x270FA5388](v193, v11, v12, v13, v14);
  uint64_t v197 = (uint64_t)&v171 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_2505BE040();
  uint64_t v198 = *(void *)(v199 - 8);
  MEMORY[0x270FA5388](v199, v16, v17, v18, v19);
  v200 = (char *)&v171 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v203 = type metadata accessor for GKCrypto_Invite(0);
  MEMORY[0x270FA5388](v203, v21, v22, v23, v24);
  uint64_t v205 = (uint64_t)&v171 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_2505BE0E0();
  uint64_t v201 = *(void *)(v204 - 8);
  MEMORY[0x270FA5388](v204, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v171 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_2505BDC90();
  uint64_t v202 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32, v33, v34, v35, v36);
  uint64_t v38 = (char *)&v171 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for GKCrypto_RSVPResponse(0);
  MEMORY[0x270FA5388](v39, v40, v41, v42, v43);
  uint64_t v45 = (char *)&v171 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  MEMORY[0x270FA5388](v46 - 8, v47, v48, v49, v50);
  uint64_t v52 = (char *)&v171 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_2505BE000();
  uint64_t v54 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53, v55, v56, v57, v58);
  uint64_t v60 = (char *)&v171 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Invite(0);
  uint64_t v62 = *(int *)(v61 + 60);
  if (*(unsigned char *)(v207 + v62)) {
    goto LABEL_6;
  }
  unint64_t v187 = v39;
  v186 = v31;
  v185 = v38;
  uint64_t v184 = v32;
  uint64_t v183 = v62;
  v188 = v45;
  v189 = v60;
  uint64_t v63 = (int *)v61;
  uint64_t v64 = v207;
  sub_2504DAEFC(v207 + *(int *)(v61 + 24), (uint64_t)v52, &qword_269AB5A28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53) == 1)
  {
    sub_2504DAF60((uint64_t)v52, &qword_269AB5A28);
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v68 = 299;
    *(_OWORD *)(v68 + 8) = xmmword_2505C5C10;
    *(void *)(v68 + 24) = 0x80000002505CC1D0;
    *(void *)(v68 + 32) = 0xD000000000000058;
    *(void *)(v68 + 40) = 0x80000002505CBE90;
    return swift_willThrow();
  }
  uint64_t v65 = v189;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v189, v52, v53);
  int v66 = (uint64_t *)(v64 + v63[7]);
  unint64_t v67 = v66[1];
  if (v67 >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v65, v53);
    goto LABEL_6;
  }
  uint64_t v70 = *v66;
  uint64_t v71 = v64 + v63[11];
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
  uint64_t inited = swift_initStackObject();
  long long v179 = xmmword_2505BFEC0;
  *(_OWORD *)(inited + 16) = xmmword_2505BFEC0;
  uint64_t v182 = inited + 32;
  sub_2504DBC4C(v70, v67);
  sub_2504DBC4C(v70, v67);
  if (qword_269AB5688 != -1) {
    swift_once();
  }
  uint64_t v73 = qword_269AC37C0;
  unint64_t v74 = *(void *)algn_269AC37C8;
  *(void *)(inited + 32) = qword_269AC37C0;
  *(void *)(inited + 40) = v74;
  unint64_t v75 = (uint64_t *)(v64 + v63[8]);
  v181 = v63;
  uint64_t v76 = *v75;
  unint64_t v77 = v75[1];
  *(void *)(inited + 48) = *v75;
  *(void *)(inited + 56) = v77;
  sub_2504DBC4C(v73, v74);
  sub_2504DBC4C(v76, v77);
  uint64_t v78 = sub_250576544(inited);
  unint64_t v80 = v79;
  swift_setDeallocating();
  swift_arrayDestroy();
  unint64_t v81 = v206;
  v82 = sub_25059991C(v71, v70, v67, v78, v80);
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v65, v53);
    sub_25051B8D4(v70, v67);
    sub_250511528(v78, v80);
    return sub_25051B8D4(v70, v67);
  }
  else
  {
    uint64_t v177 = v53;
    uint64_t v176 = v71;
    uint64_t v84 = (uint64_t)v82;
    uint64_t v85 = v78;
    unint64_t v86 = v83;
    sub_250511528(v85, v80);
    uint64_t v87 = sub_25051B8D4(v70, v67);
    v178 = &v171;
    MEMORY[0x270FA5388](v87, v88, v89, v90, v91);
    uint64_t v182 = v84;
    *(&v171 - 4) = v84;
    *(&v171 - 3) = v86;
    unint64_t v206 = v86;
    *(&v171 - 2) = v207;
    sub_2505868BC(&qword_269AB6210, (void (*)(uint64_t))type metadata accessor for GKCrypto_RSVPResponse);
    sub_2505BDB80();
    uint64_t v173 = sub_2505BDB40();
    uint64_t v174 = v92;
    v178 = (uint64_t *)v70;
    unint64_t v187 = v67;
    if (qword_269AB5690 != -1) {
      swift_once();
    }
    uint64_t v93 = qword_269AC37D0;
    unint64_t v94 = *(void *)algn_269AC37D8;
    type metadata accessor for MembershipVerifier(0);
    sub_2504DBC4C(v93, v94);
    uint64_t v95 = sub_2505BDF10();
    unint64_t v97 = v96;
    *(void *)&long long v211 = v93;
    *((void *)&v211 + 1) = v94;
    sub_2504DBC4C(v93, v94);
    sub_2505980CC(v95, v97);
    sub_250511528(v95, v97);
    sub_250511528(v93, v94);
    long long v98 = v211;
    long long v208 = v211;
    sub_2504DBC4C(v211, *((unint64_t *)&v211 + 1));
    uint64_t v99 = v182;
    unint64_t v100 = v206;
    sub_2504DBC4C(v182, v206);
    sub_2505980CC(v99, v100);
    sub_250511528(v99, v100);
    sub_250511528(v98, *((unint64_t *)&v98 + 1));
    unint64_t v101 = *((void *)&v208 + 1);
    uint64_t v102 = v208;
    uint64_t v103 = sub_2505868BC((unint64_t *)&qword_269AB5FB0, MEMORY[0x263F047F8]);
    uint64_t v104 = v204;
    sub_2505BDC80();
    unint64_t v105 = v185;
    uint64_t v175 = v54;
    switch(v101 >> 62)
    {
      case 1uLL:
        uint64_t v172 = v103;
        unint64_t v108 = v101;
        if (v102 >> 32 < (int)v102) {
          __break(1u);
        }
        uint64_t v106 = v102;
        sub_2504DBC4C(v102, v101);
        uint64_t v107 = v186;
        sub_2505864C4((int)v102, v102 >> 32);
        goto LABEL_20;
      case 2uLL:
        uint64_t v172 = v103;
        unint64_t v108 = v101;
        uint64_t v106 = v102;
        uint64_t v109 = *(void *)(v102 + 16);
        uint64_t v110 = *(void *)(v102 + 24);
        sub_2504DBC4C(v106, v101);
        swift_retain();
        swift_retain();
        uint64_t v111 = v109;
        uint64_t v107 = v186;
        sub_2505864C4(v111, v110);
        swift_release();
        swift_release();
LABEL_20:
        sub_250511528(v106, v108);
        uint64_t v112 = v184;
        uint64_t v113 = v202;
        uint64_t v114 = v201;
        goto LABEL_21;
      case 3uLL:
        *(void *)((char *)&v211 + 6) = 0;
        *(void *)&long long v211 = 0;
        uint64_t v107 = v186;
        sub_2505BDC60();
        uint64_t v106 = v102;
        goto LABEL_17;
      default:
        uint64_t v106 = v102;
        *(void *)&long long v211 = v102;
        WORD4(v211) = v101;
        BYTE10(v211) = BYTE2(v101);
        BYTE11(v211) = BYTE3(v101);
        BYTE12(v211) = BYTE4(v101);
        BYTE13(v211) = BYTE5(v101);
        uint64_t v107 = v186;
        sub_2505BDC60();
LABEL_17:
        sub_250511528(v102, v101);
        uint64_t v112 = v184;
        uint64_t v113 = v202;
        unint64_t v108 = v101;
        uint64_t v114 = v201;
LABEL_21:
        sub_2505BDC70();
        (*(void (**)(char *, uint64_t))(v114 + 8))(v107, v104);
        sub_250511528(v106, v108);
        uint64_t v209 = v112;
        uint64_t v210 = sub_2505868BC(&qword_269AB5FB8, MEMORY[0x263F045C0]);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v208);
        (*(void (**)(uint64_t *, char *, uint64_t))(v113 + 16))(boxed_opaque_existential_1, v105, v112);
        __swift_project_boxed_opaque_existential_1(&v208, v209);
        sub_2505BD820();
        long long v116 = v211;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v208);
        (*(void (**)(char *, uint64_t))(v113 + 8))(v105, v112);
        uint64_t v117 = v207;
        v118 = (uint64_t *)(v207 + v181[13]);
        uint64_t v119 = *v118;
        uint64_t v120 = v118[1];
        unint64_t v121 = v118[2];
        sub_2504DBC4C(v116, *((unint64_t *)&v116 + 1));
        uint64_t v122 = sub_25051C8D8(v119, v120, v121);
        uint64_t *v118 = 32;
        *(_OWORD *)(v118 + 1) = v116;
        MEMORY[0x270FA5388](v122, v123, v124, v125, v126);
        *(&v171 - 4) = v117;
        *(&v171 - 3) = v127;
        *((_OWORD *)&v171 - 1) = v116;
        sub_2505868BC(&qword_269AB6280, (void (*)(uint64_t))type metadata accessor for GKCrypto_Invite);
        sub_2505BDB80();
        uint64_t v128 = sub_25057E9B0();
        unint64_t v130 = v129;
        *(void *)&long long v208 = v128;
        *((void *)&v208 + 1) = v129;
        sub_25051AE60();
        char v131 = v200;
        sub_2505BDFF0();
        sub_250511528(v128, v130);
        uint64_t v132 = v207 + v181[14];
        sub_2504DAF60(v132, &qword_269AB6A80);
        uint64_t v133 = v198;
        uint64_t v134 = v199;
        (*(void (**)(uint64_t, char *, uint64_t))(v198 + 16))(v132, v131, v199);
        uint64_t v135 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v133 + 56))(v132, 0, 1, v134);
        MEMORY[0x270FA5388](v135, v136, v137, v138, v139);
        *(&v171 - 2) = v205;
        *(&v171 - 1) = (uint64_t)v131;
        sub_2505868BC(&qword_269AB6260, (void (*)(uint64_t))type metadata accessor for GKCrypto_SignedInvite);
        sub_2505BDB80();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v195 + 16))(v194, v176, v196);
        uint64_t v140 = sub_2505BDB40();
        unint64_t v142 = v141;
        uint64_t v143 = v207;
        uint64_t v144 = swift_initStackObject();
        *(_OWORD *)(v144 + 16) = v179;
        if (qword_269AB5698 != -1) {
          swift_once();
        }
        uint64_t v145 = qword_269AC37E0;
        unint64_t v146 = *(void *)algn_269AC37E8;
        *(void *)(v144 + 32) = qword_269AC37E0;
        *(void *)(v144 + 40) = v146;
        uint64_t v147 = v143;
        uint64_t v148 = *(void *)(v143 + 16);
        unint64_t v149 = *(void *)(v147 + 24);
        *(void *)(v144 + 48) = v148;
        *(void *)(v144 + 56) = v149;
        sub_2504DBC4C(v145, v146);
        sub_2504DBC4C(v148, v149);
        uint64_t v150 = sub_250576544(v144);
        unint64_t v152 = v151;
        swift_setDeallocating();
        swift_arrayDestroy();
        uint64_t v153 = v194;
        char v154 = sub_25059991C(v194, v140, v142, v150, v152);
        char v155 = *(void (**)(uint64_t, uint64_t))(v195 + 8);
        uint64_t v204 = (uint64_t)v154;
        unint64_t v157 = v156;
        v155(v153, v196);
        sub_250511528(v150, v152);
        uint64_t v158 = sub_250511528(v140, v142);
        MEMORY[0x270FA5388](v158, v159, v160, v161, v162);
        *(&v171 - 4) = v204;
        *(&v171 - 3) = v157;
        unint64_t v203 = v157;
        uint64_t v163 = v207;
        *(&v171 - 2) = v207;
        sub_2505868BC(&qword_269AB60E0, (void (*)(uint64_t))type metadata accessor for GKCrypto_EncryptedInvitation);
        uint64_t v164 = (uint64_t)v192;
        sub_2505BDB80();
        *(unsigned char *)(v163 + v183) = 1;
        uint64_t v165 = sub_2505BDB40();
        uint64_t v167 = v166;
        sub_250511528(v182, v206);
        sub_250511528(v204, v203);
        sub_250511528(v116, *((unint64_t *)&v116 + 1));
        sub_250582308(v164, type metadata accessor for GKCrypto_EncryptedInvitation);
        sub_250582308(v197, type metadata accessor for GKCrypto_SignedInvite);
        sub_250582308((uint64_t)v188, type metadata accessor for GKCrypto_RSVPResponse);
        (*(void (**)(char *, uint64_t))(v175 + 8))(v189, v177);
        v168 = v190;
        uint64_t *v190 = v165;
        v168[1] = v167;
        unint64_t v169 = v187;
        v168[2] = (uint64_t)v178;
        v168[3] = v169;
        uint64_t v170 = v174;
        v168[4] = v173;
        v168[5] = v170;
        (*(void (**)(char *, uint64_t))(v198 + 8))(v200, v199);
        uint64_t result = sub_250582308(v205, type metadata accessor for GKCrypto_Invite);
        break;
    }
  }
  return result;
}

uint64_t sub_250578710(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  int v82 = a3;
  uint64_t v81 = a2;
  uint64_t v80 = a1;
  uint64_t v74 = sub_2505BE040();
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74, v9, v10, v11, v12);
  uint64_t v88 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2505BE0B0();
  uint64_t v85 = *(void *)(v14 - 8);
  unint64_t v86 = (char *)v14;
  MEMORY[0x270FA5388](v14, v15, v16, v17, v18);
  uint64_t v84 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for GKCrypto_SignedRSVP(0);
  MEMORY[0x270FA5388](v20, v21, v22, v23, v24);
  uint64_t v89 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for GKCrypto_RSVP(0);
  MEMORY[0x270FA5388](v79, v26, v27, v28, v29);
  uint64_t v94 = (uint64_t)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_2505BE000();
  uint64_t v90 = *(void *)(v31 - 8);
  uint64_t v91 = v31;
  MEMORY[0x270FA5388](v31, v32, v33, v34, v35);
  uint64_t v37 = (char *)&v73 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *a4;
  unint64_t v39 = a4[1];
  uint64_t v78 = *a5;
  uint64_t v77 = a5[1];
  uint64_t v41 = *a6;
  unint64_t v40 = a6[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2505BFEC0;
  if (qword_269AB5680 != -1) {
    swift_once();
  }
  uint64_t v87 = v20;
  uint64_t v43 = qword_269AC37B0;
  unint64_t v44 = *(void *)algn_269AC37B8;
  *(void *)(inited + 32) = qword_269AC37B0;
  *(void *)(inited + 40) = v44;
  *(void *)(inited + 48) = v38;
  *(void *)(inited + 56) = v39;
  sub_2504DBC4C(v43, v44);
  sub_2504DBC4C(v38, v39);
  uint64_t v45 = sub_250576544(inited);
  unint64_t v47 = v46;
  swift_setDeallocating();
  swift_arrayDestroy();
  unint64_t v76 = v47;
  uint64_t v75 = v45;
  if (v40 >> 60 == 15)
  {
    uint64_t v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 16))(v37, v80, v91);
  }
  else
  {
    sub_2504DBC4C(v41, v40);
    sub_2505BDFE0();
    uint64_t v48 = sub_25051B8D4(v41, v40);
  }
  uint64_t v53 = v94;
  MEMORY[0x270FA5388](v48, v49, v50, v51, v52);
  *((_DWORD *)&v73 - 16) = 1;
  uint64_t v54 = v77;
  *(&v73 - 7) = v78;
  *(&v73 - 6) = v54;
  *(&v73 - 5) = v38;
  *(&v73 - 4) = v39;
  *(&v73 - 3) = v81;
  *((unsigned char *)&v73 - 16) = v82 & 1;
  *(&v73 - 1) = (uint64_t)v37;
  sub_2505868BC(&qword_269AB6240, (void (*)(uint64_t))type metadata accessor for GKCrypto_RSVP);
  uint64_t v55 = v83;
  uint64_t v56 = sub_2505BDB80();
  MEMORY[0x270FA5388](v56, v57, v58, v59, v60);
  *(&v73 - 2) = v53;
  sub_2505868BC(&qword_269AB5AC0, (void (*)(uint64_t))type metadata accessor for GKCrypto_SignedRSVP);
  uint64_t v61 = v89;
  sub_2505BDB80();
  uint64_t v92 = v38;
  unint64_t v93 = v39;
  uint64_t v62 = (uint64_t)v61;
  uint64_t v63 = (uint64_t)v84;
  sub_2505BDFA0();
  uint64_t v64 = sub_250581DD0(&v92, v63);
  unint64_t v66 = v65;
  (*(void (**)(uint64_t, char *))(v85 + 8))(v63, v86);
  uint64_t v92 = v64;
  unint64_t v93 = v66;
  sub_25051AE60();
  unint64_t v67 = v88;
  unint64_t v86 = v37;
  sub_2505BDFF0();
  if (v55)
  {
    sub_250511528(v75, v76);
    sub_250582308(v94, type metadata accessor for GKCrypto_RSVP);
    sub_250511528(v64, v66);
    uint64_t v71 = (uint64_t)v86;
    sub_250582308(v62, type metadata accessor for GKCrypto_SignedRSVP);
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v71, v91);
  }
  else
  {
    uint64_t v68 = sub_2505BE010();
    uint64_t v70 = v69;
    sub_250511528(*(void *)(v62 + 8), *(void *)(v62 + 16));
    *(void *)(v62 + 8) = v68;
    *(void *)(v62 + 16) = v70;
    uint64_t v71 = sub_2505BDB40();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v67, v74);
    sub_250511528(v64, v66);
    sub_250511528(v75, v76);
    sub_250582308(v94, type metadata accessor for GKCrypto_RSVP);
    sub_250582308(v62, type metadata accessor for GKCrypto_SignedRSVP);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v86, v91);
  }
  return v71;
}

uint64_t sub_250578E7C@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *a3;
  unint64_t v6 = a3[1];
  uint64_t v9 = *a4;
  unint64_t v8 = a4[1];
  if (a2)
  {
    char v11 = *a5;
    char v12 = 0;
    switch(result)
    {
      case 1:
        break;
      case 2:
        char v12 = 0;
        v6 |= 0x1000000000000000uLL;
        break;
      case 3:
        char v12 = 0;
        v6 |= 0x2000000000000000uLL;
        break;
      case 4:
        char v12 = 0;
        v6 |= 0x3000000000000000uLL;
        break;
      case 5:
        char v12 = 1;
        break;
      default:
        goto LABEL_2;
    }
    *(void *)a6 = v7;
    *(void *)(a6 + 8) = v6;
    *(void *)(a6 + 16) = v9;
    *(void *)(a6 + 24) = v8;
    *(unsigned char *)(a6 + 32) = v11;
    *(unsigned char *)(a6 + 33) = v12;
  }
  else
  {
LABEL_2:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v10 = 305;
    *(_OWORD *)(v10 + 8) = xmmword_2505C5C20;
    *(void *)(v10 + 24) = 0x80000002505CC1A0;
    *(void *)(v10 + 32) = 0xD000000000000058;
    *(void *)(v10 + 40) = 0x80000002505CBE90;
    swift_willThrow();
    sub_250511528(v7, v6);
    return sub_25051B8D4(v9, v8);
  }
  return result;
}

uint64_t sub_250578FF0(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v113 = a1;
  unint64_t v114 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AB8);
  uint64_t v11 = MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v105 = (uint64_t)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  uint64_t v107 = (uint64_t)&v105 - v17;
  uint64_t v108 = type metadata accessor for GKCrypto_RSVP(0);
  uint64_t v112 = *(void *)(v108 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v108, v18, v19, v20, v21);
  uint64_t v109 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22, v24, v25, v26, v27);
  uint64_t v106 = (_DWORD *)((char *)&v105 - v28);
  uint64_t v29 = sub_2505BE040();
  uint64_t v110 = *(void *)(v29 - 8);
  uint64_t v111 = v29;
  MEMORY[0x270FA5388](v29, v30, v31, v32, v33);
  uint64_t v35 = (char *)&v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_2505BDA70();
  MEMORY[0x270FA5388](v36 - 8, v37, v38, v39, v40);
  uint64_t v41 = type metadata accessor for GKCrypto_SignedRSVP(0);
  uint64_t v46 = MEMORY[0x270FA5388](v41, v42, v43, v44, v45);
  uint64_t v48 = (int *)((char *)&v105 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v46, v49, v50, v51, v52);
  uint64_t v54 = (char *)&v105 - v53;
  uint64_t v55 = *a2;
  uint64_t v56 = a2[1];
  uint64_t v116 = 0;
  memset(v115, 0, sizeof(v115));
  sub_2504DBC4C(a3, v114);
  sub_2505BDA60();
  sub_2505868BC(&qword_269AB5AC0, (void (*)(uint64_t))type metadata accessor for GKCrypto_SignedRSVP);
  uint64_t v57 = v117;
  uint64_t result = sub_2505BDB30();
  if (!v57)
  {
    uint64_t v59 = v113;
    if (*(_DWORD *)v54 != 1)
    {
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v75 = sub_2505BDC40();
      __swift_project_value_buffer(v75, (uint64_t)qword_269AC3188);
      os_log_type_t v76 = sub_2505BE3D0();
      sub_2505865A4((uint64_t)v54, (uint64_t)v48, type metadata accessor for GKCrypto_SignedRSVP);
      uint64_t v77 = sub_2505BDC20();
      os_log_type_t v78 = v76;
      if (os_log_type_enabled(v77, v76))
      {
        uint64_t v79 = swift_slowAlloc();
        *(_DWORD *)uint64_t v79 = 67109376;
        int v80 = *v48;
        sub_250582308((uint64_t)v48, type metadata accessor for GKCrypto_SignedRSVP);
        LODWORD(v115[0]) = v80;
        sub_2505BE430();
        *(_WORD *)(v79 + 8) = 1024;
        LODWORD(v115[0]) = 1;
        sub_2505BE430();
        _os_log_impl(&dword_2504D2000, v77, v78, "invalid version when trying to validate group service message, got %u expected %u", (uint8_t *)v79, 0xEu);
        MEMORY[0x25337FF10](v79, -1, -1);
      }
      else
      {
        sub_250582308((uint64_t)v48, type metadata accessor for GKCrypto_SignedRSVP);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(_WORD *)uint64_t v81 = 305;
      *(_OWORD *)(v81 + 8) = xmmword_2505C5C30;
      *(void *)(v81 + 24) = 0x80000002505CC110;
      *(void *)(v81 + 32) = 0xD000000000000058;
      *(void *)(v81 + 40) = 0x80000002505CBE90;
      swift_willThrow();
      return sub_250582308((uint64_t)v54, type metadata accessor for GKCrypto_SignedRSVP);
    }
    uint64_t v60 = v56;
    unint64_t v61 = *((void *)v54 + 2);
    *(void *)&v115[0] = *((void *)v54 + 1);
    *((void *)&v115[0] + 1) = v61;
    sub_2504DBC4C(*(uint64_t *)&v115[0], v61);
    sub_25051AE60();
    uint64_t v62 = v35;
    sub_2505BE020();
    *(void *)&v115[0] = v55;
    *((void *)&v115[0] + 1) = v60;
    uint64_t v63 = sub_250581DD0((uint64_t *)v115, v59);
    unint64_t v65 = v64;
    *(void *)&v115[0] = v63;
    *((void *)&v115[0] + 1) = v64;
    char v66 = sub_2505BE050();
    sub_250511528(v63, v65);
    if ((v66 & 1) == 0)
    {
      uint64_t v82 = v110;
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v83 = sub_2505BDC40();
      __swift_project_value_buffer(v83, (uint64_t)qword_269AC3188);
      os_log_type_t v84 = sub_2505BE3D0();
      uint64_t v85 = sub_2505BDC20();
      os_log_type_t v86 = v84;
      BOOL v87 = os_log_type_enabled(v85, v84);
      uint64_t v88 = v111;
      if (v87)
      {
        uint64_t v89 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v89 = 0;
        _os_log_impl(&dword_2504D2000, v85, v86, "invalid signature when trying to validate group service message", v89, 2u);
        MEMORY[0x25337FF10](v89, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(_WORD *)uint64_t v90 = 383;
      long long v91 = xmmword_2505C5C40;
      goto LABEL_32;
    }
    uint64_t v67 = (uint64_t)&v54[*(int *)(v41 + 28)];
    uint64_t v68 = v107;
    sub_2504DAEFC(v67, v107, &qword_269AB5AB8);
    uint64_t v70 = v112 + 48;
    uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
    uint64_t v71 = v108;
    int v72 = v69(v68, 1, v108);
    uint64_t v112 = v70;
    if (v72 == 1)
    {
      uint64_t v73 = v106;
      *uint64_t v106 = 0;
      *((void *)v73 + 1) = 0;
      *((unsigned char *)v73 + 16) = 1;
      uint64_t v74 = v73;
      *(_OWORD *)(v73 + 6) = xmmword_2505BFEF0;
      *(_OWORD *)(v73 + 10) = xmmword_2505BFEF0;
      *(_OWORD *)(v73 + 14) = xmmword_2505BFEF0;
      sub_2505BDA40();
      sub_2504DAF60(v68, &qword_269AB5AB8);
    }
    else
    {
      uint64_t v74 = v106;
      sub_250586674(v68, (uint64_t)v106, type metadata accessor for GKCrypto_RSVP);
    }
    uint64_t v92 = (uint64_t)v109;
    uint64_t v93 = (uint64_t)v74;
    uint64_t v94 = *((void *)v74 + 1);
    int v95 = *(unsigned __int8 *)(v93 + 16);
    sub_250582308(v93, type metadata accessor for GKCrypto_RSVP);
    if (v95 == 1)
    {
      uint64_t v82 = v110;
      if (!v94) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v82 = v110;
      if (v94 < 1)
      {
LABEL_27:
        if (qword_269AB5418 != -1) {
          swift_once();
        }
        uint64_t v99 = sub_2505BDC40();
        __swift_project_value_buffer(v99, (uint64_t)qword_269AC3188);
        os_log_type_t v100 = sub_2505BE3D0();
        unint64_t v101 = sub_2505BDC20();
        os_log_type_t v102 = v100;
        BOOL v103 = os_log_type_enabled(v101, v100);
        uint64_t v88 = v111;
        if (v103)
        {
          uint64_t v104 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v104 = 0;
          _os_log_impl(&dword_2504D2000, v101, v102, "invalid version when trying to validate group service message", v104, 2u);
          MEMORY[0x25337FF10](v104, -1, -1);
        }

        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v90 = 382;
        long long v91 = xmmword_2505C5C50;
LABEL_32:
        *(_OWORD *)(v90 + 8) = v91;
        *(void *)(v90 + 24) = 0x80000002505CC110;
        *(void *)(v90 + 32) = 0xD000000000000058;
        *(void *)(v90 + 40) = 0x80000002505CBE90;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v62, v88);
        return sub_250582308((uint64_t)v54, type metadata accessor for GKCrypto_SignedRSVP);
      }
    }
    uint64_t v96 = v105;
    sub_2504DAEFC(v67, v105, &qword_269AB5AB8);
    if (v69(v96, 1, v71) == 1)
    {
      *(_DWORD *)uint64_t v92 = 0;
      *(void *)(v92 + 8) = 0;
      *(unsigned char *)(v92 + 16) = 1;
      *(_OWORD *)(v92 + 24) = xmmword_2505BFEF0;
      *(_OWORD *)(v92 + 40) = xmmword_2505BFEF0;
      *(_OWORD *)(v92 + 56) = xmmword_2505BFEF0;
      sub_2505BDA40();
      sub_2504DAF60(v96, &qword_269AB5AB8);
    }
    else
    {
      sub_250586674(v96, v92, type metadata accessor for GKCrypto_RSVP);
    }
    uint64_t v97 = *(void *)(v92 + 8);
    char v98 = *(unsigned char *)(v92 + 16);
    sub_250582308(v92, type metadata accessor for GKCrypto_RSVP);
    if ((v98 & 1) != 0 || v97 < 6)
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v62, v111);
      return sub_250582308((uint64_t)v54, type metadata accessor for GKCrypto_SignedRSVP);
    }
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_250579A48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v372 = a5;
  uint64_t v371 = a4;
  uint64_t v363 = a3;
  uint64_t v370 = a2;
  uint64_t v369 = sub_2505BDF90();
  uint64_t v362 = *(void *)(v369 - 8);
  MEMORY[0x270FA5388](v369, v8, v9, v10, v11);
  *(void *)&long long v350 = (char *)&v326 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v333 = sub_2505BE0B0();
  uint64_t v335 = *(void *)(v333 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v333, v13, v14, v15, v16);
  v330 = (char *)&v326 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v17, v19, v20, v21, v22);
  v331 = (char *)&v326 - v24;
  uint64_t v29 = MEMORY[0x270FA5388](v23, v25, v26, v27, v28);
  v334 = (char *)&v326 - v30;
  MEMORY[0x270FA5388](v29, v31, v32, v33, v34);
  v336 = (char *)&v326 - v35;
  uint64_t v332 = type metadata accessor for MembershipVerifier(0);
  MEMORY[0x270FA5388](v332, v36, v37, v38, v39);
  v329 = (char *)&v326 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6570);
  MEMORY[0x270FA5388](v41 - 8, v42, v43, v44, v45);
  uint64_t v342 = (uint64_t)&v326 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v341 = type metadata accessor for GKCrypto_Invite(0);
  uint64_t v340 = *(void *)(v341 - 8);
  MEMORY[0x270FA5388](v341, v47, v48, v49, v50);
  uint64_t v343 = (uint64_t)&v326 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
  MEMORY[0x270FA5388](v52 - 8, v53, v54, v55, v56);
  v344 = (char *)&v326 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v347 = type metadata accessor for GKCrypto_SignedInvite(0);
  uint64_t v62 = MEMORY[0x270FA5388](v347, v58, v59, v60, v61);
  v345 = (int *)((char *)&v326 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v62, v64, v65, v66, v67);
  uint64_t v348 = (uint64_t)&v326 - v68;
  uint64_t v354 = sub_2505BDF30();
  uint64_t v353 = *(void *)(v354 - 8);
  MEMORY[0x270FA5388](v354, v69, v70, v71, v72);
  v351 = (char *)&v326 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_2505BDA70();
  uint64_t v79 = MEMORY[0x270FA5388](v74 - 8, v75, v76, v77, v78);
  unint64_t v346 = (unint64_t)&v326 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v79, v81, v82, v83, v84);
  os_log_t v357 = (os_log_t)((char *)&v326 - v85);
  uint64_t v358 = type metadata accessor for GKCrypto_EncryptedInvitation(0);
  uint64_t v90 = MEMORY[0x270FA5388](v358, v86, v87, v88, v89);
  os_log_t v352 = (os_log_t)((char *)&v326 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v96 = MEMORY[0x270FA5388](v90, v92, v93, v94, v95);
  uint64_t v349 = (uint64_t)&v326 - v97;
  MEMORY[0x270FA5388](v96, v98, v99, v100, v101);
  BOOL v103 = (char *)&v326 - v102;
  uint64_t v368 = *a1;
  unint64_t v367 = a1[1];
  uint64_t v104 = (int *)type metadata accessor for Invite(0);
  uint64_t v105 = (_OWORD *)(a6 + v104[7]);
  uint64_t v106 = (uint64_t *)(a6 + v104[13]);
  *uint64_t v106 = 0;
  v106[1] = 0;
  v360 = v106;
  v106[2] = 0xF000000000000000;
  uint64_t v107 = a6 + v104[14];
  uint64_t v108 = sub_2505BE040();
  uint64_t v109 = *(void *)(v108 - 8);
  uint64_t v110 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56);
  uint64_t v365 = v107;
  uint64_t v339 = v108;
  v338 = v110;
  uint64_t v337 = v109 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v110)(v107, 1, 1);
  uint64_t v111 = a6 + v104[16];
  uint64_t v112 = sub_2505BE000();
  uint64_t v113 = *(void *)(v112 - 8);
  unint64_t v114 = *(void (**)(void))(v113 + 56);
  uint64_t v361 = v111;
  uint64_t v115 = v111;
  uint64_t v116 = (uint64_t)v103;
  uint64_t v117 = v371;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v114)(v115, 1, 1, v112);
  uint64_t v355 = a6 + v104[6];
  v114();
  v356 = v105;
  *uint64_t v105 = xmmword_2505BFEE0;
  unint64_t v118 = v372;
  v366 = v104;
  uint64_t v119 = v104[15];
  uint64_t v364 = a6;
  *(unsigned char *)(a6 + v119) = 2;
  uint64_t v376 = v117;
  unint64_t v377 = v118;
  uint64_t v375 = 0;
  long long v373 = 0u;
  long long v374 = 0u;
  sub_2504DBC4C(v117, v118);
  sub_2505BDA60();
  sub_2505868BC(&qword_269AB60E0, (void (*)(uint64_t))type metadata accessor for GKCrypto_EncryptedInvitation);
  uint64_t v120 = v359;
  sub_2505BDB50();
  if (v120)
  {
    sub_250511528(v117, v118);
    sub_250511528(v368, v367);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v363, v112);
    (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v369);
    int v121 = 0;
    int v122 = 0;
    int v123 = 0;
    int v124 = 0;
    BOOL v125 = 0;
    uint64_t v126 = v365;
    uint64_t v127 = v355;
    uint64_t v128 = v364;
    unint64_t v129 = v366;
    goto LABEL_22;
  }
  os_log_t v130 = v352;
  v328 = v114;
  os_log_t v357 = (os_log_t)(v113 + 56);
  uint64_t v358 = v112;
  uint64_t v359 = v113;
  if (*(_DWORD *)v116 != 1)
  {
    uint64_t v156 = v117;
    sub_250511528(v368, v367);
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v157 = sub_2505BDC40();
    __swift_project_value_buffer(v157, (uint64_t)qword_269AC3188);
    os_log_type_t v158 = sub_2505BE3D0();
    uint64_t v159 = (uint64_t)v130;
    sub_2505865A4(v116, (uint64_t)v130, type metadata accessor for GKCrypto_EncryptedInvitation);
    uint64_t v160 = sub_2505BDC20();
    os_log_type_t v161 = v158;
    if (os_log_type_enabled(v160, v158))
    {
      uint64_t v162 = swift_slowAlloc();
      *(_DWORD *)uint64_t v162 = 67109376;
      int isa = (int)v130->isa;
      sub_250582308(v159, type metadata accessor for GKCrypto_EncryptedInvitation);
      LODWORD(v373) = isa;
      sub_2505BE430();
      *(_WORD *)(v162 + 8) = 1024;
      LODWORD(v373) = 1;
      sub_2505BE430();
      _os_log_impl(&dword_2504D2000, v160, v161, "invalid protobof version, got %u expected %u", (uint8_t *)v162, 0xEu);
      MEMORY[0x25337FF10](v162, -1, -1);
    }
    else
    {
      sub_250582308((uint64_t)v130, type metadata accessor for GKCrypto_EncryptedInvitation);
    }
    uint64_t v193 = v369;
    uint64_t v194 = v363;
    uint64_t v195 = v359;

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v196 = 305;
    *(_OWORD *)(v196 + 8) = xmmword_2505C5C60;
    *(void *)(v196 + 24) = 0x80000002505CC070;
    *(void *)(v196 + 32) = 0xD000000000000058;
    *(void *)(v196 + 40) = 0x80000002505CBE90;
    swift_willThrow();
    sub_250511528(v156, v118);
    (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v194, v358);
    (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v193);
    sub_250582308(v116, type metadata accessor for GKCrypto_EncryptedInvitation);
    int v121 = 0;
    int v122 = 0;
    int v123 = 0;
    int v124 = 0;
    BOOL v125 = 0;
    unint64_t v129 = v366;
    uint64_t v127 = v355;
    uint64_t v128 = v364;
    goto LABEL_21;
  }
  os_log_t v352 = 0;
  char v131 = v351;
  uint64_t v132 = v370;
  sub_2505BDF50();
  uint64_t v133 = sub_2505BDF10();
  unint64_t v135 = v134;
  v326 = *(void (**)(char *, uint64_t))(v353 + 8);
  v326(v131, v354);
  uint64_t v136 = sub_2504DBF8C(v133, v135);
  unint64_t v138 = v137;
  sub_250511528(v133, v135);
  uint64_t v139 = *(void *)(v116 + 8);
  unint64_t v140 = *(void *)(v116 + 16);
  sub_2504DBC4C(v139, v140);
  char v141 = sub_25051AAD8(v136, v138, v139, v140);
  sub_250511528(v139, v140);
  sub_250511528(v136, v138);
  unint64_t v142 = v367;
  if ((v141 & 1) == 0)
  {
    sub_250511528(v368, v367);
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v164 = sub_2505BDC40();
    __swift_project_value_buffer(v164, (uint64_t)qword_269AC3188);
    os_log_type_t v165 = sub_2505BE3D0();
    uint64_t v166 = v362;
    uint64_t v167 = v350;
    uint64_t v168 = v369;
    (*(void (**)(void, uint64_t, uint64_t))(v362 + 16))(v350, v132, v369);
    uint64_t v169 = v349;
    sub_2505865A4(v116, v349, type metadata accessor for GKCrypto_EncryptedInvitation);
    uint64_t v170 = sub_2505BDC20();
    if (os_log_type_enabled(v170, v165))
    {
      uint64_t v171 = swift_slowAlloc();
      LODWORD(v367) = v165;
      uint64_t v172 = v171;
      uint64_t v368 = swift_slowAlloc();
      *(void *)&long long v373 = v368;
      *(_DWORD *)uint64_t v172 = 136315394;
      uint64_t v348 = v172 + 4;
      uint64_t v173 = v351;
      os_log_t v357 = v170;
      sub_2505BDF50();
      uint64_t v174 = sub_2505BDF10();
      unint64_t v176 = v175;
      v326(v173, v354);
      uint64_t v177 = sub_2504DBF8C(v174, v176);
      unint64_t v179 = v178;
      sub_250511528(v174, v176);
      uint64_t v180 = v352;
      uint64_t v181 = sub_2504DCA88(v177, v179);
      os_log_t v352 = v180;
      uint64_t v376 = v181;
      v351 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
      uint64_t v347 = sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
      uint64_t v182 = sub_2505BE110();
      uint64_t v327 = v116;
      unint64_t v184 = v183;
      swift_bridgeObjectRelease();
      sub_250511528(v177, v179);
      uint64_t v376 = sub_25051171C(v182, v184, (uint64_t *)&v373);
      sub_2505BE430();
      swift_bridgeObjectRelease();
      v185 = *(void (**)(uint64_t, uint64_t))(v166 + 8);
      v185(v350, v369);
      v186 = v185;
      *(_WORD *)(v172 + 12) = 2080;
      uint64_t v187 = v349;
      uint64_t v376 = sub_2504DCA88(*(void *)(v349 + 8), *(void *)(v349 + 16));
      uint64_t v188 = sub_2505BE110();
      unint64_t v190 = v189;
      uint64_t v168 = v369;
      swift_bridgeObjectRelease();
      uint64_t v376 = sub_25051171C(v188, v190, (uint64_t *)&v373);
      uint64_t v116 = v327;
      sub_2505BE430();
      uint64_t v132 = v370;
      swift_bridgeObjectRelease();
      sub_250582308(v187, type metadata accessor for GKCrypto_EncryptedInvitation);
      os_log_t v191 = v357;
      _os_log_impl(&dword_2504D2000, v357, (os_log_type_t)v367, "mismatched key in invite, got %s expected %s", (uint8_t *)v172, 0x16u);
      uint64_t v192 = v368;
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v192, -1, -1);
      MEMORY[0x25337FF10](v172, -1, -1);
    }
    else
    {
      uint64_t v197 = *(void (**)(uint64_t, uint64_t))(v166 + 8);
      v197(v167, v168);
      uint64_t v198 = v169;
      v186 = v197;
      sub_250582308(v198, type metadata accessor for GKCrypto_EncryptedInvitation);
    }
    uint64_t v199 = v358;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v200 = 399;
    *(_OWORD *)(v200 + 8) = xmmword_2505C5C70;
    *(void *)(v200 + 24) = 0x80000002505CC070;
    *(void *)(v200 + 32) = 0xD000000000000058;
    *(void *)(v200 + 40) = 0x80000002505CBE90;
    swift_willThrow();
    sub_250511528(v371, v372);
    (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v363, v199);
    v186(v132, v168);
    sub_250582308(v116, type metadata accessor for GKCrypto_EncryptedInvitation);
    int v121 = 0;
    int v122 = 0;
    int v123 = 0;
    int v124 = 0;
    BOOL v125 = 0;
    uint64_t v128 = v364;
    unint64_t v129 = v366;
    uint64_t v127 = v355;
    goto LABEL_21;
  }
  uint64_t v144 = *(void *)(v116 + 24);
  unint64_t v143 = *(void *)(v116 + 32);
  v351 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
  uint64_t inited = swift_initStackObject();
  long long v350 = xmmword_2505BFEC0;
  *(_OWORD *)(inited + 16) = xmmword_2505BFEC0;
  sub_2504DBC4C(v144, v143);
  uint64_t v327 = v116;
  if (qword_269AB5698 != -1) {
    swift_once();
  }
  uint64_t v146 = qword_269AC37E0;
  unint64_t v147 = *(void *)algn_269AC37E8;
  *(void *)(inited + 32) = qword_269AC37E0;
  *(void *)(inited + 40) = v147;
  uint64_t v148 = v368;
  *(void *)(inited + 48) = v368;
  *(void *)(inited + 56) = v142;
  sub_2504DBC4C(v146, v147);
  sub_2504DBC4C(v148, v142);
  uint64_t v149 = sub_250576544(inited);
  unint64_t v151 = v150;
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v152 = v370;
  os_log_t v153 = v352;
  uint64_t v154 = sub_2505991E4(v370, v144, v143, v149, v151);
  if (v153)
  {
    sub_250511528(v149, v151);
    sub_250511528(v144, v143);
    sub_250511528(v371, v372);
    sub_250511528(v148, v142);
    (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v363, v358);
    (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v152, v369);
    sub_250582308(v327, type metadata accessor for GKCrypto_EncryptedInvitation);
    int v121 = 0;
    int v122 = 0;
    int v123 = 0;
    int v124 = 0;
    BOOL v125 = 0;
    uint64_t v128 = v364;
    unint64_t v129 = v366;
    uint64_t v126 = v365;
    uint64_t v127 = v355;
    goto LABEL_22;
  }
  unint64_t v202 = v155;
  uint64_t v203 = v154;
  sub_250511528(v149, v151);
  sub_250511528(v144, v143);
  uint64_t v375 = 0;
  long long v373 = 0u;
  long long v374 = 0u;
  sub_2504DBC4C(v203, v202);
  sub_2505BDA60();
  sub_2505868BC(&qword_269AB6260, (void (*)(uint64_t))type metadata accessor for GKCrypto_SignedInvite);
  uint64_t v204 = v348;
  uint64_t v205 = v347;
  sub_2505BDB30();
  uint64_t v349 = v203;
  if (*(_DWORD *)v204 == 1)
  {
    unint64_t v206 = *(void *)(v204 + 16);
    *(void *)&long long v373 = *(void *)(v204 + 8);
    *((void *)&v373 + 1) = v206;
    sub_2504DBC4C(v373, v206);
    sub_25051AE60();
    uint64_t v207 = (uint64_t)v344;
    sub_2505BE020();
    unint64_t v346 = v202;
    v338(v207, 0, 1, v339);
    sub_25058660C(v207, v365);
    uint64_t v222 = v342;
    sub_2504DAEFC(v204 + *(int *)(v205 + 28), v342, &qword_269AB6570);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v340 + 48))(v222, 1, v341) == 1)
    {
      uint64_t v223 = v343;
      *(_OWORD *)uint64_t v343 = xmmword_2505BFEF0;
      *(_OWORD *)(v223 + 16) = xmmword_2505BFEF0;
      *(_OWORD *)(v223 + 32) = xmmword_2505BFEF0;
      *(_OWORD *)(v223 + 48) = xmmword_2505BFEF0;
      *(_OWORD *)(v223 + 64) = xmmword_2505BFEF0;
      *(_OWORD *)(v223 + 80) = xmmword_2505BFEF0;
      *(_OWORD *)(v223 + 96) = xmmword_2505BFEF0;
      *(_DWORD *)(v223 + 112) = 0;
      *(_OWORD *)(v223 + 120) = xmmword_2505BFEF0;
      sub_2505BDA40();
      sub_2504DAF60(v222, &qword_269AB6570);
    }
    else
    {
      uint64_t v223 = v343;
      sub_250586674(v222, v343, type metadata accessor for GKCrypto_Invite);
    }
    uint64_t v224 = v327;
    uint64_t v226 = *(void *)v223;
    unint64_t v225 = *(void *)(v223 + 8);
    sub_2504DBC4C(*(void *)v223, v225);
    GroupKitUserID.init(_:)(v226, v225, (uint64_t *)&v373);
    uint64_t v227 = v369;
    unint64_t v228 = *((void *)&v373 + 1);
    uint64_t v347 = v373;
    uint64_t v229 = v368;
    unint64_t v230 = v367;
    if ((sub_25051AAD8(v373, *((unint64_t *)&v373 + 1), v368, v367) & 1) == 0)
    {
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v233 = sub_2505BDC40();
      __swift_project_value_buffer(v233, (uint64_t)qword_269AC3188);
      os_log_type_t v234 = sub_2505BE3D0();
      uint64_t v235 = v347;
      sub_2504DBC4C(v347, v228);
      uint64_t v236 = v368;
      sub_2504DBC4C(v368, v230);
      sub_2504DBC4C(v235, v228);
      v237 = sub_2505BDC20();
      if (os_log_type_enabled(v237, v234))
      {
        uint64_t v238 = swift_slowAlloc();
        os_log_t v352 = v237;
        uint64_t v239 = v238;
        os_log_t v357 = (os_log_t)swift_slowAlloc();
        *(void *)&long long v373 = v357;
        *(_DWORD *)uint64_t v239 = 136315394;
        sub_2504DBC4C(v235, v228);
        uint64_t v240 = sub_2505BD8B0();
        unint64_t v241 = v228;
        unint64_t v243 = v242;
        sub_250511528(v347, v241);
        uint64_t v376 = sub_25051171C(v240, v243, (uint64_t *)&v373);
        sub_2505BE430();
        swift_bridgeObjectRelease();
        sub_250511528(v347, v241);
        sub_250511528(v347, v241);
        *(_WORD *)(v239 + 12) = 2080;
        LODWORD(v351) = v234;
        sub_2504DBC4C(v236, v230);
        uint64_t v244 = sub_2505BD8B0();
        unint64_t v246 = v245;
        sub_250511528(v236, v230);
        uint64_t v247 = v244;
        unint64_t v228 = v241;
        unint64_t v248 = v372;
        uint64_t v376 = sub_25051171C(v247, v246, (uint64_t *)&v373);
        uint64_t v235 = v347;
        uint64_t v227 = v369;
        sub_2505BE430();
        uint64_t v204 = v348;
        swift_bridgeObjectRelease();
        sub_250511528(v236, v230);
        uint64_t v249 = v236;
        unint64_t v250 = v248;
        sub_250511528(v249, v230);
        os_log_t v251 = v352;
        _os_log_impl(&dword_2504D2000, v352, (os_log_type_t)v351, "invitation intended for a different recipient, got %s expected %s", (uint8_t *)v239, 0x16u);
        os_log_t v252 = v357;
        swift_arrayDestroy();
        uint64_t v224 = v327;
        MEMORY[0x25337FF10](v252, -1, -1);
        MEMORY[0x25337FF10](v239, -1, -1);

        uint64_t v253 = v349;
      }
      else
      {
        sub_250511528(v235, v228);
        sub_250511528(v235, v228);
        sub_250511528(v236, v230);
        sub_250511528(v236, v230);

        uint64_t v253 = v349;
        unint64_t v250 = v372;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      v254 = swift_allocError();
      *(_WORD *)uint64_t v255 = 293;
      *(_OWORD *)(v255 + 8) = xmmword_2505C5C90;
      *(void *)(v255 + 24) = 0x80000002505CC070;
      *(void *)(v255 + 32) = 0xD000000000000058;
      *(void *)(v255 + 40) = 0x80000002505CBE90;
      os_log_t v352 = v254;
      swift_willThrow();
      sub_250511528(v371, v250);
      sub_250511528(v235, v228);
      sub_250511528(v253, v346);
      (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v363, v358);
      (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v227);
      sub_250582308(v343, type metadata accessor for GKCrypto_Invite);
      sub_250582308(v204, type metadata accessor for GKCrypto_SignedInvite);
      sub_250582308(v224, type metadata accessor for GKCrypto_EncryptedInvitation);
      unsigned int v256 = 5644;
      uint64_t v128 = v364;
      goto LABEL_61;
    }
    sub_250511528(v229, v230);
    uint64_t v231 = *(void *)(v343 + 80);
    unint64_t v232 = *(void *)(v343 + 88);
    sub_2504DBC4C(v231, v232);
    GroupKitUserID.init(_:)(v231, v232, (uint64_t *)&v373);
    *(_OWORD *)uint64_t v364 = v373;
    sub_2504DBC4C(v226, v225);
    GroupKitUserID.init(_:)(v226, v225, (uint64_t *)&v373);
    os_log_t v352 = 0;
    *(_OWORD *)(v364 + 16) = v373;
    uint64_t v257 = v343;
    uint64_t v259 = *(void *)(v343 + 16);
    unint64_t v258 = *(void *)(v343 + 24);
    sub_2504DBC4C(v259, v258);
    v260 = v352;
    GroupID.init(_:)(v259, v258, (uint64_t *)&v373);
    os_log_t v352 = v260;
    if (v260)
    {
      sub_250511528(v371, v372);
      sub_250511528(v347, v228);
      sub_250511528(v349, v346);
      (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v363, v358);
      (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v369);
      sub_250582308(v257, type metadata accessor for GKCrypto_Invite);
      sub_250582308(v348, type metadata accessor for GKCrypto_SignedInvite);
      sub_250582308(v327, type metadata accessor for GKCrypto_EncryptedInvitation);
      unsigned int v256 = 5647;
    }
    else
    {
      v261 = v366;
      uint64_t v262 = v364;
      uint64_t v263 = v364 + v366[8];
      *(_OWORD *)uint64_t v263 = v373;
      *(_DWORD *)(v262 + v261[9]) = *(_DWORD *)(v257 + 112);
      uint64_t v264 = v370;
      sub_2505BDF50();
      uint64_t v265 = v262 + v261[12];
      uint64_t v266 = v362;
      uint64_t v267 = v264;
      uint64_t v268 = v369;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v362 + 16))(v265, v267, v369);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v266 + 56))(v265, 0, 1, v268);
      uint64_t v269 = v361;
      sub_2504DAF60(v361, &qword_269AB5A28);
      uint64_t v270 = v358;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v359 + 16))(v269, v363, v358);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v328)(v269, 0, 1, v270);
      sub_2505BDFA0();
      unint64_t v271 = *(void *)(v257 + 40);
      *(void *)&long long v373 = *(void *)(v257 + 32);
      *((void *)&v373 + 1) = v271;
      sub_2504DBC4C(v373, v271);
      v272 = v352;
      sub_2505BE0A0();
      os_log_t v352 = v272;
      if (v272)
      {
        sub_250511528(v371, v372);
        sub_250511528(v347, v228);
        sub_250511528(v349, v346);
        (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v363, v358);
        (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v369);
        (*(void (**)(char *, uint64_t))(v335 + 8))(v336, v333);
      }
      else
      {
        uint64_t v273 = *(void *)(v343 + 48);
        unint64_t v274 = *(void *)(v343 + 56);
        sub_2504DBC4C(v273, v274);
        v275 = v352;
        KeyOffset.init(_:)(v273, v274, (uint64_t *)&v373);
        os_log_t v352 = v275;
        if (!v275)
        {
          long long v278 = v373;
          v279 = *(void (**)(char *, char *, uint64_t))(v335 + 32);
          uint64_t v280 = (uint64_t)v329;
          uint64_t v281 = v333;
          v279(v329, v336, v333);
          uint64_t v282 = v332;
          v279((char *)(v280 + *(int *)(v332 + 20)), v334, v281);
          *(_OWORD *)(v280 + *(int *)(v282 + 24)) = v278;
          v283 = v366;
          uint64_t v284 = v364;
          uint64_t v285 = v364 + v366[10];
          sub_250586674(v280, v285, type metadata accessor for MembershipVerifier);
          uint64_t v286 = *(void *)(v343 + 120);
          unint64_t v287 = *(void *)(v343 + 128);
          v288 = (uint64_t *)(v284 + v283[17]);
          uint64_t *v288 = v286;
          v288[1] = v287;
          uint64_t v289 = swift_initStackObject();
          *(_OWORD *)(v289 + 16) = v350;
          sub_2504DBC4C(v286, v287);
          if (qword_269AB5680 != -1) {
            swift_once();
          }
          uint64_t v290 = qword_269AC37B0;
          unint64_t v291 = *(void *)algn_269AC37B8;
          *(void *)(v289 + 32) = qword_269AC37B0;
          *(void *)(v289 + 40) = v291;
          uint64_t v292 = *(void *)v263;
          unint64_t v293 = *(void *)(v263 + 8);
          *(void *)(v289 + 48) = *(void *)v263;
          *(void *)(v289 + 56) = v293;
          sub_2504DBC4C(v290, v291);
          sub_2504DBC4C(v292, v293);
          uint64_t v294 = sub_250576544(v289);
          uint64_t v368 = v295;
          swift_setDeallocating();
          swift_arrayDestroy();
          v296 = v330;
          sub_2505BDFA0();
          v297 = (uint64_t *)(v285 + *(int *)(v332 + 24));
          uint64_t v298 = *v297;
          unint64_t v299 = v297[1];
          sub_2504DBC4C(*v297, v299);
          unint64_t v367 = v294;
          sub_2505BE080();
          sub_250511528(v298, v299);
          v300 = *(void (**)(char *, uint64_t))(v335 + 8);
          v301 = v296;
          v335 += 8;
          v302 = v300;
          v300(v301, v333);
          uint64_t v303 = sub_2505BDEE0();
          unint64_t v305 = v304;
          uint64_t v306 = sub_2505BDEE0();
          unint64_t v308 = v307;
          char v309 = sub_25051AAD8(v303, v305, v306, v307);
          sub_250511528(v306, v308);
          sub_250511528(v303, v305);
          if (v309)
          {
            uint64_t v310 = *(void *)(v343 + 96);
            unint64_t v311 = *(void *)(v343 + 104);
            sub_2504DBC4C(v310, v311);
            v312 = v352;
            uint64_t v313 = sub_2505866DC(v310, v311);
            os_log_t v352 = v312;
            if (!v312)
            {
              uint64_t v316 = v313;
              uint64_t v317 = v314;
              uint64_t v318 = v315;
              sub_250511528(v367, v368);
              sub_250511528(v371, v372);
              sub_250511528(v347, v228);
              sub_250511528(v349, v346);
              (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v363, v358);
              (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v369);
              v302(v331, v333);
              sub_250582308(v343, type metadata accessor for GKCrypto_Invite);
              sub_250582308(v348, type metadata accessor for GKCrypto_SignedInvite);
              sub_250582308(v327, type metadata accessor for GKCrypto_EncryptedInvitation);
              v319 = v360;
              uint64_t result = sub_25051C8D8(*v360, v360[1], v360[2]);
              uint64_t *v319 = v316;
              v319[1] = v317;
              v319[2] = v318;
              return result;
            }
          }
          else
          {
            if (qword_269AB5418 != -1) {
              swift_once();
            }
            uint64_t v320 = sub_2505BDC40();
            __swift_project_value_buffer(v320, (uint64_t)qword_269AC3188);
            os_log_type_t v321 = sub_2505BE3D0();
            v322 = sub_2505BDC20();
            if (os_log_type_enabled(v322, v321))
            {
              v323 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v323 = 0;
              _os_log_impl(&dword_2504D2000, v322, v321, "mismatched verification key derived from invite", v323, 2u);
              MEMORY[0x25337FF10](v323, -1, -1);
            }

            __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
            sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
            v324 = swift_allocError();
            *(_WORD *)uint64_t v325 = 294;
            *(_OWORD *)(v325 + 8) = xmmword_2505C5CA0;
            *(void *)(v325 + 24) = 0x80000002505CC070;
            *(void *)(v325 + 32) = 0xD000000000000058;
            *(void *)(v325 + 40) = 0x80000002505CBE90;
            os_log_t v352 = v324;
            swift_willThrow();
          }
          sub_250511528(v367, v368);
          sub_250511528(v371, v372);
          sub_250511528(v347, v228);
          sub_250511528(v349, v346);
          (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v363, v358);
          (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v369);
          v302(v331, v333);
          sub_250582308(v343, type metadata accessor for GKCrypto_Invite);
          sub_250582308(v348, type metadata accessor for GKCrypto_SignedInvite);
          sub_250582308(v327, type metadata accessor for GKCrypto_EncryptedInvitation);
          unsigned int v256 = 14303;
          goto LABEL_60;
        }
        sub_250511528(v371, v372);
        sub_250511528(v347, v228);
        sub_250511528(v349, v346);
        (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v363, v358);
        (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v369);
        v276 = *(void (**)(char *, uint64_t))(v335 + 8);
        uint64_t v277 = v333;
        v276(v334, v333);
        v276(v336, v277);
      }
      sub_250582308(v343, type metadata accessor for GKCrypto_Invite);
      sub_250582308(v348, type metadata accessor for GKCrypto_SignedInvite);
      sub_250582308(v327, type metadata accessor for GKCrypto_EncryptedInvitation);
      unsigned int v256 = 6047;
    }
LABEL_60:
    uint64_t v128 = v364;
    sub_250511528(*(void *)v364, *(void *)(v364 + 8));
LABEL_61:
    unint64_t v129 = v366;
    int v121 = (v256 >> 4) & 1;
    int v122 = (v256 >> 6) & 1;
    int v123 = (v256 >> 7) & 1;
    int v124 = (v256 >> 8) & 1;
    BOOL v125 = (int)(v256 << 18) >> 18 < 0;
    if ((v256 & 2) != 0) {
      sub_250511528(*(void *)(v128 + 16), *(void *)(v128 + 24));
    }
    uint64_t v127 = v355;
LABEL_21:
    uint64_t v126 = v365;
    goto LABEL_22;
  }
  unint64_t v346 = v202;
  sub_250511528(v368, v367);
  if (qword_269AB5418 != -1) {
    swift_once();
  }
  uint64_t v208 = sub_2505BDC40();
  __swift_project_value_buffer(v208, (uint64_t)qword_269AC3188);
  os_log_type_t v209 = sub_2505BE3D0();
  uint64_t v210 = v345;
  sub_2505865A4(v204, (uint64_t)v345, type metadata accessor for GKCrypto_SignedInvite);
  long long v211 = sub_2505BDC20();
  os_log_type_t v212 = v209;
  BOOL v213 = os_log_type_enabled(v211, v209);
  uint64_t v128 = v364;
  uint64_t v214 = v327;
  if (v213)
  {
    uint64_t v215 = swift_slowAlloc();
    *(_DWORD *)uint64_t v215 = 67109376;
    uint64_t v216 = (uint64_t)v210;
    int v217 = *v210;
    sub_250582308(v216, type metadata accessor for GKCrypto_SignedInvite);
    LODWORD(v373) = v217;
    sub_2505BE430();
    *(_WORD *)(v215 + 8) = 1024;
    LODWORD(v373) = 1;
    sub_2505BE430();
    _os_log_impl(&dword_2504D2000, v211, v212, "unsupported version in invite, got %u expected %u", (uint8_t *)v215, 0xEu);
    MEMORY[0x25337FF10](v215, -1, -1);
  }
  else
  {
    sub_250582308((uint64_t)v210, type metadata accessor for GKCrypto_SignedInvite);
  }
  uint64_t v218 = v369;
  uint64_t v219 = v363;
  uint64_t v220 = v359;

  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
  sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
  swift_allocError();
  *(_WORD *)uint64_t v221 = 292;
  *(_OWORD *)(v221 + 8) = xmmword_2505C5C80;
  *(void *)(v221 + 24) = 0x80000002505CC070;
  *(void *)(v221 + 32) = 0xD000000000000058;
  *(void *)(v221 + 40) = 0x80000002505CBE90;
  swift_willThrow();
  sub_250511528(v371, v372);
  sub_250511528(v349, v346);
  (*(void (**)(uint64_t, uint64_t))(v220 + 8))(v219, v358);
  (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v370, v218);
  sub_250582308(v204, type metadata accessor for GKCrypto_SignedInvite);
  sub_250582308(v214, type metadata accessor for GKCrypto_EncryptedInvitation);
  int v121 = 0;
  int v122 = 0;
  int v123 = 0;
  int v124 = 0;
  BOOL v125 = 0;
  uint64_t v127 = v355;
  uint64_t v126 = v365;
  unint64_t v129 = v366;
LABEL_22:
  sub_2504DAF60(v127, &qword_269AB5A28);
  sub_25051B8D4(*(void *)v356, *((void *)v356 + 1));
  if (v121)
  {
    sub_250511528(*(void *)(v128 + v129[8]), *(void *)(v128 + v129[8] + 8));
    if (!v122)
    {
LABEL_24:
      if (!v123) {
        goto LABEL_25;
      }
      goto LABEL_32;
    }
  }
  else if (!v122)
  {
    goto LABEL_24;
  }
  sub_250582308(v128 + v129[10], type metadata accessor for MembershipVerifier);
  if (!v123)
  {
LABEL_25:
    if (!v124) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_32:
  (*(void (**)(uint64_t, uint64_t))(v353 + 8))(v128 + v129[11], v354);
  if (v124) {
LABEL_26:
  }
    sub_2504DAF60(v128 + v129[12], &qword_269AB5A78);
LABEL_27:
  sub_25051C8D8(*v360, v360[1], v360[2]);
  sub_2504DAF60(v126, &qword_269AB6A80);
  uint64_t result = sub_2504DAF60(v361, &qword_269AB5A28);
  if (v125) {
    return sub_250511528(*(void *)(v128 + v129[17]), *(void *)(v128 + v129[17] + 8));
  }
  return result;
}

uint64_t sub_25057C98C(uint64_t a1)
{
  uint64_t v4 = sub_2505BE0B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  uint64_t v11 = (char *)v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
  MEMORY[0x270FA5388](v12 - 8, v13, v14, v15, v16);
  uint64_t v18 = (char *)v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_2505BE040();
  os_log_t v100 = *(os_log_t *)(v19 - 8);
  uint64_t v101 = v19;
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for Invite(0);
  if (*(unsigned char *)(v1 + *(int *)(v26 + 60)) != 2)
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_2505BDC40();
    __swift_project_value_buffer(v52, (uint64_t)qword_269AC3188);
    os_log_type_t v53 = sub_2505BE3D0();
    uint64_t v54 = sub_2505BDC20();
    if (os_log_type_enabled(v54, v53))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v102[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v103 = sub_25051171C(0x65526E4F74696E69, 0xEF6E6F6974706563, v102);
      sub_2505BE430();
      _os_log_impl(&dword_2504D2000, v54, v53, "invalid state when trying to validate invite, current state %s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v56, -1, -1);
      MEMORY[0x25337FF10](v55, -1, -1);
    }

    char v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v50 = 299;
    long long v51 = xmmword_2505C5CB0;
    goto LABEL_22;
  }
  uint64_t v27 = v26;
  unint64_t v93 = *(int *)(v26 + 60);
  uint64_t v94 = v1;
  uint64_t v95 = v2;
  uint64_t v96 = v11;
  uint64_t v97 = v5;
  uint64_t v28 = (uint64_t *)(v1 + *(int *)(v26 + 68));
  uint64_t v29 = a1;
  uint64_t v31 = *v28;
  unint64_t v30 = v28[1];
  uint64_t v98 = v29;
  uint64_t v99 = v4;
  uint64_t v32 = sub_2505BDF10();
  unint64_t v34 = v33;
  uint64_t v35 = sub_2504DBF8C(v32, v33);
  unint64_t v37 = v36;
  unint64_t v38 = v34;
  unint64_t v39 = v30;
  uint64_t v40 = v31;
  sub_250511528(v32, v38);
  LOBYTE(v32) = sub_25051AAD8(v35, v37, v31, v39);
  sub_250511528(v35, v37);
  if ((v32 & 1) == 0)
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_2505BDC40();
    __swift_project_value_buffer(v57, (uint64_t)qword_269AC3188);
    os_log_type_t v58 = sub_2505BE3D0();
    uint64_t v60 = v96;
    uint64_t v59 = v97;
    uint64_t v61 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v98, v99);
    sub_2504DBC4C(v40, v39);
    sub_2504DBC4C(v40, v39);
    uint64_t v62 = sub_2505BDC20();
    if (os_log_type_enabled(v62, v58))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v94 = v40;
      uint64_t v64 = v63;
      uint64_t v101 = swift_slowAlloc();
      v102[0] = v101;
      *(_DWORD *)uint64_t v64 = 136315394;
      v92[2] = v64 + 4;
      os_log_t v100 = v62;
      uint64_t v65 = sub_2505BDF10();
      LODWORD(v98) = v58;
      uint64_t v66 = v65;
      unint64_t v68 = v67;
      uint64_t v69 = sub_2504DBF8C(v65, v67);
      unint64_t v93 = v39;
      uint64_t v70 = v59;
      unint64_t v72 = v71;
      sub_250511528(v66, v68);
      uint64_t v73 = v95;
      uint64_t v74 = sub_2504DCA88(v69, v72);
      uint64_t v95 = v73;
      uint64_t v103 = v74;
      v92[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
      sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
      uint64_t v75 = sub_2505BE110();
      uint64_t v76 = v60;
      unint64_t v78 = v77;
      swift_bridgeObjectRelease();
      sub_250511528(v69, v72);
      uint64_t v103 = sub_25051171C(v75, v78, v102);
      sub_2505BE430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v76, v99);
      *(_WORD *)(v64 + 12) = 2080;
      unint64_t v80 = v93;
      uint64_t v79 = v94;
      uint64_t v103 = sub_2504DCA88(v94, v93);
      uint64_t v81 = sub_2505BE110();
      unint64_t v83 = v82;
      swift_bridgeObjectRelease();
      uint64_t v103 = sub_25051171C(v81, v83, v102);
      sub_2505BE430();
      swift_bridgeObjectRelease();
      sub_250511528(v79, v80);
      sub_250511528(v79, v80);
      os_log_t v84 = v100;
      _os_log_impl(&dword_2504D2000, v100, (os_log_type_t)v98, "mismatched key when trying to validate invite, expected %s got %s", (uint8_t *)v64, 0x16u);
      uint64_t v85 = v101;
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v85, -1, -1);
      MEMORY[0x25337FF10](v64, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
      sub_250511528(v40, v39);
      sub_250511528(v40, v39);
    }
    char v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v50 = 400;
    long long v51 = xmmword_2505C5CC0;
    goto LABEL_22;
  }
  uint64_t v41 = v94;
  sub_2504DAEFC(v94 + *(int *)(v27 + 56), (uint64_t)v18, &qword_269AB6A80);
  os_log_t v43 = v100;
  uint64_t v42 = v101;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v100[6].isa)(v18, 1, v101) == 1)
  {
    sub_2504DAF60((uint64_t)v18, &qword_269AB6A80);
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_2505BDC40();
    __swift_project_value_buffer(v44, (uint64_t)qword_269AC3188);
    os_log_type_t v45 = sub_2505BE3D0();
    uint64_t v46 = sub_2505BDC20();
    os_log_type_t v47 = v45;
    if (os_log_type_enabled(v46, v45))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_2504D2000, v46, v47, "missing signature when trying to validate invite", v48, 2u);
      MEMORY[0x25337FF10](v48, -1, -1);
    }

    char v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v50 = 297;
    long long v51 = xmmword_2505C5CD0;
LABEL_22:
    *(_OWORD *)(v50 + 8) = v51;
    *(void *)(v50 + 24) = 0x80000002505CC010;
    *(void *)(v50 + 32) = 0xD000000000000058;
    *(void *)(v50 + 40) = 0x80000002505CBE90;
    swift_willThrow();
    return v49 & 1;
  }
  ((void (*)(char *, char *, uint64_t))v43[4].isa)(v25, v18, v42);
  char v49 = v41;
  uint64_t v86 = v95;
  uint64_t v87 = sub_25057E9B0();
  if (v86)
  {
    ((void (*)(char *, uint64_t))v43[1].isa)(v25, v42);
  }
  else
  {
    uint64_t v90 = v87;
    unint64_t v91 = v88;
    v102[0] = v87;
    v102[1] = v88;
    sub_25051AE60();
    char v49 = sub_2505BE050();
    sub_250511528(v90, v91);
    ((void (*)(char *, uint64_t))v43[1].isa)(v25, v42);
    if (v49) {
      *(unsigned char *)(v41 + v93) = 3;
    }
  }
  return v49 & 1;
}

uint64_t Invite.produceRSVP(nonce:response:)(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  MEMORY[0x270FA5388](v5 - 8, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2505BE000();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14, v15, v16, v17);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  uint64_t v43 = a1[1];
  uint64_t v44 = v20;
  int v21 = *a2;
  uint64_t v22 = type metadata accessor for Invite(0);
  uint64_t v23 = *(int *)(v22 + 60);
  uint64_t v24 = *(unsigned __int8 *)(v2 + v23);
  if (v24 != 3)
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_2505BDC40();
    __swift_project_value_buffer(v32, (uint64_t)qword_269AC3188);
    os_log_type_t v33 = sub_2505BE3D0();
    unint64_t v34 = sub_2505BDC20();
    if (os_log_type_enabled(v34, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(void *)&long long v47 = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      unint64_t v37 = 0xEC00000065746165;
      uint64_t v38 = 0x72436F5474696E69;
      switch(v24)
      {
        case 1:
          unint64_t v37 = 0xED00007365746976;
          uint64_t v38 = 0x6E49657461657263;
          break;
        case 2:
          unint64_t v37 = 0xEF6E6F6974706563;
          uint64_t v38 = 0x65526E4F74696E69;
          break;
        case 3:
          __break(1u);
          JUMPOUT(0x25057D9ACLL);
        case 4:
          unint64_t v37 = 0xE400000000000000;
          uint64_t v38 = 1886810994;
          break;
        case 5:
          unint64_t v37 = 0xEC00000065736E6FLL;
          uint64_t v38 = 0x7073655270767372;
          break;
        default:
          break;
      }
      v46[0] = sub_25051171C(v38, v37, (uint64_t *)&v47);
      sub_2505BE430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      uint64_t v24 = v35 + 14;
      v46[0] = sub_25051171C(0xD000000000000012, 0x80000002505CBEF0, (uint64_t *)&v47);
      sub_2505BE430();
      _os_log_impl(&dword_2504D2000, v34, v33, "invalid state when trying to produce RSVP, got %s expected %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v36, -1, -1);
      MEMORY[0x25337FF10](v35, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v31 = 299;
    *(_OWORD *)(v31 + 8) = xmmword_2505C5CE0;
    *(void *)(v31 + 24) = 0x80000002505CBE70;
    *(void *)(v31 + 32) = 0xD000000000000058;
    goto LABEL_24;
  }
  uint64_t v25 = v22;
  sub_2504DAEFC(v2 + *(int *)(v22 + 64), (uint64_t)v11, &qword_269AB5A28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_2504DAF60((uint64_t)v11, &qword_269AB5A28);
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_2505BDC40();
    __swift_project_value_buffer(v26, (uint64_t)qword_269AC3188);
    os_log_type_t v27 = sub_2505BE3D0();
    uint64_t v28 = sub_2505BDC20();
    os_log_type_t v29 = v27;
    if (os_log_type_enabled(v28, v27))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v30 = 0;
      _os_log_impl(&dword_2504D2000, v28, v29, "missing signing key when trying to produce RSVP", v30, 2u);
      MEMORY[0x25337FF10](v30, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v31 = 339;
    *(_OWORD *)(v31 + 8) = xmmword_2505C5CF0;
    *(void *)(v31 + 24) = 0x80000002505CBE70;
    *(void *)(v31 + 32) = 0xD000000000000058;
LABEL_24:
    *(void *)(v31 + 40) = 0x80000002505CBE90;
    swift_willThrow();
    return v24;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v11, v12);
  if (v21) {
    uint64_t v24 = 2;
  }
  else {
    uint64_t v24 = 1;
  }
  long long v47 = *(_OWORD *)(v2 + *(int *)(v25 + 32));
  v46[0] = v44;
  v46[1] = v43;
  uint64_t v39 = v2 + *(int *)(v25 + 40);
  long long v45 = *(_OWORD *)(v39 + *(int *)(type metadata accessor for MembershipVerifier(0) + 24));
  uint64_t v40 = v48;
  uint64_t v41 = sub_250578710((uint64_t)v19, v24, 1, (uint64_t *)&v47, v46, (uint64_t *)&v45);
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  else
  {
    uint64_t v24 = v41;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    *(unsigned char *)(v2 + v23) = 4;
  }
  return v24;
}

uint64_t sub_25057D9C4()
{
  uint64_t result = sub_25056CFB4(0xD000000000000044, 0x80000002505CC1F0);
  qword_269AC37B0 = result;
  *(void *)algn_269AC37B8 = v1;
  return result;
}

uint64_t sub_25057DA00()
{
  uint64_t result = sub_25056CFB4(0xD00000000000003FLL, 0x80000002505CBF90);
  qword_269AC37C0 = result;
  *(void *)algn_269AC37C8 = v1;
  return result;
}

uint64_t sub_25057DA3C()
{
  uint64_t result = sub_25056CFB4(0xD00000000000003ALL, 0x80000002505CBFD0);
  qword_269AC37D0 = result;
  *(void *)algn_269AC37D8 = v1;
  return result;
}

uint64_t sub_25057DA78()
{
  uint64_t result = sub_25056CFB4(0xD000000000000037, 0x80000002505CC0D0);
  qword_269AC37E0 = result;
  *(void *)algn_269AC37E8 = v1;
  return result;
}

uint64_t sub_25057DAB4()
{
  uint64_t result = sub_25056CFB4(0xD000000000000038, 0x80000002505CC160);
  qword_269AC37F0 = result;
  *(void *)algn_269AC37F8 = v1;
  return result;
}

uint64_t sub_25057DAF0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_2505BE850();
  sub_2505BE860();
  sub_2504DBC4C(v1, v2);
  sub_2505BD950();
  sub_250511528(v1, v2);
  return sub_2505BE880();
}

uint64_t sub_25057DB6C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_2505BE860();
  sub_2504DBC4C(v1, v2);
  sub_2505BD950();
  return sub_250511528(v1, v2);
}

uint64_t sub_25057DBD8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_2505BE850();
  sub_2505BE860();
  sub_2504DBC4C(v1, v2);
  sub_2505BD950();
  sub_250511528(v1, v2);
  return sub_2505BE880();
}

uint64_t sub_25057DC50(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return sub_25051AAD8(a1[1], a1[2], a2[1], a2[2]);
  }
  else {
    return 0;
  }
}

uint64_t ConstructedInvite.encryptedInviteBlob.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2504DBC4C(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ConstructedInvite.keyShare.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_2504DBC4C(v2, v3);
}

uint64_t ConstructedInvite.rsvpResponseBlob.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_2504DBC4C(v1, *(void *)(v0 + 40));
  return v1;
}

BOOL static Invite.InviteResponse.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Invite.InviteResponse.hash(into:)()
{
  return sub_2505BE860();
}

uint64_t Invite.InviteResponse.hashValue.getter()
{
  return sub_2505BE880();
}

uint64_t Invite.invitersID.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2504DBC4C(v2, v3);
}

uint64_t Invite.invitedID.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_2504DBC4C(v2, v3);
}

uint64_t Invite.init(recipientID:recipientDSID:encryptedInviteBlob:)(uint64_t a1, _OWORD *a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 424) = a4;
  *(void *)(v5 + 432) = a5;
  *(void *)(v5 + 416) = a1;
  uint64_t v8 = sub_2505BE000();
  *(void *)(v5 + 440) = v8;
  *(void *)(v5 + 448) = *(void *)(v8 - 8);
  *(void *)(v5 + 456) = swift_task_alloc();
  uint64_t v9 = sub_2505BDF90();
  *(void *)(v5 + 464) = v9;
  *(void *)(v5 + 472) = *(void *)(v9 - 8);
  *(void *)(v5 + 480) = swift_task_alloc();
  type metadata accessor for Invite(0);
  *(void *)(v5 + 488) = swift_task_alloc();
  *(void *)(v5 + 496) = type metadata accessor for PCSKeyPair();
  *(void *)(v5 + 504) = swift_task_alloc();
  *(_OWORD *)(v5 + 512) = *a2;
  uint64_t v10 = a3[1];
  *(void *)(v5 + 528) = *a3;
  *(void *)(v5 + 536) = v10;
  return MEMORY[0x270FA2498](sub_25057DF24, 0, 0);
}

uint64_t sub_25057DF24()
{
  uint64_t v12 = v0;
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_25051AD8C((uint64_t)&byte_26B202498, v0 + 16);
  sub_2504DAEFC(v0 + 232, v0 + 352, &qword_26B202158);
  if (*(void *)(v0 + 376))
  {
    uint64_t v1 = *(void *)(v0 + 536);
    uint64_t v2 = *(void *)(v0 + 528);
    sub_2504DAEE4((long long *)(v0 + 352), v0 + 312);
    sub_25051ADE8(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 336);
    uint64_t v4 = *(void *)(v0 + 344);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 312), v3);
    v11[0] = v2;
    v11[1] = v1;
    (*(void (**)(void *, unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 8))(v11, 0xD000000000000022, 0x80000002505C8D10, v3, v4);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 312);
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v7 = *(void *)(v0 + 304);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 272), v6);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 16) + **(int **)(v7 + 16));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 544) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_25057E26C;
    uint64_t v9 = *(void *)(v0 + 504);
    return v10(v9, v6, v7);
  }
  else
  {
    sub_2504DAF60(v0 + 352, &qword_26B202158);
    return sub_2505BE5F0();
  }
}

uint64_t sub_25057E26C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 552) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_250511528(*(void *)(v2 + 512), *(void *)(v2 + 520));
    uint64_t v3 = sub_25057E55C;
  }
  else
  {
    uint64_t v3 = sub_25057E38C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_25057E38C()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v3 = *(void *)(v0 + 504);
  uint64_t v5 = *(void *)(v0 + 480);
  uint64_t v4 = *(void *)(v0 + 488);
  uint64_t v6 = *(void *)(v0 + 464);
  uint64_t v7 = *(void *)(v0 + 472);
  uint64_t v8 = *(void *)(v0 + 448);
  uint64_t v9 = *(void *)(v0 + 456);
  unint64_t v11 = *(void *)(v0 + 432);
  uint64_t v10 = *(void *)(v0 + 440);
  uint64_t v12 = *(void *)(v0 + 424);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v0 + 512);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v3 + *(int *)(v2 + 20), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v3, v10);
  sub_250579A48(v17, v5, v9, v12, v11, v4);
  if (v1)
  {
    sub_250582308(*(void *)(v0 + 504), (uint64_t (*)(void))type metadata accessor for PCSKeyPair);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 488);
    uint64_t v15 = *(void *)(v0 + 416);
    sub_250582308(*(void *)(v0 + 504), (uint64_t (*)(void))type metadata accessor for PCSKeyPair);
    sub_250586674(v14, v15, type metadata accessor for Invite);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 272);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_25057E55C()
{
  sub_250511528(v0[53], v0[54]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 34));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25057E5FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2505BE0B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)a1 = 1;
  uint64_t v16 = *(void *)(a1 + 24);
  unint64_t v17 = *(void *)(a1 + 32);
  sub_2504DBC4C(a2, a3);
  sub_250511528(v16, v17);
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a3;
  uint64_t v18 = a4 + *(int *)(type metadata accessor for Invite(0) + 40);
  uint64_t v19 = type metadata accessor for MembershipVerifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v18 + *(int *)(v19 + 20), v8);
  uint64_t v20 = sub_2505BDF10();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  uint64_t result = sub_250511528(*(void *)(a1 + 8), *(void *)(a1 + 16));
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v22;
  return result;
}

uint64_t sub_25057E764(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v54 = a4;
  unint64_t v55 = a5;
  uint64_t v52 = sub_2505BE0B0();
  uint64_t v7 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2[2];
  unint64_t v15 = a2[3];
  uint64_t v16 = *(void *)a1;
  unint64_t v17 = *(void *)(a1 + 8);
  sub_2504DBC4C(v14, v15);
  sub_250511528(v16, v17);
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v15;
  uint64_t v18 = type metadata accessor for Invite(0);
  uint64_t v19 = *(int *)(v18 + 32);
  uint64_t v20 = v18;
  uint64_t v53 = v18;
  uint64_t v21 = (uint64_t *)((char *)a2 + v19);
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  uint64_t v25 = *(void *)(a1 + 16);
  unint64_t v24 = *(void *)(a1 + 24);
  sub_2504DBC4C(*v21, v23);
  sub_250511528(v25, v24);
  *(void *)(a1 + 16) = v22;
  *(void *)(a1 + 24) = v23;
  uint64_t v26 = (char *)a2 + *(int *)(v20 + 40);
  uint64_t v27 = type metadata accessor for MembershipVerifier(0);
  uint64_t v28 = v52;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, &v26[*(int *)(v27 + 20)], v52);
  uint64_t v29 = sub_2505BDF10();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v28);
  sub_250511528(*(void *)(a1 + 32), *(void *)(a1 + 40));
  *(void *)(a1 + 32) = v29;
  *(void *)(a1 + 40) = v31;
  uint64_t v32 = (uint64_t *)&v26[*(int *)(v27 + 24)];
  uint64_t v33 = *v32;
  unint64_t v34 = v32[1];
  uint64_t v35 = *(void *)(a1 + 48);
  unint64_t v36 = *(void *)(a1 + 56);
  sub_2504DBC4C(*v32, v34);
  sub_250511528(v35, v36);
  *(void *)(a1 + 48) = v33;
  *(void *)(a1 + 56) = v34;
  uint64_t v37 = *a2;
  unint64_t v38 = a2[1];
  uint64_t v39 = *(void *)(a1 + 80);
  unint64_t v40 = *(void *)(a1 + 88);
  sub_2504DBC4C(*a2, v38);
  sub_250511528(v39, v40);
  *(void *)(a1 + 80) = v37;
  *(void *)(a1 + 88) = v38;
  uint64_t v41 = *(void *)(a1 + 96);
  unint64_t v42 = *(void *)(a1 + 104);
  uint64_t v44 = v54;
  unint64_t v43 = v55;
  sub_2504DBC4C(v54, v55);
  sub_250511528(v41, v42);
  *(void *)(a1 + 96) = v44;
  *(void *)(a1 + 104) = v43;
  uint64_t v45 = v53;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)((char *)a2 + *(int *)(v53 + 36));
  uint64_t v46 = (uint64_t *)((char *)a2 + *(int *)(v45 + 68));
  uint64_t v47 = *v46;
  unint64_t v48 = v46[1];
  uint64_t v49 = *(void *)(a1 + 120);
  unint64_t v50 = *(void *)(a1 + 128);
  sub_2504DBC4C(*v46, v48);
  uint64_t result = sub_250511528(v49, v50);
  *(void *)(a1 + 120) = v47;
  *(void *)(a1 + 128) = v48;
  return result;
}

uint64_t sub_25057E9B0()
{
  uint64_t v1 = v0;
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for Invite(0);
  uint64_t v3 = (uint64_t *)((char *)v0 + *(int *)(v2 + 52));
  unint64_t v4 = v3[2];
  if (v4 >> 60 == 15)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v6 = 298;
    *(_OWORD *)(v6 + 8) = xmmword_2505C5D00;
    *(void *)(v6 + 24) = 0x80000002505CC050;
    *(void *)(v6 + 32) = 0xD000000000000058;
    *(void *)(v6 + 40) = 0x80000002505CBE90;
    swift_willThrow();
  }
  else
  {
    uint64_t v7 = v2;
    uint64_t v8 = v3[1];
    uint64_t v26 = v8;
    uint64_t v27 = *v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2505C1BB0;
    int v28 = 0x1000000;
    sub_2504DBC4C(v8, v4);
    *(void *)(inited + 32) = sub_25056DAD0((uint64_t)&v28, (uint64_t)v29);
    *(void *)(inited + 40) = v10;
    uint64_t v12 = v1[2];
    unint64_t v11 = v1[3];
    *(void *)(inited + 48) = v12;
    *(void *)(inited + 56) = v11;
    uint64_t v13 = (uint64_t *)((char *)v1 + *(int *)(v7 + 32));
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    *(void *)(inited + 64) = *v13;
    *(void *)(inited + 72) = v15;
    unint64_t v25 = v4;
    uint64_t v16 = (char *)v1 + *(int *)(v7 + 40);
    uint64_t v17 = type metadata accessor for MembershipVerifier(0);
    sub_2504DBC4C(v12, v11);
    sub_2504DBC4C(v14, v15);
    *(void *)(inited + 80) = sub_2505BDF10();
    *(void *)(inited + 88) = v18;
    uint64_t v19 = (uint64_t *)&v16[*(int *)(v17 + 24)];
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    *(void *)(inited + 96) = *v19;
    *(void *)(inited + 104) = v21;
    uint64_t v22 = *v1;
    unint64_t v23 = v1[1];
    *(void *)(inited + 112) = *v1;
    *(void *)(inited + 120) = v23;
    *(void *)(inited + 128) = v26;
    *(void *)(inited + 136) = v25;
    sub_25051C8BC(v27, v26, v25);
    sub_2504DBC4C(v20, v21);
    sub_2504DBC4C(v22, v23);
    uint64_t v5 = sub_250576544(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_25051C8D8(v27, v26, v25);
  }
  return v5;
}

uint64_t sub_25057EC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GKCrypto_Invite(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)a1 = 1;
  sub_2505865A4(a2, (uint64_t)v11, type metadata accessor for GKCrypto_Invite);
  uint64_t v12 = a1 + *(int *)(type metadata accessor for GKCrypto_SignedInvite(0) + 28);
  sub_2504DAF60(v12, &qword_269AB6570);
  sub_250586674((uint64_t)v11, v12, type metadata accessor for GKCrypto_Invite);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
  uint64_t v13 = sub_2505BE010();
  uint64_t v15 = v14;
  uint64_t result = sub_250511528(*(void *)(a1 + 8), *(void *)(a1 + 16));
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v15;
  return result;
}

uint64_t sub_25057EDAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2505BDF30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)a1 = 1;
  uint64_t v16 = *(void *)(a1 + 24);
  unint64_t v17 = *(void *)(a1 + 32);
  sub_2504DBC4C(a2, a3);
  sub_250511528(v16, v17);
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a3;
  uint64_t v18 = type metadata accessor for Invite(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a4 + *(int *)(v18 + 44), v8);
  uint64_t v19 = sub_2505BDF10();
  unint64_t v21 = v20;
  uint64_t v22 = sub_2504DBF8C(v19, v20);
  uint64_t v24 = v23;
  sub_250511528(v19, v21);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  uint64_t result = sub_250511528(*(void *)(a1 + 8), *(void *)(a1 + 16));
  *(void *)(a1 + 8) = v22;
  *(void *)(a1 + 16) = v24;
  return result;
}

uint64_t Invite.validateInviteSignature(invitersKeyBlob:)(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
  MEMORY[0x270FA5388](v5 - 8, v6, v7, v8, v9);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  MEMORY[0x270FA5388](v12 - 8, v13, v14, v15, v16);
  uint64_t v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for UserKeyingInfo(0);
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  unint64_t v25 = (uint64_t *)((char *)v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v26 = v2[1];
  v32[0] = *v2;
  uint64_t v27 = v32[0];
  v32[1] = v26;
  uint64_t v28 = sub_2505BE000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
  uint64_t v29 = sub_2505BDF90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v11, 1, 1, v29);
  sub_2504DBC4C(v27, v26);
  sub_2504DBC4C(a1, a2);
  uint64_t v30 = v32[3];
  sub_2505625AC(v32, a1, a2, (uint64_t)v18, (uint64_t)v11, v25);
  if (!v30)
  {
    LOBYTE(v2) = sub_25057C98C((uint64_t)v25 + *(int *)(v19 + 28));
    sub_250582308((uint64_t)v25, type metadata accessor for UserKeyingInfo);
  }
  return v2 & 1;
}

uint64_t Invite.validateRSVPResponse(rsvpResponseBlob:)(uint64_t a1, unint64_t a2)
{
  uint64_t v126 = a1;
  unint64_t v127 = a2;
  uint64_t v3 = sub_2505BDF30();
  uint64_t v121 = *(void *)(v3 - 8);
  uint64_t v122 = v3;
  MEMORY[0x270FA5388](v3, v4, v5, v6, v7);
  uint64_t v120 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2505BE000();
  unint64_t v123 = *(void *)(v9 - 8);
  unint64_t v124 = v9;
  MEMORY[0x270FA5388](v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
  MEMORY[0x270FA5388](v16 - 8, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_2505BE0B0();
  uint64_t v125 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23, v24, v25, v26, v27);
  uint64_t v29 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
  MEMORY[0x270FA5388](v30 - 8, v31, v32, v33, v34);
  unint64_t v36 = (char *)&v107 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_2505BDF90();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37, v39, v40, v41, v42);
  uint64_t v44 = (char *)&v107 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v45 = v138;
  uint64_t result = sub_25057FB1C(v126, v127, &v128);
  if (v45) {
    return result;
  }
  uint64_t v113 = v15;
  unint64_t v47 = v124;
  uint64_t v116 = v22;
  uint64_t v115 = 0;
  unint64_t v114 = v29;
  uint64_t v48 = v125;
  uint64_t v117 = v128;
  unint64_t v118 = v129;
  uint64_t v119 = v130;
  uint64_t v126 = v132;
  unint64_t v127 = v131;
  unint64_t v138 = v133;
  uint64_t v49 = type metadata accessor for Invite(0);
  sub_2504DAEFC(v2 + *(int *)(v49 + 48), (uint64_t)v36, &qword_269AB5A78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
  {
    unint64_t v50 = &qword_269AB5A78;
    uint64_t v51 = (uint64_t)v36;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    uint64_t v112 = v44;
    v52(v44, v36, v37);
    uint64_t v53 = v2;
    uint64_t v54 = v2 + *(int *)(v49 + 64);
    unint64_t v55 = v123;
    if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v123 + 48))(v54, 1, v47))
    {
      uint64_t v56 = (uint64_t)v116;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v116, 1, 1, v23);
    }
    else
    {
      uint64_t v111 = v49;
      uint64_t v110 = v53;
      uint64_t v57 = v113;
      (*(void (**)(char *, uint64_t, unint64_t))(v55 + 16))(v113, v54, v47);
      unint64_t v58 = v55;
      unint64_t v59 = v47;
      uint64_t v56 = (uint64_t)v116;
      sub_2505BDFA0();
      (*(void (**)(char *, unint64_t))(v58 + 8))(v57, v59);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v23);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v56, 1, v23) != 1)
      {
        uint64_t v109 = v38;
        uint64_t v113 = (char *)v37;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v114, v56, v23);
        uint64_t v116 = (char *)v23;
        uint64_t v70 = sub_2505BDF10();
        unint64_t v72 = v71;
        uint64_t v108 = sub_2504DBF8C(v70, v71);
        unint64_t v124 = v73;
        sub_250511528(v70, v72);
        uint64_t v74 = v119;
        unint64_t v75 = v127;
        sub_2504DBC4C(v119, v127);
        uint64_t v76 = v126;
        sub_2504DBC4C(v126, v138);
        unint64_t v77 = v120;
        sub_2505BDF50();
        uint64_t v78 = sub_2505BDF10();
        unint64_t v80 = v79;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v77, v122);
        uint64_t v81 = sub_2504DBF8C(v78, v80);
        unint64_t v83 = v82;
        sub_250511528(v78, v80);
        os_log_t v84 = (uint64_t *)(v110 + *(int *)(v111 + 32));
        unint64_t v85 = v84[1];
        v137[0] = *v84;
        uint64_t v86 = v137[0];
        v137[1] = v85;
        unint64_t v87 = *(void *)(v110 + 24);
        v136[0] = *(void *)(v110 + 16);
        uint64_t v88 = v136[0];
        v136[1] = v87;
        uint64_t v128 = v74;
        unint64_t v129 = v75;
        uint64_t v130 = v76;
        unint64_t v131 = v138;
        uint64_t v122 = v81;
        unint64_t v123 = v83;
        uint64_t v132 = v81;
        unint64_t v133 = v83;
        uint64_t v134 = v108;
        unint64_t v135 = v124;
        LODWORD(v81) = *(_DWORD *)(v110 + *(int *)(v111 + 36));
        uint64_t v89 = v108;
        sub_2504DBC4C(v108, v124);
        uint64_t v121 = v86;
        uint64_t v90 = v86;
        unint64_t v91 = v85;
        sub_2504DBC4C(v90, v85);
        sub_2504DBC4C(v88, v87);
        uint64_t v92 = v115;
        sub_25058A320(v137, v136, &v128, v81);
        uint64_t v115 = v92;
        sub_250511528(v117, v118);
        if (v92)
        {
          uint64_t v93 = v119;
          unint64_t v94 = v127;
          sub_250511528(v119, v127);
          uint64_t v95 = v126;
          unint64_t v96 = v138;
          sub_250511528(v126, v138);
          uint64_t v97 = v89;
          uint64_t v98 = v89;
          unint64_t v99 = v124;
          sub_250511528(v98, v124);
          sub_250511528(v88, v87);
          sub_250511528(v121, v91);
          (*(void (**)(char *, char *))(v125 + 8))(v114, v116);
          (*(void (**)(char *, char *))(v109 + 8))(v112, v113);
          sub_250511528(v93, v94);
          sub_250511528(v95, v96);
          sub_250511528(v122, v123);
          uint64_t v100 = v97;
        }
        else
        {
          uint64_t v101 = v119;
          unint64_t v102 = v127;
          sub_250511528(v119, v127);
          uint64_t v103 = v126;
          unint64_t v104 = v138;
          sub_250511528(v126, v138);
          uint64_t v105 = v89;
          uint64_t v106 = v89;
          unint64_t v99 = v124;
          sub_250511528(v106, v124);
          sub_250511528(v88, v87);
          sub_250511528(v121, v91);
          (*(void (**)(char *, char *))(v125 + 8))(v114, v116);
          (*(void (**)(char *, char *))(v109 + 8))(v112, v113);
          sub_250511528(v101, v102);
          sub_250511528(v103, v104);
          sub_250511528(v122, v123);
          uint64_t v100 = v105;
        }
        return sub_250511528(v100, v99);
      }
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v112, v37);
    unint64_t v50 = &qword_269AB5ED0;
    uint64_t v51 = v56;
  }
  sub_2504DAF60(v51, v50);
  uint64_t v60 = v119;
  uint64_t v61 = v126;
  if (qword_269AB5418 != -1) {
    swift_once();
  }
  uint64_t v62 = sub_2505BDC40();
  __swift_project_value_buffer(v62, (uint64_t)qword_269AC3188);
  os_log_type_t v63 = sub_2505BE3D0();
  uint64_t v64 = sub_2505BDC20();
  os_log_type_t v65 = v63;
  BOOL v66 = os_log_type_enabled(v64, v63);
  unint64_t v67 = v127;
  if (v66)
  {
    unint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v68 = 0;
    _os_log_impl(&dword_2504D2000, v64, v65, "missing keys when trying to produce RSVPResponse", v68, 2u);
    MEMORY[0x25337FF10](v68, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
  sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
  swift_allocError();
  *(_WORD *)uint64_t v69 = 339;
  *(_OWORD *)(v69 + 8) = xmmword_2505C5D10;
  *(void *)(v69 + 24) = 0x80000002505CBF10;
  *(void *)(v69 + 32) = 0xD000000000000058;
  *(void *)(v69 + 40) = 0x80000002505CBE90;
  swift_willThrow();
  sub_250511528(v117, v118);
  sub_250511528(v60, v67);
  return sub_250511528(v61, v138);
}

uint64_t sub_25057FB1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  os_log_t v191 = a3;
  uint64_t v207 = *MEMORY[0x263EF8340];
  uint64_t v199 = sub_2505BE0E0();
  uint64_t v194 = *(void *)(v199 - 8);
  MEMORY[0x270FA5388](v199, v6, v7, v8, v9);
  uint64_t v198 = (uint64_t)&v187 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v197 = sub_2505BDC90();
  unint64_t v196 = *(void *)(v197 - 8);
  MEMORY[0x270FA5388](v197, v11, v12, v13, v14);
  uint64_t v195 = (char *)&v187 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2505BDA70();
  MEMORY[0x270FA5388](v16 - 8, v17, v18, v19, v20);
  uint64_t v21 = type metadata accessor for GKCrypto_RSVPResponse(0);
  uint64_t v26 = MEMORY[0x270FA5388](v21, v22, v23, v24, v25);
  uint64_t v193 = (int *)((char *)&v187 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = MEMORY[0x270FA5388](v26, v28, v29, v30, v31);
  uint64_t v192 = (uint64_t)&v187 - v33;
  MEMORY[0x270FA5388](v32, v34, v35, v36, v37);
  uint64_t v202 = (uint64_t)&v187 - v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
  MEMORY[0x270FA5388](v39 - 8, v40, v41, v42, v43);
  unint64_t v45 = (char *)&v187 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_2505BDF90();
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46, v48, v49, v50, v51);
  uint64_t v201 = (uint64_t)&v187 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for Invite(0);
  uint64_t v54 = *((unsigned __int8 *)&v3->isa + *(int *)(v53 + 60));
  if (v54 != 4)
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_2505BDC40();
    __swift_project_value_buffer(v62, (uint64_t)qword_269AC3188);
    os_log_type_t v63 = sub_2505BE3D0();
    uint64_t v64 = sub_2505BDC20();
    if (os_log_type_enabled(v64, v63))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(void *)&long long v204 = v66;
      *(_DWORD *)uint64_t v65 = 136315394;
      unint64_t v67 = 0xEC00000065746165;
      uint64_t v68 = 0x72436F5474696E69;
      switch(v54)
      {
        case 1:
          unint64_t v67 = 0xED00007365746976;
          uint64_t v68 = 0x6E49657461657263;
          goto LABEL_22;
        case 2:
          unint64_t v67 = 0xEF6E6F6974706563;
          uint64_t v68 = 0x65526E4F74696E69;
          goto LABEL_22;
        case 3:
          uint64_t v68 = 0xD000000000000012;
          unint64_t v67 = 0x80000002505CBEF0;
          goto LABEL_22;
        case 4:
          goto LABEL_73;
        case 5:
          unint64_t v67 = 0xEC00000065736E6FLL;
          uint64_t v68 = 0x7073655270767372;
          goto LABEL_22;
        default:
LABEL_22:
          *(void *)&long long v203 = sub_25051171C(v68, v67, (uint64_t *)&v204);
          sub_2505BE430();
          swift_bridgeObjectRelease();
          *(_WORD *)(v65 + 12) = 2080;
          *(void *)&long long v203 = sub_25051171C(1886810994, 0xE400000000000000, (uint64_t *)&v204);
          sub_2505BE430();
          _os_log_impl(&dword_2504D2000, v64, v63, "invalid state when trying to validate RSVPResponse, got %s expected %s", (uint8_t *)v65, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25337FF10](v66, -1, -1);
          MEMORY[0x25337FF10](v65, -1, -1);
          break;
      }
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v61 = 299;
    *(_OWORD *)(v61 + 8) = xmmword_2505C5D20;
    *(void *)(v61 + 24) = 0x80000002505CBF40;
    *(void *)(v61 + 32) = 0xD000000000000058;
    goto LABEL_24;
  }
  unint64_t v189 = (int *)v53;
  uint64_t v55 = *(int *)(v53 + 48);
  os_log_t v190 = v3;
  sub_2504DAEFC((uint64_t)v3 + v55, (uint64_t)v45, &qword_269AB5A78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
  {
    sub_2504DAF60((uint64_t)v45, &qword_269AB5A78);
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_2505BDC40();
    __swift_project_value_buffer(v56, (uint64_t)qword_269AC3188);
    os_log_type_t v57 = sub_2505BE3D0();
    unint64_t v58 = sub_2505BDC20();
    os_log_type_t v59 = v57;
    if (os_log_type_enabled(v58, v57))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl(&dword_2504D2000, v58, v59, "missing secret key when trying to validate RSVPResponse", v60, 2u);
      MEMORY[0x25337FF10](v60, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v61 = 301;
    *(_OWORD *)(v61 + 8) = xmmword_2505C5D60;
    *(void *)(v61 + 24) = 0x80000002505CBF40;
    *(void *)(v61 + 32) = 0xD000000000000058;
LABEL_24:
    *(void *)(v61 + 40) = 0x80000002505CBE90;
    return swift_willThrow();
  }
  uint64_t v69 = v201;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v201, v45, v46);
  uint64_t v206 = 0;
  long long v204 = 0u;
  long long v205 = 0u;
  sub_2504DBC4C(a1, a2);
  sub_2505BDA60();
  sub_2505868BC(&qword_269AB6210, (void (*)(uint64_t))type metadata accessor for GKCrypto_RSVPResponse);
  uint64_t v70 = v200;
  sub_2505BDB30();
  if (v70) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v69, v46);
  }
  uint64_t v188 = v46;
  uint64_t v200 = v47;
  if (qword_269AB5690 != -1) {
    swift_once();
  }
  unint64_t v73 = *((void *)&xmmword_269AC37D0 + 1);
  uint64_t v72 = xmmword_269AC37D0;
  uint64_t v74 = v202;
  uint64_t v75 = *(void *)(v202 + 8);
  unint64_t v76 = *(void *)(v202 + 16);
  long long v203 = xmmword_269AC37D0;
  sub_2504DBC4C(xmmword_269AC37D0, *((unint64_t *)&xmmword_269AC37D0 + 1));
  sub_2504DBC4C(v72, v73);
  sub_2504DBC4C(v75, v76);
  sub_2505980CC(v75, v76);
  sub_250511528(v75, v76);
  sub_250511528(v72, v73);
  unint64_t v78 = *((void *)&v203 + 1);
  uint64_t v77 = v203;
  uint64_t v79 = *(void *)(v74 + 24);
  unint64_t v80 = *(void *)(v74 + 32);
  long long v204 = v203;
  sub_2504DBC4C(v79, v80);
  sub_2504DBC4C(v77, v78);
  sub_2505980CC(v79, v80);
  sub_250511528(v79, v80);
  sub_250511528(v77, v78);
  unint64_t v81 = *((void *)&v204 + 1);
  uint64_t v82 = v204;
  uint64_t v83 = sub_2505868BC((unint64_t *)&qword_269AB5FB0, MEMORY[0x263F047F8]);
  uint64_t v84 = v198;
  unint64_t v85 = v199;
  sub_2505BDC80();
  unint64_t v86 = v81;
  uint64_t v87 = v200;
  switch(v81 >> 62)
  {
    case 1uLL:
      uint64_t v187 = v83;
      if (v82 >> 32 < (int)v82)
      {
        __break(1u);
        goto LABEL_71;
      }
      sub_2504DBC4C(v82, v81);
      sub_2505864C4((int)v82, v82 >> 32);
      sub_250511528(v82, v81);
      unint64_t v86 = v200;
      unint64_t v91 = v197;
LABEL_30:
      uint64_t v92 = v195;
      sub_2505BDC70();
      (*(void (**)(uint64_t, unint64_t))(v194 + 8))(v84, v85);
      sub_250511528(v82, v81);
      *((void *)&v205 + 1) = v91;
      uint64_t v206 = sub_2505868BC(&qword_269AB5FB8, MEMORY[0x263F045C0]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v204);
      unint64_t v94 = v196;
      (*(void (**)(uint64_t *, char *, unint64_t))(v196 + 16))(boxed_opaque_existential_1, v92, v91);
      __swift_project_boxed_opaque_existential_1(&v204, *((uint64_t *)&v205 + 1));
      sub_2505BD820();
      uint64_t v82 = *((void *)&v203 + 1);
      uint64_t v84 = v203;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v204);
      (*(void (**)(char *, unint64_t))(v94 + 8))(v92, v91);
      uint64_t v95 = (uint64_t *)((char *)v190 + v189[13]);
      unint64_t v85 = v95[2];
      if (v85 >> 60 == 15)
      {
        unint64_t v96 = v95[2];
        uint64_t v87 = 0;
        uint64_t v98 = *v95;
        uint64_t v97 = v95[1];
        unint64_t v85 = 0xF000000000000000;
LABEL_33:
        sub_2504DBC4C(v84, v82);
        sub_25051C8D8(v98, v97, v96);
        sub_25051C8D8(32, v84, v82);
LABEL_34:
        if (qword_269AB5418 != -1) {
          swift_once();
        }
        uint64_t v100 = sub_2505BDC40();
        __swift_project_value_buffer(v100, (uint64_t)qword_269AC3188);
        int v101 = sub_2505BE3D0();
        sub_2504DBC4C(v84, v82);
        sub_25051B908(v87, v85);
        sub_2504DBC4C(v84, v82);
        sub_25051B908(v87, v85);
        unint64_t v102 = sub_2505BDC20();
        if (os_log_type_enabled(v102, (os_log_type_t)v101))
        {
          LODWORD(v198) = v101;
          uint64_t v103 = v84;
          unint64_t v104 = v85;
          uint64_t v105 = swift_slowAlloc();
          unint64_t v197 = swift_slowAlloc();
          *(void *)&long long v204 = v197;
          *(_DWORD *)uint64_t v105 = 136315394;
          if (v104 >> 60 == 15)
          {
            uint64_t v106 = 0;
            unint64_t v196 = 0;
            unint64_t v107 = v104;
            unint64_t v108 = 0xE000000000000000;
          }
          else
          {
            uint64_t v132 = sub_2504DCA88(v87, v104);
            unint64_t v196 = 0;
            *(void *)&long long v203 = v132;
            unint64_t v107 = v104;
            __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
            sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
            uint64_t v106 = sub_2505BE110();
            unint64_t v108 = v133;
            swift_bridgeObjectRelease();
          }
          *(void *)&long long v203 = sub_25051171C(v106, v108, (uint64_t *)&v204);
          sub_2505BE430();
          swift_bridgeObjectRelease();
          uint64_t v199 = v87;
          sub_25051B8D4(v87, v107);
          sub_25051B8D4(v87, v107);
          *(_WORD *)(v105 + 12) = 2080;
          *(void *)&long long v203 = sub_2504DCA88(v84, v82);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
          sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
          uint64_t v134 = sub_2505BE110();
          unint64_t v136 = v135;
          swift_bridgeObjectRelease();
          *(void *)&long long v203 = sub_25051171C(v134, v136, (uint64_t *)&v204);
          sub_2505BE430();
          uint64_t v84 = v103;
          swift_bridgeObjectRelease();
          sub_250511528(v103, v82);
          sub_250511528(v103, v82);
          _os_log_impl(&dword_2504D2000, v102, (os_log_type_t)v198, "mismatch digest when trying to validate RSVPResponse, got %s expected %s", (uint8_t *)v105, 0x16u);
          unint64_t v137 = v197;
          swift_arrayDestroy();
          MEMORY[0x25337FF10](v137, -1, -1);
          MEMORY[0x25337FF10](v105, -1, -1);

          unint64_t v86 = v200;
          uint64_t v109 = v201;
          unint64_t v85 = v107;
          uint64_t v87 = v199;
        }
        else
        {
          sub_25051B8D4(v87, v85);
          sub_25051B8D4(v87, v85);
          sub_250511528(v84, v82);
          sub_250511528(v84, v82);

          uint64_t v109 = v201;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v138 = 300;
        *(_OWORD *)(v138 + 8) = xmmword_2505C5D50;
        *(void *)(v138 + 24) = 0x80000002505CBF40;
        *(void *)(v138 + 32) = 0xD000000000000058;
        *(void *)(v138 + 40) = 0x80000002505CBE90;
        swift_willThrow();
        sub_25051B8D4(v87, v85);
        sub_250511528(v84, v82);
        sub_250582308(v202, type metadata accessor for GKCrypto_RSVPResponse);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v109, v188);
      }
      uint64_t v87 = v95[1];
      sub_2504DBC4C(v87, v95[2]);
      uint64_t v98 = *v95;
      unint64_t v99 = v95 + 1;
      uint64_t v97 = v95[1];
      unint64_t v96 = v99[1];
      if (v96 >> 60 == 15) {
        goto LABEL_33;
      }
      if (v98 != 32) {
        goto LABEL_34;
      }
      sub_25051C8BC(32, v97, v96);
      sub_2504DBC4C(v84, v82);
      char v110 = sub_25051AAD8(v97, v96, v84, v82);
      sub_250511528(v84, v82);
      sub_25051C8D8(32, v97, v96);
      if ((v110 & 1) == 0) {
        goto LABEL_34;
      }
      uint64_t v111 = v202;
      if (*(_DWORD *)v202 != 1)
      {
        if (qword_269AB5418 == -1)
        {
LABEL_51:
          uint64_t v139 = sub_2505BDC40();
          __swift_project_value_buffer(v139, (uint64_t)qword_269AC3188);
          os_log_type_t v140 = sub_2505BE3D0();
          char v141 = v193;
          sub_2505865A4(v202, (uint64_t)v193, type metadata accessor for GKCrypto_RSVPResponse);
          unint64_t v142 = sub_2505BDC20();
          os_log_type_t v143 = v140;
          if (os_log_type_enabled(v142, v140))
          {
            uint64_t v144 = swift_slowAlloc();
            *(_DWORD *)uint64_t v144 = 67109376;
            uint64_t v145 = v87;
            int v146 = *v141;
            sub_250582308((uint64_t)v141, type metadata accessor for GKCrypto_RSVPResponse);
            LODWORD(v204) = v146;
            sub_2505BE430();
            *(_WORD *)(v144 + 8) = 1024;
            LODWORD(v204) = 1;
            uint64_t v87 = v145;
            unint64_t v86 = v200;
            sub_2505BE430();
            _os_log_impl(&dword_2504D2000, v142, v143, "mismatch version when trying to validate RSVPResponse, got %u expected %u", (uint8_t *)v144, 0xEu);
            MEMORY[0x25337FF10](v144, -1, -1);
          }
          else
          {
            sub_250582308((uint64_t)v141, type metadata accessor for GKCrypto_RSVPResponse);
          }

          __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
          sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
          swift_allocError();
          *(_WORD *)uint64_t v167 = 302;
          *(_OWORD *)(v167 + 8) = xmmword_2505C5D30;
          *(void *)(v167 + 24) = 0x80000002505CBF40;
          *(void *)(v167 + 32) = 0xD000000000000058;
          *(void *)(v167 + 40) = 0x80000002505CBE90;
          swift_willThrow();
          uint64_t v168 = v87;
          unint64_t v169 = v85;
LABEL_61:
          sub_25051B8D4(v168, v169);
          sub_250511528(v84, v82);
          sub_250582308(v202, type metadata accessor for GKCrypto_RSVPResponse);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v201, v188);
        }
LABEL_71:
        swift_once();
        goto LABEL_51;
      }
      unint64_t v197 = v85;
      uint64_t v112 = (char *)v190 + v189[10];
      uint64_t v187 = type metadata accessor for MembershipVerifier(0);
      uint64_t v193 = (int *)v112;
      uint64_t v198 = sub_2505BDF10();
      unint64_t v114 = v113;
      uint64_t v115 = *(void *)(v111 + 8);
      unint64_t v116 = *(void *)(v111 + 16);
      sub_2504DBC4C(v115, v116);
      unint64_t v196 = v114;
      char v117 = sub_25051AAD8(v115, v116, v198, v114);
      uint64_t v118 = v111;
      char v119 = v117;
      sub_250511528(v115, v116);
      if ((v119 & 1) == 0)
      {
        if (qword_269AB5418 != -1) {
          swift_once();
        }
        uint64_t v147 = sub_2505BDC40();
        __swift_project_value_buffer(v147, (uint64_t)qword_269AC3188);
        os_log_type_t v148 = sub_2505BE3D0();
        sub_2505865A4(v202, v192, type metadata accessor for GKCrypto_RSVPResponse);
        uint64_t v149 = v198;
        unint64_t v150 = v196;
        sub_2504DBC4C(v198, v196);
        uint64_t v151 = v149;
        unint64_t v152 = v150;
        sub_2504DBC4C(v151, v150);
        os_log_t v153 = sub_2505BDC20();
        if (os_log_type_enabled(v153, v148))
        {
          uint64_t v154 = swift_slowAlloc();
          LODWORD(v191) = v148;
          uint64_t v155 = v154;
          uint64_t v193 = (int *)swift_slowAlloc();
          *(void *)&long long v204 = v193;
          *(_DWORD *)uint64_t v155 = 136315394;
          uint64_t v156 = v192;
          uint64_t v157 = sub_2504DCA88(*(void *)(v192 + 8), *(void *)(v192 + 16));
          uint64_t v195 = (char *)v82;
          unint64_t v189 = 0;
          *(void *)&long long v203 = v157;
          os_log_t v190 = v153;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
          sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
          uint64_t v194 = v84;
          uint64_t v158 = sub_2505BE110();
          uint64_t v199 = v87;
          unint64_t v160 = v159;
          swift_bridgeObjectRelease();
          *(void *)&long long v203 = sub_25051171C(v158, v160, (uint64_t *)&v204);
          sub_2505BE430();
          swift_bridgeObjectRelease();
          sub_250582308(v156, type metadata accessor for GKCrypto_RSVPResponse);
          *(_WORD *)(v155 + 12) = 2080;
          uint64_t v161 = v198;
          *(void *)&long long v203 = sub_2504DCA88(v198, v152);
          uint64_t v84 = v194;
          uint64_t v162 = sub_2505BE110();
          unint64_t v164 = v163;
          swift_bridgeObjectRelease();
          *(void *)&long long v203 = sub_25051171C(v162, v164, (uint64_t *)&v204);
          uint64_t v82 = (uint64_t)v195;
          uint64_t v87 = v199;
          unint64_t v86 = v200;
          sub_2505BE430();
          swift_bridgeObjectRelease();
          sub_250511528(v161, v152);
          sub_250511528(v161, v152);
          os_log_t v165 = v190;
          _os_log_impl(&dword_2504D2000, v190, (os_log_type_t)v191, "mismatch verification key when trying to validate RSVPResponse, expected %s got %s", (uint8_t *)v155, 0x16u);
          uint64_t v166 = (uint64_t)v193;
          swift_arrayDestroy();
          MEMORY[0x25337FF10](v166, -1, -1);
          MEMORY[0x25337FF10](v155, -1, -1);
        }
        else
        {
          sub_250582308(v192, type metadata accessor for GKCrypto_RSVPResponse);
          uint64_t v161 = v198;
          sub_250511528(v198, v152);
          sub_250511528(v161, v152);
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v170 = 303;
        *(_OWORD *)(v170 + 8) = xmmword_2505C5D40;
        *(void *)(v170 + 24) = 0x80000002505CBF40;
        *(void *)(v170 + 32) = 0xD000000000000058;
        *(void *)(v170 + 40) = 0x80000002505CBE90;
        swift_willThrow();
        sub_250511528(v161, v152);
        uint64_t v168 = v87;
        unint64_t v169 = v197;
        goto LABEL_61;
      }
      uint64_t v199 = v87;
      uint64_t v194 = v84;
      uint64_t v195 = (char *)v82;
      uint64_t v120 = *(void *)(v118 + 24);
      unint64_t v121 = *(void *)(v118 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2505BFEC0;
      sub_2504DBC4C(v120, v121);
      if (qword_269AB5688 != -1) {
        swift_once();
      }
      uint64_t v123 = qword_269AC37C0;
      unint64_t v124 = *(void *)algn_269AC37C8;
      *(void *)(inited + 32) = qword_269AC37C0;
      *(void *)(inited + 40) = v124;
      uint64_t v125 = (uint64_t *)((char *)v190 + v189[8]);
      uint64_t v126 = *v125;
      unint64_t v127 = v125[1];
      *(void *)(inited + 48) = *v125;
      *(void *)(inited + 56) = v127;
      sub_2504DBC4C(v123, v124);
      sub_2504DBC4C(v126, v127);
      uint64_t v128 = sub_250576544(inited);
      unint64_t v130 = v129;
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v131 = sub_2505991E4(v201, v120, v121, v128, v130);
      unint64_t v172 = v171;
      uint64_t v173 = v131;
      sub_250511528(v128, v130);
      sub_250511528(v120, v121);
      uint64_t v174 = v201;
      uint64_t v175 = v202;
      unint64_t v176 = (unint64_t)v195;
      switch(v172 >> 62)
      {
        case 1uLL:
          LODWORD(v177) = HIDWORD(v173) - v173;
          if (__OFSUB__(HIDWORD(v173), v173))
          {
            __break(1u);
LABEL_73:
            __break(1u);
            swift_release();
            swift_release();
            __break(1u);
            JUMPOUT(0x25058191CLL);
          }
          uint64_t v177 = (int)v177;
LABEL_67:
          if (v177 == 32)
          {
            uint64_t v181 = (char *)v190 + v189[7];
            sub_25051B8D4(*(void *)v181, *((void *)v181 + 1));
            *(void *)uint64_t v181 = v173;
            *((void *)v181 + 1) = v172;
            sub_2504DBC4C(v126, v127);
            sub_2504DBC4C(v173, v172);
            sub_250511528(v198, v196);
            sub_25051B8D4(v199, v197);
            sub_250511528(v194, v176);
            sub_250582308(v175, type metadata accessor for GKCrypto_RSVPResponse);
            (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v174, v188);
            uint64_t v182 = (uint64_t *)((char *)v193 + *(int *)(v187 + 24));
            uint64_t v183 = *v182;
            unint64_t v184 = v182[1];
            v185 = v191;
            *os_log_t v191 = v126;
            v185[1] = v127;
            v185[2] = v173;
            v185[3] = v172;
            v185[4] = v183;
            v185[5] = v184;
            uint64_t result = sub_2504DBC4C(v183, v184);
          }
          else
          {
LABEL_69:
            __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
            sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
            swift_allocError();
            *(_WORD *)uint64_t v186 = 263;
            *(_OWORD *)(v186 + 8) = xmmword_2505BFE90;
            *(_OWORD *)(v186 + 24) = xmmword_2505BFE50;
            *(void *)(v186 + 40) = 0x80000002505C8CB0;
            swift_willThrow();
            sub_250511528(v173, v172);
            sub_250511528(v198, v196);
            sub_25051B8D4(v199, v197);
            sub_250511528(v194, v176);
            sub_250582308(v175, type metadata accessor for GKCrypto_RSVPResponse);
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v200 + 8))(v174, v188);
          }
          break;
        case 2uLL:
          uint64_t v179 = *(void *)(v173 + 16);
          uint64_t v178 = *(void *)(v173 + 24);
          BOOL v180 = __OFSUB__(v178, v179);
          uint64_t v177 = v178 - v179;
          if (!v180) {
            goto LABEL_67;
          }
          goto LABEL_73;
        case 3uLL:
          goto LABEL_69;
        default:
          uint64_t v177 = BYTE6(v172);
          goto LABEL_67;
      }
      return result;
    case 2uLL:
      uint64_t v187 = v83;
      uint64_t v89 = *(void *)(v82 + 16);
      uint64_t v90 = *(void *)(v82 + 24);
      sub_2504DBC4C(v82, v81);
      swift_retain();
      swift_retain();
      sub_2505864C4(v89, v90);
      swift_release();
      swift_release();
      sub_250511528(v82, v81);
      unint64_t v91 = v197;
      unint64_t v86 = v200;
      goto LABEL_30;
    case 3uLL:
      *(void *)((char *)&v203 + 6) = 0;
      *(void *)&long long v203 = 0;
      sub_2505BDC60();
      uint64_t v88 = v82;
      goto LABEL_27;
    default:
      *(void *)&long long v203 = v82;
      WORD4(v203) = v81;
      BYTE10(v203) = BYTE2(v81);
      BYTE11(v203) = BYTE3(v81);
      BYTE12(v203) = BYTE4(v81);
      BYTE13(v203) = BYTE5(v81);
      sub_2505BDC60();
      uint64_t v88 = v82;
LABEL_27:
      sub_250511528(v88, v81);
      unint64_t v91 = v197;
      unint64_t v86 = v87;
      goto LABEL_30;
  }
}

uint64_t ServiceMessageRequestMetaData.groupID.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2504DBC4C(v2, v3);
}

uint64_t ServiceMessageRequestMetaData.groupID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_250511528(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*ServiceMessageRequestMetaData.groupID.modify())()
{
  return nullsub_1;
}

uint64_t ServiceMessageRequestMetaData.requesterID.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_25051B908(v2, v3);
}

uint64_t ServiceMessageRequestMetaData.requesterID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_25051B8D4(*(void *)(v1 + 16), *(void *)(v1 + 24));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*ServiceMessageRequestMetaData.requesterID.modify())()
{
  return nullsub_1;
}

void ServiceMessageRequestMetaData.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *ServiceMessageRequestMetaData.role.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*ServiceMessageRequestMetaData.role.modify())()
{
  return nullsub_1;
}

uint64_t sub_250581A4C(uint64_t a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  int v45 = a8;
  unint64_t v42 = a6;
  uint64_t v43 = a9;
  uint64_t v44 = a7;
  uint64_t v14 = sub_2505BE0B0();
  uint64_t v46 = *(void *)(v14 - 8);
  uint64_t v47 = v14;
  MEMORY[0x270FA5388](v14, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_2505BE000();
  uint64_t v21 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41, v22, v23, v24, v25);
  uint64_t v27 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)a1 = a2;
  uint64_t v28 = *(void *)(a1 + 24);
  unint64_t v29 = *(void *)(a1 + 32);
  sub_2504DBC4C(a3, a4);
  sub_250511528(v28, v29);
  *(void *)(a1 + 24) = a3;
  *(void *)(a1 + 32) = a4;
  unint64_t v30 = v42;
  sub_2504DBC4C(a5, v42);
  uint64_t v31 = sub_2504DBF8C(a5, v30);
  uint64_t v33 = v32;
  sub_250511528(a5, v30);
  sub_250511528(*(void *)(a1 + 40), *(void *)(a1 + 48));
  *(void *)(a1 + 40) = v31;
  *(void *)(a1 + 48) = v33;
  uint64_t v34 = v43;
  *(void *)(a1 + 8) = v44;
  *(unsigned char *)(a1 + 16) = v45 & 1;
  uint64_t v35 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v27, v34, v41);
  sub_2505BDFA0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v35);
  uint64_t v36 = sub_2505BDF10();
  uint64_t v38 = v37;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v47);
  uint64_t result = sub_250511528(*(void *)(a1 + 56), *(void *)(a1 + 64));
  *(void *)(a1 + 56) = v36;
  *(void *)(a1 + 64) = v38;
  return result;
}

uint64_t sub_250581C90(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GKCrypto_RSVP(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = 1;
  sub_2505865A4(a2, (uint64_t)v11, type metadata accessor for GKCrypto_RSVP);
  uint64_t v12 = (uint64_t)a1 + *(int *)(type metadata accessor for GKCrypto_SignedRSVP(0) + 28);
  sub_2504DAF60(v12, &qword_269AB5AB8);
  sub_250586674((uint64_t)v11, v12, type metadata accessor for GKCrypto_RSVP);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
}

uint64_t sub_250581DD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v59 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AB8);
  uint64_t v9 = MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v55 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = type metadata accessor for GKCrypto_RSVP(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v17, v19, v20, v21, v22);
  uint64_t v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v50 - v30;
  uint64_t v51 = *a1;
  unint64_t v52 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2505C0400;
  unsigned int v57 = bswap32(*v2);
  *(void *)(inited + 32) = sub_25056DAD0((uint64_t)&v57, (uint64_t)v58);
  uint64_t v54 = inited + 32;
  *(void *)(inited + 40) = v33;
  if (qword_269AB56A0 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_269AC37F0;
  unint64_t v35 = *(void *)algn_269AC37F8;
  *(void *)(inited + 48) = qword_269AC37F0;
  *(void *)(inited + 56) = v35;
  uint64_t v36 = (uint64_t)v2 + *(int *)(type metadata accessor for GKCrypto_SignedRSVP(0) + 28);
  sub_2504DAEFC(v36, (uint64_t)v16, &qword_269AB5AB8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v38 = v37(v16, 1, v17);
  uint64_t v53 = v17;
  if (v38 == 1)
  {
    *(_DWORD *)uint64_t v31 = 0;
    *((void *)v31 + 1) = 0;
    v31[16] = 1;
    *(_OWORD *)(v31 + 24) = xmmword_2505BFEF0;
    *(_OWORD *)(v31 + 40) = xmmword_2505BFEF0;
    *(_OWORD *)(v31 + 56) = xmmword_2505BFEF0;
    sub_2504DBC4C(v34, v35);
    sub_2505BDA40();
    sub_2504DAF60((uint64_t)v16, &qword_269AB5AB8);
  }
  else
  {
    sub_250586674((uint64_t)v16, (uint64_t)v31, type metadata accessor for GKCrypto_RSVP);
    sub_2504DBC4C(v34, v35);
  }
  unint64_t v39 = *((void *)v31 + 1);
  char v40 = v31[16];
  sub_250582308((uint64_t)v31, type metadata accessor for GKCrypto_RSVP);
  unint64_t v41 = v52;
  uint64_t v42 = v51;
  if ((v40 & 1) == 0 && ((v39 & 0x8000000000000000) != 0 || HIDWORD(v39)))
  {
    uint64_t result = sub_2505BE5E0();
    __break(1u);
  }
  else
  {
    unsigned int v57 = bswap32(v39);
    *(void *)(inited + 64) = sub_25056DAD0((uint64_t)&v57, (uint64_t)v58);
    *(void *)(inited + 72) = v43;
    *(void *)(inited + 80) = v42;
    *(void *)(inited + 88) = v41;
    uint64_t v44 = v55;
    sub_2504DAEFC(v36, v55, &qword_269AB5AB8);
    if (v37((char *)v44, 1, v53) == 1)
    {
      *(_DWORD *)uint64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = 1;
      *(_OWORD *)(v25 + 24) = xmmword_2505BFEF0;
      *(_OWORD *)(v25 + 40) = xmmword_2505BFEF0;
      *(_OWORD *)(v25 + 56) = xmmword_2505BFEF0;
      sub_2504DBC4C(v42, v41);
      sub_2505BDA40();
      sub_2504DAF60(v44, &qword_269AB5AB8);
    }
    else
    {
      sub_250586674(v44, (uint64_t)v25, type metadata accessor for GKCrypto_RSVP);
      sub_2504DBC4C(v42, v41);
    }
    uint64_t v45 = *((void *)v25 + 3);
    unint64_t v46 = *((void *)v25 + 4);
    sub_2504DBC4C(v45, v46);
    sub_250582308((uint64_t)v25, type metadata accessor for GKCrypto_RSVP);
    *(void *)(inited + 96) = v45;
    *(void *)(inited + 104) = v46;
    *(void *)(inited + 112) = sub_2505BDF10();
    *(void *)(inited + 120) = v47;
    uint64_t v48 = sub_250576544(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    return v48;
  }
  return result;
}

uint64_t type metadata accessor for MembershipVerifier(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB6A70);
}

uint64_t sub_250582308(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_25058236C()
{
  unint64_t result = qword_269AB6A68;
  if (!qword_269AB6A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6A68);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MembershipVerifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2505BE0B0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    sub_2504DBC4C(*v11, v13);
    *uint64_t v10 = v12;
    v10[1] = v13;
  }
  return a1;
}

uint64_t destroy for MembershipVerifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2505BE0B0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];
  return sub_250511528(v7, v8);
}

uint64_t initializeWithCopy for MembershipVerifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  sub_2504DBC4C(*v10, v12);
  *uint64_t v9 = v11;
  v9[1] = v12;
  return a1;
}

uint64_t assignWithCopy for MembershipVerifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  sub_2504DBC4C(*v10, v12);
  uint64_t v13 = *v9;
  unint64_t v14 = v9[1];
  *uint64_t v9 = v11;
  v9[1] = v12;
  sub_250511528(v13, v14);
  return a1;
}

uint64_t initializeWithTake for MembershipVerifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for MembershipVerifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void *)(a1 + v8);
  unint64_t v10 = *(void *)(a1 + v8 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  sub_250511528(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MembershipVerifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25058284C);
}

uint64_t sub_25058284C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
    if (((4 * v10) & 0xC) != 0) {
      return 16 - ((4 * v10) & 0xC | (v10 >> 2));
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for MembershipVerifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250582934);
}

uint64_t sub_250582934(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2505BE0B0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (void *)(a1 + *(int *)(a4 + 24));
    *uint64_t v11 = 0;
    v11[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t sub_250582A00()
{
  uint64_t result = sub_2505BE0B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ConstructedInvite(uint64_t *a1)
{
  sub_250511528(*a1, a1[1]);
  sub_250511528(a1[2], a1[3]);
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];
  return sub_250511528(v2, v3);
}

uint64_t *initializeWithCopy for ConstructedInvite(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2504DBC4C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_2504DBC4C(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v9 = a2[4];
  unint64_t v8 = a2[5];
  sub_2504DBC4C(v9, v8);
  a1[4] = v9;
  a1[5] = v8;
  return a1;
}

uint64_t *assignWithCopy for ConstructedInvite(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2504DBC4C(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_250511528(v6, v7);
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_2504DBC4C(v8, v9);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_250511528(v10, v11);
  uint64_t v13 = a2[4];
  unint64_t v12 = a2[5];
  sub_2504DBC4C(v13, v12);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v13;
  a1[5] = v12;
  sub_250511528(v14, v15);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for ConstructedInvite(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_250511528(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_250511528(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_250511528(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConstructedInvite(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ConstructedInvite(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstructedInvite()
{
  return &type metadata for ConstructedInvite;
}

uint64_t *initializeBufferWithCopyOfBuffer for Invite(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_2504DBC4C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_2504DBC4C(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = a3[6];
    unint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_2505BE000();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    unint64_t v22 = v21[1];
    uint64_t v71 = v15;
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = *v21;
      sub_2504DBC4C(*v21, v22);
      *(void *)uint64_t v20 = v23;
      *((void *)v20 + 1) = v22;
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    sub_2504DBC4C(*v26, v28);
    *uint64_t v25 = v27;
    v25[1] = v28;
    uint64_t v29 = a3[10];
    *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = sub_2505BE0B0();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    v33(v30, v31, v32);
    uint64_t v34 = type metadata accessor for MembershipVerifier(0);
    v33(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v32);
    uint64_t v35 = *(int *)(v34 + 24);
    uint64_t v36 = (uint64_t *)&v30[v35];
    uint64_t v37 = (uint64_t *)&v31[v35];
    uint64_t v38 = *v37;
    unint64_t v39 = v37[1];
    sub_2504DBC4C(*v37, v39);
    *uint64_t v36 = v38;
    v36[1] = v39;
    uint64_t v40 = a3[11];
    unint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = sub_2505BDF30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[12];
    uint64_t v45 = (char *)a1 + v44;
    unint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = sub_2505BDF90();
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    uint64_t v50 = a3[13];
    uint64_t v51 = (char *)a1 + v50;
    unint64_t v52 = (char *)a2 + v50;
    unint64_t v53 = *((void *)v52 + 2);
    if (v53 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
      *((void *)v51 + 2) = *((void *)v52 + 2);
    }
    else
    {
      uint64_t v54 = *((void *)v52 + 1);
      *(void *)uint64_t v51 = *(void *)v52;
      sub_2504DBC4C(v54, v53);
      *((void *)v51 + 1) = v54;
      *((void *)v51 + 2) = v53;
    }
    uint64_t v55 = a3[14];
    uint64_t v56 = (char *)a1 + v55;
    unsigned int v57 = (char *)a2 + v55;
    uint64_t v58 = sub_2505BE040();
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
      memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    uint64_t v61 = a3[16];
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    uint64_t v62 = (char *)a1 + v61;
    os_log_type_t v63 = (char *)a2 + v61;
    if (v16((char *)a2 + v61, 1, v14))
    {
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v62, v63, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v62, 0, 1, v14);
    }
    uint64_t v65 = a3[17];
    uint64_t v66 = (uint64_t *)((char *)a1 + v65);
    unint64_t v67 = (uint64_t *)((char *)a2 + v65);
    uint64_t v68 = *v67;
    unint64_t v69 = v67[1];
    sub_2504DBC4C(*v67, v69);
    *uint64_t v66 = v68;
    v66[1] = v69;
  }
  return a1;
}

uint64_t destroy for Invite(uint64_t a1, int *a2)
{
  sub_250511528(*(void *)a1, *(void *)(a1 + 8));
  sub_250511528(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_2505BE000();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v28(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (uint64_t *)(a1 + a2[7]);
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15) {
    sub_250511528(*v7, v8);
  }
  sub_250511528(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8));
  uint64_t v9 = a1 + a2[10];
  uint64_t v10 = sub_2505BE0B0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  uint64_t v12 = type metadata accessor for MembershipVerifier(0);
  v11(v9 + *(int *)(v12 + 20), v10);
  sub_250511528(*(void *)(v9 + *(int *)(v12 + 24)), *(void *)(v9 + *(int *)(v12 + 24) + 8));
  uint64_t v13 = a1 + a2[11];
  uint64_t v14 = sub_2505BDF30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[12];
  uint64_t v16 = sub_2505BDF90();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t v18 = a1 + a2[13];
  unint64_t v19 = *(void *)(v18 + 16);
  if (v19 >> 60 != 15) {
    sub_250511528(*(void *)(v18 + 8), v19);
  }
  uint64_t v20 = a1 + a2[14];
  uint64_t v21 = sub_2505BE040();
  uint64_t v22 = *(void *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  uint64_t v23 = a1 + a2[16];
  if (!v28(v23, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v23, v5);
  }
  uint64_t v24 = (uint64_t *)(a1 + a2[17]);
  uint64_t v25 = *v24;
  unint64_t v26 = v24[1];
  return sub_250511528(v25, v26);
}

uint64_t *initializeWithCopy for Invite(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_2504DBC4C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_2504DBC4C(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2505BE000();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  unint64_t v19 = (uint64_t *)((char *)a2 + v17);
  unint64_t v20 = v19[1];
  uint64_t v69 = v14;
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  else
  {
    uint64_t v21 = *v19;
    sub_2504DBC4C(*v19, v20);
    *(void *)uint64_t v18 = v21;
    *((void *)v18 + 1) = v20;
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (uint64_t *)((char *)a1 + v22);
  uint64_t v24 = (uint64_t *)((char *)a2 + v22);
  uint64_t v25 = *v24;
  unint64_t v26 = v24[1];
  sub_2504DBC4C(*v24, v26);
  *uint64_t v23 = v25;
  v23[1] = v26;
  uint64_t v27 = a3[10];
  *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  unint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_2505BE0B0();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  v31(v28, v29, v30);
  uint64_t v32 = type metadata accessor for MembershipVerifier(0);
  v31(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v30);
  uint64_t v33 = *(int *)(v32 + 24);
  uint64_t v34 = (uint64_t *)&v28[v33];
  uint64_t v35 = (uint64_t *)&v29[v33];
  uint64_t v36 = *v35;
  unint64_t v37 = v35[1];
  sub_2504DBC4C(*v35, v37);
  *uint64_t v34 = v36;
  v34[1] = v37;
  uint64_t v38 = a3[11];
  unint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = sub_2505BDF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  uint64_t v42 = a3[12];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = sub_2505BDF90();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  uint64_t v48 = a3[13];
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  unint64_t v51 = *((void *)v50 + 2);
  if (v51 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *((void *)v49 + 2) = *((void *)v50 + 2);
  }
  else
  {
    uint64_t v52 = *((void *)v50 + 1);
    *(void *)uint64_t v49 = *(void *)v50;
    sub_2504DBC4C(v52, v51);
    *((void *)v49 + 1) = v52;
    *((void *)v49 + 2) = v51;
  }
  uint64_t v53 = a3[14];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = sub_2505BE040();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  uint64_t v59 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  if (v15((char *)a2 + v59, 1, v13))
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v60, v61, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v60, 0, 1, v13);
  }
  uint64_t v63 = a3[17];
  uint64_t v64 = (uint64_t *)((char *)a1 + v63);
  uint64_t v65 = (uint64_t *)((char *)a2 + v63);
  uint64_t v66 = *v65;
  unint64_t v67 = v65[1];
  sub_2504DBC4C(*v65, v67);
  *uint64_t v64 = v66;
  v64[1] = v67;
  return a1;
}

uint64_t *assignWithCopy for Invite(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_2504DBC4C(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_250511528(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_2504DBC4C(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_250511528(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_2505BE000();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  uint64_t v23 = a3[7];
  uint64_t v24 = (uint64_t *)((char *)a1 + v23);
  uint64_t v25 = (uint64_t *)((char *)a2 + v23);
  unint64_t v26 = *(uint64_t *)((char *)a2 + v23 + 8);
  uint64_t v100 = v18;
  uint64_t v101 = v17;
  if (*(unint64_t *)((char *)a1 + v23 + 8) >> 60 == 15)
  {
    if (v26 >> 60 != 15)
    {
      uint64_t v27 = *v25;
      sub_2504DBC4C(v27, v26);
      *uint64_t v24 = v27;
      v24[1] = v26;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v26 >> 60 == 15)
  {
    sub_25058434C((uint64_t)v24);
LABEL_12:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_14;
  }
  uint64_t v28 = *v25;
  sub_2504DBC4C(v28, v26);
  uint64_t v29 = *v24;
  unint64_t v30 = v24[1];
  *uint64_t v24 = v28;
  v24[1] = v26;
  sub_250511528(v29, v30);
LABEL_14:
  uint64_t v31 = a3[8];
  uint64_t v32 = (uint64_t *)((char *)a1 + v31);
  uint64_t v33 = (uint64_t *)((char *)a2 + v31);
  uint64_t v34 = *v33;
  unint64_t v35 = v33[1];
  sub_2504DBC4C(*v33, v35);
  uint64_t v36 = *v32;
  unint64_t v37 = v32[1];
  *uint64_t v32 = v34;
  v32[1] = v35;
  sub_250511528(v36, v37);
  *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  uint64_t v38 = a3[10];
  unint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = sub_2505BE0B0();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 24);
  v42(v39, v40, v41);
  uint64_t v43 = type metadata accessor for MembershipVerifier(0);
  v42(&v39[*(int *)(v43 + 20)], &v40[*(int *)(v43 + 20)], v41);
  uint64_t v44 = *(int *)(v43 + 24);
  uint64_t v45 = (uint64_t *)&v39[v44];
  uint64_t v46 = (uint64_t *)&v40[v44];
  uint64_t v47 = *v46;
  unint64_t v48 = v46[1];
  sub_2504DBC4C(*v46, v48);
  uint64_t v49 = *v45;
  unint64_t v50 = v45[1];
  *uint64_t v45 = v47;
  v45[1] = v48;
  sub_250511528(v49, v50);
  uint64_t v51 = a3[11];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = sub_2505BDF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[12];
  uint64_t v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = sub_2505BDF90();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  LODWORD(v43) = v60(v56, 1, v58);
  int v61 = v60(v57, 1, v58);
  if (v43)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
LABEL_19:
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
    memcpy(v56, v57, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v56, v57, v58);
LABEL_20:
  uint64_t v63 = a3[13];
  uint64_t v64 = (uint64_t *)((char *)a1 + v63);
  uint64_t v65 = (uint64_t *)((char *)a2 + v63);
  unint64_t v66 = *(unint64_t *)((char *)a1 + v63 + 16) >> 60;
  unint64_t v67 = *(unint64_t *)((char *)a2 + v63 + 16) >> 60;
  if (v66 <= 0xE)
  {
    if (v67 <= 0xE)
    {
      *uint64_t v64 = *v65;
      uint64_t v72 = v65[1];
      unint64_t v73 = v65[2];
      sub_2504DBC4C(v72, v73);
      uint64_t v74 = v64[1];
      unint64_t v75 = v64[2];
      v64[1] = v72;
      v64[2] = v73;
      sub_250511528(v74, v75);
    }
    else
    {
      sub_2505843A0((uint64_t)v64);
      uint64_t v69 = v65[2];
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      v64[2] = v69;
    }
  }
  else if (v67 <= 0xE)
  {
    *uint64_t v64 = *v65;
    uint64_t v70 = v65[1];
    unint64_t v71 = v65[2];
    sub_2504DBC4C(v70, v71);
    v64[1] = v70;
    v64[2] = v71;
  }
  else
  {
    long long v68 = *(_OWORD *)v65;
    v64[2] = v65[2];
    *(_OWORD *)uint64_t v64 = v68;
  }
  uint64_t v76 = a3[14];
  uint64_t v77 = (char *)a1 + v76;
  unint64_t v78 = (char *)a2 + v76;
  uint64_t v79 = sub_2505BE040();
  uint64_t v80 = *(void *)(v79 - 8);
  unint64_t v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  int v82 = v81(v77, 1, v79);
  int v83 = v81(v78, 1, v79);
  if (v82)
  {
    uint64_t v84 = v101;
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  uint64_t v84 = v101;
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v79);
LABEL_32:
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
    memcpy(v77, v78, *(void *)(*(void *)(v85 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 24))(v77, v78, v79);
LABEL_33:
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  uint64_t v86 = a3[16];
  uint64_t v87 = (char *)a1 + v86;
  uint64_t v88 = (char *)a2 + v86;
  int v89 = v19((char *)a1 + v86, 1, v84);
  int v90 = v19(v88, 1, v84);
  if (!v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 24))(v87, v88, v84);
      goto LABEL_39;
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v87, v84);
    goto LABEL_38;
  }
  if (v90)
  {
LABEL_38:
    uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v87, v88, v84);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v87, 0, 1, v84);
LABEL_39:
  uint64_t v92 = a3[17];
  uint64_t v93 = (uint64_t *)((char *)a1 + v92);
  unint64_t v94 = (uint64_t *)((char *)a2 + v92);
  uint64_t v95 = *v94;
  unint64_t v96 = v94[1];
  sub_2504DBC4C(*v94, v96);
  uint64_t v97 = *v93;
  unint64_t v98 = v93[1];
  *uint64_t v93 = v95;
  v93[1] = v96;
  sub_250511528(v97, v98);
  return a1;
}

uint64_t sub_25058434C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2505843A0(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for Invite(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2505BE000();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v45 = v11;
  if (v44(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[10];
  *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_2505BE0B0();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  uint64_t v19 = type metadata accessor for MembershipVerifier(0);
  v18(&v15[*(int *)(v19 + 20)], &v16[*(int *)(v19 + 20)], v17);
  *(_OWORD *)&v15[*(int *)(v19 + 24)] = *(_OWORD *)&v16[*(int *)(v19 + 24)];
  uint64_t v20 = a3[11];
  int v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_2505BDF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[12];
  uint64_t v25 = (char *)a1 + v24;
  unint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_2505BDF90();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v30 = a3[13];
  uint64_t v31 = a3[14];
  uint64_t v32 = (char *)a1 + v30;
  uint64_t v33 = (char *)a2 + v30;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *((void *)v32 + 2) = *((void *)v33 + 2);
  uint64_t v34 = (char *)a1 + v31;
  unint64_t v35 = (char *)a2 + v31;
  uint64_t v36 = sub_2505BE040();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v39 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  if (v44((char *)a2 + v39, 1, v10))
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v40, v41, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v40, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + a3[17]) = *(_OWORD *)((char *)a2 + a3[17]);
  return a1;
}

uint64_t *assignWithTake for Invite(uint64_t *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_250511528(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_250511528(v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2505BE000();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = (uint64_t)a1 + v19;
  int v21 = (char *)a2 + v19;
  unint64_t v22 = *(uint64_t *)((char *)a1 + v19 + 8);
  uint64_t v75 = v14;
  uint64_t v76 = v13;
  if (v22 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    goto LABEL_12;
  }
  unint64_t v23 = *((void *)v21 + 1);
  if (v23 >> 60 == 15)
  {
    sub_25058434C(v20);
    goto LABEL_10;
  }
  uint64_t v24 = *(void *)v20;
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = v23;
  sub_250511528(v24, v22);
LABEL_12:
  uint64_t v25 = a3[8];
  uint64_t v26 = *(uint64_t *)((char *)a1 + v25);
  unint64_t v27 = *(uint64_t *)((char *)a1 + v25 + 8);
  *(_OWORD *)((char *)a1 + v25) = *(_OWORD *)((char *)a2 + v25);
  sub_250511528(v26, v27);
  uint64_t v28 = a3[10];
  *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_2505BE0B0();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40);
  v32(v29, v30, v31);
  uint64_t v33 = type metadata accessor for MembershipVerifier(0);
  v32(&v29[*(int *)(v33 + 20)], &v30[*(int *)(v33 + 20)], v31);
  uint64_t v34 = *(int *)(v33 + 24);
  uint64_t v35 = *(void *)&v29[v34];
  unint64_t v36 = *(void *)&v29[v34 + 8];
  *(_OWORD *)&v29[v34] = *(_OWORD *)&v30[v34];
  sub_250511528(v35, v36);
  uint64_t v37 = a3[11];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = sub_2505BDF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
  uint64_t v41 = a3[12];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = sub_2505BDF90();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  LODWORD(v33) = v46(v42, 1, v44);
  int v47 = v46(v43, 1, v44);
  if (v33)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
LABEL_17:
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
    memcpy(v42, v43, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
LABEL_18:
  uint64_t v49 = a3[13];
  uint64_t v50 = (uint64_t)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  unint64_t v52 = *(uint64_t *)((char *)a1 + v49 + 16);
  if (v52 >> 60 == 15)
  {
LABEL_21:
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
    *(void *)(v50 + 16) = *((void *)v51 + 2);
    goto LABEL_23;
  }
  unint64_t v53 = *((void *)v51 + 2);
  if (v53 >> 60 == 15)
  {
    sub_2505843A0(v50);
    goto LABEL_21;
  }
  uint64_t v54 = *(void *)(v50 + 8);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(void *)(v50 + 16) = v53;
  sub_250511528(v54, v52);
LABEL_23:
  uint64_t v55 = a3[14];
  uint64_t v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = sub_2505BE040();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  int v62 = v60(v57, 1, v58);
  if (v61)
  {
    uint64_t v63 = v76;
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  uint64_t v63 = v76;
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
LABEL_28:
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
    memcpy(v56, v57, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v56, v57, v58);
LABEL_29:
  uint64_t v65 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  unint64_t v66 = (char *)a1 + v65;
  unint64_t v67 = (char *)a2 + v65;
  int v68 = v15((char *)a1 + v65, 1, v63);
  int v69 = v15(v67, 1, v63);
  if (!v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 40))(v66, v67, v63);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v66, v63);
    goto LABEL_34;
  }
  if (v69)
  {
LABEL_34:
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v66, v67, v63);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v66, 0, 1, v63);
LABEL_35:
  uint64_t v71 = a3[17];
  uint64_t v72 = *(uint64_t *)((char *)a1 + v71);
  unint64_t v73 = *(uint64_t *)((char *)a1 + v71 + 8);
  *(_OWORD *)((char *)a1 + v71) = *(_OWORD *)((char *)a2 + v71);
  sub_250511528(v72, v73);
  return a1;
}

uint64_t getEnumTagSinglePayload for Invite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250584F80);
}

uint64_t sub_250584F80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
  }
  else
  {
    uint64_t v10 = type metadata accessor for MembershipVerifier(0);
    if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
    {
      uint64_t v7 = v10;
      uint64_t v8 = *(void *)(v10 - 8);
      uint64_t v9 = a3[10];
    }
    else
    {
      uint64_t v11 = sub_2505BDF30();
      if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
      {
        uint64_t v7 = v11;
        uint64_t v8 = *(void *)(v11 - 8);
        uint64_t v9 = a3[11];
      }
      else
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
        if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
        {
          uint64_t v7 = v12;
          uint64_t v8 = *(void *)(v12 - 8);
          uint64_t v9 = a3[12];
        }
        else
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
          if (*(_DWORD *)(*(void *)(v13 - 8) + 84) != a2)
          {
            unsigned int v16 = *(unsigned __int8 *)(a1 + a3[15]);
            if (v16 >= 6) {
              return v16 - 5;
            }
            else {
              return 0;
            }
          }
          uint64_t v7 = v13;
          uint64_t v8 = *(void *)(v13 - 8);
          uint64_t v9 = a3[14];
        }
      }
    }
  }
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  return v14(a1 + v9, a2, v7);
}

uint64_t storeEnumTagSinglePayload for Invite(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250585190);
}

uint64_t sub_250585190(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t v12 = type metadata accessor for MembershipVerifier(0);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = *(void *)(v12 - 8);
      uint64_t v11 = a4[10];
    }
    else
    {
      uint64_t v13 = sub_2505BDF30();
      if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
      {
        uint64_t v9 = v13;
        uint64_t v10 = *(void *)(v13 - 8);
        uint64_t v11 = a4[11];
      }
      else
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
        if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
        {
          uint64_t v9 = v14;
          uint64_t v10 = *(void *)(v14 - 8);
          uint64_t v11 = a4[12];
        }
        else
        {
          uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
          if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
          {
            *(unsigned char *)(a1 + a4[15]) = a2 + 5;
            return result;
          }
          uint64_t v9 = result;
          uint64_t v10 = *(void *)(result - 8);
          uint64_t v11 = a4[14];
        }
      }
    }
  }
  unsigned int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v16(a1 + v11, a2, a2, v9);
}

void sub_25058538C()
{
  sub_25058559C(319, &qword_269AB68D0, MEMORY[0x263F047C0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for MembershipVerifier(319);
    if (v1 <= 0x3F)
    {
      sub_2505BDF30();
      if (v2 <= 0x3F)
      {
        sub_25058559C(319, &qword_269AB68C8, MEMORY[0x263F047A0]);
        if (v3 <= 0x3F)
        {
          sub_25058559C(319, &qword_269AB6A98, MEMORY[0x263F047C8]);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_25058559C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2505BE410();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for Invite.InviteResponse(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2505856BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Invite.InviteResponse()
{
  return &type metadata for Invite.InviteResponse;
}

uint64_t initializeWithCopy for ServiceMessageRequestMetaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2504DBC4C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned int v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_2504DBC4C(*v6, *(void *)(a2 + 24));
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for ServiceMessageRequestMetaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2504DBC4C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_250511528(v6, v7);
  uint64_t v8 = (uint64_t *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v11 = *v8;
      sub_2504DBC4C(*v8, *(void *)(a2 + 24));
      uint64_t v12 = *(void *)(a1 + 16);
      unint64_t v13 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v9;
      sub_250511528(v12, v13);
      goto LABEL_8;
    }
    sub_250585850(a1 + 16);
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  uint64_t v10 = *v8;
  sub_2504DBC4C(*v8, *(void *)(a2 + 24));
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v9;
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_250585850(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ServiceMessageRequestMetaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_250511528(v4, v5);
  uint64_t v6 = (void *)(a2 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v6;
      *(void *)(a1 + 24) = v8;
      sub_250511528(v9, v7);
      goto LABEL_6;
    }
    sub_250585850(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceMessageRequestMetaData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  if (*(unsigned __int8 *)(a1 + 32) <= 2u) {
    int v3 = 2;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 32);
  }
  int v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 32) < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceMessageRequestMetaData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceMessageRequestMetaData()
{
  return &type metadata for ServiceMessageRequestMetaData;
}

uint64_t destroy for ServiceMessageRequest(uint64_t a1)
{
  return sub_250585A50(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(unsigned char *)(a1 + 33), (void (*)(uint64_t, unint64_t))sub_250511528, (uint64_t (*)(uint64_t, uint64_t))sub_250586944);
}

uint64_t sub_250585A50(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(uint64_t, unint64_t), uint64_t (*a8)(uint64_t, uint64_t))
{
  if (a6) {
    int v9 = 4;
  }
  else {
    int v9 = 0;
  }
  switch(v9 | (a2 >> 60) & 3)
  {
    case 0uLL:
    case 4uLL:
      goto LABEL_6;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      a2 &= 0xCFFFFFFFFFFFFFFFLL;
LABEL_6:
      a7(result, a2);
      __n128 result = a8(a3, a4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for ServiceMessageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 33);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 32);
  sub_250585A50(*(void *)a2, v4, v5, v6, v8, v7, (void (*)(uint64_t, unint64_t))sub_2504DBC4C, (uint64_t (*)(uint64_t, uint64_t))sub_250586940);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = v7;
  return a1;
}

uint64_t assignWithCopy for ServiceMessageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 33);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 32);
  sub_250585A50(*(void *)a2, v4, v5, v6, v8, v7, (void (*)(uint64_t, unint64_t))sub_2504DBC4C, (uint64_t (*)(uint64_t, uint64_t))sub_250586940);
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 33);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v14 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = v7;
  sub_250585A50(v9, v10, v11, v12, v14, v13, (void (*)(uint64_t, unint64_t))sub_250511528, (uint64_t (*)(uint64_t, uint64_t))sub_250586944);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ServiceMessageRequest(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 33);
  uint64_t v5 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 33);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 33) = v4;
  sub_250585A50(v5, v7, v6, v8, v11, v9, (void (*)(uint64_t, unint64_t))sub_250511528, (uint64_t (*)(uint64_t, uint64_t))sub_250586944);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceMessageRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FC && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 1020);
  }
  unsigned int v3 = ((*(void *)(a1 + 8) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 33))) ^ 0x3FF;
  if (v3 >= 0x3FB) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ServiceMessageRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 1020;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FC) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FC) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (-a2 & 3) << 60;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(unsigned char *)(result + 32) = 0;
      *(unsigned char *)(result + 33) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_250585DC0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 33)) {
    int v1 = 4;
  }
  else {
    int v1 = 0;
  }
  return (*(void *)(a1 + 8) >> 60) & 3 | v1;
}

uint64_t sub_250585DE0(uint64_t result)
{
  *(void *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_250585DF0(uint64_t result, char a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  *(unsigned char *)(result + 33) = (a2 & 4) != 0;
  return result;
}

ValueMetadata *type metadata accessor for ServiceMessageRequest()
{
  return &type metadata for ServiceMessageRequest;
}

uint64_t getEnumTagSinglePayload for Invite.InternalState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Invite.InternalState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x250585F78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Invite.InternalState()
{
  return &type metadata for Invite.InternalState;
}

uint64_t destroy for GKSHADigest(uint64_t a1)
{
  return sub_250511528(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

void *_s14GroupKitCrypto11GKSHADigestVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  sub_2504DBC4C(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for GKSHADigest(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = a2[2];
  sub_2504DBC4C(v3, v4);
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_250511528(v5, v6);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for GKSHADigest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  sub_250511528(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for GKSHADigest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GKSHADigest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GKSHADigest()
{
  return &type metadata for GKSHADigest;
}

unint64_t sub_250586168()
{
  unint64_t result = qword_269AB6AA0;
  if (!qword_269AB6AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6AA0);
  }
  return result;
}

unint64_t sub_2505861C0()
{
  unint64_t result = qword_269AB6AA8[0];
  if (!qword_269AB6AA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269AB6AA8);
  }
  return result;
}

uint64_t sub_250586214(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_25058641C((int)a1, a1 >> 32);
      uint64_t result = sub_250511528(a1, a2);
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_25058641C(v5, v6);
      swift_release();
      uint64_t result = swift_release();
      break;
    default:
      uint64_t result = sub_2505BD8E0();
      break;
  }
  return result;
}

uint64_t sub_25058641C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2505BD7D0();
  if (!result || (uint64_t result = sub_2505BD800(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_2505BD7F0();
      return sub_2505BD8E0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2505864C4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2505BD7D0();
  if (!result || (uint64_t result = sub_2505BD800(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_2505BD7F0();
      sub_2505BE0E0();
      sub_2505868BC((unint64_t *)&qword_269AB5FB0, MEMORY[0x263F047F8]);
      return sub_2505BDC60();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2505865A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25058660C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_250586674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2505866DC(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x250586814);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 == 32) {
        return 32;
      }
LABEL_8:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(_WORD *)uint64_t v9 = 296;
      *(_OWORD *)(v9 + 8) = xmmword_2505C5D70;
      *(_OWORD *)(v9 + 24) = xmmword_2505C5D80;
      *(void *)(v9 + 40) = 0x80000002505CBE90;
      swift_willThrow();
      return sub_250511528(a1, a2);
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_250586824(uint64_t a1)
{
  return sub_250581A4C(a1, *(_DWORD *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_250586860(_DWORD *a1)
{
  return sub_250581C90(a1, *(void *)(v1 + 16));
}

uint64_t sub_25058687C(uint64_t a1)
{
  return sub_25057E5FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_25058689C(uint64_t a1)
{
  return sub_25057E764(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_2505868BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250586904(uint64_t a1)
{
  return sub_25057EC48(a1, *(void *)(v1 + 16));
}

uint64_t sub_250586920(uint64_t a1)
{
  return sub_25057EDAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_25058694C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_250586974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_250589AEC;
  return v9(a1, a2, a3);
}

uint64_t sub_250586A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_250589AEC;
  return v9(a1, a2, a3);
}

uint64_t sub_250586B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_250586C8C;
  return v9(a1, a2, a3);
}

uint64_t sub_250586C8C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_250586D80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_250586DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_250586DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_2505BE850();
    swift_bridgeObjectRetain();
    sub_2505BE180();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_2505BE880();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_2505BE780() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unsigned int v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_2505BE780() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_250586F18(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v89 = *MEMORY[0x263EF8340];
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_2505BE850();
  sub_2504DBC4C(a1, a2);
  sub_2505BD950();
  sub_250511528(a1, a2);
  uint64_t v6 = sub_2505BE880();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = a3 + 56;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  unint64_t v10 = a2 >> 62;
  uint64_t v79 = ~v7;
  unint64_t v78 = a2 >> 62;
  BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v77 = v11;
  uint64_t v75 = (a1 >> 32) - (int)a1;
  uint64_t v76 = a1 >> 32;
  uint64_t v80 = v10;
  size_t __n = BYTE6(a2);
  unint64_t v74 = a2;
  while (2)
  {
    BOOL v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    uint64_t v14 = *v12;
    unint64_t v13 = v12[1];
    uint64_t v15 = 0;
    switch(v13 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_15:
        sub_2504DBC4C(v14, v13);
        break;
      case 2uLL:
        uint64_t v17 = *(void *)(v14 + 16);
        uint64_t v16 = *(void *)(v14 + 24);
        uint64_t v15 = v16 - v17;
        if (!__OFSUB__(v16, v17)) {
          goto LABEL_15;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v15 = BYTE6(v13);
        break;
    }
    size_t v18 = __n;
    switch(v80)
    {
      case 1:
        size_t v18 = HIDWORD(a1) - (int)a1;
        if (v77) {
          goto LABEL_121;
        }
        goto LABEL_20;
      case 2:
        uint64_t v20 = *(void *)(a1 + 16);
        uint64_t v19 = *(void *)(a1 + 24);
        BOOL v21 = __OFSUB__(v19, v20);
        size_t v18 = v19 - v20;
        if (!v21) {
          goto LABEL_20;
        }
        goto LABEL_122;
      case 3:
        if (v15) {
          goto LABEL_8;
        }
        goto LABEL_118;
      default:
LABEL_20:
        if (v15 != v18)
        {
LABEL_8:
          sub_250511528(v14, v13);
          goto LABEL_9;
        }
        if (v15 >= 1)
        {
          switch(v13 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              sub_2504DBC4C(v14, v13);
              uint64_t v26 = sub_2505BD7D0();
              if (v26)
              {
                uint64_t v27 = v26;
                uint64_t v28 = sub_2505BD800();
                if (__OFSUB__((int)v14, v28)) {
                  goto LABEL_125;
                }
                uint64_t v29 = (const void *)(v27 + (int)v14 - v28);
              }
              else
              {
                uint64_t v29 = 0;
              }
              sub_2505BD7F0();
              LODWORD(v10) = v78;
              if (v78)
              {
                if (v78 == 1)
                {
                  if (v76 < (int)a1) {
                    goto LABEL_134;
                  }
                  swift_retain();
                  uint64_t v43 = (char *)sub_2505BD7D0();
                  if (v43)
                  {
                    uint64_t v44 = sub_2505BD800();
                    if (__OFSUB__((int)a1, v44)) {
                      goto LABEL_141;
                    }
                    v43 += (int)a1 - v44;
                  }
                  uint64_t v45 = sub_2505BD7F0();
                  size_t v46 = (a1 >> 32) - (int)a1;
                  if (v45 < v75) {
                    size_t v46 = v45;
                  }
                  if (!v29) {
                    goto LABEL_146;
                  }
                  if (!v43) {
                    goto LABEL_147;
                  }
                  int v47 = memcmp(v29, v43, v46);
                  sub_250511528(a1, a2);
                }
                else
                {
                  uint64_t v66 = *(void *)(a1 + 16);
                  uint64_t v65 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  unint64_t v67 = (char *)sub_2505BD7D0();
                  if (v67)
                  {
                    uint64_t v68 = sub_2505BD800();
                    if (__OFSUB__(v66, v68)) {
                      goto LABEL_140;
                    }
                    v67 += v66 - v68;
                  }
                  BOOL v21 = __OFSUB__(v65, v66);
                  int64_t v69 = v65 - v66;
                  if (v21) {
                    goto LABEL_135;
                  }
                  uint64_t v70 = sub_2505BD7F0();
                  if (v70 >= v69) {
                    size_t v71 = v69;
                  }
                  else {
                    size_t v71 = v70;
                  }
                  LODWORD(v10) = v78;
                  if (!v29) {
                    goto LABEL_154;
                  }
                  a2 = v74;
                  if (!v67) {
                    goto LABEL_155;
                  }
                  int v47 = memcmp(v29, v67, v71);
                  swift_release();
                  swift_release();
                }
              }
              else
              {
                *(void *)__s1 = a1;
                *(_WORD *)&__s1[8] = a2;
                __s1[10] = BYTE2(a2);
                __s1[11] = BYTE3(a2);
                __s1[12] = BYTE4(a2);
                __s1[13] = BYTE5(a2);
                if (!v29) {
                  goto LABEL_153;
                }
                int v47 = memcmp(v29, __s1, __n);
              }
              sub_250511528(v14, v13);
LABEL_115:
              sub_250511528(v14, v13);
              uint64_t v9 = a3 + 56;
              if (!v47) {
                return 1;
              }
              break;
            case 2uLL:
              uint64_t v30 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              uint64_t v31 = (char *)sub_2505BD7D0();
              if (!v31) {
                goto LABEL_37;
              }
              uint64_t v32 = sub_2505BD800();
              if (__OFSUB__(v30, v32)) {
                goto LABEL_124;
              }
              v31 += v30 - v32;
LABEL_37:
              sub_2505BD7F0();
              LODWORD(v10) = v78;
              if (!v78)
              {
                *(void *)__s1 = a1;
                *(_WORD *)&__s1[8] = a2;
                __s1[10] = BYTE2(a2);
                __s1[11] = BYTE3(a2);
                __s1[12] = BYTE4(a2);
                __s1[13] = BYTE5(a2);
                if (!v31) {
                  goto LABEL_150;
                }
                int v47 = memcmp(v31, __s1, __n);
                swift_release();
                swift_release();
                goto LABEL_115;
              }
              if (v78 == 1)
              {
                if (v76 < (int)a1) {
                  goto LABEL_128;
                }
                swift_retain();
                uint64_t v33 = (char *)sub_2505BD7D0();
                if (v33)
                {
                  uint64_t v34 = sub_2505BD800();
                  if (__OFSUB__((int)a1, v34)) {
                    goto LABEL_139;
                  }
                  v33 += (int)a1 - v34;
                }
                uint64_t v35 = sub_2505BD7F0();
                size_t v36 = (a1 >> 32) - (int)a1;
                if (v35 < v75) {
                  size_t v36 = v35;
                }
                if (!v31) {
                  goto LABEL_143;
                }
                if (!v33) {
                  goto LABEL_144;
                }
                int v37 = memcmp(v31, v33, v36);
                sub_250511528(a1, a2);
                swift_release();
              }
              else
              {
                uint64_t v59 = *(void *)(a1 + 16);
                uint64_t v73 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v60 = (char *)sub_2505BD7D0();
                if (v60)
                {
                  uint64_t v61 = sub_2505BD800();
                  if (__OFSUB__(v59, v61)) {
                    goto LABEL_138;
                  }
                  v60 += v59 - v61;
                }
                BOOL v21 = __OFSUB__(v73, v59);
                int64_t v62 = v73 - v59;
                if (v21) {
                  goto LABEL_133;
                }
                uint64_t v63 = sub_2505BD7F0();
                if (v63 >= v62) {
                  size_t v64 = v62;
                }
                else {
                  size_t v64 = v63;
                }
                if (!v31) {
                  goto LABEL_151;
                }
                a2 = v74;
                if (!v60) {
                  goto LABEL_152;
                }
                int v37 = memcmp(v31, v60, v64);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              sub_250511528(v14, v13);
              uint64_t v9 = a3 + 56;
              LODWORD(v10) = v78;
              if (!v37) {
                return 1;
              }
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v10) {
                goto LABEL_57;
              }
              if (v10 == 1)
              {
                if (v76 < (int)a1) {
                  goto LABEL_127;
                }
                sub_2504DBC4C(a1, a2);
                uint64_t v38 = sub_2505BD7D0();
                if (!v38) {
                  goto LABEL_145;
                }
                uint64_t v23 = v38;
                uint64_t v39 = sub_2505BD800();
                uint64_t v25 = (int)a1 - v39;
                if (__OFSUB__((int)a1, v39)) {
                  goto LABEL_132;
                }
                goto LABEL_53;
              }
              uint64_t v54 = *(void *)(a1 + 16);
              uint64_t v55 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v50 = (char *)sub_2505BD7D0();
              if (v50)
              {
                uint64_t v56 = sub_2505BD800();
                if (__OFSUB__(v54, v56)) {
                  goto LABEL_137;
                }
                v50 += v54 - v56;
              }
              BOOL v21 = __OFSUB__(v55, v54);
              int64_t v52 = v55 - v54;
              if (v21) {
                goto LABEL_130;
              }
              uint64_t v53 = sub_2505BD7F0();
              uint64_t v9 = a3 + 56;
              if (!v50) {
                goto LABEL_149;
              }
              goto LABEL_83;
            default:
              *(void *)__s1 = v14;
              *(_WORD *)&__s1[8] = v13;
              __s1[10] = BYTE2(v13);
              __s1[11] = BYTE3(v13);
              __s1[12] = BYTE4(v13);
              __s1[13] = BYTE5(v13);
              if (!v10)
              {
LABEL_57:
                uint64_t __s2 = a1;
                __int16 v83 = a2;
                char v84 = BYTE2(a2);
                char v85 = BYTE3(a2);
                char v86 = BYTE4(a2);
                char v87 = BYTE5(a2);
                int v42 = memcmp(__s1, &__s2, __n);
LABEL_58:
                sub_250511528(v14, v13);
                if (!v42) {
                  return 1;
                }
                break;
              }
              if (v10 == 1)
              {
                if (v76 < (int)a1) {
                  goto LABEL_126;
                }
                sub_2504DBC4C(a1, a2);
                uint64_t v22 = sub_2505BD7D0();
                if (!v22)
                {
                  sub_2505BD7F0();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  sub_2505BD7F0();
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x2505878ECLL);
                }
                uint64_t v23 = v22;
                uint64_t v24 = sub_2505BD800();
                uint64_t v25 = (int)a1 - v24;
                if (__OFSUB__((int)a1, v24)) {
                  goto LABEL_131;
                }
LABEL_53:
                uint64_t v40 = sub_2505BD7F0();
                if (v40 >= v75) {
                  size_t v41 = (a1 >> 32) - (int)a1;
                }
                else {
                  size_t v41 = v40;
                }
                int v42 = memcmp(__s1, (const void *)(v23 + v25), v41);
                a2 = v74;
                sub_250511528(a1, v74);
                goto LABEL_58;
              }
              uint64_t v48 = *(void *)(a1 + 16);
              uint64_t v49 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v50 = (char *)sub_2505BD7D0();
              if (v50)
              {
                uint64_t v51 = sub_2505BD800();
                if (__OFSUB__(v48, v51)) {
                  goto LABEL_136;
                }
                v50 += v48 - v51;
              }
              BOOL v21 = __OFSUB__(v49, v48);
              int64_t v52 = v49 - v48;
              if (v21) {
                goto LABEL_129;
              }
              uint64_t v53 = sub_2505BD7F0();
              uint64_t v9 = a3 + 56;
              if (!v50) {
                goto LABEL_148;
              }
LABEL_83:
              if (v53 >= v52) {
                size_t v57 = v52;
              }
              else {
                size_t v57 = v53;
              }
              int v58 = memcmp(__s1, v50, v57);
              swift_release();
              swift_release();
              sub_250511528(v14, v13);
              LODWORD(v10) = v78;
              if (!v58) {
                return 1;
              }
              break;
          }
LABEL_9:
          unint64_t v8 = (v8 + 1) & v79;
          if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            return 0;
          }
          continue;
        }
LABEL_118:
        sub_250511528(v14, v13);
        return 1;
    }
  }
}

uint64_t sub_25058791C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  type metadata accessor for SimPCSIDSet();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = qword_269AB56B8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_269AC3818;
  swift_bridgeObjectRetain();
  char v12 = sub_250586DD0(a1, a2, v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
    v9[2] = a1;
    v9[3] = a2;
    v9[4] = a3;
    v9[5] = a4;
    *a5 = a1;
    a5[1] = a2;
    a5[2] = a3;
    a5[3] = a4;
    a5[4] = (uint64_t)v9;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250588E00();
    swift_allocError();
    *uint64_t v14 = 3;
    swift_willThrow();
    swift_deallocPartialClassInstance();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_250587A80()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PCSInterface()
{
  return self;
}

uint64_t sub_250587AB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6AD8);
  a4[4] = &off_2701936A0;
  uint64_t v10 = (void *)swift_allocObject();
  *a4 = v10;
  v12[0] = v9;
  v12[1] = v8;
  type metadata accessor for PCSIDSet();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_2505A55F0(v12);
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_deallocate_boxed_opaque_existential_1((uint64_t)a4);
  }
  else
  {
    v10[2] = v9;
    v10[3] = v8;
    v10[4] = a2;
    v10[5] = a3;
    v10[6] = result;
  }
  return result;
}

uint64_t type metadata accessor for SimPCSInterface()
{
  return self;
}

uint64_t *sub_250587BD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2505BE000();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2505BDF90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_250587CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2505BDF90();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_250587D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BDF90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_250587E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BDF90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_250587EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BDF90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_250587FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BDF90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_250588068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25058807C);
}

uint64_t sub_25058807C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_2505BDF90();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_250588174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250588188);
}

uint64_t sub_250588188(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2505BE000();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_2505BDF90();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for PCSKeyPair()
{
  uint64_t result = qword_269AB6AC8;
  if (!qword_269AB6AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2505882D8()
{
  uint64_t result = sub_2505BE000();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2505BDF90();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2505883A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6AE0);
  a4[4] = (uint64_t)&off_2701936A0;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = (uint64_t *)(v11 + 16);
  *a4 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_25058791C(v9, v10, a2, a3, v12);
  if (v5) {
    return __swift_deallocate_boxed_opaque_existential_1((uint64_t)a4);
  }
  return result;
}

uint64_t sub_250588458(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v5 = sub_2505BDF90();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v6 = sub_2505BE000();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v3[16] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2505885D4;
  v7[5] = a2;
  v7[6] = v2;
  v7[4] = v3 + 2;
  return MEMORY[0x270FA2498](sub_2505888DC, 0, 0);
}

uint64_t sub_2505885D4()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_250588848;
  }
  else {
    uint64_t v2 = sub_2505886E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2505886E8()
{
  uint64_t v1 = v0[17];
  sub_250588B84(v0 + 2);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  }
  else
  {
    sub_250588C48(v0 + 2);
    uint64_t v3 = v0[14];
    uint64_t v2 = v0[15];
    uint64_t v4 = v0[13];
    uint64_t v7 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[7];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v2, v4);
    uint64_t v10 = type metadata accessor for PCSKeyPair();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v9 + *(int *)(v10 + 20), v6, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_250588848()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2505888B8(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2505888DC, 0, 0);
}

uint64_t sub_2505888DC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (uint64_t *)v0[6];
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  v0[7] = v3;
  v0[2] = v4;
  v0[3] = v3;
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 16)
                                                                                      + **(int **)(v7 + 16));
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[8] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_250588A1C;
  uint64_t v10 = v0[4];
  return v12(v10, v0 + 2, v5, v6, v8, v7);
}

uint64_t sub_250588A1C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_250588B6C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_250588B6C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_250588B84(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  if (!v1)
  {
    uint64_t v6 = result;
    unint64_t v7 = v5;
    sub_2505897D0(result, v5);
    sub_2505BDFC0();
    return sub_250511528(v6, v7);
  }
  return result;
}

uint64_t sub_250588C48(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (!v1)
  {
    uint64_t v6 = result;
    unint64_t v7 = v5;
    sub_2505897D0(result, v5);
    sub_2505BDF70();
    return sub_250511528(v6, v7);
  }
  return result;
}

uint64_t sub_250588D0C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_250586C8C;
  return sub_250588458(a1, a2);
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

unint64_t sub_250588E00()
{
  unint64_t result = qword_269AB6AE8[0];
  if (!qword_269AB6AE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269AB6AE8);
  }
  return result;
}

uint64_t sub_250588E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_250588E5C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_250588EF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v11 = *v12;
    v11[1] = v12[1];
    uint64_t v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
    uint64_t v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_250589034(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_2505890B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v10, v11, v7);
  return a1;
}

void *sub_250589178(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_250589248(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_2505892D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_250589380(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 32) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 16) & ~v6);
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_250589528(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 32) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x250589790);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for GKCPCSId()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2505897D0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_27;
      }
      uint64_t v5 = (int)v5;
LABEL_6:
      if (v5 == 64)
      {
        if (v2)
        {
          if (v2 == 1)
          {
            uint64_t v9 = (int)a1;
            uint64_t v10 = (int)a1 + 32;
          }
          else
          {
            uint64_t v9 = *(void *)(a1 + 16);
            uint64_t v10 = v9 + 32;
            if (__OFADD__(v9, 32)) {
              goto LABEL_29;
            }
          }
        }
        else
        {
          uint64_t v9 = 0;
          uint64_t v10 = 32;
        }
        if (__OFADD__(v9, 64))
        {
          __break(1u);
        }
        else if (v9 + 64 >= v10)
        {
          uint64_t v15 = sub_2505BD900();
          return sub_25056D81C(v15, v16);
        }
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x250589ACCLL);
      }
LABEL_10:
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_2505BDC40();
      __swift_project_value_buffer(v11, (uint64_t)qword_269AC3188);
      os_log_type_t v12 = sub_2505BE3D0();
      sub_2504DBC4C(a1, a2);
      int v13 = sub_2505BDC20();
      if (os_log_type_enabled(v13, v12))
      {
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 134218240;
        sub_2505BE430();
        *(_WORD *)(v14 + 12) = 2048;
        switch((int)v2)
        {
          case 1:
            if (!__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_23;
            }
            goto LABEL_30;
          case 2:
            if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
              goto LABEL_23;
            }
            goto LABEL_31;
          default:
LABEL_23:
            sub_2505BE430();
            sub_250511528(a1, a2);
            _os_log_impl(&dword_2504D2000, v13, v12, "PCS returned incorrect key length, expected %ld got %ld", (uint8_t *)v14, 0x16u);
            MEMORY[0x25337FF10](v14, -1, -1);
            break;
        }
      }
      else
      {
        sub_250511528(a1, a2);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v18 = 404;
      *(_OWORD *)(v18 + 8) = xmmword_2505C6020;
      *(void *)(v18 + 24) = 0x80000002505CC2A0;
      *(void *)(v18 + 32) = 0xD000000000000062;
      *(void *)(v18 + 40) = 0x80000002505CC2E0;
      return swift_willThrow();
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        goto LABEL_6;
      }
      goto LABEL_28;
    case 3uLL:
      goto LABEL_10;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_250589AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_250589B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_250589B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_250589B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t destroy for GroupAccessInfo(uint64_t *a1)
{
  sub_250511528(*a1, a1[1]);
  sub_250511528(a1[2], a1[3]);
  sub_250511528(a1[4], a1[5]);
  uint64_t v2 = a1[6];
  unint64_t v3 = a1[7];
  return sub_250511528(v2, v3);
}

uint64_t *initializeWithCopy for GroupAccessInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2504DBC4C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_2504DBC4C(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  sub_2504DBC4C(v8, v9);
  a1[4] = v8;
  a1[5] = v9;
  uint64_t v11 = a2[6];
  unint64_t v10 = a2[7];
  sub_2504DBC4C(v11, v10);
  a1[6] = v11;
  a1[7] = v10;
  return a1;
}

uint64_t *assignWithCopy for GroupAccessInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2504DBC4C(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_250511528(v6, v7);
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_2504DBC4C(v8, v9);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_250511528(v10, v11);
  uint64_t v12 = a2[4];
  unint64_t v13 = a2[5];
  sub_2504DBC4C(v12, v13);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v12;
  a1[5] = v13;
  sub_250511528(v14, v15);
  uint64_t v17 = a2[6];
  unint64_t v16 = a2[7];
  sub_2504DBC4C(v17, v16);
  uint64_t v18 = a1[6];
  unint64_t v19 = a1[7];
  a1[6] = v17;
  a1[7] = v16;
  sub_250511528(v18, v19);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for GroupAccessInfo(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_250511528(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_250511528(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_250511528(v8, v9);
  uint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  *((_OWORD *)a1 + 3) = a2[3];
  sub_250511528(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupAccessInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GroupAccessInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupAccessInfo()
{
  return &type metadata for GroupAccessInfo;
}

ValueMetadata *type metadata accessor for KeychainInteraction()
{
  return &type metadata for KeychainInteraction;
}

void destroy for CoreDataInteraction(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t _s14GroupKitCrypto19CoreDataInteractionVwCP_0(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for CoreDataInteraction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  id v4 = *(void **)(a2 + 8);
  unint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CoreDataInteraction(uint64_t a1, uint64_t a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDataInteraction(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDataInteraction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDataInteraction()
{
  return &type metadata for CoreDataInteraction;
}

uint64_t sub_25058A02C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2504DAEFC((uint64_t)&unk_26B2024C8, (uint64_t)&v9, &qword_26B202178);
  if (v10)
  {
    sub_2504DAEE4(&v9, (uint64_t)v11);
    swift_endAccess();
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    *(void *)&long long v9 = v2;
    *((void *)&v9 + 1) = v3;
    v14[0] = v4;
    v14[1] = v5;
    (*(void (**)(long long *, void *, uint64_t, uint64_t))(v7 + 8))(&v9, v14, v6, v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_2504DAF60((uint64_t)&v9, &qword_26B202178);
    uint64_t result = sub_2505BE5F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25058A1AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2504DAEFC((uint64_t)&unk_26B2024C8, (uint64_t)&v9, &qword_26B202178);
  if (v10)
  {
    sub_2504DAEE4(&v9, (uint64_t)v11);
    swift_endAccess();
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    *(void *)&long long v9 = v2;
    *((void *)&v9 + 1) = v3;
    v14[0] = v4;
    v14[1] = v5;
    (*(void (**)(long long *, void *, uint64_t, uint64_t))(v7 + 32))(&v9, v14, v6, v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_2504DAF60((uint64_t)&v9, &qword_26B202178);
    uint64_t result = sub_2505BE5F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25058A320(uint64_t *a1, uint64_t *a2, uint64_t *a3, unsigned int a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = *a3;
  uint64_t v8 = a3[1];
  uint64_t v10 = a3[2];
  uint64_t v17 = a3[4];
  uint64_t v18 = a3[3];
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[5];
  uint64_t v14 = a3[7];
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2504DAEFC((uint64_t)&unk_26B2024C8, (uint64_t)&v20, &qword_26B202178);
  if (v22)
  {
    sub_2504DAEE4(&v20, (uint64_t)v28);
    swift_endAccess();
    uint64_t v11 = v29;
    uint64_t v12 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v31[0] = v4;
    v31[1] = v5;
    v27[0] = v6;
    v27[1] = v7;
    *(void *)&long long v20 = v9;
    *((void *)&v20 + 1) = v8;
    uint64_t v21 = v10;
    uint64_t v22 = v18;
    uint64_t v23 = v17;
    uint64_t v24 = v16;
    uint64_t v25 = v15;
    uint64_t v26 = v14;
    (*(void (**)(void *, void *, long long *, void, uint64_t, uint64_t))(v12 + 16))(v31, v27, &v20, a4, v11, v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    sub_2504DAF60((uint64_t)&v20, &qword_26B202178);
    uint64_t result = sub_2505BE5F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25058A4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  id v17 = 0;
  uint64_t v18 = 0;
  unint64_t v19 = 0;
  unsigned __int8 v20 = -1;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = &v17;
  void v8[3] = a1;
  v8[4] = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_25058F820;
  *(void *)(v9 + 24) = v8;
  v16[4] = sub_25058F860;
  v16[5] = v9;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  v16[2] = sub_25058AC98;
  void v16[3] = &block_descriptor_30;
  uint64_t v10 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v20 == 255)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v12 = v17;
  if (v20)
  {
    v16[0] = v17;
    id v15 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F38);
    swift_willThrowTypedImpl();
    sub_25058F83C(v17, v18, v19, v20);
    return swift_release();
  }
  else
  {
    uint64_t v13 = v18;
    unint64_t v14 = v19;
    uint64_t result = swift_release();
    *a3 = v12;
    a3[1] = v13;
    a3[2] = v14;
  }
  return result;
}

uint64_t sub_25058A6E0(uint64_t a1, uint64_t a2)
{
  id v12 = 0;
  unsigned __int8 v13 = -1;
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_25052810C;
  *(void *)(v6 + 24) = v5;
  v11[4] = sub_25058DF68;
  v11[5] = v6;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_25058AC98;
  void v11[3] = &block_descriptor_1;
  uint64_t v7 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_performBlockAndWait_, v7);
  _Block_release(v7);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v13 == 255)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (v13)
  {
    v11[0] = v12;
    id v10 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F38);
    swift_willThrowTypedImpl();
  }
  sub_250528148(v12, v13);
  return swift_release();
}

uint64_t sub_25058A8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  long long v19 = 0u;
  long long v20 = 0u;
  *(_OWORD *)uint64_t v18 = 0u;
  unsigned __int8 v21 = -1;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v18;
  void v8[3] = a1;
  v8[4] = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_25058F780;
  *(void *)(v9 + 24) = v8;
  v17[4] = sub_25058F860;
  v17[5] = v9;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  v17[2] = sub_25058AC98;
  uint64_t v17[3] = &block_descriptor_20;
  id v10 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v21 == 255)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v12 = v18[0];
  if (v21)
  {
    v17[0] = v18[0];
    id v16 = v18[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F38);
    swift_willThrowTypedImpl();
    sub_25058F79C(v18[0], (unint64_t)v18[1], v19, *((unint64_t *)&v19 + 1), v20, *((unint64_t *)&v20 + 1), v21);
    return swift_release();
  }
  else
  {
    id v13 = v18[1];
    long long v14 = v19;
    long long v15 = v20;
    uint64_t result = swift_release();
    *(void *)a3 = v12;
    *(void *)(a3 + 8) = v13;
    *(_OWORD *)(a3 + 16) = v14;
    *(_OWORD *)(a3 + 32) = v15;
  }
  return result;
}

void sub_25058AAC8(uint64_t a1, void (*a2)(int8x16_t *__return_ptr))
{
  a2(&v10);
  uint64_t v3 = v11;
  int32x2_t v4 = vdup_n_s32(0);
  v5.i64[0] = v4.u32[0];
  v5.i64[1] = v4.u32[1];
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  *(int8x16_t *)a1 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v5, 0x3FuLL)), (int8x16_t)0, v10);
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = 0;
  sub_25058F83C(v6, v7, v8, v9);
}

void sub_25058AB64(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v5);
  uint64_t v3 = *(void **)a1;
  *(void *)a1 = v5;
  unsigned __int8 v4 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = 0;
  sub_250528148(v3, v4);
}

void sub_25058ABD8(uint64_t a1, void (*a2)(_OWORD *__return_ptr))
{
  a2(v12);
  long long v3 = v12[1];
  long long v4 = v12[2];
  uint64_t v5 = *(void **)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  unint64_t v10 = *(void *)(a1 + 40);
  *(_OWORD *)a1 = v12[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = 0;
  sub_25058F79C(v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_25058AC70(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25058AC98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_25058ACC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  unint64_t v8 = sub_250569EE0(a2, a3, a5, a6);
  uint64_t v9 = sub_2505BE140();
  uint64_t v11 = v10;
  id v12 = (void *)*MEMORY[0x263F16E98];
  type metadata accessor for CFString(0);
  uint64_t v38 = v13;
  *(void *)&long long v37 = v12;
  sub_250527D34(&v37, v36);
  id v14 = v12;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v39 = v8;
  sub_2505143A4(v36, v9, v11, isUniquelyReferenced_nonNull_native);
  unint64_t v16 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_2505BE140();
  uint64_t v19 = v18;
  type metadata accessor for GKCrypto_GroupAccessInfo(0);
  sub_25058E064();
  uint64_t v20 = sub_2505BDB40();
  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = MEMORY[0x263F06F78];
    *(void *)&long long v37 = v20;
    *((void *)&v37 + 1) = v21;
    sub_250527D34(&v37, v36);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v39 = v16;
    sub_2505143A4(v36, v17, v19, v22);
    unint64_t v23 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_2505BE140();
    uint64_t v26 = v25;
    LODWORD(v37) = a4;
    uint64_t v27 = sub_2505BE770();
    uint64_t v38 = MEMORY[0x263F8D310];
    *(void *)&long long v37 = v27;
    *((void *)&v37 + 1) = v28;
    sub_250527D34(&v37, v36);
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v39 = v23;
    sub_2505143A4(v36, v24, v26, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    CFDictionaryRef v30 = (const __CFDictionary *)sub_2505BE0F0();
    swift_bridgeObjectRelease();
    OSStatus v31 = SecItemAdd(v30, 0);

    if (v31)
    {
      *(void *)&long long v37 = 0;
      *((void *)&v37 + 1) = 0xE000000000000000;
      sub_2505BE4B0();
      swift_bridgeObjectRelease();
      *(void *)&long long v37 = 0xD000000000000016;
      *((void *)&v37 + 1) = 0x80000002505CC490;
      CFStringRef v32 = SecCopyErrorMessageString(v31, 0);
      if (v32)
      {
        uint64_t v33 = (__CFString *)v32;
        sub_2505BE140();
      }
      else
      {
        LODWORD(v36[0]) = v31;
        sub_2505BE770();
      }
      sub_2505BE190();
      swift_bridgeObjectRelease();
      long long v34 = v37;
      sub_25056AC90();
      swift_allocError();
      *(_OWORD *)uint64_t v35 = v34;
      *(_DWORD *)(v35 + 16) = v31;
      swift_willThrow();
    }
  }
}

uint64_t sub_25058AFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  result[1] = *(CFTypeRef *)MEMORY[0x263EF8340];
  uint64_t v11 = sub_2505BDA70();
  MEMORY[0x270FA5388](v11 - 8, v12, v13, v14, v15);
  uint64_t v17 = &v76[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for GKCrypto_GroupAccessInfo(0);
  uint64_t v23 = MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
  uint64_t v91 = &v76[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v23, v25, v26, v27, v28);
  CFDictionaryRef v30 = &v76[-v29];
  uint64_t v88 = a2;
  uint64_t v89 = a3;
  uint64_t v90 = a4;
  sub_25056A068(a1, a2, a3, a4);
  result[0] = 0;
  CFDictionaryRef v31 = (const __CFDictionary *)sub_2505BE0F0();
  swift_bridgeObjectRelease();
  OSStatus v32 = SecItemCopyMatching(v31, result);

  CFTypeRef v33 = result[0];
  if (v32 == -25300)
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a5, 1, 1, v37);
    return swift_unknownObjectRelease();
  }
  if (v32)
  {
    *(void *)unint64_t v96 = 0;
    *(void *)&v96[8] = 0xE000000000000000;
    sub_2505BE4B0();
    swift_bridgeObjectRelease();
    *(void *)unint64_t v96 = 0xD000000000000016;
    *(void *)&v96[8] = 0x80000002505CC4B0;
    CFStringRef v38 = SecCopyErrorMessageString(v32, 0);
    if (v38)
    {
      unint64_t v39 = (__CFString *)v38;
      sub_2505BE140();
    }
    else
    {
      LODWORD(v95) = v32;
      sub_2505BE770();
    }
    sub_2505BE190();
    swift_bridgeObjectRelease();
    long long v41 = *(_OWORD *)v96;
    sub_25056AC90();
    swift_allocError();
    *(_OWORD *)uint64_t v42 = v41;
    *(_DWORD *)(v42 + 16) = v32;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  if (!result[0])
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BC0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a5, 1, 1, v40);
  }
  long long v34 = (const void *)swift_unknownObjectRetain();
  CFTypeID v35 = sub_25056B600(v34);
  if (v5) {
    return swift_unknownObjectRelease_n();
  }
  CFTypeID v43 = v35;
  char v86 = v30;
  char v87 = v17;
  int64_t v44 = *(void *)(v35 + 16);
  if (v44)
  {
    uint64_t v84 = v18;
    CFTypeRef v85 = v33;
    uint64_t v82 = a5;
    unint64_t v94 = (void *)MEMORY[0x263F8EE78];
    sub_250511E28(0, v44, 0);
    uint64_t v45 = 0;
    size_t v46 = v94;
    do
    {
      uint64_t v93 = *(void *)(v43 + 8 * v45 + 32);
      swift_bridgeObjectRetain();
      sub_25056A4D4(&v93, &v92, (uint64_t)v96);
      swift_bridgeObjectRelease();
      uint64_t v47 = *(unsigned int *)v96;
      long long v48 = *(_OWORD *)&v96[8];
      long long v49 = *(_OWORD *)&v96[24];
      unint64_t v94 = v46;
      unint64_t v51 = v46[2];
      unint64_t v50 = v46[3];
      if (v51 >= v50 >> 1)
      {
        long long v83 = *(_OWORD *)&v96[8];
        long long v81 = *(_OWORD *)&v96[24];
        sub_250511E28(v50 > 1, v51 + 1, 1);
        long long v49 = v81;
        long long v48 = v83;
        size_t v46 = v94;
      }
      uint64_t v46[2] = v51 + 1;
      int64_t v52 = &v46[5 * v51];
      *((_DWORD *)v52 + 8) = v47;
      ++v45;
      *(_OWORD *)(v52 + 5) = v48;
      *(_OWORD *)(v52 + 7) = v49;
    }
    while (v44 != v45);
    swift_bridgeObjectRelease();
    uint64_t v95 = v46;
    sub_25058B7D8(&v95);
    uint64_t v54 = v95;
    if (v95[2])
    {
      uint64_t v47 = 0;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v55 = v54[2];
        if (v55)
        {
LABEL_23:
          int64_t v56 = v55 - 1;
          size_t v57 = &v54[5 * v55 - 5];
          int v77 = *((_DWORD *)v57 + 8);
          *(void *)&long long v81 = v57[5];
          *(void *)&long long v83 = v57[6];
          unint64_t v58 = v57[8];
          uint64_t v80 = v57[7];
          v54[2] = v56;
          if (v56)
          {
            uint64_t v79 = v47;
            unint64_t v78 = v58;
            *(void *)unint64_t v96 = MEMORY[0x263F8EE78];
            swift_bridgeObjectRetain();
            sub_250511E08(0, v56, 0);
            uint64_t v59 = *(void *)v96;
            uint64_t v60 = v54 + 8;
            do
            {
              uint64_t v61 = *(v60 - 3);
              unint64_t v62 = *(v60 - 2);
              uint64_t v63 = *(v60 - 1);
              unint64_t v64 = *v60;
              sub_2504DBC4C(v61, v62);
              sub_2504DBC4C(v63, v64);
              sub_250511528(v61, v62);
              *(void *)unint64_t v96 = v59;
              unint64_t v66 = *(void *)(v59 + 16);
              unint64_t v65 = *(void *)(v59 + 24);
              if (v66 >= v65 >> 1)
              {
                sub_250511E08(v65 > 1, v66 + 1, 1);
                uint64_t v59 = *(void *)v96;
              }
              v60 += 5;
              *(void *)(v59 + 16) = v66 + 1;
              uint64_t v67 = v59 + 16 * v66;
              *(void *)(v67 + 32) = v63;
              *(void *)(v67 + 40) = v64;
              --v56;
            }
            while (v56);
            swift_bridgeObjectRelease_n();
            unint64_t v58 = v78;
            uint64_t v47 = v79;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v59 = MEMORY[0x263F8EE78];
          }
          uint64_t v68 = v47;
          sub_25056A25C(a1, v88, v59, v89, v90);
          uint64_t v69 = (uint64_t)v86;
          uint64_t v70 = (uint64_t)v91;
          uint64_t v71 = v80;
          swift_bridgeObjectRelease();
          if (v68)
          {
            swift_unknownObjectRelease();
            sub_250511528(v81, v83);
            sub_250511528(v71, v58);
          }
          else
          {
            uint64_t v72 = v81;
            sub_2504DBC4C(v81, v83);
            sub_2504DBC4C(v71, v58);
            sub_250511528(v71, v58);
            memset(v96, 0, sizeof(v96));
            sub_2505BDA60();
            sub_25058E064();
            sub_2505BDB30();
            sub_25058F2C4(v70, v69);
            swift_unknownObjectRelease();
            uint64_t v73 = v69;
            uint64_t v74 = v82;
            sub_25058F2C4(v73, v82);
            sub_250511528(v72, v83);
            sub_250511528(v71, v58);
            uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BC0);
            *(_DWORD *)(v74 + *(int *)(v75 + 36)) = v77;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
          }
          return swift_unknownObjectRelease();
        }
LABEL_35:
        __break(1u);
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v54 = sub_25058F1B8(v54);
    uint64_t v55 = v54[2];
    if (v55) {
      goto LABEL_23;
    }
    goto LABEL_35;
  }
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(a5, 1, 1, v53);
  swift_unknownObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25058B7D8(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25058F1B8(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_25058E1E4(v5);
  *a1 = v2;
  return result;
}

void sub_25058B848(_OWORD *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_2505BDA70();
  MEMORY[0x270FA5388](v11 - 8, v12, v13, v14, v15);
  uint64_t v16 = type metadata accessor for GKCrypto_GroupAccessInfo(0);
  MEMORY[0x270FA5388](v16, v17, v18, v19, v20);
  uint64_t v22 = (uint64_t *)((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43[0] = *a1;
  long long v45 = *a2;
  sub_25058BC8C((uint64_t *)v43, (uint64_t *)&v45, a3, a4);
  if (v5) {
    return;
  }
  uint64_t v24 = v23;
  if (!v23)
  {
    *(_OWORD *)a5 = xmmword_2505BFEE0;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_DWORD *)(a5 + 64) = 0;
    return;
  }
  unint64_t v25 = (unint64_t)objc_msgSend(v23, sel_version);
  if ((v25 & 0x8000000000000000) != 0 || HIDWORD(v25))
  {
LABEL_19:
    sub_2505BE5E0();
    __break(1u);
    JUMPOUT(0x25058BC7CLL);
  }
  unint64_t v46 = v25;
  id v26 = objc_msgSend(v24, sel_groupAccessInfo);
  if (!v26)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v27 = v26;
  sub_2505BD940();

  uint64_t v44 = 0;
  memset(v43, 0, sizeof(v43));
  sub_2505BDA60();
  sub_25058E064();
  sub_2505BDB30();
  uint64_t v29 = v22[1];
  unint64_t v28 = v22[2];
  switch(v28 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v29), v29))
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v31 = HIDWORD(v29) - (int)v29;
LABEL_14:
      sub_2504DBC4C(v22[1], v22[2]);
      if (v31 == 32)
      {
LABEL_15:
        uint64_t v34 = v22[3];
        unint64_t v35 = v22[4];
        sub_2504DBC4C(v34, v35);
        KeyOffset.init(_:)(v34, v35, (uint64_t *)v43);

        uint64_t v41 = *((void *)&v43[0] + 1);
        uint64_t v42 = *(void *)&v43[0];
        uint64_t v36 = v22[5];
        unint64_t v37 = v22[6];
        uint64_t v38 = v22[7];
        unint64_t v39 = v22[8];
        sub_2504DBC4C(v36, v37);
        sub_2504DBC4C(v38, v39);
        sub_25058E0BC((uint64_t)v22);
        *(void *)a5 = v29;
        *(void *)(a5 + 8) = v28;
        uint64_t v40 = v41;
        *(void *)(a5 + 16) = v42;
        *(void *)(a5 + 24) = v40;
        *(void *)(a5 + 32) = v36;
        *(void *)(a5 + 40) = v37;
        *(void *)(a5 + 48) = v38;
        *(void *)(a5 + 56) = v39;
        *(_DWORD *)(a5 + 64) = v46;
      }
      else
      {
LABEL_10:
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v30 = 263;
        *(_OWORD *)(v30 + 8) = xmmword_2505BFE90;
        *(_OWORD *)(v30 + 24) = xmmword_2505BFE50;
        *(void *)(v30 + 40) = 0x80000002505C8CB0;
        swift_willThrow();
        sub_250511528(v29, v28);
        sub_25058E0BC((uint64_t)v22);
      }
      return;
    case 2uLL:
      uint64_t v33 = *(void *)(v29 + 16);
      uint64_t v32 = *(void *)(v29 + 24);
      uint64_t v31 = v32 - v33;
      if (!__OFSUB__(v32, v33)) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 3uLL:
      goto LABEL_10;
    default:
      if (BYTE6(v28) != 32) {
        goto LABEL_10;
      }
      goto LABEL_15;
  }
}

void sub_25058BC8C(uint64_t *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v55 = a3;
  uint64_t v7 = sub_2505BD9F0();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x270FA5388](v7, v8, v9, v10, v11);
  unint64_t v51 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v15 = *a2;
  unint64_t v52 = a2[1];
  uint64_t v53 = v15;
  id v16 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v17 = (void *)sub_2505BE130();
  id v18 = objc_msgSend(v16, sel_initWithEntityName_, v17);
  id v58 = v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2021A0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2505C4F70;
  *(void *)(v19 + 32) = a4;
  uint64_t v59 = v19;
  sub_2505BE2D0();
  sub_25058DE24(0, &qword_26B202188);
  id v20 = a4;
  uint64_t v21 = (void *)sub_2505BE2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setAffectedStores_, v21);

  uint64_t v48 = sub_25058DE24(0, &qword_269AB6B88);
  swift_getKeyPath();
  uint64_t v49 = sub_2505BE3A0();
  swift_getKeyPath();
  uint64_t v50 = sub_2505BE3A0();
  sub_2504DBC4C(v14, v13);
  v47[7] = sub_2505BD990();
  v47[6] = sub_2505BD990();
  v47[5] = sub_2505BD990();
  v47[4] = sub_2505BD990();
  v47[3] = sub_2505BD990();
  uint64_t v47[2] = sub_2505BD990();
  v47[1] = sub_2505BD990();
  v47[0] = sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  uint64_t v22 = v51;
  sub_2505BD9C0();
  uint64_t v23 = v14;
  uint64_t v24 = v22;
  sub_250511528(v23, v13);
  sub_25058DE24(0, &qword_269AB6B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F30);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2505C0090;
  uint64_t v26 = v48;
  *(void *)(v25 + 56) = v48;
  uint64_t v27 = sub_25058DE60(&qword_269AB6B98, &qword_269AB6B88);
  *(void *)(v25 + 64) = v27;
  unint64_t v28 = (void *)v49;
  *(void *)(v25 + 32) = v49;
  id v29 = v28;
  uint64_t v30 = sub_2505BD9A0();
  *(void *)(v25 + 96) = sub_25058DE24(0, &qword_269AB6BA0);
  uint64_t v31 = sub_25058DE60(&qword_269AB6BA8, &qword_269AB6BA0);
  *(void *)(v25 + 72) = v30;
  *(void *)(v25 + 136) = v26;
  *(void *)(v25 + 144) = v27;
  uint64_t v32 = (void *)v50;
  *(void *)(v25 + 104) = v31;
  *(void *)(v25 + 112) = v32;
  id v33 = v32;
  uint64_t v34 = v54;
  uint64_t v59 = sub_2504DCA88(v53, v52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
  sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
  uint64_t v35 = sub_2505BE110();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 176) = MEMORY[0x263F8D310];
  *(void *)(v25 + 184) = sub_25058DEB0();
  *(void *)(v25 + 152) = v35;
  *(void *)(v25 + 160) = v37;
  id v38 = v58;
  unint64_t v39 = (void *)sub_2505BE390();
  objc_msgSend(v38, sel_setPredicate_, v39);

  id v40 = sub_250559368();
  type metadata accessor for GroupAccessInfoBlob();
  uint64_t v41 = sub_2505BE3F0();
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v57);

    return;
  }
  unint64_t v42 = v41;
  uint64_t v44 = v56;
  uint64_t v43 = v57;

  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_2505BE600();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v45 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v45) {
    goto LABEL_9;
  }
  if ((v42 & 0xC000000000000001) != 0)
  {
    MEMORY[0x25337F460](0, v42);
    goto LABEL_9;
  }
  if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v46 = *(id *)(v42 + 32);
LABEL_9:

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v43);
    return;
  }
  __break(1u);
}

uint64_t sub_25058C2F8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_groupID);
  if (v3)
  {
    long long v4 = v3;
    sub_2505BD9B0();

    uint64_t v5 = sub_2505BD9F0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_2505BD9F0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

void sub_25058C3C0(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB67E0);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2504DAEFC(a1, (uint64_t)v10, &qword_269AB67E0);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_2505BD9F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    uint64_t v14 = (void *)sub_2505BD9A0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, sel_setGroupID_, v14);
}

void sub_25058C4F4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_userID);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_2505BE140();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_25058C55C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_2505BE130();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setUserID_);
}

void sub_25058C5CC(uint64_t a1, void *a2, uint64_t a3, void *a4, unint64_t a5, uint64_t a6, unint64_t a7, unsigned int a8, uint64_t *a9, char a10)
{
  unsigned int v81 = a8;
  uint64_t v95 = *MEMORY[0x263EF8340];
  uint64_t v16 = type metadata accessor for GKCrypto_GroupAccessInfo(0);
  uint64_t v21 = MEMORY[0x270FA5388](v16, v17, v18, v19, v20);
  uint64_t v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v24, v25, v26, v27);
  id v29 = (char *)&v75 - v28;
  id v85 = a4;
  unint64_t v86 = a5;
  uint64_t v83 = a6;
  unint64_t v84 = a7;
  uint64_t v30 = v82;
  sub_25058BC8C((uint64_t *)&v85, &v83, a1, a2);
  if (!v30)
  {
    int v77 = a4;
    uint64_t v80 = v29;
    unint64_t v78 = a7;
    uint64_t v76 = a2;
    uint64_t v79 = a1;
    uint64_t v82 = 0;
    if (!v31)
    {
      if ((a10 & 1) == 0)
      {
        if (qword_269AB5410 != -1) {
          swift_once();
        }
        uint64_t v55 = sub_2505BDC40();
        __swift_project_value_buffer(v55, (uint64_t)qword_269AC3170);
        os_log_type_t v56 = sub_2505BE3D0();
        uint64_t v57 = sub_2505BDC20();
        os_log_type_t v58 = v56;
        if (os_log_type_enabled(v57, v56))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v59 = 0;
          _os_log_impl(&dword_2504D2000, v57, v58, "Attempted to update GroupAccessInfo that does not exist", v59, 2u);
          MEMORY[0x25337FF10](v59, -1, -1);
        }

        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v60 = 390;
        *(_OWORD *)(v60 + 8) = xmmword_2505C6110;
        *(void *)(v60 + 24) = 0x80000002505CC390;
        *(void *)(v60 + 32) = 0xD000000000000064;
        *(void *)(v60 + 40) = 0x80000002505CC3F0;
LABEL_24:
        swift_willThrow();
        return;
      }
      uint64_t v35 = (uint64_t)v23;
      *(_DWORD *)uint64_t v23 = 0;
      sub_25058DFD8(a9, (void (*)(uint64_t, uint64_t))sub_2504DBC4C);
      sub_2505BDA40();
      long long v43 = *(_OWORD *)a9;
      long long v93 = *((_OWORD *)a9 + 1);
      long long v44 = v93;
      long long v94 = v43;
      *(_OWORD *)(v23 + 8) = v43;
      *(_OWORD *)(v23 + 24) = v44;
      long long v45 = *((_OWORD *)a9 + 2);
      long long v91 = *((_OWORD *)a9 + 3);
      long long v46 = v91;
      long long v92 = v45;
      *(_OWORD *)(v23 + 40) = v45;
      *(_OWORD *)(v23 + 56) = v46;
      sub_25058DFA8((uint64_t)&v94);
      sub_25058DFA8((uint64_t)&v93);
      sub_25058DFA8((uint64_t)&v92);
      sub_25058DFA8((uint64_t)&v91);
      sub_25058DFD8(a9, (void (*)(uint64_t, uint64_t))sub_250511528);
      sub_25058E064();
      uint64_t v47 = v82;
      uint64_t v48 = sub_2505BDB40();
      if (v47)
      {
        sub_25058E0BC((uint64_t)v23);
        return;
      }
      uint64_t v69 = v48;
      unint64_t v70 = v49;
      uint64_t v82 = type metadata accessor for GroupAccessInfoBlob();
      id v71 = sub_250559368();
      id v85 = v77;
      unint64_t v86 = a5;
      unint64_t v72 = v78;
      uint64_t v83 = a6;
      unint64_t v84 = v78;
      sub_2504DBC4C((uint64_t)v77, a5);
      sub_2504DBC4C(a6, v72);
      sub_2504DBC4C(v69, v70);
      id v73 = sub_25055FC30(v71, (uint64_t *)&v85, &v83, v69, v70, v81);
      id v74 = sub_250559368();
      objc_msgSend(v74, sel_assignObject_toPersistentStore_, v73, v76);

      sub_250511528(v69, v70);
LABEL_21:
      sub_25058E0BC(v35);
      id v65 = sub_250559368();
      id v85 = 0;
      unsigned __int8 v66 = objc_msgSend(v65, sel_save_, &v85);

      if (v66)
      {
        id v67 = v85;
        return;
      }
      id v68 = v85;
      sub_2505BD840();

      goto LABEL_24;
    }
    uint64_t v32 = v31;
    id v33 = objc_msgSend(v31, sel_version);
    unsigned int v34 = v81;
    if ((uint64_t)v33 < v81)
    {
      uint64_t v35 = (uint64_t)v80;
      *uint64_t v80 = 0;
      sub_25058DFD8(a9, (void (*)(uint64_t, uint64_t))sub_2504DBC4C);
      sub_2505BDA40();
      long long v36 = *(_OWORD *)a9;
      long long v89 = *((_OWORD *)a9 + 1);
      long long v37 = v89;
      long long v90 = v36;
      *(_OWORD *)(v35 + 8) = v36;
      *(_OWORD *)(v35 + 24) = v37;
      long long v38 = *((_OWORD *)a9 + 2);
      long long v87 = *((_OWORD *)a9 + 3);
      long long v39 = v87;
      long long v88 = v38;
      *(_OWORD *)(v35 + 40) = v38;
      *(_OWORD *)(v35 + 56) = v39;
      sub_25058DFA8((uint64_t)&v90);
      sub_25058DFA8((uint64_t)&v89);
      sub_25058DFA8((uint64_t)&v88);
      sub_25058DFA8((uint64_t)&v87);
      sub_25058DFD8(a9, (void (*)(uint64_t, uint64_t))sub_250511528);
      sub_25058E064();
      uint64_t v40 = v82;
      uint64_t v41 = sub_2505BDB40();
      if (v40)
      {
        sub_25058E0BC(v35);

        return;
      }
      uint64_t v62 = v41;
      unint64_t v63 = v42;
      unint64_t v64 = (void *)sub_2505BD920();
      objc_msgSend(v32, sel_setGroupAccessInfo_, v64);

      objc_msgSend(v32, sel_setVersion_, v34);
      sub_250511528(v62, v63);

      goto LABEL_21;
    }
    if (qword_269AB5410 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_2505BDC40();
    __swift_project_value_buffer(v50, (uint64_t)qword_269AC3170);
    os_log_type_t v51 = sub_2505BE3C0();
    id v52 = v32;
    uint64_t v53 = sub_2505BDC20();
    if (os_log_type_enabled(v53, v51))
    {
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 134218240;
      id v85 = objc_msgSend(v52, sel_version);
      sub_2505BE430();

      *(_WORD *)(v54 + 12) = 1024;
      LODWORD(v85) = v34;
      sub_2505BE430();
      _os_log_impl(&dword_2504D2000, v53, v51, "Attempted to update existing GroupAccessInfo at version %lld with version %u", (uint8_t *)v54, 0x12u);
      MEMORY[0x25337FF10](v54, -1, -1);
    }
    else
    {
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v61 = 389;
    *(_OWORD *)(v61 + 8) = xmmword_2505C6100;
    *(void *)(v61 + 24) = 0x80000002505CC390;
    *(void *)(v61 + 32) = 0xD000000000000064;
    *(void *)(v61 + 40) = 0x80000002505CC3F0;
    swift_willThrow();
  }
}

void sub_25058CDB0(uint64_t *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v65 = a3;
  v69[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = sub_2505BD9F0();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  MEMORY[0x270FA5388](v7, v8, v9, v10, v11);
  id v68 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v15 = *a2;
  unint64_t v63 = a2[1];
  uint64_t v64 = v15;
  id v16 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v17 = (void *)sub_2505BE130();
  id v18 = objc_msgSend(v16, sel_initWithEntityName_, v17);
  id v67 = v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2021A0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2505C4F70;
  *(void *)(v19 + 32) = a4;
  v69[0] = (id)v19;
  sub_2505BE2D0();
  sub_25058DE24(0, &qword_26B202188);
  id v20 = a4;
  uint64_t v21 = (void *)sub_2505BE2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setAffectedStores_, v21);

  uint64_t v60 = sub_25058DE24(0, &qword_269AB6B88);
  swift_getKeyPath();
  id v61 = (id)sub_2505BE3A0();
  swift_getKeyPath();
  uint64_t v62 = sub_2505BE3A0();
  sub_2504DBC4C(v14, v13);
  int v59 = sub_2505BD990();
  int v58 = sub_2505BD990();
  int v57 = sub_2505BD990();
  int v56 = sub_2505BD990();
  int v55 = sub_2505BD990();
  int v54 = sub_2505BD990();
  int v53 = sub_2505BD990();
  int v52 = sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  uint64_t v22 = v68;
  sub_2505BD9C0();
  sub_250511528(v14, v13);
  sub_25058DE24(0, &qword_269AB6B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F30);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_2505C0090;
  uint64_t v24 = v60;
  *(void *)(v23 + 56) = v60;
  uint64_t v25 = sub_25058DE60(&qword_269AB6B98, &qword_269AB6B88);
  *(void *)(v23 + 64) = v25;
  id v26 = v61;
  *(void *)(v23 + 32) = v61;
  id v61 = v26;
  uint64_t v27 = sub_2505BD9A0();
  *(void *)(v23 + 96) = sub_25058DE24(0, &qword_269AB6BA0);
  uint64_t v28 = sub_25058DE60(&qword_269AB6BA8, &qword_269AB6BA0);
  *(void *)(v23 + 72) = v27;
  *(void *)(v23 + 136) = v24;
  *(void *)(v23 + 144) = v25;
  id v29 = (void *)v62;
  *(void *)(v23 + 104) = v28;
  *(void *)(v23 + 112) = v29;
  id v30 = v29;
  id v31 = v66;
  v69[0] = (id)sub_2504DCA88(v64, v63);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
  sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
  uint64_t v32 = sub_2505BE110();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 176) = MEMORY[0x263F8D310];
  *(void *)(v23 + 184) = sub_25058DEB0();
  *(void *)(v23 + 152) = v32;
  *(void *)(v23 + 160) = v34;
  id v35 = v67;
  long long v36 = (void *)sub_2505BE390();
  objc_msgSend(v35, sel_setPredicate_, v36);

  id v37 = sub_250559368();
  type metadata accessor for GroupAccessInfoBlob();
  uint64_t v38 = sub_2505BE3F0();
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v51);

    goto LABEL_14;
  }
  unint64_t v39 = v38;
  id v66 = v30;

  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_2505BE600();
    swift_bridgeObjectRelease();
    if (v40) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v40)
    {
LABEL_5:
      if (v40 < 1) {
        __break(1u);
      }
      uint64_t v41 = 0;
      do
      {
        if ((v39 & 0xC000000000000001) != 0) {
          id v42 = (id)MEMORY[0x25337F460](v41, v39);
        }
        else {
          id v42 = *(id *)(v39 + 8 * v41 + 32);
        }
        long long v43 = v42;
        ++v41;
        id v44 = sub_250559368();
        objc_msgSend(v44, sel_deleteObject_, v43);
      }
      while (v40 != v41);
    }
  }
  swift_bridgeObjectRelease();
  id v45 = sub_250559368();
  v69[0] = 0;
  unsigned __int8 v46 = objc_msgSend(v45, sel_save_, v69);

  if ((v46 & 1) == 0)
  {
    id v49 = v69[0];
    sub_2505BD840();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v68, v51);
    return;
  }
  uint64_t v47 = *(void (**)(char *, uint64_t))(v50 + 8);
  id v48 = v69[0];
  v47(v68, v51);

LABEL_14:
}

void sub_25058D500(_OWORD *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_25058B848(a1, a2, *(void *)v3, *(void **)(v3 + 8), a3);
}

void sub_25058D520(uint64_t *a1, uint64_t *a2, _OWORD *a3, int a4)
{
  char v6 = *((unsigned char *)v4 + 16);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  long long v9 = a3[1];
  v25[0] = *a3;
  v25[1] = v9;
  long long v10 = a3[3];
  long long v25[2] = a3[2];
  v25[3] = v10;
  long long v14 = *v4;
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  id v13 = sub_250559368();
  long long v16 = v14;
  char v17 = v6;
  uint64_t v18 = v7;
  uint64_t v19 = v8;
  uint64_t v20 = v11;
  uint64_t v21 = v12;
  int v22 = a4;
  uint64_t v23 = v25;
  char v24 = 1;
  sub_25058A6E0((uint64_t)sub_25058DF04, (uint64_t)v15);
}

void sub_25058D5E8(uint64_t *a1, uint64_t *a2)
{
  sub_25058CDB0(a1, a2, *(void *)v2, *(void **)(v2 + 8));
}

uint64_t sub_25058D604(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  int v29 = a4;
  uint64_t v9 = type metadata accessor for GKCrypto_GroupAccessInfo(0);
  uint64_t v14 = MEMORY[0x270FA5388](v9 - 8, v10, v11, v12, v13);
  long long v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  v28[1] = a1[1];
  void v28[2] = v17;
  uint64_t v18 = *a2;
  void v28[3] = a2[1];
  v28[4] = v18;
  uint64_t v19 = *a3;
  unint64_t v20 = a3[1];
  uint64_t v21 = a3[2];
  unint64_t v22 = a3[3];
  uint64_t v23 = a3[4];
  unint64_t v24 = a3[5];
  uint64_t v25 = a3[6];
  unint64_t v26 = a3[7];
  v28[0] = &v16[*(int *)(v14 + 44)];
  *(_DWORD *)long long v16 = 0;
  sub_2504DBC4C(v19, v20);
  sub_2504DBC4C(v21, v22);
  sub_2504DBC4C(v23, v24);
  sub_2504DBC4C(v25, v26);
  sub_2505BDA40();
  *((void *)v16 + 1) = v19;
  *((void *)v16 + 2) = v20;
  *((void *)v16 + 3) = v21;
  *((void *)v16 + 4) = v22;
  *((void *)v16 + 5) = v23;
  *((void *)v16 + 6) = v24;
  *((void *)v16 + 7) = v25;
  *((void *)v16 + 8) = v26;
  sub_2504DBC4C(v19, v20);
  sub_2504DBC4C(v21, v22);
  sub_2504DBC4C(v23, v24);
  sub_2504DBC4C(v25, v26);
  sub_250511528(v19, v20);
  sub_250511528(v21, v22);
  sub_250511528(v23, v24);
  sub_250511528(v25, v26);
  uint64_t v32 = 0;
  uint64_t v33 = 0xE000000000000000;
  sub_2505BE4B0();
  swift_bridgeObjectRelease();
  uint64_t v32 = 0xD000000000000020;
  uint64_t v33 = 0x80000002505CC460;
  sub_2505BD930();
  sub_2505BE190();
  swift_bridgeObjectRelease();
  sub_2505BE190();
  sub_2505BD930();
  sub_2505BE190();
  swift_bridgeObjectRelease();
  sub_25058ACC0((uint64_t)v16, v32, v33, v29, v30, v31);
  sub_25058E0BC((uint64_t)v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25058D834@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  uint64_t v47 = a3;
  uint64_t v3 = type metadata accessor for GKCrypto_GroupAccessInfo(0);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  unsigned __int8 v46 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BB8);
  MEMORY[0x270FA5388](v9 - 8, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BC0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = 0;
  uint64_t v51 = 0xE000000000000000;
  sub_2505BE4B0();
  swift_bridgeObjectRelease();
  uint64_t v50 = 0xD000000000000020;
  uint64_t v51 = 0x80000002505CC460;
  sub_2505BD930();
  sub_2505BE190();
  swift_bridgeObjectRelease();
  sub_2505BE190();
  sub_2505BD930();
  sub_2505BE190();
  swift_bridgeObjectRelease();
  uint64_t v24 = v52;
  sub_25058AFEC(v50, v51, v48, v49, (uint64_t)v15);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v24)
  {
    uint64_t v26 = (uint64_t)v23;
    uint64_t v27 = (uint64_t)v46;
    uint64_t v28 = v47;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      uint64_t result = sub_2504DAF60((uint64_t)v15, &qword_269AB6BB8);
      *(_OWORD *)uint64_t v28 = xmmword_2505BFEE0;
      *(_OWORD *)(v28 + 16) = 0u;
      *(_OWORD *)(v28 + 32) = 0u;
      *(_OWORD *)(v28 + 48) = 0u;
      *(_DWORD *)(v28 + 64) = 0;
    }
    else
    {
      uint64_t v29 = v16;
      sub_25058E118((uint64_t)v15, v26);
      uint64_t v30 = (void *)v27;
      sub_25058E180(v26, v27);
      uint64_t v32 = *(void *)(v27 + 8);
      unint64_t v31 = *(void *)(v27 + 16);
      switch(v31 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v32), v32))
          {
            __break(1u);
LABEL_14:
            __break(1u);
            JUMPOUT(0x25058DC90);
          }
          uint64_t v34 = HIDWORD(v32) - (int)v32;
LABEL_10:
          sub_2504DBC4C(v32, v31);
          if (v34 == 32)
          {
LABEL_11:
            uint64_t v37 = v30[3];
            unint64_t v38 = v30[4];
            sub_2504DBC4C(v37, v38);
            KeyOffset.init(_:)(v37, v38, &v50);
            uint64_t v52 = v50;
            unint64_t v39 = v30[6];
            uint64_t v48 = v30[5];
            uint64_t v49 = v51;
            uint64_t v45 = v29;
            uint64_t v40 = v30[7];
            unint64_t v41 = v30[8];
            sub_2504DBC4C(v48, v39);
            sub_2504DBC4C(v40, v41);
            sub_25058E0BC((uint64_t)v30);
            int v42 = *(_DWORD *)(v26 + *(int *)(v45 + 36));
            uint64_t result = sub_2504DAF60(v26, &qword_269AB6BC0);
            *(void *)uint64_t v28 = v32;
            *(void *)(v28 + 8) = v31;
            uint64_t v43 = v49;
            *(void *)(v28 + 16) = v52;
            *(void *)(v28 + 24) = v43;
            *(void *)(v28 + 32) = v48;
            *(void *)(v28 + 40) = v39;
            *(void *)(v28 + 48) = v40;
            *(void *)(v28 + 56) = v41;
            *(_DWORD *)(v28 + 64) = v42;
          }
          else
          {
LABEL_6:
            __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
            sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
            swift_allocError();
            *(_WORD *)uint64_t v33 = 263;
            *(_OWORD *)(v33 + 8) = xmmword_2505BFE90;
            *(_OWORD *)(v33 + 24) = xmmword_2505BFE50;
            *(void *)(v33 + 40) = 0x80000002505C8CB0;
            swift_willThrow();
            sub_250511528(v32, v31);
            sub_25058E0BC((uint64_t)v30);
            uint64_t result = sub_2504DAF60(v26, &qword_269AB6BC0);
          }
          break;
        case 2uLL:
          uint64_t v36 = *(void *)(v32 + 16);
          uint64_t v35 = *(void *)(v32 + 24);
          uint64_t v34 = v35 - v36;
          if (!__OFSUB__(v35, v36)) {
            goto LABEL_10;
          }
          goto LABEL_14;
        case 3uLL:
          goto LABEL_6;
        default:
          if (BYTE6(v31) != 32) {
            goto LABEL_6;
          }
          goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_25058DCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25058DDA8@<X0>(uint64_t a1@<X8>)
{
  return sub_25058D834(*v1, v1[1], a1);
}

uint64_t sub_25058DDC4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4)
{
  return sub_25058D604(a1, a2, a3, a4, *v4, v4[1]);
}

uint64_t sub_25058DDE0(uint64_t a1, uint64_t a2)
{
  return sub_25058DCA0(a1, a2, *v2, v2[1]);
}

char *keypath_get_selector_groupID()
{
  return sel_groupID;
}

char *keypath_get_selector_userID()
{
  return sel_userID;
}

uint64_t sub_25058DE24(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_25058DE60(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25058DE24(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25058DEB0()
{
  unint64_t result = qword_269AB6BB0;
  if (!qword_269AB6BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6BB0);
  }
  return result;
}

void sub_25058DF04()
{
  sub_25058C5CC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(_DWORD *)(v0 + 72), *(uint64_t **)(v0 + 80), *(unsigned char *)(v0 + 88));
}

uint64_t sub_25058DF48()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25058DF58()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25058DF68()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_25058DFA8(uint64_t a1)
{
  return a1;
}

uint64_t *sub_25058DFD8(uint64_t *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  a2(*a1, a1[1]);
  a2(v4, v5);
  a2(v6, v7);
  a2(v8, v9);
  return a1;
}

unint64_t sub_25058E064()
{
  unint64_t result = qword_269AB6110;
  if (!qword_269AB6110)
  {
    type metadata accessor for GKCrypto_GroupAccessInfo(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6110);
  }
  return result;
}

uint64_t sub_25058E0BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GKCrypto_GroupAccessInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25058E118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25058E180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GKCrypto_GroupAccessInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25058E1E4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2505BE760();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v93 = 0;
      uint64_t v94 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v96 = *(_DWORD *)(v94 + 40 * i);
        uint64_t v97 = v93;
        do
        {
          uint64_t v98 = v94 + v97;
          if (*(_DWORD *)(v94 + v97) < v96) {
            break;
          }
          if (!v94) {
            goto LABEL_140;
          }
          uint64_t v99 = v94 + v97;
          long long v100 = *(_OWORD *)(v94 + v97 + 48);
          long long v101 = *(_OWORD *)(v94 + v97 + 64);
          long long v102 = *(_OWORD *)(v98 + 16);
          *(_OWORD *)(v94 + v97 + 40) = *(_OWORD *)v98;
          *(_OWORD *)(v94 + v97 + 56) = v102;
          *(void *)(v94 + v97 + 72) = *(void *)(v98 + 32);
          *(_DWORD *)uint64_t v99 = v96;
          *(_OWORD *)(v99 + 8) = v100;
          *(_OWORD *)(v99 + 24) = v101;
          v97 -= 40;
        }
        while (v97 != -40);
        v93 += 40;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v112 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v103 = v12;
      uint64_t v114 = v9;
      if (v13 >= 2)
      {
        uint64_t v104 = *v112;
        do
        {
          unint64_t v105 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v104) {
            goto LABEL_144;
          }
          uint64_t v106 = v103;
          uint64_t v107 = *(void *)&v103[16 * v105 + 32];
          uint64_t v108 = *(void *)&v103[16 * v13 + 24];
          sub_25058E914((char *)(v104 + 40 * v107), (char *)(v104 + 40 * *(void *)&v103[16 * v13 + 16]), v104 + 40 * v108, __dst);
          if (v1) {
            break;
          }
          if (v108 < v107) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v106 = sub_25058F1A4((uint64_t)v106);
          }
          if (v105 >= *((void *)v106 + 2)) {
            goto LABEL_133;
          }
          uint64_t v109 = &v106[16 * v105 + 32];
          *(void *)uint64_t v109 = v107;
          *((void *)v109 + 1) = v108;
          unint64_t v110 = *((void *)v106 + 2);
          if (v13 > v110) {
            goto LABEL_134;
          }
          memmove(&v106[16 * v13 + 16], &v106[16 * v13 + 32], 16 * (v110 - v13));
          uint64_t v103 = v106;
          *((void *)v106 + 2) = v110 - 1;
          unint64_t v13 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v114 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v114 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E30);
    uint64_t v8 = sub_2505BE2F0();
    *(void *)(v8 + 16) = v7;
    uint64_t v114 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v113 = *a1 + 80;
  uint64_t v111 = *a1 - 40;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v115 = v6;
  uint64_t v116 = v3;
  uint64_t v117 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(_DWORD *)(v11 + 40 * v10);
      unsigned int v16 = *(_DWORD *)(v11 + 40 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (unsigned int *)(v113 + 40 * v14);
        unsigned int v18 = v15;
        while (1)
        {
          unsigned int v20 = *v17;
          v17 += 10;
          unsigned int v19 = v20;
          if (v16 >= v15 == v18 < v20) {
            break;
          }
          ++v10;
          unsigned int v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v16 >= v15)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 40 * v10;
          uint64_t v22 = 40 * v14;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              int v26 = *(_DWORD *)(v11 + v22);
              uint64_t v27 = v11 + v21;
              long long v28 = *(_OWORD *)(v11 + v22 + 8);
              long long v29 = *(_OWORD *)(v11 + v22 + 24);
              uint64_t v30 = *(void *)(v11 + v21 - 8);
              long long v31 = *(_OWORD *)(v11 + v21 - 24);
              *(_OWORD *)uint64_t v25 = *(_OWORD *)(v11 + v21 - 40);
              *(_OWORD *)(v25 + 16) = v31;
              *(void *)(v25 + 32) = v30;
              *(_DWORD *)(v27 - 40) = v26;
              *(_OWORD *)(v27 - 32) = v28;
              *(_OWORD *)(v27 - 16) = v29;
            }
            ++v24;
            v21 -= 40;
            v22 += 40;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v32 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v32 >= v3) {
      uint64_t v32 = v3;
    }
    if (v32 < v14) {
      break;
    }
    if (v10 != v32)
    {
      uint64_t v33 = v111 + 40 * v10;
      do
      {
        unsigned int v34 = *(_DWORD *)(v11 + 40 * v10);
        uint64_t v35 = v14;
        uint64_t v36 = v33;
        do
        {
          uint64_t v37 = v36 + 40;
          if (*(_DWORD *)v36 < v34) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          long long v38 = *(_OWORD *)(v36 + 48);
          long long v39 = *(_OWORD *)(v36 + 64);
          long long v40 = *(_OWORD *)(v36 + 16);
          *(_OWORD *)uint64_t v37 = *(_OWORD *)v36;
          *(_OWORD *)(v36 + 56) = v40;
          uint64_t v41 = *(void *)(v36 + 32);
          *(_DWORD *)uint64_t v36 = v34;
          *(_OWORD *)(v36 + 8) = v38;
          *(_OWORD *)(v36 + 24) = v39;
          v36 -= 40;
          ++v35;
          *(void *)(v37 + 32) = v41;
        }
        while (v10 != v35);
        ++v10;
        v33 += 40;
      }
      while (v10 != v32);
      uint64_t v10 = v32;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_25058EBC8(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v43 = *((void *)v12 + 2);
    unint64_t v42 = *((void *)v12 + 3);
    unint64_t v13 = v43 + 1;
    uint64_t v11 = v117;
    if (v43 >= v42 >> 1)
    {
      long long v92 = sub_25058EBC8((char *)(v42 > 1), v43 + 1, 1, v12);
      uint64_t v11 = v117;
      uint64_t v12 = v92;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v44 = v12 + 32;
    uint64_t v45 = &v12[16 * v43 + 32];
    *(void *)uint64_t v45 = v14;
    *((void *)v45 + 1) = v10;
    if (v43)
    {
      while (1)
      {
        unint64_t v46 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v51 = &v44[16 * v13];
          uint64_t v52 = *((void *)v51 - 8);
          uint64_t v53 = *((void *)v51 - 7);
          BOOL v57 = __OFSUB__(v53, v52);
          uint64_t v54 = v53 - v52;
          if (v57) {
            goto LABEL_119;
          }
          uint64_t v56 = *((void *)v51 - 6);
          uint64_t v55 = *((void *)v51 - 5);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v49 = v55 - v56;
          char v50 = v57;
          if (v57) {
            goto LABEL_120;
          }
          unint64_t v58 = v13 - 2;
          int v59 = &v44[16 * v13 - 32];
          uint64_t v61 = *(void *)v59;
          uint64_t v60 = *((void *)v59 + 1);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v57) {
            goto LABEL_122;
          }
          BOOL v57 = __OFADD__(v49, v62);
          uint64_t v63 = v49 + v62;
          if (v57) {
            goto LABEL_125;
          }
          if (v63 >= v54)
          {
            unsigned int v81 = &v44[16 * v46];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v57 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v57) {
              goto LABEL_129;
            }
            BOOL v74 = v49 < v84;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v75 = *((void *)v12 + 4);
            uint64_t v76 = *((void *)v12 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
            goto LABEL_77;
          }
          uint64_t v48 = *((void *)v12 + 4);
          uint64_t v47 = *((void *)v12 + 5);
          BOOL v57 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          char v50 = v57;
        }
        if (v50) {
          goto LABEL_121;
        }
        unint64_t v58 = v13 - 2;
        uint64_t v64 = &v44[16 * v13 - 32];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v68 = v65 - v66;
        char v69 = v67;
        if (v67) {
          goto LABEL_124;
        }
        unint64_t v70 = &v44[16 * v46];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v57 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v57) {
          goto LABEL_127;
        }
        if (__OFADD__(v68, v73)) {
          goto LABEL_128;
        }
        if (v68 + v73 >= v49)
        {
          BOOL v74 = v49 < v73;
LABEL_83:
          if (v74) {
            unint64_t v46 = v58;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v69) {
          goto LABEL_123;
        }
        int v77 = &v44[16 * v46];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v57 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v57) {
          goto LABEL_126;
        }
        if (v80 < v68) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v85 = v46 - 1;
        if (v46 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        unint64_t v86 = v12;
        long long v87 = &v44[16 * v85];
        uint64_t v88 = *(void *)v87;
        long long v89 = &v44[16 * v46];
        uint64_t v90 = *((void *)v89 + 1);
        sub_25058E914((char *)(v11 + 40 * *(void *)v87), (char *)(v11 + 40 * *(void *)v89), v11 + 40 * v90, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v90 < v88) {
          goto LABEL_116;
        }
        if (v46 > *((void *)v86 + 2)) {
          goto LABEL_117;
        }
        *(void *)long long v87 = v88;
        *(void *)&v44[16 * v85 + 8] = v90;
        unint64_t v91 = *((void *)v86 + 2);
        if (v46 >= v91) {
          goto LABEL_118;
        }
        uint64_t v12 = v86;
        unint64_t v13 = v91 - 1;
        memmove(&v44[16 * v46], v89 + 16, 16 * (v91 - 1 - v46));
        *((void *)v86 + 2) = v91 - 1;
        uint64_t v11 = v117;
        if (v91 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v115;
    uint64_t v3 = v116;
    if (v10 >= v116)
    {
      uint64_t v9 = v114;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_2505BE5E0();
  __break(1u);
  return result;
}

uint64_t sub_25058E914(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v30 = __src;
  long long v29 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[40 * v11] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      unsigned int v18 = &v4[40 * v11];
      long long v28 = v18;
      uint64_t v30 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v19 = a3 - 40;
        unsigned int v20 = v6;
        while (1)
        {
          uint64_t v21 = (char *)(v19 + 40);
          unsigned int v22 = *((_DWORD *)v20 - 10);
          v20 -= 40;
          if (v22 >= *((_DWORD *)v18 - 10))
          {
            if (v21 != v6 || v19 >= (unint64_t)v6)
            {
              long long v25 = *(_OWORD *)v20;
              long long v26 = *((_OWORD *)v20 + 1);
              *(void *)(v19 + 32) = *((void *)v20 + 4);
              *(_OWORD *)unint64_t v19 = v25;
              *(_OWORD *)(v19 + 16) = v26;
            }
            uint64_t v30 = v20;
            if (v20 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            long long v28 = v18 - 40;
            if (v21 < v18 || v19 >= (unint64_t)v18 || v21 != v18)
            {
              long long v23 = *(_OWORD *)(v18 - 40);
              long long v24 = *(_OWORD *)(v18 - 24);
              *(void *)(v19 + 32) = *((void *)v18 - 1);
              *(_OWORD *)unint64_t v19 = v23;
              *(_OWORD *)(v19 + 16) = v24;
            }
            unsigned int v20 = v6;
            v18 -= 40;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          v19 -= 40;
          uint64_t v6 = v20;
          if (v18 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    uint64_t v12 = &v4[40 * v9];
    long long v28 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        if (*(_DWORD *)v4 >= *(_DWORD *)v6)
        {
          unsigned int v15 = v6 + 40;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            long long v16 = *(_OWORD *)v6;
            long long v17 = *((_OWORD *)v6 + 1);
            *((void *)v7 + 4) = *((void *)v6 + 4);
            *(_OWORD *)uint64_t v7 = v16;
            *((_OWORD *)v7 + 1) = v17;
          }
        }
        else
        {
          if (v7 != v4)
          {
            long long v13 = *(_OWORD *)v4;
            long long v14 = *((_OWORD *)v4 + 1);
            *((void *)v7 + 4) = *((void *)v4 + 4);
            *(_OWORD *)uint64_t v7 = v13;
            *((_OWORD *)v7 + 1) = v14;
          }
          v4 += 40;
          long long v29 = v4;
          unsigned int v15 = v6;
        }
        v7 += 40;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v30 = v7;
    }
LABEL_38:
    sub_25058ECC4((void **)&v30, (const void **)&v29, &v28);
    return 1;
  }
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

char *sub_25058EBC8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BC8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  long long v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25058ECC4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_2505BE650();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_25058ED90(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_2505BE650();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_25058EE4C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for UserKeyingInfo(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_2505BE650();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_25058EF8C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_25058EFA4(a1, a2, a3, &qword_269AB5FC8);
}

uint64_t sub_25058EF98(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_25058EFA4(a1, a2, a3, &qword_269AB5E90);
}

uint64_t sub_25058EFA4(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_2505BE650();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_25058F0E8(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_2505BE650();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_25058F1A4(uint64_t a1)
{
  return sub_25058EBC8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_25058F1B8(void *a1)
{
  return sub_250570C9C(0, a1[2], 0, a1);
}

uint64_t sub_25058F1CC(unint64_t a1)
{
  return sub_2505711B8(0, *(void *)(a1 + 16), 0, a1);
}

void sub_25058F1E4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2505BE600();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x25337F470);
}

uint64_t sub_25058F260(uint64_t a1)
{
  return sub_2505121F4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25058F274(void *a1)
{
  return sub_250512518(0, a1[2], 0, a1);
}

uint64_t sub_25058F288(void *a1)
{
  return sub_250512538(0, a1[2], 0, a1);
}

uint64_t sub_25058F29C(void *a1)
{
  return sub_250512504(0, a1[2], 0, a1);
}

void sub_25058F2B0()
{
}

uint64_t sub_25058F2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GKCrypto_GroupAccessInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25058F328(uint64_t a1, char a2)
{
  if (a2)
  {
    if (*(unsigned char *)(a1 + 144) == 1)
    {
      uint64_t v10 = qword_269AB5410;
      swift_retain();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_2505BDC40();
      __swift_project_value_buffer(v11, (uint64_t)qword_269AC3170);
      os_log_type_t v12 = sub_2505BE3D0();
      long long v13 = sub_2505BDC20();
      if (os_log_type_enabled(v13, v12))
      {
        long long v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v14 = 0;
        _os_log_impl(&dword_2504D2000, v13, v12, "Failed to initialize CoreDataInteraction due to uninitialized strictPeersStoreIndex", v14, 2u);
        MEMORY[0x25337FF10](v14, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(unsigned char *)uint64_t v8 = -94;
      uint64_t v9 = 149;
      goto LABEL_14;
    }
  }
  else
  {
    if (*(unsigned char *)(a1 + 160) == 1)
    {
      uint64_t v3 = qword_269AB5410;
      swift_retain();
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_2505BDC40();
      __swift_project_value_buffer(v4, (uint64_t)qword_269AC3170);
      os_log_type_t v5 = sub_2505BE3D0();
      uint64_t v6 = sub_2505BDC20();
      if (os_log_type_enabled(v6, v5))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl(&dword_2504D2000, v6, v5, "Failed to initialize CoreDataInteraction due to uninitialized allPeersStoreIndex", v7, 2u);
        MEMORY[0x25337FF10](v7, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(unsigned char *)uint64_t v8 = -93;
      uint64_t v9 = 156;
LABEL_14:
      *(unsigned char *)(v8 + 1) = 1;
      *(void *)(v8 + 8) = v9;
      *(void *)(v8 + 16) = 0xD00000000000001DLL;
      *(void *)(v8 + 24) = 0x80000002505CC4D0;
      *(void *)(v8 + 32) = 0xD000000000000064;
      *(void *)(v8 + 40) = 0x80000002505CC3F0;
      swift_willThrow();
      swift_release();
      return;
    }
    unint64_t v15 = *(void *)(a1 + 152);
    long long v16 = *(void **)(a1 + 168);
    swift_retain();
    id v17 = objc_msgSend(v16, sel_persistentStoreCoordinator);
    id v18 = objc_msgSend(v17, sel_persistentStores);

    sub_25058DE24(0, &qword_26B202188);
    uint64_t v19 = sub_2505BE2C0();

    if ((v19 & 0xC000000000000001) != 0) {
      goto LABEL_24;
    }
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_22:
      id v23 = *(id *)(v19 + 8 * v15 + 32);
LABEL_23:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
  }
  unint64_t v15 = *(void *)(a1 + 136);
  unsigned int v20 = *(void **)(a1 + 168);
  swift_retain();
  id v21 = objc_msgSend(v20, sel_persistentStoreCoordinator);
  id v22 = objc_msgSend(v21, sel_persistentStores);

  sub_25058DE24(0, &qword_26B202188);
  uint64_t v19 = sub_2505BE2C0();

  if ((v19 & 0xC000000000000001) != 0)
  {
LABEL_24:
    MEMORY[0x25337F460](v15, v19);
    goto LABEL_23;
  }
  if ((v15 & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v15 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_25058F770()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_25058F780()
{
  sub_25058ABD8(*(void *)(v0 + 16), *(void (**)(_OWORD *__return_ptr))(v0 + 24));
}

uint64_t sub_25058F78C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25058F79C(void *a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255) {
    sub_25058F7B4(a1, a2, a3, a4, a5, a6, a7 & 1);
  }
}

void sub_25058F7B4(id a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  if (a7) {

  }
  else {
    sub_25058F7C0((uint64_t)a1, a2, a3, a4, a5, a6);
  }
}

uint64_t sub_25058F7C0(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >> 60 != 15)
  {
    sub_25051B884(result, a2, a3, a4);
    return sub_250511528(a5, a6);
  }
  return result;
}

uint64_t sub_25058F810()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_25058F820()
{
  sub_25058AAC8(*(void *)(v0 + 16), *(void (**)(int8x16_t *__return_ptr))(v0 + 24));
}

uint64_t sub_25058F82C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25058F83C(void *a1, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    sub_25058F854(a1, a2, a3, a4 & 1);
  }
}

void sub_25058F854(id a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a4) {

  }
  else {
    sub_25051C8D8((uint64_t)a1, a2, a3);
  }
}

uint64_t sub_25058F878(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v22 = a1;
  uint64_t v23 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5EF8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8, v8, v9, v10, v11);
  long long v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a3 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (v14)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_250511E48(0, v14, 0);
    uint64_t v15 = v25;
    uint64_t v16 = *(void *)(type metadata accessor for GKCrypto_GroupHandle.CiphertextAndTag(0) - 8);
    uint64_t v17 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v21 = *(void *)(v16 + 72);
    while (1)
    {
      v22(v17, &v24);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v25 = v15;
      unint64_t v19 = *(void *)(v15 + 16);
      unint64_t v18 = *(void *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_250511E48(v18 > 1, v19 + 1, 1);
        uint64_t v15 = v25;
      }
      *(void *)(v15 + 16) = v19 + 1;
      sub_2505283F0((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v19, &qword_269AB5EF8);
      v17 += v21;
      if (!--v14) {
        return v15;
      }
    }
    swift_release();
  }
  return v15;
}

uint64_t sub_25058FA70(uint64_t a1)
{
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
  uint64_t v7 = MEMORY[0x270FA5388](v72, v3, v4, v5, v6);
  uint64_t v71 = (void *)((char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v7, v9, v10, v11, v12);
  unint64_t v70 = (void *)((char *)v60 - v14);
  MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  char v69 = (void *)((char *)v60 - v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5FC8);
  uint64_t v67 = *(void *)(v20 - 8);
  uint64_t v68 = v20;
  MEMORY[0x270FA5388](v20, v21, v22, v23, v24);
  long long v26 = (void *)((char *)v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (!v27) {
    return v28;
  }
  v60[1] = v1;
  uint64_t v75 = MEMORY[0x263F8EE78];
  sub_250511EE4(0, v27, 0);
  uint64_t result = sub_25051A01C(a1);
  uint64_t v31 = result;
  uint64_t v32 = 0;
  uint64_t v33 = a1 + 64;
  uint64_t v61 = a1 + 80;
  int64_t v62 = v27;
  uint64_t v65 = v26;
  uint64_t v66 = a1;
  uint64_t v63 = v30;
  uint64_t v64 = a1 + 64;
  while ((v31 & 0x8000000000000000) == 0 && v31 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v36 = (unint64_t)v31 >> 6;
    if ((*(void *)(v33 + 8 * ((unint64_t)v31 >> 6)) & (1 << v31)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v30) {
      goto LABEL_26;
    }
    uint64_t v73 = v32;
    uint64_t v74 = 1 << v31;
    uint64_t v37 = v72;
    uint64_t v38 = (uint64_t)v69;
    uint64_t v39 = (uint64_t)v69 + *(int *)(v72 + 48);
    uint64_t v40 = *(void *)(a1 + 56);
    uint64_t v41 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v31);
    uint64_t v43 = *v41;
    unint64_t v42 = v41[1];
    uint64_t *v69 = *v41;
    *(void *)(v38 + 8) = v42;
    uint64_t v44 = type metadata accessor for GroupMembership.MemberProperties(0);
    sub_250598A94(v40 + *(void *)(*(void *)(v44 - 8) + 72) * v31, v39, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v45 = v70;
    *unint64_t v70 = v43;
    v45[1] = v42;
    sub_250598A94(v39, (uint64_t)v45 + *(int *)(v37 + 48), type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v46 = (uint64_t)v45;
    uint64_t v47 = v71;
    sub_2505283F0(v46, (uint64_t)v71, &qword_269AB5E90);
    sub_2504DBC4C(v43, v42);
    sub_2504DBC4C(v43, v42);
    sub_2504DAF60(v38, &qword_269AB5E90);
    uint64_t v48 = *(int *)(v37 + 48);
    uint64_t v49 = (uint64_t)v65;
    uint64_t v50 = (uint64_t)v65 + *(int *)(v68 + 48);
    uint64_t v51 = *v47;
    unint64_t v52 = v47[1];
    *uint64_t v65 = *v47;
    *(void *)(v49 + 8) = v52;
    sub_250598A94((uint64_t)v47 + v48, v50, type metadata accessor for GroupMembership.MemberProperties);
    sub_2504DBC4C(v51, v52);
    sub_2504DAF60((uint64_t)v47, &qword_269AB5E90);
    uint64_t v28 = v75;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_250511EE4(0, *(void *)(v28 + 16) + 1, 1);
      uint64_t v28 = v75;
    }
    unint64_t v54 = *(void *)(v28 + 16);
    unint64_t v53 = *(void *)(v28 + 24);
    if (v54 >= v53 >> 1)
    {
      sub_250511EE4(v53 > 1, v54 + 1, 1);
      uint64_t v28 = v75;
    }
    *(void *)(v28 + 16) = v54 + 1;
    uint64_t result = sub_2505283F0(v49, v28+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v54, &qword_269AB5FC8);
    a1 = v66;
    int64_t v34 = 1 << *(unsigned char *)(v66 + 32);
    if (v31 >= v34) {
      goto LABEL_27;
    }
    uint64_t v33 = v64;
    uint64_t v55 = *(void *)(v64 + 8 * v36);
    if ((v55 & v74) == 0) {
      goto LABEL_28;
    }
    LODWORD(v30) = v63;
    if (*(_DWORD *)(v66 + 36) != v63) {
      goto LABEL_29;
    }
    unint64_t v56 = v55 & (-2 << (v31 & 0x3F));
    if (v56)
    {
      int64_t v34 = __clz(__rbit64(v56)) | v31 & 0xFFFFFFFFFFFFFFC0;
      int64_t v35 = v62;
    }
    else
    {
      unint64_t v57 = v36 + 1;
      unint64_t v58 = (unint64_t)(v34 + 63) >> 6;
      int64_t v35 = v62;
      if (v36 + 1 < v58)
      {
        unint64_t v59 = *(void *)(v64 + 8 * v57);
        if (v59)
        {
LABEL_22:
          int64_t v34 = __clz(__rbit64(v59)) + (v57 << 6);
        }
        else
        {
          while (v58 - 2 != v36)
          {
            unint64_t v59 = *(void *)(v61 + 8 * v36++);
            if (v59)
            {
              unint64_t v57 = v36 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v32 = v73 + 1;
    uint64_t v31 = v34;
    if (v73 + 1 == v35) {
      return v28;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_25058FED8(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v6 = type metadata accessor for HashAndCipher();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a3 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (v14)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_250511EA8(0, v14, 0);
    uint64_t v15 = v25;
    uint64_t v16 = *(void *)(type metadata accessor for GKCrypto_GroupHandle.CiphertextAndTag(0) - 8);
    uint64_t v17 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v21 = *(void *)(v16 + 72);
    while (1)
    {
      v22(v17, &v24);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v25 = v15;
      unint64_t v19 = *(void *)(v15 + 16);
      unint64_t v18 = *(void *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_250511EA8(v18 > 1, v19 + 1, 1);
        uint64_t v15 = v25;
      }
      *(void *)(v15 + 16) = v19 + 1;
      sub_250598BA8((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v19, (uint64_t (*)(void))type metadata accessor for HashAndCipher);
      v17 += v21;
      if (!--v14) {
        return v15;
      }
    }
    swift_release();
  }
  return v15;
}

unint64_t sub_2505900D8(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v46 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6BE8);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2505BDCE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  uint64_t v45 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v21, v22, v23, v24);
  unint64_t v42 = (char *)v37 - v25;
  uint64_t v26 = *(void *)(a3 + 16);
  if (!v26) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v27 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5EF8) - 8);
  uint64_t v28 = v14;
  uint64_t v29 = a3 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t v39 = v28;
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v43 = *(void *)(v27 + 72);
  v37[1] = a3;
  swift_bridgeObjectRetain();
  unint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v40 = v13;
  uint64_t v41 = a1;
  uint64_t v38 = v30;
  do
  {
    a1(v29);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v31;
    }
    if ((*v30)(v12, 1, v13) == 1)
    {
      sub_2504DAF60((uint64_t)v12, &qword_269AB6BE8);
    }
    else
    {
      uint64_t v32 = *v44;
      uint64_t v33 = v42;
      (*v44)(v42, v12, v13);
      v32(v45, v33, v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v31 = sub_250570ED0(0, *(void *)(v31 + 16) + 1, 1, v31);
      }
      unint64_t v35 = *(void *)(v31 + 16);
      unint64_t v34 = *(void *)(v31 + 24);
      if (v35 >= v34 >> 1) {
        unint64_t v31 = sub_250570ED0(v34 > 1, v35 + 1, 1, v31);
      }
      *(void *)(v31 + 16) = v35 + 1;
      uint64_t v13 = v40;
      v32((char *)(v31+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v35), v45, v40);
      a1 = v41;
      uint64_t v30 = v38;
    }
    v29 += v43;
    --v26;
  }
  while (v26);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_250590418@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v209 = a6;
  unint64_t v193 = a4;
  uint64_t v192 = a3;
  *((void *)&v205 + 1) = a1;
  uint64_t v190 = a7;
  uint64_t v195 = sub_2505BDCE0();
  uint64_t v194 = *(void *)(v195 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v195, v9, v10, v11, v12);
  unint64_t v196 = (char *)&v183 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  uint64_t v198 = (void (*)(uint64_t, uint64_t))((char *)&v183 - v19);
  uint64_t v199 = sub_2505BDCA0();
  uint64_t v197 = *(void *)(v199 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v199, v20, v21, v22, v23);
  os_log_t v191 = (char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24, v26, v27, v28, v29);
  uint64_t v200 = (char *)&v183 - v30;
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5EF8);
  uint64_t v202 = *(void *)(v204 - 8);
  MEMORY[0x270FA5388](v204, v31, v32, v33, v34);
  long long v203 = (uint64_t *)((char *)&v183 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v206 = sub_2505BDF30();
  uint64_t v208 = *(void *)(v206 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v206, v36, v37, v38, v39);
  uint64_t v201 = (char *)&v183 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40, v42, v43, v44, v45);
  *(void *)&long long v205 = (char *)&v183 - v46;
  uint64_t v47 = sub_2505BDD70();
  uint64_t v207 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47, v48, v49, v50, v51);
  unint64_t v53 = (char *)&v183 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_2505BDA70();
  MEMORY[0x270FA5388](v54 - 8, v55, v56, v57, v58);
  uint64_t v59 = type metadata accessor for GKCrypto_GroupHandle(0);
  MEMORY[0x270FA5388](v59, v60, v61, v62, v63);
  unint64_t v66 = *a2;
  unint64_t v65 = a2[1];
  uint64_t v67 = (void (**)(uint64_t, uint64_t))((char *)&v183 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v214 = 0;
  long long v212 = 0u;
  long long v213 = 0u;
  sub_2504DBC4C(a5, v209);
  sub_2505BDA60();
  sub_250598720(&qword_269AB6418, (void (*)(uint64_t))type metadata accessor for GKCrypto_GroupHandle);
  uint64_t v68 = v215;
  uint64_t result = sub_2505BDB30();
  if (!v68)
  {
    unint64_t v189 = v65;
    unint64_t v209 = v66;
    uint64_t v70 = v208;
    uint64_t v215 = v47;
    unint64_t v71 = v67[3];
    *(void *)&long long v212 = v67[2];
    *((void *)&v212 + 1) = v71;
    sub_2504DBC4C(v212, v71);
    unint64_t v72 = sub_25051AE60();
    uint64_t v73 = sub_2505BDD50();
    uint64_t v188 = v67;
    uint64_t v78 = v67[4];
    if (!*(void *)(v78 + 16))
    {
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v79 = sub_2505BDC40();
      __swift_project_value_buffer(v79, (uint64_t)qword_269AC3188);
      os_log_type_t v80 = sub_2505BE3D0();
      unsigned int v81 = sub_2505BDC20();
      os_log_type_t v82 = v80;
      BOOL v83 = os_log_type_enabled(v81, v80);
      uint64_t v84 = v207;
      if (v83)
      {
        unint64_t v85 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v85 = 0;
        _os_log_impl(&dword_2504D2000, v81, v82, "ciphertext missing in GroupHandleBlob", v85, 2u);
        MEMORY[0x25337FF10](v85, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v86 = 278;
      *(_OWORD *)(v86 + 8) = xmmword_2505C6280;
      *(void *)(v86 + 24) = 0x80000002505CC570;
      *(void *)(v86 + 32) = 0xD00000000000005CLL;
      *(void *)(v86 + 40) = 0x80000002505CC510;
      swift_willThrow();
      goto LABEL_30;
    }
    MEMORY[0x270FA5388](v73, v74, v75, v76, v77);
    unint64_t v181 = (unint64_t)v53;
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_25058F878((void (*)(uint64_t, uint64_t *))sub_2505987DC, (uint64_t)(&v183 - 4), v78);
    unint64_t v187 = v72;
    swift_bridgeObjectRelease();
    uint64_t v88 = v205;
    sub_2505BDF50();
    uint64_t v89 = sub_2505BDF10();
    unint64_t v91 = v90;
    uint64_t v92 = sub_2504DBF8C(v89, v90);
    unint64_t v94 = v93;
    sub_250511528(v89, v91);
    uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    uint64_t v96 = v70 + 8;
    uint64_t v95 = v97;
    uint64_t v98 = v88;
    unint64_t v99 = v94;
    uint64_t v100 = ((uint64_t (*)(uint64_t, uint64_t))v97)(v98, v206);
    MEMORY[0x270FA5388](v100, v101, v102, v103, v104);
    unint64_t v181 = v92;
    unint64_t v182 = v94;
    uint64_t v105 = sub_250598804(v87, (uint64_t (*)(void, void, void, void, void))sub_2505987FC);
    swift_bridgeObjectRelease();
    uint64_t v106 = *(void *)(v105 + 16);
    if (v106)
    {
      if (v106 == 1)
      {
        uint64_t v183 = v95;
        uint64_t v208 = v96;
        uint64_t v184 = v92;
        unint64_t v185 = v94;
        uint64_t v186 = v53;
        uint64_t v107 = v203;
        sub_2504DAEFC(v105 + ((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80)), (uint64_t)v203, &qword_269AB5EF8);
        sub_250511528(*v107, v107[1]);
        uint64_t v108 = v107[2];
        unint64_t v109 = v107[3];
        unint64_t v110 = (char *)v107 + *(int *)(v204 + 64);
        uint64_t v111 = v105;
        uint64_t v112 = v209;
        unint64_t v113 = v189;
        sub_2504DBC4C(v209, v189);
        uint64_t v114 = sub_2504DBF8C(v112, v113);
        unint64_t v116 = v115;
        sub_250511528(v112, v113);
        LOBYTE(v112) = sub_25051AAD8(v108, v109, v114, v116);
        sub_250511528(v108, v109);
        sub_250511528(v114, v116);
        uint64_t v117 = sub_2505BDDD0();
        (*(void (**)(char *, uint64_t))(*(void *)(v117 - 8) + 8))(v110, v117);
        if (v112)
        {
          uint64_t v204 = v111;
          unint64_t v118 = v188[1];
          *(void *)&long long v212 = *v188;
          *((void *)&v212 + 1) = v118;
          sub_2504DBC4C(v212, v118);
          sub_2505BDF00();
          unint64_t v142 = v200;
          sub_2505BDF40();
          uint64_t v143 = sub_2505BDEE0();
          unint64_t v145 = v144;
          uint64_t v146 = v205;
          sub_2505BDF50();
          uint64_t v147 = sub_2505BDEE0();
          unint64_t v149 = v148;
          v183(v146, v206);
          *(void *)&long long v212 = v143;
          *((void *)&v212 + 1) = v145;
          sub_2504DBC4C(v143, v145);
          sub_2504DBC4C(v147, v149);
          sub_2505980CC(v147, v149);
          sub_250511528(v147, v149);
          sub_250511528(v147, v149);
          sub_250511528(v143, v145);
          long long v150 = v212;
          (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v191, v142, v199);
          sub_250598720(&qword_269AB6BD8, MEMORY[0x263F04608]);
          uint64_t v151 = v196;
          sub_2505BDCC0();
          long long v205 = v150;
          long long v212 = v150;
          unint64_t v152 = v192;
          unint64_t v153 = v193;
          uint64_t v210 = v192;
          unint64_t v211 = v193;
          sub_2505BE0E0();
          sub_250598720((unint64_t *)&qword_269AB5FB0, MEMORY[0x263F047F8]);
          unint64_t v181 = v187;
          unint64_t v182 = v187;
          uint64_t v154 = v198;
          sub_2505BDE00();
          uint64_t v155 = v194;
          unint64_t v156 = v194 + 8;
          uint64_t v157 = v195;
          long long v203 = *(uint64_t **)(v194 + 8);
          uint64_t v158 = ((uint64_t (*)(char *, uint64_t))v203)(v151, v195);
          MEMORY[0x270FA5388](v158, v159, v160, v161, v162);
          *(&v183 - 4) = v154;
          *(&v183 - 3) = v152;
          unint64_t v181 = v153;
          unint64_t v163 = sub_2505900D8((void (*)(void))sub_250598A30, (uint64_t)(&v183 - 6), v204);
          swift_bridgeObjectRelease();
          uint64_t v164 = *(void *)(v163 + 16);
          if (v164 == 1)
          {
            os_log_t v165 = v196;
            (*(void (**)(char *, unint64_t, uint64_t))(v155 + 16))(v196, v163 + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80)), v157);
            uint64_t v166 = swift_bridgeObjectRelease();
            MEMORY[0x270FA5388](v166, v167, v168, v169, v170);
            unint64_t v181 = v209;
            unint64_t v182 = v189;
            sub_2505BDCB0();
            sub_250511528(v184, v185);
            sub_250511528(v205, *((unint64_t *)&v205 + 1));
            unint64_t v171 = v203;
            ((void (*)(char *, uint64_t))v203)(v165, v157);
            (*(void (**)(char *, uint64_t))(v197 + 8))(v200, v199);
            v183((uint64_t)v201, v206);
            sub_250598B48((uint64_t)v188, type metadata accessor for GKCrypto_GroupHandle);
            ((void (*)(void, uint64_t))v171)(v198, v157);
            return (*(uint64_t (**)(char *, uint64_t))(v207 + 8))(v186, v215);
          }
          uint64_t v172 = v199;
          unint64_t v209 = v156;
          unint64_t v53 = v186;
          if (qword_269AB5418 != -1) {
            swift_once();
          }
          uint64_t v173 = sub_2505BDC40();
          __swift_project_value_buffer(v173, (uint64_t)qword_269AC3188);
          os_log_type_t v174 = sub_2505BE3D0();
          swift_bridgeObjectRetain();
          uint64_t v175 = sub_2505BDC20();
          if (os_log_type_enabled(v175, v174))
          {
            unint64_t v176 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)unint64_t v176 = 134217984;
            swift_bridgeObjectRelease();
            *(void *)&long long v212 = v164;
            uint64_t v177 = v195;
            sub_2505BE430();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_2504D2000, v175, v174, "failed to decrypt GroupHandleBlob, got %ld keys", v176, 0xCu);
            uint64_t v172 = v199;
            unint64_t v53 = v186;
            MEMORY[0x25337FF10](v176, -1, -1);
          }
          else
          {
            uint64_t v177 = v157;

            swift_bridgeObjectRelease_n();
          }
          uint64_t v178 = v197;
          unint64_t v179 = *((void *)&v205 + 1);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
          sub_25055AFD0();
          swift_allocError();
          *(_WORD *)uint64_t v180 = 282;
          *(_OWORD *)(v180 + 8) = xmmword_2505C6250;
          *(void *)(v180 + 24) = 0x80000002505CC570;
          *(void *)(v180 + 32) = 0xD00000000000005CLL;
          *(void *)(v180 + 40) = 0x80000002505CC510;
          swift_willThrow();
          sub_250511528(v184, v185);
          sub_250511528(v205, v179);
          (*(void (**)(char *, uint64_t))(v178 + 8))(v200, v172);
          v183((uint64_t)v201, v206);
          sub_250598B48((uint64_t)v188, type metadata accessor for GKCrypto_GroupHandle);
          ((void (*)(void, uint64_t))v203)(v198, v177);
          uint64_t v84 = v207;
          return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v53, v215);
        }
        swift_bridgeObjectRelease();
        unint64_t v53 = v186;
        unint64_t v99 = v185;
        uint64_t v134 = v184;
        if (qword_269AB5418 != -1) {
          swift_once();
        }
        uint64_t v135 = sub_2505BDC40();
        __swift_project_value_buffer(v135, (uint64_t)qword_269AC3188);
        os_log_type_t v136 = sub_2505BE3D0();
        unint64_t v137 = sub_2505BDC20();
        os_log_type_t v138 = v136;
        BOOL v139 = os_log_type_enabled(v137, v136);
        uint64_t v84 = v207;
        if (v139)
        {
          os_log_type_t v140 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v140 = 0;
          _os_log_impl(&dword_2504D2000, v137, v138, "user public key does not match hint in GroupHandleBlob", v140, 2u);
          MEMORY[0x25337FF10](v140, -1, -1);
        }

        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_25055AFD0();
        swift_allocError();
        *(_WORD *)uint64_t v141 = 281;
        *(_OWORD *)(v141 + 8) = xmmword_2505C6240;
        *(void *)(v141 + 24) = 0x80000002505CC570;
        *(void *)(v141 + 32) = 0xD00000000000005CLL;
        *(void *)(v141 + 40) = 0x80000002505CC510;
        swift_willThrow();
        uint64_t v133 = v134;
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v127 = sub_2505BDC40();
      __swift_project_value_buffer(v127, (uint64_t)qword_269AC3188);
      os_log_type_t v128 = sub_2505BE3D0();
      unint64_t v129 = sub_2505BDC20();
      os_log_type_t v130 = v128;
      BOOL v131 = os_log_type_enabled(v129, v128);
      uint64_t v84 = v207;
      if (v131)
      {
        uint64_t v132 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v132 = 0;
        _os_log_impl(&dword_2504D2000, v129, v130, "user public key duplicated in GroupHandleBlob", v132, 2u);
        MEMORY[0x25337FF10](v132, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v125 = 280;
      long long v126 = xmmword_2505C6270;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v119 = sub_2505BDC40();
      __swift_project_value_buffer(v119, (uint64_t)qword_269AC3188);
      os_log_type_t v120 = sub_2505BE3D0();
      unint64_t v121 = sub_2505BDC20();
      os_log_type_t v122 = v120;
      BOOL v123 = os_log_type_enabled(v121, v120);
      uint64_t v84 = v207;
      if (v123)
      {
        unint64_t v124 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v124 = 0;
        _os_log_impl(&dword_2504D2000, v121, v122, "missing user public key in GroupHandleBlob", v124, 2u);
        MEMORY[0x25337FF10](v124, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v125 = 279;
      long long v126 = xmmword_2505C6260;
    }
    *(_OWORD *)(v125 + 8) = v126;
    *(void *)(v125 + 24) = 0x80000002505CC570;
    *(void *)(v125 + 32) = 0xD00000000000005CLL;
    *(void *)(v125 + 40) = 0x80000002505CC510;
    swift_willThrow();
    uint64_t v133 = v92;
LABEL_29:
    sub_250511528(v133, v99);
LABEL_30:
    sub_250598B48((uint64_t)v188, type metadata accessor for GKCrypto_GroupHandle);
    return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v53, v215);
  }
  return result;
}

uint64_t sub_2505917CC(char *a1, char *a2, void *a3, char *a4, char *a5, uint64_t a6, unint64_t a7)
{
  uint64_t v100 = a6;
  unint64_t v101 = a7;
  unint64_t v94 = a5;
  uint64_t v95 = a4;
  uint64_t v96 = a2;
  unint64_t v99 = a1;
  uint64_t v9 = sub_2505BDF30();
  uint64_t v97 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2505BDD70();
  uint64_t v98 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_2505BDA70();
  MEMORY[0x270FA5388](v23 - 8, v24, v25, v26, v27);
  uint64_t v28 = type metadata accessor for GKCrypto_GroupHandle(0);
  MEMORY[0x270FA5388](v28, v29, v30, v31, v32);
  uint64_t v34 = (char *)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v102[0] = *a3;
  uint64_t result = sub_250592C40((uint64_t *)v102);
  if (!v7)
  {
    unint64_t v90 = v15;
    uint64_t v91 = v9;
    uint64_t v36 = v99;
    uint64_t v92 = v16;
    unint64_t v93 = v22;
    uint64_t v103 = 0;
    memset(v102, 0, sizeof(v102));
    sub_2504DBC4C(v100, v101);
    sub_2505BDA60();
    sub_250598720(&qword_269AB6418, (void (*)(uint64_t))type metadata accessor for GKCrypto_GroupHandle);
    sub_2505BDB30();
    uint64_t v37 = (uint64_t *)v34;
    unint64_t v38 = *((void *)v34 + 3);
    *(void *)&v102[0] = *((void *)v34 + 2);
    *((void *)&v102[0] + 1) = v38;
    sub_2504DBC4C(*(uint64_t *)&v102[0], v38);
    sub_25051AE60();
    uint64_t v39 = v93;
    sub_2505BDD50();
    if (!*(void *)(v37[4] + 16))
    {
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_2505BDC40();
      __swift_project_value_buffer(v46, (uint64_t)qword_269AC3188);
      os_log_type_t v47 = sub_2505BE3D0();
      uint64_t v48 = sub_2505BDC20();
      os_log_type_t v49 = v47;
      BOOL v50 = os_log_type_enabled(v48, v47);
      uint64_t v51 = v98;
      if (v50)
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_2504D2000, v48, v49, "ciphertext missing in GroupHandleBlob", v52, 2u);
        MEMORY[0x25337FF10](v52, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v53 = 278;
      long long v54 = xmmword_2505C62B0;
      goto LABEL_17;
    }
    uint64_t v40 = v90;
    sub_2505BDF50();
    uint64_t v41 = sub_2505BDEF0();
    unint64_t v43 = v42;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v40, v91);
    unint64_t v101 = (unint64_t)v37;
    uint64_t v44 = *v37;
    unint64_t v45 = v37[1];
    sub_2504DBC4C(v44, v45);
    if (v43 >> 60 == 15)
    {
      sub_25051B8D4(v41, v43);
      sub_25051B8D4(v44, v45);
LABEL_12:
      uint64_t v51 = v98;
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_2505BDC40();
      __swift_project_value_buffer(v68, (uint64_t)qword_269AC3188);
      os_log_type_t v69 = sub_2505BE3D0();
      uint64_t v70 = sub_2505BDC20();
      os_log_type_t v71 = v69;
      BOOL v72 = os_log_type_enabled(v70, v69);
      uint64_t v37 = (uint64_t *)v101;
      if (v72)
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v73 = 0;
        _os_log_impl(&dword_2504D2000, v70, v71, "inconsistent ephemeral keys when verifying GroupHandleBlob", v73, 2u);
        MEMORY[0x25337FF10](v73, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v53 = 289;
      long long v54 = xmmword_2505C62A0;
LABEL_17:
      *(_OWORD *)(v53 + 8) = v54;
      *(void *)(v53 + 24) = 0x80000002505CC5D0;
      *(void *)(v53 + 32) = 0xD00000000000005CLL;
      *(void *)(v53 + 40) = 0x80000002505CC510;
      swift_willThrow();
      sub_250598B48((uint64_t)v37, type metadata accessor for GKCrypto_GroupHandle);
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v39, v92);
    }
    sub_25051B908(v41, v43);
    char v55 = sub_25051AAD8(v41, v43, v44, v45);
    sub_250511528(v44, v45);
    sub_25051B8D4(v41, v43);
    sub_25051B8D4(v41, v43);
    if ((v55 & 1) == 0) {
      goto LABEL_12;
    }
    uint64_t v56 = swift_bridgeObjectRetain();
    uint64_t v57 = sub_25058FA70(v56);
    swift_bridgeObjectRelease();
    *(void *)&v102[0] = v57;
    uint64_t v58 = sub_250592B6C((uint64_t *)v102, &qword_269AB5FC8, (uint64_t (*)(uint64_t))sub_25058F1CC, (uint64_t)sub_25058EF8C);
    uint64_t v59 = *(void *)&v102[0];
    MEMORY[0x270FA5388](v58, v60, v61, v62, v63);
    uint64_t v64 = v95;
    *(&v90 - 6) = v36;
    *(&v90 - 5) = v64;
    unint64_t v65 = v96;
    *(&v90 - 4) = v94;
    *(&v90 - 3) = v65;
    *(&v90 - 2) = v39;
    uint64_t v66 = sub_2505982F0(v59, (void (*)(uint64_t, uint64_t))sub_250598A50, (uint64_t)(&v90 - 8));
    uint64_t v67 = v98;
    uint64_t v74 = v66;
    uint64_t v75 = swift_bridgeObjectRelease();
    uint64_t v76 = *(void *)(v101 + 32);
    MEMORY[0x270FA5388](v75, v77, v78, v79, v80);
    *(&v90 - 2) = v39;
    swift_bridgeObjectRetain();
    uint64_t v81 = sub_25058FED8((void (*)(uint64_t, uint64_t *))sub_250598A74, (uint64_t)(&v90 - 4), v76);
    swift_bridgeObjectRelease();
    char v82 = sub_250545988(v81, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v82)
    {
      sub_250598B48(v101, type metadata accessor for GKCrypto_GroupHandle);
      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v39, v92);
    }
    else
    {
      uint64_t v83 = v92;
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_2505BDC40();
      __swift_project_value_buffer(v84, (uint64_t)qword_269AC3188);
      os_log_type_t v85 = sub_2505BE3D0();
      uint64_t v86 = sub_2505BDC20();
      os_log_type_t v87 = v85;
      if (os_log_type_enabled(v86, v85))
      {
        uint64_t v88 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v88 = 0;
        _os_log_impl(&dword_2504D2000, v86, v87, "mismatch ciphertext in generated GroupHandleBlob", v88, 2u);
        MEMORY[0x25337FF10](v88, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v89 = 288;
      *(_OWORD *)(v89 + 8) = xmmword_2505C6290;
      *(void *)(v89 + 24) = 0x80000002505CC5D0;
      *(void *)(v89 + 32) = 0xD00000000000005CLL;
      *(void *)(v89 + 40) = 0x80000002505CC510;
      swift_willThrow();
      sub_250598B48(v101, type metadata accessor for GKCrypto_GroupHandle);
      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v39, v83);
    }
  }
  return result;
}

uint64_t sub_250592180(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v130 = a2;
  uint64_t v131 = a5;
  *(void *)&long long v123 = a4;
  uint64_t v132 = a1;
  uint64_t v125 = sub_2505BDDD0();
  uint64_t v119 = *(char **)(v125 - 8);
  MEMORY[0x270FA5388](v125, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5EF8);
  os_log_type_t v120 = *(void (***)(char *, char *, uint64_t))(v129 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v129, v12, v13, v14, v15);
  os_log_type_t v128 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v18, v19, v20, v21);
  uint64_t v127 = (uint64_t *)((char *)&v109 - v22);
  uint64_t v124 = type metadata accessor for GKCrypto_GroupHandle.CiphertextAndTag(0);
  uint64_t v126 = *(void *)(v124 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v124, v23, v24, v25, v26);
  uint64_t v29 = (uint64_t *)((char *)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v27, v30, v31, v32, v33);
  uint64_t v117 = (char *)&v109 - v34;
  uint64_t v35 = sub_2505BDF30();
  unint64_t v121 = *(char **)(v35 - 8);
  uint64_t v122 = v35;
  MEMORY[0x270FA5388](v35, v36, v37, v38, v39);
  uint64_t v41 = (char *)&v109 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for GKCrypto_GroupHandle(0);
  MEMORY[0x270FA5388](v42, v43, v44, v45, v46);
  uint64_t v48 = (char *)&v109 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_2505BDD70();
  uint64_t v50 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49, v51, v52, v53, v54);
  uint64_t v56 = (char *)&v109 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135[0] = *a3;
  uint64_t v57 = v138;
  sub_250592C40(v135);
  if (v57) {
    return (uint64_t)v48;
  }
  os_log_type_t v138 = v41;
  uint64_t v116 = v42;
  uint64_t v115 = v50;
  uint64_t v114 = v49;
  unint64_t v113 = (uint64_t *)v48;
  sub_2505BDD60();
  uint64_t v58 = swift_bridgeObjectRetain();
  v135[0] = sub_25059D964(v58);
  sub_250592B6C(v135, &qword_269AB5E90, (uint64_t (*)(uint64_t))sub_25058F29C, (uint64_t)sub_25058EF98);
  uint64_t v59 = swift_bridgeObjectRelease();
  uint64_t v60 = v135[0];
  MEMORY[0x270FA5388](v59, v61, v62, v63, v64);
  uint64_t v65 = v123;
  *(&v109 - 6) = v132;
  *(&v109 - 5) = v65;
  unint64_t v66 = v130;
  *(&v109 - 4) = v131;
  *(&v109 - 3) = v66;
  *(&v109 - 2) = (uint64_t)v56;
  uint64_t v67 = sub_250598500(v60, (uint64_t (*)(char *, uint64_t, uint64_t))sub_250595B40, (uint64_t)(&v109 - 8));
  uint64_t v68 = v115;
  uint64_t v111 = v67;
  uint64_t v112 = v56;
  swift_release();
  os_log_type_t v69 = v113;
  *(_OWORD *)unint64_t v113 = xmmword_2505BFEF0;
  *((_OWORD *)v69 + 1) = xmmword_2505BFEF0;
  long long v123 = xmmword_2505BFEF0;
  v69[4] = MEMORY[0x263F8EE78];
  sub_2505BDA40();
  uint64_t v70 = v138;
  sub_2505BDF50();
  uint64_t v71 = sub_2505BDEF0();
  unint64_t v73 = v72;
  (*((void (**)(char *, uint64_t))v121 + 1))(v70, v122);
  if (v73 >> 60 != 15)
  {
    sub_250511528(*v69, v69[1]);
    uint64_t *v69 = v71;
    v69[1] = v73;
    uint64_t v74 = v114;
    uint64_t v136 = v114;
    uint64_t v137 = sub_250598720(&qword_269AB6BD0, MEMORY[0x263F046D8]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v135);
    (*(void (**)(uint64_t *, char *, uint64_t))(v68 + 16))(boxed_opaque_existential_1, v112, v74);
    __swift_project_boxed_opaque_existential_1(v135, v136);
    sub_2505BD820();
    uint64_t v110 = 0;
    uint64_t v76 = v133;
    uint64_t v77 = v134;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v135);
    sub_250511528(v69[2], v69[3]);
    id v69[2] = v76;
    v69[3] = v77;
    int64_t v78 = *(void *)(v111 + 16);
    uint64_t v48 = v119;
    uint64_t v79 = v120;
    if (v78)
    {
      unint64_t v118 = v11;
      v135[0] = MEMORY[0x263F8EE78];
      uint64_t v80 = v111;
      os_log_type_t v138 = (char *)v78;
      sub_250511F34(0, v78, 0);
      uint64_t v81 = v80 + ((*((unsigned __int8 *)v79 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v79 + 80));
      char v82 = v79[9];
      unint64_t v121 = v48 + 16;
      uint64_t v122 = (uint64_t)v82;
      os_log_type_t v120 = (void (**)(char *, char *, uint64_t))(v48 + 32);
      uint64_t v119 = v48 + 8;
      uint64_t v83 = v128;
      uint64_t v48 = (char *)v129;
      uint64_t v84 = v127;
      uint64_t v85 = (uint64_t)v117;
      do
      {
        uint64_t v132 = v81;
        sub_2504DAEFC(v81, (uint64_t)v84, &qword_269AB5EF8);
        uint64_t v86 = *((int *)v48 + 16);
        os_log_type_t v87 = &v83[v86];
        uint64_t v88 = (char *)v84 + v86;
        uint64_t v89 = *v84;
        unint64_t v90 = v84[1];
        uint64_t v91 = v84[2];
        unint64_t v130 = v84[3];
        unint64_t v92 = v130;
        uint64_t v131 = v91;
        uint64_t v93 = v125;
        (*(void (**)(char *, char *, uint64_t))v121)(v87, v88, v125);
        unint64_t v94 = v118;
        (*v120)(v118, v87, v93);
        long long v95 = v123;
        *((_OWORD *)v29 + 2) = v123;
        *((_OWORD *)v29 + 3) = v95;
        sub_2504DBC4C(v89, v90);
        sub_2504DBC4C(v91, v92);
        sub_2505BDA40();
        *uint64_t v29 = v89;
        v29[1] = v90;
        sub_2504DBC4C(v89, v90);
        v29[2] = sub_2505BDD80();
        v29[3] = v96;
        uint64_t v97 = sub_2505BDD90();
        uint64_t v99 = v98;
        sub_250511528(v89, v90);
        uint64_t v100 = v93;
        uint64_t v84 = v127;
        (*(void (**)(char *, uint64_t))v119)(v94, v100);
        sub_250511528(v29[4], v29[5]);
        v29[4] = v97;
        v29[5] = v99;
        sub_250511528(v29[6], v29[7]);
        unint64_t v101 = v130;
        v29[6] = v131;
        v29[7] = v101;
        sub_250598BA8((uint64_t)v29, v85, type metadata accessor for GKCrypto_GroupHandle.CiphertextAndTag);
        sub_2504DAF60((uint64_t)v84, &qword_269AB5EF8);
        uint64_t v102 = v135[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_250511F34(0, *(void *)(v102 + 16) + 1, 1);
          uint64_t v102 = v135[0];
        }
        uint64_t v103 = v126;
        unint64_t v105 = *(void *)(v102 + 16);
        unint64_t v104 = *(void *)(v102 + 24);
        if (v105 >= v104 >> 1)
        {
          sub_250511F34(v104 > 1, v105 + 1, 1);
          uint64_t v103 = v126;
          uint64_t v102 = v135[0];
        }
        *(void *)(v102 + 16) = v105 + 1;
        sub_250598BA8(v85, v102+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v105, type metadata accessor for GKCrypto_GroupHandle.CiphertextAndTag);
        uint64_t v81 = v132 + v122;
        --v138;
        uint64_t v83 = v128;
        uint64_t v48 = (char *)v129;
      }
      while (v138);
      swift_bridgeObjectRelease();
      os_log_type_t v69 = v113;
      uint64_t v74 = v114;
      uint64_t v68 = v115;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v102 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    v69[4] = v102;
    sub_250598720(&qword_269AB6418, (void (*)(uint64_t))type metadata accessor for GKCrypto_GroupHandle);
    uint64_t v106 = v110;
    uint64_t v107 = sub_2505BDB40();
    if (!v106) {
      uint64_t v48 = (char *)v107;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v112, v74);
    sub_250598B48((uint64_t)v69, type metadata accessor for GKCrypto_GroupHandle);
    return (uint64_t)v48;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_250592B6C(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  uint64_t v9 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = a3(v9);
  }
  uint64_t v10 = *(void *)(v9 + 16);
  v12[0] = v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  uint64_t result = sub_250595B64(v12, a2, a4);
  *a1 = v9;
  return result;
}

uint64_t sub_250592C40(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *(void *)(*a1 + 16);
  uint64_t v3 = *(void *)(sub_2505948D4(*a1) + 16);
  swift_bridgeObjectRelease();
  if (v2 == v3)
  {
    uint64_t v4 = *(void *)(v1 + 16);
    uint64_t v5 = *(void *)(sub_250594DB4(v1) + 16);
    swift_bridgeObjectRelease();
    if (v4 == v5)
    {
      uint64_t v6 = *(void *)(v1 + 16);
      uint64_t v7 = *(void *)(sub_2505954B0(v1) + 16);
      uint64_t result = swift_bridgeObjectRelease();
      if (v6 == v7) {
        return result;
      }
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_2505BDC40();
      __swift_project_value_buffer(v9, (uint64_t)qword_269AC3188);
      os_log_type_t v10 = sub_2505BE3D0();
      uint64_t v11 = sub_2505BDC20();
      os_log_type_t v12 = v10;
      if (os_log_type_enabled(v11, v10))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_2504D2000, v11, v12, "user in group does not have necessary UserKeyingInfo information", v13, 2u);
        MEMORY[0x25337FF10](v13, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(unsigned char *)uint64_t v14 = 17;
      uint64_t v15 = 241;
    }
    else
    {
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_2505BDC40();
      __swift_project_value_buffer(v21, (uint64_t)qword_269AC3188);
      os_log_type_t v22 = sub_2505BE3D0();
      uint64_t v23 = sub_2505BDC20();
      os_log_type_t v24 = v22;
      if (os_log_type_enabled(v23, v22))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl(&dword_2504D2000, v23, v24, "user in group does not have necessary diversification key information", v25, 2u);
        MEMORY[0x25337FF10](v25, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(unsigned char *)uint64_t v14 = 18;
      uint64_t v15 = 237;
    }
  }
  else
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_2505BDC40();
    __swift_project_value_buffer(v16, (uint64_t)qword_269AC3188);
    os_log_type_t v17 = sub_2505BE3D0();
    uint64_t v18 = sub_2505BDC20();
    os_log_type_t v19 = v17;
    if (os_log_type_enabled(v18, v17))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_2504D2000, v18, v19, "user in group does not have necessary KeyShare information", v20, 2u);
      MEMORY[0x25337FF10](v20, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    swift_allocError();
    *(unsigned char *)uint64_t v14 = 16;
    uint64_t v15 = 233;
  }
  *(unsigned char *)(v14 + 1) = 1;
  *(void *)(v14 + 8) = v15;
  *(void *)(v14 + 16) = 0xD000000000000011;
  *(void *)(v14 + 24) = 0x80000002505CC4F0;
  *(void *)(v14 + 32) = 0xD00000000000005CLL;
  *(void *)(v14 + 40) = 0x80000002505CC510;
  return swift_willThrow();
}

uint64_t sub_250592FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v67 = a8;
  unint64_t v65 = a6;
  uint64_t v66 = a7;
  uint64_t v63 = a4;
  unint64_t v64 = a5;
  uint64_t v62 = a1;
  uint64_t v9 = sub_2505BDF30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  os_log_type_t v69 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15, v17, v18, v19, v20);
  os_log_type_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
  uint64_t v28 = MEMORY[0x270FA5388](v23 - 8, v24, v25, v26, v27);
  uint64_t v30 = (char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28, v31, v32, v33, v34);
  uint64_t v36 = (char *)&v56 - v35;
  uint64_t v73 = a3 + *(int *)(type metadata accessor for GroupMembership.MemberProperties(0) + 24);
  sub_2504DAEFC(v73, (uint64_t)v36, &qword_269AB5E80);
  uint64_t v37 = type metadata accessor for UserKeyingInfo(0);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  uint64_t v70 = v38 + 48;
  uint64_t v71 = v39;
  uint64_t result = v39(v36, 1, v37);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v41 = &v36[*(int *)(v37 + 20)];
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v61(v22, v41, v9);
  sub_250598B48((uint64_t)v36, type metadata accessor for UserKeyingInfo);
  uint64_t v42 = sub_2505BDF10();
  unint64_t v44 = v43;
  uint64_t v45 = sub_2504DBF8C(v42, v43);
  unint64_t v59 = v46;
  uint64_t v60 = v45;
  sub_250511528(v42, v44);
  uint64_t v47 = v9;
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v58 = v10 + 8;
  uint64_t result = v57(v22, v9);
  unint64_t v48 = *(void *)(a3 + 16);
  if (v48 >> 60 == 15)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v49 = *(void *)(a3 + 8);
  sub_2504DBC4C(v49, *(void *)(a3 + 16));
  uint64_t v50 = sub_2504DBF8C(v49, v48);
  unint64_t v56 = v51;
  sub_25051B8D4(v49, v48);
  sub_2504DAEFC(v73, (uint64_t)v30, &qword_269AB5E80);
  uint64_t result = v71(v30, 1, v37);
  if (result == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v52 = v69;
  v61(v69, &v30[*(int *)(v37 + 20)], v47);
  uint64_t result = sub_250598B48((uint64_t)v30, type metadata accessor for UserKeyingInfo);
  unint64_t v53 = *(void *)(a3 + 16);
  if (v53 >> 60 == 15)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v54 = *(void *)(a3 + 8);
  v72[0] = v54;
  v72[1] = v53;
  sub_2504DBC4C(v54, v53);
  uint64_t v55 = v68;
  sub_2505933BC(v72, v64, v65, v66, v67, v62);
  if (v55)
  {
    sub_250511528(v60, v59);
    sub_250511528(v50, v56);
    sub_25051B8D4(v54, v53);
    return v57(v52, v47);
  }
  else
  {
    sub_25051B8D4(v54, v53);
    v57(v52, v47);
    return v60;
  }
}

uint64_t sub_2505933BC@<X0>(uint64_t *a1@<X2>, unint64_t a2@<X3>, unint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v84 = a4;
  uint64_t v85 = a5;
  unint64_t v92 = a2;
  unint64_t v93 = a3;
  uint64_t v86 = a6;
  uint64_t v8 = sub_2505BDCE0();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v8, v9, v10, v11, v12);
  uint64_t v98 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  uint64_t v83 = (char *)v78 - v20;
  MEMORY[0x270FA5388](v19, v21, v22, v23, v24);
  os_log_type_t v87 = (char *)v78 - v25;
  uint64_t v26 = sub_2505BDF30();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26, v28, v29, v30, v31);
  uint64_t v33 = (char *)v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_2505BDCA0();
  uint64_t v90 = *(void *)(v34 - 8);
  uint64_t v91 = v34;
  uint64_t v39 = MEMORY[0x270FA5388](v34, v35, v36, v37, v38);
  uint64_t v41 = (char *)v78 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39, v42, v43, v44, v45);
  uint64_t v46 = *a1;
  uint64_t v47 = a1[1];
  uint64_t v82 = v46;
  uint64_t v89 = (char *)v78 - v48;
  uint64_t result = sub_2505BDF40();
  if (!v6)
  {
    sub_2505BDF50();
    uint64_t v50 = sub_2505BDEE0();
    v78[1] = v47;
    uint64_t v51 = v50;
    uint64_t v81 = v8;
    unint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v33, v26);
    uint64_t v54 = sub_2505BDEE0();
    unint64_t v56 = v55;
    uint64_t v96 = v51;
    unint64_t v97 = v53;
    sub_2504DBC4C(v51, v53);
    sub_2505980CC(v54, v56);
    sub_250511528(v54, v56);
    unint64_t v57 = v53;
    uint64_t v58 = v81;
    sub_250511528(v51, v57);
    uint64_t v59 = v96;
    unint64_t v60 = v97;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v41, v89, v91);
    sub_250598720(&qword_269AB6BD8, MEMORY[0x263F04608]);
    uint64_t v61 = v83;
    sub_2505BDCC0();
    unint64_t v79 = v60;
    uint64_t v80 = v59;
    uint64_t v96 = v59;
    unint64_t v97 = v60;
    unint64_t v94 = v92;
    unint64_t v95 = v93;
    sub_2505BE0E0();
    sub_250598720((unint64_t *)&qword_269AB5FB0, MEMORY[0x263F047F8]);
    unint64_t v76 = sub_25051AE60();
    unint64_t v77 = v76;
    uint64_t v62 = v87;
    sub_2505BDE00();
    uint64_t v63 = *(uint64_t (**)(char *, uint64_t))(v88 + 8);
    uint64_t v64 = v63(v61, v58);
    MEMORY[0x270FA5388](v64, v65, v66, v67, v68);
    uint64_t v69 = sub_2505BDCB0();
    MEMORY[0x270FA5388](v69, v70, v71, v72, v73);
    uint64_t v74 = v85;
    v78[-4] = v62;
    v78[-3] = v74;
    unint64_t v76 = v92;
    unint64_t v77 = v93;
    sub_2505BDDD0();
    sub_2505BDCB0();
    sub_250511528(v80, v79);
    uint64_t v75 = v81;
    v63(v98, v81);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v91);
    return v63(v62, v75);
  }
  return result;
}

uint64_t sub_2505938D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E70);
  MEMORY[0x270FA5388](v11 - 8, v12, v13, v14, v15);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[2] = a1;
  v21[3] = a2;
  uint64_t v18 = sub_2505BDD70();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a4, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  v21[0] = a5;
  v21[1] = a6;
  sub_250598788();
  sub_25051AE60();
  sub_2505BDD40();
  return sub_2504DAF60((uint64_t)v17, &qword_269AB5E70);
}

uint64_t sub_250593A5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a2;
  uint64_t v6 = sub_2505BDD70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (char *)a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5EF8) + 64);
  uint64_t v14 = *a1;
  unint64_t v15 = a1[1];
  *a4 = *a1;
  a4[1] = v15;
  uint64_t v16 = a1[6];
  unint64_t v17 = a1[7];
  a4[2] = v16;
  a4[3] = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v26, v6);
  unint64_t v19 = a1[3];
  uint64_t v30 = a1[2];
  uint64_t v18 = v30;
  unint64_t v31 = v19;
  uint64_t v20 = a1[4];
  unint64_t v21 = a1[5];
  uint64_t v28 = v20;
  unint64_t v29 = v21;
  sub_2504DBC4C(v14, v15);
  sub_2504DBC4C(v16, v17);
  sub_2504DBC4C(v18, v19);
  sub_2504DBC4C(v20, v21);
  sub_25051AE60();
  uint64_t v22 = v32;
  uint64_t result = sub_2505BDDA0();
  if (v22)
  {
    sub_250511528(v16, v17);
    uint64_t result = sub_250511528(v14, v15);
    *uint64_t v25 = v22;
  }
  return result;
}

uint64_t sub_250593C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  v24[1] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5EF8);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5, v7, v8, v9, v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2505BDDD0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  uint64_t v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(int *)(v6 + 72);
  uint64_t v22 = &v12[v21];
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(&v12[v21], a1 + v21, v13);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v22, v13);
  sub_250593DA8(a3);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v13);
}

uint64_t sub_250593DA8@<X0>(uint64_t a1@<X8>)
{
  sub_25051AE60();
  uint64_t v2 = sub_2505BDD30();
  unint64_t v10 = v3;
  unint64_t v4 = v3 >> 62;
  sub_2504DBC4C(v2, v3);
  sub_2505BDCC0();
  uint64_t v5 = sub_2505BDCE0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 0, 1, v5);
  switch(v4)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v2), v2)) {
        goto LABEL_8;
      }
      uint64_t v6 = HIDWORD(v2) - (int)v2;
LABEL_5:
      if (v6 < 0)
      {
        __break(1u);
LABEL_8:
        __break(1u);
LABEL_9:
        __break(1u);
        JUMPOUT(0x250593F40);
      }
LABEL_6:
      sub_2505BD8D0();
      return sub_250511528(v2, v10);
    case 2uLL:
      uint64_t v8 = *(void *)(v2 + 16);
      uint64_t v7 = *(void *)(v2 + 24);
      uint64_t v6 = v7 - v8;
      if (!__OFSUB__(v7, v8)) {
        goto LABEL_5;
      }
      goto LABEL_9;
    default:
      goto LABEL_6;
  }
}

uint64_t sub_250593F50(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v3 = sub_2505BDDD0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = sub_2505BDD80();
  unint64_t v20 = v19;
  uint64_t v21 = sub_2505BDD80();
  unint64_t v23 = v22;
  char v24 = sub_25051AAD8(v18, v20, v21, v22);
  sub_250511528(v21, v23);
  sub_250511528(v18, v20);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v25(v17, v36, v3);
  v25(v11, a2, v3);
  if (v24)
  {
    uint64_t v26 = sub_2505BDD90();
    unint64_t v28 = v27;
    uint64_t v29 = sub_2505BDD90();
    unint64_t v31 = v30;
    char v32 = sub_25051AAD8(v26, v28, v29, v30);
    sub_250511528(v29, v31);
    sub_250511528(v26, v28);
  }
  else
  {
    char v32 = 0;
  }
  uint64_t v33 = *(void (**)(char *, uint64_t))(v4 + 8);
  v33(v11, v3);
  v33(v17, v3);
  return v32 & 1;
}

uint64_t sub_250594148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = MEMORY[0x270FA5388](a1, a2, a3, a4, a5);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t *)MEMORY[0x270FA5388](v8, v11, v12, v13, v14);
  uint64_t v17 = (char *)&v21 - v16;
  char v18 = sub_25051AAD8(*v15, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
  sub_250598A94(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for HashAndCipher);
  sub_250598A94(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HashAndCipher);
  if (v18) {
    char v19 = sub_250593F50((uint64_t)&v17[*(int *)(a3 + 20)], (uint64_t)&v10[*(int *)(a3 + 20)]);
  }
  else {
    char v19 = 0;
  }
  sub_250598B48((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HashAndCipher);
  sub_250598B48((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for HashAndCipher);
  return v19 & 1;
}

uint64_t sub_250594284@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void *a7@<X8>)
{
  uint64_t v73 = a6;
  unint64_t v71 = a4;
  uint64_t v72 = a5;
  uint64_t v69 = a2;
  unint64_t v70 = a3;
  uint64_t v65 = a7;
  uint64_t v8 = sub_2505BDDD0();
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v64 = v8;
  MEMORY[0x270FA5388](v8, v9, v10, v11, v12);
  uint64_t v75 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2505BDF30();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v14, v16, v17, v18, v19);
  unint64_t v77 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v22, v23, v24, v25);
  unint64_t v27 = (char *)&v62 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
  uint64_t v33 = MEMORY[0x270FA5388](v28 - 8, v29, v30, v31, v32);
  uint64_t v35 = (char *)&v62 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33, v36, v37, v38, v39);
  uint64_t v41 = (char *)&v62 - v40;
  uint64_t v42 = *(int *)(type metadata accessor for GroupMembership.MemberProperties(0) + 24);
  uint64_t v76 = a1;
  uint64_t v79 = a1 + v42;
  sub_2504DAEFC(a1 + v42, (uint64_t)v41, &qword_269AB5E80);
  uint64_t v43 = type metadata accessor for UserKeyingInfo(0);
  int64_t v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48);
  uint64_t result = v78(v41, 1, v43);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v45(v27, &v41[*(int *)(v43 + 20)], v14);
  sub_250598B48((uint64_t)v41, type metadata accessor for UserKeyingInfo);
  uint64_t v46 = sub_2505BDF10();
  uint64_t v81 = v14;
  uint64_t v47 = v46;
  unint64_t v49 = v48;
  uint64_t v66 = sub_2504DBF8C(v46, v48);
  unint64_t v67 = v50;
  uint64_t v51 = v47;
  uint64_t v52 = v81;
  sub_250511528(v51, v49);
  unint64_t v53 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v68 = v15 + 8;
  v53(v27, v52);
  sub_2504DAEFC(v79, (uint64_t)v35, &qword_269AB5E80);
  uint64_t result = v78(v35, 1, v43);
  if (result == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v54 = v77;
  v45(v77, &v35[*(int *)(v43 + 20)], v52);
  uint64_t result = sub_250598B48((uint64_t)v35, type metadata accessor for UserKeyingInfo);
  unint64_t v55 = *(void *)(v76 + 16);
  if (v55 >> 60 == 15)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v56 = *(void *)(v76 + 8);
  v80[0] = v56;
  v80[1] = v55;
  sub_2504DBC4C(v56, v55);
  uint64_t v57 = v74;
  uint64_t v58 = v75;
  sub_2505933BC(v80, v70, v71, v72, v73, v75);
  if (v57)
  {
    sub_250511528(v66, v67);
    sub_25051B8D4(v56, v55);
    return ((uint64_t (*)(char *, uint64_t))v53)(v54, v81);
  }
  else
  {
    sub_25051B8D4(v56, v55);
    v53(v54, v81);
    uint64_t v59 = type metadata accessor for HashAndCipher();
    unint64_t v60 = v65;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 32))((char *)v65 + *(int *)(v59 + 20), v58, v64);
    unint64_t v61 = v67;
    void *v60 = v66;
    v60[1] = v61;
  }
  return result;
}

uint64_t sub_2505946B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v34 = a3;
  uint64_t v6 = sub_2505BDD70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2505BDDD0();
  uint64_t v32 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  unint64_t v22 = a1[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, a2, v6);
  unint64_t v24 = a1[3];
  uint64_t v37 = a1[2];
  uint64_t v23 = v37;
  unint64_t v38 = v24;
  uint64_t v25 = a1[4];
  unint64_t v26 = a1[5];
  uint64_t v35 = v25;
  unint64_t v36 = v26;
  sub_2504DBC4C(v21, v22);
  sub_2504DBC4C(v23, v24);
  sub_2504DBC4C(v25, v26);
  sub_25051AE60();
  uint64_t v27 = v39;
  sub_2505BDDA0();
  if (v27)
  {
    uint64_t result = sub_250511528(v21, v22);
    *uint64_t v34 = v27;
  }
  else
  {
    uint64_t v29 = v33;
    *uint64_t v33 = v21;
    v29[1] = v22;
    uint64_t v30 = type metadata accessor for HashAndCipher();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))((char *)v29 + *(int *)(v30 + 20), v20, v14);
  }
  return result;
}

uint64_t sub_2505948D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
  uint64_t v7 = MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  uint64_t v64 = (void *)((char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v7, v9, v10, v11, v12);
  uint64_t v15 = (void *)((char *)v63 - v14);
  MEMORY[0x270FA5388](v13, v16, v17, v18, v19);
  uint64_t v21 = (void *)((char *)v63 - v20);
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v70 = a1 + 64;
  unint64_t v68 = MEMORY[0x263F8EE80];
  uint64_t v72 = MEMORY[0x263F8EE80];
  uint64_t v23 = -1 << *(unsigned char *)(a1 + 32);
  if (-v23 < 64) {
    uint64_t v24 = ~(-1 << -(char)v23);
  }
  else {
    uint64_t v24 = -1;
  }
  unint64_t v25 = v24 & v22;
  v63[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v69 = (unint64_t)(63 - v23) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v71 = 0;
  if (!v25) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v27 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  unint64_t v28 = v27 | (v71 << 6);
  while (1)
  {
    uint64_t v29 = *(void *)(a1 + 56);
    uint64_t v30 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v28);
    uint64_t v32 = *v30;
    unint64_t v31 = v30[1];
    uint64_t v33 = type metadata accessor for GroupMembership.MemberProperties(0);
    sub_250598A94(v29 + *(void *)(*(void *)(v33 - 8) + 72) * v28, (uint64_t)v21 + *(int *)(v2 + 48), type metadata accessor for GroupMembership.MemberProperties);
    *uint64_t v21 = v32;
    v21[1] = v31;
    sub_2505283F0((uint64_t)v21, (uint64_t)v15, &qword_269AB5E90);
    uint64_t v34 = *(int *)(v2 + 48);
    uint64_t v35 = (uint64_t)v15 + v34;
    unint64_t v36 = *(uint64_t *)((char *)v15 + v34 + 16);
    if (v36 >> 60 == 15)
    {
      sub_2504DBC4C(v32, v31);
      uint64_t result = sub_2504DAF60((uint64_t)v15, &qword_269AB5E90);
      if (v25) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v41 = *(void *)(v35 + 8);
      uint64_t v42 = v64;
      uint64_t v43 = (uint64_t)v64 + v34;
      unint64_t v44 = v15[1];
      uint64_t v66 = *v15;
      unint64_t v67 = v44;
      *uint64_t v64 = v66;
      v42[1] = v44;
      uint64_t v65 = v43;
      sub_250598BA8(v35, v43, type metadata accessor for GroupMembership.MemberProperties);
      unint64_t v45 = *(void *)(v68 + 16);
      if (*(void *)(v68 + 24) <= v45)
      {
        unint64_t v68 = v45 + 1;
        sub_2504DBC4C(v32, v31);
        sub_25051B908(v41, v36);
        sub_2505B5B74(v68, 1);
        uint64_t v46 = v72;
      }
      else
      {
        sub_2504DBC4C(v32, v31);
        sub_25051B908(v41, v36);
        uint64_t v46 = v68;
      }
      uint64_t v47 = v66;
      unint64_t v68 = v46;
      sub_2505BE850();
      unint64_t v48 = v67;
      sub_2504DBC4C(v47, v67);
      sub_2505BD950();
      sub_250511528(v47, v48);
      uint64_t result = sub_2505BE880();
      unint64_t v49 = (void *)v68;
      unint64_t v50 = v68 + 64;
      uint64_t v51 = -1 << *(unsigned char *)(v68 + 32);
      unint64_t v52 = result & ~v51;
      unint64_t v53 = v52 >> 6;
      if (((-1 << v52) & ~*(void *)(v68 + 64 + 8 * (v52 >> 6))) == 0)
      {
        char v55 = 0;
        unint64_t v56 = (unint64_t)(63 - v51) >> 6;
        while (++v53 != v56 || (v55 & 1) == 0)
        {
          BOOL v57 = v53 == v56;
          if (v53 == v56) {
            unint64_t v53 = 0;
          }
          v55 |= v57;
          uint64_t v58 = *(void *)(v50 + 8 * v53);
          if (v58 != -1)
          {
            unint64_t v54 = __clz(__rbit64(~v58)) + (v53 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v54 = __clz(__rbit64((-1 << v52) & ~*(void *)(v68 + 64 + 8 * (v52 >> 6)))) | v52 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(void *)(v50 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
      uint64_t v59 = 16 * v54;
      unint64_t v60 = (uint64_t *)(v49[6] + v59);
      unint64_t v61 = v67;
      uint64_t *v60 = v47;
      v60[1] = v61;
      uint64_t v62 = (uint64_t *)(v49[7] + v59);
      *uint64_t v62 = v41;
      v62[1] = v36;
      ++v49[2];
      uint64_t result = sub_250598B48(v65, type metadata accessor for GroupMembership.MemberProperties);
      if (v25) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v37 = v71 + 1;
    if (__OFADD__(v71, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v37 >= v69) {
      goto LABEL_39;
    }
    unint64_t v38 = *(void *)(v70 + 8 * v37);
    int64_t v39 = v71 + 1;
    if (!v38)
    {
      int64_t v39 = v71 + 2;
      if (v71 + 2 >= v69) {
        goto LABEL_39;
      }
      unint64_t v38 = *(void *)(v70 + 8 * v39);
      if (!v38)
      {
        int64_t v39 = v71 + 3;
        if (v71 + 3 >= v69) {
          goto LABEL_39;
        }
        unint64_t v38 = *(void *)(v70 + 8 * v39);
        if (!v38)
        {
          int64_t v39 = v71 + 4;
          if (v71 + 4 >= v69) {
            goto LABEL_39;
          }
          unint64_t v38 = *(void *)(v70 + 8 * v39);
          if (!v38) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v25 = (v38 - 1) & v38;
    unint64_t v28 = __clz(__rbit64(v38)) + (v39 << 6);
    int64_t v71 = v39;
  }
  int64_t v40 = v71 + 5;
  if (v71 + 5 >= v69)
  {
LABEL_39:
    sub_250528314();
    return v68;
  }
  unint64_t v38 = *(void *)(v70 + 8 * v40);
  if (v38)
  {
    int64_t v39 = v71 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v39 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v39 >= v69) {
      goto LABEL_39;
    }
    unint64_t v38 = *(void *)(v70 + 8 * v39);
    ++v40;
    if (v38) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_250594DB4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  uint64_t v94 = (uint64_t)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_2505BE0B0();
  uint64_t v8 = *(void *)(v97 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v97, v9, v10, v11, v12);
  uint64_t v90 = (char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  uint64_t v84 = (char *)v80 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
  uint64_t v25 = MEMORY[0x270FA5388](v20, v21, v22, v23, v24);
  uint64_t v82 = (void *)((char *)v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = MEMORY[0x270FA5388](v25, v27, v28, v29, v30);
  unint64_t v95 = (void *)((char *)v80 - v32);
  MEMORY[0x270FA5388](v31, v33, v34, v35, v36);
  unint64_t v93 = (void *)((char *)v80 - v37);
  uint64_t v99 = MEMORY[0x263F8EE80];
  uint64_t v38 = *(void *)(a1 + 64);
  uint64_t v86 = a1 + 64;
  uint64_t v39 = -1 << *(unsigned char *)(a1 + 32);
  if (-v39 < 64) {
    uint64_t v40 = ~(-1 << -(char)v39);
  }
  else {
    uint64_t v40 = -1;
  }
  unint64_t v41 = v40 & v38;
  v80[0] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v85 = (unint64_t)(63 - v39) >> 6;
  unint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v81 = v8;
  uint64_t v89 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v96 = 0;
  uint64_t v91 = a1;
  uint64_t v83 = v20;
  while (1)
  {
    if (v41)
    {
      uint64_t v98 = (v41 - 1) & v41;
      uint64_t v43 = v95;
      unint64_t v44 = __clz(__rbit64(v41)) | (v96 << 6);
      goto LABEL_25;
    }
    int64_t v45 = v96 + 1;
    if (__OFADD__(v96, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    uint64_t v43 = v95;
    if (v45 >= v85) {
      goto LABEL_40;
    }
    unint64_t v46 = *(void *)(v86 + 8 * v45);
    int64_t v47 = v96 + 1;
    if (!v46)
    {
      int64_t v47 = v96 + 2;
      if (v96 + 2 >= v85) {
        goto LABEL_40;
      }
      unint64_t v46 = *(void *)(v86 + 8 * v47);
      if (!v46)
      {
        int64_t v47 = v96 + 3;
        if (v96 + 3 >= v85) {
          goto LABEL_40;
        }
        unint64_t v46 = *(void *)(v86 + 8 * v47);
        if (!v46)
        {
          int64_t v47 = v96 + 4;
          if (v96 + 4 >= v85) {
            goto LABEL_40;
          }
          unint64_t v46 = *(void *)(v86 + 8 * v47);
          if (!v46) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v98 = (v46 - 1) & v46;
    unint64_t v44 = __clz(__rbit64(v46)) + (v47 << 6);
    int64_t v96 = v47;
LABEL_25:
    uint64_t v49 = *(void *)(a1 + 56);
    unint64_t v50 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v44);
    uint64_t v52 = *v50;
    unint64_t v51 = v50[1];
    unint64_t v53 = (int *)(type metadata accessor for GroupMembership.MemberProperties(0) - 8);
    unint64_t v54 = v93;
    sub_250598A94(v49 + *(void *)(*(void *)v53 + 72) * v44, (uint64_t)v93 + *(int *)(v20 + 48), type metadata accessor for GroupMembership.MemberProperties);
    *unint64_t v54 = v52;
    v54[1] = v51;
    sub_2505283F0((uint64_t)v54, (uint64_t)v43, &qword_269AB5E90);
    uint64_t v55 = (uint64_t)v43 + *(int *)(v20 + 48);
    uint64_t v56 = v94;
    sub_2504DAEFC(v55 + v53[9], v94, &qword_269AB5ED0);
    uint64_t v57 = v20;
    uint64_t v58 = v97;
    if ((*v92)(v56, 1, v97) == 1)
    {
      sub_2504DBC4C(v52, v51);
      sub_2504DAF60((uint64_t)v43, &qword_269AB5E90);
      uint64_t result = sub_2504DAF60(v56, &qword_269AB5ED0);
      uint64_t v20 = v57;
    }
    else
    {
      unint64_t v88 = v51;
      uint64_t v59 = *v89;
      unint64_t v60 = v84;
      (*v89)(v84, v56, v58);
      unint64_t v61 = v82;
      uint64_t v62 = (uint64_t)v82 + *(int *)(v57 + 48);
      uint64_t v64 = *v43;
      unint64_t v63 = v43[1];
      uint64_t v65 = v62;
      uint64_t *v82 = v64;
      v61[1] = v63;
      sub_250598BA8(v55, v62, type metadata accessor for GroupMembership.MemberProperties);
      os_log_type_t v87 = v59;
      v59(v90, (uint64_t)v60, v58);
      uint64_t v66 = v99;
      unint64_t v67 = *(void *)(v99 + 16);
      if (*(void *)(v99 + 24) <= v67)
      {
        uint64_t v68 = v67 + 1;
        sub_2504DBC4C(v52, v88);
        sub_2505B573C(v68, 1);
        uint64_t v66 = v99;
      }
      else
      {
        sub_2504DBC4C(v52, v88);
      }
      sub_2505BE850();
      sub_2504DBC4C(v64, v63);
      sub_2505BD950();
      sub_250511528(v64, v63);
      uint64_t result = sub_2505BE880();
      uint64_t v69 = v66 + 64;
      uint64_t v70 = -1 << *(unsigned char *)(v66 + 32);
      unint64_t v71 = result & ~v70;
      unint64_t v72 = v71 >> 6;
      uint64_t v20 = v83;
      if (((-1 << v71) & ~*(void *)(v66 + 64 + 8 * (v71 >> 6))) != 0)
      {
        unint64_t v73 = __clz(__rbit64((-1 << v71) & ~*(void *)(v66 + 64 + 8 * (v71 >> 6)))) | v71 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v74 = v97;
      }
      else
      {
        char v75 = 0;
        unint64_t v76 = (unint64_t)(63 - v70) >> 6;
        uint64_t v74 = v97;
        do
        {
          if (++v72 == v76 && (v75 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v77 = v72 == v76;
          if (v72 == v76) {
            unint64_t v72 = 0;
          }
          v75 |= v77;
          uint64_t v78 = *(void *)(v69 + 8 * v72);
        }
        while (v78 == -1);
        unint64_t v73 = __clz(__rbit64(~v78)) + (v72 << 6);
      }
      *(void *)(v69 + ((v73 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v73;
      uint64_t v79 = (uint64_t *)(*(void *)(v66 + 48) + 16 * v73);
      *uint64_t v79 = v64;
      v79[1] = v63;
      v87((char *)(*(void *)(v66 + 56) + *(void *)(v81 + 72) * v73), (uint64_t)v90, v74);
      ++*(void *)(v66 + 16);
      uint64_t result = sub_250598B48(v65, type metadata accessor for GroupMembership.MemberProperties);
    }
    a1 = v91;
    unint64_t v41 = v98;
  }
  int64_t v48 = v96 + 5;
  if (v96 + 5 >= v85)
  {
LABEL_40:
    sub_250528314();
    return v99;
  }
  unint64_t v46 = *(void *)(v86 + 8 * v48);
  if (v46)
  {
    int64_t v47 = v96 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v47 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v47 >= v85) {
      goto LABEL_40;
    }
    unint64_t v46 = *(void *)(v86 + 8 * v47);
    ++v48;
    if (v46) {
      goto LABEL_24;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2505954B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  uint64_t v94 = (uint64_t)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for UserKeyingInfo(0);
  uint64_t v8 = *(void *)(v95 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v95, v9, v10, v11, v12);
  uint64_t v89 = (uint64_t)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  uint64_t v86 = (uint64_t)v83 - v19;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
  uint64_t v24 = MEMORY[0x270FA5388](v97, v20, v21, v22, v23);
  int64_t v85 = (void *)((char *)v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = MEMORY[0x270FA5388](v24, v26, v27, v28, v29);
  uint64_t v32 = (void *)((char *)v83 - v31);
  MEMORY[0x270FA5388](v30, v33, v34, v35, v36);
  uint64_t v38 = (void *)((char *)v83 - v37);
  uint64_t v90 = (void *)MEMORY[0x263F8EE80];
  uint64_t v99 = (void *)MEMORY[0x263F8EE80];
  uint64_t v39 = *(void *)(a1 + 64);
  uint64_t v92 = a1 + 64;
  uint64_t v40 = -1 << *(unsigned char *)(a1 + 32);
  if (-v40 < 64) {
    uint64_t v41 = ~(-1 << -(char)v40);
  }
  else {
    uint64_t v41 = -1;
  }
  unint64_t v42 = v41 & v39;
  v83[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v91 = (unint64_t)(63 - v40) >> 6;
  uint64_t v84 = v8;
  unint64_t v93 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v96 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v98 = 0;
  if (!v42) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v44 = __clz(__rbit64(v42));
  v42 &= v42 - 1;
  unint64_t v45 = v44 | (v98 << 6);
  while (1)
  {
    uint64_t v46 = *(void *)(v96 + 56);
    int64_t v47 = (uint64_t *)(*(void *)(v96 + 48) + 16 * v45);
    uint64_t v49 = *v47;
    unint64_t v48 = v47[1];
    unint64_t v50 = (int *)(type metadata accessor for GroupMembership.MemberProperties(0) - 8);
    uint64_t v51 = v46 + *(void *)(*(void *)v50 + 72) * v45;
    uint64_t v52 = v97;
    sub_250598A94(v51, (uint64_t)v38 + *(int *)(v97 + 48), type metadata accessor for GroupMembership.MemberProperties);
    uint64_t *v38 = v49;
    v38[1] = v48;
    sub_2505283F0((uint64_t)v38, (uint64_t)v32, &qword_269AB5E90);
    uint64_t v53 = (uint64_t)v32 + *(int *)(v52 + 48);
    uint64_t v54 = v53 + v50[8];
    uint64_t v55 = v94;
    sub_2504DAEFC(v54, v94, &qword_269AB5E80);
    if ((*v93)(v55, 1, v95) == 1)
    {
      sub_2504DBC4C(v49, v48);
      sub_2504DAF60((uint64_t)v32, &qword_269AB5E90);
      uint64_t result = sub_2504DAF60(v55, &qword_269AB5E80);
      if (v42) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v60 = v86;
      sub_250598BA8(v55, v86, type metadata accessor for UserKeyingInfo);
      unint64_t v61 = v85;
      uint64_t v63 = *v32;
      unint64_t v64 = v32[1];
      uint64_t v87 = (uint64_t)v85 + *(int *)(v97 + 48);
      uint64_t v62 = v87;
      uint64_t v88 = v63;
      *int64_t v85 = v63;
      v61[1] = v64;
      unint64_t v65 = v64;
      sub_250598BA8(v53, v62, type metadata accessor for GroupMembership.MemberProperties);
      sub_250598BA8(v60, v89, type metadata accessor for UserKeyingInfo);
      unint64_t v66 = v90[2];
      if (v90[3] <= v66)
      {
        uint64_t v68 = v66 + 1;
        sub_2504DBC4C(v49, v48);
        sub_2505B5310(v68, 1);
        unint64_t v67 = v99;
      }
      else
      {
        sub_2504DBC4C(v49, v48);
        unint64_t v67 = v90;
      }
      uint64_t v69 = v88;
      uint64_t v70 = v67;
      sub_2505BE850();
      sub_2504DBC4C(v69, v65);
      sub_2505BD950();
      sub_250511528(v69, v65);
      uint64_t result = sub_2505BE880();
      unint64_t v71 = v70 + 8;
      uint64_t v90 = v70;
      uint64_t v72 = -1 << *((unsigned char *)v70 + 32);
      unint64_t v73 = result & ~v72;
      unint64_t v74 = v73 >> 6;
      if (((-1 << v73) & ~v70[(v73 >> 6) + 8]) == 0)
      {
        char v76 = 0;
        unint64_t v77 = (unint64_t)(63 - v72) >> 6;
        while (++v74 != v77 || (v76 & 1) == 0)
        {
          BOOL v78 = v74 == v77;
          if (v74 == v77) {
            unint64_t v74 = 0;
          }
          v76 |= v78;
          uint64_t v79 = v71[v74];
          if (v79 != -1)
          {
            unint64_t v75 = __clz(__rbit64(~v79)) + (v74 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v75 = __clz(__rbit64((-1 << v73) & ~v70[(v73 >> 6) + 8])) | v73 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(void *)((char *)v71 + ((v75 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v75;
      uint64_t v80 = v89;
      uint64_t v81 = v90;
      uint64_t v82 = (uint64_t *)(v90[6] + 16 * v75);
      uint64_t *v82 = v69;
      v82[1] = v65;
      sub_250598BA8(v80, v81[7] + *(void *)(v84 + 72) * v75, type metadata accessor for UserKeyingInfo);
      ++v81[2];
      uint64_t result = sub_250598B48(v87, type metadata accessor for GroupMembership.MemberProperties);
      if (v42) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v56 = v98 + 1;
    if (__OFADD__(v98, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v56 >= v91) {
      goto LABEL_39;
    }
    unint64_t v57 = *(void *)(v92 + 8 * v56);
    int64_t v58 = v98 + 1;
    if (!v57)
    {
      int64_t v58 = v98 + 2;
      if (v98 + 2 >= v91) {
        goto LABEL_39;
      }
      unint64_t v57 = *(void *)(v92 + 8 * v58);
      if (!v57)
      {
        int64_t v58 = v98 + 3;
        if (v98 + 3 >= v91) {
          goto LABEL_39;
        }
        unint64_t v57 = *(void *)(v92 + 8 * v58);
        if (!v57)
        {
          int64_t v58 = v98 + 4;
          if (v98 + 4 >= v91) {
            goto LABEL_39;
          }
          unint64_t v57 = *(void *)(v92 + 8 * v58);
          if (!v57) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v42 = (v57 - 1) & v57;
    unint64_t v45 = __clz(__rbit64(v57)) + (v58 << 6);
    int64_t v98 = v58;
  }
  int64_t v59 = v98 + 5;
  if (v98 + 5 >= v91)
  {
LABEL_39:
    sub_250528314();
    return (uint64_t)v90;
  }
  unint64_t v57 = *(void *)(v92 + 8 * v59);
  if (v57)
  {
    int64_t v58 = v98 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v58 = v59 + 1;
    if (__OFADD__(v59, 1)) {
      break;
    }
    if (v58 >= v91) {
      goto LABEL_39;
    }
    unint64_t v57 = *(void *)(v92 + 8 * v58);
    ++v59;
    if (v57) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_250595B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_250592FE8(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_250595B64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v335 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
  uint64_t v11 = MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v13 = (char *)&v311 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v11, v14, v15, v16, v17);
  uint64_t v341 = (uint64_t)&v311 - v19;
  uint64_t v24 = MEMORY[0x270FA5388](v18, v20, v21, v22, v23);
  uint64_t v328 = (uint64_t)&v311 - v25;
  uint64_t v30 = MEMORY[0x270FA5388](v24, v26, v27, v28, v29);
  uint64_t v32 = (char *)&v311 - v31;
  uint64_t v37 = MEMORY[0x270FA5388](v30, v33, v34, v35, v36);
  uint64_t v314 = (uint64_t)&v311 - v38;
  MEMORY[0x270FA5388](v37, v39, v40, v41, v42);
  uint64_t v315 = (uint64_t)&v311 - v43;
  uint64_t v347 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v48 = MEMORY[0x270FA5388](v347, v44, v45, v46, v47);
  unint64_t v50 = (char *)&v311 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x270FA5388](v48, v51, v52, v53, v54);
  uint64_t v358 = (uint64_t)&v311 - v56;
  uint64_t v61 = MEMORY[0x270FA5388](v55, v57, v58, v59, v60);
  uint64_t v329 = (uint64_t)&v311 - v62;
  uint64_t v67 = MEMORY[0x270FA5388](v61, v63, v64, v65, v66);
  uint64_t v333 = (uint64_t)&v311 - v68;
  uint64_t v73 = MEMORY[0x270FA5388](v67, v69, v70, v71, v72);
  uint64_t v319 = (uint64_t)&v311 - v74;
  MEMORY[0x270FA5388](v73, v75, v76, v77, v78);
  uint64_t v318 = (uint64_t)&v311 - v79;
  uint64_t v350 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v336 = *(void *)(v350 - 8);
  uint64_t v84 = MEMORY[0x270FA5388](v350, v80, v81, v82, v83);
  uint64_t v327 = (uint64_t)&v311 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = MEMORY[0x270FA5388](v84, v86, v87, v88, v89);
  uint64_t v351 = (uint64_t)&v311 - v91;
  uint64_t v96 = MEMORY[0x270FA5388](v90, v92, v93, v94, v95);
  uint64_t v357 = (uint64_t)&v311 - v97;
  uint64_t v102 = MEMORY[0x270FA5388](v96, v98, v99, v100, v101);
  uint64_t v356 = (uint64_t)&v311 - v103;
  uint64_t v108 = MEMORY[0x270FA5388](v102, v104, v105, v106, v107);
  uint64_t v332 = (uint64_t)&v311 - v109;
  uint64_t v114 = MEMORY[0x270FA5388](v108, v110, v111, v112, v113);
  uint64_t v331 = (uint64_t)&v311 - v115;
  uint64_t v120 = MEMORY[0x270FA5388](v114, v116, v117, v118, v119);
  unint64_t v346 = (char *)&v311 - v121;
  uint64_t v126 = MEMORY[0x270FA5388](v120, v122, v123, v124, v125);
  uint64_t v317 = (uint64_t)&v311 - v127;
  MEMORY[0x270FA5388](v126, v128, v129, v130, v131);
  uint64_t v316 = (uint64_t)&v311 - v132;
  uint64_t v133 = a1[1];
  uint64_t result = sub_2505BE760();
  if (result >= v133)
  {
    if (v133 < 0) {
      goto LABEL_153;
    }
    if (v133) {
      return sub_250596F78(0, v133, 1, a1, a2);
    }
    return result;
  }
  if (v133 >= 0) {
    uint64_t v135 = v133;
  }
  else {
    uint64_t v135 = v133 + 1;
  }
  if (v133 < -1) {
    goto LABEL_167;
  }
  uint64_t v313 = result;
  uint64_t v337 = v3;
  if (v133 < 2)
  {
    unint64_t v334 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v336 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v336 + 80));
    uint64_t v312 = MEMORY[0x263F8EE78];
    if (v133 != 1)
    {
      unint64_t v141 = *(void *)(MEMORY[0x263F8EE78] + 16);
      os_log_type_t v140 = (char *)MEMORY[0x263F8EE78];
LABEL_116:
      if (v141 >= 2)
      {
        uint64_t v303 = *a1;
        uint64_t v302 = v312;
        while (1)
        {
          unint64_t v304 = v141 - 2;
          if (v141 < 2) {
            goto LABEL_148;
          }
          if (!v303) {
            goto LABEL_164;
          }
          v338 = v140;
          uint64_t v305 = *(void *)&v140[16 * v304 + 32];
          uint64_t v306 = *(void *)&v140[16 * v141 + 24];
          uint64_t v307 = v337;
          sub_250597500(v303 + *(void *)(v336 + 72) * v305, v303 + *(void *)(v336 + 72) * *(void *)&v140[16 * v141 + 16], v303 + *(void *)(v336 + 72) * v306, v334, a2, v335);
          uint64_t v337 = v307;
          if (v307) {
            goto LABEL_130;
          }
          if (v306 < v305) {
            goto LABEL_149;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v308 = v338;
          }
          else {
            unint64_t v308 = sub_25058F1A4((uint64_t)v338);
          }
          if (v304 >= *((void *)v308 + 2)) {
            goto LABEL_150;
          }
          char v309 = &v308[16 * v304 + 32];
          *(void *)char v309 = v305;
          *((void *)v309 + 1) = v306;
          unint64_t v310 = *((void *)v308 + 2);
          if (v141 > v310) {
            goto LABEL_151;
          }
          memmove(&v308[16 * v141 + 16], &v308[16 * v141 + 32], 16 * (v310 - v141));
          os_log_type_t v140 = v308;
          *((void *)v308 + 2) = v310 - 1;
          unint64_t v141 = v310 - 1;
          if (v310 <= 2) {
            goto LABEL_130;
          }
        }
      }
      uint64_t v302 = v312;
LABEL_130:
      swift_bridgeObjectRelease();
      *(void *)(v302 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v325 = v32;
    uint64_t v339 = v13;
  }
  else
  {
    uint64_t v325 = v32;
    uint64_t v339 = v13;
    uint64_t v136 = v135 >> 1;
    uint64_t v137 = sub_2505BE2F0();
    *(void *)(v137 + 16) = v136;
    uint64_t v138 = *(unsigned __int8 *)(v336 + 80);
    uint64_t v312 = v137;
    unint64_t v334 = v137 + ((v138 + 32) & ~v138);
  }
  uint64_t v139 = 0;
  os_log_type_t v140 = (char *)MEMORY[0x263F8EE78];
  v345 = a2;
  uint64_t v348 = v50;
  uint64_t v340 = a1;
  while (1)
  {
    v338 = v140;
    uint64_t v330 = v139;
    if (v139 + 1 >= v133)
    {
      uint64_t v174 = v139 + 1;
    }
    else
    {
      uint64_t v352 = v133;
      uint64_t v142 = *a1;
      uint64_t v143 = v139;
      uint64_t v144 = *(void *)(v336 + 72);
      uint64_t v349 = v139 + 1;
      uint64_t v145 = v316;
      sub_2504DAEFC(v142 + v144 * (v139 + 1), v316, a2);
      unint64_t v320 = v142;
      uint64_t v355 = v144;
      uint64_t v146 = v317;
      sub_2504DAEFC(v142 + v144 * v143, v317, a2);
      uint64_t v147 = v350;
      uint64_t v148 = *(int *)(v350 + 48);
      unint64_t v149 = v346;
      uint64_t v150 = (uint64_t)&v346[v148];
      sub_250598A94(v145 + v148, (uint64_t)&v346[v148], type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v151 = v318;
      sub_250598BA8(v150, v318, type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v152 = *(int *)(v147 + 48);
      uint64_t v153 = (uint64_t)&v149[v152];
      sub_250598A94(v146 + v152, (uint64_t)&v149[v152], type metadata accessor for GroupMembership.MemberProperties);
      sub_250598BA8(v153, v319, type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v154 = v347;
      uint64_t v155 = v315;
      sub_2504DAEFC(v151 + *(int *)(v347 + 28), v315, &qword_269AB5ED0);
      uint64_t v156 = sub_2505BE0B0();
      uint64_t v157 = *(void *)(v156 - 8);
      uint64_t v159 = v157 + 48;
      uint64_t v158 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
      if (v158(v155, 1, v156) == 1) {
        goto LABEL_165;
      }
      uint64_t v160 = sub_2505BDEE0();
      unint64_t v353 = v161;
      unint64_t v354 = v160;
      unint64_t v163 = *(void (**)(void, void))(v157 + 8);
      uint64_t v162 = v157 + 8;
      uint64_t v164 = v155;
      os_log_t v165 = v163;
      v163(v164, v156);
      uint64_t v166 = v314;
      sub_2504DAEFC(v319 + *(int *)(v154 + 28), v314, &qword_269AB5ED0);
      uint64_t v342 = v158;
      uint64_t v343 = v159;
      if (v158(v166, 1, v156) == 1) {
        goto LABEL_166;
      }
      uint64_t v167 = v166;
      uint64_t v168 = sub_2505BDEE0();
      unint64_t v170 = v169;
      uint64_t v326 = v156;
      unint64_t v171 = v165;
      v165(v167, v156);
      unint64_t v173 = v353;
      uint64_t v172 = v354;
      LODWORD(v344) = sub_250559F4C(v168, v170, v354, v353);
      sub_250511528(v168, v170);
      sub_250511528(v172, v173);
      sub_250598B48(v319, type metadata accessor for GroupMembership.MemberProperties);
      sub_250598B48(v318, type metadata accessor for GroupMembership.MemberProperties);
      sub_2504DAF60(v317, a2);
      sub_2504DAF60(v316, a2);
      uint64_t v139 = v330;
      uint64_t v174 = v330 + 2;
      uint64_t v133 = v352;
      if (v330 + 2 < v352)
      {
        uint64_t v175 = v171;
        uint64_t v322 = v162;
        uint64_t v324 = v355 * v349;
        unint64_t v176 = v320;
        uint64_t v323 = v355 * v174;
        os_log_type_t v321 = v175;
        while (1)
        {
          uint64_t v349 = v174;
          uint64_t v177 = v331;
          sub_2504DAEFC(v176 + v323, v331, a2);
          unint64_t v353 = v176;
          uint64_t v178 = v332;
          sub_2504DAEFC(v176 + v324, v332, a2);
          uint64_t v179 = v350;
          uint64_t v180 = *(int *)(v350 + 48);
          unint64_t v181 = v346;
          uint64_t v182 = (uint64_t)&v346[v180];
          sub_250598A94(v177 + v180, (uint64_t)&v346[v180], type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v183 = v333;
          sub_250598BA8(v182, v333, type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v184 = *(int *)(v179 + 48);
          uint64_t v185 = (uint64_t)&v181[v184];
          sub_250598A94(v178 + v184, (uint64_t)&v181[v184], type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v186 = v329;
          sub_250598BA8(v185, v329, type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v187 = v347;
          uint64_t v188 = (uint64_t)v325;
          sub_2504DAEFC(v183 + *(int *)(v347 + 28), (uint64_t)v325, &qword_269AB5ED0);
          uint64_t v189 = v326;
          uint64_t v190 = v342;
          if (v342(v188, 1, v326) == 1) {
            goto LABEL_161;
          }
          unint64_t v354 = sub_2505BDEE0();
          unint64_t v192 = v191;
          unint64_t v193 = v321;
          v321(v188, v189);
          uint64_t v194 = v328;
          sub_2504DAEFC(v186 + *(int *)(v187 + 28), v328, &qword_269AB5ED0);
          if (v190(v194, 1, v189) == 1) {
            goto LABEL_162;
          }
          uint64_t v195 = v189;
          uint64_t v196 = v186;
          uint64_t v197 = sub_2505BDEE0();
          unint64_t v199 = v198;
          v193(v194, v195);
          uint64_t v200 = v354;
          int v201 = sub_250559F4C(v197, v199, v354, v192);
          sub_250511528(v197, v199);
          sub_250511528(v200, v192);
          sub_250598B48(v196, type metadata accessor for GroupMembership.MemberProperties);
          sub_250598B48(v333, type metadata accessor for GroupMembership.MemberProperties);
          a2 = v345;
          sub_2504DAF60(v332, v345);
          sub_2504DAF60(v331, a2);
          if ((v344 ^ v201)) {
            break;
          }
          uint64_t v174 = v349 + 1;
          uint64_t v133 = v352;
          unint64_t v176 = v353 + v355;
          if (v352 == v349 + 1)
          {
            uint64_t v174 = v352;
            a1 = v340;
            uint64_t v139 = v330;
            goto LABEL_28;
          }
        }
        a1 = v340;
        uint64_t v174 = v349;
        uint64_t v139 = v330;
        uint64_t v133 = v352;
      }
LABEL_28:
      unint64_t v50 = v348;
      if (v344)
      {
        if (v174 < v139) {
          goto LABEL_154;
        }
        if (v139 < v174)
        {
          uint64_t v202 = 0;
          uint64_t v203 = v355 * (v174 - 1);
          uint64_t v204 = v174 * v355;
          uint64_t v205 = v139;
          uint64_t v206 = v139 * v355;
          uint64_t v349 = v174;
          do
          {
            if (v205 != v174 + v202 - 1)
            {
              unint64_t v208 = v320;
              if (!v320) {
                goto LABEL_163;
              }
              unint64_t v209 = v320 + v206;
              unint64_t v354 = v320 + v203;
              sub_2505283F0(v320 + v206, v327, a2);
              if (v206 < v203 || v209 >= v208 + v204)
              {
                uint64_t v207 = v354;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v207 = v354;
                if (v206 != v203) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_2505283F0(v327, v207, a2);
              uint64_t v174 = v349;
            }
            ++v205;
            --v202;
            v203 -= v355;
            v204 -= v355;
            v206 += v355;
          }
          while (v205 < v174 + v202);
          unint64_t v50 = v348;
          uint64_t v139 = v330;
          uint64_t v133 = v352;
        }
      }
    }
    if (v174 < v133) {
      break;
    }
LABEL_64:
    if (v174 < v139) {
      goto LABEL_147;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v349 = v174;
    if (isUniquelyReferenced_nonNull_native) {
      os_log_type_t v140 = v338;
    }
    else {
      os_log_type_t v140 = sub_25058EBC8(0, *((void *)v338 + 2) + 1, 1, v338);
    }
    unint64_t v249 = *((void *)v140 + 2);
    unint64_t v248 = *((void *)v140 + 3);
    unint64_t v141 = v249 + 1;
    if (v249 >= v248 >> 1) {
      os_log_type_t v140 = sub_25058EBC8((char *)(v248 > 1), v249 + 1, 1, v140);
    }
    *((void *)v140 + 2) = v141;
    unint64_t v250 = v140 + 32;
    os_log_t v251 = &v140[16 * v249 + 32];
    uint64_t v252 = v349;
    *(void *)os_log_t v251 = v330;
    *((void *)v251 + 1) = v252;
    if (v249)
    {
      v338 = v140;
      while (1)
      {
        unint64_t v253 = v141 - 1;
        if (v141 >= 4)
        {
          unint64_t v258 = &v250[16 * v141];
          uint64_t v259 = *((void *)v258 - 8);
          uint64_t v260 = *((void *)v258 - 7);
          BOOL v264 = __OFSUB__(v260, v259);
          uint64_t v261 = v260 - v259;
          if (v264) {
            goto LABEL_136;
          }
          uint64_t v263 = *((void *)v258 - 6);
          uint64_t v262 = *((void *)v258 - 5);
          BOOL v264 = __OFSUB__(v262, v263);
          uint64_t v256 = v262 - v263;
          char v257 = v264;
          if (v264) {
            goto LABEL_137;
          }
          unint64_t v265 = v141 - 2;
          uint64_t v266 = &v250[16 * v141 - 32];
          uint64_t v268 = *(void *)v266;
          uint64_t v267 = *((void *)v266 + 1);
          BOOL v264 = __OFSUB__(v267, v268);
          uint64_t v269 = v267 - v268;
          if (v264) {
            goto LABEL_139;
          }
          BOOL v264 = __OFADD__(v256, v269);
          uint64_t v270 = v256 + v269;
          if (v264) {
            goto LABEL_142;
          }
          if (v270 >= v261)
          {
            v288 = &v250[16 * v253];
            uint64_t v290 = *(void *)v288;
            uint64_t v289 = *((void *)v288 + 1);
            BOOL v264 = __OFSUB__(v289, v290);
            uint64_t v291 = v289 - v290;
            if (v264) {
              goto LABEL_146;
            }
            BOOL v281 = v256 < v291;
            goto LABEL_102;
          }
        }
        else
        {
          if (v141 != 3)
          {
            uint64_t v282 = *((void *)v140 + 4);
            uint64_t v283 = *((void *)v140 + 5);
            BOOL v264 = __OFSUB__(v283, v282);
            uint64_t v275 = v283 - v282;
            char v276 = v264;
            goto LABEL_96;
          }
          uint64_t v255 = *((void *)v140 + 4);
          uint64_t v254 = *((void *)v140 + 5);
          BOOL v264 = __OFSUB__(v254, v255);
          uint64_t v256 = v254 - v255;
          char v257 = v264;
        }
        if (v257) {
          goto LABEL_138;
        }
        unint64_t v265 = v141 - 2;
        unint64_t v271 = &v250[16 * v141 - 32];
        uint64_t v273 = *(void *)v271;
        uint64_t v272 = *((void *)v271 + 1);
        BOOL v274 = __OFSUB__(v272, v273);
        uint64_t v275 = v272 - v273;
        char v276 = v274;
        if (v274) {
          goto LABEL_141;
        }
        uint64_t v277 = &v250[16 * v253];
        uint64_t v279 = *(void *)v277;
        uint64_t v278 = *((void *)v277 + 1);
        BOOL v264 = __OFSUB__(v278, v279);
        uint64_t v280 = v278 - v279;
        if (v264) {
          goto LABEL_144;
        }
        if (__OFADD__(v275, v280)) {
          goto LABEL_145;
        }
        if (v275 + v280 >= v256)
        {
          BOOL v281 = v256 < v280;
LABEL_102:
          if (v281) {
            unint64_t v253 = v265;
          }
          goto LABEL_104;
        }
LABEL_96:
        if (v276) {
          goto LABEL_140;
        }
        uint64_t v284 = &v250[16 * v253];
        uint64_t v286 = *(void *)v284;
        uint64_t v285 = *((void *)v284 + 1);
        BOOL v264 = __OFSUB__(v285, v286);
        uint64_t v287 = v285 - v286;
        if (v264) {
          goto LABEL_143;
        }
        if (v287 < v275) {
          goto LABEL_15;
        }
LABEL_104:
        unint64_t v292 = v253 - 1;
        if (v253 - 1 >= v141)
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
          goto LABEL_156;
        }
        if (!*a1) {
          goto LABEL_160;
        }
        unint64_t v293 = &v250[16 * v292];
        uint64_t v294 = *(void *)v293;
        uint64_t v295 = v250;
        unint64_t v296 = v253;
        v297 = &v250[16 * v253];
        uint64_t v298 = *((void *)v297 + 1);
        uint64_t v299 = v337;
        sub_250597500(*a1 + *(void *)(v336 + 72) * *(void *)v293, *a1 + *(void *)(v336 + 72) * *(void *)v297, *a1 + *(void *)(v336 + 72) * v298, v334, a2, v335);
        uint64_t v337 = v299;
        if (v299)
        {
          uint64_t v302 = v312;
          goto LABEL_130;
        }
        if (v298 < v294) {
          goto LABEL_133;
        }
        v300 = v338;
        if (v296 > *((void *)v338 + 2)) {
          goto LABEL_134;
        }
        *(void *)unint64_t v293 = v294;
        *(void *)&v295[16 * v292 + 8] = v298;
        unint64_t v301 = *((void *)v300 + 2);
        if (v296 >= v301) {
          goto LABEL_135;
        }
        unint64_t v141 = v301 - 1;
        memmove(v297, v297 + 16, 16 * (v301 - 1 - v296));
        unint64_t v250 = v295;
        os_log_type_t v140 = v338;
        *((void *)v338 + 2) = v301 - 1;
        unint64_t v50 = v348;
        if (v301 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v141 = 1;
LABEL_15:
    uint64_t v133 = a1[1];
    uint64_t v139 = v349;
    if (v349 >= v133) {
      goto LABEL_116;
    }
  }
  BOOL v264 = __OFSUB__(v174, v139);
  uint64_t v210 = v174 - v139;
  if (v264) {
    goto LABEL_152;
  }
  if (v210 >= v313)
  {
LABEL_63:
    uint64_t v139 = v330;
    goto LABEL_64;
  }
  if (__OFADD__(v330, v313)) {
    goto LABEL_155;
  }
  if (v330 + v313 >= v133) {
    uint64_t v211 = v133;
  }
  else {
    uint64_t v211 = v330 + v313;
  }
  if (v211 >= v330)
  {
    if (v174 == v211)
    {
      uint64_t v139 = v330;
      goto LABEL_64;
    }
    long long v212 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v336 + 72);
    uint64_t v213 = (void)v212 * (v174 - 1);
    uint64_t v342 = v212;
    uint64_t v214 = v174 * (void)v212;
    uint64_t v326 = v211;
    do
    {
      uint64_t v216 = 0;
      uint64_t v217 = v330;
      uint64_t v349 = v174;
      uint64_t v343 = v214;
      uint64_t v344 = v213;
      while (1)
      {
        unint64_t v354 = v217;
        uint64_t v218 = *a1;
        unint64_t v353 = v214 + v216;
        uint64_t v219 = v356;
        sub_2504DAEFC(v214 + v216 + v218, v356, a2);
        uint64_t v355 = v216;
        uint64_t v352 = v213 + v216;
        uint64_t v220 = v357;
        sub_2504DAEFC(v213 + v216 + v218, v357, a2);
        uint64_t v221 = v350;
        uint64_t v222 = *(int *)(v350 + 48);
        uint64_t v223 = v346;
        uint64_t v224 = (uint64_t)&v346[v222];
        sub_250598A94(v219 + v222, (uint64_t)&v346[v222], type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v225 = v358;
        sub_250598BA8(v224, v358, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v226 = *(int *)(v221 + 48);
        uint64_t v227 = (uint64_t)&v223[v226];
        sub_250598A94(v220 + v226, (uint64_t)&v223[v226], type metadata accessor for GroupMembership.MemberProperties);
        sub_250598BA8(v227, (uint64_t)v50, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v228 = v347;
        uint64_t v229 = v341;
        sub_2504DAEFC(v225 + *(int *)(v347 + 28), v341, &qword_269AB5ED0);
        uint64_t v230 = sub_2505BE0B0();
        uint64_t v231 = *(void *)(v230 - 8);
        unint64_t v232 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48);
        if (v232(v229, 1, v230) == 1) {
          goto LABEL_157;
        }
        uint64_t v233 = sub_2505BDEE0();
        unint64_t v235 = v234;
        uint64_t v236 = *(void (**)(uint64_t, uint64_t))(v231 + 8);
        v236(v229, v230);
        uint64_t v237 = *(int *)(v228 + 28);
        unint64_t v50 = v348;
        uint64_t v238 = (uint64_t)v339;
        sub_2504DAEFC((uint64_t)&v348[v237], (uint64_t)v339, &qword_269AB5ED0);
        if (v232(v238, 1, v230) == 1) {
          goto LABEL_158;
        }
        uint64_t v239 = v238;
        uint64_t v240 = sub_2505BDEE0();
        unint64_t v242 = v241;
        v236(v239, v230);
        char v243 = sub_250559F4C(v240, v242, v233, v235);
        sub_250511528(v240, v242);
        sub_250511528(v233, v235);
        sub_250598B48((uint64_t)v50, type metadata accessor for GroupMembership.MemberProperties);
        sub_250598B48(v358, type metadata accessor for GroupMembership.MemberProperties);
        a2 = v345;
        sub_2504DAF60(v357, v345);
        sub_2504DAF60(v356, a2);
        a1 = v340;
        if ((v243 & 1) == 0) {
          break;
        }
        uint64_t v244 = *v340;
        uint64_t v214 = v343;
        uint64_t v213 = v344;
        if (!*v340) {
          goto LABEL_159;
        }
        uint64_t v245 = v355;
        uint64_t v246 = v244 + v344 + v355;
        sub_2505283F0(v244 + v343 + v355, v351, a2);
        swift_arrayInitWithTakeFrontToBack();
        sub_2505283F0(v351, v246, a2);
        uint64_t v216 = v245 - (void)v342;
        uint64_t v217 = v354 + 1;
        uint64_t v215 = v349;
        if (v349 == v354 + 1) {
          goto LABEL_54;
        }
      }
      uint64_t v215 = v349;
      uint64_t v214 = v343;
      uint64_t v213 = v344;
LABEL_54:
      uint64_t v174 = v215 + 1;
      v213 += (uint64_t)v342;
      v214 += (uint64_t)v342;
    }
    while (v174 != v326);
    uint64_t v174 = v326;
    goto LABEL_63;
  }
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  uint64_t result = sub_2505BE5E0();
  __break(1u);
  return result;
}

uint64_t sub_250596F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v107 = a4;
  uint64_t v91 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
  uint64_t v13 = MEMORY[0x270FA5388](v8 - 8, v9, v10, v11, v12);
  uint64_t v96 = &v89[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  uint64_t v20 = &v89[-v19];
  uint64_t v110 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v25 = MEMORY[0x270FA5388](v110, v21, v22, v23, v24);
  uint64_t v97 = &v89[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v25, v27, v28, v29, v30);
  uint64_t v32 = &v89[-v31];
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v37 = MEMORY[0x270FA5388](v103, v33, v34, v35, v36);
  uint64_t v104 = &v89[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = MEMORY[0x270FA5388](v37, v39, v40, v41, v42);
  uint64_t v98 = &v89[-v44];
  uint64_t v49 = MEMORY[0x270FA5388](v43, v45, v46, v47, v48);
  uint64_t v109 = &v89[-v50];
  uint64_t result = MEMORY[0x270FA5388](v49, v51, v52, v53, v54);
  uint64_t v58 = &v89[-v57];
  uint64_t v102 = a3;
  uint64_t v90 = a2;
  if (a3 != a2)
  {
    uint64_t v59 = *(void *)(v56 + 72);
    uint64_t v60 = v59 * (v102 - 1);
    uint64_t v99 = v59;
    uint64_t v61 = v59 * v102;
    uint64_t v94 = v20;
    uint64_t v95 = a5;
    uint64_t v92 = &v89[-v57];
    uint64_t v93 = v32;
LABEL_5:
    uint64_t v62 = 0;
    uint64_t v108 = v91;
    uint64_t v100 = v61;
    uint64_t v101 = v60;
    while (1)
    {
      uint64_t v63 = *v107;
      uint64_t v106 = v61 + v62;
      sub_2504DAEFC(v61 + v62 + v63, (uint64_t)v58, a5);
      uint64_t v111 = v62;
      uint64_t v105 = v60 + v62;
      uint64_t v64 = v60 + v62 + v63;
      uint64_t v65 = v109;
      sub_2504DAEFC(v64, (uint64_t)v109, a5);
      uint64_t v66 = v103;
      uint64_t v67 = *(int *)(v103 + 48);
      uint64_t v68 = v98;
      uint64_t v69 = (uint64_t)&v98[v67];
      sub_250598A94((uint64_t)&v58[v67], (uint64_t)&v98[v67], type metadata accessor for GroupMembership.MemberProperties);
      sub_250598BA8(v69, (uint64_t)v32, type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v70 = *(int *)(v66 + 48);
      uint64_t v71 = (uint64_t)&v68[v70];
      sub_250598A94((uint64_t)&v65[v70], (uint64_t)&v68[v70], type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v72 = v97;
      sub_250598BA8(v71, (uint64_t)v97, type metadata accessor for GroupMembership.MemberProperties);
      sub_2504DAEFC((uint64_t)&v32[*(int *)(v110 + 28)], (uint64_t)v20, &qword_269AB5ED0);
      uint64_t v73 = sub_2505BE0B0();
      uint64_t v74 = *(void *)(v73 - 8);
      uint64_t v75 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v74 + 48);
      uint64_t result = v75(v20, 1, v73);
      if (result == 1) {
        break;
      }
      uint64_t v76 = sub_2505BDEE0();
      unint64_t v78 = v77;
      uint64_t v79 = v20;
      uint64_t v80 = *(void (**)(unsigned char *, uint64_t))(v74 + 8);
      v80(v79, v73);
      uint64_t v81 = v96;
      sub_2504DAEFC((uint64_t)&v72[*(int *)(v110 + 28)], (uint64_t)v96, &qword_269AB5ED0);
      uint64_t result = v75(v81, 1, v73);
      if (result == 1) {
        goto LABEL_13;
      }
      uint64_t v82 = v81;
      uint64_t v83 = sub_2505BDEE0();
      unint64_t v85 = v84;
      v80(v82, v73);
      char v86 = sub_250559F4C(v83, v85, v76, v78);
      sub_250511528(v83, v85);
      sub_250511528(v76, v78);
      sub_250598B48((uint64_t)v72, type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v32 = v93;
      sub_250598B48((uint64_t)v93, type metadata accessor for GroupMembership.MemberProperties);
      a5 = v95;
      sub_2504DAF60((uint64_t)v109, v95);
      uint64_t v58 = v92;
      uint64_t result = sub_2504DAF60((uint64_t)v92, a5);
      uint64_t v20 = v94;
      uint64_t v61 = v100;
      uint64_t v60 = v101;
      if (v86)
      {
        uint64_t v87 = *v107;
        if (!*v107) {
          goto LABEL_14;
        }
        uint64_t v88 = v87 + v101 + v111;
        sub_2505283F0(v87 + v100 + v111, (uint64_t)v104, a5);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_2505283F0((uint64_t)v104, v88, a5);
        uint64_t v62 = v111 - v99;
        if (v102 != ++v108) {
          continue;
        }
      }
      v60 += v99;
      v61 += v99;
      if (++v102 == v90) {
        return result;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_250597500(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
  uint64_t v17 = MEMORY[0x270FA5388](v12 - 8, v13, v14, v15, v16);
  uint64_t v167 = (uint64_t)v163 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v17, v19, v20, v21, v22);
  uint64_t v169 = (uint64_t)v163 - v24;
  uint64_t v29 = MEMORY[0x270FA5388](v23, v25, v26, v27, v28);
  uint64_t v166 = (uint64_t)v163 - v30;
  MEMORY[0x270FA5388](v29, v31, v32, v33, v34);
  uint64_t v168 = (uint64_t)v163 - v35;
  uint64_t v36 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v41 = MEMORY[0x270FA5388](v36, v37, v38, v39, v40);
  uint64_t v43 = (char *)v163 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = MEMORY[0x270FA5388](v41, v44, v45, v46, v47);
  unint64_t v178 = (unint64_t)v163 - v49;
  uint64_t v54 = MEMORY[0x270FA5388](v48, v50, v51, v52, v53);
  unint64_t v180 = (unint64_t)v163 - v55;
  MEMORY[0x270FA5388](v54, v56, v57, v58, v59);
  unint64_t v177 = (unint64_t)v163 - v60;
  uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v65 = MEMORY[0x270FA5388](v183, v61, v62, v63, v64);
  uint64_t v176 = (uint64_t)v163 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = MEMORY[0x270FA5388](v65, v67, v68, v69, v70);
  uint64_t v175 = (uint64_t)v163 - v72;
  uint64_t v77 = MEMORY[0x270FA5388](v71, v73, v74, v75, v76);
  uint64_t v179 = (char *)v163 - v78;
  uint64_t v83 = MEMORY[0x270FA5388](v77, v79, v80, v81, v82);
  uint64_t v174 = (uint64_t)v163 - v84;
  MEMORY[0x270FA5388](v83, v85, v86, v87, v88);
  uint64_t v173 = (uint64_t)v163 - v89;
  uint64_t v181 = *(void *)(v90 + 72);
  if (!v181)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v181 == -1) {
    goto LABEL_66;
  }
  int64_t v91 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v181 == -1) {
    goto LABEL_67;
  }
  uint64_t v92 = (uint64_t)(a2 - a1) / v181;
  unint64_t v187 = a1;
  unint64_t v186 = a4;
  uint64_t v93 = v91 / v181;
  unint64_t v171 = a5;
  uint64_t v172 = v36;
  v163[0] = a6;
  if (v92 >= v91 / v181)
  {
    if ((v93 & 0x8000000000000000) == 0)
    {
      uint64_t v95 = v93 * v181;
      if (a4 < a2 || a2 + v95 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v128 = a4 + v95;
      unint64_t v185 = a4 + v95;
      unint64_t v187 = a2;
      if (v95 >= 1 && a1 < a2)
      {
        uint64_t v130 = -v181;
        unint64_t v165 = a4;
        unint64_t v164 = a1;
        uint64_t v181 = -v181;
        unint64_t v170 = v43;
        while (1)
        {
          unint64_t v182 = a3;
          uint64_t v131 = v175;
          sub_2504DAEFC(v128 + v130, v175, a5);
          unint64_t v184 = a2;
          unint64_t v177 = a2 + v130;
          uint64_t v132 = v176;
          sub_2504DAEFC(a2 + v130, v176, a5);
          uint64_t v133 = v183;
          uint64_t v134 = *(int *)(v183 + 48);
          uint64_t v135 = (uint64_t)v43;
          uint64_t v136 = v179;
          uint64_t v137 = (uint64_t)&v179[v134];
          sub_250598A94(v131 + v134, (uint64_t)&v179[v134], type metadata accessor for GroupMembership.MemberProperties);
          unint64_t v138 = v178;
          sub_250598BA8(v137, v178, type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v139 = *(int *)(v133 + 48);
          uint64_t v140 = (uint64_t)&v136[v139];
          sub_250598A94(v132 + v139, (uint64_t)&v136[v139], type metadata accessor for GroupMembership.MemberProperties);
          sub_250598BA8(v140, v135, type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v141 = v169;
          sub_2504DAEFC(v138 + *(int *)(v36 + 28), v169, &qword_269AB5ED0);
          uint64_t v142 = v36;
          uint64_t v143 = sub_2505BE0B0();
          uint64_t v144 = *(void *)(v143 - 8);
          uint64_t v145 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
          if (v145(v141, 1, v143) == 1) {
            goto LABEL_69;
          }
          uint64_t v146 = v141;
          uint64_t v147 = sub_2505BDEE0();
          unint64_t v149 = v148;
          uint64_t v150 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
          v150(v146, v143);
          uint64_t v151 = v167;
          sub_2504DAEFC((uint64_t)&v170[*(int *)(v142 + 28)], v167, &qword_269AB5ED0);
          if (v145(v151, 1, v143) == 1) {
            goto LABEL_71;
          }
          unint64_t v152 = v182;
          unint64_t v180 = v182 + v181;
          uint64_t v153 = sub_2505BDEE0();
          unint64_t v155 = v154;
          v150(v151, v143);
          char v156 = sub_250559F4C(v153, v155, v147, v149);
          sub_250511528(v153, v155);
          sub_250511528(v147, v149);
          uint64_t v43 = v170;
          sub_250598B48((uint64_t)v170, type metadata accessor for GroupMembership.MemberProperties);
          sub_250598B48(v178, type metadata accessor for GroupMembership.MemberProperties);
          a5 = v171;
          sub_2504DAF60(v176, v171);
          sub_2504DAF60(v175, a5);
          if (v156)
          {
            unint64_t v157 = v164;
            a3 = v180;
            if (v152 < v184 || v180 >= v184)
            {
              unint64_t v160 = v177;
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v36 = v172;
              unint64_t v159 = v165;
              uint64_t v130 = v181;
            }
            else
            {
              BOOL v158 = v152 == v184;
              uint64_t v36 = v172;
              unint64_t v159 = v165;
              uint64_t v130 = v181;
              unint64_t v160 = v177;
              if (!v158) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v187 += v130;
          }
          else
          {
            unint64_t v160 = v184;
            unint64_t v161 = v185;
            a3 = v180;
            v185 += v181;
            unint64_t v157 = v164;
            if (v152 < v161 || v180 >= v161)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v36 = v172;
            }
            else
            {
              uint64_t v36 = v172;
              if (v152 != v161) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v159 = v165;
            uint64_t v130 = v181;
          }
          unint64_t v128 = v185;
          if (v185 > v159)
          {
            a2 = v160;
            if (v160 > v157) {
              continue;
            }
          }
          goto LABEL_64;
        }
      }
      goto LABEL_64;
    }
  }
  else if ((v92 & 0x8000000000000000) == 0)
  {
    uint64_t v94 = v92 * v181;
    if (a4 < a1 || a1 + v94 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v178 = a4 + v94;
    unint64_t v185 = a4 + v94;
    BOOL v96 = v94 < 1 || a2 >= a3;
    uint64_t v97 = v180;
    if (!v96)
    {
      unint64_t v182 = a3;
      while (1)
      {
        unint64_t v184 = a2;
        uint64_t v98 = v173;
        sub_2504DAEFC(a2, v173, a5);
        uint64_t v99 = a4;
        uint64_t v100 = v174;
        sub_2504DAEFC(v99, v174, a5);
        uint64_t v101 = v183;
        uint64_t v102 = *(int *)(v183 + 48);
        uint64_t v103 = v179;
        uint64_t v104 = (uint64_t)&v179[v102];
        sub_250598A94(v98 + v102, (uint64_t)&v179[v102], type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v105 = v177;
        sub_250598BA8(v104, v177, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v106 = *(int *)(v101 + 48);
        uint64_t v107 = (uint64_t)&v103[v106];
        sub_250598A94(v100 + v106, (uint64_t)&v103[v106], type metadata accessor for GroupMembership.MemberProperties);
        sub_250598BA8(v107, v97, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v108 = v168;
        sub_2504DAEFC(v105 + *(int *)(v36 + 28), v168, &qword_269AB5ED0);
        uint64_t v109 = sub_2505BE0B0();
        uint64_t v110 = *(void *)(v109 - 8);
        uint64_t v111 = v36;
        uint64_t v112 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
        if (v112(v108, 1, v109) == 1) {
          goto LABEL_68;
        }
        uint64_t v113 = sub_2505BDEE0();
        unint64_t v115 = v114;
        uint64_t v116 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
        v116(v108, v109);
        uint64_t v117 = v180 + *(int *)(v111 + 28);
        uint64_t v118 = v166;
        sub_2504DAEFC(v117, v166, &qword_269AB5ED0);
        if (v112(v118, 1, v109) == 1) {
          goto LABEL_70;
        }
        uint64_t v119 = sub_2505BDEE0();
        unint64_t v121 = v120;
        v116(v118, v109);
        char v122 = sub_250559F4C(v119, v121, v113, v115);
        sub_250511528(v119, v121);
        sub_250511528(v113, v115);
        uint64_t v97 = v180;
        sub_250598B48(v180, type metadata accessor for GroupMembership.MemberProperties);
        sub_250598B48(v177, type metadata accessor for GroupMembership.MemberProperties);
        a5 = v171;
        sub_2504DAF60(v174, v171);
        sub_2504DAF60(v173, a5);
        unint64_t v123 = v187;
        unint64_t v124 = v182;
        if (v122)
        {
          unint64_t v125 = v184 + v181;
          uint64_t v36 = v172;
          if (v187 < v184 || v187 >= v125)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v187 == v184)
          {
            unint64_t v123 = v184;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v126 = v186 + v181;
          uint64_t v36 = v172;
          unint64_t v127 = v184;
          if (v187 < v186 || v187 >= v126)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v187 != v186)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v186 = v126;
          unint64_t v125 = v127;
        }
        unint64_t v187 = v123 + v181;
        a4 = v186;
        if (v186 < v178)
        {
          a2 = v125;
          if (v125 < v124) {
            continue;
          }
        }
        break;
      }
    }
LABEL_64:
    ((void (*)(unint64_t *, unint64_t *, unint64_t *))v163[0])(&v187, &v186, &v185);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

uint64_t sub_250598038(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2505BD7D0();
  if (!result || (uint64_t result = sub_2505BD800(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_2505BD7F0();
      return sub_2505BD8F0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2505980CC(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x263EF8340];
  v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_2504DBC4C(a1, a2);
      sub_2504DBC4C(v5, v6);
      sub_250598038((int)v5, v5 >> 32);
      sub_250511528(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_2504DBC4C(a1, a2);
      swift_retain();
      swift_retain();
      sub_250598038(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_2504DBC4C(a1, a2);
      sub_2505BD8F0();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_2505982F0(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v5 = type metadata accessor for HashAndCipher();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_250511EA8(0, v13, 0);
    uint64_t v14 = v23;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5FC8);
    uint64_t v15 = a1
        + ((*(unsigned __int8 *)(*(void *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80));
    uint64_t v19 = *(void *)(*(void *)(v20 - 8) + 72);
    while (1)
    {
      v21(v15, v15 + *(int *)(v20 + 48));
      if (v3) {
        break;
      }
      uint64_t v23 = v14;
      unint64_t v17 = *(void *)(v14 + 16);
      unint64_t v16 = *(void *)(v14 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_250511EA8(v16 > 1, v17 + 1, 1);
        uint64_t v14 = v23;
      }
      *(void *)(v14 + 16) = v17 + 1;
      sub_250598BA8((uint64_t)v12, v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, (uint64_t (*)(void))type metadata accessor for HashAndCipher);
      v15 += v19;
      if (!--v13) {
        return v14;
      }
    }
    swift_release();
  }
  return v14;
}

uint64_t sub_250598500(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5EF8);
  uint64_t v5 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25, v6, v7, v8, v9);
  uint64_t v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_250511E48(0, v12, 0);
    uint64_t v13 = v28;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
    uint64_t v14 = a1
        + ((*(unsigned __int8 *)(*(void *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v24 - 8) + 80));
    uint64_t v23 = *(void *)(*(void *)(v24 - 8) + 72);
    while (1)
    {
      uint64_t v15 = v26((char *)v11 + *(int *)(v25 + 64), v14, v14 + *(int *)(v24 + 48));
      if (v3) {
        break;
      }
      *uint64_t v11 = v15;
      v11[1] = v16;
      v11[2] = v17;
      void v11[3] = v18;
      uint64_t v28 = v13;
      unint64_t v20 = *(void *)(v13 + 16);
      unint64_t v19 = *(void *)(v13 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_250511E48(v19 > 1, v20 + 1, 1);
        uint64_t v13 = v28;
      }
      *(void *)(v13 + 16) = v20 + 1;
      sub_2505283F0((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v20, &qword_269AB5EF8);
      v14 += v23;
      if (!--v12) {
        return v13;
      }
    }
    swift_release();
  }
  return v13;
}

uint64_t sub_250598720(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250598768(uint64_t a1, uint64_t a2)
{
  return sub_2505938D8(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

unint64_t sub_250598788()
{
  unint64_t result = qword_269AB6BE0;
  if (!qword_269AB6BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6BE0);
  }
  return result;
}

uint64_t sub_2505987DC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_250593A5C(a1, *(void *)(v3 + 16), a2, a3);
}

uint64_t sub_2505987FC(uint64_t a1, unint64_t a2)
{
  return sub_25051AAD8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_250598804(uint64_t a1, uint64_t (*a2)(void, void, void, void, void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5EF8);
  uint64_t v10 = MEMORY[0x270FA5388](v5, v6, v7, v8, v9);
  uint64_t v31 = (uint64_t)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v18 = (uint64_t *)((char *)&v26 - v17);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v26 = v2;
    uint64_t v21 = *(void *)(v16 + 72);
    unint64_t v29 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v22 = a1 + v29;
    uint64_t v23 = MEMORY[0x263F8EE78];
    uint64_t v30 = v5;
    uint64_t v27 = v21;
    uint64_t v28 = a2;
    do
    {
      sub_2504DAEFC(v22, (uint64_t)v18, &qword_269AB5EF8);
      if (a2(*v18, v18[1], v18[2], v18[3], (char *)v18 + *(int *)(v5 + 64)))
      {
        sub_2505283F0((uint64_t)v18, v31, &qword_269AB5EF8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_250511E48(0, *(void *)(v23 + 16) + 1, 1);
        }
        uint64_t v23 = v32;
        unint64_t v25 = *(void *)(v32 + 16);
        unint64_t v24 = *(void *)(v32 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_250511E48(v24 > 1, v25 + 1, 1);
          uint64_t v23 = v32;
        }
        *(void *)(v23 + 16) = v25 + 1;
        uint64_t v21 = v27;
        sub_2505283F0(v31, v23 + v29 + v25 * v27, &qword_269AB5EF8);
        a2 = v28;
        uint64_t v5 = v30;
      }
      else
      {
        sub_2504DAF60((uint64_t)v18, &qword_269AB5EF8);
      }
      v22 += v21;
      --v20;
    }
    while (v20);
    return v32;
  }
  return result;
}

uint64_t sub_250598A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_250593C0C(a1, *(void *)(v2 + 32), a2);
}

uint64_t sub_250598A50@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_250594284(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_250598A74@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2505946B0(a1, *(void *)(v3 + 16), a2, a3);
}

uint64_t sub_250598A94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for HashAndCipher()
{
  uint64_t result = qword_269AB6BF0;
  if (!qword_269AB6BF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_250598B48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250598BA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_250598C10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_2504DBC4C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_2505BDDD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_250598CF8(uint64_t a1, uint64_t a2)
{
  sub_250511528(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2505BDDD0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *sub_250598D74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_2504DBC4C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2505BDDD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *sub_250598E0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_2504DBC4C(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_250511528(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2505BDDD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_250598EAC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2505BDDD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_250598F28(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_250511528(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2505BDDD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_250598FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250598FCC);
}

uint64_t sub_250598FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_2505BDDD0();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_250599088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25059909C);
}

void *sub_25059909C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_2505BDDD0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25059914C()
{
  uint64_t result = sub_2505BDDD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2505991E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v71 = a5;
  uint64_t v70 = a4;
  uint64_t v83 = a2;
  unint64_t v84 = a3;
  uint64_t v76 = a1;
  uint64_t v78 = sub_2505BDF90();
  uint64_t v75 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78, v5, v6, v7, v8);
  uint64_t v77 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_2505BDED0();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73, v10, v11, v12, v13);
  uint64_t v79 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2505BDA70();
  MEMORY[0x270FA5388](v15 - 8, v16, v17, v18, v19);
  uint64_t v81 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for GKCrypto_HPKEOneShotCipherText(0);
  MEMORY[0x270FA5388](v82, v21, v22, v23, v24);
  uint64_t v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_2505BDE60();
  uint64_t v27 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80, v28, v29, v30, v31);
  uint64_t v33 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_2505BDE40();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34, v36, v37, v38, v39);
  uint64_t v41 = (char *)&v69 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_2505BDE50();
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42, v44, v45, v46, v47);
  uint64_t v49 = (char *)&v69 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_2505BDE30();
  uint64_t v86 = *(void *)(v92 - 8);
  uint64_t v54 = MEMORY[0x270FA5388](v92, v50, v51, v52, v53);
  uint64_t v74 = (char *)&v69 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v54, v56, v57, v58, v59);
  uint64_t v60 = v42;
  uint64_t v62 = (char *)&v69 - v61;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v49, *MEMORY[0x263F04720], v60);
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v41, *MEMORY[0x263F04710], v34);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v33, *MEMORY[0x263F04728], v80);
  sub_2505BDE20();
  uint64_t v91 = 0;
  long long v89 = 0u;
  long long v90 = 0u;
  sub_2504DBC4C(v83, v84);
  sub_2505BDA60();
  sub_250599868();
  uint64_t v63 = (uint64_t)v26;
  uint64_t v64 = v82;
  uint64_t v65 = v85;
  sub_2505BDB30();
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v62, v92);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v77, v76, v78);
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v74, v62, v92);
    sub_2504DBC4C(*(void *)v26, *((void *)v26 + 1));
    uint64_t v66 = v79;
    sub_2505BDEB0();
    uint64_t v85 = v62;
    uint64_t v68 = v86;
    long long v89 = *(_OWORD *)(v63 + 16);
    uint64_t v87 = v70;
    uint64_t v88 = v71;
    sub_25051AE60();
    uint64_t v64 = sub_2505BDEC0();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v66, v73);
    sub_2505998C0(v63);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v85, v92);
  }
  return v64;
}

unint64_t sub_250599868()
{
  unint64_t result = qword_269AB61F0;
  if (!qword_269AB61F0)
  {
    type metadata accessor for GKCrypto_HPKEOneShotCipherText(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB61F0);
  }
  return result;
}

uint64_t sub_2505998C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GKCrypto_HPKEOneShotCipherText(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_25059991C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v72 = a2;
  uint64_t v73 = a3;
  uint64_t v85 = a1;
  uint64_t v76 = type metadata accessor for GKCrypto_HPKEOneShotCipherText(0);
  MEMORY[0x270FA5388](v76, v5, v6, v7, v8);
  uint64_t v77 = (uint64_t *)((char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_2505BDF30();
  uint64_t v83 = *(void *)(v10 - 8);
  uint64_t v84 = v10;
  MEMORY[0x270FA5388](v10, v11, v12, v13, v14);
  uint64_t v82 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2505BDEA0();
  uint64_t v70 = *(void *)(v16 - 8);
  uint64_t v71 = v16;
  MEMORY[0x270FA5388](v16, v17, v18, v19, v20);
  uint64_t v81 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_2505BDE60();
  uint64_t v79 = *(void *)(v22 - 8);
  uint64_t v80 = v22;
  MEMORY[0x270FA5388](v22, v23, v24, v25, v26);
  uint64_t v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_2505BDE40();
  uint64_t v29 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78, v30, v31, v32, v33);
  uint64_t v35 = (char *)&v69 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_2505BDE50();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36, v38, v39, v40, v41);
  uint64_t v43 = (char *)&v69 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_2505BDE30();
  uint64_t v49 = MEMORY[0x270FA5388](v44, v45, v46, v47, v48);
  uint64_t v51 = (char *)&v69 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v49, v52, v53, v54, v55);
  uint64_t v57 = (char *)&v69 - v56;
  uint64_t v58 = v36;
  uint64_t v60 = v59;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v43, *MEMORY[0x263F04720], v58);
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v35, *MEMORY[0x263F04710], v78);
  (*(void (**)(char *, void, uint64_t))(v79 + 104))(v28, *MEMORY[0x263F04728], v80);
  uint64_t v61 = v81;
  sub_2505BDE20();
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v85, v84);
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v51, v57, v44);
  uint64_t v62 = v90;
  sub_2505BDE70();
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v44);
  }
  else
  {
    long long v90 = v57;
    uint64_t v64 = v70;
    uint64_t v63 = v71;
    uint64_t v65 = v77;
    *((_OWORD *)v77 + 1) = xmmword_2505BFEF0;
    sub_2505BDA40();
    *uint64_t v65 = sub_2505BDE80();
    v65[1] = v66;
    uint64_t v88 = v72;
    uint64_t v89 = v73;
    uint64_t v86 = v74;
    uint64_t v87 = v75;
    sub_25051AE60();
    v65[2] = sub_2505BDE90();
    v65[3] = v67;
    sub_250599868();
    uint64_t v57 = (char *)sub_2505BDB40();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v90, v44);
    sub_2505998C0((uint64_t)v65);
  }
  return v57;
}

uint64_t sub_250599EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_250599F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_250599F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_250599F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 32))(a1);
}

uint64_t sub_250599F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 40))();
}

uint64_t sub_250599FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t sub_250599FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_25059A014(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2504DAEFC((uint64_t)&unk_26B202540, (uint64_t)&v17, &qword_26B2022D8);
  if (v18)
  {
    sub_2504DAEE4(&v17, (uint64_t)v19);
    swift_endAccess();
    uint64_t v7 = __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    MEMORY[0x270FA5388](v7, v8, v9, v10, v11);
    v16[2] = v12;
    void v16[3] = v3;
    v16[4] = v4;
    v16[5] = v5;
    void v16[6] = v6;
    id v14 = v13;
    sub_25058A4F4((uint64_t)sub_25059F5A4, (uint64_t)v16, &v17);

    if (!v2) {
      id v14 = (id)v17;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return (uint64_t)v14;
  }
  else
  {
    sub_2504DAF60((uint64_t)&v17, &qword_26B2022D8);
    uint64_t result = sub_2505BE5F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25059A1EC(uint64_t *a1, uint64_t *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2504DAEFC((uint64_t)&unk_26B202540, (uint64_t)&v25, &qword_26B2022D8);
  if (v26)
  {
    sub_2504DAEE4(&v25, (uint64_t)v27);
    swift_endAccess();
    uint64_t v12 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    MEMORY[0x270FA5388](v12, v13, v14, v15, v16);
    v21[2] = v17;
    v21[3] = v8;
    void v21[4] = v9;
    v21[5] = v10;
    v21[6] = v11;
    int v22 = a3;
    uint64_t v23 = a4;
    uint64_t v24 = a5;
    id v19 = v18;
    sub_25058A6E0((uint64_t)sub_25059F578, (uint64_t)v21);

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    sub_2504DAF60((uint64_t)&v25, &qword_26B2022D8);
    uint64_t result = sub_2505BE5F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25059A3B4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v27 = a7;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2504DAEFC((uint64_t)&unk_26B202540, (uint64_t)&v28, &qword_26B2022D8);
  if (v30)
  {
    sub_2504DAEE4(&v28, (uint64_t)v31);
    swift_endAccess();
    uint64_t v15 = __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    *(void *)&long long v28 = a3;
    *((void *)&v28 + 1) = a4;
    uint64_t v29 = a5;
    uint64_t v30 = a6;
    MEMORY[0x270FA5388](v15, v16, v17, v18, v19);
    void v24[2] = v20;
    v24[3] = v11;
    v24[4] = v12;
    v24[5] = v13;
    v24[6] = v14;
    int v25 = v27;
    uint64_t v26 = &v28;
    id v22 = v21;
    sub_25058A6E0((uint64_t)sub_25059F54C, (uint64_t)v24);

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    sub_2504DAF60((uint64_t)&v28, &qword_26B2022D8);
    uint64_t result = sub_2505BE5F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25059A594(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2504DAEFC((uint64_t)&unk_26B202540, (uint64_t)&v24, &qword_26B2022D8);
  if (v25)
  {
    sub_2504DAEE4(&v24, (uint64_t)v26);
    swift_endAccess();
    uint64_t v12 = __swift_project_boxed_opaque_existential_1(v26, v26[3]);
    *(void *)&long long v24 = a3;
    *((void *)&v24 + 1) = a4;
    MEMORY[0x270FA5388](v12, v13, v14, v15, v16);
    v21[2] = v17;
    v21[3] = v8;
    void v21[4] = v9;
    v21[5] = v10;
    v21[6] = v11;
    int v22 = a5;
    uint64_t v23 = &v24;
    id v19 = v18;
    sub_25058A6E0((uint64_t)sub_25059F520, (uint64_t)v21);

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    sub_2504DAF60((uint64_t)&v24, &qword_26B2022D8);
    uint64_t result = sub_2505BE5F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25059A764@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  if (qword_26B202478 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2504DAEFC((uint64_t)&unk_26B202540, (uint64_t)&v27, &qword_26B2022D8);
  if (*((void *)&v28 + 1))
  {
    sub_2504DAEE4(&v27, (uint64_t)v31);
    swift_endAccess();
    uint64_t v11 = __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
    v23[2] = v16;
    v23[3] = v7;
    v23[4] = v8;
    v23[5] = v9;
    v23[6] = v10;
    int v24 = a3;
    id v18 = v17;
    sub_25058A8B8((uint64_t)sub_25059F4F8, (uint64_t)v23, (uint64_t)&v27);

    if (v4)
    {
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
    else
    {
      long long v25 = v28;
      long long v26 = v27;
      uint64_t v20 = v29;
      uint64_t v21 = v30;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      long long v22 = v25;
      *(_OWORD *)a4 = v26;
      *(_OWORD *)(a4 + 16) = v22;
      *(void *)(a4 + 32) = v20;
      *(void *)(a4 + 40) = v21;
    }
  }
  else
  {
    sub_2504DAF60((uint64_t)&v27, &qword_26B2022D8);
    uint64_t result = sub_2505BE5F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25059A95C(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(void), uint64_t (*a4)(id), void (*a5)(id **, void ***, void ***))
{
  uint64_t v10 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = a2(v10);
    *a1 = v10;
  }
  uint64_t v12 = *(void *)(v10 + 16);
  v14[0] = v10 + 32;
  v14[1] = v12;
  sub_25059DC20(v14, a3, a4, a4, a5);
  return sub_2505BE540();
}

void sub_25059AA0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  char v6 = a2 & 1;
  *(void *)(v3 + 16) = a1;
  swift_retain();
  *(void *)(v3 + 32) = sub_250559368();
  *(unsigned char *)(v3 + 40) = v6;
  if (a2)
  {
    if (*(unsigned char *)(a1 + 144) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(unsigned char *)uint64_t v7 = -94;
      uint64_t v8 = 126;
      goto LABEL_6;
    }
  }
  else
  {
    if (*(unsigned char *)(a1 + 160) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(unsigned char *)uint64_t v7 = -93;
      uint64_t v8 = 132;
LABEL_6:
      *(unsigned char *)(v7 + 1) = 1;
      *(void *)(v7 + 8) = v8;
      *(void *)(v7 + 16) = 0xD000000000000022;
      *(void *)(v7 + 24) = 0x80000002505CC6C0;
      *(void *)(v7 + 32) = 0xD000000000000086;
      *(void *)(v7 + 40) = 0x80000002505C9840;
      swift_willThrow();
      swift_release();
      swift_release();

      type metadata accessor for DeviceToDeviceEncryptedContainerInteraction();
      swift_deallocPartialClassInstance();
      return;
    }
    unint64_t v9 = *(void *)(a1 + 152);
    id v10 = objc_msgSend(*(id *)(a1 + 168), sel_persistentStoreCoordinator);
    id v11 = objc_msgSend(v10, sel_persistentStores);

    sub_25058DE24(0, &qword_26B202188);
    uint64_t v12 = sub_2505BE2C0();

    if ((v12 & 0xC000000000000001) != 0) {
      goto LABEL_16;
    }
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_18;
    }
    if (v9 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_14:
      id v15 = *(id *)(v12 + 8 * v9 + 32);
LABEL_15:
      id v16 = v15;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v3 + 24) = v16;
      return;
    }
    __break(1u);
  }
  unint64_t v9 = *(void *)(a1 + 136);
  id v13 = objc_msgSend(*(id *)(a1 + 168), sel_persistentStoreCoordinator);
  id v14 = objc_msgSend(v13, sel_persistentStores);

  sub_25058DE24(0, &qword_26B202188);
  uint64_t v12 = sub_2505BE2C0();

  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_16:
    id v15 = (id)MEMORY[0x25337F460](v9, v12);
    goto LABEL_15;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v9 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

void sub_25059AD08(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, unsigned int a6, uint64_t a7, unint64_t a8)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v29 = a2;
  unint64_t v30 = a3;
  uint64_t v27 = a4;
  unint64_t v28 = a5;
  id v17 = sub_25059C388((uint64_t *)&v29, &v27);
  if (!v8)
  {
    unsigned int v26 = a6;
    if (v17)
    {
      id v18 = v17;
      if ((uint64_t)objc_msgSend(v17, sel_groupVersion) >= a6)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v24 = 388;
        *(_OWORD *)(v24 + 8) = xmmword_2505C6320;
        *(void *)(v24 + 24) = 0x80000002505CC6F0;
        *(void *)(v24 + 32) = 0xD000000000000086;
        *(void *)(v24 + 40) = 0x80000002505C9840;
        swift_willThrow();

        return;
      }
      id v19 = (void *)sub_2505BD920();
      objc_msgSend(v18, sel_setBlobData_, v19);

      objc_msgSend(v18, sel_setGroupVersion_, a6);
    }
    else
    {
      type metadata accessor for GroupKitCryptoGroupBlob();
      id v29 = a2;
      unint64_t v30 = a3;
      uint64_t v27 = a4;
      unint64_t v28 = a5;
      uint64_t v20 = a1;
      uint64_t v21 = *(void **)(a1 + 32);
      sub_2504DBC4C((uint64_t)a2, a3);
      sub_2504DBC4C(a4, a5);
      sub_2504DBC4C(a7, a8);
      id v18 = sub_2505755B4((uint64_t *)&v29, &v27, a7, a8, v26, v21);
      objc_msgSend(*(id *)(v20 + 32), sel_assignObject_toPersistentStore_, v18, *(void *)(v20 + 24));
      a1 = v20;
    }

    long long v22 = *(void **)(a1 + 32);
    id v29 = 0;
    if (objc_msgSend(v22, sel_save_, &v29))
    {
      id v23 = v29;
    }
    else
    {
      id v25 = v29;
      sub_2505BD840();

      swift_willThrow();
    }
  }
}

void sub_25059AFAC(uint64_t *a1, uint64_t *a2)
{
  v69[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = sub_2505BD9F0();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5, v6, v7, v8, v9);
  uint64_t v68 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  unint64_t v11 = a1[1];
  uint64_t v13 = *a2;
  unint64_t v64 = a2[1];
  uint64_t v65 = v13;
  id v14 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v15 = (void *)sub_2505BE130();
  id v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2021A0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2505C4F70;
  id v18 = *(void **)(v2 + 24);
  *(void *)(v17 + 32) = v18;
  v69[0] = (id)v17;
  sub_2505BE2D0();
  sub_25058DE24(0, &qword_26B202188);
  id v19 = v16;
  id v67 = v19;
  id v20 = v18;
  uint64_t v21 = (void *)sub_2505BE2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setAffectedStores_, v21);

  uint64_t v60 = sub_25058DE24(0, &qword_269AB6B88);
  swift_getKeyPath();
  id v61 = (id)sub_2505BE3A0();
  swift_getKeyPath();
  uint64_t v62 = sub_2505BE3A0();
  sub_2504DBC4C(v12, v11);
  int v59 = sub_2505BD990();
  int v58 = sub_2505BD990();
  int v57 = sub_2505BD990();
  int v56 = sub_2505BD990();
  int v55 = sub_2505BD990();
  int v54 = sub_2505BD990();
  int v53 = sub_2505BD990();
  int v52 = sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  long long v22 = v68;
  sub_2505BD9C0();
  sub_250511528(v12, v11);
  sub_25058DE24(0, &qword_269AB6B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F30);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_2505C0090;
  uint64_t v24 = v60;
  *(void *)(v23 + 56) = v60;
  uint64_t v25 = sub_25058DE60(&qword_269AB6B98, &qword_269AB6B88);
  *(void *)(v23 + 64) = v25;
  id v26 = v61;
  *(void *)(v23 + 32) = v61;
  id v61 = v26;
  uint64_t v27 = sub_2505BD9A0();
  *(void *)(v23 + 96) = sub_25058DE24(0, &qword_269AB6BA0);
  uint64_t v28 = sub_25058DE60(&qword_269AB6BA8, &qword_269AB6BA0);
  *(void *)(v23 + 72) = v27;
  *(void *)(v23 + 136) = v24;
  *(void *)(v23 + 144) = v25;
  id v29 = (void *)v62;
  *(void *)(v23 + 104) = v28;
  *(void *)(v23 + 112) = v29;
  id v30 = v29;
  uint64_t v31 = v66;
  v69[0] = (id)sub_2504DCA88(v65, v64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
  sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
  uint64_t v32 = sub_2505BE110();
  uint64_t v34 = v33;
  id v35 = v67;
  uint64_t v36 = v63;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 176) = MEMORY[0x263F8D310];
  *(void *)(v23 + 184) = sub_25058DEB0();
  *(void *)(v23 + 152) = v32;
  *(void *)(v23 + 160) = v34;
  uint64_t v37 = (void *)sub_2505BE390();
  objc_msgSend(v35, sel_setPredicate_, v37);

  uint64_t v38 = *(void **)(v36 + 32);
  type metadata accessor for GroupKitCryptoGroupBlob();
  id v39 = v38;
  uint64_t v40 = sub_2505BE3F0();
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v51);

    return;
  }
  unint64_t v41 = v40;

  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_2505BE600();
    swift_bridgeObjectRelease();
    if (v42) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v42)
    {
LABEL_5:
      if (v42 < 1) {
        __break(1u);
      }
      for (uint64_t i = 0; i != v42; ++i)
      {
        if ((v41 & 0xC000000000000001) != 0) {
          id v44 = (id)MEMORY[0x25337F460](i, v41);
        }
        else {
          id v44 = *(id *)(v41 + 8 * i + 32);
        }
        uint64_t v45 = v44;
        objc_msgSend(*(id *)(v36 + 32), sel_deleteObject_, v44, v50);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void **)(v36 + 32);
  v69[0] = 0;
  if (objc_msgSend(v46, sel_save_, v69))
  {
    uint64_t v47 = *(void (**)(char *, uint64_t))(v50 + 8);
    id v48 = v69[0];
    v47(v68, v51);
  }
  else
  {
    id v49 = v69[0];
    sub_2505BD840();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v68, v51);
  }
}

void sub_25059B6F4(uint64_t *a1, uint64_t *a2)
{
  v67[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = sub_2505BD9F0();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v5, v6, v7, v8, v9);
  uint64_t v66 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  unint64_t v12 = a1[1];
  uint64_t v13 = *a2;
  unint64_t v61 = a2[1];
  uint64_t v62 = v13;
  id v14 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v15 = (void *)sub_2505BE130();
  id v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2021A0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2505C4F70;
  id v18 = *(void **)(v2 + 24);
  *(void *)(v17 + 32) = v18;
  v67[0] = (id)v17;
  sub_2505BE2D0();
  sub_25058DE24(0, &qword_26B202188);
  id v19 = v16;
  id v65 = v19;
  id v20 = v18;
  uint64_t v21 = (void *)sub_2505BE2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setAffectedStores_, v21);

  sub_2504DBC4C(v11, v12);
  LODWORD(v60) = sub_2505BD990();
  LODWORD(v59) = sub_2505BD990();
  int v58 = sub_2505BD990();
  int v57 = sub_2505BD990();
  int v56 = sub_2505BD990();
  int v55 = sub_2505BD990();
  int v54 = sub_2505BD990();
  int v53 = sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD9C0();
  sub_250511528(v11, v12);
  uint64_t v22 = sub_25058DE24(0, &qword_269AB6B88);
  swift_getKeyPath();
  uint64_t v23 = (void *)sub_2505BE3A0();
  swift_getKeyPath();
  uint64_t v24 = (void *)sub_2505BE3A0();
  uint64_t v60 = sub_25058DE24(0, &qword_269AB6B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F30);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2505C0090;
  *(void *)(v25 + 56) = v22;
  uint64_t v26 = sub_25058DE60(&qword_269AB6B98, &qword_269AB6B88);
  *(void *)(v25 + 64) = v26;
  *(void *)(v25 + 32) = v23;
  id v59 = v23;
  uint64_t v27 = sub_2505BD9A0();
  *(void *)(v25 + 96) = sub_25058DE24(0, &qword_269AB6BA0);
  uint64_t v28 = sub_25058DE60(&qword_269AB6BA8, &qword_269AB6BA0);
  *(void *)(v25 + 72) = v27;
  *(void *)(v25 + 136) = v22;
  *(void *)(v25 + 144) = v26;
  *(void *)(v25 + 104) = v28;
  *(void *)(v25 + 112) = v24;
  id v29 = v24;
  uint64_t v30 = v64;
  v67[0] = (id)sub_2504DCA88(v62, v61);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
  sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
  uint64_t v31 = sub_2505BE110();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 176) = MEMORY[0x263F8D310];
  *(void *)(v25 + 184) = sub_25058DEB0();
  *(void *)(v25 + 152) = v31;
  *(void *)(v25 + 160) = v33;
  uint64_t v34 = v63;
  id v35 = (void *)sub_2505BE390();
  id v36 = v65;
  objc_msgSend(v65, sel_setPredicate_, v35);

  uint64_t v37 = *(void **)(v34 + 32);
  type metadata accessor for GroupKitCryptoGroupSeed();
  id v38 = v37;
  id v39 = v36;
  id v40 = v38;
  uint64_t v41 = sub_2505BE3F0();
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v66, v52);

    return;
  }
  unint64_t v42 = v41;

  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_2505BE600();
    swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v43)
    {
LABEL_5:
      if (v43 < 1) {
        __break(1u);
      }
      for (uint64_t i = 0; i != v43; ++i)
      {
        if ((v42 & 0xC000000000000001) != 0) {
          id v45 = (id)MEMORY[0x25337F460](i, v42);
        }
        else {
          id v45 = *(id *)(v42 + 8 * i + 32);
        }
        uint64_t v46 = v45;
        objc_msgSend(*(id *)(v34 + 32), sel_deleteObject_, v45, v51);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void **)(v34 + 32);
  v67[0] = 0;
  if (objc_msgSend(v47, sel_save_, v67))
  {
    id v48 = *(void (**)(char *, uint64_t))(v51 + 8);
    id v49 = v67[0];
    v48(v66, v52);
  }
  else
  {
    id v50 = v67[0];
    sub_2505BD840();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v66, v52);
  }
}

void sub_25059BE34(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB67E0);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2504DAEFC(a1, (uint64_t)v10, &qword_269AB67E0);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_2505BD9F0();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    id v14 = (void *)sub_2505BD9A0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, sel_setGroupID_, v14);
}

void sub_25059BF68(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t *a5@<X8>)
{
  v18[1] = a2;
  v17[1] = a4;
  v18[0] = a1;
  v17[0] = a3;
  uint64_t v7 = sub_25059C388(v18, v17);
  if (!v5)
  {
    uint64_t v8 = v7;
    if (v7)
    {
      if (((unint64_t)objc_msgSend(v7, sel_groupVersion) & 0x8000000000000000) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v16 = 306;
        *(_OWORD *)(v16 + 8) = xmmword_2505C6330;
        *(void *)(v16 + 24) = 0x80000002505CC730;
        *(void *)(v16 + 32) = 0xD000000000000086;
        *(void *)(v16 + 40) = 0x80000002505C9840;
        swift_willThrow();
      }
      else
      {
        unint64_t v9 = (unint64_t)objc_msgSend(v8, sel_groupVersion);
        if ((v9 & 0x8000000000000000) == 0)
        {
          unint64_t v10 = v9;
          if (!HIDWORD(v9))
          {
            id v11 = objc_msgSend(v8, sel_blobData);
            if (v11)
            {
              uint64_t v12 = v11;
              uint64_t v13 = sub_2505BD940();
              unint64_t v15 = v14;

              *a5 = v10;
              a5[1] = v13;
              a5[2] = v15;
              return;
            }
            __break(1u);
          }
        }
        sub_2505BE5E0();
        __break(1u);
      }
    }
    else
    {
      *a5 = 0;
      a5[1] = 0;
      a5[2] = 0xF000000000000000;
    }
  }
}

void sub_25059C180(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, int8x16_t *a6@<X8>)
{
  v22[0].i64[0] = a1;
  v22[0].i64[1] = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  unsigned __int8 v28 = 1;
  id v13 = sub_25059CCA4(v22[0].i64, &v23, a5, &v28);
  if (!v6)
  {
    unint64_t v14 = v13;
    if (v13)
    {
      sub_25055A26C((uint64_t *)&v25);

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F40);
      if (swift_dynamicCast())
      {
        int8x16_t v21 = v22[0];
        v22[0].i64[0] = a1;
        v22[0].i64[1] = a2;
        uint64_t v23 = a3;
        uint64_t v24 = a4;
        unsigned __int8 v28 = 0;
        id v15 = sub_25059CCA4(v22[0].i64, &v23, a5, &v28);
        uint64_t v16 = v15;
        if (v15)
        {
          sub_25055A26C((uint64_t *)&v25);

          if (swift_dynamicCast()) {
            unint64_t v19 = -1;
          }
          else {
            unint64_t v19 = 0;
          }
          int8x16_t v20 = (int8x16_t)vdupq_n_s64(v19);
          int8x16_t v18 = vbslq_s8(v20, v22[0], (int8x16_t)xmmword_2505BFEE0);
          int8x16_t v17 = vandq_s8(v22[1], v20);
        }
        else
        {
          uint64_t v27 = 0;
          long long v25 = 0u;
          long long v26 = 0u;
          sub_2504DAF60((uint64_t)&v25, &qword_269AB6C20);
          int8x16_t v17 = 0uLL;
          int8x16_t v18 = (int8x16_t)xmmword_2505BFEE0;
        }
        *a6 = v18;
        a6[1] = v17;
        a6[2] = v21;
        return;
      }
    }
    else
    {
      uint64_t v27 = 0;
      long long v25 = 0u;
      long long v26 = 0u;
      sub_2504DAF60((uint64_t)&v25, &qword_269AB6C20);
    }
    *a6 = 0u;
    a6[1] = 0u;
    a6[2].i64[0] = 0;
    a6[2].i64[1] = 0xF000000000000000;
  }
}

void *sub_25059C388(uint64_t *a1, uint64_t *a2)
{
  v82[1] = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_2505BD9F0();
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  MEMORY[0x270FA5388](v5, v6, v7, v8, v9);
  uint64_t v80 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  unint64_t v12 = a1[1];
  uint64_t v13 = *a2;
  id v76 = (id)a2[1];
  uint64_t v77 = (void *)v13;
  id v14 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v15 = (void *)sub_2505BE130();
  id v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2021A0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2505C4F70;
  int8x16_t v18 = *(void **)(v2 + 24);
  *(void *)(v17 + 32) = v18;
  v82[0] = v17;
  sub_2505BE2D0();
  sub_25058DE24(0, &qword_26B202188);
  id v19 = v16;
  id v79 = v19;
  id v20 = v18;
  int8x16_t v21 = (void *)sub_2505BE2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setAffectedStores_, v21);

  uint64_t v72 = sub_25058DE24(0, &qword_269AB6B88);
  swift_getKeyPath();
  uint64_t v73 = sub_2505BE3A0();
  swift_getKeyPath();
  uint64_t v74 = sub_2505BE3A0();
  sub_2504DBC4C(v11, v12);
  int v71 = sub_2505BD990();
  int v70 = sub_2505BD990();
  int v69 = sub_2505BD990();
  int v68 = sub_2505BD990();
  int v67 = sub_2505BD990();
  int v66 = sub_2505BD990();
  int v65 = sub_2505BD990();
  int v64 = sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  uint64_t v22 = v80;
  sub_2505BD9C0();
  uint64_t v23 = v11;
  uint64_t v24 = v22;
  sub_250511528(v23, v12);
  sub_25058DE24(0, &qword_269AB6B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F30);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2505C0090;
  uint64_t v26 = v72;
  *(void *)(v25 + 56) = v72;
  uint64_t v27 = sub_25058DE60(&qword_269AB6B98, &qword_269AB6B88);
  *(void *)(v25 + 64) = v27;
  unsigned __int8 v28 = (void *)v73;
  *(void *)(v25 + 32) = v73;
  id v29 = v28;
  uint64_t v30 = sub_2505BD9A0();
  *(void *)(v25 + 96) = sub_25058DE24(0, &qword_269AB6BA0);
  uint64_t v31 = sub_25058DE60(&qword_269AB6BA8, &qword_269AB6BA0);
  *(void *)(v25 + 72) = v30;
  *(void *)(v25 + 136) = v26;
  *(void *)(v25 + 144) = v27;
  uint64_t v32 = (void *)v74;
  *(void *)(v25 + 104) = v31;
  *(void *)(v25 + 112) = v32;
  uint64_t v33 = v32;
  id v34 = v78;
  v82[0] = sub_2504DCA88((uint64_t)v77, (unint64_t)v76);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
  sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
  uint64_t v35 = sub_2505BE110();
  uint64_t v37 = v36;
  uint64_t v38 = v75;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 176) = MEMORY[0x263F8D310];
  *(void *)(v25 + 184) = sub_25058DEB0();
  *(void *)(v25 + 152) = v35;
  *(void *)(v25 + 160) = v37;
  id v39 = v79;
  id v40 = (void *)sub_2505BE390();
  objc_msgSend(v39, sel_setPredicate_, v40);

  uint64_t v41 = *(void **)(v38 + 32);
  type metadata accessor for GroupKitCryptoGroupBlob();
  unint64_t v42 = v41;
  uint64_t v43 = sub_2505BE3F0();
  if (!v34)
  {
    uint64_t v46 = v43;

    if ((unint64_t)v46 >> 62)
    {
      if (v46 < 0) {
        unint64_t v42 = (void *)v46;
      }
      else {
        unint64_t v42 = (void *)(v46 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_2505BE600();
      swift_bridgeObjectRelease();
      if (v53 > 1)
      {
        unint64_t v54 = swift_bridgeObjectRetain();
        unint64_t v42 = sub_25059DAF8(v54, (void (*)(void))type metadata accessor for GroupKitCryptoGroupBlob, &qword_269AB6C18, &qword_269AB6C10, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25059EA14);
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      swift_bridgeObjectRetain();
      unint64_t v47 = sub_2505BE600();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v42 = (void *)(v46 & 0xFFFFFFFFFFFFFF8);
      unint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v47 > 1)
      {
        swift_bridgeObjectRetain();
LABEL_7:
        id v81 = v42;
        sub_25059A95C((uint64_t *)&v81, (uint64_t (*)(uint64_t))sub_25058F2B0, (void (*)(void))type metadata accessor for GroupKitCryptoGroupBlob, sub_250575AA4, (void (*)(id **, void ***, void ***))sub_25058F0E4);
        v82[0] = v81;
        unint64_t v42 = v82;
        id v48 = (void *)sub_25059D820((uint64_t (*)(uint64_t))sub_25058F1E0);
        if (v48)
        {
          id v76 = v48;
          uint64_t v77 = v33;
          id v78 = v29;
          uint64_t v33 = (id *)v38;
          unint64_t v47 = v82[0];
          if (!(v82[0] >> 62))
          {
            uint64_t v49 = *(void *)((v82[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v49)
            {
LABEL_10:
              if (v49 < 1) {
                __break(1u);
              }
              uint64_t v50 = 0;
              unint64_t v42 = &off_265350000;
              do
              {
                if ((v47 & 0xC000000000000001) != 0) {
                  id v51 = (id)MEMORY[0x25337F460](v50, v47);
                }
                else {
                  id v51 = *(id *)(v47 + 8 * v50 + 32);
                }
                uint64_t v52 = v51;
                ++v50;
                objc_msgSend(v33[4], sel_deleteObject_, v51);
              }
              while (v49 != v50);
            }
LABEL_34:
            swift_bridgeObjectRelease();
            id v58 = v33[4];
            id v81 = 0;
            if (!objc_msgSend(v58, sel_save_, &v81))
            {
              id v60 = v81;
              sub_2505BD840();

              swift_willThrow();
              id v39 = v79;
              id v44 = v77;
              id v45 = v78;
              (*(void (**)(char *, uint64_t))(v62 + 8))(v80, v63);
              swift_bridgeObjectRelease();
              goto LABEL_3;
            }
            id v59 = v81;
            uint64_t v56 = v62;
            uint64_t v55 = v63;
            id v39 = v79;
            uint64_t v24 = v80;
            uint64_t v33 = (id *)v77;
            id v29 = v78;
            unint64_t v42 = v76;
LABEL_29:
            (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v55);
            swift_bridgeObjectRelease();

            return v42;
          }
LABEL_33:
          swift_bridgeObjectRetain();
          uint64_t v49 = sub_2505BE600();
          swift_bridgeObjectRelease();
          if (v49) {
            goto LABEL_10;
          }
          goto LABEL_34;
        }
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    if (v47)
    {
      if ((v46 & 0xC000000000000001) != 0)
      {
        unint64_t v42 = (void *)MEMORY[0x25337F460](0, v46);
      }
      else
      {
        if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_33;
        }
        unint64_t v42 = *(id *)(v46 + 32);
      }
LABEL_28:
      uint64_t v56 = v62;
      uint64_t v55 = v63;
      goto LABEL_29;
    }
LABEL_27:
    unint64_t v42 = 0;
    goto LABEL_28;
  }
  (*(void (**)(char *, uint64_t))(v62 + 8))(v24, v63);

  id v44 = v29;
  id v45 = v39;
LABEL_3:

  return v42;
}

id sub_25059CCA4(uint64_t *a1, uint64_t *a2, int a3, unsigned __int8 *a4)
{
  LODWORD(v100) = a3;
  uint64_t v107 = *MEMORY[0x263EF8340];
  uint64_t v87 = sub_2505BD9F0();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87, v8, v9, v10, v11);
  uint64_t v104 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  unint64_t v14 = a1[1];
  uint64_t v15 = *a2;
  id v96 = (id)a2[1];
  *(void *)&long long v97 = v15;
  id v101 = (id)*a4;
  id v16 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v17 = (void *)sub_2505BE130();
  id v18 = objc_msgSend(v16, sel_initWithEntityName_, v17);

  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2021A0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2505C4F70;
  id v20 = *(void **)(v4 + 24);
  *(void *)(v19 + 32) = v20;
  unint64_t v106 = v19;
  sub_2505BE2D0();
  sub_25058DE24(0, &qword_26B202188);
  id v21 = v18;
  id v103 = v21;
  id v22 = v20;
  uint64_t v23 = (void *)sub_2505BE2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setAffectedStores_, v23);

  sub_2504DBC4C(v13, v14);
  LODWORD(v95) = sub_2505BD990();
  LODWORD(v94) = sub_2505BD990();
  LODWORD(v93) = sub_2505BD990();
  int v92 = sub_2505BD990();
  int v91 = sub_2505BD990();
  int v90 = sub_2505BD990();
  int v89 = sub_2505BD990();
  int v88 = sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD990();
  sub_2505BD9C0();
  sub_250511528(v13, v14);
  uint64_t v24 = sub_25058DE24(0, &qword_269AB6B88);
  swift_getKeyPath();
  uint64_t v25 = (void *)sub_2505BE3A0();
  swift_getKeyPath();
  uint64_t v26 = (void *)sub_2505BE3A0();
  uint64_t v95 = sub_25058DE24(0, &qword_269AB6B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5F30);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_2505C0090;
  *(void *)(v27 + 56) = v24;
  uint64_t v28 = sub_25058DE60(&qword_269AB6B98, &qword_269AB6B88);
  *(void *)(v27 + 64) = v28;
  *(void *)(v27 + 32) = v25;
  id v94 = v25;
  uint64_t v29 = sub_2505BD9A0();
  *(void *)(v27 + 96) = sub_25058DE24(0, &qword_269AB6BA0);
  uint64_t v30 = sub_25058DE60(&qword_269AB6BA8, &qword_269AB6BA0);
  *(void *)(v27 + 72) = v29;
  *(void *)(v27 + 136) = v24;
  *(void *)(v27 + 144) = v28;
  *(void *)(v27 + 104) = v30;
  *(void *)(v27 + 112) = v26;
  id v93 = v26;
  id v31 = v98;
  uint64_t v32 = sub_2504DCA88(v97, (unint64_t)v96);
  id v98 = v31;
  unint64_t v106 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
  sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
  uint64_t v33 = sub_2505BE110();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  *(void *)(v27 + 176) = MEMORY[0x263F8D310];
  *(void *)(v27 + 184) = sub_25058DEB0();
  *(void *)(v27 + 152) = v33;
  *(void *)(v27 + 160) = v35;
  uint64_t v36 = (void *)sub_2505BE390();
  swift_getKeyPath();
  uint64_t v37 = (void *)sub_2505BE3A0();
  uint64_t v38 = swift_allocObject();
  long long v97 = xmmword_2505BFEC0;
  *(_OWORD *)(v38 + 16) = xmmword_2505BFEC0;
  *(void *)(v38 + 56) = v24;
  *(void *)(v38 + 64) = v28;
  uint64_t v39 = MEMORY[0x263F8E8F8];
  *(void *)(v38 + 32) = v37;
  uint64_t v40 = MEMORY[0x263F8E960];
  *(void *)(v38 + 96) = v39;
  *(void *)(v38 + 104) = v40;
  *(_DWORD *)(v38 + 72) = v100;
  id v100 = v37;
  uint64_t v41 = (void *)sub_2505BE390();
  swift_getKeyPath();
  unint64_t v42 = (void *)sub_2505BE3A0();
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v97;
  *(void *)(v43 + 56) = v24;
  *(void *)(v43 + 64) = v28;
  uint64_t v44 = MEMORY[0x263F8E5C0];
  *(void *)(v43 + 32) = v42;
  uint64_t v45 = MEMORY[0x263F8E620];
  *(void *)(v43 + 96) = v44;
  *(void *)(v43 + 104) = v45;
  *(void *)(v43 + 72) = v101;
  id v46 = v42;
  unint64_t v47 = (void *)sub_2505BE390();
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2505C6340;
  *(void *)(v48 + 32) = v36;
  *(void *)(v48 + 40) = v41;
  *(void *)(v48 + 48) = v47;
  unint64_t v106 = v48;
  sub_2505BE2D0();
  id v49 = v36;
  uint64_t v50 = v103;
  id v51 = v49;
  id v52 = v41;
  id v53 = v47;
  uint64_t v54 = v102;
  id v55 = v53;
  uint64_t v56 = (void *)sub_2505BE2A0();
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v56);

  objc_msgSend(v50, sel_setPredicate_, v57);
  id v58 = *(void **)(v54 + 32);
  type metadata accessor for GroupKitCryptoGroupSeed();
  id v59 = v58;
  id v60 = v98;
  uint64_t v61 = sub_2505BE3F0();
  if (!v60)
  {
    uint64_t v68 = v61;
    id v101 = v55;

    if ((unint64_t)v68 >> 62)
    {
      uint64_t v69 = v68;
      if (v68 >= 0) {
        v68 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_2505BE600();
      swift_bridgeObjectRelease();
      if (v78 > 1)
      {
        unint64_t v79 = swift_bridgeObjectRetain();
        uint64_t v68 = (uint64_t)sub_25059DAF8(v79, (void (*)(void))type metadata accessor for GroupKitCryptoGroupSeed, &qword_269AB6C08, &qword_269AB6C00, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25059EA80);
        uint64_t v99 = v69;
        swift_bridgeObjectRelease();
LABEL_7:
        id v105 = (id)v68;
        sub_25059A95C((uint64_t *)&v105, (uint64_t (*)(uint64_t))sub_25058F86C, (void (*)(void))type metadata accessor for GroupKitCryptoGroupSeed, sub_25055A538, (void (*)(id **, void ***, void ***))sub_25058F0E4);
        unint64_t v106 = (unint64_t)v105;
        int v70 = (void *)sub_25059D820((uint64_t (*)(uint64_t))sub_25058F1E0);
        if (!v70)
        {
          swift_bridgeObjectRelease();
          id v65 = 0;
          uint64_t v75 = v87;
          uint64_t v76 = v86;
          uint64_t v77 = v104;
          goto LABEL_28;
        }
        id v96 = v70;
        *(void *)&long long v97 = v51;
        id v98 = v46;
        uint64_t v69 = v54;
        uint64_t v68 = v106;
        if (!(v106 >> 62))
        {
          uint64_t v71 = *(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v71)
          {
LABEL_10:
            if (v71 < 1) {
              __break(1u);
            }
            for (uint64_t i = 0; i != v71; ++i)
            {
              if ((v68 & 0xC000000000000001) != 0) {
                id v73 = (id)MEMORY[0x25337F460](i, v68);
              }
              else {
                id v73 = *(id *)(v68 + 8 * i + 32);
              }
              uint64_t v74 = v73;
              objc_msgSend(*(id *)(v69 + 32), sel_deleteObject_, v73);
            }
          }
LABEL_33:
          swift_bridgeObjectRelease();
          uint64_t v82 = *(void **)(v69 + 32);
          id v105 = 0;
          if (!objc_msgSend(v82, sel_save_, &v105))
          {
            id v84 = v105;
            sub_2505BD840();

            swift_willThrow();
            uint64_t v50 = v103;
            id v64 = v98;
            uint64_t v63 = (void *)v97;
            (*(void (**)(char *, uint64_t))(v86 + 8))(v104, v87);
            swift_bridgeObjectRelease();
            id v65 = v93;
            id v67 = v94;
            id v66 = v100;
            id v62 = v101;
            goto LABEL_3;
          }
          id v83 = v105;
          uint64_t v50 = v103;
          uint64_t v77 = v104;
          uint64_t v75 = v87;
          uint64_t v76 = v86;
          id v46 = v98;
          id v65 = v96;
          id v51 = (id)v97;
LABEL_28:
          (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v75);
          swift_bridgeObjectRelease();

          return v65;
        }
LABEL_32:
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_2505BE600();
        swift_bridgeObjectRelease();
        if (v71) {
          goto LABEL_10;
        }
        goto LABEL_33;
      }
      swift_bridgeObjectRetain();
      id v65 = (id)sub_2505BE600();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v69 = v68;
      v68 &= 0xFFFFFFFFFFFFFF8uLL;
      id v65 = *(id *)(v68 + 16);
      if ((unint64_t)v65 > 1)
      {
        uint64_t v99 = v69;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      }
    }
    if (v65)
    {
      if ((v69 & 0xC000000000000001) != 0)
      {
        id v80 = (id)MEMORY[0x25337F460](0, v69);
      }
      else
      {
        if (!*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_32;
        }
        id v80 = *(id *)(v69 + 32);
      }
      id v65 = v80;
    }
    uint64_t v75 = v87;
    uint64_t v76 = v86;
    uint64_t v77 = v104;
    goto LABEL_28;
  }
  (*(void (**)(char *, uint64_t))(v86 + 8))(v104, v87);

  id v62 = v52;
  id v52 = v51;
  uint64_t v63 = v46;
  id v64 = v100;
  id v66 = v93;
  id v65 = v94;
  id v67 = v50;
LABEL_3:

  return v65;
}

unint64_t sub_25059D820(uint64_t (*a1)(uint64_t))
{
  if (!(*v1 >> 62))
  {
    if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2505BE600();
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
LABEL_3:
  unint64_t result = sub_25059F39C(a1);
  if (!result)
  {
    if (*v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_2505BE600();
      swift_bridgeObjectRelease();
      unint64_t result = v6 - 1;
      if (!__OFSUB__(v6, 1)) {
        return sub_25059F2A8(result, a1);
      }
    }
    else
    {
      uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = v4 - 1;
      if (!__OFSUB__(v4, 1)) {
        return sub_25059F2A8(result, a1);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25059D8F8()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeviceToDeviceEncryptedContainerInteraction()
{
  return self;
}

size_t sub_25059D964(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED8);
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90) - 8);
      uint64_t v10 = sub_25059EF5C(&v11, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      swift_bridgeObjectRetain();
      sub_250528314();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25059DAF8(unint64_t a1, void (*a2)(void), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v10 <= 0)
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2021A0);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v10;
      void v11[3] = (2 * (v13 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_25059E7DC((unint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v14;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))v10) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2505BE600();
    swift_bridgeObjectRelease();
    if (!v10) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v11;
}

void sub_25059DC20(uint64_t *a1, void (*a2)(void), uint64_t (*a3)(id), uint64_t (*a4)(id), void (*a5)(id **, void ***, void ***))
{
  uint64_t v8 = a1[1];
  uint64_t v9 = sub_2505BE760();
  if (v9 >= v8)
  {
    if (v8 < 0) {
      goto LABEL_140;
    }
    if (v8) {
      sub_25059E3B0(0, v8, 1, a1, a4);
    }
    return;
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_149;
  }
  uint64_t v106 = v9;
  uint64_t v107 = a1;
  uint64_t v108 = v8;
  if (v8 < 2)
  {
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
    uint64_t v116 = MEMORY[0x263F8EE78];
    uint64_t v112 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      unint64_t v36 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_103:
      if (v36 >= 2)
      {
        uint64_t v97 = *v107;
        do
        {
          unint64_t v98 = v36 - 2;
          if (v36 < 2) {
            goto LABEL_135;
          }
          if (!v97) {
            goto LABEL_148;
          }
          uint64_t v99 = *(void *)&v13[16 * v98 + 32];
          uint64_t v100 = *(void *)&v13[16 * v36 + 24];
          sub_25059E4A0((id *)(v97 + 8 * v99), (id *)(v97 + 8 * *(void *)&v13[16 * v36 + 16]), v97 + 8 * v100, v112, a4, a5);
          if (v5) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v13 = sub_25058F1A4((uint64_t)v13);
          }
          if (v98 >= *((void *)v13 + 2)) {
            goto LABEL_137;
          }
          id v101 = &v13[16 * v98 + 32];
          *(void *)id v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v13 + 2);
          if (v36 > v102) {
            goto LABEL_138;
          }
          memmove(&v13[16 * v36 + 16], &v13[16 * v36 + 32], 16 * (v102 - v36));
          *((void *)v13 + 2) = v102 - 1;
          unint64_t v36 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
LABEL_117:
      *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2505BE2D0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v11 = v10 >> 1;
    a2(0);
    uint64_t v12 = sub_2505BE2F0();
    *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v11;
    uint64_t v8 = v108;
    uint64_t v112 = (void **)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v116 = v12;
  }
  uint64_t v14 = 0;
  uint64_t v15 = *a1;
  uint64_t v104 = *a1 - 8;
  uint64_t v105 = *a1 + 16;
  uint64_t v13 = (char *)MEMORY[0x263F8EE78];
  uint64_t v115 = *a1;
LABEL_13:
  uint64_t v16 = v14++;
  if (v14 >= v8) {
    goto LABEL_30;
  }
  uint64_t v17 = *(void **)(v15 + 8 * v16);
  id v18 = *(id *)(v15 + 8 * v14);
  id v19 = v17;
  int v20 = a3(v18);
  if (v5)
  {
    swift_bridgeObjectRelease();

    goto LABEL_116;
  }
  int v21 = v20;

  uint64_t v14 = v16 + 2;
  if (v16 + 2 >= v8) {
    goto LABEL_20;
  }
  id v22 = v13;
  uint64_t v23 = (id *)(v105 + 8 * v16);
  do
  {
    uint64_t v24 = *(v23 - 1);
    id v25 = *v23;
    id v26 = v24;
    int v27 = a3(v25);

    if ((v21 ^ v27))
    {
      uint64_t v13 = v22;
      uint64_t v8 = v108;
      uint64_t v15 = v115;
      if (v21) {
        goto LABEL_21;
      }
LABEL_30:
      if (v14 >= v8) {
        goto LABEL_39;
      }
      if (__OFSUB__(v14, v16)) {
        goto LABEL_141;
      }
      if (v14 - v16 >= v106) {
        goto LABEL_39;
      }
      if (__OFADD__(v16, v106)) {
        goto LABEL_142;
      }
      if (v16 + v106 >= v8) {
        uint64_t v33 = v8;
      }
      else {
        uint64_t v33 = v16 + v106;
      }
      if (v33 < v16)
      {
LABEL_143:
        __break(1u);
        goto LABEL_144;
      }
      if (v14 == v33)
      {
LABEL_39:
        if (v14 < v16) {
          goto LABEL_139;
        }
        goto LABEL_40;
      }
      id v103 = v13;
      uint64_t v87 = v104 + 8 * v14;
      uint64_t v110 = v33;
      while (1)
      {
        int v88 = *(void **)(v15 + 8 * v14);
        uint64_t v89 = v16;
        uint64_t v90 = v87;
        while (1)
        {
          int v91 = *(void **)v87;
          id v92 = v88;
          id v19 = v91;
          char v93 = a3(v92);
          if (v5)
          {
            swift_bridgeObjectRelease();

LABEL_116:
            goto LABEL_117;
          }
          char v94 = v93;

          if ((v94 & 1) == 0) {
            break;
          }
          uint64_t v15 = v115;
          if (!v115) {
            goto LABEL_146;
          }
          uint64_t v95 = *(void **)v87;
          int v88 = *(void **)(v87 + 8);
          *(void *)uint64_t v87 = v88;
          *(void *)(v87 + 8) = v95;
          v87 -= 8;
          if (v14 == ++v89) {
            goto LABEL_98;
          }
        }
        uint64_t v15 = v115;
LABEL_98:
        ++v14;
        uint64_t v87 = v90 + 8;
        if (v14 == v110)
        {
          uint64_t v14 = v110;
          uint64_t v13 = v103;
          if (v110 < v16) {
            goto LABEL_139;
          }
LABEL_40:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v13 = sub_25058EBC8(0, *((void *)v13 + 2) + 1, 1, v13);
          }
          unint64_t v35 = *((void *)v13 + 2);
          unint64_t v34 = *((void *)v13 + 3);
          unint64_t v36 = v35 + 1;
          uint64_t v15 = v115;
          if (v35 >= v34 >> 1)
          {
            id v96 = sub_25058EBC8((char *)(v34 > 1), v35 + 1, 1, v13);
            uint64_t v15 = v115;
            uint64_t v13 = v96;
          }
          *((void *)v13 + 2) = v36;
          uint64_t v37 = v13 + 32;
          uint64_t v38 = &v13[16 * v35 + 32];
          *(void *)uint64_t v38 = v16;
          *((void *)v38 + 1) = v14;
          if (v35)
          {
            uint64_t v109 = v14;
            while (1)
            {
              unint64_t v39 = v36 - 1;
              if (v36 >= 4)
              {
                uint64_t v44 = &v37[16 * v36];
                uint64_t v45 = *((void *)v44 - 8);
                uint64_t v46 = *((void *)v44 - 7);
                BOOL v50 = __OFSUB__(v46, v45);
                uint64_t v47 = v46 - v45;
                if (v50) {
                  goto LABEL_124;
                }
                uint64_t v49 = *((void *)v44 - 6);
                uint64_t v48 = *((void *)v44 - 5);
                BOOL v50 = __OFSUB__(v48, v49);
                uint64_t v42 = v48 - v49;
                char v43 = v50;
                if (v50) {
                  goto LABEL_125;
                }
                unint64_t v51 = v36 - 2;
                id v52 = &v37[16 * v36 - 32];
                uint64_t v54 = *(void *)v52;
                uint64_t v53 = *((void *)v52 + 1);
                BOOL v50 = __OFSUB__(v53, v54);
                uint64_t v55 = v53 - v54;
                if (v50) {
                  goto LABEL_127;
                }
                BOOL v50 = __OFADD__(v42, v55);
                uint64_t v56 = v42 + v55;
                if (v50) {
                  goto LABEL_130;
                }
                if (v56 >= v47)
                {
                  uint64_t v74 = &v37[16 * v39];
                  uint64_t v76 = *(void *)v74;
                  uint64_t v75 = *((void *)v74 + 1);
                  BOOL v50 = __OFSUB__(v75, v76);
                  uint64_t v77 = v75 - v76;
                  if (v50) {
                    goto LABEL_134;
                  }
                  BOOL v67 = v42 < v77;
                  goto LABEL_77;
                }
              }
              else
              {
                if (v36 != 3)
                {
                  uint64_t v68 = *((void *)v13 + 4);
                  uint64_t v69 = *((void *)v13 + 5);
                  BOOL v50 = __OFSUB__(v69, v68);
                  uint64_t v61 = v69 - v68;
                  char v62 = v50;
                  goto LABEL_71;
                }
                uint64_t v41 = *((void *)v13 + 4);
                uint64_t v40 = *((void *)v13 + 5);
                BOOL v50 = __OFSUB__(v40, v41);
                uint64_t v42 = v40 - v41;
                char v43 = v50;
              }
              if (v43) {
                goto LABEL_126;
              }
              unint64_t v51 = v36 - 2;
              id v57 = &v37[16 * v36 - 32];
              uint64_t v59 = *(void *)v57;
              uint64_t v58 = *((void *)v57 + 1);
              BOOL v60 = __OFSUB__(v58, v59);
              uint64_t v61 = v58 - v59;
              char v62 = v60;
              if (v60) {
                goto LABEL_129;
              }
              uint64_t v63 = &v37[16 * v39];
              uint64_t v65 = *(void *)v63;
              uint64_t v64 = *((void *)v63 + 1);
              BOOL v50 = __OFSUB__(v64, v65);
              uint64_t v66 = v64 - v65;
              if (v50) {
                goto LABEL_132;
              }
              if (__OFADD__(v61, v66)) {
                goto LABEL_133;
              }
              if (v61 + v66 >= v42)
              {
                BOOL v67 = v42 < v66;
LABEL_77:
                if (v67) {
                  unint64_t v39 = v51;
                }
                goto LABEL_79;
              }
LABEL_71:
              if (v62) {
                goto LABEL_128;
              }
              int v70 = &v37[16 * v39];
              uint64_t v72 = *(void *)v70;
              uint64_t v71 = *((void *)v70 + 1);
              BOOL v50 = __OFSUB__(v71, v72);
              uint64_t v73 = v71 - v72;
              if (v50) {
                goto LABEL_131;
              }
              if (v73 < v61) {
                goto LABEL_88;
              }
LABEL_79:
              uint64_t v78 = v13;
              unint64_t v79 = v39 - 1;
              if (v39 - 1 >= v36)
              {
                __break(1u);
LABEL_121:
                __break(1u);
LABEL_122:
                __break(1u);
LABEL_123:
                __break(1u);
LABEL_124:
                __break(1u);
LABEL_125:
                __break(1u);
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
LABEL_129:
                __break(1u);
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
LABEL_132:
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
                goto LABEL_143;
              }
              if (!v15) {
                goto LABEL_145;
              }
              id v80 = &v37[16 * v79];
              uint64_t v81 = *(void *)v80;
              uint64_t v82 = v37;
              unint64_t v83 = v39;
              id v84 = &v37[16 * v39];
              uint64_t v85 = *((void *)v84 + 1);
              sub_25059E4A0((id *)(v15 + 8 * *(void *)v80), (id *)(v15 + 8 * *(void *)v84), v15 + 8 * v85, v112, a4, a5);
              if (v5) {
                goto LABEL_114;
              }
              if (v85 < v81) {
                goto LABEL_121;
              }
              if (v83 > *((void *)v78 + 2)) {
                goto LABEL_122;
              }
              *(void *)id v80 = v81;
              *(void *)&v82[16 * v79 + 8] = v85;
              unint64_t v86 = *((void *)v78 + 2);
              if (v83 >= v86) {
                goto LABEL_123;
              }
              uint64_t v13 = v78;
              unint64_t v36 = v86 - 1;
              memmove(v84, v84 + 16, 16 * (v86 - 1 - v83));
              uint64_t v37 = v82;
              *((void *)v78 + 2) = v86 - 1;
              uint64_t v15 = v115;
              uint64_t v14 = v109;
              if (v86 <= 2) {
                goto LABEL_88;
              }
            }
          }
          unint64_t v36 = 1;
LABEL_88:
          uint64_t v8 = v108;
          if (v14 >= v108) {
            goto LABEL_103;
          }
          goto LABEL_13;
        }
      }
    }
    ++v14;
    ++v23;
    uint64_t v8 = v108;
  }
  while (v108 != v14);
  uint64_t v14 = v108;
  uint64_t v13 = v22;
LABEL_20:
  uint64_t v15 = v115;
  if ((v21 & 1) == 0) {
    goto LABEL_30;
  }
LABEL_21:
  if (v14 >= v16)
  {
    if (v16 < v14)
    {
      uint64_t v28 = (uint64_t *)(v104 + 8 * v14);
      uint64_t v29 = v14;
      uint64_t v30 = v16;
      id v31 = (uint64_t *)(v15 + 8 * v16);
      while (1)
      {
        if (v30 != --v29)
        {
          if (!v15) {
            goto LABEL_147;
          }
          uint64_t v32 = *v31;
          *id v31 = *v28;
          *uint64_t v28 = v32;
        }
        ++v30;
        --v28;
        ++v31;
        if (v30 >= v29) {
          goto LABEL_30;
        }
      }
    }
    goto LABEL_30;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  sub_2505BE5E0();
  __break(1u);
}

void sub_25059E3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(id))
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v8 = a1;
    uint64_t v9 = *a4;
    uint64_t v10 = *a4 + 8 * a3 - 8;
LABEL_4:
    uint64_t v11 = *(void **)(v9 + 8 * v7);
    uint64_t v19 = v10;
    while (1)
    {
      uint64_t v12 = *(void **)v10;
      id v13 = v11;
      id v14 = v12;
      char v15 = a5(v13);

      if (v5) {
        break;
      }
      if (v15)
      {
        if (!v9)
        {
          __break(1u);
          return;
        }
        uint64_t v16 = *(void **)v10;
        uint64_t v11 = *(void **)(v10 + 8);
        *(void *)uint64_t v10 = v11;
        *(void *)(v10 + 8) = v16;
        v10 -= 8;
        if (v7 != ++v8) {
          continue;
        }
      }
      ++v7;
      uint64_t v10 = v19 + 8;
      uint64_t v8 = a1;
      if (v7 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

uint64_t sub_25059E4A0(id *__src, id *a2, unint64_t a3, void **__dst, uint64_t (*a5)(id), void (*a6)(id **, void ***, void ***))
{
  uint64_t v6 = __dst;
  uint64_t v8 = a2;
  int64_t v10 = (char *)a2 - (char *)__src;
  int64_t v11 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v11 = (char *)a2 - (char *)__src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v14 = a3 - (void)a2;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v44 = __src;
  char v43 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[v15] <= __dst) {
        memmove(__dst, a2, 8 * v15);
      }
      id v25 = &v6[v15];
      uint64_t v42 = v25;
      uint64_t v44 = v8;
      if (__src < v8 && v13 >= 8)
      {
        uint64_t v38 = __src;
        id v26 = (void **)(a3 - 8);
        int v27 = v8;
        while (1)
        {
          unint64_t v39 = v8;
          uint64_t v28 = v6;
          uint64_t v29 = v25;
          id v31 = *--v25;
          uint64_t v30 = v31;
          uint64_t v32 = *--v27;
          id v20 = v30;
          id v21 = v32;
          char v33 = a5(v20);
          if (v41) {
            goto LABEL_46;
          }
          char v34 = v33;
          uint64_t v41 = 0;
          unint64_t v35 = v26 + 1;

          if (v34)
          {
            uint64_t v6 = v28;
            id v25 = v29;
            if (v35 != v39 || v26 >= v39) {
              *id v26 = *v27;
            }
            uint64_t v44 = v27;
          }
          else
          {
            uint64_t v42 = v25;
            uint64_t v6 = v28;
            if (v35 < v29 || v26 >= v29 || v35 != v29) {
              *id v26 = *v25;
            }
            int v27 = v39;
          }
          if (v27 > v38)
          {
            --v26;
            uint64_t v8 = v27;
            if (v25 > v6) {
              continue;
            }
          }
          break;
        }
      }
LABEL_45:
      a6(&v44, &v43, &v42);
      return 1;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, 8 * v12);
    }
    uint64_t v16 = &v6[v12];
    uint64_t v42 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      uint64_t v17 = __src;
      while (1)
      {
        id v18 = v6;
        uint64_t v19 = *v6;
        id v20 = *v8;
        id v21 = v19;
        char v22 = a5(v20);
        if (v41) {
          break;
        }
        char v23 = v22;

        if (v23)
        {
          uint64_t v24 = v8 + 1;
          uint64_t v6 = v18;
          if (v17 < v8 || v17 >= v24 || v17 != v8) {
            id *v17 = *v8;
          }
        }
        else
        {
          if (v17 != v18) {
            id *v17 = *v18;
          }
          uint64_t v6 = v18 + 1;
          char v43 = v18 + 1;
          uint64_t v24 = v8;
        }
        uint64_t v41 = 0;
        uint64_t v44 = ++v17;
        if (v6 < v16)
        {
          uint64_t v8 = v24;
          if ((unint64_t)v24 < a3) {
            continue;
          }
        }
        goto LABEL_45;
      }
LABEL_46:

      a6(&v44, &v43, &v42);
      return 1;
    }
    goto LABEL_45;
  }
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

uint64_t sub_25059E7DC(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2505BE600();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_2505BE600();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_250522D7C(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          char v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          id v24 = *v23;
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

uint64_t (*sub_25059EA14(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25059EB30(v6, a2, a3);
  return sub_25059EA7C;
}

uint64_t (*sub_25059EA80(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25059EBB8(v6, a2, a3);
  return sub_25059EA7C;
}

void sub_25059EAE8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_25059EB30(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x25337F460](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_25059EBB0;
  }
  __break(1u);
  return result;
}

void sub_25059EBB0(id *a1)
{
}

void (*sub_25059EBB8(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x25337F460](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_25059F620;
  }
  __break(1u);
  return result;
}

char *keypath_get_selector_groupVersion()
{
  return sel_groupVersion;
}

id sub_25059EC54@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_groupVersion);
  *a2 = result;
  return result;
}

id sub_25059EC88(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setGroupVersion_, *a1);
}

char *keypath_get_selector_seedType()
{
  return sel_seedType;
}

id sub_25059ECA8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_seedType);
  *a2 = result;
  return result;
}

id sub_25059ECDC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSeedType_, *a1);
}

uint64_t sub_25059ECF0(void *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = sub_2505BDC90();
  MEMORY[0x270FA5388](v7, v8, v9, v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v7);
  sub_25059F5C8();
  sub_2505BE220();
  unint64_t v14 = *(void *)(v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB6010) + 36));
  uint64_t result = sub_2504DAF60(v3, &qword_269AB6010);
  uint64_t v16 = v35;
  unint64_t v17 = v36;
  if (!a2) {
    goto LABEL_6;
  }
  if (!a3)
  {
LABEL_7:
    *a1 = v16;
    a1[1] = v17;
    a1[2] = v14;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (!v14 || (--v14, unint64_t v18 = *(void *)(v35 + 16), v36 == v18))
    {
LABEL_6:
      a3 = 0;
      goto LABEL_7;
    }
    if (v36 < v18)
    {
      unint64_t v19 = v36 + 1;
      *a2 = *(unsigned char *)(v35 + 32 + v36);
      if (a3 == 1)
      {
        ++v17;
      }
      else
      {
        unint64_t v20 = a3 - 2;
        if (a3 - 2 >= v18 + ~v17) {
          unint64_t v20 = v18 + ~v17;
        }
        if (v20 >= v14) {
          unint64_t v20 = v14;
        }
        unint64_t v21 = v20 + 1;
        if (v21 <= 0x10 || (uint64_t v22 = v17 + v16, ((unint64_t)&a2[-v17 - v16] & 0xFFFFFFFFFFFFFFF0) == 0x20))
        {
          uint64_t v23 = 1;
          id v24 = a2;
        }
        else
        {
          uint64_t v25 = v21 & 0xF;
          if ((v21 & 0xF) == 0) {
            uint64_t v25 = 16;
          }
          unint64_t v26 = v21 - v25;
          v19 += v21 - v25;
          id v24 = &a2[v21 - v25];
          uint64_t v23 = v26 + 1;
          v14 -= v26;
          int v27 = a2 + 1;
          uint64_t v28 = (long long *)(v22 + 33);
          do
          {
            long long v29 = *v28++;
            *v27++ = v29;
            v26 -= 16;
          }
          while (v26);
        }
        uint64_t v30 = 0;
        id v31 = v24 + 1;
        unint64_t v32 = v14 - 1;
        uint64_t v33 = v23;
        while (1)
        {
          if (v14 == v30)
          {
            unint64_t v14 = 0;
            unint64_t v17 = v19 + v30;
            a3 = v23 + v30;
            goto LABEL_7;
          }
          unint64_t v34 = v32;
          if (!(v19 - v18 + v30)) {
            break;
          }
          ++v33;
          v31[v30] = *(unsigned char *)(v19 + v16 + 32 + v30);
          ++v30;
          --v32;
          if (!(v23 - a3 + v30))
          {
            unint64_t v17 = v19 + v30;
            unint64_t v14 = v34;
            goto LABEL_7;
          }
        }
        unint64_t v17 = v18;
        unint64_t v14 = v32;
        a3 = v33;
      }
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25059EF5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  uint64_t v13 = MEMORY[0x270FA5388](v8, v9, v10, v11, v12);
  uint64_t v15 = (uint64_t *)((char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v13, v16, v17, v18, v19);
  uint64_t v22 = (char *)&v40 - v21;
  uint64_t v49 = a4;
  uint64_t v23 = *(void *)(a4 + 64);
  uint64_t v45 = a4 + 64;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (-v24 < 64) {
    uint64_t v25 = ~(-1 << -(char)v24);
  }
  else {
    uint64_t v25 = -1;
  }
  unint64_t v26 = v25 & v23;
  if (!a2)
  {
    int64_t v27 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v39 = v45;
    *a1 = v49;
    a1[1] = v39;
    a1[2] = ~v24;
    a1[3] = v27;
    a1[4] = v26;
    return a3;
  }
  if (!a3)
  {
    int64_t v27 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v42 = v24;
  char v43 = a1;
  int64_t v27 = 0;
  uint64_t v28 = 0;
  int64_t v44 = (unint64_t)(63 - v24) >> 6;
  int64_t v41 = v44 - 1;
  uint64_t v46 = a3;
  if (!v26) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v29 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  unint64_t v30 = v29 | (v27 << 6);
  while (1)
  {
    ++v28;
    uint64_t v34 = *(void *)(v49 + 56);
    uint64_t v35 = (uint64_t *)(*(void *)(v49 + 48) + 16 * v30);
    uint64_t v37 = *v35;
    unint64_t v36 = v35[1];
    uint64_t v38 = type metadata accessor for GroupMembership.MemberProperties(0);
    sub_25059F42C(v34 + *(void *)(*(void *)(v38 - 8) + 72) * v30, (uint64_t)v15 + *(int *)(v48 + 48));
    *uint64_t v15 = v37;
    v15[1] = v36;
    sub_25059F490((uint64_t)v15, (uint64_t)v22);
    sub_25059F490((uint64_t)v22, a2);
    a3 = v46;
    if (v28 == v46)
    {
      sub_2504DBC4C(v37, v36);
      goto LABEL_38;
    }
    a2 += *(void *)(v47 + 72);
    uint64_t result = sub_2504DBC4C(v37, v36);
    if (v26) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v31 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v31 >= v44) {
      goto LABEL_33;
    }
    unint64_t v32 = *(void *)(v45 + 8 * v31);
    if (!v32)
    {
      v27 += 2;
      if (v31 + 1 >= v44)
      {
        unint64_t v26 = 0;
        int64_t v27 = v31;
      }
      else
      {
        unint64_t v32 = *(void *)(v45 + 8 * v27);
        if (v32) {
          goto LABEL_14;
        }
        int64_t v33 = v31 + 2;
        if (v31 + 2 >= v44) {
          goto LABEL_33;
        }
        unint64_t v32 = *(void *)(v45 + 8 * v33);
        if (v32)
        {
LABEL_17:
          int64_t v31 = v33;
          goto LABEL_18;
        }
        int64_t v27 = v31 + 3;
        if (v31 + 3 < v44)
        {
          unint64_t v32 = *(void *)(v45 + 8 * v27);
          if (v32)
          {
LABEL_14:
            int64_t v31 = v27;
            goto LABEL_18;
          }
          int64_t v33 = v31 + 4;
          if (v31 + 4 >= v44)
          {
LABEL_33:
            unint64_t v26 = 0;
            goto LABEL_37;
          }
          unint64_t v32 = *(void *)(v45 + 8 * v33);
          if (!v32)
          {
            while (1)
            {
              int64_t v31 = v33 + 1;
              if (__OFADD__(v33, 1)) {
                goto LABEL_42;
              }
              if (v31 >= v44)
              {
                unint64_t v26 = 0;
                int64_t v27 = v41;
                goto LABEL_37;
              }
              unint64_t v32 = *(void *)(v45 + 8 * v31);
              ++v33;
              if (v32) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v26 = 0;
        int64_t v27 = v31 + 2;
      }
LABEL_37:
      a3 = v28;
LABEL_38:
      uint64_t v24 = v42;
      a1 = v43;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v26 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v31 << 6);
    int64_t v27 = v31;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25059F2A8(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t v5 = a2(v5);
    *uint64_t v2 = v5;
  }
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      uint64_t v11 = v7 + 8 * a1;
      uint64_t v12 = *(void *)(v11 + 32);
      memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
      sub_2505BE2D0();
      return v12;
    }
  }
  uint64_t result = sub_2505BE650();
  __break(1u);
  return result;
}

uint64_t sub_25059F39C(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!result || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t result = a1(v3);
    uint64_t v3 = result;
    *uint64_t v1 = result;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    uint64_t v7 = v6 - 1;
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
    *(void *)(v5 + 16) = v7;
    sub_2505BE2D0();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25059F42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupMembership.MemberProperties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25059F490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25059F4F8(int8x16_t *a1@<X8>)
{
  sub_25059C180(*(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(_DWORD *)(v1 + 56), a1);
}

void sub_25059F520()
{
  sub_25051A928(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(_DWORD *)(v0 + 56), *(void *)(v0 + 64));
}

void sub_25059F54C()
{
  sub_25051A8F8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(_DWORD *)(v0 + 56), *(void *)(v0 + 64));
}

void sub_25059F578()
{
  sub_25059AD08(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(_DWORD *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

void sub_25059F5A4(unint64_t *a1@<X8>)
{
  sub_25059BF68(v1[3], v1[4], v1[5], v1[6], a1);
}

unint64_t sub_25059F5C8()
{
  unint64_t result = qword_269AB6C28;
  if (!qword_269AB6C28)
  {
    sub_2505BDC90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6C28);
  }
  return result;
}

uint64_t sub_25059F624(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x25059F794);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 > 27)
      {
        sub_2504DBC4C(a1, a2);
        sub_25056D81C(a1, a2);
        sub_2505BDDC0();
        return sub_250511528(a1, a2);
      }
      else
      {
LABEL_7:
        uint64_t v8 = sub_2505BDC50();
        sub_2505A2DCC(&qword_269AB6C48, MEMORY[0x263F04548]);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, *MEMORY[0x263F04538], v8);
        swift_willThrow();
        return sub_250511528(a1, a2);
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_25059F7A4()
{
  if (qword_269AB5420 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_269AC31A0;
  unint64_t v1 = *(void *)algn_269AC31A8;
  sub_2504DBC4C(qword_269AC31A0, *(unint64_t *)algn_269AC31A8);
  uint64_t v2 = sub_25056CFB4(0xD000000000000021, 0x80000002505CC8B0);
  unint64_t v4 = v3;
  qword_269AC3800 = v0;
  *(void *)algn_269AC3808 = v1;
  sub_2504DBC4C(v0, v1);
  sub_2504DBC4C(v2, v4);
  sub_2505980CC(v2, v4);
  sub_250511528(v2, v4);
  sub_250511528(v2, v4);
  return sub_250511528(v0, v1);
}

uint64_t sub_25059F89C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v119 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB65B8);
  uint64_t v10 = MEMORY[0x270FA5388](v5 - 8, v6, v7, v8, v9);
  uint64_t v126 = (uint64_t)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v124 = (uint64_t)&v114 - v17;
  MEMORY[0x270FA5388](v16, v18, v19, v20, v21);
  uint64_t v123 = (uint64_t)&v114 - v22;
  uint64_t v125 = type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext.Context(0);
  uint64_t v128 = *(void *)(v125 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v125, v23, v24, v25, v26);
  char v122 = (_DWORD *)((char *)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = MEMORY[0x270FA5388](v27, v29, v30, v31, v32);
  unint64_t v121 = (_DWORD *)((char *)&v114 - v34);
  MEMORY[0x270FA5388](v33, v35, v36, v37, v38);
  unint64_t v120 = (_DWORD *)((char *)&v114 - v39);
  uint64_t v40 = sub_2505BDDD0();
  uint64_t v127 = *(void *)(v40 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v40, v41, v42, v43, v44);
  uint64_t v47 = (char *)&v114 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45, v48, v49, v50, v51);
  uint64_t v53 = (char *)&v114 - v52;
  uint64_t v54 = sub_2505BDA70();
  MEMORY[0x270FA5388](v54 - 8, v55, v56, v57, v58);
  uint64_t v59 = type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext(0);
  uint64_t v64 = MEMORY[0x270FA5388](v59, v60, v61, v62, v63);
  uint64_t v66 = (int *)((char *)&v114 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v64, v67, v68, v69, v70);
  uint64_t v72 = (char *)&v114 - v71;
  uint64_t v131 = 0;
  memset(v130, 0, sizeof(v130));
  sub_2504DBC4C(a1, a2);
  sub_2505BDA60();
  sub_2505A2DCC(&qword_269AB61B8, (void (*)(uint64_t))type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext);
  unint64_t v73 = v129;
  sub_2505BDB30();
  if (v73) {
    return sub_250511528(a1, a2);
  }
  uint64_t v116 = v47;
  uint64_t v117 = v53;
  uint64_t v118 = a1;
  unint64_t v129 = a2;
  if (*(_DWORD *)v72 == 1)
  {
    uint64_t v75 = *((void *)v72 + 1);
    unint64_t v76 = *((void *)v72 + 2);
    sub_2504DBC4C(v75, v76);
    uint64_t v77 = v117;
    sub_25059F624(v75, v76);
    uint64_t v115 = 0;
    uint64_t v87 = (uint64_t)&v72[*(int *)(v59 + 28)];
    uint64_t v88 = v123;
    sub_2505A2D04(v87, v123);
    uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
    uint64_t v90 = v125;
    v128 += 48;
    if (v89(v88, 1, v125) == 1)
    {
      int v91 = v120;
      *unint64_t v120 = 0;
      *(_OWORD *)(v91 + 2) = xmmword_2505BFEF0;
      *((void *)v91 + 3) = 0;
      *((unsigned char *)v91 + 32) = 1;
      sub_2505BDA40();
      sub_2504DAF60(v88, &qword_269AB65B8);
    }
    else
    {
      int v91 = v120;
      sub_2505A2C38(v88, (uint64_t)v120);
    }
    uint64_t v92 = v40;
    uint64_t v93 = v90;
    uint64_t v94 = (uint64_t)v116;
    int v95 = *v91;
    sub_2505A2D6C((uint64_t)v91, type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext.Context);
    (*(void (**)(uint64_t, char *, uint64_t))(v127 + 16))(v94, v77, v92);
    uint64_t v96 = v124;
    sub_2505A2D04(v87, v124);
    unsigned int v97 = v89(v96, 1, v93);
    LODWORD(v125) = v95;
    if (v97 == 1)
    {
      unint64_t v98 = v121;
      *unint64_t v121 = 0;
      *(_OWORD *)(v98 + 2) = xmmword_2505BFEF0;
      *((void *)v98 + 3) = 0;
      *((unsigned char *)v98 + 32) = 1;
      sub_2505BDA40();
      uint64_t v99 = v96;
      uint64_t v100 = v98;
      sub_2504DAF60(v99, &qword_269AB65B8);
    }
    else
    {
      uint64_t v101 = v96;
      uint64_t v100 = v121;
      sub_2505A2C38(v101, (uint64_t)v121);
    }
    uint64_t v103 = *((void *)v100 + 1);
    unint64_t v102 = *((void *)v100 + 2);
    sub_2504DBC4C(v103, v102);
    sub_2505A2D6C((uint64_t)v100, type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext.Context);
    uint64_t v104 = v126;
    sub_2505A2D04(v87, v126);
    if (v89(v104, 1, v93) == 1)
    {
      uint64_t v105 = v122;
      *char v122 = 0;
      *(_OWORD *)(v105 + 2) = xmmword_2505BFEF0;
      *((void *)v105 + 3) = 0;
      *((unsigned char *)v105 + 32) = 1;
      sub_2505BDA40();
      uint64_t v106 = v104;
      uint64_t v107 = v105;
      sub_2504DAF60(v106, &qword_269AB65B8);
    }
    else
    {
      uint64_t v108 = v104;
      uint64_t v107 = v122;
      sub_2505A2C38(v108, (uint64_t)v122);
    }
    uint64_t v109 = *((void *)v107 + 3);
    char v110 = *((unsigned char *)v107 + 32);
    sub_2505A2D6C((uint64_t)v107, type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext.Context);
    uint64_t v111 = v115;
    sub_2504DB330(v109, v110, (BOOL *)v130);
    uint64_t v112 = (uint64_t)v116;
    if (v111)
    {
      sub_250511528(v103, v102);
      sub_250511528(v118, v129);
      uint64_t v113 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
      v113(v112, v92);
      v113((uint64_t)v117, v92);
    }
    else
    {
      char v132 = v130[0];
      sub_2505A01B4(v125, (uint64_t)v116, v103, v102, &v132, v119);
      sub_250511528(v118, v129);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v117, v92);
    }
  }
  else
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_2505BDC40();
    __swift_project_value_buffer(v78, (uint64_t)qword_269AC3188);
    os_log_type_t v79 = sub_2505BE3D0();
    sub_2505A2C9C((uint64_t)v72, (uint64_t)v66, type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext);
    id v80 = sub_2505BDC20();
    os_log_type_t v81 = v79;
    if (os_log_type_enabled(v80, v79))
    {
      uint64_t v82 = swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 67109376;
      int v83 = *v66;
      sub_2505A2D6C((uint64_t)v66, type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext);
      LODWORD(v130[0]) = v83;
      sub_2505BE430();
      *(_WORD *)(v82 + 8) = 1024;
      LODWORD(v130[0]) = 1;
      sub_2505BE430();
      _os_log_impl(&dword_2504D2000, v80, v81, "unsupported version, expected %u got %u", (uint8_t *)v82, 0xEu);
      MEMORY[0x25337FF10](v82, -1, -1);
    }
    else
    {
      sub_2505A2D6C((uint64_t)v66, type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext);
    }
    unint64_t v84 = v129;
    uint64_t v85 = v118;

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v86 = 305;
    *(_OWORD *)(v86 + 8) = xmmword_2505C6520;
    *(_OWORD *)(v86 + 24) = xmmword_2505C6530;
    *(void *)(v86 + 40) = 0x80000002505CC7A0;
    swift_willThrow();
    sub_250511528(v85, v84);
  }
  return sub_2505A2D6C((uint64_t)v72, type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext);
}

uint64_t sub_2505A01B4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, char *a5@<X4>, _DWORD *a6@<X8>)
{
  if (a1)
  {
    char v10 = *a5;
    *a6 = a1;
    uint64_t v11 = (int *)type metadata accessor for GroupAuthenticatedCiphertext();
    uint64_t v12 = (char *)a6 + v11[5];
    uint64_t v13 = sub_2505BDDD0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a2, v13);
    uint64_t v15 = (uint64_t *)((char *)a6 + v11[6]);
    *uint64_t v15 = a3;
    v15[1] = a4;
    *((unsigned char *)a6 + v11[7]) = v10;
  }
  else
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_2505BDC40();
    __swift_project_value_buffer(v16, (uint64_t)qword_269AC3188);
    os_log_type_t v17 = sub_2505BE3D0();
    uint64_t v18 = sub_2505BDC20();
    if (os_log_type_enabled(v18, v17))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_2504D2000, v18, v17, "invalid group version", v19, 2u);
      MEMORY[0x25337FF10](v19, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v20 = 306;
    *(_OWORD *)(v20 + 8) = xmmword_2505C6540;
    *(void *)(v20 + 24) = 0x80000002505CC880;
    *(void *)(v20 + 32) = 0xD000000000000057;
    *(void *)(v20 + 40) = 0x80000002505CC7A0;
    swift_willThrow();
    sub_250511528(a3, a4);
    uint64_t v21 = sub_2505BDDD0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a2, v21);
  }
  return result;
}

uint64_t sub_2505A0408()
{
  uint64_t v1 = type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext(0);
  MEMORY[0x270FA5388](v1, v2, v3, v4, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GroupAuthenticatedCiphertext();
  uint64_t v8 = sub_2505BDDB0();
  if (v9 >> 60 == 15)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v13 = 309;
    *(_OWORD *)(v13 + 8) = xmmword_2505C6550;
    *(_OWORD *)(v13 + 24) = xmmword_2505C6560;
    *(void *)(v13 + 40) = 0x80000002505CC7A0;
    swift_willThrow();
  }
  else
  {
    uint64_t v14 = v8;
    unint64_t v15 = v9;
    uint64_t v16 = MEMORY[0x270FA5388](v8, v9, v10, v11, v12);
    *(&v19 - 4) = v0;
    *(&v19 - 3) = v16;
    *(&v19 - 2) = v17;
    sub_2505A2DCC(&qword_269AB61B8, (void (*)(uint64_t))type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext);
    sub_2505BDB80();
    uint64_t v1 = sub_2505BDB40();
    sub_2505A2D6C((uint64_t)v7, type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext);
    sub_25051B8D4(v14, v15);
  }
  return v1;
}

uint64_t sub_2505A063C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext.Context(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  unint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_DWORD *)a1 = 1;
  uint64_t v21 = a2;
  sub_2505A2DCC(&qword_269AB6198, (void (*)(uint64_t))type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext.Context);
  sub_2505BDB80();
  uint64_t v16 = a1 + *(int *)(type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext(0) + 28);
  sub_2504DAF60(v16, &qword_269AB65B8);
  sub_2505A2C38((uint64_t)v15, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
  uint64_t v17 = *(void *)(a1 + 8);
  unint64_t v18 = *(void *)(a1 + 16);
  sub_2504DBC4C(a3, a4);
  uint64_t result = sub_250511528(v17, v18);
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  return result;
}

uint64_t sub_2505A07E4(uint64_t a1, _DWORD *a2)
{
  *(_DWORD *)a1 = *a2;
  uint64_t v4 = type metadata accessor for GroupAuthenticatedCiphertext();
  uint64_t v5 = (uint64_t *)((char *)a2 + *(int *)(v4 + 24));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = *v5;
  *(void *)(a1 + 16) = v7;
  sub_2504DBC4C(v6, v7);
  uint64_t result = sub_250511528(v8, v9);
  *(void *)(a1 + 24) = (*((unsigned char *)a2 + *(int *)(v4 + 28)) & 1) == 0;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t sub_2505A0878@<X0>(unsigned int a1@<W0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  unsigned __int8 v21 = *a2;
  uint64_t result = sub_25050BC40(a1, &v21, v22);
  if (!v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2505C1BA0;
    if (qword_269AB56A8 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_269AC3800;
    unint64_t v16 = *(void *)algn_269AC3808;
    *(void *)(inited + 32) = qword_269AC3800;
    *(void *)(inited + 40) = v16;
    *(void *)(inited + 48) = a3;
    *(void *)(inited + 56) = a4;
    *(void *)(inited + 64) = a5;
    *(void *)(inited + 72) = a6;
    sub_2504DBC4C(v15, v16);
    sub_2504DBC4C(a3, a4);
    sub_2504DBC4C(a5, a6);
    uint64_t v17 = sub_250576544(inited);
    unint64_t v19 = v18;
    swift_setDeallocating();
    swift_arrayDestroy();
    a7[3] = sub_2505BDCE0();
    a7[4] = (uint64_t)&off_270192DD0;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a7);
    sub_2505601DC(v22, 0, v17, v19, (uint64_t)boxed_opaque_existential_1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return sub_250511528(v17, v19);
  }
  return result;
}

uint64_t *Group.open(_:authenticating:entitlementID:keyDiversifier:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v10 = v8;
  uint64_t v100 = a7;
  unint64_t v101 = a8;
  uint64_t v94 = a4;
  uint64_t v93 = a3;
  uint64_t v15 = sub_2505BDCE0();
  os_log_t v98 = *(os_log_t *)(v15 - 8);
  uint64_t v99 = v15;
  MEMORY[0x270FA5388](v15, v16, v17, v18, v19);
  unsigned int v97 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_2505BDDD0();
  uint64_t v95 = *(void *)(v21 - 8);
  uint64_t v96 = v21;
  MEMORY[0x270FA5388](v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for GroupAuthenticatedCiphertext();
  uint64_t v33 = MEMORY[0x270FA5388](v28, v29, v30, v31, v32);
  uint64_t v38 = MEMORY[0x270FA5388](v33, v34, v35, v36, v37);
  uint64_t v41 = (unsigned int *)((char *)&v91 - v40);
  uint64_t v42 = OBJC_IVAR____TtC14GroupKitCrypto5Group_state;
  if (*(unsigned char *)(v10 + OBJC_IVAR____TtC14GroupKitCrypto5Group_state) == 6)
  {
    uint64_t v92 = v38;
    uint64_t v91 = v39;
    sub_2504DBC4C(a1, a2);
    sub_25059F89C(a1, a2, v41);
    if (!v9)
    {
      uint64_t v43 = v41;
      unsigned int v44 = *v41;
      uint64_t v45 = v92;
      v104[0] = *((unsigned char *)v43 + *(int *)(v92 + 28));
      sub_2505A0878(v44, v104, (uint64_t)a5, a6, v100, v101, v107);
      uint64_t v55 = v108;
      uint64_t v56 = v109;
      __swift_project_boxed_opaque_existential_1(v107, v108);
      uint64_t v57 = (*(uint64_t (**)(uint64_t))(*(void *)(v56 + 8) + 8))(v55);
      unint64_t v59 = v58;
      uint64_t v60 = (uint64_t *)((char *)v43 + *(int *)(v45 + 24));
      uint64_t v61 = *v60;
      unint64_t v62 = v60[1];
      sub_2504DBC4C(*v60, v62);
      uint64_t v63 = (uint64_t)v43;
      char v64 = sub_25051AAD8(v57, v59, v61, v62);
      sub_250511528(v61, v62);
      sub_250511528(v57, v59);
      if (v64)
      {
        uint64_t v65 = v63 + *(int *)(v45 + 20);
        uint64_t v66 = v95;
        uint64_t v67 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v27, v65, v96);
        sub_2505A2498((uint64_t)v107, (uint64_t)v104);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6C30);
        uint64_t v68 = v97;
        swift_dynamicCast();
        v102[0] = v93;
        v102[1] = v94;
        sub_25051AE60();
        a5 = (uint64_t *)sub_2505BDD30();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v67);
        sub_2505A2D6C(v63, (uint64_t (*)(void))type metadata accessor for GroupAuthenticatedCiphertext);
        ((void (*)(char *, uint64_t))v98[1].isa)(v68, v99);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
      }
      else
      {
        uint64_t v69 = v63;
        if (qword_269AB5418 != -1) {
          swift_once();
        }
        uint64_t v70 = sub_2505BDC40();
        __swift_project_value_buffer(v70, (uint64_t)qword_269AC3188);
        os_log_type_t v71 = sub_2505BE3D0();
        sub_2505A2498((uint64_t)v107, (uint64_t)v104);
        uint64_t v72 = v91;
        sub_2505A2C9C(v63, v91, (uint64_t (*)(void))type metadata accessor for GroupAuthenticatedCiphertext);
        unint64_t v73 = sub_2505BDC20();
        if (os_log_type_enabled(v73, v71))
        {
          uint64_t v74 = swift_slowAlloc();
          uint64_t v100 = swift_slowAlloc();
          v102[0] = v100;
          *(_DWORD *)uint64_t v74 = 136315394;
          unsigned int v97 = (char *)(v74 + 4);
          LODWORD(v99) = v71;
          uint64_t v76 = v105;
          uint64_t v75 = v106;
          __swift_project_boxed_opaque_existential_1(v104, v105);
          uint64_t v77 = *(uint64_t (**)(uint64_t))(*(void *)(v75 + 8) + 8);
          os_log_t v98 = v73;
          uint64_t v78 = v77(v76);
          unint64_t v80 = v79;
          uint64_t v81 = sub_2504DCA88(v78, v79);
          uint64_t v96 = 0;
          uint64_t v103 = v81;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5AA0);
          sub_250522D7C((unint64_t *)&qword_269AB5AA8, &qword_269AB5AA0);
          unint64_t v101 = v63;
          uint64_t v82 = sub_2505BE110();
          unint64_t v84 = v83;
          swift_bridgeObjectRelease();
          sub_250511528(v78, v80);
          uint64_t v103 = sub_25051171C(v82, v84, v102);
          sub_2505BE430();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
          *(_WORD *)(v74 + 12) = 2080;
          uint64_t v103 = sub_2504DCA88(*(void *)(v72 + *(int *)(v92 + 24)), *(void *)(v72 + *(int *)(v92 + 24) + 8));
          unint64_t v85 = v101;
          uint64_t v86 = sub_2505BE110();
          unint64_t v88 = v87;
          swift_bridgeObjectRelease();
          uint64_t v103 = sub_25051171C(v86, v88, v102);
          uint64_t v69 = v85;
          sub_2505BE430();
          swift_bridgeObjectRelease();
          sub_2505A2D6C(v72, (uint64_t (*)(void))type metadata accessor for GroupAuthenticatedCiphertext);
          unint64_t v73 = v98;
          _os_log_impl(&dword_2504D2000, v98, (os_log_type_t)v99, "invalid key hash, got %s expected %s", (uint8_t *)v74, 0x16u);
          uint64_t v89 = v100;
          swift_arrayDestroy();
          MEMORY[0x25337FF10](v89, -1, -1);
          MEMORY[0x25337FF10](v74, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
          sub_2505A2D6C(v72, (uint64_t (*)(void))type metadata accessor for GroupAuthenticatedCiphertext);
        }

        a5 = &qword_269AB59E0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
        swift_allocError();
        *(_WORD *)uint64_t v90 = 311;
        *(_OWORD *)(v90 + 8) = xmmword_2505C6580;
        *(void *)(v90 + 24) = 0x80000002505CC760;
        *(void *)(v90 + 32) = 0xD000000000000057;
        *(void *)(v90 + 40) = 0x80000002505CC7A0;
        swift_willThrow();
        sub_2505A2D6C(v69, (uint64_t (*)(void))type metadata accessor for GroupAuthenticatedCiphertext);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
      }
    }
  }
  else
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_2505BDC40();
    __swift_project_value_buffer(v46, (uint64_t)qword_269AC3188);
    os_log_type_t v47 = sub_2505BE3D0();
    swift_retain_n();
    uint64_t v48 = sub_2505BDC20();
    if (os_log_type_enabled(v48, v47))
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      v107[0] = v50;
      *(_DWORD *)uint64_t v49 = 136315394;
      unint64_t v51 = sub_2504E0D6C(*(unsigned char *)(v10 + v42));
      *(void *)uint64_t v104 = sub_25051171C(v51, v52, v107);
      sub_2505BE430();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      *(void *)uint64_t v104 = sub_25051171C(0x6F724764696C6176, 0xEA00000000007075, v107);
      sub_2505BE430();
      _os_log_impl(&dword_2504D2000, v48, v47, "invalid group state, expected %s got %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v50, -1, -1);
      MEMORY[0x25337FF10](v49, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    a5 = &qword_269AB59E0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v53 = 310;
    *(_OWORD *)(v53 + 8) = xmmword_2505C6570;
    *(void *)(v53 + 24) = 0x80000002505CC760;
    *(void *)(v53 + 32) = 0xD000000000000057;
    *(void *)(v53 + 40) = 0x80000002505CC7A0;
    swift_willThrow();
  }
  return a5;
}

uint64_t type metadata accessor for GroupAuthenticatedCiphertext()
{
  uint64_t result = qword_269AB6C38;
  if (!qword_269AB6C38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Group.seal(_:authenticating:for:entitlementID:keyDiversifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v10 = v9;
  unint64_t v80 = a7;
  uint64_t v81 = a8;
  uint64_t v78 = a3;
  uint64_t v79 = a4;
  uint64_t v77 = a2;
  uint64_t v76 = a1;
  uint64_t v13 = type metadata accessor for GroupAuthenticatedCiphertext();
  MEMORY[0x270FA5388](v13 - 8, v14, v15, v16, v17);
  uint64_t v19 = (_DWORD *)((char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E70);
  MEMORY[0x270FA5388](v20 - 8, v21, v22, v23, v24);
  uint64_t v26 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_2505BDCE0();
  uint64_t v75 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27, v28, v29, v30, v31);
  uint64_t v33 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_2505BDDD0();
  uint64_t v39 = MEMORY[0x270FA5388](v34, v35, v36, v37, v38);
  uint64_t v41 = (uint64_t)&v70 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x270FA5388](v39, v42, v43, v44, v45);
  uint64_t v49 = OBJC_IVAR____TtC14GroupKitCrypto5Group_state;
  if (*(unsigned char *)(v10 + OBJC_IVAR____TtC14GroupKitCrypto5Group_state) == 6)
  {
    uint64_t v74 = (char *)&v70 - v47;
    uint64_t v72 = v48;
    uint64_t v73 = v46;
    os_log_type_t v71 = v19;
    char v50 = *a5;
    swift_beginAccess();
    unsigned int v51 = *(_DWORD *)(v10 + 64);
    LOBYTE(v84[0]) = v50;
    uint64_t v52 = v88;
    sub_2505A0878(v51, (unsigned __int8 *)v84, a6, v80, v81, a9, v85);
    if (!v52)
    {
      v84[5] = v76;
      v84[6] = v77;
      sub_2505A2498((uint64_t)v85, (uint64_t)v84);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6C30);
      swift_dynamicCast();
      uint64_t v53 = sub_2505BDD70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v26, 1, 1, v53);
      uint64_t v82 = v78;
      uint64_t v83 = v79;
      sub_25051AE60();
      uint64_t v54 = v74;
      sub_2505BDD40();
      sub_2504DAF60((uint64_t)v26, &qword_269AB5E70);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v27);
      int v63 = *(_DWORD *)(v10 + 64);
      (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v41, v54, v73);
      uint64_t v65 = v86;
      uint64_t v64 = v87;
      __swift_project_boxed_opaque_existential_1(v85, v86);
      uint64_t v66 = (*(uint64_t (**)(uint64_t))(*(void *)(v64 + 8) + 8))(v65);
      LOBYTE(v84[0]) = v50;
      uint64_t v67 = v71;
      sub_2505A01B4(v63, v41, v66, v68, (char *)v84, v71);
      uint64_t v41 = sub_2505A0408();
      sub_2505A2D6C((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for GroupAuthenticatedCiphertext);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v74, v73);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
    }
  }
  else
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_2505BDC40();
    __swift_project_value_buffer(v55, (uint64_t)qword_269AC3188);
    os_log_type_t v56 = sub_2505BE3D0();
    swift_retain_n();
    uint64_t v57 = sub_2505BDC20();
    uint64_t v41 = v56;
    if (os_log_type_enabled(v57, v56))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v85[0] = v59;
      *(_DWORD *)uint64_t v58 = 136315394;
      unint64_t v60 = sub_2504E0D6C(*(unsigned char *)(v10 + v49));
      v84[0] = sub_25051171C(v60, v61, v85);
      sub_2505BE430();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2080;
      v84[0] = sub_25051171C(0x6F724764696C6176, 0xEA00000000007075, v85);
      sub_2505BE430();
      _os_log_impl(&dword_2504D2000, v57, (os_log_type_t)v41, "invalid group state, got %s expected %s", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v59, -1, -1);
      MEMORY[0x25337FF10](v58, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v62 = 310;
    *(_OWORD *)(v62 + 8) = xmmword_2505C6590;
    *(void *)(v62 + 24) = 0x80000002505CC800;
    *(void *)(v62 + 32) = 0xD000000000000057;
    *(void *)(v62 + 40) = 0x80000002505CC7A0;
    swift_willThrow();
  }
  return v41;
}

uint64_t Group.sign(diversifier:authenticatedData:dataToSign:role:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, unsigned char *a7)
{
  uint64_t v9 = v7;
  uint64_t v79 = a5;
  unint64_t v80 = a6;
  uint64_t v77 = a3;
  unint64_t v78 = a4;
  uint64_t v75 = a1;
  unint64_t v76 = a2;
  uint64_t v11 = sub_2505BE040();
  uint64_t v74 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2505BE000();
  uint64_t v23 = MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
  uint64_t v28 = MEMORY[0x270FA5388](v23, v24, v25, v26, v27);
  uint64_t v30 = (char *)&v71 - v29;
  MEMORY[0x270FA5388](v28, v31, v32, v33, v34);
  uint64_t v38 = (char *)&v71 - v37;
  uint64_t v39 = OBJC_IVAR____TtC14GroupKitCrypto5Group_state;
  if (*((unsigned char *)v9 + OBJC_IVAR____TtC14GroupKitCrypto5Group_state) != 6)
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_2505BDC40();
    __swift_project_value_buffer(v42, (uint64_t)qword_269AC3188);
    os_log_type_t v43 = sub_2505BE3D0();
    swift_retain_n();
    uint64_t v44 = sub_2505BDC20();
    if (os_log_type_enabled(v44, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v81 = (void *)v46;
      *(_DWORD *)uint64_t v45 = 136315394;
      unint64_t v47 = sub_2504E0D6C(*((unsigned char *)v9 + v39));
      uint64_t v85 = sub_25051171C(v47, v48, (uint64_t *)&v81);
      sub_2505BE430();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      uint64_t v85 = sub_25051171C(0x6F724764696C6176, 0xEA00000000007075, (uint64_t *)&v81);
      sub_2505BE430();
      _os_log_impl(&dword_2504D2000, v44, v43, "invalid state transition in group, got %s expected %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25337FF10](v46, -1, -1);
      MEMORY[0x25337FF10](v45, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v55 = 347;
    long long v56 = xmmword_2505C65A0;
    goto LABEL_19;
  }
  if (*a7 != 1)
  {
    unint64_t v49 = v9[12];
    if (v49 >> 60 != 15)
    {
      uint64_t v73 = v36;
      uint64_t v72 = v11;
      uint64_t v30 = v35;
      uint64_t v41 = v9[11];
      uint64_t v58 = v9[13];
      unint64_t v59 = v9[14];
      uint64_t v83 = &type metadata for AdminSeed;
      unint64_t v84 = sub_25051CA18();
      unint64_t v60 = (void *)swift_allocObject();
      uint64_t v81 = v60;
      void v60[2] = v41;
      v60[3] = v49;
      v60[4] = v58;
      v60[5] = v59;
      sub_2504DBC4C(v41, v49);
      sub_25051B908(v58, v59);
      sub_2504DBC4C(v41, v49);
      sub_25051B908(v58, v59);
      if (qword_269AB5628 != -1) {
        swift_once();
      }
      sub_25056041C(&v81, 1, qword_269AC3700, *(unint64_t *)algn_269AC3708);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
      sub_25051B884(v41, v49, v58, v59);
      if (!v8) {
        goto LABEL_24;
      }
      return v41;
    }
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_2505BDC40();
    __swift_project_value_buffer(v50, (uint64_t)qword_269AC3188);
    os_log_type_t v51 = sub_2505BE3D0();
    uint64_t v52 = sub_2505BDC20();
    os_log_type_t v53 = v51;
    if (os_log_type_enabled(v52, v51))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl(&dword_2504D2000, v52, v53, "no admin seed", v54, 2u);
      MEMORY[0x25337FF10](v54, -1, -1);
    }

    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_250522D7C((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v55 = 308;
    long long v56 = xmmword_2505C65B0;
LABEL_19:
    *(_OWORD *)(v55 + 8) = v56;
    *(void *)(v55 + 24) = 0x80000002505CC840;
    *(void *)(v55 + 32) = 0xD000000000000057;
    *(void *)(v55 + 40) = 0x80000002505CC7A0;
    swift_willThrow();
    return v41;
  }
  uint64_t v73 = v36;
  uint64_t v72 = v11;
  uint64_t v40 = v9[9];
  uint64_t v41 = v9[10];
  uint64_t v83 = &type metadata for MemberSeed;
  unint64_t v84 = sub_250522A2C();
  uint64_t v81 = (void *)v40;
  unint64_t v82 = v41;
  sub_2504DBC4C(v40, v41);
  sub_2504DBC4C(v40, v41);
  if (qword_269AB5650 != -1) {
    swift_once();
  }
  sub_25056041C(&v81, 1, qword_269AC3750, *(unint64_t *)algn_269AC3758);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
  sub_250511528(v40, v41);
  if (!v8)
  {
LABEL_24:
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v38, v30, v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59F8);
    uint64_t inited = swift_initStackObject();
    uint64_t v62 = v75;
    unint64_t v63 = v76;
    *(void *)(inited + 32) = v75;
    *(_OWORD *)(inited + 16) = xmmword_2505C1BA0;
    uint64_t v71 = v18;
    uint64_t v64 = v77;
    unint64_t v65 = v78;
    *(void *)(inited + 40) = v63;
    *(void *)(inited + 48) = v64;
    uint64_t v67 = v79;
    unint64_t v66 = v80;
    *(void *)(inited + 56) = v65;
    *(void *)(inited + 64) = v67;
    *(void *)(inited + 72) = v66;
    sub_2504DBC4C(v62, v63);
    sub_2504DBC4C(v64, v65);
    sub_2504DBC4C(v67, v66);
    uint64_t v68 = sub_250576544(inited);
    unint64_t v70 = v69;
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v81 = (void *)v68;
    unint64_t v82 = v70;
    sub_25051AE60();
    sub_2505BDFF0();
    uint64_t v41 = sub_2505BE010();
    sub_250511528(v68, v70);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v17, v72);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v38, v71);
  }
  return v41;
}

uint64_t sub_2505A2498(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2505A24FC()
{
  sub_250511528(v0[2], v0[3]);
  unint64_t v1 = v0[5];
  if (v1 >> 60 != 15) {
    sub_250511528(v0[4], v1);
  }
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void *sub_2505A254C(_DWORD *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_DWORD *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_2505BDDD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)v4 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    sub_2504DBC4C(*v13, v15);
    *uint64_t v12 = v14;
    v12[1] = v15;
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return v4;
}

uint64_t sub_2505A2654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2505BDDD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];
  return sub_250511528(v7, v8);
}

_DWORD *sub_2505A26DC(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2505BDDD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)((char *)a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_2504DBC4C(*v12, v14);
  *uint64_t v11 = v13;
  v11[1] = v14;
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_DWORD *sub_2505A2794(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2505BDDD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)((char *)a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_2504DBC4C(*v12, v14);
  uint64_t v15 = *v11;
  unint64_t v16 = v11[1];
  *uint64_t v11 = v13;
  v11[1] = v14;
  sub_250511528(v15, v16);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_DWORD *sub_2505A2854(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2505BDDD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

_DWORD *sub_2505A28F4(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2505BDDD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void *)((char *)a1 + v10);
  unint64_t v12 = *(void *)((char *)a1 + v10 + 8);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  sub_250511528(v11, v12);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_2505A29A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2505A29B8);
}

uint64_t sub_2505A29B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BDDD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 2) {
      return v12 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_2505A2A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2505A2A8C);
}

uint64_t sub_2505A2A8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2505BDDD0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t sub_2505A2B4C()
{
  uint64_t result = sub_2505BDDD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2505A2BFC(uint64_t a1)
{
  return sub_2505A063C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_2505A2C1C(uint64_t a1)
{
  return sub_2505A07E4(a1, *(_DWORD **)(v1 + 16));
}

uint64_t sub_2505A2C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GKCrypto_GroupAuthenticatedCiphertext.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2505A2C9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2505A2D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB65B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2505A2D6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2505A2DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2505A2E14(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v5 = sub_2505131A4(a1);
      if (v6)
      {
        uint64_t v4 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
        swift_retain();
        return v4;
      }
    }
    return 0;
  }
  swift_retain();
  uint64_t v3 = sub_2505BE5C0();
  swift_release();
  if (!v3) {
    return 0;
  }
  type metadata accessor for SimPCSBag(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v8;
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_2505A2EF0(uint64_t a1)
{
  sub_250528274();
  uint64_t result = sub_2505BE360();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    sub_2504DBC4C(*v11, v13);
    sub_2505A8F9C(v17, v12, v13);
    uint64_t result = sub_250511528(v17[0], v17[1]);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2505A3090(uint64_t a1, uint64_t a2)
{
  uint64_t v193 = *MEMORY[0x263EF8340];
  uint64_t v181 = type metadata accessor for SimPCSID(0);
  uint64_t v8 = MEMORY[0x270FA5388](v181, v4, v5, v6, v7);
  unint64_t v10 = (char *)&v167 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v8, v11, v12, v13, v14);
  uint64_t v185 = (uint64_t)&v167 - v16;
  MEMORY[0x270FA5388](v15, v17, v18, v19, v20);
  uint64_t v23 = (char *)&v167 - v22;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v24 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v26 = 1 << *(unsigned char *)(a1 + 32);
    if (v26 < 64) {
      uint64_t v27 = ~(-1 << v26);
    }
    else {
      uint64_t v27 = -1;
    }
    unint64_t v28 = v27 & *(void *)(a1 + 56);
    int64_t v29 = (unint64_t)(v26 + 63) >> 6;
    uint64_t v184 = a2 + 56;
    uint64_t v179 = a2;
    uint64_t v172 = a1;
    uint64_t v171 = v21;
    unint64_t v170 = v23;
    uint64_t v169 = a1 + 56;
    int64_t v168 = v29;
    if (v28) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v31 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      goto LABEL_269;
    }
    if (v31 < v29)
    {
      unint64_t v32 = *(void *)(v25 + 8 * v31);
      int64_t v33 = v24 + 1;
      if (v32) {
        goto LABEL_23;
      }
      int64_t v33 = v31 + 1;
      if (v31 + 1 < v29)
      {
        unint64_t v32 = *(void *)(v25 + 8 * v33);
        if (v32) {
          goto LABEL_23;
        }
        int64_t v33 = v31 + 2;
        if (v31 + 2 < v29)
        {
          unint64_t v32 = *(void *)(v25 + 8 * v33);
          if (v32) {
            goto LABEL_23;
          }
          int64_t v33 = v31 + 3;
          if (v31 + 3 < v29)
          {
            unint64_t v32 = *(void *)(v25 + 8 * v33);
            if (v32) {
              goto LABEL_23;
            }
            int64_t v34 = v31 + 4;
            if (v34 < v29)
            {
              unint64_t v32 = *(void *)(v25 + 8 * v34);
              if (!v32)
              {
                while (1)
                {
                  int64_t v33 = v34 + 1;
                  if (__OFADD__(v34, 1)) {
                    goto LABEL_294;
                  }
                  if (v33 >= v29) {
                    return 1;
                  }
                  unint64_t v32 = *(void *)(v25 + 8 * v33);
                  ++v34;
                  if (v32) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v33 = v34;
LABEL_23:
              uint64_t v174 = (v32 - 1) & v32;
              int64_t v175 = v33;
              unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
              while (1)
              {
                uint64_t v35 = *(void *)(a1 + 48);
                uint64_t v183 = *(void *)(v21 + 72);
                sub_2505ADE40(v35 + v183 * v30, (uint64_t)v23);
                uint64_t v36 = v185;
                sub_2505ADF00((uint64_t)v23, v185);
                sub_2505BE850();
                uint64_t v37 = sub_2505BDF60();
                unint64_t v39 = v38;
                sub_2505BD950();
                sub_250511528(v37, v39);
                uint64_t v40 = v181;
                uint64_t v180 = v36 + *(int *)(v181 + 20);
                uint64_t v41 = sub_2505BDF60();
                unint64_t v43 = v42;
                sub_2505BD950();
                sub_250511528(v41, v43);
                uint64_t v177 = *(int *)(v40 + 24);
                sub_2505BE870();
                uint64_t v44 = sub_2505BE880();
                uint64_t v45 = -1 << *(unsigned char *)(a2 + 32);
                unint64_t v46 = v44 & ~v45;
                if (((*(void *)(v184 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
                  break;
                }
                uint64_t v182 = ~v45;
                while (2)
                {
                  sub_2505ADE40(*(void *)(a2 + 48) + v46 * v183, (uint64_t)v10);
                  uint64_t v47 = sub_2505BDF60();
                  unint64_t v49 = v48;
                  uint64_t v50 = sub_2505BDF60();
                  uint64_t v52 = v50;
                  unint64_t v53 = v51;
                  uint64_t v54 = 0;
                  switch(v49 >> 62)
                  {
                    case 1uLL:
                      LODWORD(v54) = HIDWORD(v47) - v47;
                      if (__OFSUB__(HIDWORD(v47), v47))
                      {
                        __break(1u);
LABEL_248:
                        __break(1u);
LABEL_249:
                        __break(1u);
LABEL_250:
                        __break(1u);
LABEL_251:
                        __break(1u);
LABEL_252:
                        __break(1u);
LABEL_253:
                        __break(1u);
LABEL_254:
                        __break(1u);
LABEL_255:
                        __break(1u);
LABEL_256:
                        __break(1u);
LABEL_257:
                        __break(1u);
LABEL_258:
                        __break(1u);
LABEL_259:
                        __break(1u);
LABEL_260:
                        __break(1u);
LABEL_261:
                        __break(1u);
LABEL_262:
                        __break(1u);
LABEL_263:
                        __break(1u);
LABEL_264:
                        __break(1u);
LABEL_265:
                        __break(1u);
LABEL_266:
                        __break(1u);
LABEL_267:
                        __break(1u);
LABEL_268:
                        __break(1u);
LABEL_269:
                        __break(1u);
LABEL_270:
                        __break(1u);
LABEL_271:
                        __break(1u);
LABEL_272:
                        __break(1u);
LABEL_273:
                        __break(1u);
LABEL_274:
                        __break(1u);
LABEL_275:
                        __break(1u);
LABEL_276:
                        __break(1u);
LABEL_277:
                        __break(1u);
LABEL_278:
                        __break(1u);
LABEL_279:
                        __break(1u);
LABEL_280:
                        __break(1u);
LABEL_281:
                        __break(1u);
LABEL_282:
                        __break(1u);
LABEL_283:
                        __break(1u);
LABEL_284:
                        __break(1u);
LABEL_285:
                        __break(1u);
LABEL_286:
                        __break(1u);
LABEL_287:
                        __break(1u);
LABEL_288:
                        __break(1u);
LABEL_289:
                        __break(1u);
LABEL_290:
                        __break(1u);
LABEL_291:
                        __break(1u);
LABEL_292:
                        __break(1u);
LABEL_293:
                        __break(1u);
LABEL_294:
                        __break(1u);
                      }
                      uint64_t v54 = (int)v54;
LABEL_34:
                      unint64_t v58 = v51 >> 62;
                      switch(v51 >> 62)
                      {
                        case 1uLL:
                          LODWORD(v59) = HIDWORD(v50) - v50;
                          if (__OFSUB__(HIDWORD(v50), v50)) {
                            goto LABEL_249;
                          }
                          uint64_t v59 = (int)v59;
LABEL_39:
                          if (v54 != v59)
                          {
LABEL_27:
                            sub_250511528(v52, v53);
                            sub_250511528(v47, v49);
                            goto LABEL_28;
                          }
                          if (v54 < 1)
                          {
LABEL_49:
                            sub_250511528(v50, v51);
                            sub_250511528(v47, v49);
                            goto LABEL_135;
                          }
                          break;
                        case 2uLL:
                          uint64_t v61 = *(void *)(v50 + 16);
                          uint64_t v60 = *(void *)(v50 + 24);
                          BOOL v57 = __OFSUB__(v60, v61);
                          uint64_t v59 = v60 - v61;
                          if (!v57) {
                            goto LABEL_39;
                          }
                          goto LABEL_250;
                        case 3uLL:
                          if (v54) {
                            goto LABEL_27;
                          }
                          goto LABEL_49;
                        default:
                          uint64_t v59 = BYTE6(v51);
                          goto LABEL_39;
                      }
                      switch(v49 >> 62)
                      {
                        case 1uLL:
                          if ((int)v47 > v47 >> 32) {
                            goto LABEL_255;
                          }
                          sub_2504DBC4C(v47, v49);
                          uint64_t v67 = sub_2505BD7D0();
                          if (v67)
                          {
                            uint64_t v68 = v67;
                            uint64_t v69 = sub_2505BD800();
                            if (__OFSUB__((int)v47, v69)) {
                              goto LABEL_257;
                            }
                            unint64_t v178 = (const void *)(v68 + (int)v47 - v69);
                          }
                          else
                          {
                            unint64_t v178 = 0;
                          }
                          sub_2505BD7F0();
                          a2 = v179;
                          if (v58)
                          {
                            if (v58 == 1)
                            {
                              if (v52 >> 32 < (int)v52) {
                                goto LABEL_266;
                              }
                              swift_retain();
                              uint64_t v83 = (char *)sub_2505BD7D0();
                              if (v83)
                              {
                                uint64_t v84 = sub_2505BD800();
                                if (__OFSUB__((int)v52, v84)) {
                                  goto LABEL_275;
                                }
                                v83 += (int)v52 - v84;
                              }
                              a2 = v179;
                              uint64_t v85 = sub_2505BD7F0();
                              if (v85 >= (v52 >> 32) - (int)v52) {
                                size_t v86 = (v52 >> 32) - (int)v52;
                              }
                              else {
                                size_t v86 = v85;
                              }
                              if (!v178) {
                                goto LABEL_299;
                              }
                              if (!v83) {
                                goto LABEL_300;
                              }
                              int v77 = memcmp(v178, v83, v86);
                              sub_250511528(v52, v53);
                            }
                            else
                            {
                              uint64_t v103 = *(void *)(v52 + 16);
                              uint64_t v176 = *(char **)(v52 + 24);
                              swift_retain();
                              swift_retain();
                              uint64_t v104 = (char *)sub_2505BD7D0();
                              if (v104)
                              {
                                uint64_t v105 = sub_2505BD800();
                                if (__OFSUB__(v103, v105)) {
                                  goto LABEL_274;
                                }
                                v104 += v103 - v105;
                              }
                              BOOL v57 = __OFSUB__(v176, v103);
                              uint64_t v106 = &v176[-v103];
                              if (v57) {
                                goto LABEL_267;
                              }
                              uint64_t v107 = sub_2505BD7F0();
                              if (v107 >= (uint64_t)v106) {
                                size_t v108 = (size_t)v106;
                              }
                              else {
                                size_t v108 = v107;
                              }
                              if (!v178) {
                                goto LABEL_307;
                              }
                              if (!v104) {
                                goto LABEL_308;
                              }
                              int v77 = memcmp(v178, v104, v108);
                              swift_release();
                              swift_release();
                            }
                          }
                          else
                          {
                            *(void *)__s1 = v52;
                            *(_WORD *)&__s1[8] = v53;
                            __s1[10] = BYTE2(v53);
                            __s1[11] = BYTE3(v53);
                            __s1[12] = BYTE4(v53);
                            __s1[13] = BYTE5(v53);
                            if (!v178) {
                              goto LABEL_306;
                            }
                            int v77 = memcmp(v178, __s1, BYTE6(v53));
                          }
                          sub_250511528(v47, v49);
                          goto LABEL_134;
                        case 2uLL:
                          uint64_t v70 = *(void *)(v47 + 16);
                          swift_retain();
                          swift_retain();
                          uint64_t v71 = (char *)sub_2505BD7D0();
                          unint64_t v178 = (const void *)(v49 & 0x3FFFFFFFFFFFFFFFLL);
                          if (!v71) {
                            goto LABEL_57;
                          }
                          uint64_t v72 = sub_2505BD800();
                          if (__OFSUB__(v70, v72)) {
                            goto LABEL_256;
                          }
                          v71 += v70 - v72;
LABEL_57:
                          sub_2505BD7F0();
                          a2 = v179;
                          if (v58)
                          {
                            uint64_t v176 = v71;
                            if (v58 == 1)
                            {
                              if (v52 >> 32 < (int)v52) {
                                goto LABEL_260;
                              }
                              swift_retain();
                              uint64_t v73 = (char *)sub_2505BD7D0();
                              if (v73)
                              {
                                uint64_t v74 = sub_2505BD800();
                                if (__OFSUB__((int)v52, v74)) {
                                  goto LABEL_273;
                                }
                                v73 += (int)v52 - v74;
                              }
                              a2 = v179;
                              uint64_t v75 = sub_2505BD7F0();
                              if (v75 >= (v52 >> 32) - (int)v52) {
                                size_t v76 = (v52 >> 32) - (int)v52;
                              }
                              else {
                                size_t v76 = v75;
                              }
                              if (!v176) {
                                goto LABEL_296;
                              }
                              if (!v73) {
                                goto LABEL_297;
                              }
                              int v77 = memcmp(v176, v73, v76);
                              sub_250511528(v52, v53);
                            }
                            else
                            {
                              uint64_t v97 = *(void *)(v52 + 16);
                              uint64_t v173 = *(void *)(v52 + 24);
                              swift_retain();
                              swift_retain();
                              os_log_t v98 = (char *)sub_2505BD7D0();
                              if (v98)
                              {
                                uint64_t v99 = sub_2505BD800();
                                if (__OFSUB__(v97, v99)) {
                                  goto LABEL_272;
                                }
                                v98 += v97 - v99;
                              }
                              BOOL v57 = __OFSUB__(v173, v97);
                              int64_t v100 = v173 - v97;
                              if (v57) {
                                goto LABEL_265;
                              }
                              uint64_t v101 = sub_2505BD7F0();
                              if (v101 >= v100) {
                                size_t v102 = v100;
                              }
                              else {
                                size_t v102 = v101;
                              }
                              if (!v176) {
                                goto LABEL_304;
                              }
                              if (!v98) {
                                goto LABEL_305;
                              }
                              int v77 = memcmp(v176, v98, v102);
                              swift_release();
                              swift_release();
                            }
                          }
                          else
                          {
                            *(void *)__s1 = v52;
                            *(_WORD *)&__s1[8] = v53;
                            __s1[10] = BYTE2(v53);
                            __s1[11] = BYTE3(v53);
                            __s1[12] = BYTE4(v53);
                            __s1[13] = BYTE5(v53);
                            if (!v71) {
                              goto LABEL_303;
                            }
                            int v77 = memcmp(v71, __s1, BYTE6(v53));
                          }
                          goto LABEL_120;
                        case 3uLL:
                          *(void *)&__s1[6] = 0;
                          *(void *)__s1 = 0;
                          if (!v58) {
                            goto LABEL_79;
                          }
                          if (v58 == 1)
                          {
                            uint64_t v62 = (v50 >> 32) - (int)v50;
                            if (v50 >> 32 < (int)v50) {
                              goto LABEL_259;
                            }
                            uint64_t v78 = sub_2505BD7D0();
                            if (!v78) {
                              goto LABEL_298;
                            }
                            uint64_t v64 = v78;
                            uint64_t v79 = sub_2505BD800();
                            uint64_t v66 = (int)v52 - v79;
                            if (__OFSUB__((int)v52, v79)) {
                              goto LABEL_264;
                            }
                            goto LABEL_74;
                          }
                          uint64_t v93 = *(void *)(v50 + 16);
                          uint64_t v94 = *(void *)(v50 + 24);
                          swift_retain();
                          swift_retain();
                          uint64_t v89 = (char *)sub_2505BD7D0();
                          if (v89)
                          {
                            uint64_t v95 = sub_2505BD800();
                            if (__OFSUB__(v93, v95)) {
                              goto LABEL_271;
                            }
                            v89 += v93 - v95;
                          }
                          BOOL v57 = __OFSUB__(v94, v93);
                          int64_t v91 = v94 - v93;
                          if (v57) {
                            goto LABEL_262;
                          }
                          uint64_t v92 = sub_2505BD7F0();
                          a2 = v179;
                          if (!v89) {
                            goto LABEL_302;
                          }
                          goto LABEL_104;
                        default:
                          *(void *)__s1 = v47;
                          *(_WORD *)&__s1[8] = v49;
                          __s1[10] = BYTE2(v49);
                          __s1[11] = BYTE3(v49);
                          __s1[12] = BYTE4(v49);
                          __s1[13] = BYTE5(v49);
                          if (!v58)
                          {
LABEL_79:
                            uint64_t __s2 = v50;
                            __int16 v187 = v51;
                            char v188 = BYTE2(v51);
                            char v189 = BYTE3(v51);
                            char v190 = BYTE4(v51);
                            char v191 = BYTE5(v51);
                            int v77 = memcmp(__s1, &__s2, BYTE6(v51));
LABEL_134:
                            sub_250511528(v52, v53);
                            sub_250511528(v47, v49);
                            if (v77) {
                              goto LABEL_28;
                            }
                            goto LABEL_135;
                          }
                          if (v58 != 1)
                          {
                            uint64_t v87 = *(void *)(v50 + 16);
                            uint64_t v88 = *(void *)(v50 + 24);
                            swift_retain();
                            swift_retain();
                            uint64_t v89 = (char *)sub_2505BD7D0();
                            if (v89)
                            {
                              uint64_t v90 = sub_2505BD800();
                              if (__OFSUB__(v87, v90)) {
                                goto LABEL_270;
                              }
                              v89 += v87 - v90;
                            }
                            BOOL v57 = __OFSUB__(v88, v87);
                            int64_t v91 = v88 - v87;
                            if (v57) {
                              goto LABEL_261;
                            }
                            uint64_t v92 = sub_2505BD7F0();
                            a2 = v179;
                            if (!v89) {
                              goto LABEL_301;
                            }
LABEL_104:
                            if (v92 >= v91) {
                              size_t v96 = v91;
                            }
                            else {
                              size_t v96 = v92;
                            }
                            int v77 = memcmp(__s1, v89, v96);
LABEL_120:
                            swift_release();
                            swift_release();
                            goto LABEL_134;
                          }
                          uint64_t v62 = (v50 >> 32) - (int)v50;
                          if (v50 >> 32 < (int)v50) {
                            goto LABEL_258;
                          }
                          uint64_t v63 = sub_2505BD7D0();
                          if (!v63)
                          {
                            sub_2505BD7F0();
                            __break(1u);
LABEL_296:
                            __break(1u);
LABEL_297:
                            __break(1u);
LABEL_298:
                            sub_2505BD7F0();
                            __break(1u);
LABEL_299:
                            __break(1u);
LABEL_300:
                            __break(1u);
LABEL_301:
                            __break(1u);
LABEL_302:
                            __break(1u);
LABEL_303:
                            __break(1u);
LABEL_304:
                            __break(1u);
LABEL_305:
                            __break(1u);
LABEL_306:
                            __break(1u);
LABEL_307:
                            __break(1u);
LABEL_308:
                            __break(1u);
LABEL_309:
                            sub_2505BD7F0();
                            __break(1u);
LABEL_310:
                            __break(1u);
LABEL_311:
                            __break(1u);
LABEL_312:
                            __break(1u);
LABEL_313:
                            __break(1u);
LABEL_314:
                            sub_2505BD7F0();
                            __break(1u);
LABEL_315:
                            __break(1u);
LABEL_316:
                            __break(1u);
LABEL_317:
                            __break(1u);
LABEL_318:
                            __break(1u);
LABEL_319:
                            __break(1u);
LABEL_320:
                            __break(1u);
LABEL_321:
                            __break(1u);
LABEL_322:
                            __break(1u);
                            JUMPOUT(0x2505A450CLL);
                          }
                          uint64_t v64 = v63;
                          uint64_t v65 = sub_2505BD800();
                          uint64_t v66 = (int)v52 - v65;
                          if (__OFSUB__((int)v52, v65)) {
                            goto LABEL_263;
                          }
LABEL_74:
                          uint64_t v80 = sub_2505BD7F0();
                          if (v80 >= v62) {
                            size_t v81 = v62;
                          }
                          else {
                            size_t v81 = v80;
                          }
                          int v82 = memcmp(__s1, (const void *)(v64 + v66), v81);
                          sub_250511528(v52, v53);
                          sub_250511528(v47, v49);
                          a2 = v179;
                          if (v82) {
                            goto LABEL_28;
                          }
LABEL_135:
                          uint64_t v47 = sub_2505BDF60();
                          unint64_t v49 = v109;
                          uint64_t v110 = sub_2505BDF60();
                          uint64_t v52 = v110;
                          unint64_t v53 = v111;
                          uint64_t v112 = 0;
                          switch(v49 >> 62)
                          {
                            case 1uLL:
                              LODWORD(v112) = HIDWORD(v47) - v47;
                              if (__OFSUB__(HIDWORD(v47), v47)) {
                                goto LABEL_251;
                              }
                              uint64_t v112 = (int)v112;
                              break;
                            case 2uLL:
                              uint64_t v114 = *(void *)(v47 + 16);
                              uint64_t v113 = *(void *)(v47 + 24);
                              BOOL v57 = __OFSUB__(v113, v114);
                              uint64_t v112 = v113 - v114;
                              if (!v57) {
                                break;
                              }
                              goto LABEL_252;
                            case 3uLL:
                              break;
                            default:
                              uint64_t v112 = BYTE6(v49);
                              break;
                          }
                          unint64_t v115 = v111 >> 62;
                          switch(v111 >> 62)
                          {
                            case 1uLL:
                              LODWORD(v116) = HIDWORD(v110) - v110;
                              if (__OFSUB__(HIDWORD(v110), v110)) {
                                goto LABEL_253;
                              }
                              uint64_t v116 = (int)v116;
LABEL_145:
                              if (v112 != v116) {
                                goto LABEL_27;
                              }
                              if (v112 < 1)
                              {
LABEL_156:
                                sub_250511528(v110, v111);
                                sub_250511528(v47, v49);
                                goto LABEL_241;
                              }
                              break;
                            case 2uLL:
                              uint64_t v118 = *(void *)(v110 + 16);
                              uint64_t v117 = *(void *)(v110 + 24);
                              BOOL v57 = __OFSUB__(v117, v118);
                              uint64_t v116 = v117 - v118;
                              if (!v57) {
                                goto LABEL_145;
                              }
                              goto LABEL_254;
                            case 3uLL:
                              if (!v112) {
                                goto LABEL_156;
                              }
                              goto LABEL_27;
                            default:
                              uint64_t v116 = BYTE6(v111);
                              goto LABEL_145;
                          }
                          break;
                      }
                      break;
                    case 2uLL:
                      uint64_t v56 = *(void *)(v47 + 16);
                      uint64_t v55 = *(void *)(v47 + 24);
                      BOOL v57 = __OFSUB__(v55, v56);
                      uint64_t v54 = v55 - v56;
                      if (!v57) {
                        goto LABEL_34;
                      }
                      goto LABEL_248;
                    case 3uLL:
                      goto LABEL_34;
                    default:
                      uint64_t v54 = BYTE6(v49);
                      goto LABEL_34;
                  }
                  switch(v49 >> 62)
                  {
                    case 1uLL:
                      if ((int)v47 > v47 >> 32) {
                        goto LABEL_268;
                      }
                      sub_2504DBC4C(v47, v49);
                      uint64_t v124 = (char *)sub_2505BD7D0();
                      if (!v124) {
                        goto LABEL_161;
                      }
                      uint64_t v125 = sub_2505BD800();
                      if (__OFSUB__((int)v47, v125)) {
                        goto LABEL_277;
                      }
                      v124 += (int)v47 - v125;
LABEL_161:
                      a2 = v179;
                      sub_2505BD7F0();
                      if (v115)
                      {
                        unint64_t v178 = v124;
                        if (v115 == 1)
                        {
                          if (v52 >> 32 < (int)v52) {
                            goto LABEL_286;
                          }
                          swift_retain();
                          uint64_t v126 = (char *)sub_2505BD7D0();
                          if (v126)
                          {
                            uint64_t v127 = sub_2505BD800();
                            if (__OFSUB__((int)v52, v127)) {
                              goto LABEL_293;
                            }
                            v126 += (int)v52 - v127;
                          }
                          uint64_t v128 = v178;
                          uint64_t v129 = sub_2505BD7F0();
                          if (v129 >= (v52 >> 32) - (int)v52) {
                            size_t v130 = (v52 >> 32) - (int)v52;
                          }
                          else {
                            size_t v130 = v129;
                          }
                          if (!v128) {
                            goto LABEL_310;
                          }
                          a2 = v179;
                          if (!v126) {
                            goto LABEL_311;
                          }
                          int v131 = memcmp(v128, v126, v130);
                          sub_250511528(v52, v53);
                        }
                        else
                        {
                          uint64_t v160 = *(void *)(v52 + 16);
                          uint64_t v176 = *(char **)(v52 + 24);
                          swift_retain();
                          swift_retain();
                          unint64_t v161 = (char *)sub_2505BD7D0();
                          if (v161)
                          {
                            uint64_t v162 = sub_2505BD800();
                            if (__OFSUB__(v160, v162)) {
                              goto LABEL_292;
                            }
                            v161 += v160 - v162;
                          }
                          unint64_t v163 = &v176[-v160];
                          if (__OFSUB__(v176, v160)) {
                            goto LABEL_287;
                          }
                          uint64_t v164 = sub_2505BD7F0();
                          if (v164 >= (uint64_t)v163) {
                            size_t v165 = (size_t)v163;
                          }
                          else {
                            size_t v165 = v164;
                          }
                          a2 = v179;
                          if (!v178) {
                            goto LABEL_320;
                          }
                          if (!v161) {
                            goto LABEL_321;
                          }
                          int v131 = memcmp(v178, v161, v165);
                          swift_release();
                          swift_release();
                        }
                      }
                      else
                      {
                        *(void *)__s1 = v52;
                        *(_WORD *)&__s1[8] = v53;
                        __s1[10] = BYTE2(v53);
                        __s1[11] = BYTE3(v53);
                        __s1[12] = BYTE4(v53);
                        __s1[13] = BYTE5(v53);
                        if (!v124) {
                          goto LABEL_322;
                        }
                        int v131 = memcmp(v124, __s1, BYTE6(v53));
                      }
                      sub_250511528(v47, v49);
                      goto LABEL_240;
                    case 2uLL:
                      uint64_t v132 = *(void *)(v47 + 16);
                      swift_retain();
                      swift_retain();
                      uint64_t v133 = (char *)sub_2505BD7D0();
                      unint64_t v178 = (const void *)(v49 & 0x3FFFFFFFFFFFFFFFLL);
                      if (!v133) {
                        goto LABEL_176;
                      }
                      uint64_t v134 = sub_2505BD800();
                      if (__OFSUB__(v132, v134)) {
                        goto LABEL_276;
                      }
                      v133 += v132 - v134;
LABEL_176:
                      a2 = v179;
                      sub_2505BD7F0();
                      if (v115)
                      {
                        uint64_t v176 = v133;
                        if (v115 == 1)
                        {
                          if (v52 >> 32 < (int)v52) {
                            goto LABEL_280;
                          }
                          swift_retain();
                          uint64_t v135 = (char *)sub_2505BD7D0();
                          if (v135)
                          {
                            uint64_t v136 = sub_2505BD800();
                            if (__OFSUB__((int)v52, v136)) {
                              goto LABEL_291;
                            }
                            v135 += (int)v52 - v136;
                          }
                          a2 = v179;
                          uint64_t v137 = sub_2505BD7F0();
                          if (v137 >= (v52 >> 32) - (int)v52) {
                            size_t v138 = (v52 >> 32) - (int)v52;
                          }
                          else {
                            size_t v138 = v137;
                          }
                          if (!v176) {
                            goto LABEL_312;
                          }
                          if (!v135) {
                            goto LABEL_313;
                          }
                          int v131 = memcmp(v176, v135, v138);
                          sub_250511528(v52, v53);
                        }
                        else
                        {
                          uint64_t v154 = *(void *)(v52 + 16);
                          uint64_t v173 = *(void *)(v52 + 24);
                          swift_retain();
                          swift_retain();
                          unint64_t v155 = (char *)sub_2505BD7D0();
                          if (v155)
                          {
                            uint64_t v156 = sub_2505BD800();
                            if (__OFSUB__(v154, v156)) {
                              goto LABEL_290;
                            }
                            v155 += v154 - v156;
                          }
                          BOOL v57 = __OFSUB__(v173, v154);
                          int64_t v157 = v173 - v154;
                          if (v57) {
                            goto LABEL_285;
                          }
                          uint64_t v158 = sub_2505BD7F0();
                          if (v158 >= v157) {
                            size_t v159 = v157;
                          }
                          else {
                            size_t v159 = v158;
                          }
                          if (!v176) {
                            goto LABEL_318;
                          }
                          if (!v155) {
                            goto LABEL_319;
                          }
                          int v131 = memcmp(v176, v155, v159);
                          swift_release();
                          swift_release();
                        }
                      }
                      else
                      {
                        *(void *)__s1 = v52;
                        *(_WORD *)&__s1[8] = v53;
                        __s1[10] = BYTE2(v53);
                        __s1[11] = BYTE3(v53);
                        __s1[12] = BYTE4(v53);
                        __s1[13] = BYTE5(v53);
                        if (!v133) {
                          goto LABEL_317;
                        }
                        int v131 = memcmp(v133, __s1, BYTE6(v53));
                      }
                      goto LABEL_226;
                    case 3uLL:
                      *(void *)&__s1[6] = 0;
                      *(void *)__s1 = 0;
                      if (!v115) {
                        goto LABEL_198;
                      }
                      if (v115 != 1)
                      {
                        uint64_t v150 = *(void *)(v110 + 16);
                        uint64_t v151 = *(void *)(v110 + 24);
                        swift_retain();
                        swift_retain();
                        uint64_t v146 = (char *)sub_2505BD7D0();
                        if (v146)
                        {
                          uint64_t v152 = sub_2505BD800();
                          if (__OFSUB__(v150, v152)) {
                            goto LABEL_289;
                          }
                          v146 += v150 - v152;
                        }
                        BOOL v57 = __OFSUB__(v151, v150);
                        int64_t v148 = v151 - v150;
                        if (v57) {
                          goto LABEL_282;
                        }
                        uint64_t v149 = sub_2505BD7F0();
                        a2 = v179;
                        if (!v146) {
                          goto LABEL_316;
                        }
LABEL_210:
                        if (v149 >= v148) {
                          size_t v153 = v148;
                        }
                        else {
                          size_t v153 = v149;
                        }
                        int v131 = memcmp(__s1, v146, v153);
LABEL_226:
                        swift_release();
                        swift_release();
LABEL_240:
                        sub_250511528(v52, v53);
                        sub_250511528(v47, v49);
                        if (!v131) {
                          goto LABEL_241;
                        }
LABEL_28:
                        sub_2505ADEA4((uint64_t)v10);
                        unint64_t v46 = (v46 + 1) & v182;
                        if (((*(void *)(v184 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
                          goto LABEL_245;
                        }
                        continue;
                      }
                      uint64_t v119 = (v110 >> 32) - (int)v110;
                      if (v110 >> 32 < (int)v110) {
                        goto LABEL_279;
                      }
                      uint64_t v139 = sub_2505BD7D0();
                      if (!v139) {
                        goto LABEL_314;
                      }
                      uint64_t v121 = v139;
                      uint64_t v140 = sub_2505BD800();
                      uint64_t v123 = (int)v52 - v140;
                      if (__OFSUB__((int)v52, v140)) {
                        goto LABEL_284;
                      }
LABEL_193:
                      uint64_t v141 = sub_2505BD7F0();
                      if (v141 >= v119) {
                        size_t v142 = v119;
                      }
                      else {
                        size_t v142 = v141;
                      }
                      int v143 = memcmp(__s1, (const void *)(v121 + v123), v142);
                      sub_250511528(v52, v53);
                      sub_250511528(v47, v49);
                      a2 = v179;
                      if (v143) {
                        goto LABEL_28;
                      }
LABEL_241:
                      if (v10[*(int *)(v181 + 24)] != *(unsigned char *)(v185 + v177)) {
                        goto LABEL_28;
                      }
                      sub_2505ADEA4((uint64_t)v10);
                      sub_2505ADEA4(v185);
                      a1 = v172;
                      uint64_t v21 = v171;
                      uint64_t v23 = v170;
                      uint64_t v25 = v169;
                      int64_t v29 = v168;
                      int64_t v24 = v175;
                      unint64_t v28 = v174;
                      if (!v174) {
                        goto LABEL_8;
                      }
LABEL_7:
                      uint64_t v174 = (v28 - 1) & v28;
                      int64_t v175 = v24;
                      unint64_t v30 = __clz(__rbit64(v28)) | (v24 << 6);
                      break;
                    default:
                      *(void *)__s1 = v47;
                      *(_WORD *)&__s1[8] = v49;
                      __s1[10] = BYTE2(v49);
                      __s1[11] = BYTE3(v49);
                      __s1[12] = BYTE4(v49);
                      __s1[13] = BYTE5(v49);
                      if (!v115)
                      {
LABEL_198:
                        uint64_t __s2 = v110;
                        __int16 v187 = v111;
                        char v188 = BYTE2(v111);
                        char v189 = BYTE3(v111);
                        char v190 = BYTE4(v111);
                        char v191 = BYTE5(v111);
                        int v131 = memcmp(__s1, &__s2, BYTE6(v111));
                        goto LABEL_240;
                      }
                      if (v115 == 1)
                      {
                        uint64_t v119 = (v110 >> 32) - (int)v110;
                        if (v110 >> 32 < (int)v110) {
                          goto LABEL_278;
                        }
                        uint64_t v120 = sub_2505BD7D0();
                        if (!v120) {
                          goto LABEL_309;
                        }
                        uint64_t v121 = v120;
                        uint64_t v122 = sub_2505BD800();
                        uint64_t v123 = (int)v52 - v122;
                        if (__OFSUB__((int)v52, v122)) {
                          goto LABEL_283;
                        }
                        goto LABEL_193;
                      }
                      uint64_t v144 = *(void *)(v110 + 16);
                      uint64_t v145 = *(void *)(v110 + 24);
                      swift_retain();
                      swift_retain();
                      uint64_t v146 = (char *)sub_2505BD7D0();
                      if (v146)
                      {
                        uint64_t v147 = sub_2505BD800();
                        if (__OFSUB__(v144, v147)) {
                          goto LABEL_288;
                        }
                        v146 += v144 - v147;
                      }
                      BOOL v57 = __OFSUB__(v145, v144);
                      int64_t v148 = v145 - v144;
                      if (v57) {
                        goto LABEL_281;
                      }
                      uint64_t v149 = sub_2505BD7F0();
                      a2 = v179;
                      if (!v146) {
                        goto LABEL_315;
                      }
                      goto LABEL_210;
                  }
                  break;
                }
              }
LABEL_245:
              sub_2505ADEA4(v185);
              return 0;
            }
          }
        }
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_2505A456C(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v84 = a1;
  uint64_t v85 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v86 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  uint64_t v92 = a2 + 56;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v87 = (v6 - 1) & v6;
  int64_t v88 = v3;
  unint64_t v8 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_24:
  uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
  uint64_t v15 = *v13;
  unint64_t v14 = v13[1];
  sub_2505BE850();
  sub_2504DBC4C(v15, v14);
  sub_2504DBC4C(v15, v14);
  sub_2505BD950();
  unint64_t v95 = v14;
  sub_250511528(v15, v14);
  uint64_t v16 = sub_2505BE880();
  uint64_t v17 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v18 = v16 & ~v17;
  if (((*(void *)(v7 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
  {
LABEL_142:
    sub_250511528(v15, v95);
    return 0;
  }
  unint64_t v19 = v14 >> 62;
  uint64_t v20 = ~v17;
  BOOL v21 = __OFSUB__(HIDWORD(v15), v15);
  BOOL v94 = v21;
  uint64_t v93 = ~v17;
  uint64_t v90 = (v15 >> 32) - (int)v15;
  uint64_t v91 = v15 >> 32;
  while (2)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v18);
    uint64_t v24 = *v22;
    unint64_t v23 = v22[1];
    uint64_t v25 = 0;
    switch(v23 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v24), v24))
        {
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
          goto LABEL_168;
        }
        uint64_t v25 = HIDWORD(v24) - (int)v24;
LABEL_37:
        sub_2504DBC4C(v24, v23);
        break;
      case 2uLL:
        uint64_t v27 = *(void *)(v24 + 16);
        uint64_t v26 = *(void *)(v24 + 24);
        uint64_t v25 = v26 - v27;
        if (!__OFSUB__(v26, v27)) {
          goto LABEL_37;
        }
        goto LABEL_145;
      case 3uLL:
        break;
      default:
        uint64_t v25 = BYTE6(v23);
        break;
    }
    uint64_t v28 = BYTE6(v95);
    switch((int)v19)
    {
      case 1:
        uint64_t v28 = HIDWORD(v15) - (int)v15;
        if (v94) {
          goto LABEL_146;
        }
        goto LABEL_42;
      case 2:
        uint64_t v30 = *(void *)(v15 + 16);
        uint64_t v29 = *(void *)(v15 + 24);
        BOOL v31 = __OFSUB__(v29, v30);
        uint64_t v28 = v29 - v30;
        if (!v31) {
          goto LABEL_42;
        }
        goto LABEL_147;
      case 3:
        if (v25) {
          goto LABEL_30;
        }
        goto LABEL_138;
      default:
LABEL_42:
        if (v25 != v28)
        {
LABEL_30:
          sub_250511528(v24, v23);
          goto LABEL_31;
        }
        if (v25 >= 1)
        {
          switch(v23 >> 62)
          {
            case 1uLL:
              if ((int)v24 > v24 >> 32) {
                goto LABEL_148;
              }
              sub_2504DBC4C(v24, v23);
              uint64_t v36 = sub_2505BD7D0();
              if (v36)
              {
                uint64_t v37 = v36;
                uint64_t v38 = sub_2505BD800();
                if (__OFSUB__((int)v24, v38)) {
                  goto LABEL_150;
                }
                unint64_t v39 = (const void *)(v37 + (int)v24 - v38);
                sub_2505BD7F0();
                if (!v19)
                {
LABEL_93:
                  *(void *)__s1 = v15;
                  *(_DWORD *)&__s1[8] = v95;
                  *(_WORD *)&__s1[12] = WORD2(v95);
                  if (!v39) {
                    goto LABEL_175;
                  }
                  int v44 = memcmp(v39, __s1, BYTE6(v95));
                  goto LABEL_135;
                }
              }
              else
              {
                unint64_t v39 = 0;
                sub_2505BD7F0();
                if (!v19) {
                  goto LABEL_93;
                }
              }
              if (v19 == 1)
              {
                if (v91 < (int)v15) {
                  goto LABEL_159;
                }
                swift_retain();
                uint64_t v40 = (char *)sub_2505BD7D0();
                if (v40)
                {
                  uint64_t v41 = sub_2505BD800();
                  if (__OFSUB__((int)v15, v41)) {
                    goto LABEL_167;
                  }
                  v40 += (int)v15 - v41;
                }
                uint64_t v42 = sub_2505BD7F0();
                size_t v43 = (v15 >> 32) - (int)v15;
                if (v42 < v90) {
                  size_t v43 = v42;
                }
                if (!v39) {
                  goto LABEL_170;
                }
                if (!v40) {
                  goto LABEL_171;
                }
                int v44 = memcmp(v39, v40, v43);
                sub_250511528(v15, v95);
              }
              else
              {
                uint64_t v76 = *(void *)(v15 + 16);
                uint64_t v75 = *(void *)(v15 + 24);
                swift_retain();
                swift_retain();
                int v77 = (char *)sub_2505BD7D0();
                if (v77)
                {
                  uint64_t v78 = sub_2505BD800();
                  if (__OFSUB__(v76, v78)) {
                    goto LABEL_166;
                  }
                  v77 += v76 - v78;
                }
                BOOL v31 = __OFSUB__(v75, v76);
                int64_t v79 = v75 - v76;
                if (v31) {
                  goto LABEL_160;
                }
                uint64_t v80 = sub_2505BD7F0();
                if (v80 >= v79) {
                  size_t v81 = v79;
                }
                else {
                  size_t v81 = v80;
                }
                if (!v39) {
                  goto LABEL_181;
                }
                uint64_t v2 = a2;
                if (!v77) {
                  goto LABEL_182;
                }
                int v44 = memcmp(v39, v77, v81);
                swift_release();
                swift_release();
              }
LABEL_135:
              sub_250511528(v24, v23);
              goto LABEL_136;
            case 2uLL:
              uint64_t v45 = *(void *)(v24 + 16);
              swift_retain();
              swift_retain();
              unint64_t v46 = (char *)sub_2505BD7D0();
              if (!v46) {
                goto LABEL_69;
              }
              uint64_t v47 = sub_2505BD800();
              if (__OFSUB__(v45, v47)) {
                goto LABEL_149;
              }
              v46 += v45 - v47;
LABEL_69:
              sub_2505BD7F0();
              if (!v19)
              {
                *(void *)__s1 = v15;
                *(_DWORD *)&__s1[8] = v95;
                *(_WORD *)&__s1[12] = WORD2(v95);
                if (!v46) {
                  goto LABEL_178;
                }
                int v44 = memcmp(v46, __s1, BYTE6(v95));
LABEL_113:
                swift_release();
                goto LABEL_124;
              }
              if (v19 == 1)
              {
                if (v91 < (int)v15) {
                  goto LABEL_153;
                }
                swift_retain();
                unint64_t v48 = (char *)sub_2505BD7D0();
                if (v48)
                {
                  uint64_t v49 = sub_2505BD800();
                  if (__OFSUB__((int)v15, v49)) {
                    goto LABEL_165;
                  }
                  v48 += (int)v15 - v49;
                }
                uint64_t v50 = sub_2505BD7F0();
                size_t v51 = (v15 >> 32) - (int)v15;
                if (v50 < v90) {
                  size_t v51 = v50;
                }
                if (!v46) {
                  goto LABEL_172;
                }
                if (!v48) {
                  goto LABEL_173;
                }
                int v44 = memcmp(v46, v48, v51);
                sub_250511528(v15, v95);
                goto LABEL_113;
              }
              uint64_t v69 = *(void *)(v15 + 16);
              uint64_t v83 = *(void *)(v15 + 24);
              swift_retain();
              swift_retain();
              uint64_t v70 = (char *)sub_2505BD7D0();
              if (v70)
              {
                uint64_t v71 = sub_2505BD800();
                if (__OFSUB__(v69, v71)) {
                  goto LABEL_164;
                }
                v70 += v69 - v71;
              }
              BOOL v31 = __OFSUB__(v83, v69);
              int64_t v72 = v83 - v69;
              if (v31) {
                goto LABEL_158;
              }
              uint64_t v73 = sub_2505BD7F0();
              if (v73 >= v72) {
                size_t v74 = v72;
              }
              else {
                size_t v74 = v73;
              }
              if (!v46) {
                goto LABEL_179;
              }
              uint64_t v2 = a2;
              if (!v70) {
                goto LABEL_180;
              }
              int v44 = memcmp(v46, v70, v74);
              swift_release();
              swift_release();
              swift_release();
LABEL_124:
              swift_release();
LABEL_136:
              sub_250511528(v24, v23);
              uint64_t v7 = v92;
              uint64_t v20 = v93;
              if (!v44) {
                goto LABEL_139;
              }
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v19) {
                goto LABEL_90;
              }
              if (v19 == 1)
              {
                if (v91 < (int)v15) {
                  goto LABEL_152;
                }
                sub_2504DBC4C(v15, v95);
                uint64_t v52 = sub_2505BD7D0();
                if (!v52) {
                  goto LABEL_174;
                }
                uint64_t v33 = v52;
                uint64_t v53 = sub_2505BD800();
                uint64_t v35 = (int)v15 - v53;
                if (__OFSUB__((int)v15, v53)) {
                  goto LABEL_157;
                }
LABEL_85:
                uint64_t v54 = sub_2505BD7F0();
                if (v54 >= v90) {
                  size_t v55 = (v15 >> 32) - (int)v15;
                }
                else {
                  size_t v55 = v54;
                }
                int v56 = memcmp(__s1, (const void *)(v33 + v35), v55);
                sub_250511528(v15, v95);
                sub_250511528(v24, v23);
                uint64_t v2 = a2;
                if (!v56) {
                  goto LABEL_139;
                }
              }
              else
              {
                uint64_t v64 = *(void *)(v15 + 16);
                uint64_t v65 = *(void *)(v15 + 24);
                swift_retain();
                swift_retain();
                uint64_t v60 = (char *)sub_2505BD7D0();
                if (v60)
                {
                  uint64_t v66 = sub_2505BD800();
                  if (__OFSUB__(v64, v66)) {
                    goto LABEL_163;
                  }
                  v60 += v64 - v66;
                }
                BOOL v31 = __OFSUB__(v65, v64);
                int64_t v62 = v65 - v64;
                if (v31) {
                  goto LABEL_155;
                }
                uint64_t v63 = sub_2505BD7F0();
                if (!v60) {
                  goto LABEL_177;
                }
LABEL_106:
                if (v63 >= v62) {
                  size_t v67 = v62;
                }
                else {
                  size_t v67 = v63;
                }
                int v68 = memcmp(__s1, v60, v67);
                swift_release();
                swift_release();
                sub_250511528(v24, v23);
                uint64_t v7 = v92;
                uint64_t v20 = v93;
                if (!v68) {
                  goto LABEL_139;
                }
              }
              break;
            default:
              *(void *)__s1 = v24;
              *(_WORD *)&__s1[8] = v23;
              __s1[10] = BYTE2(v23);
              __s1[11] = BYTE3(v23);
              __s1[12] = BYTE4(v23);
              __s1[13] = BYTE5(v23);
              if (!v19)
              {
LABEL_90:
                uint64_t __s2 = v15;
                int v97 = v95;
                __int16 v98 = WORD2(v95);
                int v57 = memcmp(__s1, &__s2, BYTE6(v95));
                sub_250511528(v24, v23);
                if (!v57) {
                  goto LABEL_139;
                }
                break;
              }
              if (v19 == 1)
              {
                if (v91 < (int)v15) {
                  goto LABEL_151;
                }
                sub_2504DBC4C(v15, v95);
                uint64_t v32 = sub_2505BD7D0();
                if (!v32)
                {
                  sub_2505BD7F0();
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  sub_2505BD7F0();
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
                  JUMPOUT(0x2505A50ACLL);
                }
                uint64_t v33 = v32;
                uint64_t v34 = sub_2505BD800();
                uint64_t v35 = (int)v15 - v34;
                if (__OFSUB__((int)v15, v34)) {
                  goto LABEL_156;
                }
                goto LABEL_85;
              }
              uint64_t v58 = *(void *)(v15 + 16);
              uint64_t v59 = *(void *)(v15 + 24);
              swift_retain();
              swift_retain();
              uint64_t v60 = (char *)sub_2505BD7D0();
              if (v60)
              {
                uint64_t v61 = sub_2505BD800();
                if (__OFSUB__(v58, v61)) {
                  goto LABEL_162;
                }
                v60 += v58 - v61;
              }
              BOOL v31 = __OFSUB__(v59, v58);
              int64_t v62 = v59 - v58;
              if (v31) {
                goto LABEL_154;
              }
              uint64_t v63 = sub_2505BD7F0();
              if (!v60) {
                goto LABEL_176;
              }
              goto LABEL_106;
          }
LABEL_31:
          unint64_t v18 = (v18 + 1) & v20;
          if (((*(void *)(v7 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            goto LABEL_142;
          }
          continue;
        }
LABEL_138:
        sub_250511528(v24, v23);
LABEL_139:
        sub_250511528(v15, v95);
        a1 = v84;
        unint64_t v6 = v87;
        int64_t v3 = v88;
        if (v87) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v9 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_161;
        }
        if (v9 < v86)
        {
          unint64_t v10 = *(void *)(v85 + 8 * v9);
          int64_t v11 = v3 + 1;
          if (v10) {
            goto LABEL_23;
          }
          int64_t v11 = v9 + 1;
          if (v9 + 1 < v86)
          {
            unint64_t v10 = *(void *)(v85 + 8 * v11);
            if (v10) {
              goto LABEL_23;
            }
            int64_t v11 = v9 + 2;
            if (v9 + 2 < v86)
            {
              unint64_t v10 = *(void *)(v85 + 8 * v11);
              if (v10) {
                goto LABEL_23;
              }
              int64_t v11 = v9 + 3;
              if (v9 + 3 < v86)
              {
                unint64_t v10 = *(void *)(v85 + 8 * v11);
                if (v10) {
                  goto LABEL_23;
                }
                int64_t v12 = v9 + 4;
                if (v12 < v86)
                {
                  unint64_t v10 = *(void *)(v85 + 8 * v12);
                  if (v10)
                  {
                    int64_t v11 = v12;
LABEL_23:
                    uint64_t v87 = (v10 - 1) & v10;
                    int64_t v88 = v11;
                    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
                    goto LABEL_24;
                  }
                  while (1)
                  {
                    int64_t v11 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      break;
                    }
                    if (v11 >= v86) {
                      return 1;
                    }
                    unint64_t v10 = *(void *)(v85 + 8 * v11);
                    ++v12;
                    if (v10) {
                      goto LABEL_23;
                    }
                  }
LABEL_168:
                  __break(1u);
                }
              }
            }
          }
        }
        return 1;
    }
  }
}

void sub_2505A50DC()
{
  SigningIdentity = (void *)_PCSIdentityGetSigningIdentity();
  if (SigningIdentity)
  {
    id v1 = SigningIdentity;
    _PCSIdentityGetKey();
    uint64_t v2 = (void *)_PCSKeyCopyExportedPrivateKey();
    if (v2)
    {
      id v3 = v2;
      sub_2505BD940();
    }
    else
    {
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_2505BDC40();
      __swift_project_value_buffer(v10, (uint64_t)qword_269AC3188);
      os_log_type_t v11 = sub_2505BE3D0();
      int64_t v12 = sub_2505BDC20();
      if (os_log_type_enabled(v12, v11))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_2504D2000, v12, v11, "no signing key returned from PCS identity", v13, 2u);
        MEMORY[0x25337FF10](v13, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_2505AD9F0((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(_WORD *)uint64_t v14 = 406;
      *(_OWORD *)(v14 + 8) = xmmword_2505C6620;
      *(_OWORD *)(v14 + 24) = xmmword_2505C6630;
      *(void *)(v14 + 40) = 0x80000002505CC9B0;
      swift_willThrow();
    }
  }
  else
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_2505BDC40();
    __swift_project_value_buffer(v4, (uint64_t)qword_269AC3188);
    os_log_type_t v5 = sub_2505BE3D0();
    unint64_t v6 = sub_2505BDC20();
    os_log_type_t v7 = v5;
    if (os_log_type_enabled(v6, v5))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v8 = 0;
      _os_log_impl(&dword_2504D2000, v6, v7, "no signing identity found", v8, 2u);
      MEMORY[0x25337FF10](v8, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_2505AD9F0((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v9 = 405;
    *(_OWORD *)(v9 + 8) = xmmword_2505C6640;
    *(_OWORD *)(v9 + 24) = xmmword_2505C6630;
    *(void *)(v9 + 40) = 0x80000002505CC9B0;
    swift_willThrow();
  }
}

uint64_t sub_2505A53C8()
{
  _PCSIdentityGetKey();
  uint64_t v0 = (void *)_PCSKeyCopyExportedPrivateKey();
  if (v0)
  {
    id v1 = v0;
    uint64_t v2 = sub_2505BD940();

    return v2;
  }
  else
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_2505BDC40();
    __swift_project_value_buffer(v4, (uint64_t)qword_269AC3188);
    os_log_type_t v5 = sub_2505BE3D0();
    unint64_t v6 = sub_2505BDC20();
    os_log_type_t v7 = v5;
    if (os_log_type_enabled(v6, v5))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v8 = 0;
      _os_log_impl(&dword_2504D2000, v6, v7, "no decryption key returned from PCS identity", v8, 2u);
      MEMORY[0x25337FF10](v8, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_2505AD9F0((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v9 = 407;
    *(_OWORD *)(v9 + 8) = xmmword_2505C6650;
    *(void *)(v9 + 24) = 0x80000002505CCA70;
    *(void *)(v9 + 32) = 0xD00000000000006FLL;
    *(void *)(v9 + 40) = 0x80000002505CC9B0;
    return swift_willThrow();
  }
}

uint64_t sub_2505A5570()
{
  return swift_deallocClassInstance();
}

void sub_2505A55A8()
{
}

uint64_t sub_2505A55CC()
{
  return sub_2505A53C8();
}

uint64_t sub_2505A55F0(uint64_t *a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6CC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2505BFE80;
  os_log_type_t v7 = (void *)*MEMORY[0x263F621D8];
  if (!*MEMORY[0x263F621D8]) {
    __break(1u);
  }
  uint64_t v8 = inited;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v5;
  id v9 = v7;
  sub_2504E17A0(v8);
  type metadata accessor for CFString(0);
  sub_2505ACD10(&qword_269AB59D0, 255, type metadata accessor for CFString);
  uint64_t v10 = (void *)sub_2505BE0F0();
  swift_bridgeObjectRelease();
  uint64_t v11 = PCSIdentitySetCreate();

  if (v11)
  {
    *(void *)(v2 + 16) = v11;
  }
  else
  {
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_2505BDC40();
    __swift_project_value_buffer(v12, (uint64_t)qword_269AC3188);
    os_log_type_t v13 = sub_2505BE3D0();
    uint64_t v14 = sub_2505BDC20();
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_2504D2000, v14, v13, "failed to set PCS identity", v15, 2u);
      MEMORY[0x25337FF10](v15, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_2505AD9F0((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
    swift_allocError();
    *(_WORD *)uint64_t v16 = 409;
    *(_OWORD *)(v16 + 8) = xmmword_2505C6670;
    *(void *)(v16 + 24) = 0x80000002505CC990;
    *(void *)(v16 + 32) = 0xD00000000000006FLL;
    *(void *)(v16 + 40) = 0x80000002505CC9B0;
    swift_willThrow();
    type metadata accessor for PCSIDSet();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

uint64_t sub_2505A5B28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v5[28] = a4;
  v5[29] = v4;
  v5[26] = a1;
  v5[27] = a3;
  uint64_t v6 = a2[1];
  v5[30] = *a2;
  v5[31] = v6;
  return MEMORY[0x270FA2498](sub_2505A5B54, 0, 0);
}

uint64_t sub_2505A5B54()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2505BFEC0;
  if (!*MEMORY[0x263F621D8])
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v9 = inited;
  uint64_t v11 = v0[30];
  uint64_t v10 = v0[31];
  id v12 = (id)*MEMORY[0x263F621D8];
  v0[24] = v12;
  type metadata accessor for CFString(0);
  sub_2505ACD10(&qword_269AB59D0, 255, type metadata accessor for CFString);
  id v13 = v12;
  uint64_t inited = sub_2505BE480();
  *(void *)(v9 + 96) = MEMORY[0x263F8D310];
  *(void *)(v9 + 72) = v11;
  *(void *)(v9 + 80) = v10;
  uint64_t v14 = (void *)*MEMORY[0x263F62208];
  if (!*MEMORY[0x263F62208])
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x270FA2360](inited, v2, v3, v4, v5, v6, v7, v8);
  }
  uint64_t v15 = v0[29];
  uint64_t v23 = v0[28];
  uint64_t v16 = v0[26];
  uint64_t v17 = v0[27];
  swift_bridgeObjectRetain();

  v0[25] = v14;
  sub_2505BE480();
  *(void *)(v9 + 168) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(v9 + 144) = 1;
  unint64_t v18 = sub_2504E19C4(v9);
  v0[32] = v18;
  unint64_t v19 = (void *)swift_task_alloc();
  v0[33] = v19;
  v19[2] = v15;
  v19[3] = v17;
  v19[4] = v23;
  void v19[5] = v18;
  uint64_t v20 = type metadata accessor for PCSID();
  *(void *)(v16 + 24) = v20;
  *(void *)(v16 + 32) = &off_270193B00;
  BOOL v21 = (void *)swift_task_alloc();
  v0[34] = v21;
  *BOOL v21 = v0;
  v21[1] = sub_2505A5DB4;
  uint64_t inited = v0[26];
  unint64_t v5 = 0x80000002505CCA20;
  uint64_t v6 = sub_2505AE0D0;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  unint64_t v4 = 0xD00000000000001CLL;
  os_log_type_t v7 = v19;
  uint64_t v8 = v20;
  return MEMORY[0x270FA2360](inited, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2505A5DB4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2505A5EFC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2505A5EFC()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_2505A5F74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D08);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2, v5, v6, v7, v8);
  uint64_t v9 = (void *)sub_2505BE130();
  uint64_t v10 = (void *)sub_2505BE0F0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_2505AE170;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2505A6314;
  aBlock[3] = &block_descriptor_2;
  id v13 = _Block_copy(aBlock);
  swift_release();
  PCSIdentitySetCreateManatee();
  _Block_release(v13);
}

uint64_t sub_2505A6174(void *a1, void *a2)
{
  if (a1)
  {
    type metadata accessor for PCSID();
    *(void *)(swift_allocObject() + 16) = a1;
    id v3 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D08);
    return sub_2505BE350();
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6CD0);
      sub_2505AD9F0(&qword_269AB6CD8, &qword_269AB6CD0);
      swift_allocError();
      *(unsigned char *)uint64_t v6 = -102;
      *(void *)(v6 + 8) = a2;
      *(_OWORD *)(v6 + 16) = xmmword_2505C6680;
      *(void *)(v6 + 32) = 0x80000002505CCA20;
      *(void *)(v6 + 40) = 0xD00000000000006FLL;
      *(void *)(v6 + 48) = 0x80000002505CC9B0;
      id v7 = a2;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_2505AD9F0((unint64_t *)&qword_269AB59E8, &qword_269AB59E0);
      swift_allocError();
      *(_WORD *)uint64_t v8 = 411;
      *(_OWORD *)(v8 + 8) = xmmword_2505C6690;
      *(void *)(v8 + 24) = 0x80000002505CCA20;
      *(void *)(v8 + 32) = 0xD00000000000006FLL;
      *(void *)(v8 + 40) = 0x80000002505CC9B0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D08);
    return sub_2505BE340();
  }
}

void sub_2505A6314(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_2505A63A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[1] = sub_250589AEC;
  v11[28] = a4;
  v11[29] = v10;
  v11[26] = a1;
  v11[27] = a3;
  uint64_t v12 = a2[1];
  v11[30] = *a2;
  v11[31] = v12;
  return MEMORY[0x270FA2498](sub_2505A5B54, 0, 0);
}

uint64_t static P256.KeyAgreement.PrivateKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2505A6538(a1, a2, MEMORY[0x263F04778]);
}

uint64_t P256.KeyAgreement.PrivateKey.hash(into:)(uint64_t a1)
{
  return sub_2505A65E0(a1, MEMORY[0x263F04778]);
}

uint64_t P256.KeyAgreement.PrivateKey.hashValue.getter()
{
  return sub_2505A6658(MEMORY[0x263F04778]);
}

uint64_t sub_2505A64C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2505A66D8(a1, a2, a3, a4, MEMORY[0x263F04778]);
}

uint64_t sub_2505A64D8(uint64_t a1, uint64_t a2)
{
  return sub_2505A6780(a1, a2, MEMORY[0x263F04778]);
}

uint64_t sub_2505A64F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2505A6800(a1, a2, a3, MEMORY[0x263F04778]);
}

uint64_t sub_2505A6508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2505A6878(a1, a2, a3, MEMORY[0x263F04778]);
}

uint64_t static P256.Signing.PrivateKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2505A6538(a1, a2, MEMORY[0x263F047A8]);
}

uint64_t sub_2505A6538(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  unint64_t v6 = v5;
  uint64_t v7 = a3();
  unint64_t v9 = v8;
  char v10 = sub_25051AAD8(v4, v6, v7, v8);
  sub_250511528(v7, v9);
  sub_250511528(v4, v6);
  return v10 & 1;
}

uint64_t P256.Signing.PrivateKey.hash(into:)(uint64_t a1)
{
  return sub_2505A65E0(a1, MEMORY[0x263F047A8]);
}

uint64_t sub_2505A65E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = a2();
  unint64_t v4 = v3;
  sub_2505BD950();
  return sub_250511528(v2, v4);
}

uint64_t P256.Signing.PrivateKey.hashValue.getter()
{
  return sub_2505A6658(MEMORY[0x263F047A8]);
}

uint64_t sub_2505A6658(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_2505BE850();
  uint64_t v3 = a1(v2);
  unint64_t v5 = v4;
  sub_2505BD950();
  sub_250511528(v3, v5);
  return sub_2505BE880();
}

uint64_t sub_2505A66C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2505A66D8(a1, a2, a3, a4, MEMORY[0x263F047A8]);
}

uint64_t sub_2505A66D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5();
  unint64_t v8 = v7;
  uint64_t v9 = a5();
  unint64_t v11 = v10;
  char v12 = sub_25051AAD8(v6, v8, v9, v10);
  sub_250511528(v9, v11);
  sub_250511528(v6, v8);
  return v12 & 1;
}

uint64_t sub_2505A6768(uint64_t a1, uint64_t a2)
{
  return sub_2505A6780(a1, a2, MEMORY[0x263F047A8]);
}

uint64_t sub_2505A6780(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_2505BE850();
  uint64_t v5 = a3(v4);
  unint64_t v7 = v6;
  sub_2505BD950();
  sub_250511528(v5, v7);
  return sub_2505BE880();
}

uint64_t sub_2505A67E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2505A6800(a1, a2, a3, MEMORY[0x263F047A8]);
}

uint64_t sub_2505A6800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a4();
  unint64_t v6 = v5;
  sub_2505BD950();
  return sub_250511528(v4, v6);
}

uint64_t sub_2505A6860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2505A6878(a1, a2, a3, MEMORY[0x263F047A8]);
}

uint64_t sub_2505A6878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = sub_2505BE850();
  uint64_t v6 = a4(v5);
  unint64_t v8 = v7;
  sub_2505BD950();
  sub_250511528(v6, v8);
  return sub_2505BE880();
}

uint64_t sub_2505A68DC()
{
  uint64_t v0 = sub_2505BE0B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  unint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2505BDFA0();
  uint64_t v8 = sub_2505BDEF0();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  uint64_t v11 = sub_2505BDF60();
  unint64_t v13 = v12;
  if (v10 >> 60 == 15)
  {
    sub_250588E00();
    swift_allocError();
    *uint64_t v14 = 0;
    swift_willThrow();
    return sub_250511528(v11, v13);
  }
  else
  {
    v16[0] = v8;
    v16[1] = v10;
    sub_2504DBC4C(v8, v10);
    sub_2505BD960();
    sub_25051B8D4(v8, v10);
    sub_250511528(v11, v13);
    return v16[0];
  }
}

uint64_t sub_2505A6A60()
{
  uint64_t v0 = sub_2505BDF30();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  unint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SimPCSID(0);
  sub_2505BDF50();
  uint64_t v8 = sub_2505BDEF0();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  uint64_t v11 = sub_2505BDF60();
  unint64_t v13 = v12;
  if (v10 >> 60 == 15)
  {
    sub_250588E00();
    swift_allocError();
    *uint64_t v14 = 1;
    swift_willThrow();
    return sub_250511528(v11, v13);
  }
  else
  {
    v16[0] = v8;
    v16[1] = v10;
    sub_2504DBC4C(v8, v10);
    sub_2505BD960();
    sub_25051B8D4(v8, v10);
    sub_250511528(v11, v13);
    return v16[0];
  }
}

uint64_t sub_2505A6BF8()
{
  sub_2505BE850();
  uint64_t v0 = sub_2505BDF60();
  unint64_t v2 = v1;
  sub_2505BD950();
  sub_250511528(v0, v2);
  uint64_t v3 = sub_2505BDF60();
  unint64_t v5 = v4;
  sub_2505BD950();
  sub_250511528(v3, v5);
  sub_2505BE870();
  return sub_2505BE880();
}

uint64_t sub_2505A6CA8()
{
  uint64_t v0 = sub_2505BDF60();
  unint64_t v2 = v1;
  sub_2505BD950();
  sub_250511528(v0, v2);
  uint64_t v3 = sub_2505BDF60();
  unint64_t v5 = v4;
  sub_2505BD950();
  sub_250511528(v3, v5);
  return sub_2505BE870();
}

uint64_t sub_2505A6D48()
{
  sub_2505BE850();
  uint64_t v0 = sub_2505BDF60();
  unint64_t v2 = v1;
  sub_2505BD950();
  sub_250511528(v0, v2);
  uint64_t v3 = sub_2505BDF60();
  unint64_t v5 = v4;
  sub_2505BD950();
  sub_250511528(v3, v5);
  sub_2505BE870();
  return sub_2505BE880();
}

uint64_t sub_2505A6DF8()
{
  return sub_2505A68DC();
}

uint64_t sub_2505A6E10()
{
  return sub_2505A6A60();
}

uint64_t sub_2505A6E28(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_2505A6E48, 0, 0);
}

uint64_t sub_2505A6E48()
{
  if (qword_269AB56B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = qword_269AC3810;
  uint64_t v2 = (void *)swift_retain();
  uint64_t v3 = sub_2505A2E14(v2, v1);
  swift_endAccess();
  swift_release();
  if (v3)
  {
    unint64_t v4 = (uint64_t *)v0[5];
    v4[3] = type metadata accessor for SimPCSID(0);
    v4[4] = (uint64_t)&off_270193A98;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4);
    sub_2505ADE40(v3 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_current, (uint64_t)boxed_opaque_existential_1);
  }
  else
  {
    uint64_t v6 = (uint64_t *)v0[5];
    unint64_t v7 = (void *)v0[6];
    type metadata accessor for SimPCSBag(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = v8 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_current;
    sub_2505BDFD0();
    uint64_t v10 = type metadata accessor for SimPCSID(0);
    sub_2505BDF80();
    *(unsigned char *)(v9 + *(int *)(v10 + 24)) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6CE8);
    unint64_t v11 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_2505BFE80;
    sub_2505ADE40(v9, v12 + v11);
    uint64_t v13 = sub_2505ADF64(v12);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(v8 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_bag) = v13;
    swift_beginAccess();
    swift_retain();
    uint64_t v14 = swift_retain();
    sub_2505A7770(v14, v7);
    swift_endAccess();
    swift_release();
    v6[3] = v10;
    v6[4] = (uint64_t)&off_270193A98;
    uint64_t v15 = __swift_allocate_boxed_opaque_existential_1(v6);
    sub_2505ADE40(v9, (uint64_t)v15);
  }
  swift_release();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_2505A710C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2505A714C()
{
  return sub_2505BE880();
}

uint64_t sub_2505A71D4()
{
  return sub_2505A714C();
}

uint64_t sub_2505A71F8()
{
  swift_bridgeObjectRetain();
  sub_2505BE180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2505BE180();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2505A7278()
{
  return sub_2505BE880();
}

uint64_t sub_2505A7300(void **a1, void **a2)
{
  return sub_2505ADA94(*a1, *a2);
}

uint64_t sub_2505A730C(uint64_t a1)
{
  uint64_t v4 = *v1;
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_250586C8C;
  v5[5] = a1;
  v5[6] = v4;
  return MEMORY[0x270FA2498](sub_2505A6E48, 0, 0);
}

uint64_t sub_2505A73BC(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SimPCSID(0);
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2505ADE40(v1 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_current, (uint64_t)v10);
  uint64_t v11 = sub_2505BDF60();
  unint64_t v13 = v12;
  sub_2505BD950();
  sub_250511528(v11, v13);
  uint64_t v14 = sub_2505BDF60();
  unint64_t v16 = v15;
  sub_2505BD950();
  sub_250511528(v14, v16);
  sub_2505BE870();
  sub_2505ADEA4((uint64_t)v10);
  uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_bag);
  swift_bridgeObjectRetain();
  sub_2505AC9D0(a1, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2505A74EC()
{
  sub_2505ADEA4(v0 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_current);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2505A7560()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SimPCSID(0);
  MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2505BE850();
  sub_2505ADE40(v0 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_current, (uint64_t)v8);
  uint64_t v9 = sub_2505BDF60();
  unint64_t v11 = v10;
  sub_2505BD950();
  sub_250511528(v9, v11);
  uint64_t v12 = sub_2505BDF60();
  unint64_t v14 = v13;
  sub_2505BD950();
  sub_250511528(v12, v14);
  sub_2505BE870();
  sub_2505ADEA4((uint64_t)v8);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_bag);
  swift_bridgeObjectRetain();
  sub_2505AC9D0(v18, v15);
  swift_bridgeObjectRelease();
  return sub_2505BE880();
}

uint64_t sub_2505A76A0()
{
  return sub_2505A7560();
}

uint64_t sub_2505A76C4(long long *a1)
{
  return sub_2505A73BC(a1);
}

uint64_t sub_2505A76E8()
{
  sub_2505BE850();
  sub_2505A73BC(v1);
  return sub_2505BE880();
}

uint64_t sub_2505A7728(uint64_t *a1, uint64_t *a2)
{
  return sub_2505ADC3C(*a1, *a2);
}

unint64_t sub_2505A7734()
{
  unint64_t result = sub_2504E18B8(MEMORY[0x263F8EE78]);
  qword_269AC3810 = result;
  return result;
}

void sub_2505A775C()
{
  qword_269AC3818 = MEMORY[0x263F8EE88];
}

uint64_t sub_2505A7770(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_2505BE5B0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v3 = sub_2505A7824(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_250514274(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2505A7824(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E48);
    uint64_t v2 = sub_2505BE630();
    uint64_t v17 = v2;
    sub_2505BE5A0();
    if (sub_2505BE5D0())
    {
      type metadata accessor for SimPCSIDSet();
      do
      {
        swift_dynamicCast();
        type metadata accessor for SimPCSBag(0);
        swift_dynamicCast();
        uint64_t v2 = v17;
        unint64_t v10 = *(void *)(v17 + 16);
        if (*(void *)(v17 + 24) <= v10)
        {
          sub_2505B4894(v10 + 1, 1);
          uint64_t v2 = v17;
        }
        sub_2505BE850();
        swift_bridgeObjectRetain();
        sub_2505BE180();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_2505BE180();
        swift_bridgeObjectRelease();
        uint64_t result = sub_2505BE880();
        uint64_t v4 = v2 + 64;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 64 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 64 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v11 = 0;
          unint64_t v12 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v12 && (v11 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v13 = v7 == v12;
            if (v7 == v12) {
              unint64_t v7 = 0;
            }
            v11 |= v13;
            uint64_t v14 = *(void *)(v4 + 8 * v7);
          }
          while (v14 == -1);
          unint64_t v8 = __clz(__rbit64(~v14)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        uint64_t v9 = 8 * v8;
        *(void *)(*(void *)(v2 + 48) + v9) = v16;
        *(void *)(*(void *)(v2 + 56) + v9) = v15;
        ++*(void *)(v2 + 16);
      }
      while (sub_2505BE5D0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  return v2;
}

uint64_t sub_2505A7AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v183 = *MEMORY[0x263EF8340];
  uint64_t v6 = type metadata accessor for SimPCSID(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v14 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v161 - v19;
  uint64_t v21 = *v2;
  sub_2505BE850();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_2505BDF60();
  unint64_t v24 = v23;
  sub_2505BD950();
  sub_250511528(v22, v24);
  uint64_t v169 = a2 + *(int *)(v6 + 20);
  uint64_t v25 = sub_2505BDF60();
  unint64_t v27 = v26;
  sub_2505BD950();
  sub_250511528(v25, v27);
  uint64_t v171 = v6;
  uint64_t v167 = *(int *)(v6 + 24);
  sub_2505BE870();
  uint64_t v28 = sub_2505BE880();
  uint64_t v29 = -1 << *(unsigned char *)(v21 + 32);
  unint64_t v30 = v28 & ~v29;
  uint64_t v175 = v21 + 56;
  if ((*(void *)(v21 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30))
  {
    uint64_t v162 = v20;
    unint64_t v163 = v3;
    uint64_t v164 = a1;
    uint64_t v172 = ~v29;
    uint64_t v173 = v21;
    uint64_t v174 = *(void *)(v7 + 72);
    uint64_t v168 = a2;
    while (2)
    {
      unint64_t v31 = v174 * v30;
      sub_2505ADE40(*(void *)(v21 + 48) + v174 * v30, (uint64_t)v14);
      uint64_t v32 = sub_2505BDF60();
      unint64_t v34 = v33;
      uint64_t v35 = sub_2505BDF60();
      uint64_t v37 = v35;
      unint64_t v38 = v36;
      uint64_t v39 = 0;
      switch(v34 >> 62)
      {
        case 1uLL:
          LODWORD(v39) = HIDWORD(v32) - v32;
          if (__OFSUB__(HIDWORD(v32), v32))
          {
            __break(1u);
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
LABEL_241:
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
LABEL_246:
            __break(1u);
LABEL_247:
            __break(1u);
LABEL_248:
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
LABEL_252:
            __break(1u);
LABEL_253:
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
LABEL_259:
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:
            __break(1u);
          }
          uint64_t v39 = (int)v39;
          break;
        case 2uLL:
          uint64_t v41 = *(void *)(v32 + 16);
          uint64_t v40 = *(void *)(v32 + 24);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v39 = v40 - v41;
          if (!v42) {
            break;
          }
          goto LABEL_235;
        case 3uLL:
          break;
        default:
          uint64_t v39 = BYTE6(v34);
          break;
      }
      unint64_t v43 = v36 >> 62;
      switch(v36 >> 62)
      {
        case 1uLL:
          LODWORD(v44) = HIDWORD(v35) - v35;
          if (__OFSUB__(HIDWORD(v35), v35)) {
            goto LABEL_237;
          }
          uint64_t v44 = (int)v44;
LABEL_18:
          if (v39 == v44)
          {
            if (v39 >= 1)
            {
              unint64_t v170 = v31;
              switch(v34 >> 62)
              {
                case 1uLL:
                  if ((int)v32 > v32 >> 32) {
                    goto LABEL_242;
                  }
                  sub_2504DBC4C(v32, v34);
                  uint64_t v67 = sub_2505BD7D0();
                  if (v67)
                  {
                    uint64_t v68 = v67;
                    uint64_t v69 = sub_2505BD800();
                    if (__OFSUB__((int)v32, v69)) {
                      goto LABEL_244;
                    }
                    uint64_t v166 = (char *)(v68 + (int)v32 - v69);
                  }
                  else
                  {
                    uint64_t v166 = 0;
                  }
                  sub_2505BD7F0();
                  a2 = v168;
                  if (!v43)
                  {
                    *(void *)__s1 = v37;
                    *(_WORD *)&__s1[8] = v38;
                    __s1[10] = BYTE2(v38);
                    __s1[11] = BYTE3(v38);
                    __s1[12] = BYTE4(v38);
                    __s1[13] = BYTE5(v38);
                    if (!v166) {
                      goto LABEL_291;
                    }
                    int v77 = memcmp(v166, __s1, BYTE6(v38));
LABEL_127:
                    sub_250511528(v32, v34);
                    goto LABEL_128;
                  }
                  if (v43 == 1)
                  {
                    if (v37 >> 32 < (int)v37) {
                      goto LABEL_253;
                    }
                    swift_retain();
                    uint64_t v83 = (char *)sub_2505BD7D0();
                    if (v83)
                    {
                      uint64_t v84 = sub_2505BD800();
                      if (__OFSUB__((int)v37, v84)) {
                        goto LABEL_261;
                      }
                      v83 += (int)v37 - v84;
                    }
                    a2 = v168;
                    uint64_t v85 = sub_2505BD7F0();
                    if (v85 >= (v37 >> 32) - (int)v37) {
                      size_t v86 = (v37 >> 32) - (int)v37;
                    }
                    else {
                      size_t v86 = v85;
                    }
                    if (!v166) {
                      goto LABEL_284;
                    }
                    if (!v83) {
                      goto LABEL_285;
                    }
                    int v77 = memcmp(v166, v83, v86);
                    sub_250511528(v37, v38);
                    goto LABEL_127;
                  }
                  uint64_t v106 = *(void *)(v37 + 16);
                  uint64_t v105 = *(void *)(v37 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v107 = (char *)sub_2505BD7D0();
                  if (v107)
                  {
                    uint64_t v108 = sub_2505BD800();
                    if (__OFSUB__(v106, v108)) {
                      goto LABEL_260;
                    }
                    v107 += v106 - v108;
                  }
                  BOOL v42 = __OFSUB__(v105, v106);
                  int64_t v109 = v105 - v106;
                  if (v42) {
                    goto LABEL_254;
                  }
                  uint64_t v110 = sub_2505BD7F0();
                  if (v110 >= v109) {
                    size_t v111 = v109;
                  }
                  else {
                    size_t v111 = v110;
                  }
                  if (!v166) {
                    goto LABEL_292;
                  }
                  a2 = v168;
                  if (!v107) {
                    goto LABEL_293;
                  }
                  int v98 = memcmp(v166, v107, v111);
                  swift_release();
                  swift_release();
                  sub_250511528(v32, v34);
LABEL_140:
                  sub_250511528(v37, v38);
                  sub_250511528(v32, v34);
                  if (!v98) {
                    goto LABEL_29;
                  }
                  goto LABEL_5;
                case 2uLL:
                  uint64_t v70 = *(void *)(v32 + 16);
                  swift_retain();
                  swift_retain();
                  uint64_t v71 = (char *)sub_2505BD7D0();
                  uint64_t v166 = (char *)(v34 & 0x3FFFFFFFFFFFFFFFLL);
                  if (!v71) {
                    goto LABEL_60;
                  }
                  uint64_t v72 = sub_2505BD800();
                  if (__OFSUB__(v70, v72)) {
                    goto LABEL_243;
                  }
                  v71 += v70 - v72;
LABEL_60:
                  sub_2505BD7F0();
                  a2 = v168;
                  if (!v43)
                  {
                    *(void *)__s1 = v37;
                    *(_WORD *)&__s1[8] = v38;
                    __s1[10] = BYTE2(v38);
                    __s1[11] = BYTE3(v38);
                    __s1[12] = BYTE4(v38);
                    __s1[13] = BYTE5(v38);
                    if (!v71) {
                      goto LABEL_288;
                    }
                    int v98 = memcmp(v71, __s1, BYTE6(v38));
                    swift_release();
LABEL_124:
                    swift_release();
                    goto LABEL_140;
                  }
                  size_t v165 = v71;
                  if (v43 != 1)
                  {
                    uint64_t v99 = *(void *)(v37 + 16);
                    uint64_t v161 = *(void *)(v37 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v100 = (char *)sub_2505BD7D0();
                    if (v100)
                    {
                      uint64_t v101 = sub_2505BD800();
                      if (__OFSUB__(v99, v101)) {
                        goto LABEL_258;
                      }
                      v100 += v99 - v101;
                    }
                    BOOL v42 = __OFSUB__(v161, v99);
                    int64_t v102 = v161 - v99;
                    if (v42) {
                      goto LABEL_252;
                    }
                    uint64_t v103 = sub_2505BD7F0();
                    if (v103 >= v102) {
                      size_t v104 = v102;
                    }
                    else {
                      size_t v104 = v103;
                    }
                    if (!v165) {
                      goto LABEL_289;
                    }
                    if (!v100) {
                      goto LABEL_290;
                    }
                    int v98 = memcmp(v165, v100, v104);
                    swift_release();
                    swift_release();
                    swift_release();
                    goto LABEL_124;
                  }
                  if (v37 >> 32 < (int)v37) {
                    goto LABEL_247;
                  }
                  swift_retain();
                  uint64_t v73 = (char *)sub_2505BD7D0();
                  if (v73)
                  {
                    uint64_t v74 = sub_2505BD800();
                    if (__OFSUB__((int)v37, v74)) {
                      goto LABEL_259;
                    }
                    v73 += (int)v37 - v74;
                  }
                  a2 = v168;
                  uint64_t v75 = sub_2505BD7F0();
                  if (v75 >= (v37 >> 32) - (int)v37) {
                    size_t v76 = (v37 >> 32) - (int)v37;
                  }
                  else {
                    size_t v76 = v75;
                  }
                  if (!v165) {
                    goto LABEL_281;
                  }
                  if (!v73) {
                    goto LABEL_282;
                  }
                  int v77 = memcmp(v165, v73, v76);
                  sub_250511528(v37, v38);
                  swift_release();
                  swift_release();
LABEL_128:
                  sub_250511528(v37, v38);
                  sub_250511528(v32, v34);
                  if (!v77) {
                    goto LABEL_29;
                  }
                  goto LABEL_5;
                case 3uLL:
                  *(void *)&__s1[6] = 0;
                  *(void *)__s1 = 0;
                  if (!v43) {
                    goto LABEL_82;
                  }
                  if (v43 == 1)
                  {
                    uint64_t v47 = (v35 >> 32) - (int)v35;
                    if (v35 >> 32 < (int)v35) {
                      goto LABEL_246;
                    }
                    uint64_t v78 = sub_2505BD7D0();
                    if (!v78) {
                      goto LABEL_283;
                    }
                    uint64_t v49 = v78;
                    uint64_t v79 = sub_2505BD800();
                    uint64_t v51 = (int)v37 - v79;
                    if (__OFSUB__((int)v37, v79)) {
                      goto LABEL_251;
                    }
                    goto LABEL_77;
                  }
                  uint64_t v93 = *(void *)(v35 + 16);
                  uint64_t v94 = *(void *)(v35 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v89 = (char *)sub_2505BD7D0();
                  if (v89)
                  {
                    uint64_t v95 = sub_2505BD800();
                    if (__OFSUB__(v93, v95)) {
                      goto LABEL_257;
                    }
                    v89 += v93 - v95;
                  }
                  BOOL v42 = __OFSUB__(v94, v93);
                  int64_t v91 = v94 - v93;
                  if (v42) {
                    goto LABEL_249;
                  }
                  uint64_t v92 = sub_2505BD7F0();
                  if (!v89) {
                    goto LABEL_287;
                  }
                  goto LABEL_107;
                default:
                  *(void *)__s1 = v32;
                  *(_WORD *)&__s1[8] = v34;
                  __s1[10] = BYTE2(v34);
                  __s1[11] = BYTE3(v34);
                  __s1[12] = BYTE4(v34);
                  __s1[13] = BYTE5(v34);
                  if (!v43)
                  {
LABEL_82:
                    uint64_t __s2 = v35;
                    __int16 v177 = v36;
                    char v178 = BYTE2(v36);
                    char v179 = BYTE3(v36);
                    char v180 = BYTE4(v36);
                    char v181 = BYTE5(v36);
                    int v77 = memcmp(__s1, &__s2, BYTE6(v36));
                    goto LABEL_128;
                  }
                  if (v43 == 1)
                  {
                    uint64_t v47 = (v35 >> 32) - (int)v35;
                    if (v35 >> 32 < (int)v35) {
                      goto LABEL_245;
                    }
                    uint64_t v48 = sub_2505BD7D0();
                    if (!v48)
                    {
                      sub_2505BD7F0();
                      __break(1u);
LABEL_281:
                      __break(1u);
LABEL_282:
                      __break(1u);
LABEL_283:
                      sub_2505BD7F0();
                      __break(1u);
LABEL_284:
                      __break(1u);
LABEL_285:
                      __break(1u);
LABEL_286:
                      __break(1u);
LABEL_287:
                      __break(1u);
LABEL_288:
                      __break(1u);
LABEL_289:
                      __break(1u);
LABEL_290:
                      __break(1u);
LABEL_291:
                      __break(1u);
LABEL_292:
                      __break(1u);
LABEL_293:
                      __break(1u);
LABEL_294:
                      sub_2505BD7F0();
                      __break(1u);
LABEL_295:
                      __break(1u);
LABEL_296:
                      __break(1u);
LABEL_297:
                      __break(1u);
LABEL_298:
                      __break(1u);
LABEL_299:
                      sub_2505BD7F0();
                      __break(1u);
LABEL_300:
                      __break(1u);
LABEL_301:
                      __break(1u);
LABEL_302:
                      __break(1u);
LABEL_303:
                      __break(1u);
LABEL_304:
                      __break(1u);
LABEL_305:
                      __break(1u);
LABEL_306:
                      __break(1u);
LABEL_307:
                      __break(1u);
                      JUMPOUT(0x2505A8F3CLL);
                    }
                    uint64_t v49 = v48;
                    uint64_t v50 = sub_2505BD800();
                    uint64_t v51 = (int)v37 - v50;
                    if (__OFSUB__((int)v37, v50)) {
                      goto LABEL_250;
                    }
LABEL_77:
                    uint64_t v80 = sub_2505BD7F0();
                    if (v80 >= v47) {
                      size_t v81 = v47;
                    }
                    else {
                      size_t v81 = v80;
                    }
                    int v82 = memcmp(__s1, (const void *)(v49 + v51), v81);
                    sub_250511528(v37, v38);
                    sub_250511528(v32, v34);
                    a2 = v168;
                    if (v82) {
                      goto LABEL_5;
                    }
                  }
                  else
                  {
                    uint64_t v87 = *(void *)(v35 + 16);
                    uint64_t v88 = *(void *)(v35 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v89 = (char *)sub_2505BD7D0();
                    if (v89)
                    {
                      uint64_t v90 = sub_2505BD800();
                      if (__OFSUB__(v87, v90)) {
                        goto LABEL_256;
                      }
                      v89 += v87 - v90;
                    }
                    BOOL v42 = __OFSUB__(v88, v87);
                    int64_t v91 = v88 - v87;
                    if (v42) {
                      goto LABEL_248;
                    }
                    uint64_t v92 = sub_2505BD7F0();
                    if (!v89) {
                      goto LABEL_286;
                    }
LABEL_107:
                    if (v92 >= v91) {
                      size_t v96 = v91;
                    }
                    else {
                      size_t v96 = v92;
                    }
                    int v97 = memcmp(__s1, v89, v96);
                    swift_release();
                    swift_release();
                    sub_250511528(v37, v38);
                    sub_250511528(v32, v34);
                    a2 = v168;
                    if (v97) {
                      goto LABEL_5;
                    }
                  }
                  goto LABEL_29;
              }
            }
LABEL_28:
            unint64_t v170 = v31;
            sub_250511528(v35, v36);
            sub_250511528(v32, v34);
LABEL_29:
            uint64_t v32 = sub_2505BDF60();
            unint64_t v34 = v52;
            uint64_t v53 = sub_2505BDF60();
            uint64_t v37 = v53;
            unint64_t v38 = v54;
            uint64_t v55 = 0;
            switch(v34 >> 62)
            {
              case 1uLL:
                LODWORD(v55) = HIDWORD(v32) - v32;
                if (__OFSUB__(HIDWORD(v32), v32)) {
                  goto LABEL_238;
                }
                uint64_t v55 = (int)v55;
                break;
              case 2uLL:
                uint64_t v57 = *(void *)(v32 + 16);
                uint64_t v56 = *(void *)(v32 + 24);
                BOOL v42 = __OFSUB__(v56, v57);
                uint64_t v55 = v56 - v57;
                if (!v42) {
                  break;
                }
                goto LABEL_239;
              case 3uLL:
                break;
              default:
                uint64_t v55 = BYTE6(v34);
                break;
            }
            unint64_t v58 = v54 >> 62;
            switch(v54 >> 62)
            {
              case 1uLL:
                LODWORD(v59) = HIDWORD(v53) - v53;
                if (__OFSUB__(HIDWORD(v53), v53)) {
                  goto LABEL_240;
                }
                uint64_t v59 = (int)v59;
LABEL_39:
                if (v55 != v59) {
                  goto LABEL_4;
                }
                if (v55 < 1)
                {
LABEL_50:
                  sub_250511528(v53, v54);
                  sub_250511528(v32, v34);
                }
                else
                {
                  switch(v34 >> 62)
                  {
                    case 1uLL:
                      if ((int)v32 > v32 >> 32) {
                        goto LABEL_255;
                      }
                      sub_2504DBC4C(v32, v34);
                      uint64_t v112 = (char *)sub_2505BD7D0();
                      if (!v112) {
                        goto LABEL_146;
                      }
                      uint64_t v113 = sub_2505BD800();
                      if (__OFSUB__((int)v32, v113)) {
                        goto LABEL_263;
                      }
                      v112 += (int)v32 - v113;
LABEL_146:
                      a2 = v168;
                      sub_2505BD7F0();
                      if (!v58)
                      {
                        *(void *)__s1 = v37;
                        *(_WORD *)&__s1[8] = v38;
                        __s1[10] = BYTE2(v38);
                        __s1[11] = BYTE3(v38);
                        __s1[12] = BYTE4(v38);
                        __s1[13] = BYTE5(v38);
                        if (!v112) {
                          goto LABEL_305;
                        }
                        int v127 = memcmp(v112, __s1, BYTE6(v38));
                        sub_250511528(v32, v34);
                        goto LABEL_216;
                      }
                      if (v58 == 1)
                      {
                        uint64_t v166 = v112;
                        if (v37 >> 32 < (int)v37) {
                          goto LABEL_272;
                        }
                        swift_retain();
                        uint64_t v114 = (char *)sub_2505BD7D0();
                        if (v114)
                        {
                          uint64_t v115 = sub_2505BD800();
                          if (__OFSUB__((int)v37, v115)) {
                            goto LABEL_279;
                          }
                          v114 += (int)v37 - v115;
                        }
                        uint64_t v116 = v166;
                        uint64_t v117 = sub_2505BD7F0();
                        if (v117 >= (v37 >> 32) - (int)v37) {
                          size_t v118 = (v37 >> 32) - (int)v37;
                        }
                        else {
                          size_t v118 = v117;
                        }
                        if (!v116) {
                          goto LABEL_295;
                        }
                        if (!v114) {
                          goto LABEL_296;
                        }
                        int v119 = memcmp(v116, v114, v118);
                        sub_250511528(v37, v38);
                        sub_250511528(v32, v34);
                        goto LABEL_182;
                      }
                      uint64_t v150 = *(void *)(v37 + 16);
                      uint64_t v166 = *(char **)(v37 + 24);
                      swift_retain();
                      swift_retain();
                      uint64_t v151 = (char *)sub_2505BD7D0();
                      if (v151)
                      {
                        uint64_t v152 = sub_2505BD800();
                        uint64_t v153 = v150 - v152;
                        if (__OFSUB__(v150, v152)) {
                          goto LABEL_278;
                        }
                        uint64_t v154 = v150;
                        unint64_t v155 = v112;
                        v151 += v153;
                      }
                      else
                      {
                        uint64_t v154 = v150;
                        unint64_t v155 = v112;
                      }
                      uint64_t v156 = &v166[-v154];
                      if (__OFSUB__(v166, v154)) {
                        goto LABEL_273;
                      }
                      uint64_t v157 = sub_2505BD7F0();
                      if (v157 >= (uint64_t)v156) {
                        size_t v158 = (size_t)v156;
                      }
                      else {
                        size_t v158 = v157;
                      }
                      if (!v155) {
                        goto LABEL_306;
                      }
                      if (!v151) {
                        goto LABEL_307;
                      }
                      int v142 = memcmp(v155, v151, v158);
                      swift_release();
                      swift_release();
                      sub_250511528(v32, v34);
                      goto LABEL_229;
                    case 2uLL:
                      uint64_t v120 = *(void *)(v32 + 16);
                      swift_retain();
                      swift_retain();
                      uint64_t v121 = (char *)sub_2505BD7D0();
                      uint64_t v166 = (char *)(v34 & 0x3FFFFFFFFFFFFFFFLL);
                      if (!v121) {
                        goto LABEL_161;
                      }
                      uint64_t v122 = sub_2505BD800();
                      if (__OFSUB__(v120, v122)) {
                        goto LABEL_262;
                      }
                      v121 += v120 - v122;
LABEL_161:
                      a2 = v168;
                      sub_2505BD7F0();
                      if (v58)
                      {
                        size_t v165 = v121;
                        if (v58 == 1)
                        {
                          if (v37 >> 32 < (int)v37) {
                            goto LABEL_267;
                          }
                          swift_retain();
                          uint64_t v123 = (char *)sub_2505BD7D0();
                          if (v123)
                          {
                            uint64_t v124 = sub_2505BD800();
                            if (__OFSUB__((int)v37, v124)) {
                              goto LABEL_277;
                            }
                            v123 += (int)v37 - v124;
                          }
                          a2 = v168;
                          uint64_t v125 = sub_2505BD7F0();
                          if (v125 >= (v37 >> 32) - (int)v37) {
                            size_t v126 = (v37 >> 32) - (int)v37;
                          }
                          else {
                            size_t v126 = v125;
                          }
                          if (!v165) {
                            goto LABEL_297;
                          }
                          if (!v123) {
                            goto LABEL_298;
                          }
                          int v127 = memcmp(v165, v123, v126);
                          sub_250511528(v37, v38);
                          swift_release();
                          swift_release();
                          goto LABEL_216;
                        }
                        uint64_t v144 = *(void *)(v37 + 16);
                        uint64_t v161 = *(void *)(v37 + 24);
                        swift_retain();
                        swift_retain();
                        uint64_t v145 = (char *)sub_2505BD7D0();
                        if (v145)
                        {
                          uint64_t v146 = sub_2505BD800();
                          if (__OFSUB__(v144, v146)) {
                            goto LABEL_276;
                          }
                          v145 += v144 - v146;
                        }
                        BOOL v42 = __OFSUB__(v161, v144);
                        int64_t v147 = v161 - v144;
                        if (v42) {
                          goto LABEL_271;
                        }
                        uint64_t v148 = sub_2505BD7F0();
                        if (v148 >= v147) {
                          size_t v149 = v147;
                        }
                        else {
                          size_t v149 = v148;
                        }
                        if (!v165) {
                          goto LABEL_303;
                        }
                        if (!v145) {
                          goto LABEL_304;
                        }
                        int v143 = memcmp(v165, v145, v149);
                        swift_release();
                        swift_release();
                        swift_release();
                      }
                      else
                      {
                        *(void *)__s1 = v37;
                        *(_WORD *)&__s1[8] = v38;
                        __s1[10] = BYTE2(v38);
                        __s1[11] = BYTE3(v38);
                        __s1[12] = BYTE4(v38);
                        __s1[13] = BYTE5(v38);
                        if (!v121) {
                          goto LABEL_302;
                        }
                        int v143 = memcmp(v121, __s1, BYTE6(v38));
                        swift_release();
                      }
                      swift_release();
                      sub_250511528(v37, v38);
                      sub_250511528(v32, v34);
                      if (v143) {
                        goto LABEL_5;
                      }
                      break;
                    case 3uLL:
                      *(void *)&__s1[6] = 0;
                      *(void *)__s1 = 0;
                      if (!v58) {
                        goto LABEL_184;
                      }
                      if (v58 == 1)
                      {
                        uint64_t v62 = (v53 >> 32) - (int)v53;
                        if (v53 >> 32 < (int)v53) {
                          goto LABEL_265;
                        }
                        uint64_t v128 = sub_2505BD7D0();
                        if (!v128) {
                          goto LABEL_299;
                        }
                        uint64_t v64 = v128;
                        uint64_t v129 = sub_2505BD800();
                        uint64_t v66 = (int)v37 - v129;
                        if (__OFSUB__((int)v37, v129)) {
                          goto LABEL_268;
                        }
                        goto LABEL_178;
                      }
                      uint64_t v138 = *(void *)(v53 + 16);
                      uint64_t v139 = *(void *)(v53 + 24);
                      swift_retain();
                      swift_retain();
                      uint64_t v134 = (char *)sub_2505BD7D0();
                      if (v134)
                      {
                        uint64_t v140 = sub_2505BD800();
                        if (__OFSUB__(v138, v140)) {
                          goto LABEL_275;
                        }
                        v134 += v138 - v140;
                      }
                      BOOL v42 = __OFSUB__(v139, v138);
                      int64_t v136 = v139 - v138;
                      if (v42) {
                        goto LABEL_270;
                      }
                      uint64_t v137 = sub_2505BD7F0();
                      if (!v134) {
                        goto LABEL_301;
                      }
                      goto LABEL_196;
                    default:
                      *(void *)__s1 = v32;
                      *(_WORD *)&__s1[8] = v34;
                      __s1[10] = BYTE2(v34);
                      __s1[11] = BYTE3(v34);
                      __s1[12] = BYTE4(v34);
                      __s1[13] = BYTE5(v34);
                      if (v58)
                      {
                        if (v58 == 1)
                        {
                          uint64_t v62 = (v53 >> 32) - (int)v53;
                          if (v53 >> 32 < (int)v53) {
                            goto LABEL_264;
                          }
                          uint64_t v63 = sub_2505BD7D0();
                          if (!v63) {
                            goto LABEL_294;
                          }
                          uint64_t v64 = v63;
                          uint64_t v65 = sub_2505BD800();
                          uint64_t v66 = (int)v37 - v65;
                          if (__OFSUB__((int)v37, v65)) {
                            goto LABEL_266;
                          }
LABEL_178:
                          uint64_t v130 = sub_2505BD7F0();
                          if (v130 >= v62) {
                            size_t v131 = v62;
                          }
                          else {
                            size_t v131 = v130;
                          }
                          int v119 = memcmp(__s1, (const void *)(v64 + v66), v131);
LABEL_182:
                          sub_250511528(v37, v38);
                          sub_250511528(v32, v34);
                          a2 = v168;
                          if (v119) {
                            goto LABEL_5;
                          }
                        }
                        else
                        {
                          uint64_t v132 = *(void *)(v53 + 16);
                          uint64_t v133 = *(void *)(v53 + 24);
                          swift_retain();
                          swift_retain();
                          uint64_t v134 = (char *)sub_2505BD7D0();
                          if (v134)
                          {
                            uint64_t v135 = sub_2505BD800();
                            if (__OFSUB__(v132, v135)) {
                              goto LABEL_274;
                            }
                            v134 += v132 - v135;
                          }
                          BOOL v42 = __OFSUB__(v133, v132);
                          int64_t v136 = v133 - v132;
                          if (v42) {
                            goto LABEL_269;
                          }
                          uint64_t v137 = sub_2505BD7F0();
                          if (!v134) {
                            goto LABEL_300;
                          }
LABEL_196:
                          if (v137 >= v136) {
                            size_t v141 = v136;
                          }
                          else {
                            size_t v141 = v137;
                          }
                          int v142 = memcmp(__s1, v134, v141);
                          swift_release();
                          swift_release();
LABEL_229:
                          sub_250511528(v37, v38);
                          sub_250511528(v32, v34);
                          a2 = v168;
                          if (v142) {
                            goto LABEL_5;
                          }
                        }
                      }
                      else
                      {
LABEL_184:
                        uint64_t __s2 = v53;
                        __int16 v177 = v54;
                        char v178 = BYTE2(v54);
                        char v179 = BYTE3(v54);
                        char v180 = BYTE4(v54);
                        char v181 = BYTE5(v54);
                        int v127 = memcmp(__s1, &__s2, BYTE6(v54));
LABEL_216:
                        sub_250511528(v37, v38);
                        sub_250511528(v32, v34);
                        if (v127) {
                          goto LABEL_5;
                        }
                      }
                      break;
                  }
                }
                if (v14[*(int *)(v171 + 24)] == *(unsigned char *)(a2 + v167))
                {
                  sub_2505ADEA4((uint64_t)v14);
                  swift_bridgeObjectRelease();
                  sub_2505ADEA4(a2);
                  sub_2505ADE40(*(void *)(*v163 + 48) + v170, v164);
                  return 0;
                }
                break;
              case 2uLL:
                uint64_t v61 = *(void *)(v53 + 16);
                uint64_t v60 = *(void *)(v53 + 24);
                BOOL v42 = __OFSUB__(v60, v61);
                uint64_t v59 = v60 - v61;
                if (!v42) {
                  goto LABEL_39;
                }
                goto LABEL_241;
              case 3uLL:
                if (!v55) {
                  goto LABEL_50;
                }
                goto LABEL_4;
              default:
                uint64_t v59 = BYTE6(v54);
                goto LABEL_39;
            }
          }
          else
          {
LABEL_4:
            sub_250511528(v37, v38);
            sub_250511528(v32, v34);
          }
LABEL_5:
          sub_2505ADEA4((uint64_t)v14);
          uint64_t v21 = v173;
          unint64_t v30 = (v30 + 1) & v172;
          if ((*(void *)(v175 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30)) {
            continue;
          }
          swift_bridgeObjectRelease();
          a1 = v164;
          uint64_t v3 = v163;
          uint64_t v20 = v162;
          break;
        case 2uLL:
          uint64_t v46 = *(void *)(v35 + 16);
          uint64_t v45 = *(void *)(v35 + 24);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v44 = v45 - v46;
          if (!v42) {
            goto LABEL_18;
          }
          goto LABEL_236;
        case 3uLL:
          if (v39) {
            goto LABEL_4;
          }
          goto LABEL_28;
        default:
          uint64_t v44 = BYTE6(v36);
          goto LABEL_18;
      }
      break;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2505ADE40(a2, (uint64_t)v20);
  *(void *)__s1 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_2505AA110((uint64_t)v20, v30, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = *(void *)__s1;
  swift_bridgeObjectRelease();
  sub_2505ADF00(a2, a1);
  return 1;
}

uint64_t sub_2505A8F9C(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v95 = *MEMORY[0x263EF8340];
  uint64_t v6 = *v3;
  sub_2505BE850();
  swift_bridgeObjectRetain();
  sub_2504DBC4C(a2, a3);
  sub_2505BD950();
  sub_250511528(a2, a3);
  uint64_t v7 = sub_2505BE880();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)__s1 = *(void *)v81;
    *(void *)uint64_t v81 = 0x8000000000000000;
    sub_2504DBC4C(a2, a3);
    sub_2505AB4EC(a2, a3, v9, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v81 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  unint64_t v11 = a3 >> 62;
  uint64_t v86 = ~v8;
  BOOL v12 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v84 = v12;
  uint64_t v83 = v6;
  size_t __n = BYTE6(a3);
  uint64_t v85 = v6 + 56;
  uint64_t v79 = (a2 >> 32) - (int)a2;
  uint64_t v80 = a2 >> 32;
  unint64_t v78 = a3;
  while (2)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = 0;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v16 = HIDWORD(v14) - (int)v14;
LABEL_14:
        sub_2504DBC4C(v14, v15);
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v14 + 16);
        uint64_t v17 = *(void *)(v14 + 24);
        uint64_t v16 = v17 - v18;
        if (!__OFSUB__(v17, v18)) {
          goto LABEL_14;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v16 = BYTE6(v15);
        break;
    }
    size_t v19 = __n;
    switch((int)v11)
    {
      case 1:
        size_t v19 = HIDWORD(a2) - (int)a2;
        if (v84) {
          goto LABEL_121;
        }
        goto LABEL_19;
      case 2:
        uint64_t v21 = *(void *)(a2 + 16);
        uint64_t v20 = *(void *)(a2 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        size_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_19;
        }
        goto LABEL_122;
      case 3:
        if (v16) {
          goto LABEL_7;
        }
        goto LABEL_117;
      default:
LABEL_19:
        if (v16 != v19)
        {
LABEL_7:
          sub_250511528(v14, v15);
          goto LABEL_8;
        }
        if (v16 >= 1)
        {
          switch(v15 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              sub_2504DBC4C(v14, v15);
              unint64_t v27 = (char *)sub_2505BD7D0();
              if (!v27) {
                goto LABEL_33;
              }
              uint64_t v28 = sub_2505BD800();
              if (__OFSUB__((int)v14, v28)) {
                goto LABEL_125;
              }
              v27 += (int)v14 - v28;
LABEL_33:
              sub_2505BD7F0();
              uint64_t v10 = v85;
              if (v11)
              {
                if (v11 == 1)
                {
                  if (v80 < (int)a2) {
                    goto LABEL_134;
                  }
                  swift_retain();
                  uint64_t v29 = (char *)sub_2505BD7D0();
                  if (v29)
                  {
                    uint64_t v30 = sub_2505BD800();
                    if (__OFSUB__((int)a2, v30)) {
                      goto LABEL_141;
                    }
                    v29 += (int)a2 - v30;
                  }
                  uint64_t v31 = sub_2505BD7F0();
                  size_t v32 = (a2 >> 32) - (int)a2;
                  if (v31 < v79) {
                    size_t v32 = v31;
                  }
                  if (!v27) {
                    goto LABEL_143;
                  }
                  if (!v29) {
                    goto LABEL_144;
                  }
                  int v33 = memcmp(v27, v29, v32);
                  sub_250511528(a2, a3);
                }
                else
                {
                  uint64_t v66 = *(void *)(a2 + 16);
                  uint64_t v65 = *(void *)(a2 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = (char *)sub_2505BD7D0();
                  if (v67)
                  {
                    uint64_t v68 = sub_2505BD800();
                    if (__OFSUB__(v66, v68)) {
                      goto LABEL_140;
                    }
                    v67 += v66 - v68;
                  }
                  BOOL v22 = __OFSUB__(v65, v66);
                  int64_t v69 = v65 - v66;
                  if (v22) {
                    goto LABEL_135;
                  }
                  uint64_t v70 = sub_2505BD7F0();
                  if (v70 >= v69) {
                    size_t v71 = v69;
                  }
                  else {
                    size_t v71 = v70;
                  }
                  if (!v27) {
                    goto LABEL_154;
                  }
                  a3 = v78;
                  uint64_t v6 = v83;
                  if (!v67) {
                    goto LABEL_155;
                  }
                  int v33 = memcmp(v27, v67, v71);
                  swift_release();
                  swift_release();
                }
                sub_250511528(v14, v15);
LABEL_113:
                sub_250511528(v14, v15);
LABEL_114:
                uint64_t v10 = v85;
                if (!v33) {
                  goto LABEL_118;
                }
              }
              else
              {
                *(void *)__s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v27) {
                  goto LABEL_153;
                }
                int v45 = memcmp(v27, __s1, __n);
                uint64_t v46 = v14;
                unint64_t v47 = v15;
LABEL_99:
                sub_250511528(v46, v47);
LABEL_100:
                sub_250511528(v14, v15);
                if (!v45) {
                  goto LABEL_118;
                }
              }
              break;
            case 2uLL:
              uint64_t v34 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              uint64_t v35 = (char *)sub_2505BD7D0();
              if (!v35) {
                goto LABEL_47;
              }
              uint64_t v36 = sub_2505BD800();
              if (__OFSUB__(v34, v36)) {
                goto LABEL_124;
              }
              v35 += v34 - v36;
LABEL_47:
              sub_2505BD7F0();
              uint64_t v6 = v83;
              if (!v11)
              {
                *(void *)__s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v35) {
                  goto LABEL_150;
                }
                int v33 = memcmp(v35, __s1, __n);
                swift_release();
                swift_release();
                goto LABEL_113;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_128;
                }
                swift_retain();
                uint64_t v37 = (char *)sub_2505BD7D0();
                if (v37)
                {
                  uint64_t v38 = sub_2505BD800();
                  if (__OFSUB__((int)a2, v38)) {
                    goto LABEL_139;
                  }
                  v37 += (int)a2 - v38;
                }
                uint64_t v39 = sub_2505BD7F0();
                size_t v40 = (a2 >> 32) - (int)a2;
                if (v39 < v79) {
                  size_t v40 = v39;
                }
                if (!v35) {
                  goto LABEL_145;
                }
                if (!v37) {
                  goto LABEL_146;
                }
                int v33 = memcmp(v35, v37, v40);
                sub_250511528(a2, a3);
                swift_release();
              }
              else
              {
                uint64_t v59 = *(void *)(a2 + 16);
                uint64_t v77 = *(void *)(a2 + 24);
                swift_retain();
                swift_retain();
                uint64_t v60 = (char *)sub_2505BD7D0();
                if (v60)
                {
                  uint64_t v61 = sub_2505BD800();
                  if (__OFSUB__(v59, v61)) {
                    goto LABEL_138;
                  }
                  v60 += v59 - v61;
                }
                BOOL v22 = __OFSUB__(v77, v59);
                int64_t v62 = v77 - v59;
                if (v22) {
                  goto LABEL_133;
                }
                uint64_t v63 = sub_2505BD7F0();
                if (v63 >= v62) {
                  size_t v64 = v62;
                }
                else {
                  size_t v64 = v63;
                }
                if (!v35) {
                  goto LABEL_151;
                }
                a3 = v78;
                if (!v60) {
                  goto LABEL_152;
                }
                int v33 = memcmp(v35, v60, v64);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              sub_250511528(v14, v15);
              uint64_t v6 = v83;
              goto LABEL_114;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v11) {
                goto LABEL_67;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_127;
                }
                sub_2504DBC4C(a2, a3);
                uint64_t v41 = sub_2505BD7D0();
                if (!v41) {
                  goto LABEL_147;
                }
                uint64_t v24 = v41;
                uint64_t v42 = sub_2505BD800();
                uint64_t v26 = (int)a2 - v42;
                if (__OFSUB__((int)a2, v42)) {
                  goto LABEL_132;
                }
LABEL_63:
                uint64_t v43 = sub_2505BD7F0();
                if (v43 >= v79) {
                  size_t v44 = (a2 >> 32) - (int)a2;
                }
                else {
                  size_t v44 = v43;
                }
                int v45 = memcmp(__s1, (const void *)(v24 + v26), v44);
                uint64_t v46 = a2;
                a3 = v78;
                unint64_t v47 = v78;
                goto LABEL_99;
              }
              uint64_t v54 = *(void *)(a2 + 16);
              uint64_t v55 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              uint64_t v50 = (char *)sub_2505BD7D0();
              if (v50)
              {
                uint64_t v56 = sub_2505BD800();
                if (__OFSUB__(v54, v56)) {
                  goto LABEL_137;
                }
                v50 += v54 - v56;
              }
              BOOL v22 = __OFSUB__(v55, v54);
              int64_t v52 = v55 - v54;
              if (v22) {
                goto LABEL_130;
              }
              uint64_t v53 = sub_2505BD7F0();
              if (!v50) {
                goto LABEL_149;
              }
LABEL_79:
              if (v53 >= v52) {
                size_t v57 = v52;
              }
              else {
                size_t v57 = v53;
              }
              int v58 = memcmp(__s1, v50, v57);
              swift_release();
              swift_release();
              sub_250511528(v14, v15);
              uint64_t v6 = v83;
              uint64_t v10 = v85;
              if (!v58) {
                goto LABEL_118;
              }
              break;
            default:
              *(void *)__s1 = v14;
              *(_WORD *)&__s1[8] = v15;
              __s1[10] = BYTE2(v15);
              __s1[11] = BYTE3(v15);
              __s1[12] = BYTE4(v15);
              __s1[13] = BYTE5(v15);
              if (!v11)
              {
LABEL_67:
                uint64_t __s2 = a2;
                __int16 v89 = a3;
                char v90 = BYTE2(a3);
                char v91 = BYTE3(a3);
                char v92 = BYTE4(a3);
                char v93 = BYTE5(a3);
                int v45 = memcmp(__s1, &__s2, __n);
                goto LABEL_100;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_126;
                }
                sub_2504DBC4C(a2, a3);
                uint64_t v23 = sub_2505BD7D0();
                if (!v23)
                {
                  sub_2505BD7F0();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  sub_2505BD7F0();
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x2505A9A00);
                }
                uint64_t v24 = v23;
                uint64_t v25 = sub_2505BD800();
                uint64_t v26 = (int)a2 - v25;
                if (__OFSUB__((int)a2, v25)) {
                  goto LABEL_131;
                }
                goto LABEL_63;
              }
              uint64_t v48 = *(void *)(a2 + 16);
              uint64_t v49 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              uint64_t v50 = (char *)sub_2505BD7D0();
              if (v50)
              {
                uint64_t v51 = sub_2505BD800();
                if (__OFSUB__(v48, v51)) {
                  goto LABEL_136;
                }
                v50 += v48 - v51;
              }
              BOOL v22 = __OFSUB__(v49, v48);
              int64_t v52 = v49 - v48;
              if (v22) {
                goto LABEL_129;
              }
              uint64_t v53 = sub_2505BD7F0();
              if (!v50) {
                goto LABEL_148;
              }
              goto LABEL_79;
          }
LABEL_8:
          unint64_t v9 = (v9 + 1) & v86;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_116;
          }
          continue;
        }
LABEL_117:
        sub_250511528(v14, v15);
LABEL_118:
        swift_bridgeObjectRelease();
        sub_250511528(a2, a3);
        uint64_t v74 = (uint64_t *)(*(void *)(*(void *)v81 + 48) + 16 * v9);
        uint64_t v75 = *v74;
        unint64_t v76 = v74[1];
        *a1 = *v74;
        a1[1] = v76;
        sub_2504DBC4C(v75, v76);
        return 0;
    }
  }
}

uint64_t sub_2505A9A30()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SimPCSID(0);
  uint64_t v46 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6CF8);
  uint64_t v10 = sub_2505BE4A0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 56);
    int v45 = (void *)(v9 + 56);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    uint64_t v43 = v0;
    int64_t v44 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 56;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v22 >= v44) {
          goto LABEL_33;
        }
        unint64_t v23 = v45[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v44) {
            goto LABEL_33;
          }
          unint64_t v23 = v45[v18];
          if (!v23)
          {
            int64_t v18 = v22 + 2;
            if (v22 + 2 >= v44) {
              goto LABEL_33;
            }
            unint64_t v23 = v45[v18];
            if (!v23)
            {
              int64_t v24 = v22 + 3;
              if (v24 >= v44)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v43;
                uint64_t v41 = 1 << *(unsigned char *)(v9 + 32);
                if (v41 > 63) {
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v45 = -1 << v41;
                }
                *(void *)(v9 + 16) = 0;
                break;
              }
              unint64_t v23 = v45[v24];
              if (!v23)
              {
                while (1)
                {
                  int64_t v18 = v24 + 1;
                  if (__OFADD__(v24, 1)) {
                    goto LABEL_39;
                  }
                  if (v18 >= v44) {
                    goto LABEL_33;
                  }
                  unint64_t v23 = v45[v18];
                  ++v24;
                  if (v23) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v18 = v24;
            }
          }
        }
LABEL_23:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = v9;
      uint64_t v26 = *(void *)(v9 + 48);
      uint64_t v27 = *(void *)(v46 + 72);
      sub_2505ADF00(v26 + v27 * v21, (uint64_t)v8);
      sub_2505BE850();
      uint64_t v28 = sub_2505BDF60();
      unint64_t v30 = v29;
      sub_2505BD950();
      sub_250511528(v28, v30);
      uint64_t v31 = sub_2505BDF60();
      unint64_t v33 = v32;
      sub_2505BD950();
      sub_250511528(v31, v33);
      sub_2505BE870();
      uint64_t result = sub_2505BE880();
      uint64_t v34 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v35 = result & ~v34;
      unint64_t v36 = v35 >> 6;
      if (((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v37 = 0;
        unint64_t v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v39 = v36 == v38;
          if (v36 == v38) {
            unint64_t v36 = 0;
          }
          v37 |= v39;
          uint64_t v40 = *(void *)(v16 + 8 * v36);
        }
        while (v40 == -1);
        unint64_t v19 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = sub_2505ADF00((uint64_t)v8, *(void *)(v11 + 48) + v19 * v27);
      ++*(void *)(v11 + 16);
      uint64_t v9 = v25;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v11;
  return result;
}

uint64_t sub_2505A9E18()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D10);
  uint64_t v3 = sub_2505BE4A0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      unint64_t v21 = v19[1];
      sub_2505BE850();
      sub_2504DBC4C(v20, v21);
      sub_2505BD950();
      sub_250511528(v20, v21);
      uint64_t result = sub_2505BE880();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2505AA110(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v173 = *MEMORY[0x263EF8340];
  uint64_t v161 = type metadata accessor for SimPCSID(0);
  uint64_t v7 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *(void *)(*v3 + 16);
  unint64_t v15 = *(void *)(*v3 + 24);
  uint64_t v157 = v7;
  size_t v158 = v3;
  if (v15 <= v14 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_2505A9A30();
    }
    else
    {
      if (v15 > v14)
      {
        sub_2505ABF6C();
        goto LABEL_239;
      }
      sub_2505AC35C();
    }
    uint64_t v16 = *v3;
    sub_2505BE850();
    uint64_t v17 = sub_2505BDF60();
    unint64_t v19 = v18;
    sub_2505BD950();
    sub_250511528(v17, v19);
    uint64_t v20 = v161;
    uint64_t v160 = a1 + *(int *)(v161 + 20);
    uint64_t v21 = sub_2505BDF60();
    unint64_t v23 = v22;
    sub_2505BD950();
    sub_250511528(v21, v23);
    uint64_t v155 = *(int *)(v20 + 24);
    sub_2505BE870();
    uint64_t v24 = sub_2505BE880();
    uint64_t v25 = -1 << *(unsigned char *)(v16 + 32);
    a2 = v24 & ~v25;
    uint64_t v164 = v16 + 56;
    uint64_t v165 = v16;
    if ((*(void *)(v16 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v162 = ~v25;
      uint64_t v163 = *(void *)(v7 + 72);
      uint64_t v159 = a1;
      while (1)
      {
        sub_2505ADE40(*(void *)(v165 + 48) + v163 * a2, (uint64_t)v13);
        uint64_t v26 = sub_2505BDF60();
        unint64_t v28 = v27;
        uint64_t v29 = sub_2505BDF60();
        uint64_t v31 = v29;
        unint64_t v32 = v30;
        uint64_t v33 = 0;
        switch(v28 >> 62)
        {
          case 1uLL:
            LODWORD(v33) = HIDWORD(v26) - v26;
            if (__OFSUB__(HIDWORD(v26), v26)) {
              goto LABEL_242;
            }
            uint64_t v33 = (int)v33;
            break;
          case 2uLL:
            uint64_t v35 = *(void *)(v26 + 16);
            uint64_t v34 = *(void *)(v26 + 24);
            BOOL v36 = __OFSUB__(v34, v35);
            uint64_t v33 = v34 - v35;
            if (!v36) {
              break;
            }
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
            goto LABEL_245;
          case 3uLL:
            break;
          default:
            uint64_t v33 = BYTE6(v28);
            break;
        }
        unint64_t v37 = v30 >> 62;
        switch(v30 >> 62)
        {
          case 1uLL:
            LODWORD(v38) = HIDWORD(v29) - v29;
            if (__OFSUB__(HIDWORD(v29), v29)) {
              goto LABEL_244;
            }
            uint64_t v38 = (int)v38;
LABEL_25:
            if (v33 != v38)
            {
LABEL_11:
              sub_250511528(v31, v32);
              sub_250511528(v26, v28);
              goto LABEL_12;
            }
            if (v33 < 1)
            {
LABEL_35:
              sub_250511528(v29, v30);
              sub_250511528(v26, v28);
              goto LABEL_36;
            }
            break;
          case 2uLL:
            uint64_t v40 = *(void *)(v29 + 16);
            uint64_t v39 = *(void *)(v29 + 24);
            BOOL v36 = __OFSUB__(v39, v40);
            uint64_t v38 = v39 - v40;
            if (!v36) {
              goto LABEL_25;
            }
            goto LABEL_243;
          case 3uLL:
            if (v33) {
              goto LABEL_11;
            }
            goto LABEL_35;
          default:
            uint64_t v38 = BYTE6(v30);
            goto LABEL_25;
        }
        switch(v28 >> 62)
        {
          case 1uLL:
            if ((int)v26 > v26 >> 32) {
              goto LABEL_250;
            }
            sub_2504DBC4C(v26, v28);
            uint64_t v74 = sub_2505BD7D0();
            if (v74)
            {
              uint64_t v75 = v74;
              uint64_t v76 = sub_2505BD800();
              if (__OFSUB__((int)v26, v76)) {
                goto LABEL_252;
              }
              uint64_t v156 = (char *)(v75 + (int)v26 - v76);
            }
            else
            {
              uint64_t v156 = 0;
            }
            sub_2505BD7F0();
            a1 = v159;
            if (v37)
            {
              if (v37 == 1)
              {
                if (v31 >> 32 < (int)v31) {
                  goto LABEL_261;
                }
                swift_retain();
                uint64_t v77 = (char *)sub_2505BD7D0();
                if (v77)
                {
                  uint64_t v78 = sub_2505BD800();
                  if (__OFSUB__((int)v31, v78)) {
                    goto LABEL_269;
                  }
                  v77 += (int)v31 - v78;
                }
                a1 = v159;
                uint64_t v79 = sub_2505BD7F0();
                if (v79 >= (v31 >> 32) - (int)v31) {
                  size_t v80 = (v31 >> 32) - (int)v31;
                }
                else {
                  size_t v80 = v79;
                }
                if (!v156) {
                  goto LABEL_292;
                }
                if (!v77) {
                  goto LABEL_293;
                }
                int v68 = memcmp(v156, v77, v80);
                sub_250511528(v31, v32);
              }
              else
              {
                uint64_t v98 = *(void *)(v31 + 16);
                uint64_t v97 = *(void *)(v31 + 24);
                swift_retain();
                swift_retain();
                uint64_t v99 = (char *)sub_2505BD7D0();
                if (v99)
                {
                  uint64_t v100 = sub_2505BD800();
                  if (__OFSUB__(v98, v100)) {
                    goto LABEL_268;
                  }
                  v99 += v98 - v100;
                }
                BOOL v36 = __OFSUB__(v97, v98);
                int64_t v101 = v97 - v98;
                if (v36) {
                  goto LABEL_262;
                }
                uint64_t v102 = sub_2505BD7F0();
                if (v102 >= v101) {
                  size_t v103 = v101;
                }
                else {
                  size_t v103 = v102;
                }
                if (!v156) {
                  goto LABEL_300;
                }
                a1 = v159;
                if (!v99) {
                  goto LABEL_301;
                }
                int v68 = memcmp(v156, v99, v103);
                swift_release();
                swift_release();
              }
            }
            else
            {
              *(void *)__s1 = v31;
              *(_WORD *)&__s1[8] = v32;
              __s1[10] = BYTE2(v32);
              __s1[11] = BYTE3(v32);
              __s1[12] = BYTE4(v32);
              __s1[13] = BYTE5(v32);
              if (!v156) {
                goto LABEL_299;
              }
              int v68 = memcmp(v156, __s1, BYTE6(v32));
            }
            sub_250511528(v26, v28);
            goto LABEL_149;
          case 2uLL:
            uint64_t v61 = *(void *)(v26 + 16);
            swift_retain();
            swift_retain();
            int64_t v62 = (char *)sub_2505BD7D0();
            uint64_t v156 = (char *)(v28 & 0x3FFFFFFFFFFFFFFFLL);
            if (!v62) {
              goto LABEL_66;
            }
            uint64_t v63 = sub_2505BD800();
            if (__OFSUB__(v61, v63)) {
              goto LABEL_251;
            }
            v62 += v61 - v63;
LABEL_66:
            sub_2505BD7F0();
            a1 = v159;
            if (!v37)
            {
              *(void *)__s1 = v31;
              *(_WORD *)&__s1[8] = v32;
              __s1[10] = BYTE2(v32);
              __s1[11] = BYTE3(v32);
              __s1[12] = BYTE4(v32);
              __s1[13] = BYTE5(v32);
              if (!v62) {
                goto LABEL_296;
              }
              int v68 = memcmp(v62, __s1, BYTE6(v32));
LABEL_124:
              swift_release();
              goto LABEL_135;
            }
            uint64_t v154 = v62;
            if (v37 == 1)
            {
              if (v31 >> 32 < (int)v31) {
                goto LABEL_255;
              }
              swift_retain();
              size_t v64 = (char *)sub_2505BD7D0();
              if (v64)
              {
                uint64_t v65 = sub_2505BD800();
                if (__OFSUB__((int)v31, v65)) {
                  goto LABEL_267;
                }
                v64 += (int)v31 - v65;
              }
              a1 = v159;
              uint64_t v66 = sub_2505BD7F0();
              if (v66 >= (v31 >> 32) - (int)v31) {
                size_t v67 = (v31 >> 32) - (int)v31;
              }
              else {
                size_t v67 = v66;
              }
              if (!v154) {
                goto LABEL_289;
              }
              if (!v64) {
                goto LABEL_290;
              }
              int v68 = memcmp(v154, v64, v67);
              sub_250511528(v31, v32);
              goto LABEL_124;
            }
            uint64_t v91 = *(void *)(v31 + 16);
            uint64_t v153 = *(void *)(v31 + 24);
            swift_retain();
            swift_retain();
            char v92 = (char *)sub_2505BD7D0();
            if (v92)
            {
              uint64_t v93 = sub_2505BD800();
              if (__OFSUB__(v91, v93)) {
                goto LABEL_266;
              }
              v92 += v91 - v93;
            }
            BOOL v36 = __OFSUB__(v153, v91);
            int64_t v94 = v153 - v91;
            if (v36) {
              goto LABEL_260;
            }
            uint64_t v95 = sub_2505BD7F0();
            if (v95 >= v94) {
              size_t v96 = v94;
            }
            else {
              size_t v96 = v95;
            }
            if (!v154) {
              goto LABEL_297;
            }
            if (!v92) {
              goto LABEL_298;
            }
            int v68 = memcmp(v154, v92, v96);
            swift_release();
            swift_release();
            swift_release();
LABEL_135:
            swift_release();
LABEL_149:
            sub_250511528(v31, v32);
            sub_250511528(v26, v28);
            if (v68) {
              goto LABEL_12;
            }
LABEL_36:
            uint64_t v26 = sub_2505BDF60();
            unint64_t v28 = v46;
            uint64_t v47 = sub_2505BDF60();
            uint64_t v31 = v47;
            unint64_t v32 = v48;
            uint64_t v49 = 0;
            switch(v28 >> 62)
            {
              case 1uLL:
                LODWORD(v49) = HIDWORD(v26) - v26;
                if (__OFSUB__(HIDWORD(v26), v26)) {
                  goto LABEL_246;
                }
                uint64_t v49 = (int)v49;
                break;
              case 2uLL:
                uint64_t v51 = *(void *)(v26 + 16);
                uint64_t v50 = *(void *)(v26 + 24);
                BOOL v36 = __OFSUB__(v50, v51);
                uint64_t v49 = v50 - v51;
                if (!v36) {
                  break;
                }
                goto LABEL_247;
              case 3uLL:
                break;
              default:
                uint64_t v49 = BYTE6(v28);
                break;
            }
            unint64_t v52 = v48 >> 62;
            switch(v48 >> 62)
            {
              case 1uLL:
                if (__OFSUB__(HIDWORD(v47), v47)) {
                  goto LABEL_249;
                }
                if (v49 == HIDWORD(v47) - v47) {
                  goto LABEL_51;
                }
                goto LABEL_11;
              case 2uLL:
                uint64_t v54 = *(void *)(v47 + 16);
                uint64_t v53 = *(void *)(v47 + 24);
                BOOL v36 = __OFSUB__(v53, v54);
                uint64_t v55 = v53 - v54;
                if (v36) {
                  goto LABEL_248;
                }
                if (v49 != v55) {
                  goto LABEL_11;
                }
LABEL_51:
                if (v49 >= 1)
                {
                  switch(v28 >> 62)
                  {
                    case 1uLL:
                      if ((int)v26 > v26 >> 32) {
                        goto LABEL_263;
                      }
                      sub_2504DBC4C(v26, v28);
                      uint64_t v112 = (char *)sub_2505BD7D0();
                      if (!v112) {
                        goto LABEL_170;
                      }
                      uint64_t v113 = sub_2505BD800();
                      if (__OFSUB__((int)v26, v113)) {
                        goto LABEL_271;
                      }
                      v112 += (int)v26 - v113;
LABEL_170:
                      a1 = v159;
                      sub_2505BD7F0();
                      if (!v52)
                      {
                        *(void *)__s1 = v31;
                        *(_WORD *)&__s1[8] = v32;
                        __s1[10] = BYTE2(v32);
                        __s1[11] = BYTE3(v32);
                        __s1[12] = BYTE4(v32);
                        __s1[13] = BYTE5(v32);
                        if (!v112) {
                          goto LABEL_313;
                        }
                        int v111 = memcmp(v112, __s1, BYTE6(v32));
                        sub_250511528(v26, v28);
LABEL_223:
                        sub_250511528(v31, v32);
                        sub_250511528(v26, v28);
                        if (v111) {
                          goto LABEL_12;
                        }
                        goto LABEL_61;
                      }
                      if (v52 == 1)
                      {
                        uint64_t v156 = v112;
                        if (v31 >> 32 < (int)v31) {
                          goto LABEL_280;
                        }
                        swift_retain();
                        uint64_t v114 = (char *)sub_2505BD7D0();
                        if (v114)
                        {
                          uint64_t v115 = sub_2505BD800();
                          if (__OFSUB__((int)v31, v115)) {
                            goto LABEL_287;
                          }
                          v114 += (int)v31 - v115;
                        }
                        uint64_t v116 = v156;
                        uint64_t v117 = sub_2505BD7F0();
                        if (v117 >= (v31 >> 32) - (int)v31) {
                          size_t v118 = (v31 >> 32) - (int)v31;
                        }
                        else {
                          size_t v118 = v117;
                        }
                        if (!v116) {
                          goto LABEL_309;
                        }
                        if (!v114) {
                          goto LABEL_310;
                        }
                        int v119 = memcmp(v116, v114, v118);
                        sub_250511528(v31, v32);
                      }
                      else
                      {
                        uint64_t v140 = *(void *)(v31 + 16);
                        uint64_t v156 = *(char **)(v31 + 24);
                        swift_retain();
                        swift_retain();
                        size_t v141 = (char *)sub_2505BD7D0();
                        if (v141)
                        {
                          uint64_t v142 = sub_2505BD800();
                          uint64_t v143 = v140 - v142;
                          if (__OFSUB__(v140, v142)) {
                            goto LABEL_285;
                          }
                          uint64_t v144 = v140;
                          uint64_t v145 = v112;
                          v141 += v143;
                        }
                        else
                        {
                          uint64_t v144 = v140;
                          uint64_t v145 = v112;
                        }
                        uint64_t v146 = &v156[-v144];
                        if (__OFSUB__(v156, v144)) {
                          goto LABEL_281;
                        }
                        uint64_t v147 = sub_2505BD7F0();
                        if (v147 >= (uint64_t)v146) {
                          size_t v148 = (size_t)v146;
                        }
                        else {
                          size_t v148 = v147;
                        }
                        if (!v145) {
                          goto LABEL_314;
                        }
                        if (!v141) {
                          goto LABEL_315;
                        }
                        int v119 = memcmp(v145, v141, v148);
                        swift_release();
                        swift_release();
                      }
                      sub_250511528(v26, v28);
                      goto LABEL_237;
                    case 2uLL:
                      uint64_t v104 = *(void *)(v26 + 16);
                      swift_retain();
                      swift_retain();
                      uint64_t v105 = (char *)sub_2505BD7D0();
                      uint64_t v156 = (char *)(v28 & 0x3FFFFFFFFFFFFFFFLL);
                      if (!v105) {
                        goto LABEL_154;
                      }
                      uint64_t v106 = sub_2505BD800();
                      if (__OFSUB__(v104, v106)) {
                        goto LABEL_270;
                      }
                      v105 += v104 - v106;
LABEL_154:
                      a1 = v159;
                      sub_2505BD7F0();
                      if (v52)
                      {
                        uint64_t v154 = v105;
                        if (v52 != 1)
                        {
                          uint64_t v134 = *(void *)(v31 + 16);
                          uint64_t v153 = *(void *)(v31 + 24);
                          swift_retain();
                          swift_retain();
                          uint64_t v135 = (char *)sub_2505BD7D0();
                          if (v135)
                          {
                            uint64_t v136 = sub_2505BD800();
                            if (__OFSUB__(v134, v136)) {
                              goto LABEL_284;
                            }
                            v135 += v134 - v136;
                          }
                          BOOL v36 = __OFSUB__(v153, v134);
                          int64_t v137 = v153 - v134;
                          if (v36) {
                            goto LABEL_279;
                          }
                          uint64_t v138 = sub_2505BD7F0();
                          if (v138 >= v137) {
                            size_t v139 = v137;
                          }
                          else {
                            size_t v139 = v138;
                          }
                          if (!v154) {
                            goto LABEL_306;
                          }
                          if (!v135) {
                            goto LABEL_307;
                          }
                          int v111 = memcmp(v154, v135, v139);
                          swift_release();
                          swift_release();
                          swift_release();
                          goto LABEL_220;
                        }
                        if (v31 >> 32 < (int)v31) {
                          goto LABEL_275;
                        }
                        swift_retain();
                        uint64_t v107 = (char *)sub_2505BD7D0();
                        if (v107)
                        {
                          uint64_t v108 = sub_2505BD800();
                          if (__OFSUB__((int)v31, v108)) {
                            goto LABEL_286;
                          }
                          v107 += (int)v31 - v108;
                        }
                        a1 = v159;
                        uint64_t v109 = sub_2505BD7F0();
                        if (v109 >= (v31 >> 32) - (int)v31) {
                          size_t v110 = (v31 >> 32) - (int)v31;
                        }
                        else {
                          size_t v110 = v109;
                        }
                        if (!v154) {
                          goto LABEL_302;
                        }
                        if (!v107) {
                          goto LABEL_303;
                        }
                        int v111 = memcmp(v154, v107, v110);
                        sub_250511528(v31, v32);
                      }
                      else
                      {
                        *(void *)__s1 = v31;
                        *(_WORD *)&__s1[8] = v32;
                        __s1[10] = BYTE2(v32);
                        __s1[11] = BYTE3(v32);
                        __s1[12] = BYTE4(v32);
                        __s1[13] = BYTE5(v32);
                        if (!v105) {
                          goto LABEL_312;
                        }
                        int v111 = memcmp(v105, __s1, BYTE6(v32));
                      }
                      swift_release();
LABEL_220:
                      swift_release();
                      goto LABEL_223;
                    case 3uLL:
                      *(void *)&__s1[6] = 0;
                      *(void *)__s1 = 0;
                      if (!v52) {
                        goto LABEL_191;
                      }
                      if (v52 == 1)
                      {
                        uint64_t v56 = (v47 >> 32) - (int)v47;
                        if (v47 >> 32 < (int)v47) {
                          goto LABEL_272;
                        }
                        uint64_t v120 = sub_2505BD7D0();
                        if (!v120) {
                          goto LABEL_304;
                        }
                        uint64_t v58 = v120;
                        uint64_t v121 = sub_2505BD800();
                        uint64_t v60 = (int)v31 - v121;
                        if (__OFSUB__((int)v31, v121)) {
                          goto LABEL_277;
                        }
                        goto LABEL_187;
                      }
                      uint64_t v130 = *(void *)(v47 + 16);
                      uint64_t v131 = *(void *)(v47 + 24);
                      swift_retain();
                      swift_retain();
                      size_t v126 = (char *)sub_2505BD7D0();
                      if (v126)
                      {
                        uint64_t v132 = sub_2505BD800();
                        if (__OFSUB__(v130, v132)) {
                          goto LABEL_283;
                        }
                        v126 += v130 - v132;
                      }
                      BOOL v36 = __OFSUB__(v131, v130);
                      int64_t v128 = v131 - v130;
                      if (v36) {
                        goto LABEL_276;
                      }
                      uint64_t v129 = sub_2505BD7F0();
                      if (!v126) {
                        goto LABEL_305;
                      }
                      break;
                    default:
                      *(void *)__s1 = v26;
                      *(_WORD *)&__s1[8] = v28;
                      __s1[10] = BYTE2(v28);
                      __s1[11] = BYTE3(v28);
                      __s1[12] = BYTE4(v28);
                      __s1[13] = BYTE5(v28);
                      if (!v52)
                      {
LABEL_191:
                        uint64_t __s2 = v47;
                        __int16 v167 = v48;
                        char v168 = BYTE2(v48);
                        char v169 = BYTE3(v48);
                        char v170 = BYTE4(v48);
                        char v171 = BYTE5(v48);
                        int v111 = memcmp(__s1, &__s2, BYTE6(v48));
                        goto LABEL_223;
                      }
                      if (v52 == 1)
                      {
                        uint64_t v56 = (v47 >> 32) - (int)v47;
                        if (v47 >> 32 < (int)v47) {
                          goto LABEL_273;
                        }
                        uint64_t v57 = sub_2505BD7D0();
                        if (!v57) {
                          goto LABEL_308;
                        }
                        uint64_t v58 = v57;
                        uint64_t v59 = sub_2505BD800();
                        uint64_t v60 = (int)v31 - v59;
                        if (__OFSUB__((int)v31, v59)) {
                          goto LABEL_278;
                        }
LABEL_187:
                        uint64_t v122 = sub_2505BD7F0();
                        if (v122 >= v56) {
                          size_t v123 = v56;
                        }
                        else {
                          size_t v123 = v122;
                        }
                        int v119 = memcmp(__s1, (const void *)(v58 + v60), v123);
                        goto LABEL_237;
                      }
                      uint64_t v124 = *(void *)(v47 + 16);
                      uint64_t v125 = *(void *)(v47 + 24);
                      swift_retain();
                      swift_retain();
                      size_t v126 = (char *)sub_2505BD7D0();
                      if (v126)
                      {
                        uint64_t v127 = sub_2505BD800();
                        if (__OFSUB__(v124, v127)) {
                          goto LABEL_282;
                        }
                        v126 += v124 - v127;
                      }
                      BOOL v36 = __OFSUB__(v125, v124);
                      int64_t v128 = v125 - v124;
                      if (v36) {
                        goto LABEL_274;
                      }
                      uint64_t v129 = sub_2505BD7F0();
                      if (!v126) {
                        goto LABEL_311;
                      }
                      break;
                  }
                  if (v129 >= v128) {
                    size_t v133 = v128;
                  }
                  else {
                    size_t v133 = v129;
                  }
                  int v119 = memcmp(__s1, v126, v133);
                  swift_release();
                  swift_release();
LABEL_237:
                  sub_250511528(v31, v32);
                  sub_250511528(v26, v28);
                  a1 = v159;
                  if (v119) {
                    goto LABEL_12;
                  }
                  goto LABEL_61;
                }
LABEL_60:
                sub_250511528(v47, v48);
                sub_250511528(v26, v28);
LABEL_61:
                if (v13[*(int *)(v161 + 24)] == *(unsigned char *)(a1 + v155)) {
                  goto LABEL_316;
                }
LABEL_12:
                sub_2505ADEA4((uint64_t)v13);
                a2 = (a2 + 1) & v162;
                if (((*(void *)(v164 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
                  goto LABEL_239;
                }
                break;
              case 3uLL:
                if (!v49) {
                  goto LABEL_60;
                }
                goto LABEL_11;
              default:
                if (v49 == BYTE6(v48)) {
                  goto LABEL_51;
                }
                goto LABEL_11;
            }
            break;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            if (!v37) {
              goto LABEL_91;
            }
            if (v37 == 1)
            {
              uint64_t v41 = (v29 >> 32) - (int)v29;
              if (v29 >> 32 < (int)v29) {
                goto LABEL_254;
              }
              uint64_t v69 = sub_2505BD7D0();
              if (!v69) {
                goto LABEL_291;
              }
              uint64_t v43 = v69;
              uint64_t v70 = sub_2505BD800();
              uint64_t v45 = (int)v31 - v70;
              if (__OFSUB__((int)v31, v70)) {
                goto LABEL_259;
              }
              goto LABEL_83;
            }
            uint64_t v81 = *(void *)(v29 + 16);
            uint64_t v82 = *(void *)(v29 + 24);
            swift_retain();
            swift_retain();
            uint64_t v83 = (char *)sub_2505BD7D0();
            if (v83)
            {
              uint64_t v84 = sub_2505BD800();
              if (__OFSUB__(v81, v84)) {
                goto LABEL_264;
              }
              v83 += v81 - v84;
            }
            BOOL v36 = __OFSUB__(v82, v81);
            int64_t v85 = v82 - v81;
            if (v36) {
              goto LABEL_256;
            }
            uint64_t v86 = sub_2505BD7F0();
            if (!v83) {
              goto LABEL_295;
            }
            goto LABEL_116;
          default:
            *(void *)__s1 = v26;
            *(_WORD *)&__s1[8] = v28;
            __s1[10] = BYTE2(v28);
            __s1[11] = BYTE3(v28);
            __s1[12] = BYTE4(v28);
            __s1[13] = BYTE5(v28);
            if (v37)
            {
              if (v37 == 1)
              {
                uint64_t v41 = (v29 >> 32) - (int)v29;
                if (v29 >> 32 < (int)v29) {
                  goto LABEL_253;
                }
                uint64_t v42 = sub_2505BD7D0();
                if (!v42)
                {
                  sub_2505BD7F0();
                  __break(1u);
LABEL_289:
                  __break(1u);
LABEL_290:
                  __break(1u);
LABEL_291:
                  sub_2505BD7F0();
                  __break(1u);
LABEL_292:
                  __break(1u);
LABEL_293:
                  __break(1u);
LABEL_294:
                  __break(1u);
LABEL_295:
                  __break(1u);
LABEL_296:
                  __break(1u);
LABEL_297:
                  __break(1u);
LABEL_298:
                  __break(1u);
LABEL_299:
                  __break(1u);
LABEL_300:
                  __break(1u);
LABEL_301:
                  __break(1u);
LABEL_302:
                  __break(1u);
LABEL_303:
                  __break(1u);
LABEL_304:
                  sub_2505BD7F0();
                  __break(1u);
LABEL_305:
                  __break(1u);
LABEL_306:
                  __break(1u);
LABEL_307:
                  __break(1u);
LABEL_308:
                  sub_2505BD7F0();
                  __break(1u);
LABEL_309:
                  __break(1u);
LABEL_310:
                  __break(1u);
LABEL_311:
                  __break(1u);
LABEL_312:
                  __break(1u);
LABEL_313:
                  __break(1u);
LABEL_314:
                  __break(1u);
LABEL_315:
                  __break(1u);
LABEL_316:
                  sub_2505ADEA4((uint64_t)v13);
                  sub_2505BE7D0();
                  __break(1u);
                  JUMPOUT(0x2505AB48CLL);
                }
                uint64_t v43 = v42;
                uint64_t v44 = sub_2505BD800();
                uint64_t v45 = (int)v31 - v44;
                if (__OFSUB__((int)v31, v44)) {
                  goto LABEL_258;
                }
LABEL_83:
                uint64_t v71 = sub_2505BD7F0();
                if (v71 >= v41) {
                  size_t v72 = v41;
                }
                else {
                  size_t v72 = v71;
                }
                int v73 = memcmp(__s1, (const void *)(v43 + v45), v72);
              }
              else
              {
                uint64_t v87 = *(void *)(v29 + 16);
                uint64_t v88 = *(void *)(v29 + 24);
                swift_retain();
                swift_retain();
                uint64_t v83 = (char *)sub_2505BD7D0();
                if (v83)
                {
                  uint64_t v89 = sub_2505BD800();
                  if (__OFSUB__(v87, v89)) {
                    goto LABEL_265;
                  }
                  v83 += v87 - v89;
                }
                BOOL v36 = __OFSUB__(v88, v87);
                int64_t v85 = v88 - v87;
                if (v36) {
                  goto LABEL_257;
                }
                uint64_t v86 = sub_2505BD7F0();
                if (!v83) {
                  goto LABEL_294;
                }
LABEL_116:
                if (v86 >= v85) {
                  size_t v90 = v85;
                }
                else {
                  size_t v90 = v86;
                }
                int v73 = memcmp(__s1, v83, v90);
                swift_release();
                swift_release();
              }
              sub_250511528(v31, v32);
              sub_250511528(v26, v28);
              a1 = v159;
              if (v73) {
                goto LABEL_12;
              }
              goto LABEL_36;
            }
LABEL_91:
            uint64_t __s2 = v29;
            __int16 v167 = v30;
            char v168 = BYTE2(v30);
            char v169 = BYTE3(v30);
            char v170 = BYTE4(v30);
            char v171 = BYTE5(v30);
            int v68 = memcmp(__s1, &__s2, BYTE6(v30));
            goto LABEL_149;
        }
      }
    }
  }
LABEL_239:
  uint64_t v149 = *v158;
  *(void *)(*v158 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_2505ADF00(a1, *(void *)(v149 + 48) + *(void *)(v157 + 72) * a2);
  uint64_t v151 = *(void *)(v149 + 16);
  BOOL v36 = __OFADD__(v151, 1);
  uint64_t v152 = v151 + 1;
  if (v36)
  {
LABEL_245:
    __break(1u);
LABEL_246:
    __break(1u);
LABEL_247:
    __break(1u);
LABEL_248:
    __break(1u);
LABEL_249:
    __break(1u);
LABEL_250:
    __break(1u);
LABEL_251:
    __break(1u);
LABEL_252:
    __break(1u);
LABEL_253:
    __break(1u);
LABEL_254:
    __break(1u);
LABEL_255:
    __break(1u);
LABEL_256:
    __break(1u);
LABEL_257:
    __break(1u);
LABEL_258:
    __break(1u);
LABEL_259:
    __break(1u);
LABEL_260:
    __break(1u);
LABEL_261:
    __break(1u);
LABEL_262:
    __break(1u);
LABEL_263:
    __break(1u);
LABEL_264:
    __break(1u);
LABEL_265:
    __break(1u);
LABEL_266:
    __break(1u);
LABEL_267:
    __break(1u);
LABEL_268:
    __break(1u);
LABEL_269:
    __break(1u);
LABEL_270:
    __break(1u);
LABEL_271:
    __break(1u);
LABEL_272:
    __break(1u);
LABEL_273:
    __break(1u);
LABEL_274:
    __break(1u);
LABEL_275:
    __break(1u);
LABEL_276:
    __break(1u);
LABEL_277:
    __break(1u);
LABEL_278:
    __break(1u);
LABEL_279:
    __break(1u);
LABEL_280:
    __break(1u);
LABEL_281:
    __break(1u);
LABEL_282:
    __break(1u);
LABEL_283:
    __break(1u);
LABEL_284:
    __break(1u);
LABEL_285:
    __break(1u);
LABEL_286:
    __break(1u);
LABEL_287:
    __break(1u);
  }
  *(void *)(v149 + 16) = v152;
  return result;
}

uint64_t sub_2505AB4EC(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  uint64_t v94 = *MEMORY[0x263EF8340];
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_2505A9E18();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (uint64_t)sub_2505AC1A8();
        goto LABEL_123;
      }
      sub_2505AC704();
    }
    uint64_t v11 = *v4;
    sub_2505BE850();
    sub_2504DBC4C(v8, a2);
    sub_2505BD950();
    sub_250511528(v8, a2);
    uint64_t result = sub_2505BE880();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    uint64_t v13 = v11 + 56;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v86 = ~v12;
      uint64_t v82 = v11;
      uint64_t v84 = v11 + 56;
      BOOL v14 = __OFSUB__(HIDWORD(v8), v8);
      BOOL v83 = v14;
      unint64_t v85 = a2 >> 62;
      uint64_t v80 = (v8 >> 32) - (int)v8;
      uint64_t v81 = v8 >> 32;
      uint64_t v79 = v4;
      while (1)
      {
        unint64_t v15 = (uint64_t *)(*(void *)(v11 + 48) + 16 * a3);
        uint64_t v17 = *v15;
        unint64_t v16 = v15[1];
        uint64_t v18 = 0;
        switch(v16 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v17), v17))
            {
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
            }
            uint64_t v18 = HIDWORD(v17) - (int)v17;
LABEL_21:
            sub_2504DBC4C(v17, v16);
LABEL_22:
            uint64_t v21 = BYTE6(a2);
            switch(a2 >> 62)
            {
              case 1uLL:
                uint64_t v21 = HIDWORD(v8) - (int)v8;
                if (v83) {
                  goto LABEL_127;
                }
                goto LABEL_26;
              case 2uLL:
                uint64_t v23 = *(void *)(v8 + 16);
                uint64_t v22 = *(void *)(v8 + 24);
                BOOL v24 = __OFSUB__(v22, v23);
                uint64_t v21 = v22 - v23;
                if (!v24) {
                  goto LABEL_26;
                }
                goto LABEL_128;
              case 3uLL:
                if (v18) {
                  goto LABEL_14;
                }
                goto LABEL_163;
              default:
LABEL_26:
                if (v18 != v21)
                {
LABEL_14:
                  uint64_t result = sub_250511528(v17, v16);
                  goto LABEL_15;
                }
                if (v18 < 1) {
                  goto LABEL_163;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v20 = *(void *)(v17 + 16);
            uint64_t v19 = *(void *)(v17 + 24);
            uint64_t v18 = v19 - v20;
            if (!__OFSUB__(v19, v20)) {
              goto LABEL_21;
            }
            goto LABEL_126;
          case 3uLL:
            goto LABEL_22;
          default:
            uint64_t v18 = BYTE6(v16);
            goto LABEL_22;
        }
        switch(v16 >> 62)
        {
          case 1uLL:
            if ((int)v17 > v17 >> 32) {
              goto LABEL_130;
            }
            sub_2504DBC4C(v17, v16);
            uint64_t v43 = (char *)sub_2505BD7D0();
            if (!v43) {
              goto LABEL_63;
            }
            uint64_t v44 = sub_2505BD800();
            if (__OFSUB__((int)v17, v44)) {
              goto LABEL_132;
            }
            v43 += (int)v17 - v44;
LABEL_63:
            sub_2505BD7F0();
            uint64_t v13 = v84;
            if (!v85)
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v43) {
                goto LABEL_158;
              }
              int v49 = memcmp(v43, __s1, BYTE6(a2));
              sub_250511528(v17, v16);
LABEL_106:
              uint64_t result = sub_250511528(v17, v16);
              if (!v49) {
                goto LABEL_164;
              }
              goto LABEL_15;
            }
            if (v85 == 1)
            {
              if (v81 < (int)v8) {
                goto LABEL_141;
              }
              swift_retain();
              uint64_t v45 = (char *)sub_2505BD7D0();
              if (v45)
              {
                uint64_t v46 = sub_2505BD800();
                if (__OFSUB__((int)v8, v46)) {
                  goto LABEL_148;
                }
                v45 += (int)v8 - v46;
              }
              uint64_t v47 = sub_2505BD7F0();
              size_t v48 = (v8 >> 32) - (int)v8;
              if (v47 < v80) {
                size_t v48 = v47;
              }
              if (!v43) {
                goto LABEL_153;
              }
              if (!v45) {
                goto LABEL_154;
              }
              int v36 = memcmp(v43, v45, v48);
              sub_250511528(v8, a2);
            }
            else
            {
              uint64_t v67 = *(void *)(v8 + 16);
              uint64_t v68 = *(void *)(v8 + 24);
              swift_retain();
              swift_retain();
              uint64_t v69 = (char *)sub_2505BD7D0();
              if (v69)
              {
                uint64_t v70 = sub_2505BD800();
                if (__OFSUB__(v67, v70)) {
                  goto LABEL_147;
                }
                v69 += v67 - v70;
              }
              BOOL v24 = __OFSUB__(v68, v67);
              int64_t v71 = v68 - v67;
              if (v24) {
                goto LABEL_142;
              }
              uint64_t v72 = sub_2505BD7F0();
              if (v72 >= v71) {
                size_t v73 = v71;
              }
              else {
                size_t v73 = v72;
              }
              uint64_t v5 = v79;
              if (!v43) {
                goto LABEL_161;
              }
              uint64_t v11 = v82;
              if (!v69) {
                goto LABEL_162;
              }
              int v36 = memcmp(v43, v69, v73);
              swift_release();
              swift_release();
            }
            uint64_t v41 = v17;
            unint64_t v42 = v16;
            goto LABEL_119;
          case 2uLL:
            uint64_t v29 = *(void *)(v17 + 16);
            swift_retain();
            swift_retain();
            unint64_t v30 = (char *)sub_2505BD7D0();
            if (!v30) {
              goto LABEL_39;
            }
            uint64_t v31 = sub_2505BD800();
            if (__OFSUB__(v29, v31)) {
              goto LABEL_131;
            }
            v30 += v29 - v31;
LABEL_39:
            sub_2505BD7F0();
            uint64_t v11 = v82;
            if (!v85)
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v30) {
                goto LABEL_157;
              }
              int v36 = memcmp(v30, __s1, BYTE6(a2));
              swift_release();
              swift_release();
              goto LABEL_120;
            }
            if (v85 == 1)
            {
              if (v81 < (int)v8) {
                goto LABEL_135;
              }
              swift_retain();
              unint64_t v32 = (char *)sub_2505BD7D0();
              if (v32)
              {
                uint64_t v33 = sub_2505BD800();
                if (__OFSUB__((int)v8, v33)) {
                  goto LABEL_146;
                }
                v32 += (int)v8 - v33;
              }
              uint64_t v34 = sub_2505BD7F0();
              size_t v35 = (v8 >> 32) - (int)v8;
              if (v34 < v80) {
                size_t v35 = v34;
              }
              if (!v30) {
                goto LABEL_150;
              }
              if (!v32) {
                goto LABEL_151;
              }
              int v36 = memcmp(v30, v32, v35);
              sub_250511528(v8, a2);
              swift_release();
            }
            else
            {
              uint64_t v61 = *(void *)(v8 + 16);
              uint64_t v78 = *(void *)(v8 + 24);
              swift_retain();
              swift_retain();
              int64_t v62 = (char *)sub_2505BD7D0();
              if (v62)
              {
                uint64_t v63 = sub_2505BD800();
                if (__OFSUB__(v61, v63)) {
                  goto LABEL_145;
                }
                v62 += v61 - v63;
              }
              BOOL v24 = __OFSUB__(v78, v61);
              int64_t v64 = v78 - v61;
              if (v24) {
                goto LABEL_140;
              }
              uint64_t v65 = sub_2505BD7F0();
              if (v65 >= v64) {
                size_t v66 = v64;
              }
              else {
                size_t v66 = v65;
              }
              if (!v30) {
                goto LABEL_159;
              }
              uint64_t v11 = v82;
              if (!v62) {
                goto LABEL_160;
              }
              int v36 = memcmp(v30, v62, v66);
              swift_release();
              swift_release();
              swift_release();
            }
            swift_release();
            uint64_t result = sub_250511528(v17, v16);
            uint64_t v5 = v79;
            goto LABEL_121;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            if (!v85) {
              goto LABEL_74;
            }
            if (v85 == 1)
            {
              if (v81 < (int)v8) {
                goto LABEL_134;
              }
              sub_2504DBC4C(v8, a2);
              uint64_t v37 = sub_2505BD7D0();
              if (!v37) {
                goto LABEL_152;
              }
              uint64_t v26 = v37;
              uint64_t v38 = sub_2505BD800();
              uint64_t v28 = (int)v8 - v38;
              if (__OFSUB__((int)v8, v38)) {
                goto LABEL_139;
              }
LABEL_55:
              uint64_t v39 = sub_2505BD7F0();
              if (v39 >= v80) {
                size_t v40 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v40 = v39;
              }
              int v36 = memcmp(__s1, (const void *)(v26 + v28), v40);
              uint64_t v41 = v8;
              unint64_t v42 = a2;
LABEL_119:
              sub_250511528(v41, v42);
LABEL_120:
              uint64_t result = sub_250511528(v17, v16);
LABEL_121:
              uint64_t v13 = v84;
              if (!v36) {
                goto LABEL_164;
              }
              goto LABEL_15;
            }
            uint64_t v56 = *(void *)(v8 + 16);
            uint64_t v57 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            unint64_t v52 = (char *)sub_2505BD7D0();
            if (v52)
            {
              uint64_t v58 = sub_2505BD800();
              if (__OFSUB__(v56, v58)) {
                goto LABEL_144;
              }
              v52 += v56 - v58;
            }
            BOOL v24 = __OFSUB__(v57, v56);
            int64_t v54 = v57 - v56;
            if (v24) {
              goto LABEL_137;
            }
            uint64_t v55 = sub_2505BD7F0();
            uint64_t v11 = v82;
            if (!v52) {
              goto LABEL_156;
            }
LABEL_86:
            if (v55 >= v54) {
              size_t v59 = v54;
            }
            else {
              size_t v59 = v55;
            }
            int v60 = memcmp(__s1, v52, v59);
            swift_release();
            swift_release();
            uint64_t result = sub_250511528(v17, v16);
            uint64_t v13 = v84;
            if (!v60) {
              goto LABEL_164;
            }
LABEL_15:
            a3 = (a3 + 1) & v86;
            if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
              goto LABEL_123;
            }
            break;
          default:
            *(void *)__s1 = v17;
            *(_WORD *)&__s1[8] = v16;
            __s1[10] = BYTE2(v16);
            __s1[11] = BYTE3(v16);
            __s1[12] = BYTE4(v16);
            __s1[13] = BYTE5(v16);
            if (!v85)
            {
LABEL_74:
              uint64_t __s2 = v8;
              __int16 v88 = a2;
              char v89 = BYTE2(a2);
              char v90 = BYTE3(a2);
              char v91 = BYTE4(a2);
              char v92 = BYTE5(a2);
              int v49 = memcmp(__s1, &__s2, BYTE6(a2));
              goto LABEL_106;
            }
            if (v85 == 1)
            {
              if (v81 < (int)v8) {
                goto LABEL_133;
              }
              sub_2504DBC4C(v8, a2);
              uint64_t v25 = sub_2505BD7D0();
              if (!v25)
              {
                sub_2505BD7F0();
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                sub_2505BD7F0();
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                sub_250511528(v17, v16);
LABEL_164:
                sub_2505BE7D0();
                __break(1u);
                JUMPOUT(0x2505ABF3CLL);
              }
              uint64_t v26 = v25;
              uint64_t v27 = sub_2505BD800();
              uint64_t v28 = (int)v8 - v27;
              if (__OFSUB__((int)v8, v27)) {
                goto LABEL_138;
              }
              goto LABEL_55;
            }
            uint64_t v50 = *(void *)(v8 + 16);
            uint64_t v51 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            unint64_t v52 = (char *)sub_2505BD7D0();
            if (v52)
            {
              uint64_t v53 = sub_2505BD800();
              if (__OFSUB__(v50, v53)) {
                goto LABEL_143;
              }
              v52 += v50 - v53;
            }
            BOOL v24 = __OFSUB__(v51, v50);
            int64_t v54 = v51 - v50;
            if (v24) {
              goto LABEL_136;
            }
            uint64_t v55 = sub_2505BD7F0();
            uint64_t v11 = v82;
            if (!v52) {
              goto LABEL_155;
            }
            goto LABEL_86;
        }
      }
    }
  }
LABEL_123:
  uint64_t v74 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v75 = (uint64_t *)(*(void *)(v74 + 48) + 16 * a3);
  *uint64_t v75 = v8;
  v75[1] = a2;
  uint64_t v76 = *(void *)(v74 + 16);
  BOOL v24 = __OFADD__(v76, 1);
  uint64_t v77 = v76 + 1;
  if (v24) {
    goto LABEL_129;
  }
  *(void *)(v74 + 16) = v77;
  return result;
}

void *sub_2505ABF6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SimPCSID(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v4, v5, v6, v7);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6CF8);
  uint64_t v10 = *v0;
  uint64_t v11 = sub_2505BE490();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v12;
    return result;
  }
  uint64_t result = (void *)(v11 + 56);
  uint64_t v14 = v10 + 56;
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v14 + 8 * v15) {
    uint64_t result = memmove(result, (const void *)(v10 + 56), 8 * v15);
  }
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v20) {
      goto LABEL_25;
    }
    unint64_t v25 = *(void *)(v14 + 8 * v24);
    ++v16;
    if (!v25)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v20) {
        goto LABEL_25;
      }
      unint64_t v25 = *(void *)(v14 + 8 * v16);
      if (!v25)
      {
        int64_t v16 = v24 + 2;
        if (v24 + 2 >= v20) {
          goto LABEL_25;
        }
        unint64_t v25 = *(void *)(v14 + 8 * v16);
        if (!v25) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_9:
    unint64_t v23 = *(void *)(v3 + 72) * v22;
    sub_2505ADE40(*(void *)(v10 + 48) + v23, (uint64_t)v9);
    uint64_t result = (void *)sub_2505ADF00((uint64_t)v9, *(void *)(v12 + 48) + v23);
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v20) {
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v26);
  if (v25)
  {
    int64_t v16 = v26;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v16 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_25;
    }
    unint64_t v25 = *(void *)(v14 + 8 * v16);
    ++v26;
    if (v25) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2505AC1A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2505BE490();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_2504DBC4C(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2505AC35C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SimPCSID(0);
  uint64_t v43 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6CF8);
  uint64_t v10 = sub_2505BE4A0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v11;
    return result;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 56);
  size_t v40 = v0;
  uint64_t v41 = v9 + 56;
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 56;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_24;
    }
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v22 >= v42) {
      goto LABEL_33;
    }
    unint64_t v23 = *(void *)(v41 + 8 * v22);
    ++v18;
    if (!v23)
    {
      int64_t v18 = v22 + 1;
      if (v22 + 1 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v41 + 8 * v18);
      if (!v23)
      {
        int64_t v18 = v22 + 2;
        if (v22 + 2 >= v42) {
          goto LABEL_33;
        }
        unint64_t v23 = *(void *)(v41 + 8 * v18);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
LABEL_24:
    uint64_t v25 = *(void *)(v43 + 72);
    sub_2505ADE40(*(void *)(v9 + 48) + v25 * v21, (uint64_t)v8);
    sub_2505BE850();
    uint64_t v26 = sub_2505BDF60();
    unint64_t v28 = v27;
    sub_2505BD950();
    sub_250511528(v26, v28);
    uint64_t v29 = sub_2505BDF60();
    unint64_t v31 = v30;
    sub_2505BD950();
    sub_250511528(v29, v31);
    sub_2505BE870();
    uint64_t result = sub_2505BE880();
    uint64_t v32 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = sub_2505ADF00((uint64_t)v8, *(void *)(v11 + 48) + v19 * v25);
    ++*(void *)(v11 + 16);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v42)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v40;
    goto LABEL_35;
  }
  unint64_t v23 = *(void *)(v41 + 8 * v24);
  if (v23)
  {
    int64_t v18 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v18 >= v42) {
      goto LABEL_33;
    }
    unint64_t v23 = *(void *)(v41 + 8 * v18);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2505AC704()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D10);
  uint64_t v3 = sub_2505BE4A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    sub_2505BE850();
    sub_2504DBC4C(v20, v21);
    sub_2504DBC4C(v20, v21);
    sub_2505BD950();
    sub_250511528(v20, v21);
    uint64_t result = sub_2505BE880();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2505AC9D0(long long *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SimPCSID(0);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  int64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12, v13, v14, v15);
  unint64_t v17 = (char *)v42 - v16;
  uint64_t v18 = *((void *)a1 + 8);
  long long v19 = a1[1];
  long long v45 = *a1;
  long long v46 = v19;
  long long v20 = a1[2];
  long long v21 = a1[3];
  v42[1] = a1;
  long long v47 = v20;
  long long v48 = v21;
  uint64_t v49 = v18;
  v42[2] = sub_2505BE880();
  uint64_t v22 = a2 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & *(void *)(a2 + 56);
  int64_t v26 = (unint64_t)(v23 + 63) >> 6;
  uint64_t v44 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  int64_t v29 = 0;
  while (1)
  {
    if (v25)
    {
      unint64_t v30 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v31 = v30 | (v29 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v29++, 1)) {
      goto LABEL_19;
    }
    if (v29 >= v26)
    {
LABEL_17:
      swift_release();
      return sub_2505BE860();
    }
    unint64_t v40 = *(void *)(v22 + 8 * v29);
    if (!v40) {
      break;
    }
LABEL_16:
    unint64_t v25 = (v40 - 1) & v40;
    unint64_t v31 = __clz(__rbit64(v40)) + (v29 << 6);
LABEL_5:
    sub_2505ADE40(*(void *)(v44 + 48) + *(void *)(v43 + 72) * v31, (uint64_t)v17);
    sub_2505ADF00((uint64_t)v17, (uint64_t)v11);
    sub_2505BE850();
    uint64_t v32 = sub_2505BDF60();
    unint64_t v34 = v33;
    sub_2505BD950();
    sub_250511528(v32, v34);
    uint64_t v35 = sub_2505BDF60();
    unint64_t v37 = v36;
    sub_2505BD950();
    sub_250511528(v35, v37);
    sub_2505BE870();
    uint64_t v38 = sub_2505BE880();
    uint64_t result = sub_2505ADEA4((uint64_t)v11);
    v28 ^= v38;
  }
  int64_t v41 = v29 + 1;
  if (v29 + 1 >= v26) {
    goto LABEL_17;
  }
  unint64_t v40 = *(void *)(v22 + 8 * v41);
  if (v40)
  {
    ++v29;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v29 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v29 >= v26) {
      goto LABEL_17;
    }
    unint64_t v40 = *(void *)(v22 + 8 * v29);
    ++v41;
    if (v40) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2505ACC78()
{
  return sub_2505ACD10(&qword_269AB6C50, 255, MEMORY[0x263F047A0]);
}

uint64_t sub_2505ACCC4()
{
  return sub_2505ACD10(qword_269AB6C58, 255, MEMORY[0x263F047C0]);
}

uint64_t sub_2505ACD10(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2505ACD58(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2505ACD80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for PCSID()
{
  return self;
}

uint64_t sub_2505ACDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_2505ACDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16)
                                                                                     + **(int **)(a6 + 16));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_250589AEC;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2505ACF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24)
                                                                                     + **(int **)(a6 + 24));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_250586C8C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2505AD044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t type metadata accessor for PCSIDSet()
{
  return self;
}

uint64_t type metadata accessor for SimPCSIDSet()
{
  return self;
}

uint64_t sub_2505AD0B4()
{
  return type metadata accessor for SimPCSBag(0);
}

uint64_t type metadata accessor for SimPCSBag(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB6C80);
}

uint64_t sub_2505AD0DC()
{
  uint64_t result = type metadata accessor for SimPCSID(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SimPCSID(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB6C90);
}

void *sub_2505AD198(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2505BE000();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2505BDF90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_2505AD2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BDF90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2505AD380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BDF90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2505AD44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BDF90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2505AD518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2505BDF90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2505AD5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2505AD5F8);
}

uint64_t sub_2505AD5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2505BE000();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_2505BDF90();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2505AD71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2505AD730);
}

uint64_t sub_2505AD730(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2505BE000();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_2505BDF90();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2505AD840()
{
  uint64_t result = sub_2505BE000();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2505BDF90();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2505AD910()
{
  return sub_2505ACD10(&qword_269AB6CA0, 255, (void (*)(uint64_t))type metadata accessor for SimPCSID);
}

uint64_t sub_2505AD95C()
{
  return sub_2505ACD10((unint64_t *)&unk_269AB6CA8, 255, (void (*)(uint64_t))type metadata accessor for SimPCSBag);
}

uint64_t sub_2505AD9A8(uint64_t a1, uint64_t a2)
{
  return sub_2505ACD10((unint64_t *)&unk_269AB6CB8, a2, (void (*)(uint64_t))type metadata accessor for SimPCSIDSet);
}

uint64_t sub_2505AD9F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2505ADA40()
{
  unint64_t result = qword_269AB6CE0;
  if (!qword_269AB6CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6CE0);
  }
  return result;
}

uint64_t sub_2505ADA94(void *a1, void *a2)
{
  BOOL v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = sub_2505BE780(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if (a1[4] == a2[4] && a1[5] == a2[5])
    {
      return 1;
    }
    else
    {
      return sub_2505BE780();
    }
  }
  return result;
}

uint64_t sub_2505ADB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2505BDF60();
  unint64_t v6 = v5;
  uint64_t v7 = sub_2505BDF60();
  unint64_t v9 = v8;
  char v10 = sub_25051AAD8(v4, v6, v7, v8);
  sub_250511528(v7, v9);
  sub_250511528(v4, v6);
  if ((v10 & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v11 = type metadata accessor for SimPCSID(0);
  uint64_t v12 = sub_2505BDF60();
  unint64_t v14 = v13;
  uint64_t v15 = sub_2505BDF60();
  unint64_t v17 = v16;
  char v18 = sub_25051AAD8(v12, v14, v15, v16);
  sub_250511528(v15, v17);
  sub_250511528(v12, v14);
  if (v18) {
    char v19 = *(unsigned char *)(a1 + *(int *)(v11 + 24)) ^ *(unsigned char *)(a2 + *(int *)(v11 + 24)) ^ 1;
  }
  else {
LABEL_4:
  }
    char v19 = 0;
  return v19 & 1;
}

uint64_t sub_2505ADC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SimPCSID(0);
  uint64_t v9 = MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12, v13, v14, v15);
  unint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_bag);
  uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_bag);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v20 = sub_2505A3090(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20)
  {
    sub_2505ADE40(a1 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_current, (uint64_t)v17);
    sub_2505ADE40(a2 + OBJC_IVAR____TtC14GroupKitCrypto9SimPCSBag_current, (uint64_t)v11);
    uint64_t v21 = sub_2505BDF60();
    unint64_t v23 = v22;
    uint64_t v24 = sub_2505BDF60();
    unint64_t v26 = v25;
    char v27 = sub_25051AAD8(v21, v23, v24, v25);
    sub_250511528(v24, v26);
    sub_250511528(v21, v23);
    if ((v27 & 1) != 0
      && (uint64_t v28 = sub_2505BDF60(),
          unint64_t v30 = v29,
          uint64_t v31 = sub_2505BDF60(),
          unint64_t v33 = v32,
          char v34 = sub_25051AAD8(v28, v30, v31, v32),
          sub_250511528(v31, v33),
          sub_250511528(v28, v30),
          (v34 & 1) != 0))
    {
      char v35 = v17[*(int *)(v4 + 24)] ^ v11[*(int *)(v4 + 24)] ^ 1;
    }
    else
    {
      char v35 = 0;
    }
    sub_2505ADEA4((uint64_t)v11);
    sub_2505ADEA4((uint64_t)v17);
  }
  else
  {
    char v35 = 0;
  }
  return v35 & 1;
}

uint64_t sub_2505ADE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SimPCSID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2505ADEA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SimPCSID(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2505ADF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SimPCSID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2505ADF64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SimPCSID(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v21 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  sub_2505ACD10(&qword_269AB6CF0, 255, (void (*)(uint64_t))type metadata accessor for SimPCSID);
  uint64_t result = sub_2505BE360();
  uint64_t v22 = result;
  if (v17)
  {
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v20 = *(void *)(v3 + 72);
    do
    {
      sub_2505ADE40(v19, (uint64_t)v10);
      sub_2505A7AA0((uint64_t)v16, (uint64_t)v10);
      sub_2505ADEA4((uint64_t)v16);
      v19 += v20;
      --v17;
    }
    while (v17);
    return v22;
  }
  return result;
}

void sub_2505AE0D0(uint64_t a1)
{
}

uint64_t sub_2505AE0DC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D08);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2505AE170(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D08);
  return sub_2505A6174(a1, a2);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_2505AE20C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_250528274();
  uint64_t result = sub_2505BE360();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_2504DBC4C(v5, *v4);
      sub_2505A8F9C(v7, v5, v6);
      sub_250511528(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SimPCSError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SimPCSError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2505AE404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimPCSError()
{
  return &type metadata for SimPCSError;
}

unint64_t sub_2505AE440()
{
  unint64_t result = qword_269AB6D18;
  if (!qword_269AB6D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269AB6D18);
  }
  return result;
}

uint64_t sub_2505AE498(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v75 = a8;
  uint64_t v76 = a5;
  uint64_t v9 = v8;
  uint64_t v90 = a2;
  char v91 = a4;
  char v89 = a1;
  uint64_t v74 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1, a2, a3, a4, a5);
  uint64_t v87 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  unint64_t v85 = (char *)&v72 - v17;
  uint64_t v19 = v18;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v21, v22, v23, v24);
  size_t v73 = (char *)&v72 - v25;
  uint64_t v26 = sub_2505BE410();
  uint64_t v77 = *(void *)(v26 - 8);
  uint64_t v78 = v26;
  uint64_t v31 = MEMORY[0x270FA5388](v26, v27, v28, v29, v30);
  BOOL v83 = (char *)&v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v31, v33, v34, v35, v36);
  uint64_t v39 = (char *)&v72 - v38;
  uint64_t v44 = MEMORY[0x270FA5388](v37, v40, v41, v42, v43);
  uint64_t v72 = (char *)&v72 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v44, v46, v47, v48, v49);
  uint64_t v82 = *((void *)v19 - 1);
  MEMORY[0x270FA5388](v50, v51, v52, v53, v54);
  uint64_t v56 = (char *)&v72 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = a6;
  uint64_t v84 = v19;
  uint64_t v92 = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92, v57, v58, v59, v60);
  int64_t v62 = (char *)&v72 - v61;
  uint64_t v63 = sub_2505BE230();
  uint64_t v93 = sub_2505BE570();
  uint64_t v88 = sub_2505BE580();
  sub_2505BE550();
  (*(void (**)(char *, uint64_t, void))(v82 + 16))(v56, v80, v84);
  char v91 = v62;
  uint64_t result = sub_2505BE220();
  if (v63 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v63)
  {
    uint64_t v65 = (uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
    size_t v66 = (uint64_t (**)(char *, uint64_t))(v86 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_2505BE420();
      uint64_t result = (*v65)(v39, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v89(v39, v87);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v79 + 8))(v91, v92);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v75, v87, v76);
        return (*v66)(v39, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v66)(v39, AssociatedTypeWitness);
      sub_2505BE560();
      if (!--v63)
      {
        uint64_t v67 = v86;
        uint64_t v68 = v83;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v67 = v86;
  uint64_t v68 = v83;
LABEL_9:
  sub_2505BE420();
  uint64_t v87 = *(char **)(v67 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v68, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v69 = v83;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v79 + 8))(v91, v92);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v69, v78);
    return v93;
  }
  else
  {
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
    uint64_t v86 = v67 + 32;
    uint64_t v70 = (void (**)(char *, uint64_t))(v67 + 8);
    int64_t v71 = v73;
    uint64_t v69 = v83;
    while (1)
    {
      v84(v71, v69, AssociatedTypeWitness);
      v89(v71, v85);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v70)(v71, AssociatedTypeWitness);
      sub_2505BE560();
      sub_2505BE420();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v69, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v70)(v71, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v91, v92);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v74 + 32))(v75, v85, v76);
  }
}

__n128 UserAndPublicKeyInfo.init(userID:role:keyingInfoBlob:)@<Q0>(__n128 *a1@<X0>, unsigned __int8 *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X8>)
{
  unsigned __int8 v5 = *a2;
  __n128 result = *a1;
  *a5 = *a1;
  a5[1].n128_u8[0] = v5;
  a5[1].n128_u64[1] = a3;
  a5[2].n128_u64[0] = a4;
  return result;
}

uint64_t GroupMembership.init<A>(groupMembership:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v79 = a3;
  uint64_t v90 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v9 = MEMORY[0x270FA5388](v90, v5, v6, v7, v8);
  uint64_t v89 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v88 = (char *)&v78 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
  MEMORY[0x270FA5388](v16 - 8, v17, v18, v19, v20);
  uint64_t v93 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  MEMORY[0x270FA5388](v22 - 8, v23, v24, v25, v26);
  uint64_t v92 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for UserKeyingInfo(0);
  unint64_t v97 = *(void *)(v87 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v87, v28, v29, v30, v31);
  char v91 = (uint64_t *)((char *)&v78 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v32, v35, v36, v37, v38);
  uint64_t v40 = (char *)&v78 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v80 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v42, v43, v44, v45);
  uint64_t v47 = (char *)&v78 - v46;
  unint64_t v48 = sub_2504E1C7C(MEMORY[0x263F8EE78]);
  uint64_t v81 = v34;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  uint64_t v82 = a1;
  v49(v40, a1, a2);
  sub_2505BE220();
  uint64_t v83 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v94 = v47;
  uint64_t v95 = AssociatedTypeWitness;
  uint64_t v86 = AssociatedConformanceWitness;
  sub_2505BE420();
  char v51 = v101;
  if (v101 == 2)
  {
    uint64_t v52 = v48;
LABEL_7:
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v83);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v94, v95);
    *uint64_t v79 = v52;
  }
  else
  {
    uint64_t v53 = v99;
    unint64_t v54 = v100;
    uint64_t v56 = v102;
    unint64_t v55 = v103;
    unint64_t v85 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56);
    long long v84 = xmmword_2505BFEE0;
    uint64_t v52 = v48;
    uint64_t v57 = v91;
    while (1)
    {
      uint64_t v104 = v52;
      uint64_t v99 = v53;
      unint64_t v100 = v54;
      if (sub_2505B2318(&v99)) {
        break;
      }
      uint64_t v99 = v53;
      unint64_t v100 = v54;
      uint64_t v58 = sub_2505BE000();
      uint64_t v59 = (uint64_t)v92;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v92, 1, 1, v58);
      uint64_t v60 = sub_2505BDF90();
      uint64_t v61 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v93, 1, 1, v60);
      sub_2504DBC4C(v53, v54);
      sub_2504DBC4C(v56, v55);
      uint64_t v62 = v98;
      sub_2505625AC(&v99, v56, v55, v59, v61, v57);
      uint64_t v98 = v62;
      if (v62)
      {
        sub_2505B2554(v53, v54, v51, v56, v55);
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v83);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v94, v95);
        return swift_bridgeObjectRelease();
      }
      uint64_t v96 = v56;
      unint64_t v97 = v55;
      char v63 = v51;
      uint64_t v64 = v90;
      uint64_t v65 = (uint64_t)v88;
      uint64_t v66 = (uint64_t)&v88[*(int *)(v90 + 24)];
      sub_2505B713C((uint64_t)v57, v66, type metadata accessor for UserKeyingInfo);
      (*v85)(v66, 0, 1, v87);
      uint64_t v67 = v65 + *(int *)(v64 + 28);
      uint64_t v68 = sub_2505BE0B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 1, 1, v68);
      *(unsigned char *)uint64_t v65 = v51 & 1;
      *(_OWORD *)(v65 + 8) = v84;
      uint64_t v69 = v89;
      sub_2505B7E08(v65, v89, type metadata accessor for GroupMembership.MemberProperties);
      sub_2504DBC4C(v53, v54);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v99 = v52;
      sub_2505144F8(v69, v53, v54, isUniquelyReferenced_nonNull_native);
      uint64_t v52 = v99;
      swift_bridgeObjectRelease();
      sub_250511528(v53, v54);
      sub_2505B2554(v53, v54, v63, v96, v97);
      sub_2505B7078((uint64_t)v57, type metadata accessor for UserKeyingInfo);
      sub_2505BE420();
      uint64_t v53 = v99;
      unint64_t v54 = v100;
      char v51 = v101;
      uint64_t v56 = v102;
      unint64_t v55 = v103;
      if (v101 == 2) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_269AB5418 != -1) {
      swift_once();
    }
    uint64_t v72 = sub_2505BDC40();
    __swift_project_value_buffer(v72, (uint64_t)qword_269AC3188);
    os_log_type_t v73 = sub_2505BE3D0();
    uint64_t v74 = sub_2505BDC20();
    if (os_log_type_enabled(v74, v73))
    {
      uint64_t v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v75 = 0;
      _os_log_impl(&dword_2504D2000, v74, v73, "duplicated group member", v75, 2u);
      MEMORY[0x25337FF10](v75, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    uint64_t v76 = swift_allocError();
    *(_WORD *)uint64_t v77 = 270;
    *(_OWORD *)(v77 + 8) = xmmword_2505BFF20;
    *(void *)(v77 + 24) = 0x80000002505CA1F0;
    *(void *)(v77 + 32) = 0xD00000000000005CLL;
    *(void *)(v77 + 40) = 0x80000002505CA080;
    uint64_t v98 = v76;
    swift_willThrow();
    sub_2505B2554(v53, v54, v51, v56, v55);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v83);
    return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v94, v95);
  }
  return result;
}

uint64_t type metadata accessor for GroupMembership.MemberProperties(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB6D50);
}

uint64_t sub_2505AF42C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int64_t v71 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v10 = *(void *)(v78 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v78, v11, v12, v13, v14);
  uint64_t v81 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E88);
  uint64_t v28 = MEMORY[0x270FA5388](v23 - 8, v24, v25, v26, v27);
  uint64_t v30 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28, v31, v32, v33, v34);
  uint64_t v36 = (uint64_t *)((char *)&v71 - v35);
  uint64_t v37 = (void *)sub_2504E1C7C(MEMORY[0x263F8EE78]);
  unint64_t v38 = *(void *)(a1 + 16);
  uint64_t v77 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v79 = v10;
  os_log_type_t v73 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  unint64_t v39 = 0;
  uint64_t v75 = v36;
  uint64_t v76 = v30;
  unint64_t v74 = v38;
  uint64_t v72 = v9;
  while (1)
  {
    if (v39 == v38)
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v30, 1, 1, v40);
      unint64_t v80 = v38;
    }
    else
    {
      if (v39 >= *(void *)(a1 + 16)) {
        goto LABEL_29;
      }
      uint64_t v41 = v22;
      uint64_t v42 = a1;
      unint64_t v43 = v39;
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
      uint64_t v45 = *(void *)(v44 - 8);
      sub_2504DAEFC(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v43, (uint64_t)v30, &qword_269AB5E90);
      unint64_t v80 = v43 + 1;
      a1 = v42;
      uint64_t v22 = v41;
      uint64_t v9 = v72;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v30, 0, 1, v44);
    }
    sub_2505283F0((uint64_t)v30, (uint64_t)v36, &qword_269AB5E88);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v36, 1, v46) == 1)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
      void *v71 = v37;
      return result;
    }
    uint64_t v47 = *v36;
    unint64_t v48 = v36[1];
    sub_2505B7E08((uint64_t)v36 + *(int *)(v46 + 48), (uint64_t)v22, type metadata accessor for GroupMembership.MemberProperties);
    if (v37[2])
    {
      swift_bridgeObjectRetain();
      sub_2504DBC4C(v47, v48);
      unint64_t v49 = sub_250512FE8(v47, v48);
      if (v50)
      {
        sub_2505B713C(v37[7] + *(void *)(v79 + 72) * v49, (uint64_t)v9, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v51 = 0;
      }
      else
      {
        uint64_t v51 = 1;
      }
      uint64_t v52 = v78;
      (*v77)(v9, v51, 1, v78);
      sub_250511528(v47, v48);
      if ((*v73)(v9, 1, v52) != 1)
      {
        sub_2504DAF60((uint64_t)v9, &qword_269AB5A80);
        swift_bridgeObjectRelease_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_25055AFD0();
        swift_allocError();
        *(_WORD *)uint64_t v70 = 270;
        *(_OWORD *)(v70 + 8) = xmmword_2505C6A50;
        *(void *)(v70 + 24) = 0x80000002505CA1F0;
        *(void *)(v70 + 32) = 0xD00000000000005CLL;
        *(void *)(v70 + 40) = 0x80000002505CA080;
        swift_willThrow();
        sub_250511528(v47, v48);
        swift_bridgeObjectRelease();
        sub_2505B7078((uint64_t)v22, type metadata accessor for GroupMembership.MemberProperties);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      (*v77)(v9, 1, 1, v78);
      swift_bridgeObjectRetain();
    }
    uint64_t v53 = a1;
    unint64_t v54 = v9;
    sub_2504DAF60((uint64_t)v9, &qword_269AB5A80);
    swift_bridgeObjectRelease();
    uint64_t v55 = (uint64_t)v22;
    sub_2505B713C((uint64_t)v22, v81, type metadata accessor for GroupMembership.MemberProperties);
    sub_2504DBC4C(v47, v48);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v82 = v37;
    unint64_t v58 = sub_250512FE8(v47, v48);
    uint64_t v59 = v37[2];
    BOOL v60 = (v57 & 1) == 0;
    uint64_t v61 = v59 + v60;
    if (__OFADD__(v59, v60)) {
      break;
    }
    char v62 = v57;
    if (v37[3] >= v61)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v37 = v82;
        if (v57) {
          goto LABEL_2;
        }
      }
      else
      {
        sub_2505B7420(type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v37 = v82;
        if (v62) {
          goto LABEL_2;
        }
      }
    }
    else
    {
      sub_2505B5358(v61, isUniquelyReferenced_nonNull_native, type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
      unint64_t v63 = sub_250512FE8(v47, v48);
      if ((v62 & 1) != (v64 & 1)) {
        goto LABEL_31;
      }
      unint64_t v58 = v63;
      uint64_t v37 = v82;
      if (v62)
      {
LABEL_2:
        sub_2505B70D8(v81, v37[7] + *(void *)(v79 + 72) * v58);
        goto LABEL_3;
      }
    }
    v37[(v58 >> 6) + 8] |= 1 << v58;
    uint64_t v65 = (uint64_t *)(v37[6] + 16 * v58);
    *uint64_t v65 = v47;
    v65[1] = v48;
    sub_2505B7E08(v81, v37[7] + *(void *)(v79 + 72) * v58, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v66 = v37[2];
    BOOL v67 = __OFADD__(v66, 1);
    uint64_t v68 = v66 + 1;
    if (v67) {
      goto LABEL_30;
    }
    void v37[2] = v68;
    sub_2504DBC4C(v47, v48);
LABEL_3:
    swift_bridgeObjectRelease();
    sub_250511528(v47, v48);
    sub_250511528(v47, v48);
    uint64_t v22 = (char *)v55;
    sub_2505B7078(v55, type metadata accessor for GroupMembership.MemberProperties);
    a1 = v53;
    uint64_t v9 = v54;
    uint64_t v36 = v75;
    uint64_t v30 = v76;
    unint64_t v38 = v74;
    unint64_t v39 = v80;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  uint64_t result = sub_2505BE7E0();
  __break(1u);
  return result;
}

uint64_t sub_2505AFBF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v10 = *(void *)(v85 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v85, v11, v12, v13, v14);
  uint64_t v89 = (uint64_t)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v78 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E88);
  uint64_t v28 = MEMORY[0x270FA5388](v23 - 8, v24, v25, v26, v27);
  uint64_t v87 = (int64_t *)((char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v28, v30, v31, v32, v33);
  uint64_t v86 = (int64_t *)((char *)&v78 - v34);
  uint64_t v35 = (void *)sub_2504E1C7C(MEMORY[0x263F8EE78]);
  uint64_t v36 = *(void *)(a1 + 64);
  uint64_t v80 = a1 + 64;
  uint64_t v37 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v38 = -1;
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  unint64_t v39 = v38 & v36;
  uint64_t v83 = a1;
  long long v84 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v90 = v10;
  int64_t v81 = (unint64_t)(v37 + 63) >> 6;
  uint64_t v82 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int64_t v78 = v81 - 1;
  swift_bridgeObjectRetain();
  int64_t v88 = 0;
  while (1)
  {
    if (v39)
    {
      unint64_t v40 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      uint64_t v41 = v87;
      unint64_t v42 = v40 | (v88 << 6);
LABEL_8:
      unint64_t v43 = (uint64_t *)(*(void *)(v83 + 48) + 16 * v42);
      uint64_t v44 = *v43;
      unint64_t v45 = v43[1];
      uint64_t v46 = *(void *)(v83 + 56) + *(void *)(v90 + 72) * v42;
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
      sub_2505B713C(v46, (uint64_t)v41 + *(int *)(v47 + 48), type metadata accessor for GroupMembership.MemberProperties);
      *uint64_t v41 = v44;
      v41[1] = v45;
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v41, 0, 1, v47);
      sub_2504DBC4C(v44, v45);
      goto LABEL_30;
    }
    uint64_t v41 = v87;
    int64_t v48 = v88 + 1;
    if (__OFADD__(v88, 1)) {
      goto LABEL_52;
    }
    if (v48 < v81)
    {
      unint64_t v49 = *(void *)(v80 + 8 * v48);
      if (v49) {
        goto LABEL_12;
      }
      int64_t v50 = v88 + 2;
      ++v88;
      if (v48 + 1 < v81)
      {
        unint64_t v49 = *(void *)(v80 + 8 * v50);
        if (v49) {
          goto LABEL_15;
        }
        int64_t v88 = v48 + 1;
        if (v48 + 2 < v81)
        {
          unint64_t v49 = *(void *)(v80 + 8 * (v48 + 2));
          if (v49)
          {
            v48 += 2;
            goto LABEL_12;
          }
          int64_t v88 = v48 + 2;
          if (v48 + 3 < v81)
          {
            unint64_t v49 = *(void *)(v80 + 8 * (v48 + 3));
            if (v49)
            {
              v48 += 3;
              goto LABEL_12;
            }
            int64_t v50 = v48 + 4;
            int64_t v88 = v48 + 3;
            if (v48 + 4 < v81) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v41, 1, 1, v51);
    unint64_t v39 = 0;
LABEL_30:
    uint64_t v52 = (uint64_t)v41;
    uint64_t v53 = v86;
    sub_2505283F0(v52, (uint64_t)v86, &qword_269AB5E88);
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v53, 1, v54) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *uint64_t v79 = v35;
      return result;
    }
    uint64_t v56 = *v53;
    unint64_t v55 = v53[1];
    sub_2505B7E08((uint64_t)v53 + *(int *)(v54 + 48), (uint64_t)v22, type metadata accessor for GroupMembership.MemberProperties);
    if (v35[2])
    {
      swift_bridgeObjectRetain();
      sub_2504DBC4C(v56, v55);
      unint64_t v57 = sub_250512FE8(v56, v55);
      if (v58)
      {
        sub_2505B713C(v35[7] + *(void *)(v90 + 72) * v57, (uint64_t)v9, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v59 = 0;
      }
      else
      {
        uint64_t v59 = 1;
      }
      uint64_t v60 = v85;
      (*v84)(v9, v59, 1, v85);
      sub_250511528(v56, v55);
      if ((*v82)(v9, 1, v60) != 1)
      {
        sub_2504DAF60((uint64_t)v9, &qword_269AB5A80);
        swift_bridgeObjectRelease_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_25055AFD0();
        swift_allocError();
        *(_WORD *)uint64_t v77 = 270;
        *(_OWORD *)(v77 + 8) = xmmword_2505C6A50;
        *(void *)(v77 + 24) = 0x80000002505CA1F0;
        *(void *)(v77 + 32) = 0xD00000000000005CLL;
        *(void *)(v77 + 40) = 0x80000002505CA080;
        swift_willThrow();
        sub_250511528(v56, v55);
        swift_bridgeObjectRelease();
        sub_2505B7078((uint64_t)v22, type metadata accessor for GroupMembership.MemberProperties);
        return swift_release();
      }
    }
    else
    {
      (*v84)(v9, 1, 1, v85);
      swift_bridgeObjectRetain();
    }
    uint64_t v61 = v9;
    sub_2504DAF60((uint64_t)v9, &qword_269AB5A80);
    swift_bridgeObjectRelease();
    uint64_t v62 = (uint64_t)v22;
    sub_2505B713C((uint64_t)v22, v89, type metadata accessor for GroupMembership.MemberProperties);
    sub_2504DBC4C(v56, v55);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v91 = v35;
    unint64_t v65 = sub_250512FE8(v56, v55);
    uint64_t v66 = v35[2];
    BOOL v67 = (v64 & 1) == 0;
    uint64_t v68 = v66 + v67;
    if (__OFADD__(v66, v67))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    char v69 = v64;
    if (v35[3] >= v68)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v35 = v91;
        if (v64) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_2505B7420(type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v35 = v91;
        if (v69) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_2505B5358(v68, isUniquelyReferenced_nonNull_native, type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
      unint64_t v70 = sub_250512FE8(v56, v55);
      if ((v69 & 1) != (v71 & 1)) {
        goto LABEL_54;
      }
      unint64_t v65 = v70;
      uint64_t v35 = v91;
      if (v69)
      {
LABEL_4:
        sub_2505B70D8(v89, v35[7] + *(void *)(v90 + 72) * v65);
        goto LABEL_5;
      }
    }
    v35[(v65 >> 6) + 8] |= 1 << v65;
    uint64_t v72 = (uint64_t *)(v35[6] + 16 * v65);
    *uint64_t v72 = v56;
    v72[1] = v55;
    sub_2505B7E08(v89, v35[7] + *(void *)(v90 + 72) * v65, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v73 = v35[2];
    BOOL v74 = __OFADD__(v73, 1);
    uint64_t v75 = v73 + 1;
    if (v74) {
      goto LABEL_51;
    }
    v35[2] = v75;
    sub_2504DBC4C(v56, v55);
LABEL_5:
    swift_bridgeObjectRelease();
    sub_250511528(v56, v55);
    sub_250511528(v56, v55);
    uint64_t v22 = (char *)v62;
    sub_2505B7078(v62, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v9 = v61;
  }
  unint64_t v49 = *(void *)(v80 + 8 * v50);
  if (v49)
  {
LABEL_15:
    int64_t v48 = v50;
LABEL_12:
    unint64_t v39 = (v49 - 1) & v49;
    unint64_t v42 = __clz(__rbit64(v49)) + (v48 << 6);
    int64_t v88 = v48;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v48 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v48 >= v81)
    {
      int64_t v88 = v78;
      goto LABEL_29;
    }
    unint64_t v49 = *(void *)(v80 + 8 * v48);
    ++v50;
    if (v49) {
      goto LABEL_12;
    }
  }
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_2505BE7E0();
  __break(1u);
  return result;
}

uint64_t GroupMembership.removeUsers<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  uint64_t v11 = MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v54 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  uint64_t v47 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v46 - v23;
  uint64_t v25 = *v2;
  uint64_t v52 = *v2;
  uint64_t v26 = v51;
  uint64_t result = sub_2505B32C8(a1, a2);
  if (!v26)
  {
    uint64_t v46 = 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, a1, a2);
    swift_bridgeObjectRetain();
    sub_2505BE220();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_2505BE420();
    unint64_t v29 = v53;
    uint64_t v30 = v24;
    if (v53 >> 60 == 15)
    {
      uint64_t v31 = v50;
    }
    else
    {
      uint64_t v32 = v52;
      uint64_t v31 = v50;
      uint64_t v49 = AssociatedTypeWitness;
      uint64_t v51 = AssociatedConformanceWitness;
      do
      {
        swift_bridgeObjectRetain();
        unint64_t v35 = sub_250512FE8(v32, v29);
        char v37 = v36;
        swift_bridgeObjectRelease();
        if (v37)
        {
          uint64_t v38 = v3;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v52 = v25;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2505B7420(type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
            uint64_t v25 = v52;
          }
          sub_250511528(*(void *)(*(void *)(v25 + 48) + 16 * v35), *(void *)(*(void *)(v25 + 48) + 16 * v35 + 8));
          uint64_t v40 = *(void *)(v25 + 56);
          uint64_t v41 = type metadata accessor for GroupMembership.MemberProperties(0);
          uint64_t v42 = *(void *)(v41 - 8);
          uint64_t v43 = v40 + *(void *)(v42 + 72) * v35;
          uint64_t v44 = v54;
          sub_2505B7E08(v43, v54, type metadata accessor for GroupMembership.MemberProperties);
          unint64_t v45 = v35;
          uint64_t v34 = v44;
          sub_2505B65D0(v45, v25, type metadata accessor for GroupMembership.MemberProperties);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
          uint64_t v3 = v38;
          uint64_t AssociatedTypeWitness = v49;
          uint64_t v31 = v50;
        }
        else
        {
          uint64_t v33 = type metadata accessor for GroupMembership.MemberProperties(0);
          uint64_t v34 = v54;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v54, 1, 1, v33);
        }
        sub_2504DAF60(v34, &qword_269AB5A80);
        sub_250586944(v32, v29);
        sub_2505BE420();
        uint64_t v32 = v52;
        unint64_t v29 = v53;
      }
      while (v53 >> 60 != 15);
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v30, AssociatedTypeWitness);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v25;
  }
  return result;
}

uint64_t GroupMembership.changeUserRoles<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  MEMORY[0x270FA5388](v9 - 8, v10, v11, v12, v13);
  unint64_t v97 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v98 = *(void *)(v94 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v94, v15, v16, v17, v18);
  uint64_t v99 = (uint64_t)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v19, v21, v22, v23, v24);
  uint64_t v93 = (char *)&v86 - v26;
  uint64_t v31 = MEMORY[0x270FA5388](v25, v27, v28, v29, v30);
  uint64_t v96 = (uint64_t)&v86 - v32;
  uint64_t v104 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v31, v33, v34, v35, v36);
  uint64_t v38 = (char *)&v86 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v95 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v40, v41, v42, v43);
  unint64_t v45 = (char *)&v86 - v44;
  uint64_t v100 = a3;
  uint64_t v47 = sub_2505AE498((void (*)(char *, char *))sub_2505B25A4, 0, a2, (char *)&type metadata for GroupKitUserID, MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], v46);
  uint64_t v48 = *v5;
  swift_bridgeObjectRetain();
  sub_2505B2AE4(v47, v48);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4)
  {
    uint64_t v86 = 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v38, a1, a2);
    uint64_t v104 = v48;
    swift_bridgeObjectRetain();
    sub_2505BE220();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_2505BE420();
    LODWORD(v100) = v103;
    if (v103 == 2)
    {
      uint64_t v50 = v95;
LABEL_4:
      (*(void (**)(char *, uint64_t))(v50 + 8))(v45, AssociatedTypeWitness);
      uint64_t v51 = v104;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *uint64_t v5 = v51;
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v52 = (uint64_t)v97;
      uint64_t v53 = v98;
      uint64_t v54 = (uint64_t)v101;
      unint64_t v55 = v102;
      uint64_t v90 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
      char v91 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
      uint64_t v56 = v96;
      uint64_t v88 = AssociatedTypeWitness;
      uint64_t v89 = v5;
      uint64_t v87 = v45;
      while (1)
      {
        uint64_t v57 = v104;
        if (!*(void *)(v104 + 16)) {
          break;
        }
        sub_2504DBC4C(v54, v55);
        unint64_t v58 = sub_250512FE8(v54, v55);
        if (v59)
        {
          sub_2505B713C(*(void *)(v57 + 56) + *(void *)(v53 + 72) * v58, v52, type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v60 = 0;
        }
        else
        {
          uint64_t v60 = 1;
        }
        uint64_t v61 = v94;
        (*v91)(v52, v60, 1, v94);
        char v62 = v100;
        sub_2505B7050(v54, v55, v100);
        if ((*v90)(v52, 1, v61) == 1) {
          goto LABEL_26;
        }
        char v63 = v62 & 1;
        sub_2505B7E08(v52, v56, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v52 = *(void *)(v56 + 8);
        unint64_t v64 = *(void *)(v56 + 16);
        uint64_t v65 = v56;
        uint64_t v66 = *(int *)(v61 + 24);
        uint64_t v67 = v56 + v66;
        uint64_t v68 = (uint64_t)v93;
        sub_2504DAEFC(v67, (uint64_t)&v93[v66], &qword_269AB5E80);
        uint64_t v69 = *(int *)(v61 + 28);
        uint64_t v70 = v65 + v69;
        char v71 = v100;
        sub_2504DAEFC(v70, v68 + v69, &qword_269AB5ED0);
        *(unsigned char *)uint64_t v68 = v63;
        *(void *)(v68 + 8) = v52;
        *(void *)(v68 + 16) = v64;
        sub_2505B7E08(v68, v99, type metadata accessor for GroupMembership.MemberProperties);
        sub_2505B7064(v54, v55, v71);
        sub_25051B908(v52, v64);
        uint64_t v72 = (void *)v104;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v101 = v72;
        unint64_t v75 = sub_250512FE8(v54, v55);
        uint64_t v76 = v72[2];
        BOOL v77 = (v74 & 1) == 0;
        uint64_t v78 = v76 + v77;
        if (__OFADD__(v76, v77))
        {
          __break(1u);
LABEL_24:
          __break(1u);
          break;
        }
        uint64_t v52 = v74;
        if (v72[3] >= v78)
        {
          uint64_t v53 = v98;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_2505B7420(type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
          }
        }
        else
        {
          sub_2505B5358(v78, isUniquelyReferenced_nonNull_native, type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
          unint64_t v79 = sub_250512FE8(v54, v55);
          uint64_t v53 = v98;
          if ((v52 & 1) != (v80 & 1)) {
            goto LABEL_27;
          }
          unint64_t v75 = v79;
        }
        uint64_t v5 = v89;
        int64_t v81 = v101;
        uint64_t v104 = (uint64_t)v101;
        if (v52)
        {
          sub_2505B70D8(v99, v101[7] + *(void *)(v53 + 72) * v75);
        }
        else
        {
          v101[(v75 >> 6) + 8] |= 1 << v75;
          uint64_t v82 = (uint64_t *)(v81[6] + 16 * v75);
          uint64_t *v82 = v54;
          v82[1] = v55;
          sub_2505B7E08(v99, v81[7] + *(void *)(v53 + 72) * v75, type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v83 = v81[2];
          BOOL v84 = __OFADD__(v83, 1);
          uint64_t v85 = v83 + 1;
          if (v84) {
            goto LABEL_24;
          }
          v81[2] = v85;
          sub_2504DBC4C(v54, v55);
        }
        swift_bridgeObjectRelease();
        sub_2505B7050(v54, v55, v71);
        sub_2505B7050(v54, v55, v71);
        uint64_t v56 = v96;
        sub_2505B7078(v96, type metadata accessor for GroupMembership.MemberProperties);
        unint64_t v45 = v87;
        uint64_t AssociatedTypeWitness = v88;
        sub_2505BE420();
        uint64_t v54 = (uint64_t)v101;
        unint64_t v55 = v102;
        LODWORD(v100) = v103;
        uint64_t v52 = (uint64_t)v97;
        uint64_t v50 = v95;
        if (v103 == 2) {
          goto LABEL_4;
        }
      }
      (*v91)(v52, 1, 1, v94);
LABEL_26:
      __break(1u);
LABEL_27:
      uint64_t result = sub_2505BE7E0();
      __break(1u);
    }
  }
  return result;
}

uint64_t GroupMembership.validMembershipRolesForGroup(memberID:)(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v3 - 8, v5, v6, v7, v8);
  uint64_t v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12, v13, v14, v15);
  uint64_t v17 = (char *)v46 - v16;
  uint64_t v19 = *a1;
  unint64_t v18 = a1[1];
  uint64_t v20 = *v1;
  uint64_t result = sub_2505B37A8(v20);
  if ((result & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    swift_allocError();
    *(_WORD *)uint64_t v34 = 268;
    *(_OWORD *)(v34 + 8) = xmmword_2505C0300;
    *(void *)(v34 + 24) = 0x80000002505CA050;
    *(void *)(v34 + 32) = 0xD00000000000005CLL;
    *(void *)(v34 + 40) = 0x80000002505CA080;
    return swift_willThrow();
  }
  if (v18 >> 60 != 15)
  {
    uint64_t v22 = *(void *)(v20 + 16);
    sub_2504DBC4C(v19, v18);
    if (v22 && (unint64_t v23 = sub_250512FE8(v19, v18), (v24 & 1) != 0))
    {
      sub_2505B713C(*(void *)(v20 + 56) + *(void *)(v4 + 72) * v23, (uint64_t)v11, type metadata accessor for GroupMembership.MemberProperties);
      sub_2505B7E08((uint64_t)v11, (uint64_t)v17, type metadata accessor for GroupMembership.MemberProperties);
      if (*v17 == 1)
      {
        if (qword_269AB5418 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_2505BDC40();
        __swift_project_value_buffer(v25, (uint64_t)qword_269AC3188);
        os_log_type_t v26 = sub_2505BE3D0();
        sub_25051B908(v19, v18);
        sub_2504DBC4C(v19, v18);
        uint64_t v27 = sub_2505BDC20();
        os_log_type_t v28 = v26;
        if (os_log_type_enabled(v27, v26))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          uint64_t v47 = swift_slowAlloc();
          uint64_t v49 = v47;
          *(_DWORD *)uint64_t v29 = 136315138;
          v46[1] = v29 + 4;
          sub_2504DBC4C(v19, v18);
          uint64_t v30 = sub_2505BD8B0();
          unint64_t v32 = v31;
          sub_250586944(v19, v18);
          uint64_t v48 = sub_25051171C(v30, v32, &v49);
          sub_2505BE430();
          swift_bridgeObjectRelease();
          sub_250586944(v19, v18);
          sub_250586944(v19, v18);
          _os_log_impl(&dword_2504D2000, v27, v28, "member %s is not an administrator in a group", v29, 0xCu);
          uint64_t v33 = v47;
          swift_arrayDestroy();
          MEMORY[0x25337FF10](v33, -1, -1);
          MEMORY[0x25337FF10](v29, -1, -1);
        }
        else
        {
          sub_250586944(v19, v18);
          sub_250586944(v19, v18);
        }

        __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
        sub_25055AFD0();
        swift_allocError();
        *(_WORD *)uint64_t v45 = 376;
        *(_OWORD *)(v45 + 8) = xmmword_2505C6A60;
        *(void *)(v45 + 24) = 0x80000002505CA050;
        *(void *)(v45 + 32) = 0xD00000000000005CLL;
        *(void *)(v45 + 40) = 0x80000002505CA080;
        swift_willThrow();
        sub_250586944(v19, v18);
        return sub_2505B7078((uint64_t)v17, type metadata accessor for GroupMembership.MemberProperties);
      }
      sub_2505B7078((uint64_t)v17, type metadata accessor for GroupMembership.MemberProperties);
    }
    else
    {
      if (qword_269AB5418 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_2505BDC40();
      __swift_project_value_buffer(v35, (uint64_t)qword_269AC3188);
      os_log_type_t v36 = sub_2505BE3D0();
      sub_25051B908(v19, v18);
      sub_2504DBC4C(v19, v18);
      uint64_t v37 = sub_2505BDC20();
      os_log_type_t v38 = v36;
      if (os_log_type_enabled(v37, v36))
      {
        unint64_t v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v49 = v40;
        *(_DWORD *)unint64_t v39 = 136315138;
        uint64_t v47 = (uint64_t)(v39 + 4);
        sub_2504DBC4C(v19, v18);
        uint64_t v41 = sub_2505BD8B0();
        unint64_t v43 = v42;
        sub_250586944(v19, v18);
        uint64_t v48 = sub_25051171C(v41, v43, &v49);
        sub_2505BE430();
        swift_bridgeObjectRelease();
        sub_250586944(v19, v18);
        sub_250586944(v19, v18);
        _os_log_impl(&dword_2504D2000, v37, v38, "member %s is not in the group", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25337FF10](v40, -1, -1);
        MEMORY[0x25337FF10](v39, -1, -1);
      }
      else
      {
        sub_250586944(v19, v18);
        sub_250586944(v19, v18);
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v44 = 377;
      *(_OWORD *)(v44 + 8) = xmmword_2505C6A70;
      *(void *)(v44 + 24) = 0x80000002505CA050;
      *(void *)(v44 + 32) = 0xD00000000000005CLL;
      *(void *)(v44 + 40) = 0x80000002505CA080;
      swift_willThrow();
    }
    return sub_250586944(v19, v18);
  }
  return result;
}

uint64_t GroupMembership.addUsers<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v134 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v132 = *(void *)(v134 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v134, v9, v10, v11, v12);
  uint64_t v143 = (uint64_t)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  size_t v133 = (char *)&v125 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
  MEMORY[0x270FA5388](v20 - 8, v21, v22, v23, v24);
  uint64_t v127 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
  MEMORY[0x270FA5388](v26 - 8, v27, v28, v29, v30);
  uint64_t v135 = (uint64_t)&v125 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
  uint64_t v37 = MEMORY[0x270FA5388](v32 - 8, v33, v34, v35, v36);
  size_t v126 = (uint64_t *)((char *)&v125 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v37, v39, v40, v41, v42);
  uint64_t v145 = (uint64_t)&v125 - v43;
  uint64_t v44 = type metadata accessor for UserAndAllInfo(0);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v138 = v44;
  uint64_t v139 = v45;
  MEMORY[0x270FA5388](v44, v46, v47, v48, v49);
  uint64_t v141 = (uint64_t)&v125 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D20);
  uint64_t v56 = MEMORY[0x270FA5388](v51 - 8, v52, v53, v54, v55);
  int64_t v137 = (char *)&v125 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v56, v58, v59, v60, v61);
  char v63 = (char *)&v125 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v136 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v65, v66, v67, v68);
  uint64_t v70 = (char *)&v125 - v69;
  uint64_t v131 = a3;
  uint64_t v72 = sub_2505AE498((void (*)(char *, char *))sub_2505B25A4, 0, a2, (char *)&type metadata for GroupKitUserID, MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], v71);
  uint64_t v73 = v5;
  uint64_t v74 = *v5;
  swift_bridgeObjectRetain();
  sub_2505B25D8(v72, v74);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v140 = v4;
  if (!v4)
  {
    uint64_t v125 = (uint64_t *)v73;
    unint64_t v142 = sub_2504E1C7C(MEMORY[0x263F8EE78]);
    (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v63, a1, a2);
    sub_2505BE220();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v77 = (uint64_t)v137;
    uint64_t v78 = v70;
    uint64_t v131 = AssociatedConformanceWitness;
    sub_2505BE420();
    uint64_t v79 = v139 + 48;
    uint64_t v130 = *(void *)(v139 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v130)(v77, 1, v138) == 1)
    {
      uint64_t v80 = v136;
LABEL_4:
      (*(void (**)(char *, uint64_t))(v80 + 8))(v78, AssociatedTypeWitness);
      uint64_t v81 = v142;
      swift_bridgeObjectRetain();
      uint64_t v82 = v125;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v144[0] = *v82;
      uint64_t *v82 = 0x8000000000000000;
      uint64_t v84 = v140;
      sub_2505B7938(v81, (uint64_t)sub_2505B78A8, 0, isUniquelyReferenced_nonNull_native, (uint64_t)v144);
      if (!v84)
      {
        uint64_t *v82 = v144[0];
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v85 = v79;
      uint64_t v86 = v145;
      uint64_t v87 = v141;
      uint64_t v139 = v85;
      uint64_t v80 = v136;
      int64_t v128 = v70;
      uint64_t v129 = AssociatedTypeWitness;
      while (1)
      {
        sub_2505B7E08(v77, v87, type metadata accessor for UserAndAllInfo);
        uint64_t v89 = type metadata accessor for UserKeyingInfo(0);
        uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56);
        v90(v86, 1, 1, v89);
        unint64_t v91 = *(void *)(v87 + 48);
        if (v91 >> 60 == 15)
        {
          uint64_t v92 = v145;
        }
        else
        {
          uint64_t v93 = *(void *)(v87 + 40);
          uint64_t v94 = *(void *)v87;
          unint64_t v95 = *(void *)(v87 + 8);
          v144[0] = v94;
          v144[1] = v95;
          uint64_t v96 = sub_2505BE000();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v135, 1, 1, v96);
          uint64_t v97 = sub_2505BDF90();
          uint64_t v98 = (uint64_t)v127;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v127, 1, 1, v97);
          sub_25051B908(v93, v91);
          sub_2504DBC4C(v94, v95);
          uint64_t v99 = v126;
          uint64_t v100 = v140;
          sub_2505625AC(v144, v93, v91, v135, v98, v126);
          uint64_t v140 = v100;
          if (v100)
          {
            sub_2504DAF60(v145, &qword_269AB5E80);
            sub_2505B7078(v141, type metadata accessor for UserAndAllInfo);
            (*(void (**)(char *, uint64_t))(v80 + 8))(v128, v129);
            return swift_bridgeObjectRelease();
          }
          uint64_t v92 = v145;
          sub_2504DAF60(v145, &qword_269AB5E80);
          v90((uint64_t)v99, 0, 1, v89);
          sub_2505283F0((uint64_t)v99, v92, &qword_269AB5E80);
          uint64_t v87 = v141;
        }
        uint64_t v102 = *(void *)v87;
        unint64_t v101 = *(void *)(v87 + 8);
        char v103 = *(unsigned char *)(v87 + 16);
        uint64_t v104 = *(void *)(v87 + 24);
        unint64_t v105 = *(void *)(v87 + 32);
        uint64_t v106 = v87;
        uint64_t v108 = (uint64_t)v133;
        uint64_t v107 = v134;
        unint64_t v109 = v101;
        sub_2504DAEFC(v92, (uint64_t)&v133[*(int *)(v134 + 24)], &qword_269AB5E80);
        uint64_t v110 = v138;
        sub_2504DAEFC(v106 + *(int *)(v138 + 32), v108 + *(int *)(v107 + 28), &qword_269AB5ED0);
        *(unsigned char *)uint64_t v108 = v103;
        *(void *)(v108 + 8) = v104;
        *(void *)(v108 + 16) = v105;
        sub_2505B7E08(v108, v143, type metadata accessor for GroupMembership.MemberProperties);
        sub_2504DBC4C(v102, v109);
        sub_25051B908(v104, v105);
        uint64_t v111 = v142;
        uint64_t v82 = (uint64_t *)swift_isUniquelyReferenced_nonNull_native();
        v144[0] = v111;
        unint64_t v113 = sub_250512FE8(v102, v109);
        uint64_t v114 = *(void *)(v111 + 16);
        BOOL v115 = (v112 & 1) == 0;
        uint64_t v116 = v114 + v115;
        if (__OFADD__(v114, v115)) {
          break;
        }
        char v117 = v112;
        if (*(void *)(v111 + 24) >= v116)
        {
          uint64_t v120 = v132;
          if ((v82 & 1) == 0) {
            sub_2505B7420(type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
          }
        }
        else
        {
          sub_2505B5358(v116, (int)v82, type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
          unint64_t v118 = sub_250512FE8(v102, v109);
          uint64_t v120 = v132;
          if ((v117 & 1) != (v119 & 1)) {
            goto LABEL_25;
          }
          unint64_t v113 = v118;
        }
        uint64_t v82 = (uint64_t *)v144[0];
        unint64_t v142 = v144[0];
        if (v117)
        {
          sub_2505B70D8(v143, *(void *)(v144[0] + 56) + *(void *)(v120 + 72) * v113);
        }
        else
        {
          *(void *)(v144[0] + 8 * (v113 >> 6) + 64) |= 1 << v113;
          uint64_t v121 = (uint64_t *)(v82[6] + 16 * v113);
          *uint64_t v121 = v102;
          v121[1] = v109;
          sub_2505B7E08(v143, v82[7] + *(void *)(v120 + 72) * v113, type metadata accessor for GroupMembership.MemberProperties);
          uint64_t v122 = v82[2];
          BOOL v123 = __OFADD__(v122, 1);
          uint64_t v124 = v122 + 1;
          if (v123) {
            goto LABEL_24;
          }
          void v82[2] = v124;
          sub_2504DBC4C(v102, v109);
        }
        swift_bridgeObjectRelease();
        sub_250511528(v102, v109);
        uint64_t v86 = v145;
        sub_2504DAF60(v145, &qword_269AB5E80);
        uint64_t v87 = v141;
        sub_2505B7078(v141, type metadata accessor for UserAndAllInfo);
        uint64_t v77 = (uint64_t)v137;
        uint64_t v78 = v128;
        uint64_t AssociatedTypeWitness = v129;
        sub_2505BE420();
        int v88 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v130)(v77, 1, v110);
        uint64_t v80 = v136;
        if (v88 == 1) {
          goto LABEL_4;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      sub_2505BE7E0();
      __break(1u);
    }
    uint64_t *v82 = v144[0];
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

GroupKitCrypto::GroupMembership __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GroupMembership.administratorMembership()()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_2505B7E70(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  return (GroupKitCrypto::GroupMembership)sub_2505AFBF8(v7, v1);
}

uint64_t UserAndPublicKeyInfo.userID.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2504DBC4C(v2, v3);
}

void UserAndPublicKeyInfo.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t UserAndPublicKeyInfo.keyingInfoBlob.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_2504DBC4C(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t GroupMembership.roles.getter()
{
  return sub_2505B874C(*v0);
}

uint64_t sub_2505B2318(uint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  if (!*(void *)(v10 + 16))
  {
    uint64_t v19 = type metadata accessor for GroupMembership.MemberProperties(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
LABEL_7:
    uint64_t v20 = 0;
    goto LABEL_8;
  }
  uint64_t v11 = *a1;
  unint64_t v12 = a1[1];
  sub_2504DBC4C(v11, v12);
  unint64_t v13 = sub_250512FE8(v11, v12);
  if (v14)
  {
    unint64_t v15 = v13;
    uint64_t v16 = *(void *)(v10 + 56);
    uint64_t v17 = type metadata accessor for GroupMembership.MemberProperties(0);
    uint64_t v18 = *(void *)(v17 - 8);
    sub_2505B713C(v16 + *(void *)(v18 + 72) * v15, (uint64_t)v9, type metadata accessor for GroupMembership.MemberProperties);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
  }
  else
  {
    uint64_t v17 = type metadata accessor for GroupMembership.MemberProperties(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
  }
  sub_250511528(v11, v12);
  type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v20 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v9, 1, v17) == 1) {
    goto LABEL_7;
  }
LABEL_8:
  sub_2504DAF60((uint64_t)v9, &qword_269AB5A80);
  return v20;
}

uint64_t sub_2505B2554(uint64_t result, unint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  if (a3 != 2)
  {
    sub_250511528(result, a2);
    return sub_250511528(a4, a5);
  }
  return result;
}

uint64_t sub_2505B25A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_2504DBC4C(v3, v2);
}

uint64_t sub_2505B25D8(uint64_t a1, uint8_t *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  uint64_t result = MEMORY[0x270FA5388](v5 - 8, v6, v7, v8, v9);
  unint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return result;
  }
  v37[0] = v2;
  swift_bridgeObjectRetain();
  v37[1] = a1;
  char v14 = (unint64_t *)(a1 + 40);
  uint64_t v40 = a2;
  while (1)
  {
    uint64_t v16 = *(v14 - 1);
    unint64_t v17 = *v14;
    if (*((void *)a2 + 2)) {
      break;
    }
    uint64_t v15 = type metadata accessor for GroupMembership.MemberProperties(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    sub_2504DBC4C(v16, v17);
LABEL_4:
    v14 += 2;
    sub_2504DAF60((uint64_t)v12, &qword_269AB5A80);
    sub_250511528(v16, v17);
    if (!--v13) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_2504DBC4C(*(v14 - 1), *v14);
  sub_2504DBC4C(v16, v17);
  unint64_t v18 = sub_250512FE8(v16, v17);
  if (v19)
  {
    unint64_t v20 = v18;
    uint64_t v38 = v16;
    uint64_t v21 = *((void *)a2 + 7);
    uint64_t v22 = type metadata accessor for GroupMembership.MemberProperties(0);
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v39 = v17;
    uint64_t v24 = v23;
    uint64_t v25 = v21 + *(void *)(v23 + 72) * v20;
    uint64_t v16 = v38;
    sub_2505B713C(v25, (uint64_t)v12, type metadata accessor for GroupMembership.MemberProperties);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v22);
    unint64_t v17 = v39;
  }
  else
  {
    uint64_t v22 = type metadata accessor for GroupMembership.MemberProperties(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 1, 1, v22);
  }
  sub_250511528(v16, v17);
  type metadata accessor for GroupMembership.MemberProperties(0);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v12, 1, v22);
  a2 = v40;
  if (v26 == 1) {
    goto LABEL_4;
  }
  sub_2504DAF60((uint64_t)v12, &qword_269AB5A80);
  if (qword_269AB5418 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_2505BDC40();
  __swift_project_value_buffer(v27, (uint64_t)qword_269AC3188);
  os_log_type_t v28 = sub_2505BE3D0();
  sub_2504DBC4C(v16, v17);
  sub_2504DBC4C(v16, v17);
  uint64_t v29 = sub_2505BDC20();
  os_log_type_t v30 = v28;
  if (os_log_type_enabled(v29, v28))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v42 = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    uint64_t v40 = v31 + 4;
    sub_2504DBC4C(v16, v17);
    uint64_t v33 = sub_2505BD8B0();
    unint64_t v35 = v34;
    sub_250511528(v16, v17);
    uint64_t v41 = sub_25051171C(v33, v35, &v42);
    sub_2505BE430();
    swift_bridgeObjectRelease();
    sub_250511528(v16, v17);
    sub_250511528(v16, v17);
    _os_log_impl(&dword_2504D2000, v29, v30, "member %s is in the group when it should not be", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25337FF10](v32, -1, -1);
    MEMORY[0x25337FF10](v31, -1, -1);
  }
  else
  {
    sub_250511528(v16, v17);
    sub_250511528(v16, v17);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
  sub_25055AFD0();
  swift_allocError();
  *(_WORD *)uint64_t v36 = 271;
  *(_OWORD *)(v36 + 8) = xmmword_2505C6A80;
  *(void *)(v36 + 24) = 0x80000002505CCAB0;
  *(void *)(v36 + 32) = 0xD00000000000005CLL;
  *(void *)(v36 + 40) = 0x80000002505CA080;
  swift_willThrow();
  sub_250511528(v16, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2505B2AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  uint64_t result = MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = a1;
    uint64_t v13 = (unint64_t *)(a1 + 40);
    char v14 = &qword_269AB5A80;
    uint64_t v29 = v11;
    uint64_t v27 = a2;
    while (1)
    {
      uint64_t v15 = *(v13 - 1);
      unint64_t v16 = *v13;
      if (!*(void *)(a2 + 16)) {
        break;
      }
      sub_2504DBC4C(*(v13 - 1), *v13);
      sub_2504DBC4C(v15, v16);
      unint64_t v17 = sub_250512FE8(v15, v16);
      if (v18)
      {
        unint64_t v19 = v17;
        uint64_t v28 = *(void *)(a2 + 56);
        uint64_t v20 = type metadata accessor for GroupMembership.MemberProperties(0);
        uint64_t v21 = v14;
        uint64_t v22 = *(void *)(v20 - 8);
        uint64_t v23 = v28 + *(void *)(v22 + 72) * v19;
        uint64_t v11 = v29;
        sub_2505B713C(v23, (uint64_t)v29, type metadata accessor for GroupMembership.MemberProperties);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v20);
        char v14 = v21;
        a2 = v27;
      }
      else
      {
        uint64_t v20 = type metadata accessor for GroupMembership.MemberProperties(0);
        uint64_t v11 = v29;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
      }
      sub_250511528(v15, v16);
      type metadata accessor for GroupMembership.MemberProperties(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v11, 1, v20) == 1) {
        goto LABEL_12;
      }
      v13 += 2;
      sub_2504DAF60((uint64_t)v11, v14);
      sub_250511528(v15, v16);
      if (!--v12) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v24 = type metadata accessor for GroupMembership.MemberProperties(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 1, 1, v24);
    sub_2504DBC4C(v15, v16);
LABEL_12:
    sub_2504DAF60((uint64_t)v11, &qword_269AB5A80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
    sub_25055AFD0();
    swift_allocError();
    *(_WORD *)uint64_t v25 = 269;
    *(_OWORD *)(v25 + 8) = xmmword_2505C6A90;
    *(void *)(v25 + 24) = 0x80000002505CCA90;
    *(void *)(v25 + 32) = 0xD00000000000005CLL;
    *(void *)(v25 + 40) = 0x80000002505CA080;
    swift_willThrow();
    sub_250511528(v15, v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2505B2E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v39 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v40 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v38 = a2;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  uint64_t v18 = (v14 - 1) & v14;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v16 << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    if (!*(void *)(a2 + 16))
    {
      uint64_t v35 = type metadata accessor for GroupMembership.MemberProperties(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v10, 1, 1, v35);
      sub_2504DBC4C(v24, v25);
LABEL_29:
      sub_2504DAF60((uint64_t)v10, &qword_269AB5A80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
      sub_25055AFD0();
      swift_allocError();
      *(_WORD *)uint64_t v36 = 269;
      *(_OWORD *)(v36 + 8) = xmmword_2505C6A90;
      *(void *)(v36 + 24) = 0x80000002505CCA90;
      *(void *)(v36 + 32) = 0xD00000000000005CLL;
      *(void *)(v36 + 40) = 0x80000002505CA080;
      swift_willThrow();
      sub_250511528(v24, v25);
      return swift_release();
    }
    unint64_t v41 = v18;
    int64_t v42 = v16;
    sub_2504DBC4C(v24, v25);
    sub_2504DBC4C(v24, v25);
    unint64_t v26 = sub_250512FE8(v24, v25);
    if (v27)
    {
      unint64_t v28 = v26;
      uint64_t v29 = (uint64_t)v10;
      uint64_t v30 = a1;
      uint64_t v31 = *(void *)(a2 + 56);
      uint64_t v32 = type metadata accessor for GroupMembership.MemberProperties(0);
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v34 = v31 + *(void *)(v33 + 72) * v28;
      a1 = v30;
      uint64_t v10 = (char *)v29;
      sub_2505B713C(v34, v29, type metadata accessor for GroupMembership.MemberProperties);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      a2 = v38;
    }
    else
    {
      uint64_t v32 = type metadata accessor for GroupMembership.MemberProperties(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v10, 1, 1, v32);
    }
    sub_250511528(v24, v25);
    type metadata accessor for GroupMembership.MemberProperties(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v10, 1, v32) == 1) {
      goto LABEL_29;
    }
    sub_2504DAF60((uint64_t)v10, &qword_269AB5A80);
    uint64_t result = sub_250511528(v24, v25);
    int64_t v16 = v42;
    unint64_t v14 = v41;
    if (v41) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v40) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v39 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v40) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v39 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v40) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v39 + 8 * v16);
        if (!v21)
        {
          int64_t v16 = v20 + 3;
          if (v20 + 3 >= v40) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v39 + 8 * v16);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_20:
    uint64_t v18 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v40) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v39 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v40) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v39 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2505B32C8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedConformanceWitness = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A80);
  uint64_t v9 = MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v9, v13, v14, v15, v16);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v20, v21, v22, v23);
  unint64_t v25 = (char *)&v42 - v24;
  uint64_t v26 = *v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, AssociatedConformanceWitness, a2);
  uint64_t v27 = v26;
  sub_2505BE220();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_2505BE420();
  unint64_t v28 = v47;
  if (v47 >> 60 == 15) {
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v25, AssociatedTypeWitness);
  }
  uint64_t v29 = v46;
  uint64_t v44 = v27;
  uint64_t v45 = v11;
  while (*(void *)(v27 + 16))
  {
    sub_2504DBC4C(v29, v28);
    unint64_t v30 = sub_250512FE8(v29, v28);
    if (v31)
    {
      unint64_t v32 = v30;
      uint64_t v33 = v25;
      uint64_t v34 = AssociatedTypeWitness;
      uint64_t v35 = *(void *)(v27 + 56);
      uint64_t v36 = type metadata accessor for GroupMembership.MemberProperties(0);
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v38 = v35 + *(void *)(v37 + 72) * v32;
      uint64_t AssociatedTypeWitness = v34;
      unint64_t v25 = v33;
      uint64_t v11 = v45;
      sub_2505B713C(v38, (uint64_t)v45, type metadata accessor for GroupMembership.MemberProperties);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v11, 0, 1, v36);
      uint64_t v27 = v44;
    }
    else
    {
      uint64_t v36 = type metadata accessor for GroupMembership.MemberProperties(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v11, 1, 1, v36);
    }
    sub_250586944(v29, v28);
    type metadata accessor for GroupMembership.MemberProperties(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v11, 1, v36) == 1) {
      goto LABEL_11;
    }
    sub_2504DAF60((uint64_t)v11, &qword_269AB5A80);
    sub_250586944(v29, v28);
    sub_2505BE420();
    uint64_t v29 = v46;
    unint64_t v28 = v47;
    if (v47 >> 60 == 15) {
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v25, AssociatedTypeWitness);
    }
  }
  uint64_t v40 = type metadata accessor for GroupMembership.MemberProperties(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v11, 1, 1, v40);
LABEL_11:
  sub_2504DAF60((uint64_t)v11, &qword_269AB5A80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB59E0);
  sub_25055AFD0();
  swift_allocError();
  *(_WORD *)uint64_t v41 = 269;
  *(_OWORD *)(v41 + 8) = xmmword_2505C6A90;
  *(void *)(v41 + 24) = 0x80000002505CCA90;
  *(void *)(v41 + 32) = 0xD00000000000005CLL;
  *(void *)(v41 + 40) = 0x80000002505CA080;
  swift_willThrow();
  sub_250586944(v29, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v25, AssociatedTypeWitness);
}

uint64_t sub_2505B37A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
  uint64_t v7 = MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v10, v11, v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v33 - v14);
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v35 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v36 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_5;
    }
    int64_t v29 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v29 >= v35) {
      goto LABEL_24;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v29);
    ++v21;
    if (!v30)
    {
      int64_t v21 = v29 + 1;
      if (v29 + 1 >= v35) {
        goto LABEL_24;
      }
      unint64_t v30 = *(void *)(v34 + 8 * v21);
      if (!v30)
      {
        int64_t v21 = v29 + 2;
        if (v29 + 2 >= v35) {
          goto LABEL_24;
        }
        unint64_t v30 = *(void *)(v34 + 8 * v21);
        if (!v30)
        {
          int64_t v21 = v29 + 3;
          if (v29 + 3 >= v35) {
            goto LABEL_24;
          }
          unint64_t v30 = *(void *)(v34 + 8 * v21);
          if (!v30)
          {
            int64_t v31 = v29 + 4;
            if (v31 >= v35)
            {
LABEL_24:
              uint64_t v32 = 0;
              goto LABEL_25;
            }
            unint64_t v30 = *(void *)(v34 + 8 * v31);
            if (!v30)
            {
              while (1)
              {
                int64_t v21 = v31 + 1;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_27;
                }
                if (v21 >= v35) {
                  goto LABEL_24;
                }
                unint64_t v30 = *(void *)(v34 + 8 * v21);
                ++v31;
                if (v30) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v21 = v31;
          }
        }
      }
    }
LABEL_22:
    unint64_t v19 = (v30 - 1) & v30;
    unint64_t v23 = __clz(__rbit64(v30)) + (v21 << 6);
LABEL_5:
    uint64_t v24 = *(void *)(v36 + 56);
    unint64_t v25 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v23);
    uint64_t v26 = *v25;
    unint64_t v27 = v25[1];
    uint64_t v28 = type metadata accessor for GroupMembership.MemberProperties(0);
    sub_2505B713C(v24 + *(void *)(*(void *)(v28 - 8) + 72) * v23, (uint64_t)v15 + *(int *)(v2 + 48), type metadata accessor for GroupMembership.MemberProperties);
    *uint64_t v15 = v26;
    v15[1] = v27;
    sub_2505283F0((uint64_t)v15, (uint64_t)v9, &qword_269AB5E90);
    LOBYTE(v24) = v9[*(int *)(v2 + 48)];
    sub_2504DBC4C(v26, v27);
    uint64_t result = sub_2504DAF60((uint64_t)v9, &qword_269AB5E90);
    if ((v24 & 1) == 0)
    {
      uint64_t v32 = 1;
LABEL_25:
      swift_release();
      return v32;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static GroupMembership.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2505B3A64(*a1, *a2);
}

uint64_t sub_2505B3A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v4 - 8, v6, v7, v8, v9);
  uint64_t v68 = (unsigned __int8 *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v17 = (unsigned __int8 *)&v62 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E88);
  uint64_t v23 = MEMORY[0x270FA5388](v18 - 8, v19, v20, v21, v22);
  unint64_t v25 = (uint64_t *)((char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v23, v26, v27, v28, v29);
  uint64_t v32 = (uint64_t *)((char *)&v62 - v31);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v69 = 0;
  uint64_t v66 = a1;
  uint64_t v67 = v5;
  uint64_t v35 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v33 = v35;
  uint64_t v36 = 1 << *(unsigned char *)(v34 - 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & v33;
  uint64_t v64 = v34;
  int64_t v65 = (unint64_t)(v36 + 63) >> 6;
  int64_t v63 = v65 - 1;
  while (1)
  {
    if (v38)
    {
      unint64_t v39 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      unint64_t v40 = v39 | (v69 << 6);
LABEL_8:
      uint64_t v41 = *(void *)(v66 + 56);
      uint64_t v42 = (uint64_t *)(*(void *)(v66 + 48) + 16 * v40);
      uint64_t v43 = *v42;
      unint64_t v44 = v42[1];
      *unint64_t v25 = *v42;
      v25[1] = v44;
      uint64_t v45 = v41 + *(void *)(v5 + 72) * v40;
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
      sub_2505B713C(v45, (uint64_t)v25 + *(int *)(v46 + 48), type metadata accessor for GroupMembership.MemberProperties);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v25, 0, 1, v46);
      sub_2504DBC4C(v43, v44);
      goto LABEL_30;
    }
    int64_t v47 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v47 < v65)
    {
      unint64_t v48 = *(void *)(v64 + 8 * v47);
      if (v48) {
        goto LABEL_12;
      }
      int64_t v49 = v69 + 2;
      ++v69;
      if (v47 + 1 < v65)
      {
        unint64_t v48 = *(void *)(v64 + 8 * v49);
        if (v48) {
          goto LABEL_15;
        }
        int64_t v69 = v47 + 1;
        if (v47 + 2 < v65)
        {
          unint64_t v48 = *(void *)(v64 + 8 * (v47 + 2));
          if (v48)
          {
            v47 += 2;
            goto LABEL_12;
          }
          int64_t v69 = v47 + 2;
          if (v47 + 3 < v65)
          {
            unint64_t v48 = *(void *)(v64 + 8 * (v47 + 3));
            if (v48)
            {
              v47 += 3;
              goto LABEL_12;
            }
            int64_t v49 = v47 + 4;
            int64_t v69 = v47 + 3;
            if (v47 + 4 < v65) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v25, 1, 1, v50);
    unint64_t v38 = 0;
LABEL_30:
    sub_2505283F0((uint64_t)v25, (uint64_t)v32, &qword_269AB5E88);
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
    int v52 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v32, 1, v51);
    BOOL v53 = v52 == 1;
    if (v52 == 1) {
      return v53;
    }
    uint64_t v54 = *v32;
    unint64_t v55 = v32[1];
    sub_2505B7E08((uint64_t)v32 + *(int *)(v51 + 48), (uint64_t)v17, type metadata accessor for GroupMembership.MemberProperties);
    unint64_t v56 = sub_250512FE8(v54, v55);
    char v58 = v57;
    sub_250511528(v54, v55);
    if ((v58 & 1) == 0)
    {
      sub_2505B7078((uint64_t)v17, type metadata accessor for GroupMembership.MemberProperties);
      return 0;
    }
    uint64_t v5 = v67;
    uint64_t v59 = *(void *)(a2 + 56) + *(void *)(v67 + 72) * v56;
    uint64_t v60 = v68;
    sub_2505B713C(v59, (uint64_t)v68, type metadata accessor for GroupMembership.MemberProperties);
    char v61 = _s14GroupKitCrypto0A10MembershipV16MemberPropertiesV2eeoiySbAE_AEtFZ_0(v60, v17);
    sub_2505B7078((uint64_t)v60, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t result = sub_2505B7078((uint64_t)v17, type metadata accessor for GroupMembership.MemberProperties);
    if ((v61 & 1) == 0) {
      return v53;
    }
  }
  unint64_t v48 = *(void *)(v64 + 8 * v49);
  if (v48)
  {
LABEL_15:
    int64_t v47 = v49;
LABEL_12:
    unint64_t v38 = (v48 - 1) & v48;
    unint64_t v40 = __clz(__rbit64(v48)) + (v47 << 6);
    int64_t v69 = v47;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v47 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v47 >= v65)
    {
      int64_t v69 = v63;
      goto LABEL_29;
    }
    unint64_t v48 = *(void *)(v64 + 8 * v47);
    ++v49;
    if (v48) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_2505B3F64(uint64_t *a1, uint64_t *a2)
{
  return sub_2505B3A64(*a1, *a2);
}

uint64_t sub_2505B3F70(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_250512FE8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2505B6AC4(&qword_269AB5E68);
    uint64_t v9 = v12;
  }
  sub_250511528(*(void *)(*(void *)(v9 + 48) + 16 * v6), *(void *)(*(void *)(v9 + 48) + 16 * v6 + 8));
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_2505B61DC(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2505B4048@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_250512FE8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2505B7420(type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v11 = v21;
    }
    sub_250511528(*(void *)(*(void *)(v11 + 48) + 16 * v8), *(void *)(*(void *)(v11 + 48) + 16 * v8 + 8));
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for GroupMembership.MemberProperties(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_2505B7E08(v12 + *(void *)(v20 + 72) * v8, a3, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B65D0(v8, v11, type metadata accessor for GroupMembership.MemberProperties);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for GroupMembership.MemberProperties(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

double sub_2505B4244@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_250512FE8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v15 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2505B71C4();
      uint64_t v11 = v15;
    }
    sub_250511528(*(void *)(*(void *)(v11 + 48) + 16 * v8), *(void *)(*(void *)(v11 + 48) + 16 * v8 + 8));
    uint64_t v12 = (_OWORD *)(*(void *)(v11 + 56) + 48 * v8);
    long long v13 = v12[1];
    *a3 = *v12;
    a3[1] = v13;
    a3[2] = v12[2];
    sub_2505B63DC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = xmmword_2505BFEE0;
    a3[1] = 0u;
    a3[2] = 0u;
  }
  return result;
}

uint64_t sub_2505B4360@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_250512FE8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2505B7420(type metadata accessor for MembershipVerifier, &qword_269AB5FF8, type metadata accessor for MembershipVerifier, type metadata accessor for MembershipVerifier);
      uint64_t v11 = v21;
    }
    sub_250511528(*(void *)(*(void *)(v11 + 48) + 16 * v8), *(void *)(*(void *)(v11 + 48) + 16 * v8 + 8));
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for MembershipVerifier(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_2505B7E08(v12 + *(void *)(v20 + 72) * v8, a3, type metadata accessor for MembershipVerifier);
    sub_2505B65D0(v8, v11, type metadata accessor for MembershipVerifier);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for MembershipVerifier(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_2505B455C(uint64_t a1, char a2)
{
  return sub_2505B4574(a1, a2, &qword_269AB6D68);
}

uint64_t sub_2505B4568(uint64_t a1, char a2)
{
  return sub_2505B4574(a1, a2, &qword_269AB5E68);
}

uint64_t sub_2505B4574(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = sub_2505BE620();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v32 = v3;
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v34 = (void *)(v6 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v14 << 6);
      }
      else
      {
        int64_t v22 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v33) {
          goto LABEL_33;
        }
        unint64_t v23 = v34[v22];
        ++v14;
        if (!v23)
        {
          int64_t v14 = v22 + 1;
          if (v22 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v23 = v34[v14];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v33)
            {
LABEL_33:
              swift_release();
              uint64_t v4 = v32;
              if (a2)
              {
                uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
                if (v31 >= 64) {
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v31;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v34[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v14 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v23 = v34[v14];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v14 << 6);
      }
      uint64_t v29 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
      long long v35 = *(_OWORD *)(*(void *)(v6 + 48) + 16 * v21);
      unint64_t v30 = *(void *)(*(void *)(v6 + 48) + 16 * v21 + 8);
      if ((a2 & 1) == 0)
      {
        sub_2504DBC4C(v35, v30);
        swift_bridgeObjectRetain();
      }
      sub_2505BE850();
      sub_2504DBC4C(v35, v30);
      sub_2505BD950();
      sub_250511528(v35, v30);
      uint64_t result = sub_2505BE880();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        long long v19 = v35;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        long long v19 = v35;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(void *)(v8 + 48) + 16 * v18) = v19;
      *(void *)(*(void *)(v8 + 56) + 8 * v18) = v29;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2505B4894(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E48);
  char v35 = a2;
  uint64_t v6 = sub_2505BE620();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v33) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v29);
    uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
    if ((v35 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    sub_2505BE850();
    swift_bridgeObjectRetain();
    sub_2505BE180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2505BE180();
    swift_bridgeObjectRelease();
    uint64_t result = sub_2505BE880();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2505B4BE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E18);
  uint64_t v6 = sub_2505BE620();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_250527D34(v24, v35);
      }
      else
      {
        sub_25052857C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_2505BE850();
      sub_2505BE180();
      uint64_t result = sub_2505BE880();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_250527D34(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2505B4EE4(uint64_t a1, int a2)
{
  return sub_2505B5358(a1, a2, type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
}

uint64_t sub_2505B4F2C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6000);
  char v45 = a2;
  uint64_t v6 = sub_2505BE620();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v46 = v13;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v42) {
      break;
    }
    uint64_t v23 = v43;
    unint64_t v24 = v43[v22];
    int64_t v25 = v13 + 1;
    if (!v24)
    {
      int64_t v25 = v13 + 2;
      if (v13 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v24 = v43[v25];
      if (!v24)
      {
        uint64_t v26 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v43[v26];
        if (!v24)
        {
          while (1)
          {
            int64_t v25 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v25 >= v42) {
              goto LABEL_33;
            }
            unint64_t v24 = v43[v25];
            ++v26;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v25 = v13 + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    int64_t v46 = v25;
    unint64_t v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_31:
    long long v31 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 48 * v21);
    uint64_t v33 = *v32;
    unint64_t v34 = v32[1];
    uint64_t v35 = v32[2];
    unint64_t v36 = v32[3];
    uint64_t v37 = v32[4];
    unint64_t v38 = v32[5];
    long long v47 = v31;
    unint64_t v39 = *((void *)&v31 + 1);
    if ((v45 & 1) == 0)
    {
      sub_2504DBC4C(v31, *((unint64_t *)&v31 + 1));
      sub_2504DBC4C(v33, v34);
      sub_2504DBC4C(v35, v36);
      sub_2504DBC4C(v37, v38);
    }
    sub_2505BE850();
    sub_2504DBC4C(v47, v39);
    sub_2505BD950();
    sub_250511528(v47, v39);
    uint64_t result = sub_2505BE880();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      long long v18 = v47;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      long long v18 = v47;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v18;
    unint64_t v19 = (uint64_t *)(*(void *)(v7 + 56) + 48 * v17);
    *unint64_t v19 = v33;
    v19[1] = v34;
    v19[2] = v35;
    v19[3] = v36;
    int64_t v13 = v46;
    v19[4] = v37;
    void v19[5] = v38;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v41;
  uint64_t v23 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2505B52C8(uint64_t a1, int a2)
{
  return sub_2505B5358(a1, a2, type metadata accessor for MembershipVerifier, &qword_269AB5FF8, type metadata accessor for MembershipVerifier, type metadata accessor for MembershipVerifier);
}

uint64_t sub_2505B5310(uint64_t a1, int a2)
{
  return sub_2505B5358(a1, a2, type metadata accessor for UserKeyingInfo, &qword_269AB6D70, type metadata accessor for UserKeyingInfo, type metadata accessor for UserKeyingInfo);
}

uint64_t sub_2505B5358(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v51 = a6;
  uint64_t v9 = v6;
  uint64_t v11 = a3(0);
  uint64_t v52 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8, v12, v13, v14, v15);
  unint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v53 = a2;
  uint64_t v19 = sub_2505BE620();
  uint64_t v20 = v19;
  if (!*(void *)(v18 + 16)) {
    goto LABEL_41;
  }
  uint64_t v21 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v22 = *(void *)(v18 + 64);
  uint64_t v50 = (void *)(v18 + 64);
  if (v21 < 64) {
    uint64_t v23 = ~(-1 << v21);
  }
  else {
    uint64_t v23 = -1;
  }
  unint64_t v24 = v23 & v22;
  unint64_t v48 = v6;
  int64_t v49 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v25 = v19 + 64;
  uint64_t result = swift_retain();
  int64_t v27 = 0;
  while (1)
  {
    if (v24)
    {
      unint64_t v30 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v31 = v30 | (v27 << 6);
      goto LABEL_22;
    }
    int64_t v32 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v32 >= v49) {
      break;
    }
    uint64_t v33 = v50;
    unint64_t v34 = v50[v32];
    ++v27;
    if (!v34)
    {
      int64_t v27 = v32 + 1;
      if (v32 + 1 >= v49) {
        goto LABEL_34;
      }
      unint64_t v34 = v50[v27];
      if (!v34)
      {
        int64_t v35 = v32 + 2;
        if (v35 >= v49)
        {
LABEL_34:
          swift_release();
          uint64_t v9 = v48;
          if ((v53 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v34 = v50[v35];
        if (!v34)
        {
          while (1)
          {
            int64_t v27 = v35 + 1;
            if (__OFADD__(v35, 1)) {
              goto LABEL_43;
            }
            if (v27 >= v49) {
              goto LABEL_34;
            }
            unint64_t v34 = v50[v27];
            ++v35;
            if (v34) {
              goto LABEL_21;
            }
          }
        }
        int64_t v27 = v35;
      }
    }
LABEL_21:
    unint64_t v24 = (v34 - 1) & v34;
    unint64_t v31 = __clz(__rbit64(v34)) + (v27 << 6);
LABEL_22:
    uint64_t v36 = *(void *)(v52 + 72);
    uint64_t v37 = *(void *)(v18 + 56) + v36 * v31;
    unint64_t v38 = *(void *)(*(void *)(v18 + 48) + 16 * v31 + 8);
    long long v54 = *(_OWORD *)(*(void *)(v18 + 48) + 16 * v31);
    if (v53)
    {
      sub_2505B7E08(v37, (uint64_t)v17, a5);
    }
    else
    {
      sub_2505B713C(v37, (uint64_t)v17, v51);
      sub_2504DBC4C(v54, v38);
    }
    sub_2505BE850();
    uint64_t v39 = v54;
    sub_2504DBC4C(v54, v38);
    sub_2505BD950();
    sub_250511528(v39, v38);
    uint64_t result = sub_2505BE880();
    uint64_t v40 = -1 << *(unsigned char *)(v20 + 32);
    unint64_t v41 = result & ~v40;
    unint64_t v42 = v41 >> 6;
    if (((-1 << v41) & ~*(void *)(v25 + 8 * (v41 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v41) & ~*(void *)(v25 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
      long long v29 = v54;
    }
    else
    {
      char v43 = 0;
      unint64_t v44 = (unint64_t)(63 - v40) >> 6;
      long long v29 = v54;
      do
      {
        if (++v42 == v44 && (v43 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v45 = v42 == v44;
        if (v42 == v44) {
          unint64_t v42 = 0;
        }
        v43 |= v45;
        uint64_t v46 = *(void *)(v25 + 8 * v42);
      }
      while (v46 == -1);
      unint64_t v28 = __clz(__rbit64(~v46)) + (v42 << 6);
    }
    *(void *)(v25 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(_OWORD *)(*(void *)(v20 + 48) + 16 * v28) = v29;
    uint64_t result = sub_2505B7E08((uint64_t)v17, *(void *)(v20 + 56) + v36 * v28, a5);
    ++*(void *)(v20 + 16);
  }
  swift_release();
  uint64_t v9 = v48;
  uint64_t v33 = v50;
  if ((v53 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v47 = 1 << *(unsigned char *)(v18 + 32);
  if (v47 >= 64) {
    bzero(v33, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v33 = -1 << v47;
  }
  *(void *)(v18 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v9 = v20;
  return result;
}

uint64_t sub_2505B573C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2505BE0B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7, v8, v9, v10);
  long long v54 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D78);
  int v53 = a2;
  uint64_t v13 = sub_2505BE620();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 64);
  uint64_t v50 = (void *)(v12 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  unint64_t v48 = v2;
  int64_t v49 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v19 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v20 = v13 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  uint64_t v52 = v5;
  while (1)
  {
    if (v18)
    {
      unint64_t v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v26 = v25 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v49) {
      break;
    }
    unint64_t v28 = v50;
    unint64_t v29 = v50[v27];
    ++v22;
    if (!v29)
    {
      int64_t v22 = v27 + 1;
      if (v27 + 1 >= v49) {
        goto LABEL_34;
      }
      unint64_t v29 = v50[v22];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v49)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v48;
          if ((v53 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v50[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v22 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v49) {
              goto LABEL_34;
            }
            unint64_t v29 = v50[v22];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v30;
      }
    }
LABEL_21:
    unint64_t v18 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_22:
    uint64_t v31 = *(void *)(v12 + 48);
    uint64_t v32 = *(void *)(v12 + 56);
    uint64_t v33 = v12;
    uint64_t v34 = v6;
    uint64_t v35 = *(void *)(v6 + 72);
    uint64_t v36 = v32 + v35 * v26;
    unint64_t v37 = *(void *)(v31 + 16 * v26 + 8);
    long long v55 = *(_OWORD *)(v31 + 16 * v26);
    if (v53)
    {
      (*v19)(v54, v36, v5);
    }
    else
    {
      (*v51)(v54, v36, v5);
      sub_2504DBC4C(v55, v37);
    }
    sub_2505BE850();
    uint64_t v38 = v55;
    sub_2504DBC4C(v55, v37);
    sub_2505BD950();
    sub_250511528(v38, v37);
    uint64_t result = sub_2505BE880();
    uint64_t v39 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v20 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v40) & ~*(void *)(v20 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v5 = v52;
      long long v24 = v55;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      uint64_t v5 = v52;
      long long v24 = v55;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v20 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v23 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_OWORD *)(*(void *)(v14 + 48) + 16 * v23) = v24;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v19)(*(void *)(v14 + 56) + v35 * v23, v54, v5);
    ++*(void *)(v14 + 16);
    uint64_t v6 = v34;
    uint64_t v12 = v33;
  }
  swift_release();
  uint64_t v3 = v48;
  unint64_t v28 = v50;
  if ((v53 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v46 = 1 << *(unsigned char *)(v12 + 32);
  if (v46 >= 64) {
    bzero(v28, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v28 = -1 << v46;
  }
  *(void *)(v12 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v14;
  return result;
}

uint64_t sub_2505B5B74(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D80);
  uint64_t v6 = sub_2505BE620();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    long long v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v36 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v36 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v36 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v36 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + v31);
    long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    long long v38 = v32;
    unint64_t v33 = *(void *)(*(void *)(v5 + 48) + v31 + 8);
    if ((a2 & 1) == 0)
    {
      sub_2504DBC4C(v32, *((unint64_t *)&v32 + 1));
      sub_2504DBC4C(v37, *((unint64_t *)&v37 + 1));
    }
    sub_2505BE850();
    sub_2504DBC4C(v38, v33);
    sub_2505BD950();
    sub_250511528(v38, v33);
    uint64_t result = sub_2505BE880();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v38;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v38;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v20 = 16 * v18;
    *(_OWORD *)(*(void *)(v7 + 48) + v20) = v19;
    *(_OWORD *)(*(void *)(v7 + 56) + v20) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  long long v24 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v24, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v24 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2505B5EB0(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E60);
  char v42 = a2;
  uint64_t result = sub_2505BE620();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    unint64_t v40 = (void *)(v4 + 64);
    uint64_t v41 = v4;
    uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 64);
    int64_t v39 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = result + 64;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v43 = v7;
        unint64_t v18 = v17 | (v7 << 6);
      }
      else
      {
        int64_t v19 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v40;
        if (v19 >= v39) {
          goto LABEL_33;
        }
        unint64_t v20 = v40[v19];
        int64_t v21 = v7 + 1;
        if (!v20)
        {
          int64_t v21 = v7 + 2;
          if (v7 + 2 >= v39) {
            goto LABEL_33;
          }
          unint64_t v20 = v40[v21];
          if (!v20)
          {
            uint64_t v22 = v7 + 3;
            if (v7 + 3 >= v39)
            {
LABEL_33:
              if ((v42 & 1) == 0) {
                break;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v4 + 32);
              if (v36 >= 64) {
                bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v40 = -1 << v36;
              }
              long long v37 = v38;
              *(void *)(v4 + 16) = 0;
              uint64_t result = swift_release();
              goto LABEL_39;
            }
            unint64_t v20 = v40[v22];
            if (!v20)
            {
              while (1)
              {
                int64_t v21 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v21 >= v39) {
                  goto LABEL_33;
                }
                unint64_t v20 = v40[v21];
                ++v22;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v21 = v7 + 3;
          }
        }
LABEL_30:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v43 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v27 = *(void *)(v4 + 56);
      uint64_t v28 = *(unsigned int *)(*(void *)(v4 + 48) + 4 * v18);
      BOOL v29 = (uint64_t *)(v27 + (v18 << 6));
      uint64_t v30 = *v29;
      unint64_t v31 = v29[1];
      uint64_t v32 = v29[2];
      unint64_t v33 = v29[3];
      uint64_t v34 = v29[4];
      uint64_t v35 = v29[6];
      unint64_t v44 = v29[7];
      unint64_t v45 = v29[5];
      if ((v42 & 1) == 0)
      {
        sub_2504DBC4C(v30, v31);
        sub_2504DBC4C(v32, v33);
        sub_2504DBC4C(v34, v45);
        sub_2504DBC4C(v35, v44);
      }
      uint64_t result = MEMORY[0x25337F7B0](*(void *)(v6 + 40), v28, 4);
      uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v13 = result & ~v12;
      unint64_t v14 = v13 >> 6;
      if (((-1 << v13) & ~*(void *)(v11 + 8 * (v13 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v11 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v12) >> 6;
        do
        {
          if (++v14 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v14 == v24;
          if (v14 == v24) {
            unint64_t v14 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v11 + 8 * v14);
        }
        while (v26 == -1);
        unint64_t v15 = __clz(__rbit64(~v26)) + (v14 << 6);
      }
      *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_DWORD *)(*(void *)(v6 + 48) + 4 * v15) = v28;
      unint64_t v16 = (uint64_t *)(*(void *)(v6 + 56) + (v15 << 6));
      *unint64_t v16 = v30;
      v16[1] = v31;
      void v16[2] = v32;
      void v16[3] = v33;
      v16[4] = v34;
      v16[5] = v45;
      int64_t v7 = v43;
      void v16[6] = v35;
      void v16[7] = v44;
      ++*(void *)(v6 + 16);
      uint64_t v4 = v41;
    }
  }
  uint64_t result = swift_release();
  long long v37 = v38;
LABEL_39:
  *long long v37 = v6;
  return result;
}

unint64_t sub_2505B61DC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2505BE450();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v6);
        uint64_t v10 = *v9;
        unint64_t v11 = v9[1];
        sub_2505BE850();
        sub_2504DBC4C(v10, v11);
        sub_2505BD950();
        uint64_t v12 = sub_2505BE880();
        uint64_t result = sub_250511528(v10, v11);
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          unint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *unint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          unint64_t v18 = (void *)(v17 + 8 * v3);
          int64_t v19 = (void *)(v17 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 1))
          {
            *unint64_t v18 = *v19;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2505B63C4(unint64_t a1, uint64_t a2)
{
  return sub_2505B65D0(a1, a2, type metadata accessor for GroupMembership.MemberProperties);
}

unint64_t sub_2505B63DC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2505BE450();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        unint64_t v11 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v6);
        uint64_t v12 = *v11;
        unint64_t v13 = v11[1];
        sub_2505BE850();
        sub_2504DBC4C(v12, v13);
        sub_2505BD950();
        uint64_t v14 = sub_2505BE880();
        uint64_t result = sub_250511528(v12, v13);
        unint64_t v15 = v14 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v15 < v8) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_11:
          uint64_t v16 = *(void *)(a2 + 48);
          uint64_t v17 = (_OWORD *)(v16 + 16 * v3);
          unint64_t v18 = (_OWORD *)(v16 + 16 * v6);
          if (v3 != v6 || v17 >= v18 + 1) {
            _OWORD *v17 = *v18;
          }
          uint64_t v19 = *(void *)(a2 + 56);
          unint64_t v20 = (long long *)(v19 + 48 * v3);
          uint64_t v21 = (long long *)(v19 + 48 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 3))
          {
            long long v9 = *v21;
            long long v10 = v21[2];
            v20[1] = v21[1];
            v20[2] = v10;
            *unint64_t v20 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2505B65D0(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t result = sub_2505BE450();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        unint64_t v11 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v7);
        uint64_t v12 = *v11;
        unint64_t v13 = v11[1];
        sub_2505BE850();
        sub_2504DBC4C(v12, v13);
        sub_2505BD950();
        uint64_t v14 = sub_2505BE880();
        uint64_t result = sub_250511528(v12, v13);
        unint64_t v15 = v14 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v15 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v16 = *(void *)(a2 + 48);
        uint64_t v17 = (_OWORD *)(v16 + 16 * v4);
        unint64_t v18 = (_OWORD *)(v16 + 16 * v7);
        if (v4 != v7 || v17 >= v18 + 1) {
          _OWORD *v17 = *v18;
        }
        uint64_t v19 = *(void *)(a2 + 56);
        uint64_t v20 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v21 = v20 * v4;
        uint64_t result = v19 + v20 * v4;
        int64_t v22 = v20 * v7;
        unint64_t v23 = v19 + v20 * v7 + v20;
        if (v21 < v22 || result >= v23)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v21 == v22) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v15 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v15) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v25 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << result) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2505B67FC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_2505B6844(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

_OWORD *sub_2505B688C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v6 = (void *)(a5[6] + 16 * a1);
  *BOOL v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_250527D34(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_2505B68F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_2505B69AC(a1, a2, a3, a4, a5, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
}

unint64_t sub_2505B6924(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  BOOL v6 = (_OWORD *)(a5[7] + 48 * result);
  long long v7 = a4[1];
  *BOOL v6 = *a4;
  v6[1] = v7;
  v6[2] = a4[2];
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_2505B6980(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_2505B69AC(a1, a2, a3, a4, a5, type metadata accessor for MembershipVerifier, type metadata accessor for MembershipVerifier);
}

uint64_t sub_2505B69AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v11 = (void *)(a5[6] + 16 * a1);
  *unint64_t v11 = a2;
  v11[1] = a3;
  uint64_t v12 = a5[7];
  uint64_t v13 = a6(0);
  uint64_t result = sub_2505B7E08(a4, v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a7);
  uint64_t v15 = a5[2];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a5[2] = v17;
  }
  return result;
}

unint64_t sub_2505B6A58(unint64_t result, int a2, _OWORD *a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  uint64_t v4 = (_OWORD *)(a4[7] + (result << 6));
  long long v5 = a3[1];
  *uint64_t v4 = *a3;
  v4[1] = v5;
  long long v6 = a3[3];
  v4[2] = a3[2];
  v4[3] = v6;
  uint64_t v7 = a4[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a4[2] = v9;
  }
  return result;
}

void *sub_2505B6AAC()
{
  return sub_2505B6AC4(&qword_269AB6D68);
}

void *sub_2505B6AB8()
{
  return sub_2505B6AC4(&qword_269AB5E68);
}

void *sub_2505B6AC4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2505BE610();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    uint64_t v19 = 16 * v16;
    long long v20 = *(_OWORD *)(*(void *)(v3 + 48) + v19);
    *(_OWORD *)(*(void *)(v5 + 48) + v19) = v20;
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    sub_2504DBC4C(v20, *((unint64_t *)&v20 + 1));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2505B6C74()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2505BE610();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2505B6E20()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2505BE610();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_25052857C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_250527D34(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2505B7008()
{
  return sub_2505B7420(type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
}

uint64_t sub_2505B7050(uint64_t a1, unint64_t a2, char a3)
{
  if (a3 != 2) {
    return sub_250511528(a1, a2);
  }
  return a1;
}

uint64_t sub_2505B7064(uint64_t a1, unint64_t a2, char a3)
{
  if (a3 != 2) {
    return sub_2504DBC4C(a1, a2);
  }
  return a1;
}

uint64_t sub_2505B7078(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2505B70D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupMembership.MemberProperties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2505B713C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for UserAndAllInfo(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB6D38);
}

void *sub_2505B71C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6000);
  uint64_t v27 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_2505BE610();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v27 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v29 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v28 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v28) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v7;
    if (!v25)
    {
      int64_t v7 = v24 + 1;
      if (v24 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v7);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v12 = __clz(__rbit64(v25)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 16 * v12;
    uint64_t v14 = 48 * v12;
    unint64_t v15 = (uint64_t *)(*(void *)(v1 + 56) + v14);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    unint64_t v19 = v15[3];
    uint64_t v20 = v15[4];
    unint64_t v21 = v15[5];
    long long v22 = *(_OWORD *)(*(void *)(v1 + 48) + v13);
    *(_OWORD *)(*(void *)(v3 + 48) + v13) = v22;
    unint64_t v23 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    *unint64_t v23 = v16;
    v23[1] = v17;
    v23[2] = v18;
    v23[3] = v19;
    v23[4] = v20;
    v23[5] = v21;
    sub_2504DBC4C(v22, *((unint64_t *)&v22 + 1));
    sub_2504DBC4C(v16, v17);
    sub_2504DBC4C(v18, v19);
    uint64_t result = (void *)sub_2504DBC4C(v20, v21);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v28) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v7 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v7 >= v28) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v7);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2505B73D8()
{
  return sub_2505B7420(type metadata accessor for MembershipVerifier, &qword_269AB5FF8, type metadata accessor for MembershipVerifier, type metadata accessor for MembershipVerifier);
}

void *sub_2505B7420(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  unint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v36 - v12;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v14 = *v4;
  uint64_t v15 = sub_2505BE610();
  uint64_t v16 = v15;
  if (!*(void *)(v14 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v16;
    return result;
  }
  long long v37 = v6;
  uint64_t result = (void *)(v15 + 64);
  unint64_t v18 = (unint64_t)((1 << *(unsigned char *)(v16 + 32)) + 63) >> 6;
  if (v16 != v14 || (unint64_t)result >= v14 + 64 + 8 * v18) {
    uint64_t result = memmove(result, (const void *)(v14 + 64), 8 * v18);
  }
  uint64_t v38 = v14 + 64;
  int64_t v20 = 0;
  *(void *)(v16 + 16) = *(void *)(v14 + 16);
  uint64_t v21 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & *(void *)(v14 + 64);
  int64_t v24 = (unint64_t)(v21 + 63) >> 6;
  while (1)
  {
    if (v23)
    {
      unint64_t v25 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      unint64_t v26 = v25 | (v20 << 6);
      goto LABEL_12;
    }
    int64_t v33 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v33 >= v24) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v38 + 8 * v33);
    ++v20;
    if (!v34)
    {
      int64_t v20 = v33 + 1;
      if (v33 + 1 >= v24) {
        goto LABEL_26;
      }
      unint64_t v34 = *(void *)(v38 + 8 * v20);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = (v34 - 1) & v34;
    unint64_t v26 = __clz(__rbit64(v34)) + (v20 << 6);
LABEL_12:
    uint64_t v27 = 16 * v26;
    int64_t v28 = (uint64_t *)(*(void *)(v14 + 48) + 16 * v26);
    uint64_t v29 = *v28;
    unint64_t v30 = v28[1];
    unint64_t v31 = *(void *)(v39 + 72) * v26;
    sub_2505B713C(*(void *)(v14 + 56) + v31, (uint64_t)v13, v40);
    uint64_t v32 = (uint64_t *)(*(void *)(v16 + 48) + v27);
    *uint64_t v32 = v29;
    v32[1] = v30;
    sub_2505B7E08((uint64_t)v13, *(void *)(v16 + 56) + v31, v41);
    uint64_t result = (void *)sub_2504DBC4C(v29, v30);
  }
  int64_t v35 = v33 + 2;
  if (v35 >= v24)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v6 = v37;
    goto LABEL_28;
  }
  unint64_t v34 = *(void *)(v38 + 8 * v35);
  if (v34)
  {
    int64_t v20 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v20 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v20 >= v24) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v38 + 8 * v20);
    ++v35;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2505B7698()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E60);
  uint64_t v29 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_2505BE610();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v29 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v31 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v30) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v26);
    ++v7;
    if (!v27)
    {
      int64_t v7 = v26 + 1;
      if (v26 + 1 >= v30) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v31 + 8 * v7);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v27 - 1) & v27;
    unint64_t v12 = __clz(__rbit64(v27)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 4 * v12;
    int v14 = *(_DWORD *)(*(void *)(v1 + 48) + 4 * v12);
    unint64_t v15 = v12 << 6;
    uint64_t v16 = (uint64_t *)(*(void *)(v1 + 56) + v15);
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    uint64_t v19 = v16[2];
    unint64_t v20 = v16[3];
    uint64_t v21 = v16[4];
    unint64_t v22 = v16[5];
    uint64_t v23 = v16[6];
    unint64_t v24 = v16[7];
    *(_DWORD *)(*(void *)(v3 + 48) + v13) = v14;
    unint64_t v25 = (uint64_t *)(*(void *)(v3 + 56) + v15);
    *unint64_t v25 = v17;
    v25[1] = v18;
    long long v25[2] = v19;
    v25[3] = v20;
    _OWORD v25[4] = v21;
    v25[5] = v22;
    v25[6] = v23;
    v25[7] = v24;
    sub_2504DBC4C(v17, v18);
    sub_2504DBC4C(v19, v20);
    sub_2504DBC4C(v21, v22);
    uint64_t result = (void *)sub_2504DBC4C(v23, v24);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v30) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v31 + 8 * v28);
  if (v27)
  {
    int64_t v7 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v7 >= v30) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v7);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2505B78A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90) + 48);
  uint64_t v5 = (uint64_t)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5FC8) + 48);
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  *a2 = v7;
  a2[1] = v6;
  sub_2505B713C(v4, v5, type metadata accessor for GroupMembership.MemberProperties);
  return sub_2504DBC4C(v7, v6);
}

uint64_t sub_2505B7938(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v10 - 8, v11, v12, v13, v14);
  uint64_t v65 = (uint64_t)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v15, v17, v18, v19, v20);
  uint64_t v64 = (uint64_t)v63 - v22;
  MEMORY[0x270FA5388](v21, v23, v24, v25, v26);
  int64_t v28 = (char *)v63 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269AB6DA0);
  MEMORY[0x270FA5388](v29 - 8, v30, v31, v32, v33);
  int64_t v35 = (void *)((char *)v63 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v37 = ~v36;
  uint64_t v38 = *(void *)(a1 + 64);
  uint64_t v39 = -v36;
  uint64_t v66 = a1;
  uint64_t v67 = a1 + 64;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  else {
    uint64_t v40 = -1;
  }
  uint64_t v68 = v37;
  uint64_t v69 = 0;
  uint64_t v70 = v40 & v38;
  uint64_t v71 = a2;
  uint64_t v72 = a3;
  v63[1] = a1;
  swift_bridgeObjectRetain();
  v63[0] = a3;
  swift_retain();
  sub_25051A0A8((uint64_t)v35);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5FC8);
  for (int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v35, 1, v41);
        ;
        int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v35, 1, v41))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_250528314();
      return swift_release();
    }
    uint64_t v47 = *v35;
    unint64_t v46 = v35[1];
    sub_2505B7E08((uint64_t)v35 + *(int *)(v41 + 48), (uint64_t)v28, type metadata accessor for GroupMembership.MemberProperties);
    unint64_t v48 = *(void **)a5;
    unint64_t v50 = sub_250512FE8(v47, v46);
    uint64_t v51 = v48[2];
    BOOL v52 = (v49 & 1) == 0;
    uint64_t v53 = v51 + v52;
    if (__OFADD__(v51, v52)) {
      break;
    }
    char v54 = v49;
    if (v48[3] >= v53)
    {
      if (a4)
      {
        char v57 = *(void **)a5;
        if (v49) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_2505B7420(type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
        char v57 = *(void **)a5;
        if (v54) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_2505B5358(v53, a4 & 1, type metadata accessor for GroupMembership.MemberProperties, &qword_269AB5FE8, type metadata accessor for GroupMembership.MemberProperties, type metadata accessor for GroupMembership.MemberProperties);
      unint64_t v55 = sub_250512FE8(v47, v46);
      if ((v54 & 1) != (v56 & 1)) {
        goto LABEL_22;
      }
      unint64_t v50 = v55;
      char v57 = *(void **)a5;
      if (v54)
      {
LABEL_5:
        unint64_t v43 = *(void *)(v73 + 72) * v50;
        uint64_t v44 = v65;
        sub_2505B713C(v57[7] + v43, v65, type metadata accessor for GroupMembership.MemberProperties);
        uint64_t v45 = v64;
        sub_2505B713C(v44, v64, type metadata accessor for GroupMembership.MemberProperties);
        sub_2505B7078(v44, type metadata accessor for GroupMembership.MemberProperties);
        sub_2505B7078((uint64_t)v28, type metadata accessor for GroupMembership.MemberProperties);
        sub_250511528(v47, v46);
        sub_2505B70D8(v45, *(void *)(*(void *)a5 + 56) + v43);
        goto LABEL_6;
      }
    }
    v57[(v50 >> 6) + 8] |= 1 << v50;
    char v58 = (uint64_t *)(v57[6] + 16 * v50);
    *char v58 = v47;
    v58[1] = v46;
    sub_2505B7E08((uint64_t)v28, v57[7] + *(void *)(v73 + 72) * v50, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v59 = v57[2];
    BOOL v60 = __OFADD__(v59, 1);
    uint64_t v61 = v59 + 1;
    if (v60) {
      goto LABEL_21;
    }
    v57[2] = v61;
LABEL_6:
    sub_25051A0A8((uint64_t)v35);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5FC8);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_2505BE7E0();
  __break(1u);
  return result;
}

uint64_t sub_2505B7E08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2505B7E70(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe, a2, a3, a4, a5);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_2505B7FC8((void *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6);
    if (v5) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    uint64_t v6 = sub_2505B7FC8((unint64_t *)v11, v8, v6);
    MEMORY[0x25337FF10](v11, -1, -1);
  }
  return v6;
}

uint64_t sub_2505B7FC8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E90);
  uint64_t v8 = MEMORY[0x270FA5388](v53, v4, v5, v6, v7);
  char v49 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  unint64_t v50 = (uint64_t *)((char *)&v43 - v14);
  uint64_t v15 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v52 = *(void *)(v15 - 8);
  uint64_t result = MEMORY[0x270FA5388](v15 - 8, v16, v17, v18, v19);
  uint64_t v51 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v22 = 0;
  char v54 = (void *)a3;
  uint64_t v23 = *(void *)(a3 + 64);
  uint64_t v46 = 0;
  uint64_t v47 = a3 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  int64_t v48 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v27 = v50;
  uint64_t v28 = (uint64_t)v51;
  uint64_t v29 = v49;
  while (1)
  {
    if (v26)
    {
      uint64_t v55 = (v26 - 1) & v26;
      int64_t v56 = v22;
      unint64_t v30 = __clz(__rbit64(v26)) | (v22 << 6);
      goto LABEL_5;
    }
    int64_t v38 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v38 >= v48) {
      return sub_2505B837C(v45, v44, v46, v54);
    }
    unint64_t v39 = *(void *)(v47 + 8 * v38);
    int64_t v40 = v22 + 1;
    if (!v39)
    {
      int64_t v40 = v22 + 2;
      if (v22 + 2 >= v48) {
        return sub_2505B837C(v45, v44, v46, v54);
      }
      unint64_t v39 = *(void *)(v47 + 8 * v40);
      if (!v39)
      {
        int64_t v40 = v22 + 3;
        if (v22 + 3 >= v48) {
          return sub_2505B837C(v45, v44, v46, v54);
        }
        unint64_t v39 = *(void *)(v47 + 8 * v40);
        if (!v39) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v55 = (v39 - 1) & v39;
    int64_t v56 = v40;
    unint64_t v30 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_5:
    uint64_t v31 = (uint64_t *)(v54[6] + 16 * v30);
    uint64_t v33 = *v31;
    unint64_t v32 = v31[1];
    sub_2505B713C(v54[7] + *(void *)(v52 + 72) * v30, v28, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v34 = v53;
    uint64_t v35 = (uint64_t)v27 + *(int *)(v53 + 48);
    *uint64_t v27 = v33;
    v27[1] = v32;
    sub_2505B713C(v28, v35, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t v36 = &v29[*(int *)(v34 + 48)];
    *(void *)uint64_t v29 = v33;
    *((void *)v29 + 1) = v32;
    sub_2505B713C(v35, (uint64_t)v36, type metadata accessor for GroupMembership.MemberProperties);
    sub_2504DBC4C(v33, v32);
    sub_2504DBC4C(v33, v32);
    sub_2504DBC4C(v33, v32);
    sub_2504DAF60((uint64_t)v27, &qword_269AB5E90);
    sub_250511528(*(void *)v29, *((void *)v29 + 1));
    char v37 = *v36;
    sub_2505B7078((uint64_t)v36, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B7078(v28, type metadata accessor for GroupMembership.MemberProperties);
    uint64_t result = sub_250511528(v33, v32);
    int64_t v22 = v56;
    unint64_t v26 = v55;
    if ((v37 & 1) == 0)
    {
      *(unint64_t *)((char *)v45 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      if (__OFADD__(v46++, 1))
      {
        __break(1u);
        return sub_2505B837C(v45, v44, v46, v54);
      }
    }
  }
  uint64_t v41 = v22 + 4;
  if (v22 + 4 >= v48) {
    return sub_2505B837C(v45, v44, v46, v54);
  }
  unint64_t v39 = *(void *)(v47 + 8 * v41);
  if (v39)
  {
    int64_t v40 = v22 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v40 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v40 >= v48) {
      return sub_2505B837C(v45, v44, v46, v54);
    }
    unint64_t v39 = *(void *)(v47 + 8 * v40);
    ++v41;
    if (v39) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2505B837C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  int64_t v48 = a1;
  uint64_t v7 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v7 - 8, v8, v9, v10, v11);
  MEMORY[0x270FA5388](v12, v13, v14, v15, v16);
  uint64_t v51 = (char *)&v46 - v18;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v50 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5FE8);
  uint64_t result = sub_2505BE640();
  uint64_t v20 = result;
  uint64_t v47 = a2;
  if (a2 < 1) {
    unint64_t v21 = 0;
  }
  else {
    unint64_t v21 = *v48;
  }
  uint64_t v22 = 0;
  uint64_t v23 = result + 64;
  uint64_t v24 = v50;
  uint64_t v25 = (uint64_t)v51;
  char v49 = a4;
  while (1)
  {
    if (v21)
    {
      unint64_t v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v27 = v26 | (v22 << 6);
    }
    else
    {
      uint64_t v28 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_40;
      }
      if (v28 >= v47) {
        return v20;
      }
      unint64_t v29 = v48[v28];
      ++v22;
      if (!v29)
      {
        uint64_t v22 = v28 + 1;
        if (v28 + 1 >= v47) {
          return v20;
        }
        unint64_t v29 = v48[v22];
        if (!v29)
        {
          uint64_t v22 = v28 + 2;
          if (v28 + 2 >= v47) {
            return v20;
          }
          unint64_t v29 = v48[v22];
          if (!v29)
          {
            uint64_t v30 = v28 + 3;
            if (v30 >= v47) {
              return v20;
            }
            unint64_t v29 = v48[v30];
            if (!v29)
            {
              while (1)
              {
                uint64_t v22 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_41;
                }
                if (v22 >= v47) {
                  return v20;
                }
                unint64_t v29 = v48[v22];
                ++v30;
                if (v29) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v22 = v30;
          }
        }
      }
LABEL_24:
      unint64_t v21 = (v29 - 1) & v29;
      unint64_t v27 = __clz(__rbit64(v29)) + (v22 << 6);
    }
    uint64_t v31 = a4[7];
    unint64_t v32 = (uint64_t *)(a4[6] + 16 * v27);
    uint64_t v33 = *v32;
    unint64_t v34 = v32[1];
    uint64_t v35 = *(void *)(v52 + 72);
    sub_2505B713C(v31 + v35 * v27, v25, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B7E08(v25, v24, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505BE850();
    sub_2504DBC4C(v33, v34);
    sub_2504DBC4C(v33, v34);
    sub_2505BD950();
    sub_250511528(v33, v34);
    uint64_t result = sub_2505BE880();
    uint64_t v36 = -1 << *(unsigned char *)(v20 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v23 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v39 = __clz(__rbit64((-1 << v37) & ~*(void *)(v23 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v24 = v50;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v36) >> 6;
      uint64_t v24 = v50;
      do
      {
        if (++v38 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v42 = v38 == v41;
        if (v38 == v41) {
          unint64_t v38 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v23 + 8 * v38);
      }
      while (v43 == -1);
      unint64_t v39 = __clz(__rbit64(~v43)) + (v38 << 6);
    }
    *(void *)(v23 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    uint64_t v44 = (uint64_t *)(*(void *)(v20 + 48) + 16 * v39);
    *uint64_t v44 = v33;
    v44[1] = v34;
    uint64_t result = sub_2505B7E08(v24, *(void *)(v20 + 56) + v39 * v35, type metadata accessor for GroupMembership.MemberProperties);
    ++*(void *)(v20 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v49;
    if (!a3) {
      return v20;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2505B874C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v33 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D88);
  uint64_t result = sub_2505BE610();
  uint64_t v10 = (void *)result;
  int64_t v11 = 0;
  uint64_t v34 = a1;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v30 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v31 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v32 = result + 64;
  if ((v14 & v12) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v16 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v11 << 6))
  {
    unint64_t v21 = (uint64_t *)(*(void *)(v34 + 48) + 16 * i);
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    sub_2505B713C(*(void *)(v34 + 56) + *(void *)(v33 + 72) * i, (uint64_t)v8, type metadata accessor for GroupMembership.MemberProperties);
    char v24 = *v8;
    sub_2504DBC4C(v22, v23);
    uint64_t result = sub_2505B7078((uint64_t)v8, type metadata accessor for GroupMembership.MemberProperties);
    *(void *)(v32 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v25 = (uint64_t *)(v10[6] + 16 * i);
    *uint64_t v25 = v22;
    v25[1] = v23;
    *(unsigned char *)(v10[7] + i) = v24;
    uint64_t v26 = v10[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v10[2] = v28;
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_24;
    }
    if (v18 >= v31) {
      return (uint64_t)v10;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v31) {
        return (uint64_t)v10;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v31) {
          return (uint64_t)v10;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v15 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31) {
    return (uint64_t)v10;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v31) {
      return (uint64_t)v10;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t _s14GroupKitCrypto0A10MembershipV16MemberPropertiesV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v131 = sub_2505BE0B0();
  uint64_t v133 = *(void *)(v131 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v131, v4, v5, v6, v7);
  int64_t v128 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  uint64_t v127 = (char *)&v123 - v14;
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D90);
  MEMORY[0x270FA5388](v130, v15, v16, v17, v18);
  uint64_t v132 = (uint64_t)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for UserKeyingInfo(0);
  uint64_t v135 = *(void *)(v20 - 8);
  uint64_t v136 = v20;
  MEMORY[0x270FA5388](v20, v21, v22, v23, v24);
  uint64_t v129 = (uint64_t)&v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
  MEMORY[0x270FA5388](v26 - 8, v27, v28, v29, v30);
  uint64_t v134 = (uint64_t)&v123 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB6D98);
  MEMORY[0x270FA5388](v32, v33, v34, v35, v36);
  unint64_t v38 = (char *)&v123 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for GroupMembership.MemberProperties(0);
  uint64_t v44 = MEMORY[0x270FA5388](v39, v40, v41, v42, v43);
  uint64_t v46 = (char *)&v123 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v44, v47, v48, v49, v50);
  uint64_t v138 = (char *)&v123 - v52;
  uint64_t v57 = MEMORY[0x270FA5388](v51, v53, v54, v55, v56);
  uint64_t v139 = (uint64_t)&v123 - v58;
  uint64_t v63 = MEMORY[0x270FA5388](v57, v59, v60, v61, v62);
  uint64_t v140 = (uint64_t)&v123 - v64;
  uint64_t v69 = MEMORY[0x270FA5388](v63, v65, v66, v67, v68);
  uint64_t v71 = (char *)&v123 - v70;
  MEMORY[0x270FA5388](v69, v72, v73, v74, v75);
  uint64_t v77 = (char *)&v123 - v76;
  uint64_t v78 = (uint64_t)a1;
  LODWORD(a1) = *a1;
  int v79 = *a2;
  uint64_t v141 = v78;
  sub_2505B713C(v78, (uint64_t)&v123 - v76, type metadata accessor for GroupMembership.MemberProperties);
  int64_t v137 = a2;
  sub_2505B713C((uint64_t)a2, (uint64_t)v71, type metadata accessor for GroupMembership.MemberProperties);
  if (a1 != v79)
  {
    sub_2505B7078((uint64_t)v71, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B7078((uint64_t)v77, type metadata accessor for GroupMembership.MemberProperties);
LABEL_9:
    uint64_t v85 = (uint64_t)v137;
    uint64_t v87 = (uint64_t)v138;
    uint64_t v84 = v140;
    uint64_t v90 = v141;
    uint64_t v86 = v139;
    sub_2505B713C(v141, v140, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B713C(v85, v86, type metadata accessor for GroupMembership.MemberProperties);
LABEL_10:
    sub_2505B7078(v86, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B7078(v84, type metadata accessor for GroupMembership.MemberProperties);
LABEL_11:
    sub_2505B713C(v90, v87, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B713C(v85, (uint64_t)v46, type metadata accessor for GroupMembership.MemberProperties);
    goto LABEL_12;
  }
  uint64_t v124 = v32;
  uint64_t v125 = v38;
  size_t v126 = v46;
  uint64_t v81 = *((void *)v77 + 1);
  unint64_t v80 = *((void *)v77 + 2);
  uint64_t v83 = *((void *)v71 + 1);
  unint64_t v82 = *((void *)v71 + 2);
  if (v80 >> 60 == 15)
  {
    sub_25051B908(*((void *)v71 + 1), *((void *)v71 + 2));
    sub_2505B7078((uint64_t)v71, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B7078((uint64_t)v77, type metadata accessor for GroupMembership.MemberProperties);
    if (v82 >> 60 == 15)
    {
      sub_250586944(v81, v80);
      uint64_t v84 = v140;
      sub_2505B713C(v141, v140, type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v85 = (uint64_t)v137;
      uint64_t v86 = v139;
      sub_2505B713C((uint64_t)v137, v139, type metadata accessor for GroupMembership.MemberProperties);
      uint64_t v46 = v126;
      uint64_t v87 = (uint64_t)v138;
      goto LABEL_15;
    }
LABEL_8:
    sub_250586944(v81, v80);
    sub_250586944(v83, v82);
    uint64_t v46 = v126;
    goto LABEL_9;
  }
  uint64_t v88 = *((void *)v77 + 1);
  unint64_t v89 = *((void *)v77 + 2);
  if (v82 >> 60 == 15)
  {
    sub_2504DBC4C(v88, v89);
    sub_2504DBC4C(v81, v80);
    sub_2505B7078((uint64_t)v71, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B7078((uint64_t)v77, type metadata accessor for GroupMembership.MemberProperties);
    sub_250511528(v81, v80);
    goto LABEL_8;
  }
  sub_25051B908(v88, v89);
  sub_25051B908(v83, v82);
  sub_25051B908(v81, v80);
  char v93 = sub_25051AAD8(v81, v80, v83, v82);
  sub_250586944(v83, v82);
  sub_2505B7078((uint64_t)v71, type metadata accessor for GroupMembership.MemberProperties);
  sub_2505B7078((uint64_t)v77, type metadata accessor for GroupMembership.MemberProperties);
  sub_250511528(v81, v80);
  sub_250586944(v81, v80);
  uint64_t v84 = v140;
  uint64_t v90 = v141;
  sub_2505B713C(v141, v140, type metadata accessor for GroupMembership.MemberProperties);
  uint64_t v85 = (uint64_t)v137;
  uint64_t v86 = v139;
  sub_2505B713C((uint64_t)v137, v139, type metadata accessor for GroupMembership.MemberProperties);
  uint64_t v46 = v126;
  uint64_t v87 = (uint64_t)v138;
  if ((v93 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_15:
  uint64_t v94 = *(int *)(v39 + 24);
  uint64_t v95 = v86 + v94;
  uint64_t v96 = (uint64_t)v125;
  uint64_t v97 = (uint64_t)&v125[*(int *)(v124 + 48)];
  sub_2504DAEFC(v84 + v94, (uint64_t)v125, &qword_269AB5E80);
  sub_2504DAEFC(v95, v97, &qword_269AB5E80);
  uint64_t v98 = v136;
  uint64_t v99 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48);
  int v100 = v99(v96, 1, v136);
  uint64_t v123 = v39;
  if (v100 != 1)
  {
    uint64_t v101 = v134;
    sub_2504DAEFC(v96, v134, &qword_269AB5E80);
    if (v99(v97, 1, v98) != 1)
    {
      uint64_t v102 = v129;
      sub_2505B7E08(v97, v129, type metadata accessor for UserKeyingInfo);
      BOOL v103 = _s14GroupKitCrypto14UserKeyingInfoV2eeoiySbAC_ACtFZ_0(v101, v102);
      sub_2505B7078(v102, type metadata accessor for UserKeyingInfo);
      sub_2505B7078(v139, type metadata accessor for GroupMembership.MemberProperties);
      sub_2505B7078(v140, type metadata accessor for GroupMembership.MemberProperties);
      sub_2505B7078(v101, type metadata accessor for UserKeyingInfo);
      sub_2504DAF60(v96, &qword_269AB5E80);
      sub_2505B713C(v141, v87, type metadata accessor for GroupMembership.MemberProperties);
      sub_2505B713C(v85, (uint64_t)v46, type metadata accessor for GroupMembership.MemberProperties);
      if (!v103) {
        goto LABEL_12;
      }
      goto LABEL_22;
    }
    sub_2505B7078(v139, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B7078(v140, type metadata accessor for GroupMembership.MemberProperties);
    sub_2505B7078(v101, type metadata accessor for UserKeyingInfo);
LABEL_20:
    sub_2504DAF60(v96, &qword_269AB6D98);
    uint64_t v90 = v141;
    goto LABEL_11;
  }
  sub_2505B7078(v86, type metadata accessor for GroupMembership.MemberProperties);
  sub_2505B7078(v140, type metadata accessor for GroupMembership.MemberProperties);
  if (v99(v97, 1, v98) != 1) {
    goto LABEL_20;
  }
  sub_2504DAF60(v96, &qword_269AB5E80);
  sub_2505B713C(v141, v87, type metadata accessor for GroupMembership.MemberProperties);
  sub_2505B713C(v85, (uint64_t)v46, type metadata accessor for GroupMembership.MemberProperties);
LABEL_22:
  uint64_t v104 = *(int *)(v123 + 28);
  uint64_t v105 = (uint64_t)&v46[v104];
  uint64_t v106 = v132;
  uint64_t v107 = v132 + *(int *)(v130 + 48);
  sub_2504DAEFC(v87 + v104, v132, &qword_269AB5ED0);
  sub_2504DAEFC(v105, v107, &qword_269AB5ED0);
  uint64_t v108 = v133;
  unint64_t v109 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
  uint64_t v110 = v131;
  LODWORD(v105) = v109(v106, 1, v131);
  int v111 = v109(v107, 1, v110);
  if (v105 == 1)
  {
    if (v111 == 1)
    {
      char v91 = 1;
      goto LABEL_13;
    }
    sub_2504DAF60(v107, &qword_269AB5ED0);
  }
  else
  {
    if (v111 != 1)
    {
      char v112 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 32);
      unint64_t v113 = v127;
      v112(v127, v106, v110);
      uint64_t v114 = v128;
      v112(v128, v107, v110);
      uint64_t v115 = sub_2505BDEE0();
      unint64_t v117 = v116;
      uint64_t v118 = sub_2505BDEE0();
      unint64_t v120 = v119;
      char v91 = sub_25051AAD8(v115, v117, v118, v119);
      sub_250511528(v118, v120);
      sub_250511528(v115, v117);
      uint64_t v121 = *(void (**)(char *, uint64_t))(v108 + 8);
      uint64_t v122 = v114;
      uint64_t v46 = v126;
      v121(v122, v110);
      v121(v113, v110);
      goto LABEL_13;
    }
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v106, v110);
  }
LABEL_12:
  char v91 = 0;
LABEL_13:
  sub_2505B7078((uint64_t)v46, type metadata accessor for GroupMembership.MemberProperties);
  sub_2505B7078(v87, type metadata accessor for GroupMembership.MemberProperties);
  return v91 & 1;
}

uint64_t destroy for UserAndPublicKeyInfo(uint64_t *a1)
{
  sub_250511528(*a1, a1[1]);
  uint64_t v2 = a1[3];
  unint64_t v3 = a1[4];
  return sub_250511528(v2, v3);
}

uint64_t initializeWithCopy for UserAndPublicKeyInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2504DBC4C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  sub_2504DBC4C(v7, v6);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for UserAndPublicKeyInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2504DBC4C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_250511528(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  unint64_t v8 = *(void *)(a2 + 32);
  sub_2504DBC4C(v9, v8);
  uint64_t v10 = *(void *)(a1 + 24);
  unint64_t v11 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v8;
  sub_250511528(v10, v11);
  return a1;
}

uint64_t assignWithTake for UserAndPublicKeyInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_250511528(v4, v5);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_250511528(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserAndPublicKeyInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserAndPublicKeyInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserAndPublicKeyInfo()
{
  return &type metadata for UserAndPublicKeyInfo;
}

uint64_t destroy for UserAndKeyShare(uint64_t *a1)
{
  sub_250511528(*a1, a1[1]);
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  return sub_250511528(v2, v3);
}

uint64_t *initializeWithCopy for UserAndKeyShare(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2504DBC4C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v7 = a2[2];
  unint64_t v6 = a2[3];
  sub_2504DBC4C(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for UserAndKeyShare(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2504DBC4C(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_250511528(v6, v7);
  uint64_t v9 = a2[2];
  unint64_t v8 = a2[3];
  sub_2504DBC4C(v9, v8);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_250511528(v10, v11);
  return a1;
}

uint64_t *assignWithTake for UserAndKeyShare(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_250511528(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_250511528(v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for UserAndKeyShare()
{
  return &type metadata for UserAndKeyShare;
}

uint64_t getEnumTagSinglePayload for UserAndDiversifiedVerificationKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2505B9818);
}

uint64_t sub_2505B9818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_2505BE0B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for UserAndDiversifiedVerificationKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2505B98E8);
}

void *sub_2505B98E8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_2505BE0B0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for UserAndDiversifiedVerificationKey(uint64_t a1)
{
  return sub_25052823C(a1, (uint64_t *)&unk_269AB6D28);
}

uint64_t sub_2505B99B8()
{
  uint64_t result = sub_2505BE0B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2505B9A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2504DBC4C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for UserAndRole(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2504DBC4C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_250511528(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for UserAndRole(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_250511528(v4, v5);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserAndRole(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserAndRole(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserAndRole()
{
  return &type metadata for UserAndRole;
}

unint64_t initializeBufferWithCopyOfBuffer for UserAndAllInfo(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_2504DBC4C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v9 = (uint64_t *)(a2 + 24);
    unint64_t v10 = *(void *)(a2 + 32);
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)v9;
    }
    else
    {
      uint64_t v12 = *v9;
      sub_2504DBC4C(*v9, *(void *)(a2 + 32));
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v10;
    }
    uint64_t v13 = (uint64_t *)(a2 + 40);
    unint64_t v14 = *(void *)(a2 + 48);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 40) = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v15 = *v13;
      sub_2504DBC4C(*v13, *(void *)(a2 + 48));
      *(void *)(a1 + 40) = v15;
      *(void *)(a1 + 48) = v14;
    }
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (const void *)(a2 + v16);
    uint64_t v19 = sub_2505BE0B0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t destroy for UserAndAllInfo(uint64_t *a1, uint64_t a2)
{
  sub_250511528(*a1, a1[1]);
  unint64_t v4 = a1[4];
  if (v4 >> 60 != 15) {
    sub_250511528(a1[3], v4);
  }
  unint64_t v5 = a1[6];
  if (v5 >> 60 != 15) {
    sub_250511528(a1[5], v5);
  }
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_2505BE0B0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t initializeWithCopy for UserAndAllInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_2504DBC4C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v8 = (uint64_t *)(a2 + 24);
  unint64_t v9 = *(void *)(a2 + 32);
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_2504DBC4C(*v8, *(void *)(a2 + 32));
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v9;
  }
  uint64_t v11 = (uint64_t *)(a2 + 40);
  unint64_t v12 = *(void *)(a2 + 48);
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v13 = *v11;
    sub_2504DBC4C(*v11, *(void *)(a2 + 48));
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = v12;
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_2505BE0B0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithCopy for UserAndAllInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_2504DBC4C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  sub_250511528(v8, v9);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v10 = (uint64_t *)(a2 + 24);
  unint64_t v11 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 == 15)
  {
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v10;
      sub_2504DBC4C(*v10, *(void *)(a2 + 32));
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v11;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v11 >> 60 == 15)
  {
    sub_25058434C(a1 + 24);
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v10;
    goto LABEL_8;
  }
  uint64_t v13 = *v10;
  sub_2504DBC4C(*v10, *(void *)(a2 + 32));
  uint64_t v14 = *(void *)(a1 + 24);
  unint64_t v15 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v11;
  sub_250511528(v14, v15);
LABEL_8:
  uint64_t v16 = (uint64_t *)(a2 + 40);
  unint64_t v17 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) >> 60 == 15)
  {
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = *v16;
      sub_2504DBC4C(*v16, *(void *)(a2 + 48));
      *(void *)(a1 + 40) = v18;
      *(void *)(a1 + 48) = v17;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v17 >> 60 == 15)
  {
    sub_250524984(a1 + 40);
LABEL_13:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v16;
    goto LABEL_15;
  }
  uint64_t v19 = *v16;
  sub_2504DBC4C(*v16, *(void *)(a2 + 48));
  uint64_t v20 = *(void *)(a1 + 40);
  unint64_t v21 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v19;
  *(void *)(a1 + 48) = v17;
  sub_250511528(v20, v21);
LABEL_15:
  uint64_t v22 = *(int *)(a3 + 32);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_2505BE0B0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_20;
  }
  if (v29)
  {
LABEL_20:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t initializeWithTake for UserAndAllInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 32);
  unint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_2505BE0B0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for UserAndAllInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_250511528(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v8 = (_OWORD *)(a2 + 24);
  unint64_t v9 = *(void *)(a1 + 32);
  if (v9 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v10 = *(void *)(a2 + 32);
  if (v10 >> 60 == 15)
  {
    sub_25058434C(a1 + 24);
LABEL_4:
    *(_OWORD *)(a1 + 24) = *v8;
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)v8;
  *(void *)(a1 + 32) = v10;
  sub_250511528(v11, v9);
LABEL_6:
  uint64_t v12 = (_OWORD *)(a2 + 40);
  unint64_t v13 = *(void *)(a1 + 48);
  if (v13 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 40) = *v12;
    goto LABEL_11;
  }
  unint64_t v14 = *(void *)(a2 + 48);
  if (v14 >> 60 == 15)
  {
    sub_250524984(a1 + 40);
    goto LABEL_9;
  }
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)v12;
  *(void *)(a1 + 48) = v14;
  sub_250511528(v15, v13);
LABEL_11:
  uint64_t v16 = *(int *)(a3 + 32);
  unint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_2505BE0B0();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_16;
  }
  if (v23)
  {
LABEL_16:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserAndAllInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2505BA6C8);
}

uint64_t sub_2505BA6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for UserAndAllInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2505BA788);
}

uint64_t sub_2505BA788(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2505BA830()
{
  sub_2505BD394(319, &qword_269AB6D48, MEMORY[0x263F047E0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for GroupMembership()
{
  return &type metadata for GroupMembership;
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupMembership.MemberProperties(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (uint64_t *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2 + 1;
    unint64_t v8 = a2[2];
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v10 = *v7;
      sub_2504DBC4C(*v7, a2[2]);
      v4[1] = v10;
      v4[2] = v8;
    }
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    unint64_t v13 = (uint64_t *)((char *)a2 + v11);
    unint64_t v14 = (int *)type metadata accessor for UserKeyingInfo(0);
    uint64_t v15 = *((void *)v14 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v53 = v15;
      uint64_t v17 = *v13;
      unint64_t v18 = v13[1];
      sub_2504DBC4C(*v13, v18);
      *uint64_t v12 = v17;
      v12[1] = v18;
      uint64_t v19 = v14[5];
      uint64_t v20 = (char *)v12 + v19;
      unint64_t v21 = (char *)v13 + v19;
      uint64_t v22 = sub_2505BDF30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      uint64_t v23 = v14[6];
      uint64_t v24 = (char *)v12 + v23;
      uint64_t v25 = (char *)v13 + v23;
      uint64_t v26 = sub_2505BE040();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      v27(v24, v25, v26);
      uint64_t v28 = v14[7];
      int v29 = (char *)v12 + v28;
      uint64_t v30 = (char *)v13 + v28;
      uint64_t v31 = sub_2505BE0B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      v27((char *)v12 + v14[8], (char *)v13 + v14[8], v26);
      *(void *)((char *)v12 + v14[9]) = *(uint64_t *)((char *)v13 + v14[9]);
      uint64_t v32 = v14[10];
      __dst = (char *)v12 + v32;
      uint64_t v52 = v12;
      uint64_t v33 = (char *)v13 + v32;
      uint64_t v34 = sub_2505BDF90();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      swift_bridgeObjectRetain();
      if (v36(v33, 1, v34))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
        memcpy(__dst, v33, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
      }
      uint64_t v38 = v14[11];
      uint64_t v39 = (char *)v52 + v38;
      uint64_t v40 = (char *)v13 + v38;
      uint64_t v41 = sub_2505BE000();
      uint64_t v42 = *(void *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
        memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v53 + 56))(v52, 0, 1, v14);
    }
    uint64_t v44 = *(int *)(a3 + 28);
    uint64_t v45 = (char *)v4 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = sub_2505BE0B0();
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
  }
  return v4;
}

uint64_t destroy for GroupMembership.MemberProperties(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 60 != 15) {
    sub_250511528(*(void *)(a1 + 8), v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = (int *)type metadata accessor for UserKeyingInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v5, 1, v6))
  {
    sub_250511528(*(void *)v5, *(void *)(v5 + 8));
    uint64_t v7 = v5 + v6[5];
    uint64_t v8 = sub_2505BDF30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = v5 + v6[6];
    uint64_t v10 = sub_2505BE040();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    v11(v9, v10);
    uint64_t v12 = v5 + v6[7];
    uint64_t v13 = sub_2505BE0B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    v11(v5 + v6[8], v10);
    swift_bridgeObjectRelease();
    uint64_t v14 = v5 + v6[10];
    uint64_t v15 = sub_2505BDF90();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    uint64_t v17 = v5 + v6[11];
    uint64_t v18 = sub_2505BE000();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
  }
  uint64_t v20 = a1 + *(int *)(a2 + 28);
  uint64_t v21 = sub_2505BE0B0();
  uint64_t v24 = *(void *)(v21 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v20, 1, v21);
  if (!result)
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
    return v23(v20, v21);
  }
  return result;
}

uint64_t initializeWithCopy for GroupMembership.MemberProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (uint64_t *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_2504DBC4C(*v6, *(void *)(a2 + 16));
    *(void *)(v5 + 8) = v8;
    *(void *)(v5 + 16) = v7;
  }
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(v5 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for UserKeyingInfo(0);
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v50 = v13;
    uint64_t v51 = a3;
    uint64_t v52 = v5;
    uint64_t v15 = *v11;
    unint64_t v16 = v11[1];
    sub_2504DBC4C(*v11, v16);
    *uint64_t v10 = v15;
    v10[1] = v16;
    uint64_t v17 = v12[5];
    uint64_t v18 = (char *)v10 + v17;
    uint64_t v19 = (char *)v11 + v17;
    uint64_t v20 = sub_2505BDF30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v12[6];
    uint64_t v22 = (char *)v10 + v21;
    uint64_t v23 = (char *)v11 + v21;
    uint64_t v24 = sub_2505BE040();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    uint64_t v26 = v12[7];
    uint64_t v27 = (char *)v10 + v26;
    uint64_t v28 = (char *)v11 + v26;
    uint64_t v29 = sub_2505BE0B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    v25((char *)v10 + v12[8], (char *)v11 + v12[8], v24);
    *(void *)((char *)v10 + v12[9]) = *(uint64_t *)((char *)v11 + v12[9]);
    uint64_t v30 = v12[10];
    __dst = (char *)v10 + v30;
    uint64_t v31 = (char *)v11 + v30;
    uint64_t v32 = sub_2505BDF90();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    swift_bridgeObjectRetain();
    if (v34(v31, 1, v32))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
      memcpy(__dst, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
    }
    uint64_t v36 = v12[11];
    uint64_t v37 = (char *)v10 + v36;
    uint64_t v38 = (char *)v11 + v36;
    uint64_t v39 = sub_2505BE000();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v5 = v52;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    a3 = v51;
    (*(void (**)(void *, void, uint64_t, int *))(v50 + 56))(v10, 0, 1, v12);
  }
  uint64_t v42 = *(int *)(a3 + 28);
  uint64_t v43 = (void *)(v5 + v42);
  uint64_t v44 = (const void *)(a2 + v42);
  uint64_t v45 = sub_2505BE0B0();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v43, v44, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  return v5;
}

uint64_t assignWithCopy for GroupMembership.MemberProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  unint64_t v7 = (uint64_t *)(a2 + 8);
  unint64_t v8 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 == 15)
  {
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *v7;
      sub_2504DBC4C(*v7, *(void *)(a2 + 16));
      *(void *)(a1 + 8) = v9;
      *(void *)(a1 + 16) = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
    sub_25058434C(a1 + 8);
LABEL_6:
    *uint64_t v6 = *(_OWORD *)v7;
    goto LABEL_8;
  }
  uint64_t v10 = *v7;
  sub_2504DBC4C(*v7, *(void *)(a2 + 16));
  uint64_t v11 = *(void *)(a1 + 8);
  unint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v8;
  sub_250511528(v11, v12);
LABEL_8:
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (uint64_t *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(v4 + v13);
  unint64_t v16 = (int *)type metadata accessor for UserKeyingInfo(0);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_2505B7078((uint64_t)v14, type metadata accessor for UserKeyingInfo);
      goto LABEL_14;
    }
    uint64_t v99 = a3;
    uint64_t v45 = *v15;
    unint64_t v46 = v15[1];
    sub_2504DBC4C(*v15, v46);
    uint64_t v47 = *v14;
    unint64_t v48 = v14[1];
    *uint64_t v14 = v45;
    v14[1] = v46;
    sub_250511528(v47, v48);
    uint64_t v49 = v16[5];
    uint64_t v50 = (char *)v14 + v49;
    uint64_t v51 = (char *)v15 + v49;
    uint64_t v52 = sub_2505BDF30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 24))(v50, v51, v52);
    uint64_t v53 = v16[6];
    uint64_t v54 = (char *)v14 + v53;
    uint64_t v55 = (char *)v15 + v53;
    uint64_t v56 = sub_2505BE040();
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 24);
    v57(v54, v55, v56);
    uint64_t v58 = v16[7];
    uint64_t v59 = (char *)v14 + v58;
    uint64_t v60 = (char *)v15 + v58;
    uint64_t v61 = sub_2505BE0B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
    v57((char *)v14 + v16[8], (char *)v15 + v16[8], v56);
    *(uint64_t *)((char *)v14 + v16[9]) = *(uint64_t *)((char *)v15 + v16[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v62 = v16[10];
    uint64_t v63 = (char *)v14 + v62;
    uint64_t v64 = (char *)v15 + v62;
    uint64_t v65 = sub_2505BDF90();
    __dsta = *(void **)(v65 - 8);
    uint64_t v66 = (uint64_t (*)(char *, uint64_t, uint64_t))__dsta[6];
    uint64_t v97 = v63;
    LODWORD(v63) = v66(v63, 1, v65);
    int v67 = v66(v64, 1, v65);
    if (v63)
    {
      if (!v67)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[2])(v97, v64, v65);
        ((void (*)(void *, void, uint64_t, uint64_t))__dsta[7])(v97, 0, 1, v65);
        goto LABEL_37;
      }
      size_t v68 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78) - 8) + 64);
      uint64_t v69 = v97;
    }
    else
    {
      if (!v67)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[3])(v97, v64, v65);
        goto LABEL_37;
      }
      ((void (*)(void *, uint64_t))__dsta[1])(v97, v65);
      size_t v68 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78) - 8) + 64);
      uint64_t v69 = v97;
    }
    memcpy(v69, v64, v68);
LABEL_37:
    uint64_t v86 = v16[11];
    uint64_t v87 = (char *)v14 + v86;
    uint64_t v88 = (char *)v15 + v86;
    uint64_t v89 = sub_2505BE000();
    uint64_t v90 = *(void *)(v89 - 8);
    char v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
    int v92 = v91(v87, 1, v89);
    int v93 = v91(v88, 1, v89);
    if (v92)
    {
      a3 = v99;
      if (!v93)
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
        goto LABEL_24;
      }
    }
    else
    {
      a3 = v99;
      if (!v93)
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 24))(v87, v88, v89);
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(v87, v89);
    }
    size_t v42 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28) - 8) + 64);
    uint64_t v43 = (uint64_t *)v87;
    uint64_t v44 = (uint64_t *)v88;
LABEL_15:
    memcpy(v43, v44, v42);
    goto LABEL_24;
  }
  if (v20)
  {
LABEL_14:
    size_t v42 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80) - 8) + 64);
    uint64_t v43 = v14;
    uint64_t v44 = v15;
    goto LABEL_15;
  }
  uint64_t v96 = v4;
  uint64_t v98 = a3;
  uint64_t v21 = *v15;
  unint64_t v22 = v15[1];
  sub_2504DBC4C(*v15, v22);
  *uint64_t v14 = v21;
  v14[1] = v22;
  uint64_t v23 = v16[5];
  uint64_t v24 = (char *)v14 + v23;
  uint64_t v25 = (char *)v15 + v23;
  uint64_t v26 = sub_2505BDF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = v16[6];
  uint64_t v28 = (char *)v14 + v27;
  uint64_t v29 = (char *)v15 + v27;
  uint64_t v30 = sub_2505BE040();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  v31(v28, v29, v30);
  uint64_t v32 = v16[7];
  uint64_t v33 = (char *)v14 + v32;
  uint64_t v34 = (char *)v15 + v32;
  uint64_t v35 = sub_2505BE0B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  v31((char *)v14 + v16[8], (char *)v15 + v16[8], v30);
  *(uint64_t *)((char *)v14 + v16[9]) = *(uint64_t *)((char *)v15 + v16[9]);
  uint64_t v36 = v16[10];
  __dst = (char *)v14 + v36;
  uint64_t v37 = (char *)v15 + v36;
  uint64_t v38 = sub_2505BDF90();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  if (v40(v37, 1, v38))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
    memcpy(__dst, v37, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  uint64_t v70 = v16[11];
  uint64_t v71 = (char *)v14 + v70;
  uint64_t v72 = (char *)v15 + v70;
  uint64_t v73 = sub_2505BE000();
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v4 = v96;
  a3 = v98;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
  {
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
LABEL_24:
  uint64_t v76 = *(int *)(a3 + 28);
  uint64_t v77 = (void *)(a1 + v76);
  uint64_t v78 = (void *)(v4 + v76);
  uint64_t v79 = sub_2505BE0B0();
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v80 + 48);
  int v82 = v81(v77, 1, v79);
  int v83 = v81(v78, 1, v79);
  if (!v82)
  {
    if (!v83)
    {
      (*(void (**)(void *, void *, uint64_t))(v80 + 24))(v77, v78, v79);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v80 + 8))(v77, v79);
    goto LABEL_29;
  }
  if (v83)
  {
LABEL_29:
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    memcpy(v77, v78, *(void *)(*(void *)(v84 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v80 + 16))(v77, v78, v79);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  return a1;
}

uint64_t initializeWithTake for GroupMembership.MemberProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  unint64_t v7 = (_OWORD *)(a1 + v6);
  unint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for UserKeyingInfo(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v44 = v10;
    uint64_t v45 = v3;
    *unint64_t v7 = *v8;
    uint64_t v12 = v9[5];
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = sub_2505BDF30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    uint64_t v16 = v9[6];
    uint64_t v17 = (char *)v7 + v16;
    uint64_t v18 = (char *)v8 + v16;
    uint64_t v19 = sub_2505BE040();
    int v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
    v20(v17, v18, v19);
    uint64_t v21 = v9[7];
    unint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)v8 + v21;
    uint64_t v24 = sub_2505BE0B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    v20((char *)v7 + v9[8], (char *)v8 + v9[8], v19);
    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    uint64_t v25 = v9[10];
    uint64_t v26 = (char *)v7 + v25;
    uint64_t v27 = (char *)v8 + v25;
    uint64_t v28 = sub_2505BDF90();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v31 = v9[11];
    uint64_t v32 = (char *)v7 + v31;
    uint64_t v33 = (char *)v8 + v31;
    uint64_t v34 = sub_2505BE000();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v3 = v45;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v44 + 56))(v7, 0, 1, v9);
  }
  uint64_t v37 = *(int *)(v3 + 28);
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_2505BE0B0();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  return a1;
}

uint64_t assignWithTake for GroupMembership.MemberProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  unint64_t v7 = (_OWORD *)(a2 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 16);
  if (v9 >> 60 == 15)
  {
    sub_25058434C(a1 + 8);
LABEL_4:
    *uint64_t v6 = *v7;
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)v7;
  *(void *)(a1 + 16) = v9;
  sub_250511528(v10, v8);
LABEL_6:
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (uint64_t *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for UserKeyingInfo(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16((uint64_t *)v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_2505B7078((uint64_t)v12, type metadata accessor for UserKeyingInfo);
      goto LABEL_12;
    }
    uint64_t v91 = a3;
    uint64_t v41 = *v12;
    unint64_t v42 = v12[1];
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    sub_250511528(v41, v42);
    uint64_t v43 = v14[5];
    uint64_t v44 = (char *)v12 + v43;
    uint64_t v45 = &v13[v43];
    uint64_t v46 = sub_2505BDF30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
    uint64_t v47 = v14[6];
    unint64_t v48 = (char *)v12 + v47;
    uint64_t v49 = &v13[v47];
    uint64_t v50 = sub_2505BE040();
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 40);
    v51(v48, v49, v50);
    uint64_t v52 = v14[7];
    uint64_t v53 = (char *)v12 + v52;
    uint64_t v54 = &v13[v52];
    uint64_t v55 = sub_2505BE0B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 40))(v53, v54, v55);
    v51((char *)v12 + v14[8], &v13[v14[8]], v50);
    *(uint64_t *)((char *)v12 + v14[9]) = *(void *)&v13[v14[9]];
    swift_bridgeObjectRelease();
    uint64_t v56 = v14[10];
    uint64_t v57 = (char *)v12 + v56;
    uint64_t v58 = &v13[v56];
    uint64_t v59 = sub_2505BDF90();
    uint64_t v88 = *(void *)(v59 - 8);
    uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
    uint64_t v89 = v57;
    LODWORD(v57) = v60(v57, 1, v59);
    int v61 = v60(v58, 1, v59);
    if (v57)
    {
      if (!v61)
      {
        (*(void (**)(void *, char *, uint64_t))(v88 + 32))(v89, v58, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v89, 0, 1, v59);
        goto LABEL_35;
      }
      size_t v62 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78) - 8) + 64);
      uint64_t v63 = v89;
    }
    else
    {
      if (!v61)
      {
        (*(void (**)(void *, char *, uint64_t))(v88 + 40))(v89, v58, v59);
        goto LABEL_35;
      }
      (*(void (**)(void *, uint64_t))(v88 + 8))(v89, v59);
      size_t v62 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78) - 8) + 64);
      uint64_t v63 = v89;
    }
    memcpy(v63, v58, v62);
LABEL_35:
    uint64_t v80 = v14[11];
    uint64_t v81 = (char *)v12 + v80;
    int v82 = &v13[v80];
    uint64_t v83 = sub_2505BE000();
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
    int v86 = v85(v81, 1, v83);
    int v87 = v85(v82, 1, v83);
    if (v86)
    {
      a3 = v91;
      if (!v87)
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v81, v82, v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
        goto LABEL_22;
      }
    }
    else
    {
      a3 = v91;
      if (!v87)
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 40))(v81, v82, v83);
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v83);
    }
    size_t v38 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28) - 8) + 64);
    uint64_t v39 = (uint64_t *)v81;
    uint64_t v40 = v82;
LABEL_13:
    memcpy(v39, v40, v38);
    goto LABEL_22;
  }
  if (v18)
  {
LABEL_12:
    size_t v38 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80) - 8) + 64);
    uint64_t v39 = v12;
    uint64_t v40 = v13;
    goto LABEL_13;
  }
  uint64_t v90 = a3;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  uint64_t v19 = v14[5];
  int v20 = (char *)v12 + v19;
  uint64_t v21 = &v13[v19];
  uint64_t v22 = sub_2505BDF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = v14[6];
  uint64_t v24 = (char *)v12 + v23;
  uint64_t v25 = &v13[v23];
  uint64_t v26 = sub_2505BE040();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  uint64_t v28 = v14[7];
  uint64_t v29 = (char *)v12 + v28;
  uint64_t v30 = &v13[v28];
  uint64_t v31 = sub_2505BE0B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  v27((char *)v12 + v14[8], &v13[v14[8]], v26);
  *(uint64_t *)((char *)v12 + v14[9]) = *(void *)&v13[v14[9]];
  uint64_t v32 = v14[10];
  uint64_t v33 = (char *)v12 + v32;
  uint64_t v34 = &v13[v32];
  uint64_t v35 = sub_2505BDF90();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A78);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v64 = v14[11];
  uint64_t v65 = (char *)v12 + v64;
  uint64_t v66 = &v13[v64];
  uint64_t v67 = sub_2505BE000();
  uint64_t v68 = *(void *)(v67 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5A28);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  a3 = v90;
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
LABEL_22:
  uint64_t v70 = *(int *)(a3 + 28);
  uint64_t v71 = (void *)(a1 + v70);
  uint64_t v72 = (void *)(a2 + v70);
  uint64_t v73 = sub_2505BE0B0();
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v75 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v74 + 48);
  int v76 = v75(v71, 1, v73);
  int v77 = v75(v72, 1, v73);
  if (!v76)
  {
    if (!v77)
    {
      (*(void (**)(void *, void *, uint64_t))(v74 + 40))(v71, v72, v73);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v74 + 8))(v71, v73);
    goto LABEL_27;
  }
  if (v77)
  {
LABEL_27:
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
    memcpy(v71, v72, *(void *)(*(void *)(v78 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v74 + 32))(v71, v72, v73);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupMembership.MemberProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2505BD010);
}

uint64_t sub_2505BD010(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &a1[*(int *)(a3 + 24)];
      uint64_t v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
      uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = &a1[*(int *)(a3 + 28)];
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for GroupMembership.MemberProperties(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2505BD150);
}

unsigned char *sub_2505BD150(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5E80);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 24)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB5ED0);
      uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = &v5[*(int *)(a4 + 28)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2505BD280()
{
  sub_2505BD394(319, &qword_269AB6D60, (void (*)(uint64_t))type metadata accessor for UserKeyingInfo);
  if (v0 <= 0x3F)
  {
    sub_2505BD394(319, &qword_269AB6D48, MEMORY[0x263F047E0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2505BD394(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2505BE410();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id static GroupAccessInfoBlob.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFF260]);
  unint64_t v1 = (void *)sub_2505BE130();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_2505BD454()
{
  return MEMORY[0x263F8D1F8];
}

void sub_2505BD460(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_groupAccessInfo);
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_2505BD940();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2505BD4C8(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_2505BD920();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setGroupAccessInfo_);
}

void sub_2505BD540(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269AB67E0);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25055AF68(a1, (uint64_t)v10);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_2505BD9F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    uint64_t v14 = (void *)sub_2505BD9A0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, sel_setGroupID_, v14);
}

uint64_t sub_2505BD66C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GroupAccessInfoBlob();
  uint64_t result = sub_2505BE4D0();
  *a1 = result;
  return result;
}

char *keypath_get_selector_groupAccessInfo()
{
  return sel_groupAccessInfo;
}

char *keypath_get_selector_version()
{
  return sel_version;
}

id sub_2505BD6E0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_version);
  *a2 = result;
  return result;
}

id sub_2505BD714(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVersion_, *a1);
}

uint64_t sub_2505BD728@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GroupKitCryptoGroupBlob();
  uint64_t result = sub_2505BE4D0();
  *a1 = result;
  return result;
}

uint64_t sub_2505BD76C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GroupKitCryptoGroupSeed();
  uint64_t result = sub_2505BE4D0();
  *a1 = result;
  return result;
}

uint64_t sub_2505BD7B0()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_2505BD7C0()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_2505BD7D0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_2505BD7E0()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_2505BD7F0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_2505BD800()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_2505BD810()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_2505BD820()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_2505BD830()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_2505BD840()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2505BD850()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_2505BD860()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_2505BD870()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_2505BD880()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_2505BD890()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_2505BD8A0()
{
  return MEMORY[0x270EF0000]();
}

uint64_t sub_2505BD8B0()
{
  return MEMORY[0x270EF0020]();
}

uint64_t sub_2505BD8C0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_2505BD8D0()
{
  return MEMORY[0x270EF0078]();
}

uint64_t sub_2505BD8E0()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_2505BD8F0()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_2505BD900()
{
  return MEMORY[0x270EF00D0]();
}

uint64_t sub_2505BD910()
{
  return MEMORY[0x270EF00E8]();
}

uint64_t sub_2505BD920()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_2505BD930()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_2505BD940()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_2505BD950()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_2505BD960()
{
  return MEMORY[0x270EF01E0]();
}

uint64_t sub_2505BD970()
{
  return MEMORY[0x270EF0238]();
}

uint64_t sub_2505BD980()
{
  return MEMORY[0x270EF0248]();
}

uint64_t sub_2505BD990()
{
  return MEMORY[0x270EF02A8]();
}

uint64_t sub_2505BD9A0()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_2505BD9B0()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_2505BD9C0()
{
  return MEMORY[0x270EF0CE0]();
}

uint64_t sub_2505BD9D0()
{
  return MEMORY[0x270EF0CF0]();
}

uint64_t sub_2505BD9E0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_2505BD9F0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_2505BDA00()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_2505BDA10()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_2505BDA20()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_2505BDA30()
{
  return MEMORY[0x270F44A18]();
}

uint64_t sub_2505BDA40()
{
  return MEMORY[0x270F44A20]();
}

uint64_t sub_2505BDA50()
{
  return MEMORY[0x270F44A28]();
}

uint64_t sub_2505BDA60()
{
  return MEMORY[0x270F44AA8]();
}

uint64_t sub_2505BDA70()
{
  return MEMORY[0x270F44AB0]();
}

uint64_t sub_2505BDA80()
{
  return MEMORY[0x270F44AD8]();
}

uint64_t sub_2505BDAB0()
{
  return MEMORY[0x270F44B10]();
}

uint64_t sub_2505BDAC0()
{
  return MEMORY[0x270F44B50]();
}

uint64_t sub_2505BDAD0()
{
  return MEMORY[0x270F44B58]();
}

uint64_t sub_2505BDAE0()
{
  return MEMORY[0x270F44B80]();
}

uint64_t sub_2505BDAF0()
{
  return MEMORY[0x270F44C08]();
}

uint64_t sub_2505BDB00()
{
  return MEMORY[0x270F44C20]();
}

uint64_t sub_2505BDB10()
{
  return MEMORY[0x270F44C38]();
}

uint64_t sub_2505BDB20()
{
  return MEMORY[0x270F44C98]();
}

uint64_t sub_2505BDB30()
{
  return MEMORY[0x270F44CA0]();
}

uint64_t sub_2505BDB40()
{
  return MEMORY[0x270F44CA8]();
}

uint64_t sub_2505BDB50()
{
  return MEMORY[0x270F44CB0]();
}

uint64_t sub_2505BDB70()
{
  return MEMORY[0x270F44CD8]();
}

uint64_t sub_2505BDB80()
{
  return MEMORY[0x270F44CE0]();
}

uint64_t sub_2505BDB90()
{
  return MEMORY[0x270F44D68]();
}

uint64_t sub_2505BDBA0()
{
  return MEMORY[0x270F44D70]();
}

uint64_t sub_2505BDBB0()
{
  return MEMORY[0x270F44D88]();
}

uint64_t sub_2505BDBC0()
{
  return MEMORY[0x270F44DE0]();
}

uint64_t sub_2505BDBD0()
{
  return MEMORY[0x270F44DF0]();
}

uint64_t sub_2505BDBE0()
{
  return MEMORY[0x270F44E00]();
}

uint64_t sub_2505BDBF0()
{
  return MEMORY[0x270F44E10]();
}

uint64_t sub_2505BDC00()
{
  return MEMORY[0x270F44E18]();
}

uint64_t sub_2505BDC10()
{
  return MEMORY[0x270F44E28]();
}

uint64_t sub_2505BDC20()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_2505BDC30()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_2505BDC40()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_2505BDC50()
{
  return MEMORY[0x270EEA9E8]();
}

uint64_t sub_2505BDC60()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_2505BDC70()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_2505BDC80()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_2505BDC90()
{
  return MEMORY[0x270EEAAA8]();
}

uint64_t sub_2505BDCA0()
{
  return MEMORY[0x270EEAAE8]();
}

uint64_t sub_2505BDCB0()
{
  return MEMORY[0x270EEAAF0]();
}

uint64_t sub_2505BDCC0()
{
  return MEMORY[0x270EEAB00]();
}

uint64_t sub_2505BDCD0()
{
  return MEMORY[0x270EEAB10]();
}

uint64_t sub_2505BDCE0()
{
  return MEMORY[0x270EEAB30]();
}

uint64_t sub_2505BDCF0()
{
  return MEMORY[0x270EEABF0]();
}

uint64_t sub_2505BDD00()
{
  return MEMORY[0x270EEABF8]();
}

uint64_t sub_2505BDD10()
{
  return MEMORY[0x270EEAC00]();
}

uint64_t sub_2505BDD20()
{
  return MEMORY[0x270EEAC08]();
}

uint64_t sub_2505BDD30()
{
  return MEMORY[0x270EEAC50]();
}

uint64_t sub_2505BDD40()
{
  return MEMORY[0x270EEAC58]();
}

uint64_t sub_2505BDD50()
{
  return MEMORY[0x270EEAC70]();
}

uint64_t sub_2505BDD60()
{
  return MEMORY[0x270EEAC80]();
}

uint64_t sub_2505BDD70()
{
  return MEMORY[0x270EEAC88]();
}

uint64_t sub_2505BDD80()
{
  return MEMORY[0x270EEAC98]();
}

uint64_t sub_2505BDD90()
{
  return MEMORY[0x270EEACA0]();
}

uint64_t sub_2505BDDA0()
{
  return MEMORY[0x270EEACA8]();
}

uint64_t sub_2505BDDB0()
{
  return MEMORY[0x270EEACB8]();
}

uint64_t sub_2505BDDC0()
{
  return MEMORY[0x270EEACC8]();
}

uint64_t sub_2505BDDD0()
{
  return MEMORY[0x270EEACD8]();
}

uint64_t sub_2505BDDE0()
{
  return MEMORY[0x270EEAD20]();
}

uint64_t sub_2505BDDF0()
{
  return MEMORY[0x270EEAD30]();
}

uint64_t sub_2505BDE00()
{
  return MEMORY[0x270EEAD40]();
}

uint64_t sub_2505BDE10()
{
  return MEMORY[0x270EEAD48]();
}

uint64_t sub_2505BDE20()
{
  return MEMORY[0x270EEAD98]();
}

uint64_t sub_2505BDE30()
{
  return MEMORY[0x270EEADA0]();
}

uint64_t sub_2505BDE40()
{
  return MEMORY[0x270EEADB0]();
}

uint64_t sub_2505BDE50()
{
  return MEMORY[0x270EEADB8]();
}

uint64_t sub_2505BDE60()
{
  return MEMORY[0x270EEADC0]();
}

uint64_t sub_2505BDE70()
{
  return MEMORY[0x270EEADE0]();
}

uint64_t sub_2505BDE80()
{
  return MEMORY[0x270EEADF8]();
}

uint64_t sub_2505BDE90()
{
  return MEMORY[0x270EEAE00]();
}

uint64_t sub_2505BDEA0()
{
  return MEMORY[0x270EEAE20]();
}

uint64_t sub_2505BDEB0()
{
  return MEMORY[0x270EEAE48]();
}

uint64_t sub_2505BDEC0()
{
  return MEMORY[0x270EEAE50]();
}

uint64_t sub_2505BDED0()
{
  return MEMORY[0x270EEAE68]();
}

uint64_t sub_2505BDEE0()
{
  return MEMORY[0x270EEAE90]();
}

uint64_t sub_2505BDEF0()
{
  return MEMORY[0x270EEAEB8]();
}

uint64_t sub_2505BDF00()
{
  return MEMORY[0x270EEAEC0]();
}

uint64_t sub_2505BDF10()
{
  return MEMORY[0x270EEAEC8]();
}

uint64_t sub_2505BDF20()
{
  return MEMORY[0x270EEAED0]();
}

uint64_t sub_2505BDF30()
{
  return MEMORY[0x270EEAED8]();
}

uint64_t sub_2505BDF40()
{
  return MEMORY[0x270EEAEF0]();
}

uint64_t sub_2505BDF50()
{
  return MEMORY[0x270EEAEF8]();
}

uint64_t sub_2505BDF60()
{
  return MEMORY[0x270EEAF10]();
}

uint64_t sub_2505BDF70()
{
  return MEMORY[0x270EEAF18]();
}

uint64_t sub_2505BDF80()
{
  return MEMORY[0x270EEAF40]();
}

uint64_t sub_2505BDF90()
{
  return MEMORY[0x270EEAF50]();
}

uint64_t sub_2505BDFA0()
{
  return MEMORY[0x270EEAF60]();
}

uint64_t sub_2505BDFB0()
{
  return MEMORY[0x270EEAF68]();
}

uint64_t sub_2505BDFC0()
{
  return MEMORY[0x270EEAF70]();
}

uint64_t sub_2505BDFD0()
{
  return MEMORY[0x270EEAF88]();
}

uint64_t sub_2505BDFE0()
{
  return MEMORY[0x270EEAF90]();
}

uint64_t sub_2505BDFF0()
{
  return MEMORY[0x270EEAF98]();
}

uint64_t sub_2505BE000()
{
  return MEMORY[0x270EEAFA8]();
}

uint64_t sub_2505BE010()
{
  return MEMORY[0x270EEAFB0]();
}

uint64_t sub_2505BE020()
{
  return MEMORY[0x270EEAFB8]();
}

uint64_t sub_2505BE030()
{
  return MEMORY[0x270EEAFC0]();
}

uint64_t sub_2505BE040()
{
  return MEMORY[0x270EEAFD0]();
}

uint64_t sub_2505BE050()
{
  return MEMORY[0x270EEAFD8]();
}

uint64_t sub_2505BE060()
{
  return MEMORY[0x270EEAFE0]();
}

uint64_t sub_2505BE070()
{
  return MEMORY[0x270EEB000]();
}

uint64_t sub_2505BE080()
{
  return MEMORY[0x270EEB010]();
}

uint64_t sub_2505BE090()
{
  return MEMORY[0x270EEB018]();
}

uint64_t sub_2505BE0A0()
{
  return MEMORY[0x270EEB020]();
}

uint64_t sub_2505BE0B0()
{
  return MEMORY[0x270EEB028]();
}

uint64_t sub_2505BE0C0()
{
  return MEMORY[0x270EEB078]();
}

uint64_t sub_2505BE0D0()
{
  return MEMORY[0x270EEB088]();
}

uint64_t sub_2505BE0E0()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_2505BE0F0()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_2505BE100()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_2505BE110()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_2505BE120()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_2505BE130()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_2505BE140()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_2505BE150()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_2505BE160()
{
  return MEMORY[0x270EF1B18]();
}

uint64_t sub_2505BE170()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_2505BE180()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_2505BE190()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_2505BE1A0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_2505BE1B0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_2505BE1C0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_2505BE1E0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_2505BE1F0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_2505BE200()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_2505BE210()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_2505BE220()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_2505BE230()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_2505BE240()
{
  return MEMORY[0x270F9D9E0]();
}

uint64_t sub_2505BE250()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_2505BE290()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_2505BE2A0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_2505BE2B0()
{
  return MEMORY[0x270EF1BA8]();
}

uint64_t sub_2505BE2C0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_2505BE2D0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_2505BE2E0()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_2505BE2F0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_2505BE300()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_2505BE310()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_2505BE320()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_2505BE330()
{
  return MEMORY[0x270F9DD28]();
}

uint64_t sub_2505BE340()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_2505BE350()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_2505BE360()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_2505BE370()
{
  return MEMORY[0x270F9DFE8]();
}

uint64_t sub_2505BE380()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_2505BE390()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_2505BE3A0()
{
  return MEMORY[0x270EF1E18]();
}

uint64_t sub_2505BE3B0()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_2505BE3C0()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_2505BE3D0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_2505BE3E0()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_2505BE3F0()
{
  return MEMORY[0x270EE4238]();
}

uint64_t sub_2505BE400()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_2505BE410()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2505BE420()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_2505BE430()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_2505BE440()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_2505BE450()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_2505BE460()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_2505BE470()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_2505BE480()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_2505BE490()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_2505BE4A0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_2505BE4B0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_2505BE4C0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_2505BE4D0()
{
  return MEMORY[0x270F9E9D8]();
}

uint64_t sub_2505BE4E0()
{
  return MEMORY[0x270F9EA08]();
}

uint64_t sub_2505BE4F0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_2505BE500()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_2505BE510()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_2505BE520()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_2505BE530()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_2505BE540()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_2505BE550()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_2505BE560()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_2505BE570()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_2505BE580()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_2505BE590()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_2505BE5A0()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_2505BE5B0()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t sub_2505BE5C0()
{
  return MEMORY[0x270F9EFB0]();
}

uint64_t sub_2505BE5D0()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_2505BE5E0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_2505BE5F0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_2505BE600()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_2505BE610()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_2505BE620()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_2505BE630()
{
  return MEMORY[0x270F9F0A8]();
}

uint64_t sub_2505BE640()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_2505BE650()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_2505BE660()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_2505BE670()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_2505BE680()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_2505BE690()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_2505BE6A0()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_2505BE6B0()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_2505BE6C0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_2505BE6D0()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_2505BE6E0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_2505BE6F0()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_2505BE700()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_2505BE710()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_2505BE720()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_2505BE730()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_2505BE740()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_2505BE750()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_2505BE760()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_2505BE770()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2505BE780()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_2505BE7A0()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_2505BE7C0()
{
  return MEMORY[0x270F9FAB8]();
}

uint64_t sub_2505BE7D0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_2505BE7E0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_2505BE7F0()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_2505BE800()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_2505BE810()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_2505BE820()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2505BE830()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2505BE840()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_2505BE850()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_2505BE860()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_2505BE870()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_2505BE880()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_2505BE890()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_2505BE8A0()
{
  return MEMORY[0x270F9FD98]();
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x270EE4348]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x270EE4A30](cf);
}

uint64_t PCSIdentitySetCreate()
{
  return MEMORY[0x270F584A8]();
}

uint64_t PCSIdentitySetCreateManatee()
{
  return MEMORY[0x270F584B0]();
}

CFStringRef SecCopyErrorMessageString(OSStatus status, void *reserved)
{
  return (CFStringRef)MEMORY[0x270EFD8F0](*(void *)&status, reserved);
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x270EFD970](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x270EFD978](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x270EFD980](query);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x270EFDC20](rnd, count, bytes);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _PCSIdentityGetKey()
{
  return MEMORY[0x270F58510]();
}

uint64_t _PCSIdentityGetSigningIdentity()
{
  return MEMORY[0x270F58518]();
}

uint64_t _PCSKeyCopyExportedPrivateKey()
{
  return MEMORY[0x270F58520]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

void abort(void)
{
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

long double log2(long double __x)
{
  MEMORY[0x270EDA0D8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return MEMORY[0x270FA02B8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x270FA04B0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}

int timingsafe_bcmp(const void *__b1, const void *__b2, size_t __len)
{
  return MEMORY[0x270EDB950](__b1, __b2, __len);
}