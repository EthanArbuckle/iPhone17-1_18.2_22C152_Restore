uint64_t sub_1B522AA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned __int8 v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  uint64_t v32;
  char v35;
  uint64_t result;
  uint64_t v37;
  BOOL v38;
  unint64_t v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unsigned __int8 v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  double v54;
  unint64_t v55;
  uint64_t v56;
  BOOL v57;
  BOOL v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  size_t v110;
  int v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  size_t v121;
  int v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unsigned __int8 v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  size_t v139;
  int v140;
  uint64_t v141;
  unint64_t v142;
  unsigned __int8 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  int64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  size_t v161;
  BOOL v162;
  unsigned __int8 v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unsigned __int8 v167;
  char *v168;
  uint64_t v169;
  int64_t v170;
  uint64_t v171;
  unsigned __int8 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  size_t v176;
  int v177;
  const void *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  int64_t v183;
  uint64_t v184;
  size_t v185;
  int v186;
  int v187;
  unsigned __int8 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unsigned __int8 v220;
  unsigned __int8 v221;
  unint64_t v222;
  unint64_t v223;
  unint64_t v224;
  unint64_t v225;
  unint64_t v226;
  unsigned __int8 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  int64_t v239;
  int64_t v240;
  int64_t v241;
  int64_t v242;
  int64_t v243;
  int64_t v244;
  uint64_t v245;
  int64_t v246;
  char v248;
  unint64_t v249;
  uint64_t __s2;
  int v251;
  __int16 v252;
  void __s1[4];

  __s1[2] = *MEMORY[0x1E4F143B8];
  if (a1 == a2) {
    return 1;
  }
  v2 = a2;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  v3 = 0;
  v245 = a1 + 64;
  v4 = 1 << *(unsigned char *)(a1 + 32);
  v5 = -1;
  if (v4 < 64) {
    v5 = ~(-1 << v4);
  }
  v6 = v5 & *(void *)(a1 + 64);
  v246 = (unint64_t)(v4 + 63) >> 6;
  while (2)
  {
    if (!v6)
    {
      v9 = __OFADD__(v3++, 1);
      if (v9)
      {
LABEL_338:
        __break(1u);
LABEL_339:
        __break(1u);
LABEL_340:
        __break(1u);
LABEL_341:
        __break(1u);
LABEL_342:
        __break(1u);
LABEL_343:
        __break(1u);
LABEL_344:
        __break(1u);
LABEL_345:
        __break(1u);
LABEL_346:
        __break(1u);
LABEL_347:
        __break(1u);
LABEL_348:
        __break(1u);
LABEL_349:
        __break(1u);
LABEL_350:
        __break(1u);
        goto LABEL_351;
      }
      if (v3 < v246)
      {
        v10 = *(void *)(v245 + 8 * v3);
        if (v10)
        {
LABEL_22:
          v6 = (v10 - 1) & v10;
          v8 = __clz(__rbit64(v10)) + (v3 << 6);
          goto LABEL_23;
        }
        v11 = v3 + 1;
        if (v3 + 1 < v246)
        {
          v10 = *(void *)(v245 + 8 * v11);
          if (v10) {
            goto LABEL_21;
          }
          v11 = v3 + 2;
          if (v3 + 2 >= v246) {
            return 1;
          }
          v10 = *(void *)(v245 + 8 * v11);
          if (v10) {
            goto LABEL_21;
          }
          v11 = v3 + 3;
          if (v3 + 3 >= v246) {
            return 1;
          }
          v10 = *(void *)(v245 + 8 * v11);
          if (v10)
          {
LABEL_21:
            v3 = v11;
            goto LABEL_22;
          }
          v11 = v3 + 4;
          if (v3 + 4 < v246)
          {
            v10 = *(void *)(v245 + 8 * v11);
            if (!v10)
            {
              while (1)
              {
                v3 = v11 + 1;
                if (__OFADD__(v11, 1)) {
                  goto LABEL_339;
                }
                if (v3 >= v246) {
                  return 1;
                }
                v10 = *(void *)(v245 + 8 * v3);
                ++v11;
                if (v10) {
                  goto LABEL_22;
                }
              }
            }
            goto LABEL_21;
          }
        }
      }
      return 1;
    }
    v7 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v8 = v7 | (v3 << 6);
LABEL_23:
    v12 = 24 * v8;
    v13 = *(void *)(a1 + 48) + v12;
    v14 = *(void *)v13;
    v15 = *(void *)(v13 + 8);
    v16 = *(void *)(a1 + 56) + v12;
    v18 = *(uint64_t *)v16;
    v17 = *(void *)(v16 + 8);
    v19 = *(unsigned __int8 *)(v16 + 16);
    v20 = *(unsigned __int8 *)(v13 + 16);
    sub_1B51DFDC4(*(void *)v13, v15, *(unsigned char *)(v13 + 16));
    v249 = v17;
    sub_1B51DFDC4(v18, v17, v19);
    v21 = sub_1B5230568(v14, v15, v20);
    v23 = v22;
    v24 = v20;
    v25 = v18;
    sub_1B51DFE20(v14, v15, v24);
    v26 = v19;
    if ((v23 & 1) == 0)
    {
LABEL_334:
      sub_1B51DFE20(v25, v249, v26);
      return 0;
    }
    v27 = v19 >> 4;
    v28 = *(void *)(v2 + 56) + 24 * v21;
    v29 = *(uint64_t *)v28;
    v30 = *(void *)(v28 + 8);
    v31 = *(unsigned __int8 *)(v28 + 16);
    switch(v31 >> 4)
    {
      case 1u:
        if (v27 != 1) {
          goto LABEL_334;
        }
        if (v29 != v25) {
          return 0;
        }
        continue;
      case 2u:
        if (v27 != 2) {
          goto LABEL_334;
        }
        if (*(double *)&v29 != *(double *)&v25) {
          return 0;
        }
        continue;
      case 3u:
        if (v27 != 3) {
          goto LABEL_334;
        }
        if (v29 == v25 && v30 == v249)
        {
          v59 = v25;
          v60 = v249;
          goto LABEL_127;
        }
        v35 = sub_1B5373228();
        sub_1B51DFE20(v25, v249, v19);
        result = 0;
        if ((v35 & 1) != 0 && ((v19 ^ v31) & 1) == 0) {
          continue;
        }
        return result;
      case 4u:
        if (v27 != 4) {
          goto LABEL_334;
        }
        v32 = 0;
        switch(v30 >> 62)
        {
          case 1uLL:
            LODWORD(v32) = HIDWORD(v29) - v29;
            if (__OFSUB__(HIDWORD(v29), v29)) {
              goto LABEL_342;
            }
            v32 = (int)v32;
            break;
          case 2uLL:
            v63 = *(void *)(v29 + 16);
            v62 = *(void *)(v29 + 24);
            v9 = __OFSUB__(v62, v63);
            v32 = v62 - v63;
            if (!v9) {
              break;
            }
            goto LABEL_340;
          case 3uLL:
            break;
          default:
            v32 = BYTE6(v30);
            break;
        }
        v64 = v249 >> 62;
        switch(v249 >> 62)
        {
          case 1uLL:
            LODWORD(v65) = HIDWORD(v25) - v25;
            if (__OFSUB__(HIDWORD(v25), v25)) {
              goto LABEL_346;
            }
            v65 = (int)v65;
LABEL_115:
            if (v32 != v65) {
              goto LABEL_334;
            }
            if (v32 < 1)
            {
LABEL_126:
              v59 = v25;
              v60 = v249;
LABEL_127:
              sub_1B51DFE20(v59, v60, v19);
              if (((v19 ^ v31) & 1) == 0) {
                continue;
              }
              return 0;
            }
            v229 = v29;
            v72 = v31;
            switch(v30 >> 62)
            {
              case 1uLL:
                v236 = v6;
                v242 = v3;
                if (v29 >> 32 < (int)v29) {
                  goto LABEL_348;
                }
                v88 = v30;
                sub_1B51D4BB8(v29, v30);
                v223 = v88;
                v89 = v88;
                v31 = v72;
                sub_1B51DFDC4(v229, v89, v72);
                sub_1B51DFDC4(v25, v249, v19);
                v90 = (char *)sub_1B5372268();
                if (!v90) {
                  goto LABEL_148;
                }
                v91 = sub_1B5372298();
                if (__OFSUB__((int)v229, v91)) {
                  goto LABEL_353;
                }
                v90 += (int)v229 - v91;
LABEL_148:
                sub_1B5372288();
                if (!v64)
                {
                  __s1[0] = v25;
                  LODWORD(__s1[1]) = v249;
                  WORD2(__s1[1]) = WORD2(v249);
                  if (v90)
                  {
                    v187 = memcmp(v90, __s1, BYTE6(v249));
                    sub_1B51DFE20(v229, v223, v72);
                    v188 = v19;
                    sub_1B51DFE20(v25, v249, v19);
                    sub_1B51DFE20(v229, v223, v72);
                    v189 = v25;
LABEL_299:
                    sub_1B51DFE20(v189, v249, v188);
                    v162 = v187 == 0;
LABEL_300:
                    v199 = v162;
                    result = 0;
                    if (!v199) {
                      return result;
                    }
                    goto LABEL_318;
                  }
                  goto LABEL_400;
                }
                if (v64 != 1)
                {
                  v190 = *(void *)(v25 + 16);
                  v191 = *(void *)(v25 + 24);
                  swift_retain();
                  swift_retain();
                  v192 = sub_1B5372268();
                  if (v192)
                  {
                    v193 = sub_1B5372298();
                    if (__OFSUB__(v190, v193))
                    {
LABEL_383:
                      __break(1u);
LABEL_384:
                      __break(1u);
                      goto LABEL_385;
                    }
                    v192 += v190 - v193;
                  }
                  v9 = __OFSUB__(v191, v190);
                  v194 = v191 - v190;
                  if (!v9)
                  {
                    v195 = sub_1B5372288();
                    if (v195 >= v194) {
                      v196 = v194;
                    }
                    else {
                      v196 = v195;
                    }
                    v197 = v192 + v196;
                    if (v192) {
                      v198 = v197;
                    }
                    else {
                      v198 = 0;
                    }
                    sub_1B5240650(v192, v90, v198, (BOOL *)__s1);
                    swift_release();
                    swift_release();
                    sub_1B51DFE20(v229, v223, v72);
                    sub_1B51DFE20(v25, v249, v19);
                    sub_1B51DFE20(v229, v223, v72);
                    sub_1B51DFE20(v25, v249, v19);
                    v6 = v236;
                    v3 = v242;
                    result = 0;
                    if (!LOBYTE(__s1[0])) {
                      return result;
                    }
                    goto LABEL_318;
                  }
                  goto LABEL_374;
                }
                if (v25 >> 32 < (int)v25) {
                  goto LABEL_371;
                }
                sub_1B51D4BB8(v25, v249);
                v92 = sub_1B5372268();
                if (v92)
                {
                  v93 = sub_1B5372298();
                  if (!__OFSUB__((int)v25, v93))
                  {
                    v92 += (int)v25 - v93;
                    goto LABEL_154;
                  }
                  goto LABEL_384;
                }
LABEL_154:
                v94 = sub_1B5372288();
                if (v94 >= (v25 >> 32) - (int)v25) {
                  v95 = (v25 >> 32) - (int)v25;
                }
                else {
                  v95 = v94;
                }
                v96 = v92 + v95;
                if (v92) {
                  v97 = v96;
                }
                else {
                  v97 = 0;
                }
                sub_1B5240650(v92, v90, v97, (BOOL *)__s1);
                v98 = v19;
                sub_1B51DFE20(v25, v249, v19);
                sub_1B51DFE20(v229, v223, v72);
                sub_1B51DFE20(v25, v249, v19);
                sub_1B51DFE20(v229, v223, v72);
                v99 = v25;
LABEL_317:
                sub_1B51DFE20(v99, v249, v98);
                v3 = v242;
                result = 0;
                if (!LOBYTE(__s1[0])) {
                  return result;
                }
LABEL_318:
                if (((v19 ^ v31) & 1) == 0) {
                  continue;
                }
                return result;
              case 2uLL:
                v100 = v2;
                v237 = v6;
                v242 = v3;
                v101 = *(void *)(v29 + 16);
                v102 = *(void *)(v29 + 24);
                v224 = v30;
                sub_1B51DFDC4(v29, v30, v72);
                v232 = v25;
                sub_1B51DFDC4(v25, v249, v19);
                swift_retain();
                swift_retain();
                v103 = sub_1B5372268();
                if (v103)
                {
                  v104 = v103;
                  v105 = sub_1B5372298();
                  if (__OFSUB__(v101, v105))
                  {
LABEL_351:
                    __break(1u);
LABEL_352:
                    __break(1u);
LABEL_353:
                    __break(1u);
LABEL_354:
                    __break(1u);
                    goto LABEL_355;
                  }
                  v106 = (void *)(v104 + v101 - v105);
                }
                else
                {
                  v106 = 0;
                }
                v2 = v100;
                if (!__OFSUB__(v102, v101))
                {
                  v31 = v72;
                  sub_1B5372288();
                  v6 = v237;
                  if (!v64)
                  {
                    __s1[0] = v232;
                    LODWORD(__s1[1]) = v249;
                    WORD2(__s1[1]) = WORD2(v249);
                    v3 = v242;
                    if (v106)
                    {
                      v187 = memcmp(v106, __s1, BYTE6(v249));
                      swift_release();
                      swift_release();
                      v188 = v19;
                      sub_1B51DFE20(v232, v249, v19);
                      sub_1B51DFE20(v229, v224, v72);
                      v189 = v232;
                      goto LABEL_299;
                    }
LABEL_402:
                    __break(1u);
                    swift_release();
                    swift_release();
                    __break(1u);
                    JUMPOUT(0x1B522C6C4);
                  }
                  if (v64 != 1)
                  {
                    v200 = *(void *)(v232 + 16);
                    v201 = *(void *)(v232 + 24);
                    swift_retain();
                    swift_retain();
                    v202 = sub_1B5372268();
                    if (v202)
                    {
                      v203 = sub_1B5372298();
                      if (__OFSUB__(v200, v203))
                      {
LABEL_380:
                        __break(1u);
                        goto LABEL_381;
                      }
                      v202 += v200 - v203;
                    }
                    v9 = __OFSUB__(v201, v200);
                    v204 = v201 - v200;
                    if (v9) {
                      goto LABEL_372;
                    }
                    v205 = sub_1B5372288();
                    if (v205 >= v204) {
                      v206 = v204;
                    }
                    else {
                      v206 = v205;
                    }
                    v207 = v202 + v206;
                    if (v202) {
                      v208 = v207;
                    }
                    else {
                      v208 = 0;
                    }
                    sub_1B5240650(v202, v106, v208, (BOOL *)__s1);
                    v6 = v237;
                    swift_release();
                    swift_release();
                    swift_release();
                    v150 = v232;
                    swift_release();
                    v98 = v19;
                    sub_1B51DFE20(v232, v249, v19);
                    v151 = v229;
LABEL_316:
                    sub_1B51DFE20(v151, v224, v72);
                    v99 = v150;
                    goto LABEL_317;
                  }
                  if (v232 >> 32 >= (int)v232)
                  {
                    sub_1B51D4BB8(v232, v249);
                    v144 = sub_1B5372268();
                    if (v144)
                    {
                      v145 = sub_1B5372298();
                      if (__OFSUB__((int)v232, v145)) {
                        goto LABEL_386;
                      }
                      v144 += (int)v232 - v145;
                    }
                    v6 = v237;
                    v146 = sub_1B5372288();
                    if (v146 >= (v232 >> 32) - (int)v232) {
                      v147 = (v232 >> 32) - (int)v232;
                    }
                    else {
                      v147 = v146;
                    }
                    v148 = v144 + v147;
                    if (v144) {
                      v149 = v148;
                    }
                    else {
                      v149 = 0;
                    }
                    sub_1B5240650(v144, v106, v149, (BOOL *)__s1);
                    v150 = v232;
                    v98 = v19;
                    sub_1B51DFE20(v232, v249, v19);
                    swift_release();
                    swift_release();
                    sub_1B51DFE20(v232, v249, v19);
                    v151 = v229;
                    goto LABEL_316;
                  }
LABEL_370:
                  __break(1u);
LABEL_371:
                  __break(1u);
LABEL_372:
                  __break(1u);
LABEL_373:
                  __break(1u);
LABEL_374:
                  __break(1u);
                  goto LABEL_375;
                }
                goto LABEL_350;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v64) {
                  goto LABEL_216;
                }
                v234 = v6;
                v240 = v3;
                if (v64 == 1)
                {
                  v73 = (v25 >> 32) - (int)v25;
                  if (v25 >> 32 < (int)v25)
                  {
LABEL_356:
                    __break(1u);
                    goto LABEL_357;
                  }
                  v74 = v30;
                  sub_1B51DFDC4(v29, v30, v31);
                  sub_1B51DFDC4(v25, v249, v19);
                  v107 = sub_1B5372268();
                  if (v107)
                  {
                    v76 = v107;
                    v108 = sub_1B5372298();
                    v78 = (int)v25 - v108;
                    if (__OFSUB__((int)v25, v108))
                    {
LABEL_365:
                      __break(1u);
                      goto LABEL_366;
                    }
                    goto LABEL_169;
                  }
                  goto LABEL_389;
                }
                v158 = *(void *)(v25 + 16);
                v159 = *(void *)(v25 + 24);
                v226 = v30;
                sub_1B51DFDC4(v29, v30, v31);
                sub_1B51DFDC4(v25, v249, v19);
                swift_retain();
                swift_retain();
                v154 = (char *)sub_1B5372268();
                if (v154)
                {
                  v160 = sub_1B5372298();
                  if (__OFSUB__(v158, v160))
                  {
LABEL_377:
                    __break(1u);
                    goto LABEL_378;
                  }
                  v154 += v158 - v160;
                }
                v9 = __OFSUB__(v159, v158);
                v156 = v159 - v158;
                if (v9) {
                  goto LABEL_359;
                }
                v157 = sub_1B5372288();
                v6 = v234;
                if (!v154) {
                  goto LABEL_394;
                }
                goto LABEL_244;
              default:
                __s1[0] = v29;
                LOWORD(__s1[1]) = v30;
                BYTE2(__s1[1]) = BYTE2(v30);
                BYTE3(__s1[1]) = BYTE3(v30);
                BYTE4(__s1[1]) = BYTE4(v30);
                BYTE5(__s1[1]) = BYTE5(v30);
                if (!v64)
                {
LABEL_216:
                  __s2 = v25;
                  v251 = v249;
                  v252 = WORD2(v249);
                  v111 = memcmp(__s1, &__s2, BYTE6(v249));
                  sub_1B51DFE20(v25, v249, v19);
LABEL_248:
                  v162 = v111 == 0;
                  goto LABEL_300;
                }
                v234 = v6;
                v240 = v3;
                if (v64 != 1)
                {
                  v152 = *(void *)(v25 + 16);
                  v153 = *(void *)(v25 + 24);
                  v226 = v30;
                  sub_1B51DFDC4(v29, v30, v31);
                  sub_1B51DFDC4(v25, v249, v19);
                  swift_retain();
                  swift_retain();
                  v154 = (char *)sub_1B5372268();
                  if (v154)
                  {
                    v155 = sub_1B5372298();
                    if (__OFSUB__(v152, v155))
                    {
LABEL_375:
                      __break(1u);
                      goto LABEL_376;
                    }
                    v154 += v152 - v155;
                  }
                  v9 = __OFSUB__(v153, v152);
                  v156 = v153 - v152;
                  if (v9) {
                    goto LABEL_363;
                  }
                  v157 = sub_1B5372288();
                  v6 = v234;
                  if (!v154) {
                    goto LABEL_393;
                  }
LABEL_244:
                  if (v157 >= v156) {
                    v161 = v156;
                  }
                  else {
                    v161 = v157;
                  }
                  v111 = memcmp(__s1, v154, v161);
                  swift_release();
                  swift_release();
                  sub_1B51DFE20(v25, v249, v19);
                  sub_1B51DFE20(v229, v226, v31);
                  sub_1B51DFE20(v25, v249, v19);
                  v3 = v240;
                  goto LABEL_248;
                }
                v73 = (v25 >> 32) - (int)v25;
                if (v25 >> 32 < (int)v25)
                {
LABEL_358:
                  __break(1u);
LABEL_359:
                  __break(1u);
LABEL_360:
                  __break(1u);
LABEL_361:
                  __break(1u);
                  goto LABEL_362;
                }
                v74 = v30;
                sub_1B51DFDC4(v29, v30, v31);
                sub_1B51DFDC4(v25, v249, v19);
                v75 = sub_1B5372268();
                if (v75)
                {
                  v76 = v75;
                  v77 = sub_1B5372298();
                  v78 = (int)v25 - v77;
                  if (__OFSUB__((int)v25, v77)) {
                    goto LABEL_367;
                  }
LABEL_169:
                  v109 = sub_1B5372288();
                  if (v109 >= v73) {
                    v110 = v73;
                  }
                  else {
                    v110 = v109;
                  }
                  v111 = memcmp(__s1, (const void *)(v76 + v78), v110);
                  sub_1B51DFE20(v25, v249, v19);
                  sub_1B51DFE20(v229, v74, v31);
                  sub_1B51DFE20(v25, v249, v19);
                  v6 = v234;
                  v3 = v240;
                  goto LABEL_248;
                }
                sub_1B5372288();
                __break(1u);
                break;
            }
LABEL_388:
            sub_1B5372288();
            __break(1u);
LABEL_389:
            sub_1B5372288();
            __break(1u);
LABEL_390:
            __break(1u);
            goto LABEL_391;
          case 2uLL:
            v71 = *(void *)(v25 + 16);
            v70 = *(void *)(v25 + 24);
            v9 = __OFSUB__(v70, v71);
            v65 = v70 - v71;
            if (!v9) {
              goto LABEL_115;
            }
            goto LABEL_344;
          case 3uLL:
            if (!v32) {
              goto LABEL_126;
            }
            goto LABEL_334;
          default:
            v65 = BYTE6(v249);
            goto LABEL_115;
        }
      case 5u:
        if (v27 != 5) {
          goto LABEL_334;
        }
        if (v29 == v25 && v30 == v249) {
          goto LABEL_7;
        }
        v49 = v19;
        v50 = sub_1B5373228();
        v51 = v25;
        v52 = v249;
LABEL_74:
        sub_1B51DFE20(v51, v52, v49);
        if ((v50 & 1) == 0) {
          return 0;
        }
        continue;
      case 6u:
        if (v27 != 6) {
          goto LABEL_334;
        }
        v53 = 0;
        switch(v30 >> 62)
        {
          case 1uLL:
            LODWORD(v53) = HIDWORD(v29) - v29;
            if (__OFSUB__(HIDWORD(v29), v29)) {
              goto LABEL_343;
            }
            v53 = (int)v53;
LABEL_108:
            v68 = v249 >> 62;
            switch(v249 >> 62)
            {
              case 1uLL:
                LODWORD(v69) = HIDWORD(v25) - v25;
                if (__OFSUB__(HIDWORD(v25), v25)) {
                  goto LABEL_347;
                }
                v69 = (int)v69;
LABEL_134:
                if (v53 != v69) {
                  goto LABEL_334;
                }
                if (v53 < 1) {
                  goto LABEL_7;
                }
                break;
              case 2uLL:
                v80 = *(void *)(v25 + 16);
                v79 = *(void *)(v25 + 24);
                v9 = __OFSUB__(v79, v80);
                v69 = v79 - v80;
                if (!v9) {
                  goto LABEL_134;
                }
                goto LABEL_345;
              case 3uLL:
                if (!v53) {
                  goto LABEL_7;
                }
                goto LABEL_334;
              default:
                v69 = BYTE6(v249);
                goto LABEL_134;
            }
            break;
          case 2uLL:
            v67 = *(void *)(v29 + 16);
            v66 = *(void *)(v29 + 24);
            v9 = __OFSUB__(v66, v67);
            v53 = v66 - v67;
            if (!v9) {
              goto LABEL_108;
            }
            goto LABEL_341;
          case 3uLL:
            goto LABEL_108;
          default:
            v53 = BYTE6(v30);
            goto LABEL_108;
        }
        v230 = v29;
        switch(v30 >> 62)
        {
          case 1uLL:
            v238 = v6;
            v244 = v3;
            if (v29 >> 32 < (int)v29) {
              goto LABEL_349;
            }
            v127 = v30;
            sub_1B51D4BB8(v29, v30);
            sub_1B51DFDC4(v230, v127, v31);
            sub_1B51DFDC4(v25, v249, v19);
            v128 = (char *)sub_1B5372268();
            if (!v128) {
              goto LABEL_192;
            }
            v129 = sub_1B5372298();
            if (__OFSUB__((int)v230, v129)) {
              goto LABEL_354;
            }
            v128 += (int)v230 - v129;
LABEL_192:
            sub_1B5372288();
            if (v68)
            {
              if (v68 == 1)
              {
                if (v25 >> 32 < (int)v25)
                {
LABEL_369:
                  __break(1u);
                  goto LABEL_370;
                }
                sub_1B51D4BB8(v25, v249);
                v130 = sub_1B5372268();
                if (v130)
                {
                  v131 = sub_1B5372298();
                  if (__OFSUB__((int)v25, v131))
                  {
LABEL_385:
                    __break(1u);
LABEL_386:
                    __break(1u);
                  }
                  v130 += (int)v25 - v131;
                }
                v132 = sub_1B5372288();
                if (v132 >= (v25 >> 32) - (int)v25) {
                  v133 = (v25 >> 32) - (int)v25;
                }
                else {
                  v133 = v132;
                }
                v134 = v130 + v133;
                if (v130) {
                  v135 = v134;
                }
                else {
                  v135 = 0;
                }
                sub_1B5240650(v130, v128, v135, (BOOL *)__s1);
                sub_1B51DFE20(v25, v249, v19);
                sub_1B51DFE20(v230, v127, v31);
                sub_1B51DFE20(v25, v249, v19);
                sub_1B51DFE20(v230, v127, v31);
                sub_1B51DFE20(v25, v249, v19);
                if (__s1[0]) {
                  continue;
                }
              }
              else
              {
                v209 = *(void *)(v25 + 16);
                v210 = *(void *)(v25 + 24);
                swift_retain();
                swift_retain();
                v211 = sub_1B5372268();
                if (v211)
                {
                  v212 = sub_1B5372298();
                  if (__OFSUB__(v209, v212))
                  {
LABEL_381:
                    __break(1u);
                    goto LABEL_382;
                  }
                  v211 += v209 - v212;
                }
                v9 = __OFSUB__(v210, v209);
                v213 = v210 - v209;
                if (v9) {
                  goto LABEL_373;
                }
                v214 = sub_1B5372288();
                if (v214 >= v213) {
                  v215 = v213;
                }
                else {
                  v215 = v214;
                }
                v216 = v211 + v215;
                if (v211) {
                  v217 = v216;
                }
                else {
                  v217 = 0;
                }
                sub_1B5240650(v211, v128, v217, (BOOL *)__s1);
                swift_release();
                swift_release();
                sub_1B51DFE20(v230, v127, v31);
                sub_1B51DFE20(v25, v249, v19);
                sub_1B51DFE20(v230, v127, v31);
                sub_1B51DFE20(v25, v249, v19);
                v6 = v238;
                v3 = v244;
                if (__s1[0]) {
                  continue;
                }
              }
              return 0;
            }
            __s1[0] = v25;
            LODWORD(__s1[1]) = v249;
            WORD2(__s1[1]) = WORD2(v249);
            if (!v128)
            {
LABEL_401:
              __break(1u);
              goto LABEL_402;
            }
            v122 = memcmp(v128, __s1, BYTE6(v249));
            sub_1B51DFE20(v230, v127, v31);
            sub_1B51DFE20(v25, v249, v19);
            sub_1B51DFE20(v230, v127, v31);
            v141 = v25;
            v142 = v249;
            v143 = v19;
            goto LABEL_295;
          case 2uLL:
            v243 = v3;
            v112 = *(void *)(v29 + 16);
            v225 = v30;
            sub_1B51DFDC4(v29, v30, v31);
            sub_1B51DFDC4(v25, v249, v19);
            swift_retain();
            swift_retain();
            v113 = (char *)sub_1B5372268();
            if (!v113) {
              goto LABEL_176;
            }
            v114 = sub_1B5372298();
            if (__OFSUB__(v112, v114)) {
              goto LABEL_352;
            }
            v113 += v112 - v114;
LABEL_176:
            v3 = v243;
            sub_1B5372288();
            if (v68)
            {
              v221 = v31;
              v115 = v2;
              v116 = v25;
              v117 = v6;
              if (v68 != 1)
              {
                v179 = *(void *)(v116 + 16);
                v180 = *(void *)(v116 + 24);
                swift_retain();
                swift_retain();
                v181 = (char *)sub_1B5372268();
                if (v181)
                {
                  v182 = sub_1B5372298();
                  if (__OFSUB__(v179, v182))
                  {
LABEL_379:
                    __break(1u);
                    goto LABEL_380;
                  }
                  v181 += v179 - v182;
                }
                v9 = __OFSUB__(v180, v179);
                v183 = v180 - v179;
                if (v9) {
                  goto LABEL_368;
                }
                v184 = sub_1B5372288();
                if (v184 >= v183) {
                  v185 = v183;
                }
                else {
                  v185 = v184;
                }
                if (!v113) {
                  goto LABEL_398;
                }
                v3 = v243;
                if (!v181)
                {
LABEL_399:
                  __break(1u);
LABEL_400:
                  __break(1u);
                  goto LABEL_401;
                }
                v6 = v117;
                v186 = memcmp(v113, v181, v185);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                sub_1B51DFE20(v116, v249, v19);
                sub_1B51DFE20(v230, v225, v221);
                sub_1B51DFE20(v116, v249, v19);
                v2 = v115;
                if (!v186) {
                  continue;
                }
                return 0;
              }
              if (v116 >> 32 < (int)v116)
              {
LABEL_362:
                __break(1u);
LABEL_363:
                __break(1u);
LABEL_364:
                __break(1u);
                goto LABEL_365;
              }
              swift_retain();
              v118 = (char *)sub_1B5372268();
              if (v118)
              {
                v119 = sub_1B5372298();
                if (__OFSUB__((int)v116, v119))
                {
LABEL_382:
                  __break(1u);
                  goto LABEL_383;
                }
                v118 += (int)v116 - v119;
              }
              v120 = sub_1B5372288();
              if (v120 >= (v116 >> 32) - (int)v116) {
                v121 = (v116 >> 32) - (int)v116;
              }
              else {
                v121 = v120;
              }
              if (!v113) {
                goto LABEL_390;
              }
              v3 = v243;
              if (!v118)
              {
LABEL_391:
                __break(1u);
LABEL_392:
                sub_1B5372288();
                __break(1u);
LABEL_393:
                __break(1u);
LABEL_394:
                __break(1u);
LABEL_395:
                __break(1u);
LABEL_396:
                __break(1u);
                goto LABEL_397;
              }
              v25 = v116;
              v2 = v115;
              v122 = memcmp(v113, v118, v121);
              v123 = v249;
              sub_1B51DFE20(v25, v249, v19);
              swift_release();
              swift_release();
              sub_1B51DFE20(v25, v249, v19);
              v124 = v230;
              v125 = v225;
              v126 = v221;
            }
            else
            {
              __s1[0] = v25;
              v178 = v113;
              v123 = v249;
              LODWORD(__s1[1]) = v249;
              WORD2(__s1[1]) = WORD2(v249);
              if (!v178)
              {
LABEL_397:
                __break(1u);
LABEL_398:
                __break(1u);
                goto LABEL_399;
              }
              v122 = memcmp(v178, __s1, BYTE6(v249));
              swift_release();
              swift_release();
              sub_1B51DFE20(v25, v249, v19);
              v124 = v230;
              v125 = v225;
              v126 = v31;
            }
            sub_1B51DFE20(v124, v125, v126);
            v141 = v25;
            v142 = v123;
            v143 = v19;
            goto LABEL_295;
          case 3uLL:
            memset(__s1, 0, 14);
            if (!v68) {
              goto LABEL_217;
            }
            v235 = v6;
            v241 = v3;
            if (v68 == 1)
            {
              v81 = (v25 >> 32) - (int)v25;
              if (v25 >> 32 < (int)v25)
              {
LABEL_357:
                __break(1u);
                goto LABEL_358;
              }
              v82 = v30;
              v83 = v19;
              sub_1B51DFDC4(v29, v30, v31);
              sub_1B51DFDC4(v25, v249, v19);
              v136 = sub_1B5372268();
              if (!v136) {
                goto LABEL_392;
              }
              v85 = v136;
              v137 = sub_1B5372298();
              v87 = (int)v25 - v137;
              if (__OFSUB__((int)v25, v137))
              {
LABEL_366:
                __break(1u);
LABEL_367:
                __break(1u);
LABEL_368:
                __break(1u);
                goto LABEL_369;
              }
LABEL_211:
              v138 = sub_1B5372288();
              if (v138 >= v81) {
                v139 = v81;
              }
              else {
                v139 = v138;
              }
              v140 = memcmp(__s1, (const void *)(v85 + v87), v139);
              sub_1B51DFE20(v25, v249, v83);
              sub_1B51DFE20(v230, v82, v31);
              sub_1B51DFE20(v25, v249, v83);
              v6 = v235;
              v3 = v241;
              if (!v140) {
                continue;
              }
              return 0;
            }
            v172 = v31;
            v219 = v2;
            v173 = *(void *)(v25 + 16);
            v174 = *(void *)(v25 + 24);
            v166 = v30;
            v167 = v172;
            sub_1B51DFDC4(v29, v30, v172);
            sub_1B51DFDC4(v25, v249, v19);
            swift_retain();
            swift_retain();
            v168 = (char *)sub_1B5372268();
            if (v168)
            {
              v175 = sub_1B5372298();
              if (__OFSUB__(v173, v175))
              {
LABEL_378:
                __break(1u);
                goto LABEL_379;
              }
              v168 += v173 - v175;
            }
            v9 = __OFSUB__(v174, v173);
            v170 = v174 - v173;
            if (v9) {
              goto LABEL_361;
            }
            v171 = sub_1B5372288();
            v6 = v235;
            if (!v168) {
              goto LABEL_396;
            }
            break;
          default:
            __s1[0] = v29;
            LOWORD(__s1[1]) = v30;
            BYTE2(__s1[1]) = BYTE2(v30);
            BYTE3(__s1[1]) = BYTE3(v30);
            BYTE4(__s1[1]) = BYTE4(v30);
            BYTE5(__s1[1]) = BYTE5(v30);
            if (!v68)
            {
LABEL_217:
              __s2 = v25;
              v251 = v249;
              v252 = WORD2(v249);
              v122 = memcmp(__s1, &__s2, BYTE6(v249));
              v141 = v25;
              v142 = v249;
              v143 = v19;
LABEL_295:
              sub_1B51DFE20(v141, v142, v143);
              if (!v122) {
                continue;
              }
              return 0;
            }
            v235 = v6;
            v241 = v3;
            if (v68 == 1)
            {
              v81 = (v25 >> 32) - (int)v25;
              if (v25 >> 32 < (int)v25)
              {
LABEL_355:
                __break(1u);
                goto LABEL_356;
              }
              v82 = v30;
              v83 = v19;
              sub_1B51DFDC4(v29, v30, v31);
              sub_1B51DFDC4(v25, v249, v19);
              v84 = sub_1B5372268();
              if (!v84) {
                goto LABEL_388;
              }
              v85 = v84;
              v86 = sub_1B5372298();
              v87 = (int)v25 - v86;
              if (__OFSUB__((int)v25, v86)) {
                goto LABEL_364;
              }
              goto LABEL_211;
            }
            v163 = v31;
            v219 = v2;
            v164 = *(void *)(v25 + 16);
            v165 = *(void *)(v25 + 24);
            v166 = v30;
            v167 = v163;
            sub_1B51DFDC4(v29, v30, v163);
            sub_1B51DFDC4(v25, v249, v19);
            swift_retain();
            swift_retain();
            v168 = (char *)sub_1B5372268();
            if (v168)
            {
              v169 = sub_1B5372298();
              if (__OFSUB__(v164, v169))
              {
LABEL_376:
                __break(1u);
                goto LABEL_377;
              }
              v168 += v164 - v169;
            }
            v9 = __OFSUB__(v165, v164);
            v170 = v165 - v164;
            if (v9) {
              goto LABEL_360;
            }
            v171 = sub_1B5372288();
            v6 = v235;
            if (!v168) {
              goto LABEL_395;
            }
            break;
        }
        if (v171 >= v170) {
          v176 = v170;
        }
        else {
          v176 = v171;
        }
        v177 = memcmp(__s1, v168, v176);
        swift_release();
        swift_release();
        sub_1B51DFE20(v25, v249, v19);
        sub_1B51DFE20(v230, v166, v167);
        sub_1B51DFE20(v25, v249, v19);
        v3 = v241;
        v2 = v219;
        if (!v177) {
          continue;
        }
        return 0;
      case 7u:
        if (v27 != 7) {
          goto LABEL_334;
        }
        v37 = *(void *)(v29 + 16);
        if (v37 != *(void *)(v25 + 16)) {
          goto LABEL_334;
        }
        if (v37) {
          v38 = v29 == v25;
        }
        else {
          v38 = 1;
        }
        if (v38) {
          goto LABEL_7;
        }
        v222 = *(void *)(v28 + 8);
        v220 = *(unsigned char *)(v28 + 16);
        v227 = v19;
        v218 = v2;
        v39 = 0;
        v40 = (unsigned __int8 *)(v25 + 48);
        v228 = swift_bridgeObjectRetain();
        v231 = v25;
        v41 = (unsigned __int8 *)(v228 + 48);
        v233 = v6;
        v239 = v3;
LABEL_56:
        if (v39 < *(void *)(v25 + 16))
        {
          v43 = *((void *)v41 - 2);
          v42 = *((void *)v41 - 1);
          v45 = *((void *)v40 - 2);
          v44 = *((void *)v40 - 1);
          v46 = *v41;
          v47 = *v40;
          sub_1B51DFDC4(v43, v42, *v41);
          sub_1B51DFDC4(v45, v44, v47);
          v248 = _s10FontParser8PSObjectO21__derived_enum_equalsySbAC_ACtFZ_0(v43, v42, v46, v45, v44, v47);
          sub_1B51DFE20(v45, v44, v47);
          sub_1B51DFE20(v43, v42, v46);
          if (v248)
          {
            ++v39;
            v40 += 24;
            v41 += 24;
            v6 = v233;
            v3 = v239;
            v25 = v231;
            if (v37 == v39)
            {
              sub_1B51DFE20(v228, v222, v220);
              v2 = v218;
              v26 = v227;
LABEL_7:
              sub_1B51DFE20(v25, v249, v26);
              continue;
            }
            goto LABEL_56;
          }
          sub_1B51DFE20(v228, v222, v220);
          v26 = v227;
          v25 = v231;
          goto LABEL_334;
        }
        __break(1u);
        break;
      case 8u:
        if (v27 != 8) {
          goto LABEL_334;
        }
        v54 = *(double *)v28;
        v55 = *(void *)(v28 + 8);
        v49 = v26;
        v56 = swift_bridgeObjectRetain();
        v50 = sub_1B522AA7C(v56, v25);
        sub_1B51DFE20(*(uint64_t *)&v54, v55, v31);
        v51 = v25;
        v52 = v249;
        goto LABEL_74;
      case 9u:
        if (v30 | v29 || v31 != 144)
        {
          v57 = v29 == 1 && v30 == 0;
          if (v57 && v31 == 144) {
            v58 = v27 == 9 && v25 == 1;
          }
          else {
            v58 = v27 == 9 && v25 == 2;
          }
          if (!v58 || v249 != 0) {
            goto LABEL_334;
          }
        }
        else if (v27 != 9 || (v249 | v25) != 0)
        {
          goto LABEL_334;
        }
        if (v19 == 144) {
          continue;
        }
        goto LABEL_334;
      default:
        if (v19 >= 0x10) {
          goto LABEL_334;
        }
        if (((v25 ^ ((*(void *)v28 & 1) == 0)) & 1) == 0) {
          return 0;
        }
        continue;
    }
    goto LABEL_338;
  }
}

uint64_t PSObject.hashValue.getter(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  sub_1B53732F8();
  PSObject.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_1B5373358();
}

uint64_t sub_1B522C7AC()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 16);
  sub_1B53732F8();
  PSObject.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1B5373358();
}

uint64_t sub_1B522C808(uint64_t a1)
{
  return PSObject.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_1B522C814()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 16);
  sub_1B53732F8();
  PSObject.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1B5373358();
}

uint64_t sub_1B522C86C()
{
  return PSObject.description.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1B522C878(uint64_t a1, uint64_t a2)
{
  return _s10FontParser8PSObjectO21__derived_enum_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

void *sub_1B522C898@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[1];
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = 48;
  return result;
}

uint64_t sub_1B522C8AC(uint64_t a1, uint64_t a2)
{
  switch(BYTE6(a2))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 8:
    case 9:
      sub_1B5373308();
      uint64_t result = sub_1B5373338();
      break;
    case 5:
      sub_1B5373308();
      uint64_t result = sub_1B5373308();
      break;
    case 7:
      sub_1B5373308();
      sub_1B5373338();
      uint64_t result = sub_1B5373328();
      break;
    case 0xA:
      uint64_t result = sub_1B5373308();
      break;
    default:
      sub_1B5373308();
      uint64_t result = sub_1B5373318();
      break;
  }
  return result;
}

void *sub_1B522C9E4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 16;
  return result;
}

uint64_t sub_1B522C9F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 112;
  return result;
}

uint64_t sub_1B522CA08()
{
  unint64_t v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  uint64_t v2 = *((unsigned __int8 *)v0 + 6);
  sub_1B53732F8();
  sub_1B522C8AC((uint64_t)v4, v1 | (v2 << 48));
  return sub_1B5373358();
}

uint64_t sub_1B522CA5C(uint64_t a1)
{
  return sub_1B522C8AC(a1, *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 6) << 48));
}

uint64_t sub_1B522CA74()
{
  unint64_t v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  uint64_t v2 = *((unsigned __int8 *)v0 + 6);
  sub_1B53732F8();
  sub_1B522C8AC((uint64_t)v4, v1 | (v2 << 48));
  return sub_1B5373358();
}

BOOL sub_1B522CAC4(unsigned int *a1, unsigned int *a2)
{
  return sub_1B522D004(*a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48));
}

_WORD *sub_1B522CAF0@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B522CAFC()
{
  return sub_1B5373358();
}

uint64_t sub_1B522CB44()
{
  return sub_1B5373328();
}

uint64_t sub_1B522CB70()
{
  return sub_1B5373358();
}

void sub_1B522CBB4(_WORD *a1@<X8>)
{
  *a1 = 0;
}

_WORD *sub_1B522CBBC@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_WORD *sub_1B522CBD0@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_WORD *sub_1B522CBE4@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1B522CBF8(_WORD *a1, unsigned __int16 *a2)
{
  int v3 = *a2;
  int v4 = (unsigned __int16)*v2;
  if ((v4 & v3) != v3) {
    *uint64_t v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int16 *sub_1B522CC28@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = (unsigned __int16)*v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    *uint64_t v2 = v4 & ~(_WORD)v3;
  }
  *(_WORD *)a2 = v5;
  *(unsigned char *)(a2 + 2) = v5 == 0;
  return result;
}

unsigned __int16 *sub_1B522CC54@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = (unsigned __int16)*v2;
  *uint64_t v2 = v4 | v3;
  int v5 = v4 & v3;
  *(_WORD *)a2 = v5;
  *(unsigned char *)(a2 + 2) = v5 == 0;
  return result;
}

_WORD *sub_1B522CC78(_WORD *result)
{
  *v1 |= *result;
  return result;
}

_WORD *sub_1B522CC8C(_WORD *result)
{
  *v1 &= *result;
  return result;
}

_WORD *sub_1B522CCA0(_WORD *result)
{
  *v1 ^= *result;
  return result;
}

_WORD *sub_1B522CCB4@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1B522CCC8(unsigned __int16 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1B522CCDC(_WORD *a1)
{
  return (unsigned __int16)(*v1 & *a1) == 0;
}

BOOL sub_1B522CCF0(unsigned __int16 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1B522CD04()
{
  return *v0 == 0;
}

uint64_t sub_1B522CD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

_WORD *sub_1B522CD2C(_WORD *result)
{
  *v1 &= ~*result;
  return result;
}

_WORD *sub_1B522CD40@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(unsigned char *)(a2 + 2) = 0;
  return result;
}

void sub_1B522CD50(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1B522CD5C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B522CD70@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  __int16 v3 = sub_1B526A08C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_1B522CDB0()
{
  unint64_t result = qword_1E9D48130;
  if (!qword_1E9D48130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48130);
  }
  return result;
}

uint64_t sub_1B522CE04(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v26 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v23 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v23 >= v26) {
      goto LABEL_19;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v8;
    if (!v24)
    {
      int64_t v8 = v23 + 1;
      if (v23 + 1 >= v26) {
        goto LABEL_19;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v8);
      if (!v24) {
        break;
      }
    }
LABEL_18:
    unint64_t v5 = (v24 - 1) & v24;
    unint64_t v10 = __clz(__rbit64(v24)) + (v8 << 6);
LABEL_5:
    uint64_t v11 = 24 * v10;
    uint64_t v12 = *(void *)(a2 + 48) + v11;
    uint64_t v13 = *(void *)v12;
    unint64_t v14 = *(void *)(v12 + 8);
    uint64_t v15 = *(void *)(a2 + 56) + v11;
    uint64_t v16 = *(void *)v15;
    unint64_t v17 = *(void *)(v15 + 8);
    uint64_t v18 = *(unsigned __int8 *)(v12 + 16);
    uint64_t v19 = *(unsigned __int8 *)(v15 + 16);
    uint64_t v20 = *(void *)(a1 + 64);
    long long v21 = *(_OWORD *)(a1 + 16);
    v29[0] = *(_OWORD *)a1;
    v29[1] = v21;
    long long v22 = *(_OWORD *)(a1 + 48);
    v29[2] = *(_OWORD *)(a1 + 32);
    v29[3] = v22;
    uint64_t v30 = v20;
    sub_1B51DFDC4(v13, v14, v18);
    sub_1B51DFDC4(v16, v17, v19);
    PSObject.hash(into:)(v29, v13, v14, v18);
    sub_1B51DFE20(v13, v14, v18);
    PSObject.hash(into:)(v29, v16, v17, v19);
    sub_1B51DFE20(v16, v17, v19);
    uint64_t result = sub_1B5373358();
    v7 ^= result;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v26)
  {
LABEL_19:
    swift_release();
    return sub_1B5373308();
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v8 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v8 >= v26) {
      goto LABEL_19;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v8);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

BOOL sub_1B522D004(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 & 0xFFFFFFFFFFFFLL;
  switch(BYTE6(a1))
  {
    case 1:
      if (BYTE6(a2) == 1) {
        goto LABEL_23;
      }
      return 0;
    case 2:
      if (BYTE6(a2) != 2) {
        return 0;
      }
      return *(float *)&a1 == *(float *)&a2;
    case 3:
      if (BYTE6(a2) != 3) {
        return 0;
      }
      goto LABEL_23;
    case 4:
      if (BYTE6(a2) != 4) {
        return 0;
      }
      goto LABEL_23;
    case 5:
      if (BYTE6(a2) != 5) {
        return 0;
      }
      BOOL v4 = (a2 ^ a1) == 0;
      goto LABEL_24;
    case 6:
      if (BYTE6(a2) != 6) {
        return 0;
      }
      goto LABEL_23;
    case 7:
      if (BYTE6(a2) != 7) {
        return 0;
      }
      BOOL v5 = WORD2(a1) == WORD2(a2);
      if (a1 != a2) {
        return 0;
      }
      return v5;
    case 8:
      if (BYTE6(a2) != 8) {
        return 0;
      }
      goto LABEL_23;
    case 9:
      if (BYTE6(a2) != 9) {
        return 0;
      }
LABEL_23:
      BOOL v4 = a1 == a2;
LABEL_24:
      char v6 = v4;
      return v6 & 1;
    case 0xA:
      if ((a1 & 0xFFFFFFFFFFFFLL) == 0) {
        return BYTE6(a2) == 10 && !v2;
      }
      return BYTE6(a2) == 10 && v2 == 1;
    default:
      if (BYTE6(a2)) {
        return 0;
      }
      return (((a1 & 1) == 0) ^ a2) & 1;
  }
}

uint64_t _s10FontParser8PSObjectO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, unint64_t a5, unsigned __int8 a6)
{
  switch(a3 >> 4)
  {
    case 1:
      if ((a6 & 0xF0) != 0x10) {
        goto LABEL_80;
      }
      char v12 = a1 == a4;
      return v12 & 1;
    case 2:
      if ((a6 & 0xF0) != 0x20) {
        goto LABEL_80;
      }
      char v12 = *(double *)&a1 == *(double *)&a4;
      return v12 & 1;
    case 3:
      if ((a6 & 0xF0) != 0x30) {
        goto LABEL_80;
      }
      if (a1 == a4 && a2 == a5 || (v13 = sub_1B5373228(), char v12 = 0, (v13 & 1) != 0)) {
LABEL_70:
      }
        char v12 = ((a3 & 1) == 0) ^ a6;
      return v12 & 1;
    case 4:
      if ((a6 & 0xF0) == 0x40)
      {
        uint64_t v14 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1))
            {
              __break(1u);
LABEL_84:
              __break(1u);
LABEL_85:
              __break(1u);
LABEL_86:
              __break(1u);
LABEL_87:
              __break(1u);
LABEL_88:
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
              JUMPOUT(0x1B522D650);
            }
            uint64_t v14 = HIDWORD(a1) - (int)a1;
LABEL_52:
            sub_1B51D4BB8(a1, a2);
LABEL_53:
            switch(a5 >> 62)
            {
              case 1uLL:
                LODWORD(v19) = HIDWORD(a4) - a4;
                if (__OFSUB__(HIDWORD(a4), a4)) {
                  goto LABEL_87;
                }
                uint64_t v19 = (int)v19;
LABEL_64:
                if (v14 != v19) {
                  goto LABEL_79;
                }
                if (v14 < 1)
                {
LABEL_69:
                  sub_1B51DFE20(a1, a2, a3);
                  goto LABEL_70;
                }
                sub_1B51D4BB8(a4, a5);
                char v26 = sub_1B5240420(a1, a2, a4, a5);
                sub_1B51DFE20(a1, a2, a3);
                if (v26) {
                  goto LABEL_70;
                }
                break;
              case 2uLL:
                uint64_t v24 = *(void *)(a4 + 16);
                uint64_t v23 = *(void *)(a4 + 24);
                BOOL v25 = __OFSUB__(v23, v24);
                uint64_t v19 = v23 - v24;
                if (!v25) {
                  goto LABEL_64;
                }
                goto LABEL_88;
              case 3uLL:
                if (!v14) {
                  goto LABEL_69;
                }
                goto LABEL_79;
              default:
                uint64_t v19 = BYTE6(a5);
                goto LABEL_64;
            }
            break;
          case 2uLL:
            uint64_t v18 = *(void *)(a1 + 16);
            uint64_t v17 = *(void *)(a1 + 24);
            uint64_t v14 = v17 - v18;
            if (!__OFSUB__(v17, v18)) {
              goto LABEL_52;
            }
            goto LABEL_84;
          case 3uLL:
            goto LABEL_53;
          default:
            uint64_t v14 = BYTE6(a2);
            goto LABEL_53;
        }
      }
      goto LABEL_80;
    case 5:
      if ((a6 & 0xF0) != 0x50) {
        goto LABEL_80;
      }
      if (a1 == a4 && a2 == a5) {
        goto LABEL_48;
      }
      return sub_1B5373228();
    case 6:
      if ((a6 & 0xF0) == 0x60)
      {
        uint64_t v16 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_85;
            }
            uint64_t v16 = HIDWORD(a1) - (int)a1;
LABEL_58:
            sub_1B51D4BB8(a1, a2);
LABEL_59:
            switch(a5 >> 62)
            {
              case 1uLL:
                LODWORD(v22) = HIDWORD(a4) - a4;
                if (__OFSUB__(HIDWORD(a4), a4)) {
                  goto LABEL_90;
                }
                uint64_t v22 = (int)v22;
LABEL_74:
                if (v16 != v22)
                {
LABEL_79:
                  sub_1B51DFE20(a1, a2, a3);
                  goto LABEL_80;
                }
                if (v16 < 1)
                {
LABEL_82:
                  sub_1B51DFE20(a1, a2, a3);
                  char v12 = 1;
                  return v12 & 1;
                }
                sub_1B51D4BB8(a4, a5);
                char v29 = sub_1B5240420(a1, a2, a4, a5);
                sub_1B51DFE20(a1, a2, a3);
                if (v29) {
                  goto LABEL_48;
                }
                break;
              case 2uLL:
                uint64_t v28 = *(void *)(a4 + 16);
                uint64_t v27 = *(void *)(a4 + 24);
                BOOL v25 = __OFSUB__(v27, v28);
                uint64_t v22 = v27 - v28;
                if (!v25) {
                  goto LABEL_74;
                }
                goto LABEL_89;
              case 3uLL:
                if (v16) {
                  goto LABEL_79;
                }
                goto LABEL_82;
              default:
                uint64_t v22 = BYTE6(a5);
                goto LABEL_74;
            }
            break;
          case 2uLL:
            uint64_t v21 = *(void *)(a1 + 16);
            uint64_t v20 = *(void *)(a1 + 24);
            uint64_t v16 = v20 - v21;
            if (!__OFSUB__(v20, v21)) {
              goto LABEL_58;
            }
            goto LABEL_86;
          case 3uLL:
            goto LABEL_59;
          default:
            uint64_t v16 = BYTE6(a2);
            goto LABEL_59;
        }
      }
      goto LABEL_80;
    case 7:
      if ((a6 & 0xF0) != 0x70) {
        goto LABEL_80;
      }
      return sub_1B526F1DC(a1, a4);
    case 8:
      if ((a6 & 0xF0) != 0x80) {
        goto LABEL_80;
      }
      return sub_1B522AA7C(a1, a4);
    case 9:
      if (a2 | a1 || a3 != 144)
      {
        if (a1 == 1 && !a2 && a3 == 144)
        {
          if ((a6 & 0xF0) != 0x90 || a4 != 1) {
            goto LABEL_80;
          }
        }
        else if ((a6 & 0xF0) != 0x90 || a4 != 2)
        {
          goto LABEL_80;
        }
        if (a5) {
          goto LABEL_80;
        }
      }
      else if ((a6 & 0xF0) != 0x90 || a5 | a4)
      {
        goto LABEL_80;
      }
      if (a6 == 144)
      {
LABEL_48:
        char v12 = 1;
        return v12 & 1;
      }
LABEL_80:
      char v12 = 0;
      return v12 & 1;
    default:
      if (a6 >= 0x10u) {
        goto LABEL_80;
      }
      char v12 = ((a1 & 1) == 0) ^ a4;
      return v12 & 1;
  }
}

unint64_t sub_1B522D6BC()
{
  unint64_t result = qword_1E9D48138;
  if (!qword_1E9D48138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48138);
  }
  return result;
}

unint64_t sub_1B522D714()
{
  unint64_t result = qword_1E9D48140;
  if (!qword_1E9D48140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48140);
  }
  return result;
}

uint64_t sub_1B522D768()
{
  return MEMORY[0x1E4FBB220];
}

unint64_t sub_1B522D778()
{
  unint64_t result = qword_1E9D48148;
  if (!qword_1E9D48148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48148);
  }
  return result;
}

uint64_t sub_1B522D7CC()
{
  return MEMORY[0x1E4FBB230];
}

uint64_t sub_1B522D7D8()
{
  return MEMORY[0x1E4FBB228];
}

uint64_t sub_1B522D7E4()
{
  return MEMORY[0x1E4FBB5C0];
}

uint64_t destroy for PSObject(uint64_t a1)
{
  return sub_1B51DFE20(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s10FontParser8PSObjectOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B51DFDC4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PSObject(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B51DFDC4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B51DFE20(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PSObject(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B51DFE20(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PSObject(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x77 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 119);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 4) & 0xFFFFFF8F | (16 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 7))) ^ 0x7F;
  if (v3 >= 0x76) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PSObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x76)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 119;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x77) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x77) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 4) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1B522D9AC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 <= 0x8F) {
    return v1 >> 4;
  }
  else {
    return (*(_DWORD *)a1 + 9);
  }
}

uint64_t sub_1B522D9C8(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0xFu;
  return result;
}

uint64_t sub_1B522D9D8(uint64_t result, unsigned int a2)
{
  if (a2 < 9)
  {
    *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (16 * a2);
  }
  else
  {
    *(void *)__n128 result = a2 - 9;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = -112;
  }
  return result;
}

ValueMetadata *type metadata accessor for PSObject()
{
  return &type metadata for PSObject;
}

_DWORD *__swift_memcpy7_4(_DWORD *result, int *a2)
{
  int v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PSInternalObject(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6 && *(unsigned char *)(a1 + 7)) {
    return (*(_DWORD *)a1 + 246);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 6);
  if (v3 <= 0xA) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PSInternalObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF5)
  {
    *(unsigned char *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 246;
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 7) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 7) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 6) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B522DAB8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 6) <= 9u) {
    return *(unsigned __int8 *)(a1 + 6);
  }
  else {
    return (*(_DWORD *)a1 + 10);
  }
}

uint64_t sub_1B522DAD0(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xA)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 10;
    LOBYTE(a2) = 10;
  }
  *(unsigned char *)(result + 6) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PSInternalObject()
{
  return &type metadata for PSInternalObject;
}

unint64_t sub_1B522DB00()
{
  unint64_t result = qword_1E9D48150;
  if (!qword_1E9D48150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48150);
  }
  return result;
}

unint64_t sub_1B522DB54()
{
  unint64_t result = qword_1E9D48158;
  if (!qword_1E9D48158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48158);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArrayAttributes()
{
  return &type metadata for ArrayAttributes;
}

unint64_t sub_1B522DBBC()
{
  unint64_t result = qword_1E9D48160;
  if (!qword_1E9D48160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48160);
  }
  return result;
}

unint64_t sub_1B522DC14()
{
  unint64_t result = qword_1E9D48168;
  if (!qword_1E9D48168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48168);
  }
  return result;
}

unint64_t sub_1B522DC6C()
{
  unint64_t result = qword_1E9D48170;
  if (!qword_1E9D48170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48170);
  }
  return result;
}

unint64_t sub_1B522DCC4()
{
  unint64_t result = qword_1E9D48178;
  if (!qword_1E9D48178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48178);
  }
  return result;
}

unint64_t sub_1B522DD1C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unsigned int v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481B0);
  uint64_t v2 = sub_1B5373138();
  unsigned int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B5239AB8(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1B5230694(v15, v16, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234C54);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1B5216C4C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B522DE70(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481E8);
  uint64_t v2 = (void *)sub_1B5373138();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_DWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    unint64_t v6 = *((void *)v4 - 1);
    int v7 = *v4;
    sub_1B51D4BB8(v5, v6);
    unint64_t result = sub_1B5230694(v5, v6, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234DD4);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B522DFB0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47918);
  uint64_t v2 = (void *)sub_1B5373138();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned __int8 *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 5);
    unint64_t v6 = *((void *)v4 - 4);
    uint64_t v7 = *(v4 - 24);
    uint64_t v8 = *((void *)v4 - 2);
    unint64_t v9 = *((void *)v4 - 1);
    unsigned __int8 v10 = *v4;
    sub_1B51DFDC4(v5, v6, *(v4 - 24));
    sub_1B51DFDC4(v8, v9, v10);
    unint64_t result = (unint64_t)sub_1B5230568(v5, v6, v7);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = v2[6] + 24 * result;
    *(void *)uint64_t v13 = v5;
    *(void *)(v13 + 8) = v6;
    *(unsigned char *)(v13 + 16) = v7;
    uint64_t v14 = v2[7] + 24 * result;
    *(void *)uint64_t v14 = v8;
    *(void *)(v14 + 8) = v9;
    *(unsigned char *)(v14 + 16) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 48;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B522E10C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481D0);
  uint64_t v2 = (void *)sub_1B5373138();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    unint64_t v5 = *(v4 - 4);
    unint64_t v6 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1B5230924(v5, v6, v7, v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v12 = (unint64_t *)(v2[6] + 32 * result);
    *char v12 = v5;
    v12[1] = v6;
    v12[2] = v7;
    v12[3] = v8;
    *(void *)(v2[7] + 8 * result) = v9;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B522E248(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47D98);
  uint64_t v2 = (void *)sub_1B5373138();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    unint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1B52309B0((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t PSInterpreter.copyFonts()()
{
  unint64_t v69 = sub_1B52381E0(MEMORY[0x1E4FBC860]);
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v62 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & v2;
  int64_t v63 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v64 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
LABEL_6:
  if (!v5)
  {
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_62;
    }
    if (v9 >= v63) {
      goto LABEL_57;
    }
    unint64_t v10 = *(void *)(v62 + 8 * v9);
    int64_t v11 = v6 + 1;
    if (!v10)
    {
      int64_t v11 = v6 + 2;
      if (v6 + 2 >= v63) {
        goto LABEL_57;
      }
      unint64_t v10 = *(void *)(v62 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v6 + 3;
        if (v6 + 3 >= v63) {
          goto LABEL_57;
        }
        unint64_t v10 = *(void *)(v62 + 8 * v11);
        if (!v10)
        {
          uint64_t v12 = v6 + 4;
          if (v6 + 4 < v63)
          {
            unint64_t v10 = *(void *)(v62 + 8 * v12);
            if (v10)
            {
              int64_t v11 = v6 + 4;
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_63;
              }
              if (v11 >= v63) {
                break;
              }
              unint64_t v10 = *(void *)(v62 + 8 * v11);
              ++v12;
              if (v10) {
                goto LABEL_21;
              }
            }
          }
LABEL_57:
          swift_release();
          return v69;
        }
      }
    }
LABEL_21:
    uint64_t v67 = (v10 - 1) & v10;
    int64_t v68 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_22;
  }
  uint64_t v67 = (v5 - 1) & v5;
  int64_t v68 = v6;
  unint64_t v8 = __clz(__rbit64(v5)) | (v6 << 6);
LABEL_22:
  uint64_t v13 = (unsigned int *)(*(void *)(v64 + 48) + 8 * v8);
  uint64_t v14 = *((unsigned __int16 *)v13 + 2);
  uint64_t v15 = *v13;
  uint64_t v66 = *((unsigned __int8 *)v13 + 6);
  unint64_t v16 = *(unsigned int *)(*(void *)(v64 + 56) + 4 * v8);
  unint64_t v17 = sub_1B522DFB0(MEMORY[0x1E4FBC860]);
  uint64_t v18 = *(void *)(v72 + 40);
  if (*(void *)(v18 + 16) <= v16) {
    goto LABEL_61;
  }
  uint64_t v19 = (void *)v17;
  uint64_t v65 = v15 | (v14 << 32);
  uint64_t v20 = *(void *)(v18 + 8 * v16 + 32);
  uint64_t v70 = v20 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v20 + 32);
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & *(void *)(v20 + 64);
  int64_t v71 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v73 = v20;
  swift_bridgeObjectRetain();
  int64_t v24 = 0;
  while (1)
  {
    if (v23)
    {
      uint64_t v74 = (v23 - 1) & v23;
      int64_t v75 = v24;
      unint64_t v26 = __clz(__rbit64(v23)) | (v24 << 6);
    }
    else
    {
      int64_t v27 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_59;
      }
      if (v27 >= v71)
      {
LABEL_5:
        swift_release();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1B5237720((uint64_t)v19, v65 & 0xFFFFFFFFFFFFLL | (v66 << 48), isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        unint64_t v5 = v67;
        int64_t v6 = v68;
        goto LABEL_6;
      }
      unint64_t v28 = *(void *)(v70 + 8 * v27);
      int64_t v29 = v24 + 1;
      if (!v28)
      {
        int64_t v29 = v24 + 2;
        if (v24 + 2 >= v71) {
          goto LABEL_5;
        }
        unint64_t v28 = *(void *)(v70 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v24 + 3;
          if (v24 + 3 >= v71) {
            goto LABEL_5;
          }
          unint64_t v28 = *(void *)(v70 + 8 * v29);
          if (!v28)
          {
            uint64_t v30 = v24 + 4;
            if (v24 + 4 >= v71) {
              goto LABEL_5;
            }
            unint64_t v28 = *(void *)(v70 + 8 * v30);
            if (!v28)
            {
              while (1)
              {
                int64_t v29 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_60;
                }
                if (v29 >= v71) {
                  goto LABEL_5;
                }
                unint64_t v28 = *(void *)(v70 + 8 * v29);
                ++v30;
                if (v28) {
                  goto LABEL_44;
                }
              }
            }
            int64_t v29 = v24 + 4;
          }
        }
      }
LABEL_44:
      uint64_t v74 = (v28 - 1) & v28;
      int64_t v75 = v29;
      unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    }
    uint64_t v31 = 8 * v26;
    v32 = (unsigned int *)(*(void *)(v73 + 48) + v31);
    v33 = (unsigned int *)(*(void *)(v73 + 56) + v31);
    unint64_t v34 = *v33 | ((unint64_t)*((unsigned __int16 *)v33 + 2) << 32);
    uint64_t v35 = *((unsigned __int8 *)v33 + 6);
    uint64_t v36 = sub_1B522F83C(*v32 | ((unint64_t)*((unsigned __int16 *)v32 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v32 + 6) << 48));
    unint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v41 = sub_1B522F83C(v34 | (v35 << 48));
    uint64_t v43 = v42;
    char v45 = v44;
    v46 = v19;
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v49 = (unint64_t)sub_1B5230568(v36, v38, v40);
    uint64_t v50 = v46[2];
    BOOL v51 = (v48 & 1) == 0;
    uint64_t v52 = v50 + v51;
    if (__OFADD__(v50, v51))
    {
      __break(1u);
      goto LABEL_57;
    }
    char v53 = v48;
    if (v46[3] >= v52)
    {
      if (v47)
      {
        uint64_t v19 = v46;
        if (v48) {
          goto LABEL_27;
        }
      }
      else
      {
        sub_1B5236530();
        uint64_t v19 = v46;
        if (v53) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      sub_1B523188C(v52, v47);
      v54 = sub_1B5230568(v36, v38, v40);
      if ((v53 & 1) != (v55 & 1)) {
        goto LABEL_64;
      }
      unint64_t v49 = (unint64_t)v54;
      uint64_t v19 = v46;
      if (v53)
      {
LABEL_27:
        uint64_t v25 = v19[7] + 24 * v49;
        sub_1B51DFE20(*(void *)v25, *(void *)(v25 + 8), *(unsigned char *)(v25 + 16));
        *(void *)uint64_t v25 = v41;
        *(void *)(v25 + 8) = v43;
        *(unsigned char *)(v25 + 16) = v45;
        goto LABEL_28;
      }
    }
    v19[(v49 >> 6) + 8] |= 1 << v49;
    uint64_t v56 = v19[6] + 24 * v49;
    *(void *)uint64_t v56 = v36;
    *(void *)(v56 + 8) = v38;
    *(unsigned char *)(v56 + 16) = v40;
    uint64_t v57 = v19[7] + 24 * v49;
    *(void *)uint64_t v57 = v41;
    *(void *)(v57 + 8) = v43;
    *(unsigned char *)(v57 + 16) = v45;
    uint64_t v58 = v19[2];
    BOOL v59 = __OFADD__(v58, 1);
    uint64_t v60 = v58 + 1;
    if (v59) {
      break;
    }
    v19[2] = v60;
    sub_1B51DFDC4(v36, v38, v40);
LABEL_28:
    swift_bridgeObjectRelease();
    sub_1B51DFE20(v36, v38, v40);
    int64_t v24 = v75;
    unint64_t v23 = v74;
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  uint64_t result = sub_1B5373288();
  __break(1u);
  return result;
}

__n128 PSInterpreter.init()@<Q0>(uint64_t a1@<X8>)
{
  if (qword_1E9D476A8 != -1) {
    swift_once();
  }
  *(_OWORD *)&v21[96] = xmmword_1E9D53A88;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)&dword_1E9D53A98;
  *(void *)&v22[15] = unk_1E9D53AA7;
  *(_OWORD *)&v21[32] = xmmword_1E9D53A48;
  *(_OWORD *)&v21[48] = unk_1E9D53A58;
  *(_OWORD *)&v21[64] = xmmword_1E9D53A68;
  *(_OWORD *)&v21[80] = unk_1E9D53A78;
  *(_OWORD *)uint64_t v21 = xmmword_1E9D53A28;
  *(_OWORD *)&v21[16] = unk_1E9D53A38;
  int v19 = unk_1E9D53AA7 >> 8;
  uint64_t v20 = 0;
  __int16 v2 = unk_1E9D53AAB >> 8;
  char v18 = unk_1E9D53AAE;
  int v3 = dword_1E9D53AA0;
  __int16 v4 = word_1E9D53AA4;
  char v5 = unk_1E9D53AA6;
  int v6 = dword_1E9D53A98;
  __int16 v7 = word_1E9D53A9C;
  char v8 = unk_1E9D53A9E;
  uint64_t v9 = *((void *)&xmmword_1E9D53A88 + 1);
  int v10 = DWORD1(xmmword_1E9D53A28);
  long long v16 = *(_OWORD *)&v21[8];
  __n128 v17 = *(__n128 *)&v21[88];
  long long v14 = *(_OWORD *)&v21[40];
  long long v15 = *(_OWORD *)&v21[24];
  long long v12 = *(_OWORD *)&v21[72];
  long long v13 = *(_OWORD *)&v21[56];
  sub_1B520212C((uint64_t)v21);
  MEMORY[0x1BA99A070](&v20, 8);
  *(_DWORD *)a1 = v20;
  *(_DWORD *)(a1 + 4) = v10;
  *(_OWORD *)(a1 + 8) = v16;
  *(_OWORD *)(a1 + 24) = v15;
  *(_OWORD *)(a1 + 40) = v14;
  *(_OWORD *)(a1 + 56) = v13;
  *(_OWORD *)(a1 + 72) = v12;
  __n128 result = v17;
  *(__n128 *)(a1 + 88) = v17;
  *(void *)(a1 + 104) = v9;
  *(_WORD *)(a1 + 116) = v7;
  *(_DWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 118) = v8;
  *(_WORD *)(a1 + 124) = v4;
  *(_DWORD *)(a1 + 120) = v3;
  *(unsigned char *)(a1 + 126) = v5;
  *(_WORD *)(a1 + 132) = v2;
  *(_DWORD *)(a1 + 128) = v19;
  *(unsigned char *)(a1 + 134) = v18;
  return result;
}

FontParser::PSInterpreterExitReason __swiftcall PSInterpreter.evaluate(string:)(Swift::String string)
{
  uint64_t v1 = sub_1B5372788();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  __int16 v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5372758();
  uint64_t v5 = sub_1B53726F8();
  unint64_t v7 = v6;
  FontParser::PSInterpreterExitReason result = (*(unsigned __int8 (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v7 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    FontParser::PSInterpreterExitReason v9 = sub_1B522EB28(v5, v7);
    sub_1B51FE548(v5, v7);
    return v9;
  }
  return result;
}

BOOL static PSInterpreterExitReason.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

unint64_t sub_1B522EB28(uint64_t a1, unint64_t a2)
{
  unint64_t v6 = *(void **)(v2 + 24);
  unint64_t v7 = v6[2];
  if (HIDWORD(v7))
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = a2;
    uint64_t v4 = a1;
    int v5 = *(_DWORD *)(v2 + 4);
    sub_1B520AB50(a1, a2);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_3;
    }
  }
  unint64_t v6 = sub_1B51E85D4(0, v7 + 1, 1, v6);
LABEL_3:
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1) {
    unint64_t v6 = sub_1B51E85D4((void *)(v8 > 1), v9 + 1, 1, v6);
  }
  long long v12 = &type metadata for SingleBufferInput;
  long long v13 = &protocol witness table for SingleBufferInput;
  *(void *)&long long v11 = v4;
  *((void *)&v11 + 1) = v3;
  v6[2] = v9 + 1;
  sub_1B51E0D0C(&v11, (uint64_t)&v6[5 * v9 + 4]);
  *(void *)(v2 + 24) = v6;
  *(_DWORD *)(v2 + 4) = v7;
  unint64_t result = sub_1B5277050(0, 0);
  *(_DWORD *)(v2 + 4) = v5;
  return result;
}

unint64_t PSInterpreter.evaluate<A>(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v20 - v11;
  int v22 = *(_DWORD *)(v3 + 4);
  long long v13 = *(void (**)(char *, double))(v6 + 16);
  v13((char *)&v20 - v11, v10);
  long long v14 = (void *)(v3 + 24);
  long long v15 = *(void **)(v3 + 24);
  unint64_t v23 = v15[2];
  if (HIDWORD(v23))
  {
    __break(1u);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *long long v14 = v15;
    uint64_t v21 = a3;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  long long v15 = sub_1B51E85D4(0, v23 + 1, 1, v15);
  *long long v14 = v15;
LABEL_3:
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    long long v15 = sub_1B51E85D4((void *)(v17 > 1), v18 + 1, 1, v15);
    *long long v14 = v15;
  }
  ((void (*)(char *, char *, uint64_t))v13)(v8, v12, a2);
  sub_1B5237D00(v18, (uint64_t)v8, (uint64_t *)(v3 + 24), a2, v21);
  *(void *)(v3 + 24) = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, a2);
  *(_DWORD *)(v3 + 4) = v23;
  unint64_t result = sub_1B5277050(0, 0);
  *(_DWORD *)(v3 + 4) = v22;
  return result;
}

uint64_t PSInterpreter.evaluate<A>(procedure:arguments:)(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v48 = a4;
  unsigned int v49 = a3;
  uint64_t v47 = a2;
  uint64_t v50 = a1;
  uint64_t v10 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  long long v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  double v15 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v17 = (char *)&v47 - v16;
  (*(void (**)(char *, unint64_t, uint64_t, double))(v10 + 16))(v12, a5, a6, v15);
  sub_1B5372958();
  swift_getAssociatedConformanceWitness();
  sub_1B5372D88();
  if ((BYTE8(v51) & 1) == 0)
  {
    uint64_t v28 = v51;
    int64_t v29 = (char *)MEMORY[0x1E4FBC860];
    LODWORD(a5) = 1;
    while (v28 == (int)v28)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v29 = sub_1B51E85E8(0, *((void *)v29 + 2) + 1, 1, v29);
      }
      unint64_t v31 = *((void *)v29 + 2);
      unint64_t v30 = *((void *)v29 + 3);
      if (v31 >= v30 >> 1) {
        int64_t v29 = sub_1B51E85E8((char *)(v30 > 1), v31 + 1, 1, v29);
      }
      *((void *)v29 + 2) = v31 + 1;
      v32 = &v29[8 * v31];
      *((_WORD *)v32 + 18) = 0;
      *((_DWORD *)v32 + 8) = v28;
      v32[38] = 1;
      sub_1B5372D88();
      uint64_t v28 = v51;
      if (BYTE8(v51)) {
        goto LABEL_2;
      }
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, AssociatedTypeWitness);
    goto LABEL_15;
  }
LABEL_2:
  int v19 = *(void (**)(char *, uint64_t))(v14 + 8);
  unint64_t v18 = v14 + 8;
  v19(v17, AssociatedTypeWitness);
  long long v20 = v7[7];
  long long v57 = v7[6];
  v58[0] = v20;
  *(void *)((char *)v58 + 15) = *(void *)((char *)v7 + 127);
  long long v21 = v7[3];
  long long v53 = v7[2];
  long long v54 = v21;
  long long v22 = v7[5];
  long long v55 = v7[4];
  long long v56 = v22;
  long long v23 = v7[1];
  long long v51 = *v7;
  long long v52 = v23;
  uint64_t v24 = v50;
  uint64_t v25 = (char *)v49;
  unint64_t v26 = sub_1B522F32C(v50, v47, v49, v48);
  if ((~v26 & 0xFF000000000000) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 4;
  }
  unint64_t v27 = v26;
  if (BYTE6(v26) == 7)
  {
    if ((unint64_t)v26 >= *(void *)(v53 + 16))
    {
      __break(1u);
      goto LABEL_31;
    }
    unint64_t v18 = *(void *)(v53 + 8 * v26 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    a5 = HIWORD(v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47A20);
    unint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1B538C0E0;
    *(_WORD *)(v18 + 36) = WORD2(v27);
    *(_DWORD *)(v18 + 32) = v27;
    *(unsigned char *)(v18 + 38) = a5;
  }
  uint64_t v59 = *((void *)&v51 + 1);
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_1B522F6C8(v34);
  sub_1B51DFEA8((uint64_t)&v59);
  *((void *)v7 + 1) = v35;
  if ((_BYTE)v25)
  {
    swift_bridgeObjectRelease();
    unint64_t v33 = sub_1B5277050(v18, 0);
    swift_bridgeObjectRelease();
    return v33;
  }
  uint64_t v25 = (char *)v52;
  unint64_t v27 = *(void *)(v52 + 16);
  if (v27)
  {
    LODWORD(a5) = *(_DWORD *)(v52 + 32);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_21;
    }
    goto LABEL_32;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t v25 = sub_1B51E85A0(0, v27 + 1, 1, v25);
LABEL_21:
  unint64_t v37 = *((void *)v25 + 2);
  unint64_t v36 = *((void *)v25 + 3);
  if (v37 >= v36 >> 1) {
    uint64_t v25 = sub_1B51E85A0((char *)(v36 > 1), v37 + 1, 1, v25);
  }
  uint64_t v38 = v56;
  *((void *)v25 + 2) = v37 + 1;
  *(_DWORD *)&v25[4 * v37 + 32] = a5;
  if (*(void *)(v38 + 16))
  {
    unint64_t v39 = sub_1B5230728(v24 & 0xFFFFFFFFFFFFFFLL);
    if (v40)
    {
      int v41 = *(_DWORD *)(*(void *)(v38 + 56) + 4 * v39);
      swift_bridgeObjectRelease();
      unint64_t v43 = *((void *)v25 + 2);
      unint64_t v42 = *((void *)v25 + 3);
      if (v43 >= v42 >> 1) {
        uint64_t v25 = sub_1B51E85A0((char *)(v42 > 1), v43 + 1, 1, v25);
      }
      *((void *)v25 + 2) = v43 + 1;
      *(_DWORD *)&v25[4 * v43 + 32] = v41;
      *((void *)v7 + 2) = v25;
      char v44 = v7 + 1;
      unint64_t v33 = sub_1B5277050(v18, 0);
      swift_bridgeObjectRelease();
      unint64_t v45 = *(void *)(*(void *)v44 + 16);
      if (v45 >= 2)
      {
        sub_1B5238FA4(v45 - 2, v45);
        return v33;
      }
      __break(1u);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B522F32C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  int v5 = v4;
  uint64_t v40 = sub_1B5372788();
  uint64_t v9 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if (a3 == 1)
    {
      unint64_t v12 = sub_1B52ABDA0() & 0xFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(a4 + 16);
      if (!v13) {
        return v12;
      }
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v12 = 0xFF000000000000;
    uint64_t v13 = *(void *)(a4 + 16);
    if (!v13) {
      return v12;
    }
    goto LABEL_10;
  }
  uint64_t v14 = v5[10];
  if (!*(void *)(v14 + 16)) {
    goto LABEL_9;
  }
  unint64_t v15 = sub_1B5230728(a1 & 0xFFFFFFFFFFFFFFLL);
  if ((v16 & 1) == 0) {
    goto LABEL_9;
  }
  unint64_t v12 = *(unsigned int *)(*(void *)(v14 + 56) + 4 * v15) | 0x8000000000000;
  uint64_t v13 = *(void *)(a4 + 16);
  if (!v13) {
    return v12;
  }
LABEL_10:
  unint64_t v39 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  v38[1] = a4;
  for (i = (unsigned __int8 *)(a4 + 48); ; i += 24)
  {
    unint64_t v19 = *((void *)i - 2);
    int v20 = *i;
    if (v20 == 1)
    {
      if (HIWORD(v12) > 0xFEu || (v12 & 0xFF000000000000) != 0x8000000000000)
      {
LABEL_32:
        swift_bridgeObjectRelease();
        return 0xFF000000000000;
      }
      uint64_t v23 = v5[5];
      if (*(void *)(v23 + 16) <= (unint64_t)v12) {
        goto LABEL_38;
      }
      uint64_t v24 = *((void *)i - 1);
      uint64_t v25 = *(void *)(v23 + 8 * v12 + 32);
      swift_bridgeObjectRetain();
      sub_1B52390AC(v19, v24, 1);
      sub_1B5372758();
      uint64_t v26 = sub_1B53726F8();
      unint64_t v28 = v27;
      (*v39)(v11, v40);
      if (v28 >> 60 != 15)
      {
        uint64_t v29 = v5[9];
        if (*(void *)(v29 + 16))
        {
          sub_1B51D4BB8(v26, v28);
          uint64_t v30 = sub_1B5230694(v26, v28, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234DD4);
          if (v31)
          {
            uint64_t v32 = *(unsigned int *)(*(void *)(v29 + 56) + 4 * v30);
            sub_1B51FE548(v26, v28);
            sub_1B51FE548(v26, v28);
            if (*(void *)(v25 + 16))
            {
              unint64_t v33 = sub_1B5230728(v32 | 0x3000000000000);
              if (v34)
              {
                uint64_t v35 = (unsigned int *)(*(void *)(v25 + 56) + 8 * v33);
                unint64_t v36 = *v35 | ((unint64_t)*((unsigned __int16 *)v35 + 2) << 32);
                uint64_t v37 = *((unsigned __int8 *)v35 + 6);
                sub_1B52390C4(v19, v24, 1);
                uint64_t result = swift_bridgeObjectRelease();
                unint64_t v12 = v36 | (v37 << 48);
                goto LABEL_14;
              }
            }
            goto LABEL_13;
          }
          sub_1B51FE548(v26, v28);
        }
        sub_1B51FE548(v26, v28);
      }
LABEL_13:
      sub_1B52390C4(v19, v24, 1);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v12 = 0xFF000000000000;
      goto LABEL_14;
    }
    if (v20 != 2 || HIWORD(v12) > 0xFEu || (v12 & 0xFF000000000000) != 0x7000000000000) {
      goto LABEL_32;
    }
    uint64_t v21 = v5[4];
    if (*(void *)(v21 + 16) <= (unint64_t)v12) {
      break;
    }
    if ((v19 & 0x8000000000000000) != 0) {
      goto LABEL_36;
    }
    uint64_t v22 = *(void *)(v21 + 8 * v12 + 32);
    if (v19 >= *(void *)(v22 + 16)) {
      goto LABEL_37;
    }
    unint64_t v12 = *(unsigned int *)(v22 + 8 * v19 + 32) | ((unint64_t)*(unsigned __int16 *)(v22 + 8 * v19 + 36) << 32) | ((unint64_t)*(unsigned __int8 *)(v22 + 8 * v19 + 38) << 48);
LABEL_14:
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1B522F6C8(uint64_t result)
{
  uint64_t v1 = result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 8 * v2;
  uint64_t v7 = 38;
  unint64_t v16 = v2 >> 1;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_5;
    }
    unint64_t v10 = *(void *)(v1 + 16);
    if (v3 >= v10) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_12;
    }
    uint64_t v11 = *(unsigned __int16 *)(v1 + v7 - 2);
    uint64_t v12 = *(unsigned int *)(v1 + v7 - 6);
    char v17 = *(unsigned char *)(v1 + v7);
    uint64_t v13 = *(unsigned __int16 *)(v1 + v6 + 28);
    uint64_t v14 = *(unsigned int *)(v1 + v6 + 24);
    char v15 = *(unsigned char *)(v1 + v6 + 30);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B5293510(v1);
      uint64_t v1 = result;
    }
    unint64_t v8 = (unsigned char *)(v1 + v7);
    *(_DWORD *)(v8 - 6) = v14;
    *((_WORD *)v8 - 1) = (v14 | (unint64_t)(v13 << 32)) >> 32;
    *unint64_t v8 = v15;
    uint64_t v9 = v1 + v6;
    *(_DWORD *)(v9 + 24) = v12;
    *(_WORD *)(v9 + 28) = (v12 | (unint64_t)(v11 << 32)) >> 32;
    *(unsigned char *)(v9 + 30) = v17;
    unint64_t v4 = v16;
LABEL_5:
    ++v3;
    v7 += 8;
    --v5;
    v6 -= 8;
    if (v4 == v3) {
      return v1;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t PSInterpreter.operandCount.getter()
{
  return *(void *)(*(void *)(v0 + 8) + 16);
}

uint64_t PSInterpreter.subscript.getter(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v2 + 16);
  unint64_t v4 = v3 - 1 - result;
  if (__OFSUB__(v3 - 1, result))
  {
    __break(1u);
  }
  else if (v4 < v3)
  {
    return sub_1B522F83C(*(unsigned int *)(v2 + 8 * v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v2 + 8 * v4 + 36) << 32) | ((unint64_t)*(unsigned __int8 *)(v2 + 8 * v4 + 38) << 48));
  }
  __break(1u);
  return result;
}

uint64_t sub_1B522F83C(uint64_t a1)
{
  uint64_t v3 = sub_1B5372788();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = 2;
  switch(BYTE6(a1))
  {
    case 1:
      return (int)a1;
    case 2:
      *(double *)&uint64_t v5 = *(float *)&a1;
      return v5;
    case 3:
      uint64_t v6 = v1[7];
      if ((unint64_t)a1 >= *(void *)(v6 + 16))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x1B522FBDCLL);
      }
      uint64_t v7 = v6 + 16 * a1;
      uint64_t v5 = *(uint64_t *)(v7 + 32);
      unint64_t v8 = *(void *)(v7 + 40);
      sub_1B51D4BB8(v5, v8);
      sub_1B5372758();
      uint64_t v9 = sub_1B5372708();
      if (v10) {
        goto LABEL_15;
      }
      return v5;
    case 4:
      uint64_t v15 = v1[7];
      if ((unint64_t)a1 >= *(void *)(v15 + 16)) {
        goto LABEL_30;
      }
      uint64_t v16 = v15 + 16 * a1;
      uint64_t v5 = *(uint64_t *)(v16 + 32);
      unint64_t v8 = *(void *)(v16 + 40);
      sub_1B51D4BB8(v5, v8);
      sub_1B5372758();
      uint64_t v9 = sub_1B5372708();
      if (v17) {
        goto LABEL_15;
      }
      return v5;
    case 5:
      *(double *)&uint64_t v5 = COERCE_DOUBLE(sub_1B5286094(a1));
      return v5;
    case 6:
      return v5;
    case 7:
      if ((unint64_t)a1 >= *(void *)(v1[4] + 16)) {
        goto LABEL_29;
      }
      sub_1B520212C((uint64_t)v1);
      uint64_t v14 = swift_bridgeObjectRetain();
      *(double *)&uint64_t v5 = COERCE_DOUBLE(sub_1B523891C(v14));
      sub_1B520A898((uint64_t)v1);
      swift_bridgeObjectRelease();
      return v5;
    case 8:
      if ((unint64_t)a1 >= *(void *)(v1[5] + 16)) {
        goto LABEL_31;
      }
      MEMORY[0x1F4188790](v4);
      *((void *)&v23 - 2) = v1;
      uint64_t v19 = swift_bridgeObjectRetain();
      int v20 = sub_1B5238A20(v19, (void *(*)(long long *__return_ptr, unint64_t, unint64_t))sub_1B5239B84);
      swift_bridgeObjectRelease();
      if (v20[2])
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47918);
        uint64_t v21 = sub_1B5373138();
      }
      else
      {
        uint64_t v21 = MEMORY[0x1E4FBC868];
      }
      uint64_t v24 = v21;
      sub_1B5238C94((uint64_t)v20, 1, &v24);
      swift_bridgeObjectRelease();
      return v24;
    case 9:
      uint64_t v11 = v1[6];
      if ((unint64_t)a1 >= *(void *)(v11 + 16)) {
        goto LABEL_28;
      }
      uint64_t v12 = v11 + 16 * a1;
      uint64_t v5 = *(uint64_t *)(v12 + 32);
      unint64_t v8 = *(void *)(v12 + 40);
      sub_1B51D4BB8(v5, v8);
      sub_1B5372758();
      uint64_t v9 = sub_1B5372708();
      if (v13)
      {
LABEL_15:
        uint64_t v18 = v9;
        sub_1B51D4C64(v5, v8);
        return v18;
      }
      return v5;
    case 0xA:
      return (a1 & 0xFFFFFFFFFFFFLL) != 0;
    default:
      return a1 & 1;
  }
}

uint64_t PSInterpreter.subscript.getter(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = sub_1B522F32C(a1, a2, a3, a4);
  if ((~v5 & 0xFF000000000000) == 0) {
    return 0;
  }
  uint64_t v7 = v5;
  sub_1B520212C(v4);
  uint64_t v6 = sub_1B522F83C(v7 & 0xFFFFFFFFFFFFFFLL);
  sub_1B520A898(v4);
  return v6;
}

Swift::Void __swiftcall PSInterpreter.removeAllStackOperands()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 8) = MEMORY[0x1E4FBC860];
}

uint64_t PSInterpreterExitReason.hash(into:)()
{
  return sub_1B5373308();
}

uint64_t PSInterpreterExitReason.hashValue.getter()
{
  return sub_1B5373358();
}

uint64_t PSFontKey.hash(into:)(uint64_t a1, uint64_t a2)
{
  return sub_1B522C8AC(a1, a2 & 0xFFFFFFFFFFFFFFLL);
}

BOOL static PSFontKey.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1B522D004(a1 & 0xFFFFFFFFFFFFFFLL, a2 & 0xFFFFFFFFFFFFFFLL);
}

uint64_t PSFontKey.hashValue.getter(uint64_t a1)
{
  sub_1B53732F8();
  sub_1B522C8AC((uint64_t)v3, a1 & 0xFFFFFFFFFFFFFFLL);
  return sub_1B5373358();
}

uint64_t sub_1B522FD74()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 16);
  sub_1B53732F8();
  if (v2)
  {
    sub_1B5373308();
    if (v2 == 1) {
      sub_1B5372828();
    }
    else {
      sub_1B5373308();
    }
  }
  else
  {
    sub_1B5373308();
    sub_1B522C8AC((uint64_t)v4, v1 & 0xFFFFFFFFFFFFFFLL);
  }
  return sub_1B5373358();
}

uint64_t sub_1B522FE1C(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (*((unsigned char *)v1 + 16))
  {
    if (*((unsigned char *)v1 + 16) == 1)
    {
      sub_1B5373308();
      return sub_1B5372828();
    }
    else
    {
      sub_1B5373308();
      return sub_1B5373308();
    }
  }
  else
  {
    sub_1B5373308();
    return sub_1B522C8AC(a1, v3 & 0xFFFFFFFFFFFFFFLL);
  }
}

uint64_t sub_1B522FEDC()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 16);
  sub_1B53732F8();
  if (v2)
  {
    sub_1B5373308();
    if (v2 == 1) {
      sub_1B5372828();
    }
    else {
      sub_1B5373308();
    }
  }
  else
  {
    sub_1B5373308();
    sub_1B522C8AC((uint64_t)v4, v1 & 0xFFFFFFFFFFFFFFLL);
  }
  return sub_1B5373358();
}

uint64_t sub_1B522FF80(uint64_t a1, uint64_t a2)
{
  return sub_1B5237D98(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t PSObjectLocator.init(fontKey:)(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL;
}

uint64_t static PSObjectLocator./ infix(_:_:)(uint64_t a1, uint64_t a2, char a3, char *a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a4 = sub_1B51EA130(0, *((void *)a4 + 2) + 1, 1, a4);
  }
  unint64_t v13 = *((void *)a4 + 2);
  unint64_t v12 = *((void *)a4 + 3);
  if (v13 >= v12 >> 1) {
    a4 = sub_1B51EA130((char *)(v12 > 1), v13 + 1, 1, a4);
  }
  *((void *)a4 + 2) = v13 + 1;
  uint64_t v14 = &a4[24 * v13];
  *((void *)v14 + 4) = a5;
  *((void *)v14 + 5) = a6;
  v14[48] = 1;
  sub_1B52390AC(a1, a2, a3);
  return a1;
}

uint64_t static PSObjectLocator./ infix(_:_:)(uint64_t a1, uint64_t a2, char a3, char *a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a4 = sub_1B51EA130(0, *((void *)a4 + 2) + 1, 1, a4);
  }
  unint64_t v11 = *((void *)a4 + 2);
  unint64_t v10 = *((void *)a4 + 3);
  if (v11 >= v10 >> 1) {
    a4 = sub_1B51EA130((char *)(v10 > 1), v11 + 1, 1, a4);
  }
  *((void *)a4 + 2) = v11 + 1;
  unint64_t v12 = &a4[24 * v11];
  *((void *)v12 + 4) = a5;
  *((void *)v12 + 5) = 0;
  v12[48] = 2;
  sub_1B52390AC(a1, a2, a3);
  return a1;
}

uint64_t PSObjectLocator.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  if (a4)
  {
    if (a4 == 1)
    {
      sub_1B5373308();
      swift_bridgeObjectRetain();
      sub_1B5372828();
      sub_1B52390C4(a2, a3, 1);
    }
    else
    {
      sub_1B5373308();
      sub_1B5373308();
    }
  }
  else
  {
    sub_1B5373308();
    sub_1B522C8AC(a1, a2 & 0xFFFFFFFFFFFFFFLL);
  }
  swift_bridgeObjectRetain();
  sub_1B5237B3C(a1, a5);
  return swift_bridgeObjectRelease();
}

uint64_t PSObjectLocator.hashValue.getter(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1B53732F8();
  if (a3)
  {
    sub_1B5373308();
    if (a3 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1B5372828();
      sub_1B52390C4(a1, a2, 1);
    }
    else
    {
      sub_1B5373308();
    }
  }
  else
  {
    sub_1B5373308();
    sub_1B522C8AC((uint64_t)v9, a1 & 0xFFFFFFFFFFFFFFLL);
  }
  swift_bridgeObjectRetain();
  sub_1B5237B3C((uint64_t)v9, a4);
  swift_bridgeObjectRelease();
  return sub_1B5373358();
}

uint64_t sub_1B5230358()
{
  return PSObjectLocator.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B5230368(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 24);
  if (*(unsigned char *)(v1 + 16))
  {
    if (*(unsigned char *)(v1 + 16) == 1)
    {
      uint64_t v5 = *(void *)(v1 + 8);
      sub_1B5373308();
      swift_bridgeObjectRetain();
      sub_1B5372828();
      sub_1B52390C4(v3, v5, 1);
    }
    else
    {
      sub_1B5373308();
      sub_1B5373308();
    }
  }
  else
  {
    sub_1B5373308();
    sub_1B522C8AC(a1, v3 & 0xFFFFFFFFFFFFFFLL);
  }
  swift_bridgeObjectRetain();
  sub_1B5237B3C(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5230444()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  sub_1B53732F8();
  if (v3)
  {
    sub_1B5373308();
    if (v3 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1B5372828();
      sub_1B52390C4(v1, v2, 1);
    }
    else
    {
      sub_1B5373308();
    }
  }
  else
  {
    sub_1B5373308();
    sub_1B522C8AC((uint64_t)v6, v1 & 0xFFFFFFFFFFFFFFLL);
  }
  swift_bridgeObjectRetain();
  sub_1B5237B3C((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_1B5373358();
}

uint64_t sub_1B5230524(uint64_t a1, uint64_t a2)
{
  return _s10FontParser15PSObjectLocatorV23__derived_struct_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), *(void *)(a2 + 24));
}

void *sub_1B5230548@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[1];
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = MEMORY[0x1E4FBC860];
  return result;
}

void *sub_1B5230568(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1B53732F8();
  PSObject.hash(into:)((uint64_t)v8, a1, a2, a3);
  uint64_t v6 = sub_1B5373358();
  return sub_1B5233414(a1, a2, a3, v6);
}

uint64_t sub_1B52305F4(uint64_t a1, uint64_t a2)
{
  return sub_1B5230694(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234C54);
}

unint64_t sub_1B5230620(uint64_t a1)
{
  uint64_t v2 = sub_1B53732E8();
  return sub_1B5234D38(a1, v2);
}

uint64_t sub_1B5230668(uint64_t a1, uint64_t a2)
{
  return sub_1B5230694(a1, a2, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234DD4);
}

uint64_t sub_1B5230694(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_1B53732F8();
  a3(v10, a1, a2);
  uint64_t v7 = sub_1B5373358();
  return a4(a1, a2, v7);
}

unint64_t sub_1B5230728(uint64_t a1)
{
  sub_1B53732F8();
  sub_1B522C8AC((uint64_t)v4, a1 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v2 = sub_1B5373358();
  return sub_1B5235770(a1 & 0xFFFFFFFFFFFFFFLL, v2);
}

unint64_t sub_1B5230798(uint64_t a1)
{
  sub_1B53732F8();
  sub_1B522C8AC((uint64_t)v4, a1 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v2 = sub_1B5373358();
  return sub_1B523591C(a1 & 0xFFFFFFFFFFFFFFLL, v2);
}

unint64_t sub_1B5230808(int a1)
{
  sub_1B53732F8();
  sub_1B5373338();
  uint64_t v2 = sub_1B5373358();
  return sub_1B5235B68(a1, v2);
}

unint64_t sub_1B5230870(unsigned __int16 a1)
{
  sub_1B53732F8();
  sub_1B5373328();
  uint64_t v2 = sub_1B5373358();
  return sub_1B5235AC8(a1, v2);
}

unint64_t sub_1B52308DC(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x1BA998B90](*(void *)(v1 + 40), a1, 4);
  return sub_1B5235B68(a1, v3);
}

unint64_t sub_1B5230924(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1B53725A8();
  return sub_1B5235C04(a1, a2, a3, a4, v8);
}

unint64_t sub_1B52309B0(uint64_t a1)
{
  sub_1B53732F8();
  type metadata accessor for CFString(0);
  sub_1B5239850();
  sub_1B5372478();
  uint64_t v2 = sub_1B5373358();
  return sub_1B5235D40(a1, v2);
}

uint64_t sub_1B5230A34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481B8);
  uint64_t result = sub_1B5373118();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      int v26 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1B53732F8();
      sub_1B5373338();
      uint64_t result = sub_1B5373358();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5230D08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481E8);
  uint64_t v6 = sub_1B5373118();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    int v30 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_1B51D4BB8(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
    }
    sub_1B53732F8();
    sub_1B53723F8();
    uint64_t result = sub_1B5373358();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B523100C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481F0);
  uint64_t v6 = sub_1B5373118();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  char v39 = a2;
  int64_t v8 = 0;
  unint64_t v42 = (void *)(v5 + 64);
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v40 = v5;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  while (1)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v18 = v17 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_45;
    }
    if (v19 >= v41) {
      break;
    }
    unint64_t v20 = v42[v19];
    ++v8;
    if (!v20)
    {
      int64_t v8 = v19 + 1;
      if (v19 + 1 >= v41) {
        break;
      }
      unint64_t v20 = v42[v8];
      if (!v20)
      {
        int64_t v21 = v19 + 2;
        if (v21 >= v41) {
          break;
        }
        unint64_t v20 = v42[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v8 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_46;
            }
            if (v8 >= v41) {
              goto LABEL_37;
            }
            unint64_t v20 = v42[v8];
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v8 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
LABEL_22:
    uint64_t v22 = 8 * v18;
    unint64_t v23 = (unsigned int *)(*(void *)(v5 + 48) + v22);
    unint64_t v24 = (unsigned int *)(*(void *)(v5 + 56) + v22);
    uint64_t v25 = *((unsigned __int8 *)v23 + 6);
    unint64_t v26 = *v23 | ((unint64_t)*((unsigned __int16 *)v23 + 2) << 32);
    char v27 = *((unsigned char *)v24 + 6);
    unint64_t v28 = *v24 | ((unint64_t)*((unsigned __int16 *)v24 + 2) << 32);
    sub_1B53732F8();
    switch(v25)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 6:
      case 8:
      case 9:
        sub_1B5373308();
        sub_1B5373338();
        break;
      case 5:
        sub_1B5373308();
        goto LABEL_27;
      case 7:
        sub_1B5373308();
        sub_1B5373338();
        uint64_t v5 = v40;
        sub_1B5373328();
        break;
      case 10:
LABEL_27:
        sub_1B5373308();
        break;
      default:
        sub_1B5373308();
        sub_1B5373318();
        break;
    }
    uint64_t v29 = sub_1B5373358();
    uint64_t v30 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v31 = v29 & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v33 = 0;
    unint64_t v34 = (unint64_t)(63 - v30) >> 6;
    do
    {
      if (++v32 == v34 && (v33 & 1) != 0)
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        JUMPOUT(0x1B5231434);
      }
      BOOL v35 = v32 == v34;
      if (v32 == v34) {
        unint64_t v32 = 0;
      }
      v33 |= v35;
      uint64_t v36 = *(void *)(v12 + 8 * v32);
    }
    while (v36 == -1);
    unint64_t v13 = __clz(__rbit64(~v36)) + (v32 << 6);
LABEL_7:
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = 8 * v13;
    uint64_t v15 = *(void *)(v7 + 48) + v14;
    *(_WORD *)(v15 + 4) = WORD2(v26);
    *(_DWORD *)uint64_t v15 = v26;
    *(unsigned char *)(v15 + 6) = v25;
    uint64_t v16 = *(void *)(v7 + 56) + v14;
    *(_DWORD *)uint64_t v16 = v28;
    *(_WORD *)(v16 + 4) = WORD2(v28);
    *(unsigned char *)(v16 + 6) = v27;
    ++*(void *)(v7 + 16);
  }
LABEL_37:
  if (v39)
  {
    uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
    if (v37 >= 64) {
      bzero(v42, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v42 = -1 << v37;
    }
    uint64_t v3 = v2;
    *(void *)(v5 + 16) = 0;
LABEL_43:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5231460(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481F8);
  uint64_t v6 = sub_1B5373118();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  char v35 = a2;
  int64_t v8 = 0;
  uint64_t v9 = (void *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  int64_t v36 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_45;
    }
    if (v18 >= v36) {
      break;
    }
    unint64_t v19 = v9[v18];
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v36) {
        break;
      }
      unint64_t v19 = v9[v8];
      if (!v19)
      {
        int64_t v20 = v18 + 2;
        if (v20 >= v36) {
          break;
        }
        unint64_t v19 = v9[v20];
        if (!v19)
        {
          while (1)
          {
            int64_t v8 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_46;
            }
            if (v8 >= v36) {
              goto LABEL_37;
            }
            unint64_t v19 = v9[v8];
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v8 = v20;
      }
    }
LABEL_21:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_22:
    int64_t v21 = (unsigned int *)(*(void *)(v5 + 48) + 8 * v17);
    uint64_t v22 = *((unsigned __int8 *)v21 + 6);
    unint64_t v23 = *v21 | ((unint64_t)*((unsigned __int16 *)v21 + 2) << 32);
    int v24 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v17);
    sub_1B53732F8();
    switch(v22)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 6:
      case 8:
      case 9:
        sub_1B5373308();
        sub_1B5373338();
        break;
      case 5:
        sub_1B5373308();
        goto LABEL_27;
      case 7:
        sub_1B5373308();
        sub_1B5373338();
        uint64_t v9 = (void *)(v5 + 64);
        sub_1B5373328();
        break;
      case 10:
LABEL_27:
        sub_1B5373308();
        break;
      default:
        sub_1B5373308();
        sub_1B5373318();
        break;
    }
    uint64_t v25 = sub_1B5373358();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = v25 & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v29 = 0;
    unint64_t v30 = (unint64_t)(63 - v26) >> 6;
    do
    {
      if (++v28 == v30 && (v29 & 1) != 0)
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        JUMPOUT(0x1B5231860);
      }
      BOOL v31 = v28 == v30;
      if (v28 == v30) {
        unint64_t v28 = 0;
      }
      v29 |= v31;
      uint64_t v32 = *(void *)(v13 + 8 * v28);
    }
    while (v32 == -1);
    unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
LABEL_7:
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 8 * v14;
    *(_WORD *)(v15 + 4) = WORD2(v23);
    *(_DWORD *)uint64_t v15 = v23;
    *(unsigned char *)(v15 + 6) = v22;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v14) = v24;
    ++*(void *)(v7 + 16);
  }
LABEL_37:
  if (v35)
  {
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    if (v33 >= 64) {
      bzero(v9, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v33;
    }
    uint64_t v3 = v2;
    *(void *)(v5 + 16) = 0;
LABEL_43:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B523188C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47918);
  char v46 = a2;
  uint64_t v6 = sub_1B5373118();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v44 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v45 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v47 = v13;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v43) {
      break;
    }
    int v24 = v44;
    unint64_t v25 = v44[v23];
    int64_t v26 = v13 + 1;
    if (!v25)
    {
      int64_t v26 = v13 + 2;
      if (v13 + 2 >= v43) {
        goto LABEL_33;
      }
      unint64_t v25 = v44[v26];
      if (!v25)
      {
        uint64_t v27 = v13 + 3;
        if (v13 + 3 >= v43)
        {
LABEL_33:
          swift_release();
          if ((v46 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = v44[v27];
        if (!v25)
        {
          while (1)
          {
            int64_t v26 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v26 >= v43) {
              goto LABEL_33;
            }
            unint64_t v25 = v44[v26];
            ++v27;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v26 = v13 + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    int64_t v47 = v26;
    unint64_t v22 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_31:
    uint64_t v32 = 24 * v22;
    uint64_t v33 = *(void *)(v5 + 56);
    uint64_t v34 = *(void *)(v5 + 48) + v32;
    uint64_t v36 = *(void *)v34;
    unint64_t v35 = *(void *)(v34 + 8);
    unsigned __int8 v37 = *(unsigned char *)(v34 + 16);
    uint64_t v38 = v33 + v32;
    uint64_t v40 = *(void *)v38;
    unint64_t v39 = *(void *)(v38 + 8);
    unsigned __int8 v41 = *(unsigned char *)(v38 + 16);
    if ((v46 & 1) == 0)
    {
      sub_1B51DFDC4(*(void *)v34, *(void *)(v34 + 8), *(unsigned char *)(v34 + 16));
      sub_1B51DFDC4(v40, v39, v41);
    }
    sub_1B53732F8();
    PSObject.hash(into:)((uint64_t)v48, v36, v35, v37);
    uint64_t result = sub_1B5373358();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v16 == v29;
        if (v16 == v29) {
          unint64_t v16 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v16);
      }
      while (v31 == -1);
      unint64_t v17 = __clz(__rbit64(~v31)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 24 * v17;
    uint64_t v19 = *(void *)(v7 + 48) + v18;
    *(void *)uint64_t v19 = v36;
    *(void *)(v19 + 8) = v35;
    *(unsigned char *)(v19 + 16) = v37;
    uint64_t v20 = *(void *)(v7 + 56) + v18;
    *(void *)uint64_t v20 = v40;
    *(void *)(v20 + 8) = v39;
    *(unsigned char *)(v20 + 16) = v41;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v45;
    int64_t v13 = v47;
  }
  swift_release();
  int v24 = v44;
  if ((v46 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v42 = 1 << *(unsigned char *)(v5 + 32);
  if (v42 >= 64) {
    bzero(v24, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int v24 = -1 << v42;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5231BF8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E9D48210);
  uint64_t v6 = sub_1B5373118();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_45;
  }
  uint64_t v38 = v2;
  int64_t v8 = 0;
  unsigned __int8 v41 = (void *)(v5 + 64);
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v40 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  char v39 = a2;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_47;
    }
    if (v18 >= v40) {
      break;
    }
    unint64_t v19 = v41[v18];
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v40) {
        break;
      }
      unint64_t v19 = v41[v8];
      if (!v19)
      {
        int64_t v20 = v18 + 2;
        if (v20 >= v40) {
          break;
        }
        unint64_t v19 = v41[v20];
        if (!v19)
        {
          while (1)
          {
            int64_t v8 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_48;
            }
            if (v8 >= v40) {
              goto LABEL_39;
            }
            unint64_t v19 = v41[v8];
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v8 = v20;
      }
    }
LABEL_21:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_22:
    uint64_t v21 = 8 * v17;
    unint64_t v22 = (unsigned int *)(*(void *)(v5 + 48) + v21);
    uint64_t v23 = *((unsigned __int16 *)v22 + 2);
    uint64_t v24 = *v22;
    uint64_t v25 = *((unsigned __int8 *)v22 + 6);
    uint64_t v26 = *(void *)(*(void *)(v5 + 56) + v21);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    uint64_t v27 = v24 | (v23 << 32);
    sub_1B53732F8();
    switch(v25)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 6:
      case 8:
      case 9:
        sub_1B5373308();
        sub_1B5373338();
        break;
      case 5:
        sub_1B5373308();
        goto LABEL_29;
      case 7:
        sub_1B5373308();
        sub_1B5373338();
        a2 = v39;
        sub_1B5373328();
        break;
      case 10:
LABEL_29:
        sub_1B5373308();
        break;
      default:
        sub_1B5373308();
        sub_1B5373318();
        break;
    }
    uint64_t v28 = sub_1B5373358();
    uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v32 = 0;
    unint64_t v33 = (unint64_t)(63 - v29) >> 6;
    do
    {
      if (++v31 == v33 && (v32 & 1) != 0)
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        JUMPOUT(0x1B5232008);
      }
      BOOL v34 = v31 == v33;
      if (v31 == v33) {
        unint64_t v31 = 0;
      }
      v32 |= v34;
      uint64_t v35 = *(void *)(v12 + 8 * v31);
    }
    while (v35 == -1);
    unint64_t v13 = __clz(__rbit64(~v35)) + (v31 << 6);
LABEL_7:
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = 8 * v13;
    uint64_t v15 = *(void *)(v7 + 48) + v14;
    *(_WORD *)(v15 + 4) = WORD2(v27);
    *(_DWORD *)uint64_t v15 = v27;
    *(unsigned char *)(v15 + 6) = v25;
    *(void *)(*(void *)(v7 + 56) + v14) = v26;
    ++*(void *)(v7 + 16);
  }
LABEL_39:
  if (a2)
  {
    uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
    if (v36 >= 64) {
      bzero(v41, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unsigned __int8 v41 = -1 << v36;
    }
    uint64_t v3 = v38;
    *(void *)(v5 + 16) = 0;
LABEL_45:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v38;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5232034(uint64_t a1, char a2)
{
  return sub_1B523295C(a1, a2, &qword_1E9D47EB0);
}

uint64_t sub_1B5232040(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48200);
  char v34 = a2;
  uint64_t result = sub_1B5373118();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      __int16 v27 = *(_WORD *)(*(void *)(v5 + 48) + 2 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1B53732F8();
      sub_1B5373328();
      uint64_t result = sub_1B5373358();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_WORD *)(*(void *)(v7 + 48) + 2 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *unint64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5232328(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481D0);
  char v41 = a2;
  uint64_t v6 = sub_1B5373118();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v39 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unsigned __int8 v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    int64_t v22 = v39;
    unint64_t v23 = v39[v21];
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v23 = v39[v13];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v41 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v38) {
              goto LABEL_33;
            }
            unint64_t v23 = v39[v13];
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(v5 + 56);
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v20);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = v30[2];
    uint64_t v34 = v30[3];
    uint64_t v35 = *(void *)(v29 + 8 * v20);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1B53725A8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
    *unint64_t v18 = v32;
    v18[1] = v31;
    v18[2] = v33;
    v18[3] = v34;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  int64_t v22 = v39;
  if ((v41 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5232650(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481B0);
  uint64_t v6 = sub_1B5373118();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1B5216C4C(v24, v35);
      }
      else
      {
        sub_1B5216CF4((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1B53732F8();
      sub_1B5372828();
      uint64_t result = sub_1B5373358();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1B5216C4C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5232950(uint64_t a1, char a2)
{
  return sub_1B523295C(a1, a2, &qword_1E9D481D8);
}

uint64_t sub_1B523295C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1B5373118();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    BOOL v30 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v9 << 6);
      }
      else
      {
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v30[v21];
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v30[v9];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
              if (v29 >= 64) {
                bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v30 = -1 << v29;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v22 = v30[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v9 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v30[v9];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      int v28 = *(_DWORD *)(*(void *)(v6 + 48) + 4 * v20);
      long long v31 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        sub_1B51D4BB8(v31, *((unint64_t *)&v31 + 1));
      }
      sub_1B53732F8();
      sub_1B5373338();
      uint64_t result = sub_1B5373358();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_DWORD *)(*(void *)(v8 + 48) + 4 * v18) = v28;
      *(_OWORD *)(*(void *)(v8 + 56) + 16 * v18) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1B5232C34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47D98);
  uint64_t v6 = sub_1B5373118();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    BOOL v30 = *(void **)(*(void *)(v5 + 48) + v29);
    long long v31 = *(void **)(*(void *)(v5 + 56) + v29);
    if ((a2 & 1) == 0)
    {
      id v32 = v30;
      id v33 = v31;
    }
    sub_1B53732F8();
    type metadata accessor for CFString(0);
    sub_1B5239850();
    sub_1B5372478();
    uint64_t result = sub_1B5373358();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B5232F44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481C0);
  uint64_t result = sub_1B5373118();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    uint64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 4 * v18;
      unsigned int v23 = *(_DWORD *)(*(void *)(v5 + 48) + v22);
      int v24 = *(_DWORD *)(*(void *)(v5 + 56) + v22);
      uint64_t result = MEMORY[0x1BA998B90](*(void *)(v7 + 40), v23, 4);
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 4 * v15;
      *(_DWORD *)(*(void *)(v7 + 48) + v16) = v23;
      *(_DWORD *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1B52331F0(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 8 * result;
  *(_WORD *)(v4 + 4) = WORD2(a2);
  *(_DWORD *)uint64_t v4 = a2;
  *(unsigned char *)(v4 + 6) = BYTE6(a2);
  uint64_t v5 = a4[7] + 8 * result;
  *(_WORD *)(v5 + 4) = WORD2(a3);
  *(_DWORD *)uint64_t v5 = a3;
  *(unsigned char *)(v5 + 6) = BYTE6(a3);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1B5233260(unint64_t result, uint64_t a2, int a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 8 * result;
  *(_WORD *)(v4 + 4) = WORD2(a2);
  *(_DWORD *)uint64_t v4 = a2;
  *(unsigned char *)(v4 + 6) = BYTE6(a2);
  *(_DWORD *)(a4[7] + 4 * result) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

unint64_t sub_1B52332B8(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 8 * result;
  *(_WORD *)(v4 + 4) = WORD2(a2);
  *(_DWORD *)uint64_t v4 = a2;
  *(unsigned char *)(v4 + 6) = BYTE6(a2);
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

unint64_t sub_1B5233314(unint64_t result, __int16 a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(_WORD *)(a5[6] + 2 * result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1B523335C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  BOOL v7 = (void *)(a7[6] + 32 * result);
  *BOOL v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  *(void *)(a7[7] + 8 * result) = a6;
  uint64_t v8 = a7[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a7[2] = v10;
  }
  return result;
}

_OWORD *sub_1B52333A8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1B5216C4C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_1B5233414(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = v4;
    uint64_t v9 = a3;
    unint64_t v10 = a2;
    uint64_t v11 = a1;
    uint64_t v12 = ~v6;
    unsigned __int8 v13 = a3 & 0xF0;
    int v14 = a3 & 0xF0;
    BOOL v15 = a1 == 2;
    BOOL v16 = a1 == 1;
    if (a2)
    {
      BOOL v15 = 0;
      BOOL v16 = 0;
    }
    BOOL v17 = a3 == 144 && v15;
    BOOL v18 = a3 == 144 && v16;
    BOOL v19 = a3 != 144 || (a2 | a1) != 0;
    unint64_t v203 = HIDWORD(a1);
    BOOL v20 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v211 = v20;
    uint64_t v208 = (int)a1;
    uint64_t v201 = (a1 >> 32) - (int)a1;
    uint64_t v202 = a1 >> 32;
    BOOL v21 = v14 == 144;
    unint64_t v232 = a2 >> 62;
    size_t v210 = HIDWORD(a1) - (int)a1;
    size_t __n = BYTE6(a2);
    BOOL v23 = v14 == 144 && v17;
    BOOL v213 = v23;
    BOOL v24 = v21 && v18;
    BOOL v212 = v24;
    char v25 = !v21 || v19;
    char v229 = v25;
    unsigned __int8 v230 = a3 & 0xF0;
    v209 = (unsigned __int8 *)(a1 + 48);
    do
    {
      uint64_t v26 = *(void *)(v8 + 48) + 24 * v7;
      uint64_t v27 = *(uint64_t *)v26;
      unint64_t v28 = *(void *)(v26 + 8);
      unsigned int v29 = *(unsigned __int8 *)(v26 + 16);
      switch(v29 >> 4)
      {
        case 1u:
          if (v13 == 16 && v27 == v11) {
            return (void *)v7;
          }
          goto LABEL_28;
        case 2u:
          if (v13 == 32 && *(double *)&v27 == *(double *)&a1) {
            return (void *)v7;
          }
          goto LABEL_28;
        case 3u:
          if (v13 != 48) {
            goto LABEL_28;
          }
          BOOL v31 = v27 == v11 && v28 == v10;
          if (!v31 && (sub_1B5373228() & 1) == 0) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 4u:
          if (v13 != 64) {
            goto LABEL_28;
          }
          uint64_t v30 = 0;
          switch(v28 >> 62)
          {
            case 1uLL:
              LODWORD(v30) = HIDWORD(v27) - v27;
              if (__OFSUB__(HIDWORD(v27), v27))
              {
                __break(1u);
LABEL_299:
                __break(1u);
LABEL_300:
                __break(1u);
LABEL_301:
                __break(1u);
LABEL_302:
                __break(1u);
LABEL_303:
                __break(1u);
LABEL_304:
                __break(1u);
LABEL_305:
                __break(1u);
LABEL_306:
                __break(1u);
LABEL_307:
                __break(1u);
LABEL_308:
                __break(1u);
LABEL_309:
                __break(1u);
LABEL_310:
                __break(1u);
LABEL_311:
                __break(1u);
LABEL_312:
                __break(1u);
LABEL_313:
                __break(1u);
LABEL_314:
                __break(1u);
LABEL_315:
                __break(1u);
LABEL_316:
                __break(1u);
LABEL_317:
                __break(1u);
LABEL_318:
                __break(1u);
LABEL_319:
                __break(1u);
LABEL_320:
                __break(1u);
LABEL_321:
                __break(1u);
LABEL_322:
                __break(1u);
LABEL_323:
                __break(1u);
LABEL_324:
                __break(1u);
LABEL_325:
                __break(1u);
LABEL_326:
                __break(1u);
LABEL_327:
                __break(1u);
LABEL_328:
                __break(1u);
LABEL_329:
                __break(1u);
LABEL_330:
                __break(1u);
LABEL_331:
                __break(1u);
LABEL_332:
                __break(1u);
LABEL_333:
                __break(1u);
LABEL_334:
                __break(1u);
LABEL_335:
                __break(1u);
LABEL_336:
                __break(1u);
LABEL_337:
                __break(1u);
LABEL_338:
                __break(1u);
LABEL_339:
                __break(1u);
LABEL_340:
                __break(1u);
LABEL_341:
                __break(1u);
LABEL_342:
                __break(1u);
LABEL_343:
                __break(1u);
              }
              uint64_t v30 = (int)v30;
LABEL_87:
              size_t v60 = __n;
              switch((int)v232)
              {
                case 1:
                  size_t v60 = v210;
                  if (v211) {
                    goto LABEL_302;
                  }
                  goto LABEL_97;
                case 2:
                  uint64_t v65 = *(void *)(v11 + 16);
                  uint64_t v64 = *(void *)(v11 + 24);
                  BOOL v59 = __OFSUB__(v64, v65);
                  size_t v60 = v64 - v65;
                  if (!v59) {
                    goto LABEL_97;
                  }
                  goto LABEL_304;
                case 3:
                  if (!v30) {
                    goto LABEL_27;
                  }
                  goto LABEL_28;
                default:
LABEL_97:
                  if (v30 != v60) {
                    goto LABEL_28;
                  }
                  if (v30 < 1) {
                    goto LABEL_27;
                  }
                  break;
              }
              break;
            case 2uLL:
              uint64_t v58 = *(void *)(v27 + 16);
              uint64_t v57 = *(void *)(v27 + 24);
              BOOL v59 = __OFSUB__(v57, v58);
              uint64_t v30 = v57 - v58;
              if (!v59) {
                goto LABEL_87;
              }
              goto LABEL_299;
            case 3uLL:
              goto LABEL_87;
            default:
              uint64_t v30 = BYTE6(v28);
              goto LABEL_87;
          }
          unsigned int v205 = v9;
          switch(v28 >> 62)
          {
            case 1uLL:
              uint64_t v94 = v12;
              uint64_t v95 = (int)v27;
              if ((int)v27 > v27 >> 32) {
                goto LABEL_307;
              }
              unint64_t v219 = *(void *)(v26 + 8);
              double v224 = *(double *)v26;
              sub_1B51DFDC4(v27, v28, v29);
              uint64_t v9 = v9;
              sub_1B51DFDC4(v11, v10, v9);
              uint64_t v96 = sub_1B5372268();
              if (v96)
              {
                uint64_t v97 = v96;
                uint64_t v98 = sub_1B5372298();
                if (__OFSUB__(v95, v98)) {
                  goto LABEL_311;
                }
                v195 = (void *)(v97 + v95 - v98);
              }
              else
              {
                v195 = 0;
              }
              uint64_t v12 = v94;
              unsigned __int8 v13 = v230;
              sub_1B5372288();
              if (v232)
              {
                if (v232 == 1)
                {
                  if (v202 < v208) {
                    goto LABEL_329;
                  }
                  swift_retain();
                  v154 = (char *)sub_1B5372268();
                  if (v154)
                  {
                    uint64_t v155 = sub_1B5372298();
                    if (__OFSUB__(v208, v155)) {
                      goto LABEL_343;
                    }
                    v154 += v208 - v155;
                  }
                  uint64_t v156 = sub_1B5372288();
                  size_t v157 = v201;
                  if (v156 < v201) {
                    size_t v157 = v156;
                  }
                  if (!v195) {
                    goto LABEL_362;
                  }
                  if (!v154) {
                    goto LABEL_363;
                  }
                  int v109 = memcmp(v195, v154, v157);
                  sub_1B51DFE20(v11, v10, v9);
                }
                else
                {
                  uint64_t v193 = v5;
                  uint64_t v178 = *(void *)(v11 + 16);
                  uint64_t v179 = *(void *)(v11 + 24);
                  swift_retain();
                  swift_retain();
                  v180 = (char *)sub_1B5372268();
                  if (v180)
                  {
                    uint64_t v181 = sub_1B5372298();
                    if (__OFSUB__(v178, v181)) {
                      goto LABEL_342;
                    }
                    v180 += v178 - v181;
                  }
                  BOOL v59 = __OFSUB__(v179, v178);
                  int64_t v182 = v179 - v178;
                  if (v59) {
                    goto LABEL_331;
                  }
                  uint64_t v183 = sub_1B5372288();
                  if (v183 >= v182) {
                    size_t v184 = v182;
                  }
                  else {
                    size_t v184 = v183;
                  }
                  uint64_t v5 = v193;
                  if (!v195) {
                    goto LABEL_370;
                  }
                  if (!v180) {
                    goto LABEL_371;
                  }
                  uint64_t v12 = v94;
                  int v109 = memcmp(v195, v180, v184);
                  swift_release();
                  swift_release();
                }
                sub_1B51DFE20(v11, v10, v9);
                uint64_t v153 = *(void *)&v224;
                goto LABEL_293;
              }
              LOWORD(__s1[0]) = v11;
              BYTE2(__s1[0]) = BYTE2(v11);
              BYTE3(__s1[0]) = BYTE3(v11);
              BYTE4(__s1[0]) = v203;
              BYTE5(__s1[0]) = BYTE5(v11);
              BYTE6(__s1[0]) = BYTE6(v11);
              HIBYTE(__s1[0]) = HIBYTE(v11);
              LOWORD(__s1[1]) = v10;
              BYTE2(__s1[1]) = BYTE2(v10);
              BYTE3(__s1[1]) = BYTE3(v10);
              BYTE4(__s1[1]) = BYTE4(v10);
              BYTE5(__s1[1]) = BYTE5(v10);
              if (!v195) {
                goto LABEL_369;
              }
              int v109 = memcmp(v195, __s1, __n);
              uint64_t v169 = v11;
              unint64_t v170 = v10;
              goto LABEL_281;
            case 2uLL:
              uint64_t v99 = v12;
              uint64_t v100 = *(void *)(v27 + 16);
              double v101 = *(double *)v26;
              unint64_t v219 = *(void *)(v26 + 8);
              sub_1B51DFDC4(v27, v28, v29);
              sub_1B51DFDC4(v11, v10, v205);
              double v224 = v101;
              swift_retain();
              swift_retain();
              uint64_t v102 = sub_1B5372268();
              if (v102)
              {
                uint64_t v103 = v102;
                uint64_t v104 = sub_1B5372298();
                if (__OFSUB__(v100, v104)) {
                  goto LABEL_310;
                }
                v196 = (void *)(v103 + v100 - v104);
              }
              else
              {
                v196 = 0;
              }
              uint64_t v12 = v99;
              sub_1B5372288();
              unsigned __int8 v13 = v230;
              if (v232)
              {
                if (v232 == 1)
                {
                  if (v202 < v208) {
                    goto LABEL_324;
                  }
                  swift_retain();
                  v149 = (char *)sub_1B5372268();
                  if (v149)
                  {
                    uint64_t v150 = sub_1B5372298();
                    if (__OFSUB__(v208, v150)) {
                      goto LABEL_341;
                    }
                    v149 += v208 - v150;
                  }
                  uint64_t v151 = sub_1B5372288();
                  size_t v152 = v201;
                  if (v151 < v201) {
                    size_t v152 = v151;
                  }
                  if (!v196) {
                    goto LABEL_360;
                  }
                  if (!v149) {
                    goto LABEL_361;
                  }
                  int v109 = memcmp(v196, v149, v152);
                  sub_1B51DFE20(v11, v10, v205);
                  swift_release();
                  swift_release();
                  sub_1B51DFE20(v11, v10, v205);
                  uint64_t v153 = *(void *)&v101;
                  uint64_t v9 = v205;
                }
                else
                {
                  uint64_t v192 = v5;
                  uint64_t v171 = *(void *)(v11 + 16);
                  uint64_t v172 = *(void *)(v11 + 24);
                  swift_retain();
                  swift_retain();
                  v173 = (char *)sub_1B5372268();
                  if (v173)
                  {
                    uint64_t v174 = sub_1B5372298();
                    if (__OFSUB__(v171, v174)) {
                      goto LABEL_340;
                    }
                    v173 += v171 - v174;
                  }
                  BOOL v59 = __OFSUB__(v172, v171);
                  int64_t v175 = v172 - v171;
                  if (v59) {
                    goto LABEL_330;
                  }
                  uint64_t v176 = sub_1B5372288();
                  if (v176 >= v175) {
                    size_t v177 = v175;
                  }
                  else {
                    size_t v177 = v176;
                  }
                  uint64_t v5 = v192;
                  if (!v196) {
                    goto LABEL_367;
                  }
                  if (!v173) {
                    goto LABEL_368;
                  }
                  uint64_t v12 = v99;
                  int v109 = memcmp(v196, v173, v177);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1B51DFE20(v11, v10, v205);
                  uint64_t v153 = *(void *)&v101;
                  uint64_t v9 = v205;
                }
LABEL_293:
                sub_1B51DFE20(v153, v219, v29);
                goto LABEL_294;
              }
              LOWORD(__s1[0]) = v11;
              BYTE2(__s1[0]) = BYTE2(v11);
              BYTE3(__s1[0]) = BYTE3(v11);
              BYTE4(__s1[0]) = v203;
              BYTE5(__s1[0]) = BYTE5(v11);
              BYTE6(__s1[0]) = BYTE6(v11);
              HIBYTE(__s1[0]) = HIBYTE(v11);
              LOWORD(__s1[1]) = v10;
              BYTE2(__s1[1]) = BYTE2(v10);
              BYTE3(__s1[1]) = BYTE3(v10);
              BYTE4(__s1[1]) = BYTE4(v10);
              BYTE5(__s1[1]) = BYTE5(v10);
              if (!v196) {
                goto LABEL_366;
              }
              int v109 = memcmp(v196, __s1, __n);
              swift_release();
              swift_release();
              uint64_t v169 = v11;
              unint64_t v170 = v10;
              uint64_t v9 = v205;
LABEL_281:
              sub_1B51DFE20(v169, v170, v9);
              sub_1B51DFE20(*(uint64_t *)&v224, v219, v29);
              goto LABEL_295;
            case 3uLL:
              memset(__s1, 0, 14);
              if (!v232) {
                goto LABEL_155;
              }
              uint64_t v9 = v9;
              uint64_t v198 = v12;
              unsigned int v226 = v29;
              unint64_t v215 = v28;
              uint64_t v221 = v27;
              if (v232 == 1)
              {
                if (v202 < v208) {
                  goto LABEL_322;
                }
                sub_1B51DFDC4(v27, v28, v29);
                sub_1B51DFDC4(v11, v10, v9);
                uint64_t v105 = sub_1B5372268();
                if (!v105) {
                  goto LABEL_359;
                }
                uint64_t v67 = v105;
                uint64_t v106 = sub_1B5372298();
                uint64_t v69 = v208 - v106;
                if (__OFSUB__(v208, v106)) {
                  goto LABEL_328;
                }
                goto LABEL_151;
              }
              uint64_t v158 = v5;
              uint64_t v165 = *(void *)(v11 + 16);
              uint64_t v166 = *(void *)(v11 + 24);
              sub_1B51DFDC4(v27, v28, v29);
              sub_1B51DFDC4(v11, v10, v9);
              swift_retain();
              swift_retain();
              v161 = (char *)sub_1B5372268();
              if (v161)
              {
                uint64_t v167 = sub_1B5372298();
                if (__OFSUB__(v165, v167)) {
                  goto LABEL_339;
                }
                v161 += v165 - v167;
              }
              BOOL v59 = __OFSUB__(v166, v165);
              int64_t v163 = v166 - v165;
              if (v59) {
                goto LABEL_326;
              }
              uint64_t v164 = sub_1B5372288();
              if (!v161) {
                goto LABEL_365;
              }
              break;
            default:
              __s1[0] = *(void *)v26;
              LOWORD(__s1[1]) = v28;
              BYTE2(__s1[1]) = BYTE2(v28);
              BYTE3(__s1[1]) = BYTE3(v28);
              BYTE4(__s1[1]) = BYTE4(v28);
              BYTE5(__s1[1]) = BYTE5(v28);
              if (!v232)
              {
LABEL_155:
                __int16 __s2 = v11;
                char v234 = BYTE2(v11);
                char v235 = BYTE3(v11);
                char v236 = v203;
                char v237 = BYTE5(v11);
                char v238 = BYTE6(v11);
                char v239 = HIBYTE(v11);
                __int16 v240 = v10;
                char v241 = BYTE2(v10);
                char v242 = BYTE3(v10);
                char v243 = BYTE4(v10);
                char v244 = BYTE5(v10);
                int v109 = memcmp(__s1, &__s2, __n);
                uint64_t v9 = v9;
                goto LABEL_295;
              }
              uint64_t v9 = v9;
              uint64_t v198 = v12;
              unsigned int v226 = v29;
              unint64_t v215 = v28;
              uint64_t v221 = v27;
              if (v232 == 1)
              {
                if (v202 < v208) {
                  goto LABEL_323;
                }
                sub_1B51DFDC4(v27, v28, v29);
                sub_1B51DFDC4(v11, v10, v9);
                uint64_t v66 = sub_1B5372268();
                if (!v66) {
                  goto LABEL_358;
                }
                uint64_t v67 = v66;
                uint64_t v68 = sub_1B5372298();
                uint64_t v69 = v208 - v68;
                if (__OFSUB__(v208, v68)) {
                  goto LABEL_327;
                }
LABEL_151:
                uint64_t v107 = sub_1B5372288();
                if (v107 >= v201) {
                  size_t v108 = v201;
                }
                else {
                  size_t v108 = v107;
                }
                int v109 = memcmp(__s1, (const void *)(v67 + v69), v108);
LABEL_266:
                sub_1B51DFE20(v11, v10, v9);
                unsigned int v29 = v226;
                sub_1B51DFE20(v221, v215, v226);
                uint64_t v12 = v198;
LABEL_294:
                unsigned __int8 v13 = v230;
LABEL_295:
                if (!v109)
                {
LABEL_27:
                  if (((v9 ^ v29) & 1) == 0) {
                    return (void *)v7;
                  }
                }
                goto LABEL_28;
              }
              uint64_t v158 = v5;
              uint64_t v159 = *(void *)(v11 + 16);
              uint64_t v160 = *(void *)(v11 + 24);
              sub_1B51DFDC4(v27, v28, v29);
              sub_1B51DFDC4(v11, v10, v9);
              swift_retain();
              swift_retain();
              v161 = (char *)sub_1B5372268();
              if (v161)
              {
                uint64_t v162 = sub_1B5372298();
                if (__OFSUB__(v159, v162)) {
                  goto LABEL_338;
                }
                v161 += v159 - v162;
              }
              BOOL v59 = __OFSUB__(v160, v159);
              int64_t v163 = v160 - v159;
              if (v59) {
                goto LABEL_325;
              }
              uint64_t v164 = sub_1B5372288();
              if (!v161) {
                goto LABEL_364;
              }
              break;
          }
          uint64_t v5 = v158;
          if (v164 >= v163) {
            size_t v168 = v163;
          }
          else {
            size_t v168 = v164;
          }
          int v109 = memcmp(__s1, v161, v168);
          swift_release();
          swift_release();
          goto LABEL_266;
        case 5u:
          if (v13 == 80)
          {
            BOOL v42 = v27 == v11 && v28 == v10;
            if (v42 || (sub_1B5373228() & 1) != 0) {
              return (void *)v7;
            }
          }
          goto LABEL_28;
        case 6u:
          if (v13 != 96) {
            goto LABEL_28;
          }
          uint64_t v43 = 0;
          switch(v28 >> 62)
          {
            case 1uLL:
              LODWORD(v43) = HIDWORD(v27) - v27;
              if (__OFSUB__(HIDWORD(v27), v27)) {
                goto LABEL_300;
              }
              uint64_t v43 = (int)v43;
LABEL_93:
              size_t v63 = __n;
              switch((int)v232)
              {
                case 1:
                  size_t v63 = v210;
                  if (v211) {
                    goto LABEL_303;
                  }
                  goto LABEL_108;
                case 2:
                  uint64_t v71 = *(void *)(v11 + 16);
                  uint64_t v70 = *(void *)(v11 + 24);
                  BOOL v59 = __OFSUB__(v70, v71);
                  size_t v63 = v70 - v71;
                  if (!v59) {
                    goto LABEL_108;
                  }
                  goto LABEL_305;
                case 3:
                  if (!v43) {
                    return (void *)v7;
                  }
                  goto LABEL_28;
                default:
LABEL_108:
                  if (v43 != v63) {
                    goto LABEL_28;
                  }
                  if (v43 < 1) {
                    return (void *)v7;
                  }
                  break;
              }
              break;
            case 2uLL:
              uint64_t v62 = *(void *)(v27 + 16);
              uint64_t v61 = *(void *)(v27 + 24);
              BOOL v59 = __OFSUB__(v61, v62);
              uint64_t v43 = v61 - v62;
              if (!v59) {
                goto LABEL_93;
              }
              goto LABEL_301;
            case 3uLL:
              goto LABEL_93;
            default:
              uint64_t v43 = BYTE6(v28);
              goto LABEL_93;
          }
          break;
        case 7u:
          if (v13 != 112) {
            goto LABEL_28;
          }
          uint64_t v32 = *(void *)(v27 + 16);
          if (v32 != *(void *)(v11 + 16)) {
            goto LABEL_28;
          }
          if (!v32 || v27 == v11) {
            return (void *)v7;
          }
          unint64_t v214 = *(void *)(v26 + 8);
          unsigned __int8 v225 = *(unsigned char *)(v26 + 16);
          v194 = (void *)v7;
          uint64_t v197 = v12;
          uint64_t v188 = v8;
          uint64_t v189 = v5;
          uint64_t v186 = v11;
          unint64_t v187 = v10;
          unsigned int v204 = v9;
          uint64_t v220 = swift_bridgeObjectRetain();
          uint64_t v33 = (unsigned __int8 *)(v220 + 48);
          for (uint64_t i = v209; ; i += 24)
          {
            uint64_t v36 = *((void *)v33 - 2);
            unint64_t v35 = *((void *)v33 - 1);
            uint64_t v37 = *((void *)i - 2);
            unint64_t v38 = *((void *)i - 1);
            uint64_t v39 = *v33;
            uint64_t v40 = *i;
            sub_1B51DFDC4(v36, v35, *v33);
            sub_1B51DFDC4(v37, v38, v40);
            char v41 = static PSObject.__derived_enum_equals(_:_:)(v36, v35, v39, v37, v38, v40);
            sub_1B51DFE20(v37, v38, v40);
            sub_1B51DFE20(v36, v35, v39);
            if ((v41 & 1) == 0) {
              break;
            }
            v33 += 24;
            if (!--v32)
            {
              sub_1B51DFE20(v220, v214, v225);
              return v194;
            }
          }
          sub_1B51DFE20(v220, v214, v225);
          uint64_t v5 = v189;
          unint64_t v7 = (unint64_t)v194;
          unint64_t v10 = v187;
          uint64_t v8 = v188;
          uint64_t v9 = v204;
          uint64_t v11 = v186;
          uint64_t v12 = v197;
          unsigned __int8 v13 = v230;
          goto LABEL_28;
        case 8u:
          if (v13 == 128)
          {
            uint64_t v44 = v12;
            uint64_t v45 = v5;
            uint64_t v46 = v8;
            unint64_t v47 = v10;
            uint64_t v48 = v9;
            double v49 = *(double *)v26;
            unint64_t v50 = *(void *)(v26 + 8);
            uint64_t v51 = swift_bridgeObjectRetain();
            char v52 = sub_1B522AA7C(v51, v11);
            unsigned __int8 v53 = v29;
            char v54 = v52;
            uint64_t v55 = *(void *)&v49;
            uint64_t v9 = v48;
            unint64_t v10 = v47;
            uint64_t v8 = v46;
            uint64_t v5 = v45;
            uint64_t v12 = v44;
            unsigned __int8 v13 = v230;
            sub_1B51DFE20(v55, v50, v53);
            if (v54) {
              return (void *)v7;
            }
          }
          goto LABEL_28;
        case 9u:
          if (v28 | v27 || v29 != 144)
          {
            BOOL v56 = v27 == 1 && v28 == 0;
            if (v56 && v29 == 144)
            {
              if (v212) {
                return (void *)v7;
              }
            }
            else if (v213)
            {
              return (void *)v7;
            }
          }
          else if ((v229 & 1) == 0)
          {
            return (void *)v7;
          }
          goto LABEL_28;
        default:
          if v9 <= 0xFu && ((v11 ^ ((*(void *)v26 & 1) == 0))) {
            return (void *)v7;
          }
          goto LABEL_28;
      }
      switch(v28 >> 62)
      {
        case 1uLL:
          unsigned __int8 v227 = *(unsigned char *)(v26 + 16);
          uint64_t v77 = v12;
          uint64_t v78 = (int)v27;
          if ((int)v27 > v27 >> 32) {
            goto LABEL_306;
          }
          unint64_t v217 = *(void *)(v26 + 8);
          double v223 = *(double *)v26;
          sub_1B51DFDC4(v27, v28, v29);
          sub_1B51DFDC4(v11, v10, v9);
          uint64_t v79 = sub_1B5372268();
          if (v79)
          {
            uint64_t v80 = v79;
            uint64_t v81 = sub_1B5372298();
            if (__OFSUB__(v78, v81)) {
              goto LABEL_309;
            }
            v206 = (void *)(v80 + v78 - v81);
          }
          else
          {
            v206 = 0;
          }
          uint64_t v12 = v77;
          unsigned __int8 v13 = v230;
          sub_1B5372288();
          if (!v232)
          {
            LOWORD(__s1[0]) = v11;
            BYTE2(__s1[0]) = BYTE2(v11);
            BYTE3(__s1[0]) = BYTE3(v11);
            BYTE4(__s1[0]) = v203;
            BYTE5(__s1[0]) = BYTE5(v11);
            BYTE6(__s1[0]) = BYTE6(v11);
            HIBYTE(__s1[0]) = HIBYTE(v11);
            LOWORD(__s1[1]) = v10;
            BYTE2(__s1[1]) = BYTE2(v10);
            BYTE3(__s1[1]) = BYTE3(v10);
            BYTE4(__s1[1]) = BYTE4(v10);
            BYTE5(__s1[1]) = BYTE5(v10);
            if (!v206) {
              goto LABEL_355;
            }
            int v131 = memcmp(v206, __s1, __n);
            sub_1B51DFE20(v11, v10, v9);
            unint64_t v133 = v217;
            uint64_t v132 = *(void *)&v223;
            goto LABEL_211;
          }
          if (v232 == 1)
          {
            if (v202 < v208) {
              goto LABEL_320;
            }
            swift_retain();
            v115 = (char *)sub_1B5372268();
            if (v115)
            {
              uint64_t v116 = sub_1B5372298();
              if (__OFSUB__(v208, v116)) {
                goto LABEL_337;
              }
              v115 += v208 - v116;
            }
            uint64_t v117 = sub_1B5372288();
            size_t v118 = v201;
            if (v117 < v201) {
              size_t v118 = v117;
            }
            if (!v206) {
              goto LABEL_348;
            }
            if (!v115) {
              goto LABEL_349;
            }
            int v93 = memcmp(v206, v115, v118);
            sub_1B51DFE20(v11, v10, v9);
          }
          else
          {
            uint64_t v191 = v5;
            uint64_t v142 = *(void *)(v11 + 16);
            uint64_t v143 = *(void *)(v11 + 24);
            swift_retain();
            swift_retain();
            v144 = (char *)sub_1B5372268();
            if (v144)
            {
              uint64_t v145 = sub_1B5372298();
              if (__OFSUB__(v142, v145)) {
                goto LABEL_336;
              }
              v144 += v142 - v145;
            }
            BOOL v59 = __OFSUB__(v143, v142);
            int64_t v146 = v143 - v142;
            if (v59) {
              goto LABEL_321;
            }
            uint64_t v147 = sub_1B5372288();
            if (v147 >= v146) {
              size_t v148 = v146;
            }
            else {
              size_t v148 = v147;
            }
            uint64_t v5 = v191;
            if (!v206) {
              goto LABEL_356;
            }
            if (!v144) {
              goto LABEL_357;
            }
            uint64_t v12 = v77;
            int v93 = memcmp(v206, v144, v148);
            swift_release();
            swift_release();
          }
          sub_1B51DFE20(v11, v10, v9);
          unint64_t v141 = v217;
          uint64_t v114 = *(void *)&v223;
          goto LABEL_224;
        case 2uLL:
          uint64_t v200 = v12;
          uint64_t v82 = *(void *)(v27 + 16);
          unsigned int v83 = v9;
          double v84 = *(double *)v26;
          unint64_t v218 = *(void *)(v26 + 8);
          unsigned __int8 v227 = *(unsigned char *)(v26 + 16);
          sub_1B51DFDC4(v27, v28, v29);
          unsigned int v207 = v83;
          sub_1B51DFDC4(v11, v10, v83);
          swift_retain();
          swift_retain();
          uint64_t v85 = sub_1B5372268();
          if (v85)
          {
            uint64_t v86 = v85;
            uint64_t v87 = sub_1B5372298();
            if (__OFSUB__(v82, v87)) {
              goto LABEL_308;
            }
            v88 = (const void *)(v86 + v82 - v87);
          }
          else
          {
            v88 = 0;
          }
          uint64_t v12 = v200;
          sub_1B5372288();
          unsigned __int8 v13 = v230;
          if (!v232)
          {
            LOWORD(__s1[0]) = v11;
            BYTE2(__s1[0]) = BYTE2(v11);
            BYTE3(__s1[0]) = BYTE3(v11);
            BYTE4(__s1[0]) = v203;
            BYTE5(__s1[0]) = BYTE5(v11);
            BYTE6(__s1[0]) = BYTE6(v11);
            HIBYTE(__s1[0]) = HIBYTE(v11);
            LOWORD(__s1[1]) = v10;
            BYTE2(__s1[1]) = BYTE2(v10);
            BYTE3(__s1[1]) = BYTE3(v10);
            BYTE4(__s1[1]) = BYTE4(v10);
            BYTE5(__s1[1]) = BYTE5(v10);
            if (!v88) {
              goto LABEL_352;
            }
            int v131 = memcmp(v88, __s1, __n);
            swift_release();
            swift_release();
            sub_1B51DFE20(v11, v10, v207);
            uint64_t v132 = *(void *)&v84;
            uint64_t v9 = v207;
            unint64_t v133 = v218;
LABEL_211:
            sub_1B51DFE20(v132, v133, v227);
            if (!v131) {
              return (void *)v7;
            }
            goto LABEL_28;
          }
          if (v232 == 1)
          {
            if (v202 < v208) {
              goto LABEL_314;
            }
            swift_retain();
            v110 = (char *)sub_1B5372268();
            if (v110)
            {
              uint64_t v111 = sub_1B5372298();
              if (__OFSUB__(v208, v111)) {
                goto LABEL_335;
              }
              v110 += v208 - v111;
            }
            uint64_t v112 = sub_1B5372288();
            size_t v113 = v201;
            if (v112 < v201) {
              size_t v113 = v112;
            }
            if (!v88) {
              goto LABEL_346;
            }
            if (!v110) {
              goto LABEL_347;
            }
            int v93 = memcmp(v88, v110, v113);
            sub_1B51DFE20(v11, v10, v207);
            swift_release();
            swift_release();
            sub_1B51DFE20(v11, v10, v207);
            uint64_t v114 = *(void *)&v84;
            uint64_t v9 = v207;
          }
          else
          {
            uint64_t v190 = v5;
            uint64_t v134 = *(void *)(v11 + 16);
            uint64_t v135 = *(void *)(v11 + 24);
            swift_retain();
            swift_retain();
            v136 = (char *)sub_1B5372268();
            if (v136)
            {
              uint64_t v137 = sub_1B5372298();
              if (__OFSUB__(v134, v137)) {
                goto LABEL_334;
              }
              v136 += v134 - v137;
            }
            BOOL v59 = __OFSUB__(v135, v134);
            int64_t v138 = v135 - v134;
            if (v59) {
              goto LABEL_319;
            }
            uint64_t v139 = sub_1B5372288();
            if (v139 >= v138) {
              size_t v140 = v138;
            }
            else {
              size_t v140 = v139;
            }
            uint64_t v5 = v190;
            if (!v88) {
              goto LABEL_353;
            }
            uint64_t v12 = v200;
            if (!v136) {
              goto LABEL_354;
            }
            int v93 = memcmp(v88, v136, v140);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            sub_1B51DFE20(v11, v10, v207);
            uint64_t v114 = *(void *)&v84;
            uint64_t v9 = v207;
          }
          unint64_t v141 = v218;
LABEL_224:
          sub_1B51DFE20(v114, v141, v227);
          goto LABEL_225;
        case 3uLL:
          memset(__s1, 0, 14);
          if (!v232) {
            goto LABEL_137;
          }
          uint64_t v199 = v12;
          unint64_t v216 = v28;
          uint64_t v222 = v27;
          if (v232 != 1)
          {
            uint64_t v119 = v5;
            uint64_t v126 = *(void *)(v11 + 16);
            uint64_t v127 = *(void *)(v11 + 24);
            unsigned __int8 v228 = v29;
            sub_1B51DFDC4(v27, v28, v29);
            sub_1B51DFDC4(v11, v10, v9);
            swift_retain();
            swift_retain();
            v122 = (char *)sub_1B5372268();
            if (v122)
            {
              uint64_t v128 = sub_1B5372298();
              if (__OFSUB__(v126, v128)) {
                goto LABEL_333;
              }
              v122 += v126 - v128;
            }
            BOOL v59 = __OFSUB__(v127, v126);
            int64_t v124 = v127 - v126;
            if (v59) {
              goto LABEL_316;
            }
            uint64_t v125 = sub_1B5372288();
            if (!v122) {
              goto LABEL_351;
            }
            goto LABEL_191;
          }
          if (v202 < v208) {
            goto LABEL_313;
          }
          unsigned __int8 v72 = v29;
          sub_1B51DFDC4(v27, v28, v29);
          sub_1B51DFDC4(v11, v10, v9);
          uint64_t v89 = sub_1B5372268();
          if (!v89) {
            goto LABEL_345;
          }
          uint64_t v74 = v89;
          uint64_t v90 = sub_1B5372298();
          uint64_t v76 = v208 - v90;
          if (__OFSUB__(v208, v90)) {
            goto LABEL_318;
          }
          break;
        default:
          __s1[0] = *(void *)v26;
          LOWORD(__s1[1]) = v28;
          BYTE2(__s1[1]) = BYTE2(v28);
          BYTE3(__s1[1]) = BYTE3(v28);
          BYTE4(__s1[1]) = BYTE4(v28);
          BYTE5(__s1[1]) = BYTE5(v28);
          if (!v232)
          {
LABEL_137:
            __int16 __s2 = v11;
            char v234 = BYTE2(v11);
            char v235 = BYTE3(v11);
            char v236 = v203;
            char v237 = BYTE5(v11);
            char v238 = BYTE6(v11);
            char v239 = HIBYTE(v11);
            __int16 v240 = v10;
            char v241 = BYTE2(v10);
            char v242 = BYTE3(v10);
            char v243 = BYTE4(v10);
            char v244 = BYTE5(v10);
            if (!memcmp(__s1, &__s2, __n)) {
              return (void *)v7;
            }
            goto LABEL_28;
          }
          uint64_t v199 = v12;
          unint64_t v216 = v28;
          uint64_t v222 = v27;
          if (v232 != 1)
          {
            uint64_t v119 = v5;
            uint64_t v120 = *(void *)(v11 + 16);
            uint64_t v121 = *(void *)(v11 + 24);
            unsigned __int8 v228 = v29;
            sub_1B51DFDC4(v27, v28, v29);
            sub_1B51DFDC4(v11, v10, v9);
            swift_retain();
            swift_retain();
            v122 = (char *)sub_1B5372268();
            if (v122)
            {
              uint64_t v123 = sub_1B5372298();
              if (__OFSUB__(v120, v123)) {
                goto LABEL_332;
              }
              v122 += v120 - v123;
            }
            BOOL v59 = __OFSUB__(v121, v120);
            int64_t v124 = v121 - v120;
            if (v59) {
              goto LABEL_315;
            }
            uint64_t v125 = sub_1B5372288();
            if (!v122) {
              goto LABEL_350;
            }
LABEL_191:
            uint64_t v5 = v119;
            if (v125 >= v124) {
              size_t v129 = v124;
            }
            else {
              size_t v129 = v125;
            }
            int v130 = memcmp(__s1, v122, v129);
            swift_release();
            swift_release();
            sub_1B51DFE20(v11, v10, v9);
            sub_1B51DFE20(v222, v216, v228);
            uint64_t v12 = v199;
            unsigned __int8 v13 = v230;
            if (!v130) {
              return (void *)v7;
            }
            goto LABEL_28;
          }
          if (v202 < v208) {
            goto LABEL_312;
          }
          unsigned __int8 v72 = v29;
          sub_1B51DFDC4(v27, v28, v29);
          sub_1B51DFDC4(v11, v10, v9);
          uint64_t v73 = sub_1B5372268();
          if (!v73)
          {
            sub_1B5372288();
            __break(1u);
LABEL_345:
            sub_1B5372288();
            __break(1u);
LABEL_346:
            __break(1u);
LABEL_347:
            __break(1u);
LABEL_348:
            __break(1u);
LABEL_349:
            __break(1u);
LABEL_350:
            __break(1u);
LABEL_351:
            __break(1u);
LABEL_352:
            __break(1u);
LABEL_353:
            __break(1u);
LABEL_354:
            __break(1u);
LABEL_355:
            __break(1u);
LABEL_356:
            __break(1u);
LABEL_357:
            __break(1u);
LABEL_358:
            sub_1B5372288();
            __break(1u);
LABEL_359:
            sub_1B5372288();
            __break(1u);
LABEL_360:
            __break(1u);
LABEL_361:
            __break(1u);
LABEL_362:
            __break(1u);
LABEL_363:
            __break(1u);
LABEL_364:
            __break(1u);
LABEL_365:
            __break(1u);
LABEL_366:
            __break(1u);
LABEL_367:
            __break(1u);
LABEL_368:
            __break(1u);
LABEL_369:
            __break(1u);
LABEL_370:
            __break(1u);
LABEL_371:
            __break(1u);
            JUMPOUT(0x1B5234BCCLL);
          }
          uint64_t v74 = v73;
          uint64_t v75 = sub_1B5372298();
          uint64_t v76 = v208 - v75;
          if (__OFSUB__(v208, v75)) {
            goto LABEL_317;
          }
          break;
      }
      uint64_t v91 = sub_1B5372288();
      if (v91 >= v201) {
        size_t v92 = v201;
      }
      else {
        size_t v92 = v91;
      }
      int v93 = memcmp(__s1, (const void *)(v74 + v76), v92);
      sub_1B51DFE20(v11, v10, v9);
      sub_1B51DFE20(v222, v216, v72);
      uint64_t v12 = v199;
LABEL_225:
      unsigned __int8 v13 = v230;
      if (!v93) {
        return (void *)v7;
      }
LABEL_28:
      unint64_t v7 = (v7 + 1) & v12;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return (void *)v7;
}

unint64_t sub_1B5234C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B5373228() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unsigned __int8 v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B5373228() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B5234D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1B5234DD4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    uint64_t v10 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v86 = HIDWORD(a1) - (int)a1;
    uint64_t v87 = ~v5;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v85 = v11;
    unint64_t v88 = a2 >> 62;
    uint64_t v83 = v3 + 64;
    uint64_t v84 = (int)a1;
    uint64_t v81 = a1 >> 32;
    uint64_t v79 = (a1 >> 32) - (int)a1;
    unint64_t v89 = a2 >> 62;
    size_t __n = BYTE6(a2);
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_1B51D4BB8(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_122;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v89)
      {
        case 1uLL:
          size_t v18 = v86;
          if (v85) {
            goto LABEL_123;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_124;
        case 3uLL:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_119;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_119:
              sub_1B51D4C64(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_125;
                }
                uint64_t v26 = sub_1B5372268();
                if (v26)
                {
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_1B5372298();
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_127;
                  }
                  unsigned int v29 = (const void *)(v27 + (int)v14 - v28);
                }
                else
                {
                  unsigned int v29 = 0;
                }
                sub_1B5372288();
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v29) {
                    goto LABEL_155;
                  }
                  int v46 = memcmp(v29, __s1, __n);
LABEL_102:
                  sub_1B51D4C64(v14, v13);
                  uint64_t v10 = v87;
                  if (!v46) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_136;
                  }
                  swift_retain();
                  uint64_t v47 = sub_1B5372268();
                  if (v47)
                  {
                    uint64_t v48 = sub_1B5372298();
                    if (__OFSUB__(v84, v48)) {
                      goto LABEL_143;
                    }
                    v47 += v84 - v48;
                  }
                  uint64_t v49 = sub_1B5372288();
                  size_t v50 = v79;
                  if (v49 < v79) {
                    size_t v50 = v49;
                  }
                  if (!v29) {
                    goto LABEL_148;
                  }
                  if (!v47) {
                    goto LABEL_149;
                  }
                  size_t v39 = v50;
                  uint64_t v40 = v29;
                  unint64_t v38 = (const void *)v47;
LABEL_71:
                  int v46 = memcmp(v40, v38, v39);
                  sub_1B51D4C64(a1, v8);
                  goto LABEL_102;
                }
                uint64_t v69 = *(void *)(a1 + 16);
                uint64_t v78 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v70 = sub_1B5372268();
                if (v70)
                {
                  uint64_t v71 = v70;
                  uint64_t v72 = sub_1B5372298();
                  if (__OFSUB__(v69, v72)) {
                    goto LABEL_142;
                  }
                  uint64_t v73 = (const void *)(v71 + v69 - v72);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                if (__OFSUB__(v78, v69)) {
                  goto LABEL_137;
                }
                uint64_t v74 = sub_1B5372288();
                if (v74 >= v78 - v69) {
                  size_t v75 = v78 - v69;
                }
                else {
                  size_t v75 = v74;
                }
                if (!v29) {
                  goto LABEL_156;
                }
                uint64_t v4 = v83;
                if (!v73) {
                  goto LABEL_157;
                }
                int v62 = memcmp(v29, v73, v75);
LABEL_115:
                swift_release();
LABEL_116:
                swift_release();
                sub_1B51D4C64(v14, v13);
                unint64_t v8 = a2;
                uint64_t v10 = v87;
                if (!v62) {
                  return v6;
                }
                break;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_1B5372268();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_1B5372298();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_126;
                  }
                  uint64_t v34 = (const void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v34 = 0;
                }
                sub_1B5372288();
                uint64_t v4 = v83;
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LODWORD(__s1[1]) = a2;
                  WORD2(__s1[1]) = WORD2(a2);
                  if (!v34) {
                    goto LABEL_152;
                  }
                  int v62 = memcmp(v34, __s1, __n);
                  swift_release();
                  goto LABEL_116;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  BOOL v42 = (char *)sub_1B5372268();
                  if (v42)
                  {
                    uint64_t v43 = sub_1B5372298();
                    if (__OFSUB__(v84, v43)) {
                      goto LABEL_141;
                    }
                    v42 += v84 - v43;
                  }
                  uint64_t v44 = sub_1B5372288();
                  size_t v45 = v79;
                  if (v44 < v79) {
                    size_t v45 = v44;
                  }
                  if (!v34) {
                    goto LABEL_146;
                  }
                  if (!v42) {
                    goto LABEL_147;
                  }
                  int v46 = memcmp(v34, v42, v45);
                  unint64_t v8 = a2;
                  sub_1B51D4C64(a1, a2);
                  swift_release();
                  swift_release();
                  goto LABEL_102;
                }
                uint64_t v63 = *(void *)(a1 + 16);
                uint64_t v77 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = (char *)sub_1B5372268();
                if (v64)
                {
                  uint64_t v65 = sub_1B5372298();
                  if (__OFSUB__(v63, v65)) {
                    goto LABEL_140;
                  }
                  v64 += v63 - v65;
                }
                BOOL v21 = __OFSUB__(v77, v63);
                int64_t v66 = v77 - v63;
                if (v21) {
                  goto LABEL_135;
                }
                uint64_t v67 = sub_1B5372288();
                if (v67 >= v66) {
                  size_t v68 = v66;
                }
                else {
                  size_t v68 = v67;
                }
                if (!v34) {
                  goto LABEL_153;
                }
                uint64_t v4 = v83;
                if (!v64) {
                  goto LABEL_154;
                }
                int v62 = memcmp(v34, v64, v68);
                swift_release();
                swift_release();
                goto LABEL_115;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v88) {
                  goto LABEL_45;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_129;
                  }
                  sub_1B51D4BB8(a1, v8);
                  uint64_t v35 = sub_1B5372268();
                  if (!v35) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v35;
                  uint64_t v36 = sub_1B5372298();
                  uint64_t v25 = v84 - v36;
                  if (__OFSUB__(v84, v36)) {
                    goto LABEL_134;
                  }
LABEL_41:
                  uint64_t v37 = sub_1B5372288();
                  unint64_t v38 = (const void *)(v23 + v25);
                  if (v37 >= v79) {
                    size_t v39 = v79;
                  }
                  else {
                    size_t v39 = v37;
                  }
                  uint64_t v40 = __s1;
                  goto LABEL_71;
                }
                uint64_t v57 = *(void *)(a1 + 16);
                uint64_t v58 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                unsigned __int8 v53 = (char *)sub_1B5372268();
                if (v53)
                {
                  uint64_t v59 = sub_1B5372298();
                  if (__OFSUB__(v57, v59)) {
                    goto LABEL_139;
                  }
                  v53 += v57 - v59;
                }
                BOOL v21 = __OFSUB__(v58, v57);
                int64_t v55 = v58 - v57;
                if (v21) {
                  goto LABEL_132;
                }
                uint64_t v56 = sub_1B5372288();
                if (!v53) {
                  goto LABEL_151;
                }
LABEL_83:
                if (v56 >= v55) {
                  size_t v60 = v55;
                }
                else {
                  size_t v60 = v56;
                }
                int v61 = memcmp(__s1, v53, v60);
                swift_release();
                swift_release();
                sub_1B51D4C64(v14, v13);
                uint64_t v4 = v83;
                uint64_t v10 = v87;
                if (!v61) {
                  return v6;
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v88)
                {
LABEL_45:
                  __int16 __s2 = a1;
                  char v92 = BYTE2(a1);
                  char v93 = BYTE3(a1);
                  char v94 = v80;
                  char v95 = BYTE5(a1);
                  char v96 = BYTE6(a1);
                  char v97 = HIBYTE(a1);
                  __int16 v98 = v8;
                  char v99 = BYTE2(v8);
                  char v100 = BYTE3(v8);
                  char v101 = BYTE4(v8);
                  char v102 = BYTE5(v8);
                  int v41 = memcmp(__s1, &__s2, __n);
                  sub_1B51D4C64(v14, v13);
                  if (!v41) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_128;
                  }
                  sub_1B51D4BB8(a1, v8);
                  uint64_t v22 = sub_1B5372268();
                  if (!v22)
                  {
                    sub_1B5372288();
                    __break(1u);
LABEL_145:
                    sub_1B5372288();
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x1B5235740);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_1B5372298();
                  uint64_t v25 = v84 - v24;
                  if (__OFSUB__(v84, v24)) {
                    goto LABEL_133;
                  }
                  goto LABEL_41;
                }
                uint64_t v51 = *(void *)(a1 + 16);
                uint64_t v52 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                unsigned __int8 v53 = (char *)sub_1B5372268();
                if (v53)
                {
                  uint64_t v54 = sub_1B5372298();
                  if (__OFSUB__(v51, v54)) {
                    goto LABEL_138;
                  }
                  v53 += v51 - v54;
                }
                BOOL v21 = __OFSUB__(v52, v51);
                int64_t v55 = v52 - v51;
                if (v21) {
                  goto LABEL_131;
                }
                uint64_t v56 = sub_1B5372288();
                if (!v53) {
                  goto LABEL_150;
                }
                goto LABEL_83;
            }
          }
          else
          {
LABEL_7:
            sub_1B51D4C64(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v10;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

unint64_t sub_1B5235770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    BOOL v7 = BYTE6(a1) == 10;
    BOOL v8 = (a1 & 0xFFFFFFFFFFFFLL) == 0 && BYTE6(a1) == 10;
    if ((a1 & 0xFFFFFFFFFFFFLL) != 1) {
      BOOL v7 = 0;
    }
    while (1)
    {
      uint64_t v9 = (unsigned int *)(*(void *)(v2 + 48) + 8 * result);
      unint64_t v10 = *v9 | ((unint64_t)*((unsigned __int16 *)v9 + 2) << 32);
      switch(*((unsigned char *)v9 + 6))
      {
        case 1:
          if (BYTE6(a1) != 1) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 2:
          if (BYTE6(a1) == 2 && *(float *)v9 == *(float *)&a1) {
            return result;
          }
          goto LABEL_10;
        case 3:
          if (BYTE6(a1) != 3) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 4:
          if (BYTE6(a1) != 4) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 5:
          if (BYTE6(a1) == 5 && a1 == (unint64_t)*v9) {
            return result;
          }
          goto LABEL_10;
        case 6:
          if (BYTE6(a1) != 6) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 7:
          if (BYTE6(a1) == 7 && (v10 & 0xFFFFFFFFFFFFLL) == (a1 & 0xFFFFFFFFFFFFLL)) {
            return result;
          }
          goto LABEL_10;
        case 8:
          if (BYTE6(a1) != 8) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 9:
          if (BYTE6(a1) != 9) {
            goto LABEL_10;
          }
LABEL_9:
          if (*v9 != a1) {
            goto LABEL_10;
          }
          return result;
        case 0xA:
          if ((v10 & 0xFFFFFFFFFFFFLL) != 0)
          {
            if (v7) {
              return result;
            }
          }
          else if (v8)
          {
            return result;
          }
LABEL_10:
          unint64_t result = (result + 1) & v6;
          if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
            return result;
          }
          break;
        default:
          if (!BYTE6(a1) && ((a1 ^ ((*v9 & 1) == 0)) & 1) != 0) {
            return result;
          }
          goto LABEL_10;
      }
    }
  }
  return result;
}

unint64_t sub_1B523591C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    BOOL v7 = BYTE6(a1) == 10;
    BOOL v8 = (a1 & 0xFFFFFFFFFFFFLL) == 0 && BYTE6(a1) == 10;
    if ((a1 & 0xFFFFFFFFFFFFLL) != 1) {
      BOOL v7 = 0;
    }
    while (1)
    {
      uint64_t v9 = (unsigned int *)(*(void *)(v2 + 48) + 8 * result);
      unint64_t v10 = *v9 | ((unint64_t)*((unsigned __int16 *)v9 + 2) << 32);
      switch(*((unsigned char *)v9 + 6))
      {
        case 1:
          if (BYTE6(a1) != 1) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 2:
          if (BYTE6(a1) == 2 && *(float *)v9 == *(float *)&a1) {
            return result;
          }
          goto LABEL_10;
        case 3:
          if (BYTE6(a1) != 3) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 4:
          if (BYTE6(a1) != 4) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 5:
          if (BYTE6(a1) == 5 && a1 == (unint64_t)*v9) {
            return result;
          }
          goto LABEL_10;
        case 6:
          if (BYTE6(a1) != 6) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 7:
          if (BYTE6(a1) == 7 && (v10 & 0xFFFFFFFFFFFFLL) == (a1 & 0xFFFFFFFFFFFFLL)) {
            return result;
          }
          goto LABEL_10;
        case 8:
          if (BYTE6(a1) != 8) {
            goto LABEL_10;
          }
          goto LABEL_9;
        case 9:
          if (BYTE6(a1) != 9) {
            goto LABEL_10;
          }
LABEL_9:
          if (*v9 != a1) {
            goto LABEL_10;
          }
          return result;
        case 0xA:
          if ((v10 & 0xFFFFFFFFFFFFLL) != 0)
          {
            if (v7) {
              return result;
            }
          }
          else if (v8)
          {
            return result;
          }
LABEL_10:
          unint64_t result = (result + 1) & v6;
          if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
            return result;
          }
          break;
        default:
          if (!BYTE6(a1) && ((a1 ^ ((*v9 & 1) == 0)) & 1) != 0) {
            return result;
          }
          goto LABEL_10;
      }
    }
  }
  return result;
}

unint64_t sub_1B5235AC8(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1B5235B68(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1B5235C04(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v11 = *(void *)(v5 + 48);
    uint64_t v12 = (unint64_t *)(v11 + 32 * v8);
    unint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    unint64_t v15 = v12[2];
    unint64_t v16 = v12[3];
    unint64_t v17 = a1 >> 16;
    unint64_t v18 = a2 >> 16;
    BOOL v19 = v15 == a3 && v16 == a4;
    BOOL v20 = v19 && v13 >> 16 == v17;
    BOOL v21 = v20 && v14 >> 16 == v18;
    if (!v21 && (sub_1B53731E8() & 1) == 0)
    {
      uint64_t v22 = ~v7;
      do
      {
        unint64_t v8 = (v8 + 1) & v22;
        if (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        uint64_t v23 = (void *)(v11 + 32 * v8);
        BOOL v24 = v23[2] == a3 && v23[3] == a4;
        BOOL v25 = v24 && *v23 >> 16 == v17;
        BOOL v26 = v25 && v23[1] >> 16 == v18;
      }
      while (!v26 && (sub_1B53731E8() & 1) == 0);
    }
  }
  return v8;
}

unint64_t sub_1B5235D40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_1B5239850();
    id v7 = v6;
    char v8 = sub_1B5372468();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1B5372468();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

void *sub_1B5235E6C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B5236014()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 56) + 4 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(_DWORD *)(*(void *)(v4 + 56) + v16) = v17;
    unint64_t result = (void *)sub_1B51D4BB8(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

_DWORD *sub_1B52361C4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (_DWORD *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (_DWORD *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v27 = __clz(__rbit64(v25));
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = v27 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    __int16 v18 = *(_WORD *)(v17 + 4);
    int v19 = *(_DWORD *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 6);
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    __int16 v21 = *(_WORD *)(v20 + 4);
    int v22 = *(_DWORD *)v20;
    LOBYTE(v20) = *(unsigned char *)(v20 + 6);
    unint64_t result = (_DWORD *)(*(void *)(v4 + 48) + v16);
    *unint64_t result = v19;
    *((_WORD *)result + 2) = v18;
    *((unsigned char *)result + 6) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v16;
    *(_DWORD *)uint64_t v23 = v22;
    *(_WORD *)(v23 + 4) = v21;
    *(unsigned char *)(v23 + 6) = v20;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B5236384()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v26 = __clz(__rbit64(v24));
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = v26 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 8 * v15;
    __int16 v18 = *(_WORD *)(v17 + 4);
    int v19 = *(_DWORD *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 6);
    uint64_t v20 = 4 * v15;
    int v21 = *(_DWORD *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    *(_DWORD *)uint64_t v22 = v19;
    *(_WORD *)(v22 + 4) = v18;
    *(unsigned char *)(v22 + 6) = v17;
    *(_DWORD *)(*(void *)(v4 + 56) + v20) = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B5236530()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47918);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    unint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v21 = *(void *)v20;
    unint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    unsigned __int8 v24 = *(unsigned char *)(v17 + 16);
    unsigned __int8 v25 = *(unsigned char *)(v20 + 16);
    *(void *)uint64_t v23 = *(void *)v17;
    *(void *)(v23 + 8) = v19;
    *(unsigned char *)(v23 + 16) = v24;
    uint64_t v26 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v26 = v21;
    *(void *)(v26 + 8) = v22;
    *(unsigned char *)(v26 + 16) = v25;
    sub_1B51DFDC4(v18, v19, v24);
    unint64_t result = (void *)sub_1B51DFDC4(v21, v22, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B5236710()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E9D48210);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    __int16 v18 = *(_WORD *)(v17 + 4);
    int v19 = *(_DWORD *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 6);
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(_DWORD *)uint64_t v21 = v19;
    *(_WORD *)(v21 + 4) = v18;
    *(unsigned char *)(v21 + 6) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v20;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B52368CC()
{
  return sub_1B5236E3C(&qword_1E9D47EB0);
}

void *sub_1B52368D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48200);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 2 * v15;
    __int16 v17 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
    uint64_t v18 = 16 * v15;
    int v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(_WORD *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v21;
    v22[1] = v20;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B5236A88()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    uint64_t v19 = *(void *)(v17 + 16);
    uint64_t v18 = *(void *)(v17 + 24);
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v17;
    *(void *)(v22 + 16) = v19;
    *(void *)(v22 + 24) = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B5236C48()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1B5216CF4(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_1B5216C4C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B5236E30()
{
  return sub_1B5236E3C(&qword_1E9D481D8);
}

void *sub_1B5236E3C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B5373108();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 4 * v16;
    int v18 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v16);
    uint64_t v19 = 16 * v16;
    long long v20 = *(_OWORD *)(*(void *)(v3 + 56) + v19);
    *(_DWORD *)(*(void *)(v5 + 48) + v17) = v18;
    *(_OWORD *)(*(void *)(v5 + 56) + v19) = v20;
    unint64_t result = (void *)sub_1B51D4BB8(v20, *((unint64_t *)&v20 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1B5236FE4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47D98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    int v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B523718C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B5373108();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 56) + v16);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = *(_DWORD *)(*(void *)(v2 + 48) + v16);
    *(_DWORD *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B523731C(int a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1B5230694(a2, a3, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234DD4);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B5236014();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(_DWORD *)(v18[7] + 4 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1B5230D08(result, a4 & 1);
  uint64_t result = sub_1B5230694(a2, a3, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234DD4);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1B5373288();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  int64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  int64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *int64_t v20 = a2;
  v20[1] = a3;
  *(_DWORD *)(v18[7] + 4 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return sub_1B51D4BB8(a2, a3);
}

uint64_t sub_1B52374D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v7 = (void *)*v3;
  uint64_t v8 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v10 = sub_1B5230728(a2 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v11 = v7[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v7[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7] + 8 * v10;
      *(_WORD *)(v17 + 4) = WORD2(a1);
      *(_DWORD *)uint64_t v17 = a1;
      *(unsigned char *)(v17 + 6) = BYTE6(a1);
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B52361C4();
    goto LABEL_7;
  }
  sub_1B523100C(result, a3 & 1);
  uint64_t result = sub_1B5230728(v8);
  if ((v14 & 1) != (v18 & 1))
  {
LABEL_15:
    uint64_t result = sub_1B5373288();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_1B52331F0(v10, v8, a1 & 0xFFFFFFFFFFFFFFLL, v16);
}

uint64_t sub_1B5237604(int a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v7 = (void *)*v3;
  uint64_t v8 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v10 = sub_1B5230728(a2 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v11 = v7[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v7[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(_DWORD *)(v16[7] + 4 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B5236384();
    goto LABEL_7;
  }
  sub_1B5231460(result, a3 & 1);
  uint64_t result = sub_1B5230728(v8);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_15:
    uint64_t result = sub_1B5373288();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_1B5233260(v10, v8, a1, v16);
}

unint64_t sub_1B5237720(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v7 = (void *)*v3;
  uint64_t v8 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v10 = sub_1B5230798(a2 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v11 = v7[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v7[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1B5236710();
    goto LABEL_7;
  }
  sub_1B5231BF8(v13, a3 & 1);
  unint64_t v19 = sub_1B5230798(v8);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_1B5373288();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_1B52332B8(v10, v8, a1, v16);
}

uint64_t sub_1B5237848(uint64_t a1, uint64_t a2, int a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1B5230808(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B5236E3C(&qword_1E9D47EB0);
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 16 * v12;
      uint64_t result = sub_1B51D4C64(*(void *)v19, *(void *)(v19 + 8));
      *(void *)uint64_t v19 = a1;
      *(void *)(v19 + 8) = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    *uint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1B523295C(result, a4 & 1, &qword_1E9D47EB0);
  uint64_t result = sub_1B5230808(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1B5373288();
  __break(1u);
  return result;
}

_OWORD *sub_1B5237998(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1B5230694(a2, a3, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234C54);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1B5236C48();
      goto LABEL_7;
    }
    sub_1B5232650(v15, a4 & 1);
    uint64_t v21 = sub_1B5230694(a2, a3, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B5234C54);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1B5373288();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_1B5216C4C(a1, v19);
  }
LABEL_13:
  sub_1B52333A8(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1B5237B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1B5373308();
  if (v3)
  {
    uint64_t v5 = (unsigned char *)(a2 + 48);
    do
    {
      uint64_t v7 = *((void *)v5 - 2);
      if (*v5)
      {
        if (*v5 == 1)
        {
          uint64_t v6 = *((void *)v5 - 1);
          sub_1B5373308();
          swift_bridgeObjectRetain();
          sub_1B5372828();
          uint64_t result = sub_1B52390C4(v7, v6, 1);
        }
        else
        {
LABEL_7:
          sub_1B5373308();
LABEL_8:
          uint64_t result = sub_1B5373308();
        }
      }
      else
      {
        sub_1B5373308();
        switch(BYTE6(v7))
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
          case 8:
          case 9:
            sub_1B5373308();
            uint64_t result = sub_1B5373338();
            break;
          case 5:
            goto LABEL_7;
          case 7:
            sub_1B5373308();
            sub_1B5373338();
            uint64_t result = sub_1B5373328();
            break;
          case 0xA:
            goto LABEL_8;
          default:
            sub_1B5373308();
            uint64_t result = sub_1B5373318();
            break;
        }
      }
      v5 += 24;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1B5237D00(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1B51E0D0C(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1B5237D98(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6) {
      return sub_1B522D004(a1 & 0xFFFFFFFFFFFFFFLL, a4 & 0xFFFFFFFFFFFFFFLL);
    }
    return 0;
  }
  if (a3 == 1)
  {
    if (a6 == 1)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      else {
        return sub_1B5373228();
      }
    }
    return 0;
  }
  return a6 == 2 && a1 == a4;
}

uint64_t _s10FontParser15PSObjectLocatorV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  if (!a3)
  {
    if (!a7 && sub_1B522D004(a1 & 0xFFFFFFFFFFFFFFLL, a5 & 0xFFFFFFFFFFFFFFLL)) {
      goto LABEL_13;
    }
    return 0;
  }
  if (a3 != 1)
  {
    if (a7 == 2 && a1 == a5) {
      goto LABEL_13;
    }
    return 0;
  }
  if (a7 != 1 || (a1 != a5 || a2 != a6) && (sub_1B5373228() & 1) == 0) {
    return 0;
  }
LABEL_13:
  return sub_1B526F2DC(a4, a8);
}

unint64_t sub_1B5237ECC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481B8);
  uint64_t v3 = (void *)sub_1B5373138();
  int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1B5230808(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    long long v12 = v8 + 2;
    int v4 = *((_DWORD *)v8 - 2);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1B5230808(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1B5237FD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481F8);
    uint64_t v3 = (void *)sub_1B5373138();
    for (unint64_t i = (int *)(a1 + 40); ; i += 3)
    {
      unint64_t v5 = *(i - 2) | ((unint64_t)*((unsigned __int16 *)i - 2) << 32);
      uint64_t v6 = *((unsigned __int8 *)i - 2);
      int v7 = *i;
      unint64_t result = sub_1B5230728(v5 | (v6 << 48));
      if (v9) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v10 = v3[6] + 8 * result;
      *(_WORD *)(v10 + 4) = WORD2(v5);
      *(_DWORD *)uint64_t v10 = v5;
      *(unsigned char *)(v10 + 6) = v6;
      *(_DWORD *)(v3[7] + 4 * result) = v7;
      uint64_t v11 = v3[2];
      BOOL v12 = __OFADD__(v11, 1);
      uint64_t v13 = v11 + 1;
      if (v12) {
        goto LABEL_10;
      }
      v3[2] = v13;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1B52380C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481F0);
    uint64_t v3 = (void *)sub_1B5373138();
    for (unint64_t i = (char *)(a1 + 46); ; i += 16)
    {
      unint64_t v5 = *(unsigned int *)(i - 14) | ((unint64_t)*((unsigned __int16 *)i - 5) << 32);
      uint64_t v6 = *(i - 8);
      uint64_t v7 = *((unsigned __int16 *)i - 1);
      uint64_t v8 = *(unsigned int *)(i - 6);
      char v9 = *i;
      unint64_t result = sub_1B5230728(v5 | (v6 << 48));
      if (v11) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v12 = v3[6] + 8 * result;
      *(_WORD *)(v12 + 4) = WORD2(v5);
      *(_DWORD *)uint64_t v12 = v5;
      *(unsigned char *)(v12 + 6) = v6;
      uint64_t v13 = v3[7] + 8 * result;
      *(_WORD *)(v13 + 4) = (v8 | (unint64_t)(v7 << 32)) >> 32;
      *(_DWORD *)uint64_t v13 = v8;
      *(unsigned char *)(v13 + 6) = v9;
      uint64_t v14 = v3[2];
      BOOL v15 = __OFADD__(v14, 1);
      uint64_t v16 = v14 + 1;
      if (v15) {
        goto LABEL_10;
      }
      v3[2] = v16;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1B52381E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1E9D48210);
  uint64_t v3 = (void *)sub_1B5373138();
  unint64_t v4 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int16 *)(a1 + 36) << 32);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 38);
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t result = sub_1B5230798(v4 | (v5 << 48));
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v9 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = v3[6] + 8 * result;
    *(_WORD *)(v10 + 4) = WORD2(v4);
    *(_DWORD *)uint64_t v10 = v4;
    *(unsigned char *)(v10 + 6) = v5;
    *(void *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 2;
    unint64_t v4 = *((unsigned int *)v9 - 2) | ((unint64_t)*((unsigned __int16 *)v9 - 2) << 32);
    uint64_t v5 = *((unsigned __int8 *)v9 - 2);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1B5230798(v4 | (v5 << 48));
    char v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1B523831C(uint64_t a1)
{
  return sub_1B5238334(a1, &qword_1E9D48208);
}

unint64_t sub_1B5238328(uint64_t a1)
{
  return sub_1B5238334(a1, &qword_1E9D481C8);
}

unint64_t sub_1B5238334(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    unint64_t v4 = (void *)sub_1B5373138();
    for (unint64_t i = (unsigned char *)(a1 + 40); ; i += 16)
    {
      uint64_t v6 = *((void *)i - 1);
      char v7 = *i;
      unint64_t result = sub_1B5230620(v6);
      if (v9) {
        break;
      }
      *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v4[6] + 8 * result) = v6;
      *(unsigned char *)(v4[7] + result) = v7;
      uint64_t v10 = v4[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v4[2] = v12;
      if (!--v2) {
        return (unint64_t)v4;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1B5238408(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47EB0);
  uint64_t v3 = (void *)sub_1B5373138();
  int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  unint64_t result = sub_1B5230808(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x1E4FBC868];
  }
  char v9 = (unint64_t *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    uint64_t v10 = (uint64_t *)(v3[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    sub_1B51D4BB8(v5, v6);
    if (!--v1) {
      return (unint64_t)v3;
    }
    int v4 = *((_DWORD *)v9 - 4);
    uint64_t v5 = *(v9 - 1);
    unint64_t v6 = *v9;
    unint64_t result = sub_1B5230808(v4);
    v9 += 3;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1B523850C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48200);
  uint64_t v3 = (void *)sub_1B5373138();
  unsigned __int16 v4 = *(_WORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_1B5230870(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_WORD *)(v3[6] + 2 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    char v14 = v9 + 3;
    unsigned __int16 v4 = *((_WORD *)v9 - 8);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1B5230870(v4);
    char v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1B523861C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481C0);
    uint64_t v3 = (void *)sub_1B5373138();
    for (unint64_t i = (int *)(a1 + 36); ; i += 2)
    {
      unsigned int v5 = *(i - 1);
      int v6 = *i;
      unint64_t result = sub_1B52308DC(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 4 * result;
      *(_DWORD *)(v3[6] + v9) = v5;
      *(_DWORD *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1B52386F4(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    unint64_t result = (unint64_t)sub_1B51E85E8((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  unint64_t result = v4 + 32 + 8 * v6;
  char v14 = (const void *)(v4 + 32 + 8 * a2);
  size_t v15 = 8 * v13;
  if (8 * v6 != 8 * a2 || result >= (unint64_t)v14 + v15) {
    unint64_t result = (unint64_t)memmove((void *)result, v14, v15);
  }
  uint64_t v16 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v16, v8);
  uint64_t v17 = v16 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v17;
LABEL_20:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B5238804(uint64_t result, int64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1B51E85F4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  unint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  size_t v15 = &v4[16 * a2 + 32];
  if (v6 != a2 || &v4[16 * v6 + 32] >= &v15[16 * v14]) {
    unint64_t result = (uint64_t)memmove(&v4[16 * v6 + 32], v15, 16 * v14);
  }
  uint64_t v16 = *((void *)v4 + 2);
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    *((void *)v4 + 2) = v17;
LABEL_19:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1B523891C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1B521CE90(0, v1, 0);
    uint64_t v2 = v14;
    unint64_t v4 = (unsigned __int8 *)(a1 + 38);
    do
    {
      uint64_t v5 = sub_1B522F83C(*(unsigned int *)(v4 - 6) | ((unint64_t)*((unsigned __int16 *)v4 - 1) << 32) | ((unint64_t)*v4 << 48));
      uint64_t v7 = v6;
      char v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1B521CE90((char *)(v10 > 1), v11 + 1, 1);
      }
      v4 += 8;
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 24 * v11;
      *(void *)(v12 + 32) = v5;
      *(void *)(v12 + 40) = v7;
      *(unsigned char *)(v12 + 48) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_1B5238A20(uint64_t a1, void *(*a2)(long long *__return_ptr, unint64_t, unint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return (void *)v3;
  }
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1B521CE70(0, v2, 0);
  uint64_t v3 = v36;
  unint64_t result = (void *)sub_1B5281310(a1);
  uint64_t v7 = (uint64_t)result;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  int64_t v27 = v2;
  int v28 = v6;
  uint64_t v29 = a1 + 64;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v7 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_24;
    }
    uint64_t v31 = v8;
    unint64_t result = a2(&v32, *(unsigned int *)(*(void *)(a1 + 48) + 8 * v7) | ((unint64_t)*(unsigned __int16 *)(*(void *)(a1 + 48) + 8 * v7 + 4) << 32) | ((unint64_t)*(unsigned __int8 *)(*(void *)(a1 + 48) + 8 * v7 + 6) << 48), *(unsigned int *)(*(void *)(a1 + 56) + 8 * v7) | ((unint64_t)*(unsigned __int16 *)(*(void *)(a1 + 56) + 8 * v7 + 4) << 32) | ((unint64_t)*(unsigned __int8 *)(*(void *)(a1 + 56) + 8 * v7 + 6) << 48));
    long long v13 = v32;
    char v14 = v33;
    long long v15 = v34;
    char v16 = v35;
    uint64_t v36 = v3;
    unint64_t v18 = *(void *)(v3 + 16);
    unint64_t v17 = *(void *)(v3 + 24);
    if (v18 >= v17 >> 1)
    {
      long long v25 = v34;
      long long v26 = v32;
      unint64_t result = sub_1B521CE70((void *)(v17 > 1), v18 + 1, 1);
      long long v15 = v25;
      long long v13 = v26;
      uint64_t v3 = v36;
    }
    *(void *)(v3 + 16) = v18 + 1;
    uint64_t v19 = v3 + 48 * v18;
    *(_OWORD *)(v19 + 32) = v13;
    *(unsigned char *)(v19 + 48) = v14;
    *(_OWORD *)(v19 + 56) = v15;
    *(unsigned char *)(v19 + 72) = v16;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v7 >= v10) {
      goto LABEL_25;
    }
    uint64_t v9 = a1 + 64;
    uint64_t v20 = *(void *)(v29 + 8 * v12);
    if ((v20 & (1 << v7)) == 0) {
      goto LABEL_26;
    }
    int v6 = v28;
    if (*(_DWORD *)(a1 + 36) != v28) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v7 & 0x3F));
    if (v21)
    {
      int64_t v10 = __clz(__rbit64(v21)) | v7 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v27;
    }
    else
    {
      unint64_t v22 = v12 + 1;
      unint64_t v23 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v27;
      if (v12 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v29 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v12)
          {
            unint64_t v24 = *(void *)(a1 + 80 + 8 * v12++);
            if (v24)
            {
              unint64_t v22 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v8 = v31 + 1;
    uint64_t v7 = v10;
    if (v31 + 1 == v11) {
      return (void *)v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B5238C94(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = (unsigned __int8 *)(a1 + 72);
    do
    {
      uint64_t v7 = *(v5 - 24);
      unsigned __int8 v8 = *v5;
      uint64_t v10 = *((void *)v5 - 2);
      unint64_t v9 = *((void *)v5 - 1);
      uint64_t v11 = *((void *)v5 - 5);
      unint64_t v12 = *((void *)v5 - 4);
      sub_1B51DFDC4(v11, v12, *(v5 - 24));
      sub_1B51DFDC4(v10, v9, v8);
      if (v7 > 0xFD) {
        break;
      }
      uint64_t v30 = v4;
      unint64_t v31 = v9;
      unsigned __int8 v32 = v8;
      long long v13 = (void *)*a3;
      unint64_t v15 = (unint64_t)sub_1B5230568(v11, v12, v7);
      uint64_t v16 = v13[2];
      BOOL v17 = (v14 & 1) == 0;
      uint64_t v18 = v16 + v17;
      if (__OFADD__(v16, v17))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        uint64_t result = sub_1B5373288();
        __break(1u);
        return result;
      }
      char v19 = v14;
      if (v13[3] >= v18)
      {
        if ((a2 & 1) == 0) {
          sub_1B5236530();
        }
      }
      else
      {
        sub_1B523188C(v18, a2 & 1);
        uint64_t v20 = sub_1B5230568(v11, v12, v7);
        if ((v19 & 1) != (v21 & 1)) {
          goto LABEL_18;
        }
        unint64_t v15 = (unint64_t)v20;
      }
      unint64_t v22 = (void *)*a3;
      if (v19)
      {
        sub_1B51DFE20(v11, v12, v7);
        uint64_t v6 = v22[7] + 24 * v15;
        sub_1B51DFE20(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
        *(void *)uint64_t v6 = v10;
        *(void *)(v6 + 8) = v31;
        *(unsigned char *)(v6 + 16) = v32;
      }
      else
      {
        v22[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v23 = v22[6] + 24 * v15;
        *(void *)uint64_t v23 = v11;
        *(void *)(v23 + 8) = v12;
        *(unsigned char *)(v23 + 16) = v7;
        uint64_t v24 = v22[7] + 24 * v15;
        *(void *)uint64_t v24 = v10;
        *(void *)(v24 + 8) = v31;
        *(unsigned char *)(v24 + 16) = v32;
        uint64_t v25 = v22[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_17;
        }
        v22[2] = v27;
      }
      v5 += 48;
      a2 = 1;
      uint64_t v4 = v30 - 1;
    }
    while (v30 != 1);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B5238E9C(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)sub_1B51E8DB8((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + 8 * v6;
  char v14 = (const void *)(v4 + 32 + 8 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 8 * v13) {
    uint64_t result = (unint64_t)memmove((void *)result, v14, 8 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *int64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1B5238FA4(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)sub_1B51E85A0((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + 4 * v6;
  char v14 = (const void *)(v4 + 32 + 4 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 4 * v13) {
    uint64_t result = (unint64_t)memmove((void *)result, v14, 4 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *int64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B52390AC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B52390C4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B52390E0()
{
  unint64_t result = qword_1E9D48180;
  if (!qword_1E9D48180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48180);
  }
  return result;
}

unint64_t sub_1B5239138()
{
  unint64_t result = qword_1E9D48188;
  if (!qword_1E9D48188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48188);
  }
  return result;
}

unint64_t sub_1B5239190()
{
  unint64_t result = qword_1E9D48190;
  if (!qword_1E9D48190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48190);
  }
  return result;
}

unint64_t sub_1B52391E8()
{
  unint64_t result = qword_1E9D48198;
  if (!qword_1E9D48198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48198);
  }
  return result;
}

unint64_t sub_1B5239240()
{
  unint64_t result = qword_1E9D481A0;
  if (!qword_1E9D481A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D481A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PSInterpreterExitReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PSInterpreterExitReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B52393F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PSInterpreterExitReason()
{
  return &type metadata for PSInterpreterExitReason;
}

ValueMetadata *type metadata accessor for PSFontKey()
{
  return &type metadata for PSFontKey;
}

uint64_t destroy for PSObjectLocator(uint64_t a1)
{
  sub_1B52390C4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PSObjectLocator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1B52390AC(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PSObjectLocator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1B52390AC(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1B52390C4(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PSObjectLocator(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1B52390C4(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Format0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Format0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PSObjectLocator()
{
  return &type metadata for PSObjectLocator;
}

uint64_t destroy for PSObjectLocator.Component(uint64_t a1)
{
  return sub_1B52390C4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s10FontParser15PSObjectLocatorV9ComponentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B52390AC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PSObjectLocator.Component(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B52390AC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B52390C4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PSObjectLocator.Component(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B52390C4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PSObjectLocator.Component(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PSObjectLocator.Component(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B52397D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1B52397E0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PSObjectLocator.Component()
{
  return &type metadata for PSObjectLocator.Component;
}

unint64_t sub_1B52397FC()
{
  unint64_t result = qword_1E9D481A8;
  if (!qword_1E9D481A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D481A8);
  }
  return result;
}

unint64_t sub_1B5239850()
{
  unint64_t result = qword_1E9D47DA0;
  if (!qword_1E9D47DA0)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D47DA0);
  }
  return result;
}

unint64_t sub_1B52398A8(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    unint64_t result = (unint64_t)sub_1B51E7F50((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  unint64_t result = v4 + 32 + 8 * v6;
  char v14 = (const void *)(v4 + 32 + 8 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 8 * v13) {
    unint64_t result = (unint64_t)memmove((void *)result, v14, 8 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *unint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1B52399B0(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    unint64_t result = (unint64_t)sub_1B51E943C((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  unint64_t result = v4 + 32 + 4 * v6;
  char v14 = (const void *)(v4 + 32 + 4 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 4 * v13) {
    unint64_t result = (unint64_t)memmove((void *)result, v14, 4 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *unint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B5239AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  int64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1B5239B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v5 = sub_1B522F83C(a1 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t result = sub_1B522F83C(v4);
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 16) = v9;
  *(void *)(a3 + 24) = result;
  *(void *)(a3 + 32) = v11;
  *(unsigned char *)(a3 + 40) = v12;
  return result;
}

uint64_t SmallSequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  return sub_1B523ADD8((uint64_t)v6, *(void *)(a1 + 16), a2);
}

uint64_t SmallSequenceIterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v46 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](a1);
  char v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B5372CD8();
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v17 = MEMORY[0x1F4188790](v16);
  char v19 = (uint64_t *)((char *)&v42 - v18);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v42 - v18, v3, a1, v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, a1);
      uint64_t v23 = (char *)v19 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v24 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v6 + 32);
      uint64_t v25 = v46;
      v24(v46, v19, v5);
      v24(v3, (uint64_t *)v23, v5);
      swift_storeEnumTagMultiPayload();
      char v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v22 = v25;
      goto LABEL_5;
    case 2u:
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, a1);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v27 = (char *)v19 + *(int *)(TupleTypeMetadata3 + 48);
      int v28 = (char *)v19 + *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v29 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v6 + 32);
      uint64_t v30 = v46;
      v29(v46, v19, v5);
      v29(v3, (uint64_t *)v27, v5);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v29(v3 + *(int *)(TupleTypeMetadata2 + 48), (uint64_t *)v28, v5);
      swift_storeEnumTagMultiPayload();
      char v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v22 = v30;
      goto LABEL_5;
    case 3u:
      char v33 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      uint64_t v43 = v3;
      v33(v3, a1);
      uint64_t v34 = *v19;
      uint64_t v35 = v19[1];
      if (v35 != MEMORY[0x1BA998390](v34, v5))
      {
        LODWORD(v42) = sub_1B5372A98();
        sub_1B5372A48();
        if (v42)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v34+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v35, v5);
          uint64_t v37 = v34;
        }
        else
        {
          uint64_t v42 = v35;
          uint64_t v41 = sub_1B5372FA8();
          if (v7 != 8) {
            goto LABEL_22;
          }
          uint64_t v47 = v41;
          (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))(v8, &v47, v5);
          swift_unknownObjectRelease();
          uint64_t v37 = v34;
          uint64_t v35 = v42;
        }
        uint64_t v38 = v43;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v5);
        if (!__OFADD__(v35++, 1))
        {
          uint64_t v36 = 0;
          goto LABEL_15;
        }
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x1B523A280);
      }
      uint64_t v36 = 1;
      uint64_t v37 = v34;
      uint64_t v38 = v43;
LABEL_15:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, v36, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        *uint64_t v15 = v37;
        v15[1] = v35;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void *, uint64_t))(v12 + 32))(v38, v15, a1);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))(v46, v11, v45);
    case 4u:
      char v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v22 = v46;
      uint64_t v32 = 1;
      return v21(v22, v32, 1, v5);
    default:
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, a1);
      uint64_t v20 = v46;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v6 + 32))(v46, v19, v5);
      swift_storeEnumTagMultiPayload();
      char v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v22 = v20;
LABEL_5:
      uint64_t v32 = 0;
      return v21(v22, v32, 1, v5);
  }
}

uint64_t SmallSequence.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (void *)((char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *, double))(v7 + 16))(v6, v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = (char *)v6 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v13 = *(void *)(v11 - 8);
      (*(void (**)(uint64_t, void *, uint64_t))(v13 + 32))(a2, v6, v11);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v11);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v12, v11);
      break;
    case 2u:
      uint64_t v14 = *(void *)(a1 + 16);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v16 = (char *)v6 + *(int *)(TupleTypeMetadata3 + 48);
      double v17 = (char *)v6 + *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v18 = *(void *)(v14 - 8);
      (*(void (**)(uint64_t, void *, uint64_t))(v18 + 32))(a2, v6, v14);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a2, 0, 1, v14);
      char v19 = *(void (**)(char *, uint64_t))(v18 + 8);
      v19(v17, v14);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v16, v14);
      break;
    case 3u:
      v20[1] = *v6;
      sub_1B5372AE8();
      swift_getWitnessTable();
      sub_1B5372C28();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4u:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 1, 1);
      break;
    default:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(v8 - 8);
      (*(void (**)(uint64_t, void *, uint64_t))(v9 + 32))(a2, v6, v8);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
      break;
  }
  return result;
}

uint64_t SmallSequence.count.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  double v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v2 + 16))(v5, v3);
  uint64_t v6 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = *(void *)(a1 + 16);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v9 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
      v9(&v5[*(int *)(TupleTypeMetadata2 + 48)], v7);
      v9(v5, v7);
      uint64_t v6 = 2;
      break;
    case 2u:
      uint64_t v10 = *(void *)(a1 + 16);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v12 = &v5[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v13 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
      v13(&v5[*(int *)(TupleTypeMetadata3 + 64)], v10);
      v13(v12, v10);
      v13(v5, v10);
      uint64_t v6 = 3;
      break;
    case 3u:
      uint64_t v6 = MEMORY[0x1BA998370](*(void *)v5, *(void *)(a1 + 16));
      swift_bridgeObjectRelease();
      break;
    case 4u:
      return v6;
    default:
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
      uint64_t v6 = 1;
      break;
  }
  return v6;
}

uint64_t SmallSequence.append(_:)(char *a1, uint64_t a2)
{
  double v3 = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v41 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v47 = (uint64_t *)((char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (uint64_t *)((char *)&v41 - v22);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t, double))(v17 + 32);
  v46((char *)&v41 - v22, v3, a2, v21);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = (char *)v23 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      BOOL v26 = *(void (**)(char *, uint64_t *, uint64_t))(v7 + 32);
      v26(v3, v23, v6);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v26(&v3[*(int *)(TupleTypeMetadata3 + 48)], (uint64_t *)v25, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v3[*(int *)(TupleTypeMetadata3 + 64)], a1, v6);
      return swift_storeEnumTagMultiPayload();
    case 2u:
      uint64_t v28 = swift_getTupleTypeMetadata3();
      uint64_t v42 = (uint64_t)v23 + *(int *)(v28 + 48);
      uint64_t v43 = (char *)v23 + *(int *)(v28 + 64);
      uint64_t v44 = a1;
      uint64_t v29 = v15;
      uint64_t v45 = v15;
      uint64_t v30 = v12;
      unint64_t v31 = *(void (**)(char *, uint64_t *, uint64_t))(v7 + 32);
      v31(v29, v23, v6);
      v31(v30, (uint64_t *)v42, v6);
      v31(v9, (uint64_t *)v43, v6);
      sub_1B523B27C(v6, v6);
      uint64_t v32 = *(void *)(v7 + 72);
      swift_allocObject();
      uint64_t v42 = sub_1B5372A38();
      uint64_t v43 = v3;
      uint64_t v34 = v33;
      uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
      v35(v33, v45, v6);
      v35(v34 + v32, v30, v6);
      uint64_t v41 = v9;
      v35(v34 + 2 * v32, v9, v6);
      v35(v34 + 3 * v32, v44, v6);
      uint64_t v48 = v42;
      uint64_t v36 = sub_1B5372AE8();
      nullsub_1(v36);
      uint64_t v37 = v48;
      uint64_t v38 = *(void (**)(char *, uint64_t))(v7 + 8);
      v38(v41, v6);
      v38(v30, v6);
      v38(v45, v6);
      size_t v39 = v47;
      *uint64_t v47 = v37;
      swift_storeEnumTagMultiPayload();
      return ((uint64_t (*)(char *, uint64_t *, uint64_t))v46)(v43, v39, a2);
    case 3u:
      uint64_t v48 = *v23;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, a1, v6);
      sub_1B5372AE8();
      sub_1B5372AC8();
      *(void *)double v3 = v48;
      return swift_storeEnumTagMultiPayload();
    case 4u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, a1, v6);
      return swift_storeEnumTagMultiPayload();
    default:
      uint64_t v24 = &v3[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v3, v23, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v24, a1, v6);
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1B523ADD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SmallSequenceIterator();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v24 - v8);
  uint64_t v10 = type metadata accessor for SmallSequence();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v24 - v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v24 - v13, a1, v10, v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v16 = (char *)v14 + *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(a2 - 8) + 32);
      v17(a3, v14, a2);
      v17(a3 + *(int *)(TupleTypeMetadata2 + 48), (uint64_t *)v16, a2);
      return swift_storeEnumTagMultiPayload();
    case 2u:
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v19 = (char *)v14 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v20 = (char *)v14 + *(int *)(TupleTypeMetadata3 + 64);
      double v21 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(a2 - 8) + 32);
      v21(a3, v14, a2);
      v21(a3 + *(int *)(TupleTypeMetadata3 + 48), (uint64_t *)v19, a2);
      v21(a3 + *(int *)(TupleTypeMetadata3 + 64), (uint64_t *)v20, a2);
      return swift_storeEnumTagMultiPayload();
    case 3u:
      uint64_t v22 = *v14;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      *uint64_t v9 = v22;
      v9[1] = 0;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v7 + 32))(a3, v9, v6);
    case 4u:
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      return swift_storeEnumTagMultiPayload();
    default:
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v14, a2);
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1B523B1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  SmallSequence.makeIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_1B523B208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B523E530(v2, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  return v4;
}

uint64_t sub_1B523B27C(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48318);
  }
  else
  {
    return MEMORY[0x1F4185768](0, a2);
  }
}

uint64_t sub_1B523B2EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B523B308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B523CBC0(a1, a2, a3, MEMORY[0x1E4FBAD80] + 64);
}

void *sub_1B523B318(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v9) & ~v9) + v7;
  if (v11 <= v7) {
    unint64_t v12 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v12 = ((v7 + v8) & ~(unint64_t)v8) + v7;
  }
  unint64_t v13 = ((v11 + v8) & ~(unint64_t)v8) + v7;
  if (v13 <= v12) {
    unint64_t v13 = v12;
  }
  if (v13 <= 8) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = v13;
  }
  size_t v15 = v14 + 1;
  if (v8 > 7u || (v8 & 0x100000) != 0 || v15 > 0x18)
  {
    uint64_t v18 = *(void *)__src;
    *uint64_t v4 = *(void *)__src;
    uint64_t v4 = (void *)(v18 + ((v8 & 0xF8 ^ 0x1F8u) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v20 = __src[v14];
    unsigned int v21 = v20 - 4;
    if (v20 >= 4)
    {
      if (v14 <= 3) {
        uint64_t v22 = v14;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *__src;
          goto LABEL_28;
        case 2:
          int v23 = *(unsigned __int16 *)__src;
          goto LABEL_28;
        case 3:
          int v23 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_28;
        case 4:
          int v23 = *(_DWORD *)__src;
LABEL_28:
          int v24 = (v23 | (v21 << (8 * v14))) + 4;
          unsigned int v20 = v23 + 4;
          if (v14 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v25 = ~v9;
    switch(v20)
    {
      case 0u:
        (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
        *((unsigned char *)v4 + v14) = 0;
        break;
      case 1u:
        BOOL v26 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
        v26(__dst, __src, v5);
        v26((unsigned char *)(((unint64_t)v4 + v10) & v25), (unsigned __int8 *)((unint64_t)&__src[v10] & v25), v5);
        *((unsigned char *)v4 + v14) = 1;
        break;
      case 2u:
        uint64_t v27 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
        v27(__dst, __src, v5);
        unint64_t v28 = (unint64_t)&__src[v10] & v25;
        v27((unsigned char *)(((unint64_t)v4 + v10) & v25), (unsigned __int8 *)v28, v5);
        v27((unsigned char *)((v10 + (((unint64_t)v4 + v10) & v25)) & v25), (unsigned __int8 *)((v10 + v28) & v25), v5);
        *((unsigned char *)v4 + v14) = 2;
        break;
      case 3u:
        *(void *)__dst = *(void *)__src;
        __dst[v14] = 3;
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(__dst, __src, v15);
        break;
    }
  }
  return v4;
}

unsigned __int8 *sub_1B523B5EC(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = v5 + v6;
  unint64_t v8 = ((v5 + v6) & ~v6) + v5;
  if (v8 <= v5) {
    unint64_t v9 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v9 = ((v5 + v6) & ~v6) + v5;
  }
  unint64_t v10 = ((v8 + v6) & ~v6) + v5;
  if (v10 <= v9) {
    unint64_t v10 = v9;
  }
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  unsigned int v11 = result[v10];
  unsigned int v12 = v11 - 4;
  if (v11 >= 4)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *result;
        goto LABEL_17;
      case 2:
        int v14 = *(unsigned __int16 *)result;
        goto LABEL_17;
      case 3:
        int v14 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_17;
      case 4:
        int v14 = *(_DWORD *)result;
LABEL_17:
        int v15 = (v14 | (v12 << (8 * v10))) + 4;
        unsigned int v11 = v14 + 4;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = ~v6;
  switch(v11)
  {
    case 0u:
      uint64_t v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      uint64_t v18 = *(void *)(a2 + 16);
      goto LABEL_24;
    case 1u:
      uint64_t v19 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v19(result, v3);
      goto LABEL_23;
    case 2u:
      uint64_t v19 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v19(result, v3);
      uint64_t v2 = (unsigned __int8 *)((unint64_t)&v2[v7] & v16);
      v19(v2, v3);
LABEL_23:
      uint64_t result = (unsigned __int8 *)((unint64_t)&v2[v7] & v16);
      uint64_t v18 = v3;
      uint64_t v17 = (uint64_t (*)(unsigned __int8 *, uint64_t))v19;
LABEL_24:
      uint64_t result = (unsigned __int8 *)v17(result, v18);
      break;
    case 3u:
      uint64_t result = (unsigned __int8 *)swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1B523B828(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= v7) {
    unint64_t v11 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  }
  unint64_t v12 = ((v10 + v8) & ~v8) + v7;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = v12;
  }
  unsigned int v14 = __src[v13];
  unsigned int v15 = v14 - 4;
  if (v14 >= 4)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *__src;
        goto LABEL_18;
      case 2:
        int v17 = *(unsigned __int16 *)__src;
        goto LABEL_18;
      case 3:
        int v17 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_18;
      case 4:
        int v17 = *(_DWORD *)__src;
LABEL_18:
        int v18 = (v17 | (v15 << (8 * v13))) + 4;
        unsigned int v14 = v17 + 4;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v19 = ~v8;
  switch(v14)
  {
    case 0u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v13] = 0;
      break;
    case 1u:
      unsigned int v20 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
      v20(__dst, __src, v5);
      v20((unsigned char *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)((unint64_t)&__src[v9] & v19), v5);
      __dst[v13] = 1;
      break;
    case 2u:
      unsigned int v21 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
      v21(__dst, __src, v5);
      unint64_t v22 = (unint64_t)&__src[v9] & v19;
      v21((unsigned char *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)v22, v5);
      v21((unsigned char *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), (unsigned __int8 *)((v9 + v22) & v19), v5);
      __dst[v13] = 2;
      break;
    case 3u:
      *(void *)__dst = *(void *)__src;
      __dst[v13] = 3;
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(__dst, __src, v13 + 1);
      break;
  }
  return __dst;
}

unsigned __int8 *sub_1B523BAC0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= v7) {
      unint64_t v11 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v11 = ((v7 + v8) & ~v8) + v7;
    }
    unint64_t v12 = ((v10 + v8) & ~v8) + v7;
    if (v12 <= v11) {
      unint64_t v12 = v11;
    }
    if (v12 <= 8) {
      uint64_t v13 = 8;
    }
    else {
      uint64_t v13 = v12;
    }
    unsigned int v14 = __dst[v13];
    unsigned int v15 = v14 - 4;
    if (v14 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__dst;
          goto LABEL_19;
        case 2:
          int v17 = *(unsigned __int16 *)__dst;
          goto LABEL_19;
        case 3:
          int v17 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_19;
        case 4:
          int v17 = *(_DWORD *)__dst;
LABEL_19:
          int v18 = (v17 | (v15 << (8 * v13))) + 4;
          unsigned int v14 = v17 + 4;
          if (v13 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v8;
    switch(v14)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
        break;
      case 1u:
        unsigned int v20 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v20(__dst, v5);
        v20((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), v5);
        break;
      case 2u:
        unsigned int v21 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v21(__dst, v5);
        v21((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), v5);
        v21((unsigned __int8 *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), v5);
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v22 = __src[v13];
    unsigned int v23 = v22 - 4;
    if (v22 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v24 = v13;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *__src;
          goto LABEL_35;
        case 2:
          int v25 = *(unsigned __int16 *)__src;
          goto LABEL_35;
        case 3:
          int v25 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_35;
        case 4:
          int v25 = *(_DWORD *)__src;
LABEL_35:
          int v26 = (v25 | (v23 << (8 * v13))) + 4;
          unsigned int v22 = v25 + 4;
          if (v13 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
        __dst[v13] = 0;
        break;
      case 1u:
        uint64_t v27 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
        v27(__dst, __src, v5);
        v27((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)((unint64_t)&__src[v9] & v19), v5);
        __dst[v13] = 1;
        break;
      case 2u:
        unint64_t v28 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
        v28(__dst, __src, v5);
        unint64_t v29 = (unint64_t)&__src[v9] & v19;
        v28((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)v29, v5);
        v28((unsigned __int8 *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), (unsigned __int8 *)((v9 + v29) & v19), v5);
        __dst[v13] = 2;
        break;
      case 3u:
        *(void *)__dst = *(void *)__src;
        __dst[v13] = 3;
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(__dst, __src, v13 + 1);
        break;
    }
  }
  return __dst;
}

unsigned char *sub_1B523BEDC(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= v7) {
    unint64_t v11 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  }
  unint64_t v12 = ((v10 + v8) & ~v8) + v7;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = v12;
  }
  unsigned int v14 = __src[v13];
  unsigned int v15 = v14 - 4;
  if (v14 >= 4)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *__src;
        goto LABEL_18;
      case 2:
        int v17 = *(unsigned __int16 *)__src;
        goto LABEL_18;
      case 3:
        int v17 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_18;
      case 4:
        int v17 = *(_DWORD *)__src;
LABEL_18:
        int v18 = (v17 | (v15 << (8 * v13))) + 4;
        unsigned int v14 = v17 + 4;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v19 = ~v8;
  switch(v14)
  {
    case 0u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v13] = 0;
      break;
    case 1u:
      unsigned int v20 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32);
      v20(__dst, __src, v5);
      v20((unsigned char *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)((unint64_t)&__src[v9] & v19), v5);
      __dst[v13] = 1;
      break;
    case 2u:
      unsigned int v21 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32);
      v21(__dst, __src, v5);
      unint64_t v22 = (unint64_t)&__src[v9] & v19;
      v21((unsigned char *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)v22, v5);
      v21((unsigned char *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), (unsigned __int8 *)((v9 + v22) & v19), v5);
      __dst[v13] = 2;
      break;
    case 3u:
      *(void *)__dst = *(void *)__src;
      __dst[v13] = 3;
      break;
    default:
      memcpy(__dst, __src, v13 + 1);
      break;
  }
  return __dst;
}

unsigned __int8 *sub_1B523C170(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= v7) {
      unint64_t v11 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v11 = ((v7 + v8) & ~v8) + v7;
    }
    unint64_t v12 = ((v10 + v8) & ~v8) + v7;
    if (v12 <= v11) {
      unint64_t v12 = v11;
    }
    if (v12 <= 8) {
      uint64_t v13 = 8;
    }
    else {
      uint64_t v13 = v12;
    }
    unsigned int v14 = __dst[v13];
    unsigned int v15 = v14 - 4;
    if (v14 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__dst;
          goto LABEL_19;
        case 2:
          int v17 = *(unsigned __int16 *)__dst;
          goto LABEL_19;
        case 3:
          int v17 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_19;
        case 4:
          int v17 = *(_DWORD *)__dst;
LABEL_19:
          int v18 = (v17 | (v15 << (8 * v13))) + 4;
          unsigned int v14 = v17 + 4;
          if (v13 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v8;
    switch(v14)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
        break;
      case 1u:
        unsigned int v20 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v20(__dst, v5);
        v20((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), v5);
        break;
      case 2u:
        unsigned int v21 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v21(__dst, v5);
        v21((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), v5);
        v21((unsigned __int8 *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), v5);
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v22 = __src[v13];
    unsigned int v23 = v22 - 4;
    if (v22 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v24 = v13;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *__src;
          goto LABEL_35;
        case 2:
          int v25 = *(unsigned __int16 *)__src;
          goto LABEL_35;
        case 3:
          int v25 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_35;
        case 4:
          int v25 = *(_DWORD *)__src;
LABEL_35:
          int v26 = (v25 | (v23 << (8 * v13))) + 4;
          unsigned int v22 = v25 + 4;
          if (v13 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
        __dst[v13] = 0;
        break;
      case 1u:
        uint64_t v27 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
        v27(__dst, __src, v5);
        v27((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)((unint64_t)&__src[v9] & v19), v5);
        __dst[v13] = 1;
        break;
      case 2u:
        unint64_t v28 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
        v28(__dst, __src, v5);
        unint64_t v29 = (unint64_t)&__src[v9] & v19;
        v28((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)v29, v5);
        v28((unsigned __int8 *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), (unsigned __int8 *)((v9 + v29) & v19), v5);
        __dst[v13] = 2;
        break;
      case 3u:
        *(void *)__dst = *(void *)__src;
        __dst[v13] = 3;
        break;
      default:
        memcpy(__dst, __src, v13 + 1);
        break;
    }
  }
  return __dst;
}

uint64_t sub_1B523C588(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = ((v4 + v5) & ~v5) + v4;
  if (v6 <= v4) {
    unint64_t v7 = *(void *)(v3 + 64);
  }
  else {
    unint64_t v7 = ((v4 + v5) & ~v5) + v4;
  }
  unint64_t v8 = ((v6 + v5) & ~v5) + v4;
  if (v8 <= v7) {
    unint64_t v8 = v7;
  }
  uint64_t v9 = 8;
  if (v8 > 8) {
    uint64_t v9 = v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_27;
  }
  uint64_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    unsigned int v14 = ((a2 + ~(-1 << v11) - 251) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v14 < 2)
    {
LABEL_27:
      unsigned int v16 = *((unsigned __int8 *)a1 + v9);
      if (v16 >= 5) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_27;
  }
LABEL_19:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + 252;
}

void sub_1B523C714(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v8 = ((v6 + v7) & ~v7) + v6;
  if (v8 <= v6) {
    unint64_t v9 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v9 = ((v6 + v7) & ~v7) + v6;
  }
  unint64_t v10 = ((v8 + v7) & ~v7) + v6;
  if (v10 <= v9) {
    unint64_t v10 = v9;
  }
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  size_t v11 = v10 + 1;
  if (a3 < 0xFC)
  {
    int v12 = 0;
  }
  else if (v11 <= 3)
  {
    unsigned int v15 = ((a3 + ~(-1 << (8 * v11)) - 251) >> (8 * v11)) + 1;
    if (HIWORD(v15))
    {
      int v12 = 4;
    }
    else if (v15 >= 0x100)
    {
      int v12 = 2;
    }
    else
    {
      int v12 = v15 > 1;
    }
  }
  else
  {
    int v12 = 1;
  }
  if (a2 > 0xFB)
  {
    unsigned int v13 = a2 - 252;
    if (v11 < 4)
    {
      int v14 = (v13 >> (8 * v11)) + 1;
      if (v10 != -1)
      {
        int v16 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10 + 1);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v11] = v14;
        break;
      case 2:
        *(_WORD *)&a1[v11] = v14;
        break;
      case 3:
LABEL_39:
        __break(1u);
        JUMPOUT(0x1B523C934);
      case 4:
        *(_DWORD *)&a1[v11] = v14;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v12)
    {
      case 1:
        a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      case 2:
        *(_WORD *)&a1[v11] = 0;
        goto LABEL_27;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      default:
LABEL_27:
        if (a2) {
LABEL_28:
        }
          a1[v10] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B523C95C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = ((v3 + v4) & ~v4) + v3;
  if (v5 <= v3) {
    unint64_t v6 = *(void *)(v2 + 64);
  }
  else {
    unint64_t v6 = ((v3 + v4) & ~v4) + v3;
  }
  unint64_t v7 = ((v5 + v4) & ~v4) + v3;
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a1[v8];
  int v10 = v9 - 4;
  if (v9 >= 4)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_17;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_17:
        unsigned int v13 = (v12 | (v10 << (8 * v8))) + 4;
        LODWORD(v9) = v12 + 4;
        if (v8 >= 4) {
          uint64_t v9 = v9;
        }
        else {
          uint64_t v9 = v13;
        }
        break;
      default:
        return v9;
    }
  }
  return v9;
}

void sub_1B523CA6C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = ((v5 + v6) & ~v6) + v5;
  if (v7 <= v5) {
    unint64_t v8 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v8 = ((v5 + v6) & ~v6) + v5;
  }
  unint64_t v9 = ((v7 + v6) & ~v6) + v5;
  if (v9 <= v8) {
    unint64_t v9 = v8;
  }
  if (v9 <= 8) {
    size_t v10 = 8;
  }
  else {
    size_t v10 = v9;
  }
  if (a2 > 3)
  {
    unsigned int v11 = a2 - 4;
    if (v10 < 4)
    {
      unsigned int v12 = v11 >> (8 * v10);
      int v13 = v11 & ~(-1 << (8 * v10));
      a1[v10] = v12 + 4;
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v13;
        a1[2] = BYTE2(v13);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v13;
      }
      else
      {
        *a1 = v13;
      }
    }
    else
    {
      a1[v10] = 4;
      bzero(a1, v10);
      *(_DWORD *)a1 = v11;
    }
  }
  else
  {
    a1[v10] = a2;
  }
}

uint64_t type metadata accessor for SmallSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B523CBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B523CBC0(a1, a2, a3, (uint64_t)&unk_1B538D468);
}

uint64_t sub_1B523CBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = swift_checkMetadataState();
  if (v6 <= 0x3F)
  {
    uint64_t v9 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    size_t v10 = &v8;
    swift_getTupleTypeLayout3();
    unsigned int v11 = &v7;
    uint64_t v12 = a4;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1B523CC8C(uint64_t *__dst, uint64_t *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v9) & ~v9) + v7;
  if (v11 <= v7) {
    unint64_t v12 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v12 = ((v7 + v8) & ~(unint64_t)v8) + v7;
  }
  unint64_t v13 = ((v11 + v8) & ~(unint64_t)v8) + v7;
  if (v13 <= v12) {
    unint64_t v13 = v12;
  }
  if (v13 <= 0x10) {
    uint64_t v14 = 16;
  }
  else {
    uint64_t v14 = v13;
  }
  size_t v15 = v14 + 1;
  if (v8 > 7u || (v8 & 0x100000) != 0 || v15 > 0x18)
  {
    uint64_t v18 = *__src;
    *uint64_t v4 = *__src;
    uint64_t v4 = (uint64_t *)(v18 + ((v8 & 0xF8 ^ 0x1F8u) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v20 = *((unsigned __int8 *)__src + v14);
    unsigned int v21 = v20 - 4;
    if (v20 >= 4)
    {
      if (v14 <= 3) {
        uint64_t v22 = v14;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *(unsigned __int8 *)__src;
          goto LABEL_28;
        case 2:
          int v23 = *(unsigned __int16 *)__src;
          goto LABEL_28;
        case 3:
          int v23 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_28;
        case 4:
          int v23 = *(_DWORD *)__src;
LABEL_28:
          int v24 = (v23 | (v21 << (8 * v14))) + 4;
          unsigned int v20 = v23 + 4;
          if (v14 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v25 = ~v9;
    switch(v20)
    {
      case 0u:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(__dst, __src, v5);
        *((unsigned char *)v4 + v14) = 0;
        break;
      case 1u:
        int v26 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
        v26(__dst, __src, v5);
        v26((uint64_t *)(((unint64_t)v4 + v10) & v25), (uint64_t *)(((unint64_t)__src + v10) & v25), v5);
        *((unsigned char *)v4 + v14) = 1;
        break;
      case 2u:
        uint64_t v27 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
        v27(__dst, __src, v5);
        unint64_t v28 = ((unint64_t)__src + v10) & v25;
        v27((uint64_t *)(((unint64_t)v4 + v10) & v25), (uint64_t *)v28, v5);
        v27((uint64_t *)((v10 + (((unint64_t)v4 + v10) & v25)) & v25), (uint64_t *)((v10 + v28) & v25), v5);
        *((unsigned char *)v4 + v14) = 2;
        break;
      case 3u:
        uint64_t v29 = __src[1];
        *__dst = *__src;
        __dst[1] = v29;
        *((unsigned char *)__dst + v14) = 3;
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(__dst, __src, v15);
        break;
    }
  }
  return v4;
}

unsigned __int8 *sub_1B523CF60(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = v5 + v6;
  unint64_t v8 = ((v5 + v6) & ~v6) + v5;
  if (v8 <= v5) {
    unint64_t v9 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v9 = ((v5 + v6) & ~v6) + v5;
  }
  unint64_t v10 = ((v8 + v6) & ~v6) + v5;
  if (v10 <= v9) {
    unint64_t v10 = v9;
  }
  if (v10 <= 0x10) {
    unint64_t v10 = 16;
  }
  unsigned int v11 = result[v10];
  unsigned int v12 = v11 - 4;
  if (v11 >= 4)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *result;
        goto LABEL_17;
      case 2:
        int v14 = *(unsigned __int16 *)result;
        goto LABEL_17;
      case 3:
        int v14 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_17;
      case 4:
        int v14 = *(_DWORD *)result;
LABEL_17:
        int v15 = (v14 | (v12 << (8 * v10))) + 4;
        unsigned int v11 = v14 + 4;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = ~v6;
  switch(v11)
  {
    case 0u:
      int v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      uint64_t v18 = *(void *)(a2 + 16);
      goto LABEL_24;
    case 1u:
      uint64_t v19 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v19(result, v3);
      goto LABEL_23;
    case 2u:
      uint64_t v19 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v19(result, v3);
      uint64_t v2 = (unsigned __int8 *)((unint64_t)&v2[v7] & v16);
      v19(v2, v3);
LABEL_23:
      uint64_t result = (unsigned __int8 *)((unint64_t)&v2[v7] & v16);
      uint64_t v18 = v3;
      int v17 = (uint64_t (*)(unsigned __int8 *, uint64_t))v19;
LABEL_24:
      uint64_t result = (unsigned __int8 *)v17(result, v18);
      break;
    case 3u:
      uint64_t result = (unsigned __int8 *)swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1B523D19C(unsigned char *__dst, void *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= v7) {
    unint64_t v11 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  }
  unint64_t v12 = ((v10 + v8) & ~v8) + v7;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 0x10) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = v12;
  }
  unsigned int v14 = *((unsigned __int8 *)__src + v13);
  unsigned int v15 = v14 - 4;
  if (v14 >= 4)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *(unsigned __int8 *)__src;
        goto LABEL_18;
      case 2:
        int v17 = *(unsigned __int16 *)__src;
        goto LABEL_18;
      case 3:
        int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_18;
      case 4:
        int v17 = *(_DWORD *)__src;
LABEL_18:
        int v18 = (v17 | (v15 << (8 * v13))) + 4;
        unsigned int v14 = v17 + 4;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v19 = ~v8;
  switch(v14)
  {
    case 0u:
      (*(void (**)(unsigned char *, void *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v13] = 0;
      break;
    case 1u:
      unsigned int v20 = *(void (**)(unsigned char *, void *, uint64_t))(v6 + 16);
      v20(__dst, __src, v5);
      v20((unsigned char *)((unint64_t)&__dst[v9] & v19), (void *)(((unint64_t)__src + v9) & v19), v5);
      __dst[v13] = 1;
      break;
    case 2u:
      unsigned int v21 = *(void (**)(unsigned char *, void *, uint64_t))(v6 + 16);
      v21(__dst, __src, v5);
      unint64_t v22 = ((unint64_t)__src + v9) & v19;
      v21((unsigned char *)((unint64_t)&__dst[v9] & v19), (void *)v22, v5);
      v21((unsigned char *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), (void *)((v9 + v22) & v19), v5);
      __dst[v13] = 2;
      break;
    case 3u:
      uint64_t v23 = __src[1];
      *(void *)__dst = *__src;
      *((void *)__dst + 1) = v23;
      __dst[v13] = 3;
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(__dst, __src, v13 + 1);
      break;
  }
  return __dst;
}

unsigned __int8 *sub_1B523D434(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= v7) {
      unint64_t v11 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v11 = ((v7 + v8) & ~v8) + v7;
    }
    unint64_t v12 = ((v10 + v8) & ~v8) + v7;
    if (v12 <= v11) {
      unint64_t v12 = v11;
    }
    if (v12 <= 0x10) {
      uint64_t v13 = 16;
    }
    else {
      uint64_t v13 = v12;
    }
    unsigned int v14 = __dst[v13];
    unsigned int v15 = v14 - 4;
    if (v14 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__dst;
          goto LABEL_19;
        case 2:
          int v17 = *(unsigned __int16 *)__dst;
          goto LABEL_19;
        case 3:
          int v17 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_19;
        case 4:
          int v17 = *(_DWORD *)__dst;
LABEL_19:
          int v18 = (v17 | (v15 << (8 * v13))) + 4;
          unsigned int v14 = v17 + 4;
          if (v13 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v8;
    switch(v14)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
        break;
      case 1u:
        unsigned int v20 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v20(__dst, v5);
        v20((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), v5);
        break;
      case 2u:
        unsigned int v21 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v21(__dst, v5);
        v21((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), v5);
        v21((unsigned __int8 *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), v5);
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v22 = __src[v13];
    unsigned int v23 = v22 - 4;
    if (v22 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v24 = v13;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *__src;
          goto LABEL_35;
        case 2:
          int v25 = *(unsigned __int16 *)__src;
          goto LABEL_35;
        case 3:
          int v25 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_35;
        case 4:
          int v25 = *(_DWORD *)__src;
LABEL_35:
          int v26 = (v25 | (v23 << (8 * v13))) + 4;
          unsigned int v22 = v25 + 4;
          if (v13 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
        __dst[v13] = 0;
        break;
      case 1u:
        uint64_t v27 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
        v27(__dst, __src, v5);
        v27((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)((unint64_t)&__src[v9] & v19), v5);
        __dst[v13] = 1;
        break;
      case 2u:
        unint64_t v28 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
        v28(__dst, __src, v5);
        unint64_t v29 = (unint64_t)&__src[v9] & v19;
        v28((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)v29, v5);
        v28((unsigned __int8 *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), (unsigned __int8 *)((v9 + v29) & v19), v5);
        __dst[v13] = 2;
        break;
      case 3u:
        *(void *)__dst = *(void *)__src;
        *((void *)__dst + 1) = *((void *)__src + 1);
        __dst[v13] = 3;
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(__dst, __src, v13 + 1);
        break;
    }
  }
  return __dst;
}

unsigned char *sub_1B523D858(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= v7) {
    unint64_t v11 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  }
  unint64_t v12 = ((v10 + v8) & ~v8) + v7;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 0x10) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = v12;
  }
  unsigned int v14 = __src[v13];
  unsigned int v15 = v14 - 4;
  if (v14 >= 4)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *__src;
        goto LABEL_18;
      case 2:
        int v17 = *(unsigned __int16 *)__src;
        goto LABEL_18;
      case 3:
        int v17 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_18;
      case 4:
        int v17 = *(_DWORD *)__src;
LABEL_18:
        int v18 = (v17 | (v15 << (8 * v13))) + 4;
        unsigned int v14 = v17 + 4;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v19 = ~v8;
  switch(v14)
  {
    case 0u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v13] = 0;
      break;
    case 1u:
      unsigned int v20 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32);
      v20(__dst, __src, v5);
      v20((unsigned char *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)((unint64_t)&__src[v9] & v19), v5);
      __dst[v13] = 1;
      break;
    case 2u:
      unsigned int v21 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32);
      v21(__dst, __src, v5);
      unint64_t v22 = (unint64_t)&__src[v9] & v19;
      v21((unsigned char *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)v22, v5);
      v21((unsigned char *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), (unsigned __int8 *)((v9 + v22) & v19), v5);
      __dst[v13] = 2;
      break;
    case 3u:
      *(_OWORD *)__dst = *(_OWORD *)__src;
      __dst[v13] = 3;
      break;
    default:
      memcpy(__dst, __src, v13 + 1);
      break;
  }
  return __dst;
}

unsigned __int8 *sub_1B523DAEC(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= v7) {
      unint64_t v11 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v11 = ((v7 + v8) & ~v8) + v7;
    }
    unint64_t v12 = ((v10 + v8) & ~v8) + v7;
    if (v12 <= v11) {
      unint64_t v12 = v11;
    }
    if (v12 <= 0x10) {
      uint64_t v13 = 16;
    }
    else {
      uint64_t v13 = v12;
    }
    unsigned int v14 = __dst[v13];
    unsigned int v15 = v14 - 4;
    if (v14 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__dst;
          goto LABEL_19;
        case 2:
          int v17 = *(unsigned __int16 *)__dst;
          goto LABEL_19;
        case 3:
          int v17 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_19;
        case 4:
          int v17 = *(_DWORD *)__dst;
LABEL_19:
          int v18 = (v17 | (v15 << (8 * v13))) + 4;
          unsigned int v14 = v17 + 4;
          if (v13 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v8;
    switch(v14)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
        break;
      case 1u:
        unsigned int v20 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v20(__dst, v5);
        v20((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), v5);
        break;
      case 2u:
        unsigned int v21 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v21(__dst, v5);
        v21((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), v5);
        v21((unsigned __int8 *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), v5);
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v22 = __src[v13];
    unsigned int v23 = v22 - 4;
    if (v22 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v24 = v13;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *__src;
          goto LABEL_35;
        case 2:
          int v25 = *(unsigned __int16 *)__src;
          goto LABEL_35;
        case 3:
          int v25 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_35;
        case 4:
          int v25 = *(_DWORD *)__src;
LABEL_35:
          int v26 = (v25 | (v23 << (8 * v13))) + 4;
          unsigned int v22 = v25 + 4;
          if (v13 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
        __dst[v13] = 0;
        break;
      case 1u:
        uint64_t v27 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
        v27(__dst, __src, v5);
        v27((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)((unint64_t)&__src[v9] & v19), v5);
        __dst[v13] = 1;
        break;
      case 2u:
        unint64_t v28 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
        v28(__dst, __src, v5);
        unint64_t v29 = (unint64_t)&__src[v9] & v19;
        v28((unsigned __int8 *)((unint64_t)&__dst[v9] & v19), (unsigned __int8 *)v29, v5);
        v28((unsigned __int8 *)((v9 + ((unint64_t)&__dst[v9] & v19)) & v19), (unsigned __int8 *)((v9 + v29) & v19), v5);
        __dst[v13] = 2;
        break;
      case 3u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        __dst[v13] = 3;
        break;
      default:
        memcpy(__dst, __src, v13 + 1);
        break;
    }
  }
  return __dst;
}

uint64_t sub_1B523DF04(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = ((v4 + v5) & ~v5) + v4;
  if (v6 <= v4) {
    unint64_t v7 = *(void *)(v3 + 64);
  }
  else {
    unint64_t v7 = ((v4 + v5) & ~v5) + v4;
  }
  unint64_t v8 = ((v6 + v5) & ~v5) + v4;
  if (v8 <= v7) {
    unint64_t v8 = v7;
  }
  uint64_t v9 = 16;
  if (v8 > 0x10) {
    uint64_t v9 = v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_27;
  }
  uint64_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    unsigned int v14 = ((a2 + ~(-1 << v11) - 251) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v14 < 2)
    {
LABEL_27:
      unsigned int v16 = *((unsigned __int8 *)a1 + v9);
      if (v16 >= 5) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_27;
  }
LABEL_19:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + 252;
}

void sub_1B523E090(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v8 = ((v6 + v7) & ~v7) + v6;
  if (v8 <= v6) {
    unint64_t v9 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v9 = ((v6 + v7) & ~v7) + v6;
  }
  unint64_t v10 = ((v8 + v7) & ~v7) + v6;
  if (v10 <= v9) {
    unint64_t v10 = v9;
  }
  if (v10 <= 0x10) {
    unint64_t v10 = 16;
  }
  size_t v11 = v10 + 1;
  if (a3 < 0xFC)
  {
    int v12 = 0;
  }
  else if (v11 <= 3)
  {
    unsigned int v15 = ((a3 + ~(-1 << (8 * v11)) - 251) >> (8 * v11)) + 1;
    if (HIWORD(v15))
    {
      int v12 = 4;
    }
    else if (v15 >= 0x100)
    {
      int v12 = 2;
    }
    else
    {
      int v12 = v15 > 1;
    }
  }
  else
  {
    int v12 = 1;
  }
  if (a2 > 0xFB)
  {
    unsigned int v13 = a2 - 252;
    if (v11 < 4)
    {
      int v14 = (v13 >> (8 * v11)) + 1;
      if (v10 != -1)
      {
        int v16 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10 + 1);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v11] = v14;
        break;
      case 2:
        *(_WORD *)&a1[v11] = v14;
        break;
      case 3:
LABEL_39:
        __break(1u);
        JUMPOUT(0x1B523E2B0);
      case 4:
        *(_DWORD *)&a1[v11] = v14;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v12)
    {
      case 1:
        a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      case 2:
        *(_WORD *)&a1[v11] = 0;
        goto LABEL_27;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      default:
LABEL_27:
        if (a2) {
LABEL_28:
        }
          a1[v10] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B523E2D8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = ((v3 + v4) & ~v4) + v3;
  if (v5 <= v3) {
    unint64_t v6 = *(void *)(v2 + 64);
  }
  else {
    unint64_t v6 = ((v3 + v4) & ~v4) + v3;
  }
  unint64_t v7 = ((v5 + v4) & ~v4) + v3;
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  uint64_t v8 = 16;
  if (v7 > 0x10) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a1[v8];
  int v10 = v9 - 4;
  if (v9 >= 4)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_17;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_17:
        unsigned int v13 = (v12 | (v10 << (8 * v8))) + 4;
        LODWORD(v9) = v12 + 4;
        if (v8 >= 4) {
          uint64_t v9 = v9;
        }
        else {
          uint64_t v9 = v13;
        }
        break;
      default:
        return v9;
    }
  }
  return v9;
}

void sub_1B523E3E8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = ((v5 + v6) & ~v6) + v5;
  if (v7 <= v5) {
    unint64_t v8 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v8 = ((v5 + v6) & ~v6) + v5;
  }
  unint64_t v9 = ((v7 + v6) & ~v6) + v5;
  if (v9 <= v8) {
    unint64_t v9 = v8;
  }
  if (v9 <= 0x10) {
    size_t v10 = 16;
  }
  else {
    size_t v10 = v9;
  }
  if (a2 > 3)
  {
    unsigned int v11 = a2 - 4;
    if (v10 < 4)
    {
      unsigned int v12 = v11 >> (8 * v10);
      int v13 = v11 & ~(-1 << (8 * v10));
      a1[v10] = v12 + 4;
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v13;
        a1[2] = BYTE2(v13);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v13;
      }
      else
      {
        *a1 = v13;
      }
    }
    else
    {
      a1[v10] = 4;
      bzero(a1, v10);
      *(_DWORD *)a1 = v11;
    }
  }
  else
  {
    a1[v10] = a2;
  }
}

uint64_t type metadata accessor for SmallSequenceIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B523E534(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B521CF10(0, v1, 0);
    uint64_t v2 = v11;
    unint64_t v4 = *(void *)(v11 + 16);
    uint64_t v5 = 36;
    do
    {
      uint64_t v6 = *(unsigned __int16 *)(a1 + v5);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v4 >= v7 >> 1) {
        sub_1B521CF10((char *)(v7 > 1), v4 + 1, 1);
      }
      *(void *)(v11 + 16) = v4 + 1;
      *(void *)(v11 + 8 * v4 + 32) = v6;
      v5 += 8;
      ++v4;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = sub_1B523E8A0(v2);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B523E630(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; ; i += 8)
  {
    unsigned int v8 = *(_DWORD *)(a1 + i);
    unint64_t v9 = *(void *)(v4 + 16);
    if (!v9)
    {
LABEL_14:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B51E9110(0, v9 + 1, 1, (char *)v4);
        uint64_t v4 = result;
      }
      unint64_t v15 = *(void *)(v4 + 16);
      unint64_t v14 = *(void *)(v4 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t result = (uint64_t)sub_1B51E9110((char *)(v14 > 1), v15 + 1, 1, (char *)v4);
        uint64_t v4 = result;
      }
      *(void *)(v4 + 16) = v15 + 1;
      uint64_t v6 = v4 + 8 * v15;
      *(_DWORD *)(v6 + 32) = v8;
      unint64_t v7 = (unsigned int *)(v6 + 36);
      goto LABEL_4;
    }
    unint64_t v10 = v9 - 1;
    unsigned int v11 = *(_DWORD *)(v4 + 8 * (v9 - 1) + 36);
    BOOL v12 = v8 >= v11;
    unsigned int v13 = v8 - v11;
    if (!v12) {
      break;
    }
    if (v13 != 1) {
      goto LABEL_14;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B52935C4(v4);
      uint64_t v4 = result;
    }
    if (v9 > *(void *)(v4 + 16)) {
      goto LABEL_21;
    }
    if (v8 < *(_DWORD *)(v4 + 32 + 8 * v10)) {
      goto LABEL_22;
    }
    unint64_t v7 = (unsigned int *)(v4 + 32 + 8 * v10 + 4);
LABEL_4:
    *unint64_t v7 = v8;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

int64_t sub_1B523E790(int64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a3) {
    a2 = 0;
  }
  uint64_t v5 = *(void *)(a4 + 16);
  if (v5 < a2)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2 < 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  int v6 = result;
  uint64_t v7 = a4 + 32;
  uint64_t result = sub_1B5268708(result, a4 + 32, a2, (2 * v5) | 1);
  if (!result) {
    return result;
  }
  unint64_t v8 = result - 1;
  if (__OFSUB__(result, 1)) {
    goto LABEL_15;
  }
  if (v8 >= v5)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v9 = v7 + 8 * v8;
  if (*(_DWORD *)v9 == v6) {
    return *(unsigned __int16 *)(v9 + 4);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B523E83C()
{
  return -1;
}

uint64_t sub_1B523E844()
{
  *(Swift::UInt16_optional *)&uint64_t result = Platform.rawValue(encoding:)(FontParser_Encoding_unicodeFull);
  if ((result & 0x10000) != 0) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B523E86C()
{
  return 0xFFFFLL;
}

uint64_t sub_1B523E874()
{
  return sub_1B523E630(*v0);
}

int64_t sub_1B523E87C(int64_t a1, uint64_t a2, char a3)
{
  return sub_1B523E790(a1, a2, a3 & 1, *v3);
}

uint64_t sub_1B523E8A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1B5372B58();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1B52C00A0(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t __swift_memcpy6_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Type1EncodingEntry()
{
  return &type metadata for Type1EncodingEntry;
}

ValueMetadata *type metadata accessor for Type1Encoding()
{
  return &type metadata for Type1Encoding;
}

void sub_1B523E948()
{
  off_1E9D48320 = &unk_1F0DE2528;
}

void sub_1B523E95C()
{
  off_1E9D48328 = &unk_1F0DF2CC8;
}

void sub_1B523E970()
{
  off_1E9D48330 = &unk_1F0DDEB88;
}

unint64_t static PSToken.comment(string:)(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return sub_1B523ED3C(result, a2);
    }
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result >> 11 == 27)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (WORD1(result) > 0x10u)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1B523F8B4(result, 0, (uint64_t)&v3);
  return v3;
}

uint64_t sub_1B523EA04(__int16 a1)
{
  v21[5] = *MEMORY[0x1E4F143B8];
  LOWORD(v18) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48348);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48350);
  if (swift_dynamicCast())
  {
    sub_1B51E0D0C(v19, (uint64_t)v21);
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    sub_1B53722C8();
    v19[0] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return *(void *)&v19[0];
  }
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  sub_1B52412D0((uint64_t)v19);
  uint64_t v1 = HIBYTE(a1) - a1;
  if (HIBYTE(a1) < a1) {
    uint64_t v1 = -(uint64_t)(a1 - HIBYTE(a1));
  }
  *(void *)&v19[0] = sub_1B52414F4(v1 + 1);
  *((void *)&v19[0] + 1) = v2;
  MEMORY[0x1F4188790](*(void *)&v19[0]);
  unsigned int v3 = sub_1B523F99C((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1B5241594);
  uint64_t v5 = *((void *)&v19[0] + 1) >> 62;
  switch(*((void *)&v19[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v6) = DWORD1(v19[0]) - LODWORD(v19[0]);
      if (__OFSUB__(DWORD1(v19[0]), v19[0])) {
        goto LABEL_35;
      }
      uint64_t v6 = (int)v6;
LABEL_10:
      if (v4 != v6)
      {
        if (v5)
        {
          if (v5 == 1) {
            uint64_t v10 = *(uint64_t *)&v19[0] >> 32;
          }
          else {
            uint64_t v10 = *(void *)(*(void *)&v19[0] + 24);
          }
        }
        else
        {
          uint64_t v10 = BYTE14(v19[0]);
        }
LABEL_29:
        if (v10 >= v4)
        {
          sub_1B5372368();
          return *(void *)&v19[0];
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
      }
LABEL_16:
      memset(v21, 0, 15);
      if ((v3 & 0x1000000) != 0) {
        return *(void *)&v19[0];
      }
      LOBYTE(v11) = 0;
      unsigned int v12 = HIWORD(v3);
      unsigned int v13 = v3 >> 8;
      do
      {
        if (v12 == v13)
        {
          char v15 = 0;
        }
        else
        {
          char v15 = v12 + 1;
          if (((v12 + 1) & 0x100) != 0) {
            goto LABEL_33;
          }
        }
        *((unsigned char *)v21 + v11) = v12;
        unsigned int v11 = v11 + 1;
        if ((v11 >> 8))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        if (v11 == 14)
        {
          sub_1B5372388();
          LOBYTE(v11) = 0;
        }
        int v14 = v12;
        LOBYTE(v12) = v15;
      }
      while (v14 != v13);
      if ((_BYTE)v11) {
        sub_1B5372388();
      }
      return *(void *)&v19[0];
    case 2:
      uint64_t v8 = *(void *)(*(void *)&v19[0] + 16);
      uint64_t v7 = *(void *)(*(void *)&v19[0] + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_10;
      }
      goto LABEL_36;
    case 3:
      if (!v4) {
        goto LABEL_16;
      }
      uint64_t v10 = 0;
      goto LABEL_29;
    default:
      uint64_t v6 = BYTE14(v19[0]);
      goto LABEL_10;
  }
}

uint64_t sub_1B523ED3C(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48360);
  uint64_t v10 = sub_1B52010C8(&qword_1E9D48368, &qword_1E9D48360);
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = v4[1];
    if (v6)
    {
      if (v6 <= 14)
      {
        uint64_t v5 = sub_1B5241330((unsigned char *)*v4, (unsigned char *)(v5 + v6));
      }
      else
      {
        sub_1B53722B8();
        swift_allocObject();
        sub_1B5372258();
        if ((unint64_t)v6 >= 0x7FFFFFFF)
        {
          sub_1B5372358();
          uint64_t v5 = swift_allocObject();
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = v6;
        }
        else
        {
          uint64_t v5 = v6 << 32;
        }
      }
    }
    else
    {
      uint64_t v5 = 0;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

unint64_t static PSToken.name(string:)(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return sub_1B523ED3C(result, a2);
    }
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result >> 11 == 27)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (WORD1(result) > 0x10u)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1B523F8B4(result, 1, (uint64_t)&v3);
  return v3;
}

unint64_t static PSToken.literalName(string:)(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return sub_1B523ED3C(result, a2);
    }
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result >> 11 == 27)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (WORD1(result) > 0x10u)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1B523F8B4(result, 2, (uint64_t)&v3);
  return v3;
}

unint64_t static PSToken.immediatelyEvaluatedName(string:)(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return sub_1B523ED3C(result, a2);
    }
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result >> 11 == 27)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (WORD1(result) > 0x10u)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1B523F8B4(result, 3, (uint64_t)&v3);
  return v3;
}

unint64_t static PSToken.string(string:)(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return sub_1B523ED3C(result, a2);
    }
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result >> 11 == 27)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (WORD1(result) > 0x10u)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1B523F8B4(result, 4, (uint64_t)&v3);
  return v3;
}

uint64_t static PSToken.openCurlyBrace.getter()
{
  return 123;
}

uint64_t static PSToken.closeCurlyBrace.getter()
{
  return 125;
}

uint64_t PSToken.description.getter(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = sub_1B5372788();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = 10649826;
  switch(a3)
  {
    case 1:
      sub_1B51D4BB8(a1, a2);
      sub_1B5372758();
      uint64_t v11 = sub_1B5372708();
      if (v12) {
        uint64_t v7 = v11;
      }
      else {
        uint64_t v7 = 0x46545520746F6E28;
      }
      sub_1B520ABCC(a1, a2, 1);
      return v7;
    case 2:
      sub_1B51D4BB8(a1, a2);
      sub_1B5372758();
      sub_1B5372708();
      uint64_t v21 = 47;
      sub_1B5372868();
      uint64_t v13 = a1;
      unint64_t v14 = a2;
      char v15 = 2;
      goto LABEL_8;
    case 3:
      sub_1B51D4BB8(a1, a2);
      sub_1B5372758();
      sub_1B5372708();
      uint64_t v21 = 12079;
      sub_1B5372868();
      uint64_t v13 = a1;
      unint64_t v14 = a2;
      char v15 = 3;
LABEL_8:
      sub_1B520ABCC(v13, v14, v15);
      swift_bridgeObjectRelease();
      return v21;
    case 4:
      uint64_t v21 = 40;
      sub_1B51D4BB8(a1, a2);
      sub_1B5372758();
      uint64_t v16 = sub_1B5372708();
      if (v17)
      {
        unint64_t v18 = v17;
      }
      else
      {
        uint64_t v16 = 0x46545520746F6E28;
        unint64_t v18 = 0xEB0000000029382DLL;
      }
      sub_1B522994C(v16, v18);
      swift_bridgeObjectRelease();
      sub_1B5372868();
      swift_bridgeObjectRelease();
      sub_1B5372868();
      uint64_t v8 = a1;
      unint64_t v9 = a2;
      char v10 = 4;
      goto LABEL_13;
    case 5:
      sub_1B52400C4();
      return sub_1B5372E88();
    case 6:
      return sub_1B5372B28();
    case 7:
      uint64_t v21 = 33;
      sub_1B5372868();
      return v21;
    case 8:
      return v7;
    default:
      uint64_t v21 = 8229;
      sub_1B51D4BB8(a1, a2);
      sub_1B5372758();
      sub_1B5372708();
      sub_1B5372868();
      swift_bridgeObjectRelease();
      sub_1B5372868();
      uint64_t v8 = a1;
      unint64_t v9 = a2;
      char v10 = 0;
LABEL_13:
      sub_1B520ABCC(v8, v9, v10);
      return v21;
  }
}

uint64_t PSToken.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      sub_1B5373308();
      sub_1B51D4BB8(a2, a3);
      sub_1B53723F8();
      uint64_t v6 = a2;
      unint64_t v7 = a3;
      char v8 = 1;
      goto LABEL_7;
    case 2:
      sub_1B5373308();
      sub_1B51D4BB8(a2, a3);
      sub_1B53723F8();
      uint64_t v6 = a2;
      unint64_t v7 = a3;
      char v8 = 2;
      goto LABEL_7;
    case 3:
      sub_1B5373308();
      sub_1B51D4BB8(a2, a3);
      sub_1B53723F8();
      uint64_t v6 = a2;
      unint64_t v7 = a3;
      char v8 = 3;
      goto LABEL_7;
    case 4:
      sub_1B5373308();
      sub_1B51D4BB8(a2, a3);
      sub_1B53723F8();
      uint64_t v6 = a2;
      unint64_t v7 = a3;
      char v8 = 4;
      goto LABEL_7;
    case 5:
    case 6:
      sub_1B5373308();
      return sub_1B5373338();
    case 7:
      sub_1B5373308();
      return sub_1B5372828();
    case 8:
      return sub_1B5373308();
    default:
      sub_1B5373308();
      sub_1B51D4BB8(a2, a3);
      sub_1B53723F8();
      uint64_t v6 = a2;
      unint64_t v7 = a3;
      char v8 = 0;
LABEL_7:
      return sub_1B520ABCC(v6, v7, v8);
  }
}

uint64_t PSToken.hashValue.getter(uint64_t a1, unint64_t a2, char a3)
{
  sub_1B53732F8();
  PSToken.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_1B5373358();
}

uint64_t sub_1B523F74C()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1B53732F8();
  PSToken.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1B5373358();
}

uint64_t sub_1B523F7A8(uint64_t a1)
{
  return PSToken.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_1B523F7B4()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1B53732F8();
  PSToken.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1B5373358();
}

uint64_t sub_1B523F80C()
{
  return PSToken.description.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1B523F818(uint64_t a1, uint64_t a2)
{
  return _s10FontParser7PSTokenO21__derived_enum_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

void *sub_1B523F834(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)((unsigned __int16)v6 | (BYTE2(v6) << 16) | (BYTE3(v6) << 24));
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)((unsigned __int16)v6 | (BYTE2(v6) << 16) | (BYTE3(v6) << 24));
  }
  return result;
}

uint64_t sub_1B523F8B4@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (a1 > 0x7F)
  {
    int v9 = (a1 & 0x3F) << 8;
    if (a1 >= 0x800)
    {
      int v10 = (v9 | (a1 >> 6) & 0x3F) << 8;
      int v11 = (((v10 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
      unsigned int v5 = (v10 | (a1 >> 12)) + 8487393;
      if (HIWORD(a1)) {
        unsigned int v5 = v11;
      }
    }
    else
    {
      unsigned int v5 = (v9 | (a1 >> 6)) + 33217;
    }
  }
  else
  {
    unsigned int v5 = a1 + 1;
  }
  unsigned int v6 = __clz(v5);
  uint64_t v12 = (v5 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (v6 >> 3))));
  uint64_t result = sub_1B523ED3C((uint64_t)&v12, 4 - (v6 >> 3));
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = a2;
  return result;
}

unint64_t sub_1B523F99C(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  unsigned int v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_1B538BFE0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_25;
      }
      if (sub_1B5372268() && __OFSUB__((int)v4, sub_1B5372298())) {
        goto LABEL_26;
      }
      sub_1B53722B8();
      swift_allocObject();
      uint64_t v18 = sub_1B5372248();
      swift_release();
      uint64_t v9 = v18;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      unsigned int v13 = sub_1B523FE0C((int)v4, v11, a1);
      if (v2)
      {
        unint64_t v7 = v9 | 0x4000000000000000;
        *unsigned int v5 = v4;
        goto LABEL_19;
      }
      int v16 = HIBYTE(v13) & 1;
      unsigned int v15 = HIWORD(v13);
      unsigned int v14 = v13 >> 8;
      *unsigned int v5 = v4;
      v5[1] = v9 | 0x4000000000000000;
      goto LABEL_22;
    case 2uLL:
      uint64_t v21 = *v1;
      uint64_t v22 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1B53722F8();
      uint64_t v12 = v22;
      unsigned int v13 = sub_1B523FE0C(*(void *)(v21 + 16), *(void *)(v21 + 24), a1);
      if (!v2)
      {
        int v16 = HIBYTE(v13) & 1;
        unsigned int v15 = HIWORD(v13);
        unsigned int v14 = v13 >> 8;
        *unsigned int v5 = v21;
        v5[1] = v12 | 0x8000000000000000;
        goto LABEL_22;
      }
      unint64_t v7 = v22 | 0x8000000000000000;
      *unsigned int v5 = v21;
LABEL_19:
      v5[1] = v7;
      break;
    case 3uLL:
      memset(v20, 0, 15);
      a1(&v21, (char *)v20, (char *)v20);
      if (v2) {
        return v7;
      }
      LOBYTE(v13) = v21;
      LOBYTE(v14) = BYTE1(v21);
      LOBYTE(v15) = BYTE2(v21);
      int v16 = BYTE3(v21);
      goto LABEL_22;
    default:
      v20[0] = *v1;
      LOWORD(v20[1]) = v3;
      BYTE2(v20[1]) = BYTE2(v3);
      BYTE3(v20[1]) = BYTE3(v3);
      BYTE4(v20[1]) = BYTE4(v3);
      BYTE5(v20[1]) = BYTE5(v3);
      BYTE6(v20[1]) = BYTE6(v3);
      a1(&v21, (char *)v20, (char *)v20 + BYTE6(v3));
      if (v2)
      {
        unint64_t v7 = v20[0];
        unint64_t v8 = LODWORD(v20[1]) | ((unint64_t)BYTE4(v20[1]) << 32) | ((unint64_t)BYTE5(v20[1]) << 40) | ((unint64_t)BYTE6(v20[1]) << 48);
        *uint64_t v1 = v20[0];
        v1[1] = v8;
      }
      else
      {
        LOBYTE(v13) = v21;
        LOBYTE(v14) = BYTE1(v21);
        LOBYTE(v15) = BYTE2(v21);
        int v16 = BYTE3(v21);
        unint64_t v17 = LODWORD(v20[1]) | ((unint64_t)BYTE4(v20[1]) << 32) | ((unint64_t)BYTE5(v20[1]) << 40) | ((unint64_t)BYTE6(v20[1]) << 48);
        *uint64_t v1 = v20[0];
        v1[1] = v17;
LABEL_22:
        unint64_t v7 = (v15 << 16) | (v16 << 24) | (v14 << 8) | v13;
      }
      break;
  }
  return v7;
}

unsigned char *sub_1B523FCF0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1B5241330(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1B52413F4((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1B5241470((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1B523FD68(uint64_t result, uint64_t a2, __int16 a3)
{
  int v4 = 0;
  unsigned __int8 v5 = a3;
  if (!result || !a2) {
    return (v5 << 16) | (v4 << 24) | a3 & 0xFF00 | a3;
  }
  if (a2 < 0) {
    goto LABEL_14;
  }
  uint64_t v6 = 0;
  unsigned __int8 v7 = a3;
  while (1)
  {
    int v4 = v7 == (unsigned __int16)(a3 & 0xFF00) >> 8;
    if (v7 != (unsigned __int16)(a3 & 0xFF00) >> 8) {
      break;
    }
    unsigned __int8 v5 = 0;
LABEL_8:
    *(unsigned char *)(result + v6) = v7;
    if (a2 - 1 == v6) {
      return (v5 << 16) | (v4 << 24) | a3 & 0xFF00 | a3;
    }
    ++v6;
    BOOL v8 = v7 == (unsigned __int16)(a3 & 0xFF00) >> 8;
    unsigned __int8 v7 = v5;
    if (v8)
    {
      int v4 = 1;
      return (v5 << 16) | (v4 << 24) | a3 & 0xFF00 | a3;
    }
  }
  unsigned __int8 v5 = v7 + 1;
  if (((v7 + 1) & 0x100) == 0) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

char *sub_1B523FE0C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_1B5372268();
  if (!result) {
    goto LABEL_12;
  }
  BOOL v8 = result;
  uint64_t result = (char *)sub_1B5372298();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_1B5372288();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)((unsigned __int16)v14 | (BYTE2(v14) << 16) | (BYTE3(v14) << 24));
  }
  return result;
}

void *sub_1B523FED0(void *result, int __c)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = result[1];
  int v4 = result;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_1B5240118((int *)&__b, __c);
      uint64_t v5 = __b;
      unint64_t v6 = v19 | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1B53722F8();
      uint64_t v7 = v19;
      uint64_t v8 = *(void *)(__b + 16);
      uint64_t v9 = *(void *)(__b + 24);
      uint64_t v10 = sub_1B5372268();
      if (!v10)
      {
        __break(1u);
        JUMPOUT(0x1B52400B4);
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_1B5372298();
      uint64_t v13 = v8 - v12;
      if (__OFSUB__(v8, v12))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v14 = __OFSUB__(v9, v8);
      int64_t v15 = v9 - v8;
      if (v14) {
        goto LABEL_14;
      }
      uint64_t v16 = sub_1B5372288();
      if (v16 >= v15) {
        size_t v17 = v15;
      }
      else {
        size_t v17 = v16;
      }
      uint64_t result = memset((void *)(v11 + v13), __c, v17);
      *int v4 = __b;
      v4[1] = v7 | 0x8000000000000000;
      return result;
    case 3uLL:
      return result;
    default:
      uint64_t __b = *result;
      LOWORD(v19) = v2;
      BYTE2(v19) = BYTE2(v2);
      BYTE3(v19) = BYTE3(v2);
      BYTE4(v19) = BYTE4(v2);
      BYTE5(v19) = BYTE5(v2);
      BYTE6(v19) = BYTE6(v2);
      uint64_t result = memset(&__b, __c, BYTE6(v2));
      uint64_t v5 = __b;
      unint64_t v6 = v19 | ((unint64_t)BYTE4(v19) << 32) | ((unint64_t)BYTE5(v19) << 40) | ((unint64_t)BYTE6(v19) << 48);
LABEL_4:
      *int v4 = v5;
      v4[1] = v6;
      return result;
  }
}

unint64_t sub_1B52400C4()
{
  unint64_t result = qword_1E9D48338;
  if (!qword_1E9D48338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48338);
  }
  return result;
}

char *sub_1B5240118(int *a1, int a2)
{
  unint64_t result = (char *)sub_1B5372338();
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t result = (char *)sub_1B5372268();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  unint64_t result = (char *)sub_1B5372298();
  uint64_t v8 = v5 - (void)result;
  if (__OFSUB__(v5, result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v9 = v6 - v5;
  uint64_t v10 = sub_1B5372288();
  if (v10 >= v9) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v10;
  }
  return (char *)memset(&v7[v8], a2, v11);
}

uint64_t sub_1B52401AC@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1B51D4BB8(a2, a3);
      uint64_t v10 = (char *)sub_1B5372268();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1B5372298();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1B5372288();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1B5240410);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1B51D4C64(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      size_t v17 = (char *)sub_1B5372268();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1B5372298();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1B5372288();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1B5240420(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_1B51D4BB8(a1, a2);
      char v5 = sub_1B5240788((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1B51D4C64(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_1B5240788(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1B51D4C64(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_1B52401AC((uint64_t)__s1, a3, a4, &v14);
      sub_1B51D4C64(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_1B5240650@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, BOOL *a4@<X8>)
{
  if (__s1)
  {
    if (__s2)
    {
      uint64_t __s2 = memcmp(__s1, (const void *)__s2, a3 - __s2);
      *a4 = __s2 == 0;
      return __s2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return __s2;
}

void *sub_1B52406AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  __int16 v8 = *a3;
  v7[2] = &v8;
  unint64_t result = sub_1B523F834((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B52415B0, (uint64_t)v7, a1, a2);
  *(_WORD *)a4 = (_WORD)result;
  *(unsigned char *)(a4 + 2) = BYTE2(result);
  *(unsigned char *)(a4 + 3) = BYTE3(result) & 1;
  *(void *)(a4 + 8) = v6;
  return result;
}

uint64_t sub_1B5240730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1B523FD68(a1, a2, *a3);
  if (!v4)
  {
    *(_WORD *)a4 = result;
    *(unsigned char *)(a4 + 2) = BYTE2(result);
    *(unsigned char *)(a4 + 3) = BYTE3(result) & 1;
    *(void *)(a4 + 8) = v7;
  }
  return result;
}

uint64_t sub_1B5240788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1B5372268();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1B5372298();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1B5372288();
  sub_1B52401AC(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t _s10FontParser7PSTokenO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, unint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        return 0;
      }
      uint64_t v11 = 0;
      switch(a2 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(a1), a1))
          {
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
            JUMPOUT(0x1B5240F88);
          }
          uint64_t v11 = HIDWORD(a1) - (int)a1;
LABEL_33:
          sub_1B51D4BB8(a1, a2);
LABEL_34:
          switch(a5 >> 62)
          {
            case 1uLL:
              LODWORD(v19) = HIDWORD(a4) - a4;
              if (__OFSUB__(HIDWORD(a4), a4)) {
                goto LABEL_122;
              }
              uint64_t v19 = (int)v19;
LABEL_57:
              if (v11 != v19)
              {
LABEL_62:
                uint64_t v33 = a1;
                unint64_t v34 = a2;
                char v35 = 1;
                goto LABEL_109;
              }
              if (v11 < 1)
              {
LABEL_90:
                uint64_t v15 = 1;
                sub_1B520ABCC(a1, a2, 1);
              }
              else
              {
                sub_1B51D4BB8(a4, a5);
                char v32 = sub_1B5240420(a1, a2, a4, a5);
                uint64_t v15 = 1;
                sub_1B520ABCC(a1, a2, 1);
                if ((v32 & 1) == 0) {
                  return 0;
                }
              }
              break;
            case 2uLL:
              uint64_t v30 = *(void *)(a4 + 16);
              uint64_t v29 = *(void *)(a4 + 24);
              BOOL v31 = __OFSUB__(v29, v30);
              uint64_t v19 = v29 - v30;
              if (!v31) {
                goto LABEL_57;
              }
              goto LABEL_123;
            case 3uLL:
              if (v11) {
                goto LABEL_62;
              }
              goto LABEL_90;
            default:
              uint64_t v19 = BYTE6(a5);
              goto LABEL_57;
          }
          break;
        case 2uLL:
          uint64_t v18 = *(void *)(a1 + 16);
          uint64_t v17 = *(void *)(a1 + 24);
          uint64_t v11 = v17 - v18;
          if (!__OFSUB__(v17, v18)) {
            goto LABEL_33;
          }
          goto LABEL_115;
        case 3uLL:
          goto LABEL_34;
        default:
          uint64_t v11 = BYTE6(a2);
          goto LABEL_34;
      }
      return v15;
    case 2:
      if (a6 == 2)
      {
        uint64_t v12 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_116;
            }
            uint64_t v12 = HIDWORD(a1) - (int)a1;
LABEL_39:
            sub_1B51D4BB8(a1, a2);
LABEL_40:
            switch(a5 >> 62)
            {
              case 1uLL:
                LODWORD(v22) = HIDWORD(a4) - a4;
                if (__OFSUB__(HIDWORD(a4), a4)) {
                  goto LABEL_124;
                }
                uint64_t v22 = (int)v22;
LABEL_66:
                if (v12 != v22)
                {
LABEL_71:
                  uint64_t v33 = a1;
                  unint64_t v34 = a2;
                  char v35 = 2;
                  goto LABEL_109;
                }
                if (v12 < 1)
                {
LABEL_91:
                  uint64_t v45 = a1;
                  unint64_t v46 = a2;
                  char v47 = 2;
                  goto LABEL_113;
                }
                sub_1B51D4BB8(a4, a5);
                char v38 = sub_1B5240420(a1, a2, a4, a5);
                sub_1B520ABCC(a1, a2, 2);
                if (v38) {
                  return 1;
                }
                break;
              case 2uLL:
                uint64_t v37 = *(void *)(a4 + 16);
                uint64_t v36 = *(void *)(a4 + 24);
                BOOL v31 = __OFSUB__(v36, v37);
                uint64_t v22 = v36 - v37;
                if (!v31) {
                  goto LABEL_66;
                }
                goto LABEL_125;
              case 3uLL:
                if (v12) {
                  goto LABEL_71;
                }
                goto LABEL_91;
              default:
                uint64_t v22 = BYTE6(a5);
                goto LABEL_66;
            }
            break;
          case 2uLL:
            uint64_t v21 = *(void *)(a1 + 16);
            uint64_t v20 = *(void *)(a1 + 24);
            uint64_t v12 = v20 - v21;
            if (!__OFSUB__(v20, v21)) {
              goto LABEL_39;
            }
            goto LABEL_117;
          case 3uLL:
            goto LABEL_40;
          default:
            uint64_t v12 = BYTE6(a2);
            goto LABEL_40;
        }
      }
      return 0;
    case 3:
      if (a6 == 3)
      {
        uint64_t v13 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_118;
            }
            uint64_t v13 = HIDWORD(a1) - (int)a1;
LABEL_45:
            sub_1B51D4BB8(a1, a2);
LABEL_46:
            switch(a5 >> 62)
            {
              case 1uLL:
                LODWORD(v25) = HIDWORD(a4) - a4;
                if (__OFSUB__(HIDWORD(a4), a4)) {
                  goto LABEL_126;
                }
                uint64_t v25 = (int)v25;
LABEL_75:
                if (v13 != v25)
                {
LABEL_80:
                  uint64_t v33 = a1;
                  unint64_t v34 = a2;
                  char v35 = 3;
                  goto LABEL_109;
                }
                if (v13 < 1)
                {
LABEL_92:
                  uint64_t v45 = a1;
                  unint64_t v46 = a2;
                  char v47 = 3;
                  goto LABEL_113;
                }
                sub_1B51D4BB8(a4, a5);
                char v41 = sub_1B5240420(a1, a2, a4, a5);
                sub_1B520ABCC(a1, a2, 3);
                if (v41) {
                  return 1;
                }
                break;
              case 2uLL:
                uint64_t v40 = *(void *)(a4 + 16);
                uint64_t v39 = *(void *)(a4 + 24);
                BOOL v31 = __OFSUB__(v39, v40);
                uint64_t v25 = v39 - v40;
                if (!v31) {
                  goto LABEL_75;
                }
                goto LABEL_127;
              case 3uLL:
                if (v13) {
                  goto LABEL_80;
                }
                goto LABEL_92;
              default:
                uint64_t v25 = BYTE6(a5);
                goto LABEL_75;
            }
            break;
          case 2uLL:
            uint64_t v24 = *(void *)(a1 + 16);
            uint64_t v23 = *(void *)(a1 + 24);
            uint64_t v13 = v23 - v24;
            if (!__OFSUB__(v23, v24)) {
              goto LABEL_45;
            }
            goto LABEL_119;
          case 3uLL:
            goto LABEL_46;
          default:
            uint64_t v13 = BYTE6(a2);
            goto LABEL_46;
        }
      }
      return 0;
    case 4:
      if (a6 == 4)
      {
        uint64_t v14 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_120;
            }
            uint64_t v14 = HIDWORD(a1) - (int)a1;
LABEL_51:
            sub_1B51D4BB8(a1, a2);
LABEL_52:
            switch(a5 >> 62)
            {
              case 1uLL:
                LODWORD(v28) = HIDWORD(a4) - a4;
                if (__OFSUB__(HIDWORD(a4), a4)) {
                  goto LABEL_128;
                }
                uint64_t v28 = (int)v28;
LABEL_84:
                if (v14 != v28)
                {
LABEL_89:
                  uint64_t v33 = a1;
                  unint64_t v34 = a2;
                  char v35 = 4;
                  goto LABEL_109;
                }
                if (v14 < 1)
                {
LABEL_93:
                  uint64_t v45 = a1;
                  unint64_t v46 = a2;
                  char v47 = 4;
                  goto LABEL_113;
                }
                sub_1B51D4BB8(a4, a5);
                char v44 = sub_1B5240420(a1, a2, a4, a5);
                sub_1B520ABCC(a1, a2, 4);
                if (v44) {
                  return 1;
                }
                break;
              case 2uLL:
                uint64_t v43 = *(void *)(a4 + 16);
                uint64_t v42 = *(void *)(a4 + 24);
                BOOL v31 = __OFSUB__(v42, v43);
                uint64_t v28 = v42 - v43;
                if (!v31) {
                  goto LABEL_84;
                }
                goto LABEL_129;
              case 3uLL:
                if (v14) {
                  goto LABEL_89;
                }
                goto LABEL_93;
              default:
                uint64_t v28 = BYTE6(a5);
                goto LABEL_84;
            }
            break;
          case 2uLL:
            uint64_t v27 = *(void *)(a1 + 16);
            uint64_t v26 = *(void *)(a1 + 24);
            uint64_t v14 = v26 - v27;
            if (!__OFSUB__(v26, v27)) {
              goto LABEL_51;
            }
            goto LABEL_121;
          case 3uLL:
            goto LABEL_52;
          default:
            uint64_t v14 = BYTE6(a2);
            goto LABEL_52;
        }
      }
      return 0;
    case 5:
      if (a6 != 5) {
        return 0;
      }
      return a1 == a4;
    case 6:
      if (a6 != 6) {
        return 0;
      }
      return *(float *)&a1 == *(float *)&a4;
    case 7:
      if (a6 != 7) {
        return 0;
      }
      if (a1 == a4 && a2 == a5)
      {
        return 1;
      }
      else
      {
        return sub_1B5373228();
      }
    case 8:
      return a6 == 8 && !(a5 | a4);
    default:
      if (!a6)
      {
        uint64_t v10 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_130;
            }
            uint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_97:
            sub_1B51D4BB8(a1, a2);
LABEL_98:
            switch(a5 >> 62)
            {
              case 1uLL:
                LODWORD(v50) = HIDWORD(a4) - a4;
                if (__OFSUB__(HIDWORD(a4), a4)) {
                  goto LABEL_132;
                }
                uint64_t v50 = (int)v50;
LABEL_103:
                if (v10 != v50)
                {
LABEL_108:
                  uint64_t v33 = a1;
                  unint64_t v34 = a2;
                  char v35 = 0;
LABEL_109:
                  sub_1B520ABCC(v33, v34, v35);
                  return 0;
                }
                if (v10 < 1)
                {
LABEL_112:
                  uint64_t v45 = a1;
                  unint64_t v46 = a2;
                  char v47 = 0;
LABEL_113:
                  sub_1B520ABCC(v45, v46, v47);
                  return 1;
                }
                sub_1B51D4BB8(a4, a5);
                char v53 = sub_1B5240420(a1, a2, a4, a5);
                sub_1B520ABCC(a1, a2, 0);
                if (v53) {
                  return 1;
                }
                break;
              case 2uLL:
                uint64_t v52 = *(void *)(a4 + 16);
                uint64_t v51 = *(void *)(a4 + 24);
                BOOL v31 = __OFSUB__(v51, v52);
                uint64_t v50 = v51 - v52;
                if (!v31) {
                  goto LABEL_103;
                }
                goto LABEL_133;
              case 3uLL:
                if (v10) {
                  goto LABEL_108;
                }
                goto LABEL_112;
              default:
                uint64_t v50 = BYTE6(a5);
                goto LABEL_103;
            }
            break;
          case 2uLL:
            uint64_t v49 = *(void *)(a1 + 16);
            uint64_t v48 = *(void *)(a1 + 24);
            uint64_t v10 = v48 - v49;
            if (!__OFSUB__(v48, v49)) {
              goto LABEL_97;
            }
            goto LABEL_131;
          case 3uLL:
            goto LABEL_98;
          default:
            uint64_t v10 = BYTE6(a2);
            goto LABEL_98;
        }
      }
      return 0;
  }
}

unint64_t sub_1B5241050()
{
  unint64_t result = qword_1E9D48340;
  if (!qword_1E9D48340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48340);
  }
  return result;
}

uint64_t sub_1B52410A8(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      unint64_t result = sub_1B51D4BB8(result, a2);
      break;
    case 7:
      unint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for PSToken(uint64_t a1)
{
  return sub_1B520ABCC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s10FontParser7PSTokenOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B52410A8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PSToken(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B52410A8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B520ABCC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PSToken(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B520ABCC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PSToken(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 8) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PSToken(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 248;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B5241290(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 7u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 8);
  }
}

uint64_t sub_1B52412A8(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(void *)unint64_t result = a2 - 8;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 8;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PSToken()
{
  return &type metadata for PSToken;
}

uint64_t sub_1B52412D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48358);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5241330(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1B52413F4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1B53722B8();
  swift_allocObject();
  uint64_t result = sub_1B5372258();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1B5372358();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1B5241470(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1B53722B8();
  swift_allocObject();
  uint64_t result = sub_1B5372258();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1B52414F4(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_1B53722B8();
      swift_allocObject();
      sub_1B5372278();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1B5372358();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_1B5241594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B52406AC(a1, a2, *(__int16 **)(v3 + 16), a3);
}

uint64_t sub_1B52415B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B5240730(a1, a2, *(__int16 **)(v3 + 16), a3);
}

uint64_t sub_1B52415D0(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48370);
  uint64_t v10 = sub_1B52010C8(&qword_1E9D48378, &qword_1E9D48370);
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  int v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1B523FCF0(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t MutableContiguousArrayStorage.withMutableCheckedBufferView<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[2] = a3;
  v6[3] = a4;
  v6[4] = a5;
  v6[5] = a1;
  v6[6] = a2;
  return (*(uint64_t (**)(uint64_t (*)(long long *), void *, uint64_t, uint64_t))(a5 + 16))(sub_1B5244AA4, v6, a4, a3);
}

uint64_t ContiguousArrayStorage.withCheckedBufferView<A>(action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[2] = a3;
  v6[3] = a4;
  v6[4] = a5;
  v6[5] = a1;
  v6[6] = a2;
  return (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t))(a5 + 24))(sub_1B5242A74, v6, a4, a3);
}

uint64_t sub_1B5241750(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1B52418BC(a1, a2, a3);
}

uint64_t sub_1B5241768(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for RefcountCheck();
  v15[0] = swift_allocObject();
  v15[1] = a1;
  v15[2] = a2;
  v15[3] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))((*MEMORY[0x1E4FBC8C8] & *a3) + 0x190))(a4, a5, a6, a7, v15);
  if (swift_isUniquelyReferenced_nonNull_native())
  {

    swift_release();
    return swift_release();
  }
  else
  {
    swift_release();

    uint64_t result = sub_1B53730C8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B52418BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  type metadata accessor for RefcountCheck();
  swift_allocObject();
  a3();
  if (swift_isUniquelyReferenced_nonNull_native()) {
    return swift_release();
  }
  uint64_t result = sub_1B53730C8();
  __break(1u);
  return result;
}

uint64_t sub_1B52419AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for RefcountCheck();
  v15[0] = swift_allocObject();
  v15[1] = a1;
  v15[2] = a2;
  v15[3] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))((*MEMORY[0x1E4FBC8C8] & *a3) + 0x1A0))(a4, a5, a6, a7, v15);
  if (swift_isUniquelyReferenced_nonNull_native())
  {

    swift_release();
    return swift_release();
  }
  else
  {
    swift_release();

    uint64_t result = sub_1B53730C8();
    __break(1u);
  }
  return result;
}

uint64_t UnsafeMutableBufferPointer.withMutableCheckedBufferView<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1B5372D18();
  uint64_t v12 = a6;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  return (*(uint64_t (**)(uint64_t (*)(long long *), unsigned char *, uint64_t, uint64_t, uint64_t))(WitnessTable + 16))(sub_1B5244AA4, v10, a6, v11, WitnessTable);
}

uint64_t CheckedBufferView.withUnsafeBufferPointer<A>(_:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_1B53726B8();
  return a1(v2);
}

uint64_t CheckedBufferView.indices.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1B5372CE8();
  if (__OFADD__(a4, result))
  {
    __break(1u);
  }
  else if (a4 + result >= a4)
  {
    return a4;
  }
  __break(1u);
  return result;
}

void (*CheckedBufferView.subscript.modify(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v5 = malloc(0x28uLL);
  *a1 = v5;
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t result = (void (*)(void *))sub_1B5372CE8();
  char v8 = (char *)result + v6;
  if (__OFADD__(v6, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((uint64_t)v8 < v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v6 > a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((uint64_t)v8 <= a2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!__OFSUB__(a2, v6))
  {
    v5[4] = sub_1B5372D38();
    return sub_1B5241D48;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1B5241D48(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t CheckedBufferView.startIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

uint64_t CheckedBufferView.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1B5372CE8();
  BOOL v6 = __OFADD__(a4, v5);
  uint64_t result = a4 + v5;
  if (v6) {
    __break(1u);
  }
  return result;
}

void (*CheckedBufferView.subscript.read(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(void *a1)
{
  uint64_t v12 = *(void *)(a7 - 8);
  uint64_t v13 = v12;
  *a1 = a7;
  a1[1] = v12;
  uint64_t v14 = malloc(*(void *)(v12 + 64));
  a1[2] = v14;
  uint64_t result = (void (*)(void *))sub_1B5372CE8();
  uint64_t v16 = (char *)result + a6;
  if (__OFADD__(a6, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((uint64_t)v16 < a6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a6 > a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((uint64_t)v16 <= a2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!__OFSUB__(a2, a6))
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v13 + 16))(v14, a4 + *(void *)(v13 + 72) * (a2 - a6), a7);
    return sub_1B52154C4;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t CheckedBufferView.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t result = sub_1B5372CE8();
  uint64_t v11 = a3 + result;
  if (__OFADD__(a3, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v11 < a3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a3 > a1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v11 <= a1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__OFSUB__(a1, a3))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = a2 + *(void *)(v12 + 72) * (a1 - a3);
  return v13(a5, v14, a4);
}

uint64_t CheckedBufferView.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t result = sub_1B5372CE8();
  uint64_t v10 = v7 + result;
  if (__OFADD__(v7, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v10 < v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v7 > a2)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v10 <= a2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__OFSUB__(a2, v7))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  uint64_t v13 = v6 + *(void *)(v11 + 72) * (a2 - v7);
  return v12(v13, a1, v8);
}

uint64_t CheckedBufferView.subscript.getter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = result - a6;
  if (__OFSUB__(result, a6))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (__OFADD__(v6, v7))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v6 + v7 >= v6)
  {
    swift_retain();
    sub_1B5372D28();
    sub_1B5372D08();
    return a3;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t CheckedBufferView.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1B5244378(a1, a2, a3, a4, a5, a6, a7);
  return swift_release();
}

uint64_t sub_1B524218C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = sub_1B5372D08();
  uint64_t v15 = sub_1B5243664(a1, v13, v14, a6, a7, a8);
  BOOL v16 = __OFADD__(a2, v15);
  uint64_t result = a2 + v15;
  if (v16) {
    __break(1u);
  }
  return result;
}

void (*CheckedBufferView.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[6] = a4;
  v9[7] = v4;
  v9[4] = a2;
  v9[5] = a3;
  *uint64_t v9 = CheckedBufferView.subscript.getter(a2, a3, *v4, v4[1], v4[2], v4[3]);
  v9[1] = v10;
  v9[2] = v11;
  v9[3] = v12;
  return sub_1B52422A4;
}

void sub_1B52422A4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v4 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[6];
  uint64_t v8 = (*a1)[4];
  uint64_t v7 = (*a1)[5];
  uint64_t v9 = **a1;
  if (a2)
  {
    uint64_t v10 = swift_retain();
    sub_1B5244378(v10, v3, v4, v5, v8, v7, v6);
    swift_release();
  }
  else
  {
    sub_1B5244378(v9, v3, v4, v5, v8, v7, v6);
  }
  swift_release();
  free(v2);
}

Swift::Int __swiftcall CheckedBufferView.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5242374(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = CheckedBufferView.subscript.modify(v10, *a2);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v8, a1, v6);
  ((void (*)(void *, void))v5)(v10, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

void (*sub_1B5242440(void *a1, uint64_t *a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = CheckedBufferView.subscript.modify(v4, *a2);
  return sub_1B52424B0;
}

void sub_1B52424B0(void *a1)
{
  BOOL v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1B52424F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1B5244378(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a3);
  return swift_release();
}

void (*sub_1B5242544(void *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x40uLL);
  *a1 = v7;
  v7[4] = v3;
  v7[5] = a3;
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  v7[6] = *a2;
  v7[7] = v9;
  *uint64_t v7 = CheckedBufferView.subscript.getter(v8, v9, *v3, v3[1], v3[2], v3[3]);
  v7[1] = v10;
  v7[2] = v11;
  void v7[3] = v12;
  return sub_1B52425CC;
}

void sub_1B52425CC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v4 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v7 = (*a1)[6];
  uint64_t v6 = (*a1)[7];
  uint64_t v8 = (*a1)[5];
  uint64_t v9 = **a1;
  if (a2)
  {
    uint64_t v10 = swift_retain();
    sub_1B5244378(v10, v3, v4, v5, v7, v6, v8);
    swift_release();
  }
  else
  {
    sub_1B5244378(v9, v3, v4, v5, v7, v6, v8);
  }
  swift_release();
  free(v2);
}

uint64_t sub_1B524268C()
{
  return sub_1B5372668();
}

uint64_t sub_1B52426A8()
{
  return sub_1B5372648();
}

uint64_t sub_1B52426CC()
{
  return sub_1B5372638();
}

void sub_1B52426F0(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
}

uint64_t sub_1B52426FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = CheckedBufferView.endIndex.getter(a1, v2[1], v2[2], v2[3]);
  *a2 = result;
  return result;
}

void (*sub_1B5242730(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = CheckedBufferView.subscript.read(v7, *a2, v8, v3[1], v3[2], v3[3], *(void *)(a3 + 16));
  return sub_1B52153C4;
}

uint64_t sub_1B52427A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = CheckedBufferView.subscript.getter(*a1, a1[1], *v2, v2[1], v2[2], v2[3]);
  *a2 = result;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

uint64_t sub_1B52427EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = CheckedBufferView.indices.getter(a1, v2[1], v2[2], v2[3]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

void sub_1B5242820(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_1B5242830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5244108(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_1B5242870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5244108(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

void *sub_1B52428B0(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

__n128 sub_1B52428C8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  __n128 result = *(__n128 *)(v1 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_1B52428E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1B5242938(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1B524298C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B524299C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1B53726B8();
  v16[2] = a5;
  v16[3] = a6;
  v16[4] = a7;
  v16[5] = a3;
  v16[6] = a4;
  return UnsafeMutableBufferPointer.withMutableCheckedBufferView<A>(_:)((uint64_t)sub_1B5244A70, (uint64_t)v16, v13, v14, AssociatedTypeWitness, a6);
}

uint64_t sub_1B5242A74(uint64_t a1, uint64_t a2)
{
  return sub_1B524299C(a1, a2, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t sub_1B5242A98(long long *a1, void (*a2)(uint64_t *))
{
  type metadata accessor for RefcountCheck();
  uint64_t v5 = swift_allocObject();
  long long v6 = *a1;
  uint64_t v7 = 0;
  a2(&v5);
  sub_1B5242B50();
  return swift_release();
}

uint64_t sub_1B5242B50()
{
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result)
  {
    uint64_t result = sub_1B53730C8();
    __break(1u);
  }
  return result;
}

uint64_t ContiguousByteStorage.withCheckedBufferView<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[2] = a3;
  void v7[3] = a4;
  v7[4] = a5;
  v7[5] = a6;
  v7[6] = a1;
  v7[7] = a2;
  return (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t, uint64_t))(a6 + 8))(sub_1B52444B8, v7, a5, a3, a6);
}

uint64_t sub_1B5242C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v15 = sub_1B53726A8();
  uint64_t v16 = a7;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t result = (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t))(WitnessTable + 24))(sub_1B5242A74, v14, a7, v15, WitnessTable);
  if (v9) {
    *a9 = v9;
  }
  return result;
}

uint64_t MutableContiguousByteStorage.withMutableCheckedBufferView<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[2] = a3;
  void v7[3] = a4;
  v7[4] = a5;
  v7[5] = a6;
  v7[6] = a1;
  v7[7] = a2;
  return (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t, uint64_t))(a6 + 16))(sub_1B52444FC, v7, a5, a3, a6);
}

uint64_t sub_1B5242D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  uint64_t v20 = a7;
  uint64_t v21 = a8;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47950);
  return sub_1B5242E28(a6, a9, (uint64_t)v17, a1, a2, a6, v15, a7, MEMORY[0x1E4FBC0F0], (uint64_t)&v24, a10, a11);
}

uint64_t sub_1B5242E28(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = *(void *)(a7 - 8);
  uint64_t v16 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v16);
  uint64_t v24 = (char *)v27 - v23;
  if (v20)
  {
    uint64_t v25 = *(void *)(*(void *)(v22 - 8) + 72);
    if (v25)
    {
      if (v21 - v20 != 0x8000000000000000 || v25 != -1)
      {
        uint64_t v26 = a12(v20, (v21 - v20) / v25, v22);
        uint64_t result = a2(v26);
        if (!v12) {
          return result;
        }
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a10, v18, a7);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t result = ((uint64_t (*)(void, void, char *))a2)(0, 0, (char *)v27 - v23);
  uint64_t v18 = v24;
  if (v12) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a10, v18, a7);
  }
  return result;
}

uint64_t UnsafeMutableBufferPointer.withUnsafeBufferPointer<A>(_:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_1B53726B8();
  return a1(v2);
}

uint64_t CheckedBufferView.withUnsafeMutableBufferPointer<A>(_:)(uint64_t (*a1)(uint64_t))
{
  sub_1B5372D18();
  return a1(v1 + 8);
}

uint64_t UnsafeMutableBufferPointer.withUnsafeMutableBufferPointer<A>(_:)(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

uint64_t sub_1B52430A4(uint64_t (*a1)(uint64_t))
{
  return CheckedBufferView.withUnsafeMutableBufferPointer<A>(_:)(a1);
}

uint64_t sub_1B52430C0()
{
  swift_getWitnessTable();
  return sub_1B5372C18();
}

uint64_t sub_1B5243114(uint64_t (*a1)(uint64_t))
{
  return CheckedBufferView.withUnsafeBufferPointer<A>(_:)(a1);
}

void *sub_1B5243138(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[3] = a3;
  sub_1B5372A68();
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(a4 + 16);
  if (_swift_isClassOrObjCExistentialType()) {
    uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
  }
  else {
    uint64_t v9 = v7;
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (_swift_isClassOrObjCExistentialType()) {
    uint64_t v11 = v7 & 0xFFFFFFFFFFFFFF8;
  }
  else {
    uint64_t v11 = v7;
  }
  v14[0] = v11
         + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80));
  uint64_t v12 = v14[0];
  v14[1] = v10;
  a1(v14);
  return sub_1B5243AA8(v14, v12, v10);
}

void sub_1B524324C()
{
}

uint64_t sub_1B524325C()
{
  return sub_1B5372A78();
}

uint64_t sub_1B5243280(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[3] = a3;
  sub_1B5372FD8();
  uint64_t v7 = *(void *)(*(void *)v4 + 16);
  uint64_t v8 = *(void *)(a4 + 16);
  v11[0] = *(void *)v4
         + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80));
  uint64_t v9 = v11[0];
  v11[1] = v7;
  a1(v11);
  return sub_1B5243B00(v11, v9, v7, v4, v8);
}

uint64_t sub_1B5243368(uint64_t a1)
{
  return MEMORY[0x1F4184F38](*v1, *(void *)(a1 + 16));
}

uint64_t sub_1B5243378()
{
  return sub_1B5372FE8();
}

uint64_t sub_1B524339C(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[3] = a3;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = sub_1B5372EE8();
  sub_1B5372EB8();
  v10[0] = *(void *)(v4 + 8) + *(void *)(*(void *)(v6 - 8) + 72) * *(void *)(v4 + 16);
  uint64_t v8 = v10[0];
  v10[1] = v7;
  a1(v10);
  return sub_1B5243B34(v10, v8, v7, v4, v6);
}

uint64_t sub_1B5243478(uint64_t a1)
{
  return MEMORY[0x1F4184A00](*v1, v1[1], v1[2], v1[3], *(void *)(a1 + 16));
}

uint64_t sub_1B524348C()
{
  return sub_1B5372EC8();
}

uint64_t sub_1B52434B8()
{
  return sub_1B53723D8();
}

uint64_t sub_1B52434D0()
{
  return sub_1B53723B8();
}

uint64_t sub_1B52434F0()
{
  return sub_1B5372498();
}

uint64_t UnsafeRawBufferPointer.withUnsafeBytes<A>(_:)(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_1B5243548(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  return UnsafeRawBufferPointer.withUnsafeBytes<A>(_:)(a1, a2, *v2, v2[1]);
}

uint64_t UnsafeMutableRawBufferPointer.withUnsafeMutableBytes<A>(_:)(uint64_t (*a1)(void, void))
{
  return a1(*v1, v1[1]);
}

uint64_t sub_1B5243598(uint64_t (*a1)(void, void))
{
  return UnsafeMutableRawBufferPointer.withUnsafeMutableBytes<A>(_:)(a1);
}

uint64_t sub_1B52435B0()
{
  return sub_1B5372D98();
}

uint64_t UnsafeBufferPointer.withUnsafeBufferPointer<A>(_:)(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_1B5243604()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1B524360C(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  return UnsafeBufferPointer.withUnsafeBufferPointer<A>(_:)(a1, a2, *v2, v2[1]);
}

uint64_t sub_1B5243628(uint64_t (*a1)(uint64_t))
{
  return UnsafeMutableBufferPointer.withUnsafeMutableBufferPointer<A>(_:)(a1);
}

uint64_t sub_1B5243640(uint64_t (*a1)(uint64_t))
{
  return UnsafeMutableBufferPointer.withUnsafeBufferPointer<A>(_:)(a1);
}

uint64_t sub_1B5243664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1B5372CD8();
  uint64_t v29 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v33 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v27 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedConformanceWitness = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v30 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v34 = (char *)&v26 - v19;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v39 = a2;
  uint64_t v32 = a2;
  uint64_t v40 = a3;
  sub_1B5372968();
  if (v42 != 1) {
    return v41;
  }
  if (!a3)
  {
    uint64_t result = sub_1B5372BB8();
    if ((result & 1) == 0) {
      goto LABEL_14;
    }
    return 0;
  }
  uint64_t v26 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v30, a1, a5);
  sub_1B5372958();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1B5372D88();
  uint64_t v20 = v33;
  uint64_t v30 = *(char **)(v33 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v30)(v14, 1, a4) == 1)
  {
    uint64_t v21 = 0;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v28 + 8))(v34, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v26);
    return v21;
  }
  uint64_t v21 = 0;
  uint64_t v23 = *(uint64_t (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v24 = a3 & ~(a3 >> 63);
  uint64_t v25 = v27;
  while (1)
  {
    uint64_t result = v23(v25, v14, a4);
    if (v24 == v21) {
      break;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 40))(v32 + *(void *)(v33 + 72) * v21++, v25, a4);
    sub_1B5372D88();
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v30)(v14, 1, a4) == 1) {
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void *sub_1B5243AA8(void *result, uint64_t a2, uint64_t a3)
{
  if (*result)
  {
    if (*result == a2)
    {
      if (result[1] == a3)
      {
        uint64_t v3 = sub_1B5372AE8();
        return (void *)nullsub_1(v3);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5243B00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*a1)
  {
    if (*a1 == a2)
    {
      if (a1[1] == a3) {
        return MEMORY[0x1F4184F70](0, a5);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return MEMORY[0x1F4184F70](a1, a2);
}

uint64_t sub_1B5243B34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*a1)
  {
    if (*a1 == a2)
    {
      if (a1[1] == a3) {
        return MEMORY[0x1F4184A40](0, a5);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return MEMORY[0x1F4184A40](a1, a2);
}

uint64_t sub_1B5243B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5244108(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_1B5243B94(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1B5372CB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_1B5372628();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v8, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v8, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_1B5372628();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1B5243DA0(long long *a1, void *a2, uint64_t a3)
{
  type metadata accessor for RefcountCheck();
  uint64_t v8 = swift_allocObject();
  long long v9 = *a1;
  uint64_t v10 = 0;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t *))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x140))(a3, &v8);
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    swift_release();
    return v6;
  }
  else
  {

    uint64_t result = sub_1B53730C8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5243EC4(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3)
{
  return sub_1B5243EDC(a1, a2, a3);
}

uint64_t sub_1B5243EDC(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3)
{
  type metadata accessor for RefcountCheck();
  swift_allocObject();
  a2(&v7);
  if (v3)
  {
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_5;
    }
  }
  else
  {
    a3 = v7;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_5:
      swift_release();
      return a3;
    }
  }
  uint64_t result = sub_1B53730C8();
  __break(1u);
  return result;
}

uint64_t sub_1B5243FDC(uint64_t a1, void (*a2)(uint64_t *__return_ptr), char a3)
{
  type metadata accessor for RefcountCheck();
  swift_allocObject();
  a2(&v7);
  if (v3)
  {
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_5;
    }
  }
  else
  {
    a3 = v7;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_5:
      swift_release();
      return a3 & 1;
    }
  }
  uint64_t result = sub_1B53730C8();
  __break(1u);
  return result;
}

uint64_t sub_1B52440DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5244108(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

uint64_t sub_1B5244108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_1B5372628();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v14[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1B5244378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  swift_getWitnessTable();
  uint64_t result = sub_1B5372C18();
  if (__OFSUB__(a6, a5))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v14 = result;
  if (result != a6 - a5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v15 = *(void *)(v7 + 24);
  uint64_t result = a5 - v15;
  if (__OFSUB__(a5, v15))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (__OFADD__(result, v14))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result + v14 >= result)
  {
    uint64_t v16 = *(void *)(a7 + 16);
    uint64_t v17 = sub_1B5372D28();
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v26 = a2;
    uint64_t v27 = a3;
    uint64_t v24 = sub_1B5372D18();
    uint64_t WitnessTable = swift_getWitnessTable();
    return sub_1B524218C((uint64_t)&v26, v17, v19, v21, v23, v16, v24, WitnessTable);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1B52444B8(uint64_t a1, uint64_t a2)
{
  return sub_1B5244540(a1, a2, (uint64_t (*)(uint64_t))sub_1B52449D4, 24507, MEMORY[0x1E4FBB0B0]);
}

uint64_t sub_1B52444FC(uint64_t a1, uint64_t a2)
{
  return sub_1B5244540(a1, a2, (uint64_t (*)(uint64_t))sub_1B5244994, 62930, MEMORY[0x1E4FBB728]);
}

uint64_t sub_1B5244540(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  return sub_1B5242D64(a1, a2, v5[6], v5[7], v5[2], v5[3], v5[4], v5[5], a3, a4, a5);
}

uint64_t sub_1B5244580()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B524459C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B52445B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B52445D4()
{
  return MEMORY[0x1E4FBB568];
}

unint64_t sub_1B52445E4()
{
  unint64_t result = qword_1E9D48380;
  if (!qword_1E9D48380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D48388);
    sub_1B5244660();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48380);
  }
  return result;
}

unint64_t sub_1B5244660()
{
  unint64_t result = qword_1E9D48390[0];
  if (!qword_1E9D48390[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9D48390);
  }
  return result;
}

uint64_t sub_1B52446B4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B52446F0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B524472C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B5244768(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B52447A4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for UTF16Iterator()
{
  return swift_release();
}

uint64_t initializeWithCopy for UTF16Sequence(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  return a1;
}

void *assignWithCopy for UTF16Sequence(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for UTF16Sequence(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for UTF16Sequence(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UTF16Sequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CheckedBufferView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for RefcountCheck()
{
  return self;
}

uint64_t sub_1B5244994(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result = UnsafeMutableBufferPointer.withMutableCheckedBufferView<A>(_:)(v3[6], v3[7], a1, a2, v3[3], v3[4]);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_1B52449D4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B5242C28(a1, a2, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a3);
}

uint64_t sub_1B5244A08@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (!result)
  {
    uint64_t v5 = 0;
LABEL_6:
    *a3 = v5;
    return result;
  }
  uint64_t v5 = a2;
  if (*(void *)(v3 + 48) >= a2)
  {
    if (*(void *)(v3 + 40)) {
      uint64_t result = sub_1B5372CC8();
    }
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5244A70(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 40))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1B5244AA4(long long *a1)
{
  return sub_1B5242A98(a1, *(void (**)(uint64_t *))(v1 + 40));
}

uint64_t sub_1B5244AD0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 62;
  uint64_t v5 = result;
  switch(a4 >> 62)
  {
    case 1uLL:
      result += (int)a3;
      if (__OFADD__((int)a3, v5)) {
        goto LABEL_9;
      }
      goto LABEL_6;
    case 2uLL:
      uint64_t v6 = *(void *)(a3 + 16);
      result += v6;
      if (!__OFADD__(v6, v5)) {
        goto LABEL_6;
      }
      goto LABEL_9;
    default:
LABEL_6:
      BOOL v7 = __OFSUB__(a2, v5);
      uint64_t v8 = a2 - v5;
      if (v7)
      {
        __break(1u);
        JUMPOUT(0x1B5244C30);
      }
      uint64_t v9 = result + v8;
      if (__OFADD__(result, v8))
      {
LABEL_9:
        sub_1B51D4F28();
        swift_allocError();
      }
      else
      {
        switch((int)v4)
        {
          case 1:
            if (result >= (int)a3) {
              goto LABEL_24;
            }
            goto LABEL_25;
          case 2:
            if (result < *(void *)(a3 + 16)) {
              goto LABEL_25;
            }
            if (v4 != 2) {
              goto LABEL_24;
            }
            if (*(void *)(a3 + 24) < v9) {
              goto LABEL_25;
            }
            break;
          case 3:
            if ((result & 0x8000000000000000) == 0 && v9 <= 0) {
              goto LABEL_22;
            }
            goto LABEL_25;
          default:
            if (result < 0 || BYTE6(a4) < v9) {
              goto LABEL_25;
            }
            goto LABEL_22;
        }
        do
        {
LABEL_22:
          if (v9 >= result) {
            return result;
          }
          __break(1u);
LABEL_24:
          ;
        }
        while (a3 >> 32 >= v9);
LABEL_25:
        sub_1B51D4ED4();
        swift_allocError();
        *uint64_t v10 = 2;
      }
      return swift_willThrow();
  }
}

uint64_t sub_1B5244C50(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      BOOL v5 = __OFADD__(result, (int)a2);
      result += (int)a2;
      if (v5) {
        goto LABEL_7;
      }
      goto LABEL_10;
    case 2uLL:
      uint64_t v3 = *(void *)(a2 + 16);
      BOOL v5 = __OFADD__(v3, result);
      result += v3;
      if (v5)
      {
LABEL_7:
        sub_1B51D4F28();
        swift_allocError();
        return swift_willThrow();
      }
      if (a3 >> 62 == 2)
      {
        uint64_t v4 = *(void *)(a2 + 24);
      }
      else
      {
LABEL_10:
        uint64_t v3 = (int)a2;
        uint64_t v4 = a2 >> 32;
      }
      if (v4 < v3)
      {
        __break(1u);
        JUMPOUT(0x1B5244D50);
      }
LABEL_12:
      if (result < v3 || v4 < result)
      {
        sub_1B51D4ED4();
        swift_allocError();
        *uint64_t v6 = 2;
        return swift_willThrow();
      }
      return result;
    case 3uLL:
      goto LABEL_12;
    default:
      uint64_t v3 = 0;
      uint64_t v4 = BYTE6(a3);
      goto LABEL_12;
  }
}

uint64_t sub_1B5244D60(int a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  uint64_t v5 = a2;
  uint64_t v7 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(v3) - v3;
      if (__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_21;
      }
      uint64_t v7 = (int)v7;
LABEL_6:
      if (__OFADD__(v7, a2))
      {
        __break(1u);
        goto LABEL_19;
      }
      sub_1B5372378();
      sub_1B53722B8();
      swift_allocObject();
      v20[0] = 0x8000000000;
      v20[1] = sub_1B5372278();
      sub_1B5240118((int *)v20, a1);
      int v12 = HIDWORD(v20[0]);
      if (__OFSUB__(HIDWORD(v20[0]), v20[0]))
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v13 = SLODWORD(v20[0]);
      uint64_t v14 = HIDWORD(v20[0]) - LODWORD(v20[0]);
      uint64_t v15 = SLODWORD(v20[0]) - (uint64_t)SHIDWORD(v20[0]);
      while (v5 > v14)
      {
        sub_1B5372408();
        BOOL v11 = __OFSUB__(v5, v14);
        v5 += v15;
        if (v11)
        {
          __break(1u);
          break;
        }
      }
      if (v12 < (int)v13 || v5 < v13)
      {
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x1B5244F0CLL);
      }
      uint64_t v16 = sub_1B5372398();
      unint64_t v18 = v17;
      sub_1B5372408();
      swift_release();
      return sub_1B51D4C64(v16, v18);
    case 2uLL:
      uint64_t v10 = v3 + 16;
      uint64_t v9 = *(void *)(v3 + 16);
      uint64_t v8 = *(void *)(v10 + 8);
      BOOL v11 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_22;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v7 = BYTE6(v4);
      goto LABEL_6;
  }
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CompressionError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CompressionError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_1B5244F7C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B5244F98(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)uint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompressionError()
{
  return &type metadata for CompressionError;
}

uint64_t sub_1B5244FC8(uint64_t a1, unint64_t a2)
{
  sub_1B51D4BB8(a1, a2);
  sub_1B51D4C10();
  uint64_t result = sub_1B53724D8();
  uint64_t v5 = v3 - result;
  BOOL v6 = __OFSUB__(v3, result);
  if (__OFSUB__(v3, result)) {
    goto LABEL_75;
  }
  if (v5 >= 4)
  {
    uint64_t v8 = result + 4;
    if (result > 0x7FFFFFFFFFFFFFFBLL || v3 < v8)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (result < 0)
    {
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    unint64_t v10 = *(void *)(v4 + 16);
    if (v10 < result || v10 < v8) {
      goto LABEL_73;
    }
    uint64_t v5 = v3 - v8;
    BOOL v6 = __OFSUB__(v3, v8);
    if (__OFSUB__(v3, v8)) {
      goto LABEL_74;
    }
    uint64_t v7 = bswap32(*(_DWORD *)(v4 + 32 + result));
    if (v5 >= 4)
    {
      do
      {
        unint64_t v12 = result + 4;
        uint64_t v13 = result + 8;
        if (result + 4 > 0x7FFFFFFFFFFFFFFBLL || v3 < v13) {
          goto LABEL_71;
        }
        if ((v12 & 0x8000000000000000) != 0) {
          goto LABEL_72;
        }
        unint64_t v15 = *(void *)(v4 + 16);
        if (v15 < v12 || v15 < v13) {
          goto LABEL_73;
        }
        BOOL v17 = __OFSUB__(v3, v13);
        uint64_t v5 = v3 - v13;
        BOOL v6 = v17;
        if (v17) {
          goto LABEL_74;
        }
        uint64_t v7 = bswap32(*(_DWORD *)(v4 + 36 + result)) + v7;
        result += 4;
      }
      while (v5 > 3);
      result += 4;
    }
    else
    {
      result += 4;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (!v6)
  {
    if (v5 < 1)
    {
LABEL_66:
      swift_bridgeObjectRelease();
      return v7;
    }
    if (result != 0x7FFFFFFFFFFFFFFFLL && v3 >= result + 1)
    {
      char v18 = -24;
      unint64_t v19 = 24;
      unint64_t v20 = result;
      while (1)
      {
        if (result < 0) {
          goto LABEL_68;
        }
        unint64_t v21 = v20 + 1;
        unint64_t v22 = *(void *)(v4 + 16);
        if (v22 < v20 || v22 < v21) {
          goto LABEL_69;
        }
        if (v19 - 33 < 0xFFFFFFFFFFFFFFBFLL) {
          break;
        }
        unsigned int v26 = *(unsigned __int8 *)(v4 + 32 + v20);
        if ((v19 & 0x8000000000000000) != 0)
        {
          if (v19 <= 0xFFFFFFFFFFFFFFE0) {
            break;
          }
          unsigned int v24 = v26 >> v18;
          BOOL v17 = __OFSUB__(v3, v21);
          uint64_t v25 = v3 - v21;
          if (v17)
          {
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
        }
        else
        {
          if (v19 >= 0x20) {
            break;
          }
          unsigned int v24 = v26 << v19;
          BOOL v17 = __OFSUB__(v3, v21);
          uint64_t v25 = v3 - v21;
          if (v17) {
            goto LABEL_65;
          }
        }
LABEL_57:
        uint64_t v7 = v24 + v7;
        if (v25 <= 0) {
          goto LABEL_66;
        }
        BOOL v17 = __OFSUB__(v19, 8);
        v19 -= 8;
        if (v17) {
          goto LABEL_70;
        }
        if (v20 != 0x7FFFFFFFFFFFFFFELL)
        {
          uint64_t v27 = v20 + 2;
          ++v20;
          v18 += 8;
          if (v3 >= v27) {
            continue;
          }
        }
        goto LABEL_67;
      }
      unsigned int v24 = 0;
      BOOL v17 = __OFSUB__(v3, v21);
      uint64_t v25 = v3 - v21;
      if (v17) {
        goto LABEL_65;
      }
      goto LABEL_57;
    }
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
LABEL_76:
  __break(1u);
  return result;
}

uint8_t *sub_1B52451D8(uint8_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v28[2] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = a1;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a3 >> 32) - (int)a3;
      if (a3 >> 32 < (int)a3)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
      }
      else
      {
        sub_1B51D4BB8(a3, a4);
        unint64_t v10 = (const uint8_t *)sub_1B5372268();
        if (!v10) {
          goto LABEL_9;
        }
        uint64_t v11 = sub_1B5372298();
        if (!__OFSUB__((int)a3, v11))
        {
          v10 += (int)a3 - v11;
LABEL_9:
          uint64_t v12 = sub_1B5372288();
          if (v12 >= v9) {
            size_t v13 = (a3 >> 32) - (int)a3;
          }
          else {
            size_t v13 = v12;
          }
          if (v7)
          {
            if (v10)
            {
              size_t v14 = sfp_decompress_brotli(v7, a2 - (void)v7, v10, v13);
              if (v14)
              {
                uint64_t v7 = (uint8_t *)v14;
              }
              else
              {
                sub_1B5245BE8();
                swift_allocError();
                *(_DWORD *)uint64_t v26 = 2;
                *(unsigned char *)(v26 + 4) = 1;
                swift_willThrow();
              }
              sub_1B51D4C64(a3, a4);
              return v7;
            }
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
            JUMPOUT(0x1B5245530);
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
      }
      __break(1u);
      return result;
    case 2uLL:
      uint64_t v15 = *(void *)(a3 + 16);
      uint64_t v16 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain();
      BOOL v17 = (const uint8_t *)sub_1B5372268();
      if (!v17) {
        goto LABEL_20;
      }
      uint64_t v18 = sub_1B5372298();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_37;
      }
      v17 += v15 - v18;
LABEL_20:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_36;
      }
      uint64_t v21 = sub_1B5372288();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_42;
      }
      if (!v17) {
        goto LABEL_43;
      }
      size_t v23 = sfp_decompress_brotli(v7, a2 - (void)v7, v17, v22);
      if (v23)
      {
        uint64_t v7 = (uint8_t *)v23;
      }
      else
      {
        sub_1B5245BE8();
        swift_allocError();
        *(_DWORD *)uint64_t v25 = 2;
        *(unsigned char *)(v25 + 4) = 1;
        swift_willThrow();
      }
      swift_release();
      swift_release();
      return v7;
    case 3uLL:
      memset(v28, 0, 14);
      if (!a1) {
        goto LABEL_44;
      }
      size_t v8 = sfp_decompress_brotli(a1, a2 - (void)a1, (const uint8_t *)v28, 0);
      if (!v8) {
        goto LABEL_31;
      }
      return (uint8_t *)v8;
    default:
      v28[0] = a3;
      LOWORD(v28[1]) = a4;
      BYTE2(v28[1]) = BYTE2(a4);
      BYTE3(v28[1]) = BYTE3(a4);
      BYTE4(v28[1]) = BYTE4(a4);
      BYTE5(v28[1]) = BYTE5(a4);
      if (!a1)
      {
        __break(1u);
        goto LABEL_40;
      }
      size_t v8 = sfp_decompress_brotli(a1, a2 - (void)a1, (const uint8_t *)v28, BYTE6(a4));
      if (v8) {
        return (uint8_t *)v8;
      }
LABEL_31:
      sub_1B5245BE8();
      swift_allocError();
      *(_DWORD *)uint64_t v24 = 2;
      *(unsigned char *)(v24 + 4) = 1;
      swift_willThrow();
      return v7;
  }
}

uLongf sub_1B5245540(Bytef *dest, uint64_t a2, uint64_t a3, unint64_t a4)
{
  destLen[1] = *MEMORY[0x1E4F143B8];
  switch(a4 >> 62)
  {
    case 1uLL:
      int v10 = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      if (v10 < 0)
      {
LABEL_36:
        sub_1B51D4F28();
        swift_allocError();
        return swift_willThrow();
      }
      uLong v11 = v10;
      uLongf v12 = a2 - (void)dest;
      BOOL v4 = dest == 0;
      if (!dest) {
        uLongf v12 = 0;
      }
      destLen[0] = v12;
LABEL_25:
      if ((int)a3 > a3 >> 32) {
        goto LABEL_41;
      }
      sub_1B51D4BB8(a3, a4);
      uint64_t v24 = sub_1B5372268();
      if (!v24)
      {
LABEL_46:
        sub_1B5372288();
        if (!v4)
        {
LABEL_48:
          __break(1u);
LABEL_49:
          sub_1B5372288();
          if (!dest) {
LABEL_50:
          }
            __break(1u);
          __break(1u);
          JUMPOUT(0x1B52458B4);
        }
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      uint64_t v25 = v24;
      uint64_t v26 = sub_1B5372298();
      uint64_t v27 = (int)a3 - v26;
      if (__OFSUB__((int)a3, v26))
      {
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
      }
      sub_1B5372288();
      if (v4) {
        goto LABEL_47;
      }
      int v22 = uncompress(dest, destLen, (const Bytef *)(v25 + v27), v11);
      sub_1B51D4C64(a3, a4);
LABEL_30:
      int v28 = 0;
      char v29 = 1;
      switch(v22)
      {
        case -5:
          goto LABEL_34;
        case -4:
          int v28 = 1;
          goto LABEL_34;
        case -3:
          int v28 = 2;
          goto LABEL_34;
        case 0:
          uLongf result = destLen[0];
          if ((destLen[0] & 0x8000000000000000) != 0) {
            goto LABEL_36;
          }
          return result;
        default:
          char v29 = 0;
          int v28 = v22;
LABEL_34:
          sub_1B5245BE8();
          swift_allocError();
          *(_DWORD *)uint64_t v30 = v28;
          *(unsigned char *)(v30 + 4) = v29;
          break;
      }
      return swift_willThrow();
    case 2uLL:
      uint64_t v14 = *(void *)(a3 + 16);
      uint64_t v13 = *(void *)(a3 + 24);
      uLong v11 = v13 - v14;
      if (__OFSUB__(v13, v14)) {
        goto LABEL_40;
      }
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_36;
      }
      uLongf v15 = a2 - (void)dest;
      BOOL v4 = dest == 0;
      if (!dest) {
        uLongf v15 = 0;
      }
      destLen[0] = v15;
      if (a4 >> 62 != 2) {
        goto LABEL_25;
      }
      uint64_t v16 = *(void *)(a3 + 16);
      swift_retain();
      swift_retain();
      uint64_t v17 = sub_1B5372268();
      if (!v17) {
        goto LABEL_49;
      }
      uint64_t v18 = v17;
      uint64_t v19 = sub_1B5372298();
      BOOL v20 = __OFSUB__(v16, v19);
      uint64_t v21 = v16 - v19;
      if (v20) {
        goto LABEL_43;
      }
      sub_1B5372288();
      if (!dest) {
        goto LABEL_50;
      }
      int v22 = uncompress(dest, destLen, (const Bytef *)(v18 + v21), v11);
      swift_release();
      swift_release();
      goto LABEL_30;
    case 3uLL:
      uLongf v23 = a2 - (void)dest;
      if (!dest) {
        uLongf v23 = 0;
      }
      destLen[0] = v23;
      memset(v32, 0, 14);
      if (!dest) {
        goto LABEL_45;
      }
      uLong v9 = 0;
      goto LABEL_24;
    default:
      uLongf v8 = a2 - (void)dest;
      if (!dest) {
        uLongf v8 = 0;
      }
      destLen[0] = v8;
      v32[0] = a3;
      LOWORD(v32[1]) = a4;
      BYTE2(v32[1]) = BYTE2(a4);
      BYTE3(v32[1]) = BYTE3(a4);
      BYTE4(v32[1]) = BYTE4(a4);
      BYTE5(v32[1]) = BYTE5(a4);
      if (dest)
      {
        uLong v9 = BYTE6(a4);
LABEL_24:
        int v22 = uncompress(dest, destLen, (const Bytef *)v32, v9);
        goto LABEL_30;
      }
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
  }
}

void sub_1B52458DC()
{
}

uint64_t sub_1B52458E8(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    swift_release();
    return 0;
  }
  if (a2 > 14)
  {
    if ((unint64_t)a2 < 0x7FFFFFFF) {
      return a2 << 32;
    }
    sub_1B5372358();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = a2;
    return v3;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    BOOL v4 = (unsigned char *)sub_1B5372268();
    if (!v4)
    {
LABEL_10:
      uint64_t v5 = sub_1B5372288();
      if (v5 >= a2) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = v5;
      }
      uint64_t v7 = &v4[v6];
      if (v4) {
        uLongf v8 = v7;
      }
      else {
        uLongf v8 = 0;
      }
      uint64_t v3 = sub_1B5241330(v4, v8);
      swift_release();
      return v3;
    }
    uLongf result = sub_1B5372298();
    if (!__OFSUB__(0, result))
    {
      v4 -= result;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B52459D0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1B5372328();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uLong v11 = (void (**)())((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uLongf v12 = (uint8_t *)swift_slowAlloc();
  uint64_t v13 = sub_1B52451D8(v12, (uint64_t)&v12[a1], a2, a3);
  if (v3)
  {
    MEMORY[0x1BA99A060](v12, -1, -1);
    swift_willThrow();
  }
  else
  {
    uint64_t v14 = (uint64_t)v13;
    *uLong v11 = sub_1B52458DC;
    v11[1] = 0;
    (*(void (**)(void (**)(), void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F27758], v8);
    sub_1B5372318();
    if (v14)
    {
      sub_1B53722B8();
      swift_allocObject();
      swift_retain();
      uint64_t v15 = sub_1B5372248();
      uint64_t v4 = sub_1B52458E8(v15, v14);
      swift_release();
    }
    else
    {
      uint64_t v16 = (void (*)(uint8_t *, void))sub_1B5372318();
      v16(v12, 0);
      swift_release();
      swift_release();
      uint64_t v4 = 0;
    }
    (*(void (**)(void (**)(), uint64_t))(v9 + 8))(v11, v8);
  }
  return v4;
}

unint64_t sub_1B5245BE8()
{
  unint64_t result = qword_1E9D48418;
  if (!qword_1E9D48418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48418);
  }
  return result;
}

unsigned char *_s5ErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5245D08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

unint64_t sub_1B5245D44()
{
  unint64_t result = qword_1E9D48420;
  if (!qword_1E9D48420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48420);
  }
  return result;
}

uint64_t sub_1B5245D98()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v4 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = 0x6365686365707974;
  if (BYTE6(v5) == 2)
  {
    if (BYTE6(v4) == 1)
    {
      float v7 = (float)(int)v4;
    }
    else
    {
      if (BYTE6(v4) != 2) {
        return result;
      }
      float v7 = *(float *)&v4;
    }
    float v6 = v7 + *(float *)&v5;
    goto LABEL_18;
  }
  if (BYTE6(v5) == 1)
  {
    if (BYTE6(v4) == 1)
    {
      uint64_t v8 = (int)v5 + (uint64_t)(int)v4;
      if (v8 == (int)v8)
      {
        uint64_t v10 = *v1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1B51E85E8(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v17 = *((void *)v10 + 2);
        unint64_t v18 = *((void *)v10 + 3);
        unint64_t v19 = v17 + 1;
        if (v17 >= v18 >> 1)
        {
          unint64_t v28 = v17 + 1;
          uint64_t v24 = v10;
          unint64_t v25 = *((void *)v10 + 2);
          uint64_t v26 = sub_1B51E85E8((char *)(v18 > 1), v17 + 1, 1, v24);
          unint64_t v17 = v25;
          unint64_t v19 = v28;
          uint64_t v10 = v26;
        }
        *((void *)v10 + 2) = v19;
        BOOL v20 = &v10[8 * v17];
        *((_DWORD *)v20 + 8) = v8;
        uint64_t v15 = v20 + 32;
        *((_WORD *)v15 + 2) = 0;
        char v16 = 1;
LABEL_30:
        uint64_t result = 0;
        v15[6] = v16;
        *uint64_t v1 = v10;
        return result;
      }
      float v6 = (float)v8;
LABEL_18:
      float v9 = v6;
      if ((~LODWORD(v6) & 0x7F800000) == 0) {
        return 0x656E696665646E75;
      }
      uint64_t v10 = *v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1B51E85E8(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v11 = *((void *)v10 + 2);
      unint64_t v12 = *((void *)v10 + 3);
      unint64_t v13 = v11 + 1;
      if (v11 >= v12 >> 1)
      {
        unint64_t v27 = v11 + 1;
        uint64_t v21 = v10;
        unint64_t v22 = *((void *)v10 + 2);
        uLongf v23 = sub_1B51E85E8((char *)(v12 > 1), v11 + 1, 1, v21);
        unint64_t v11 = v22;
        unint64_t v13 = v27;
        uint64_t v10 = v23;
      }
      *((void *)v10 + 2) = v13;
      uint64_t v14 = &v10[8 * v11];
      *((float *)v14 + 8) = v9;
      uint64_t v15 = v14 + 32;
      *((_WORD *)v15 + 2) = 0;
      char v16 = 2;
      goto LABEL_30;
    }
    if (BYTE6(v4) == 2)
    {
      float v6 = *(float *)&v4 + (float)(int)v5;
      goto LABEL_18;
    }
  }
  return result;
}

uint64_t sub_1B5246024()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = 0x6365686365707974;
  if (BYTE6(v5))
  {
    if (BYTE6(v5) == 1 && BYTE6(v4) == 1)
    {
      float v6 = *v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        float v6 = sub_1B51E85E8(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v8 = *((void *)v6 + 2);
      unint64_t v7 = *((void *)v6 + 3);
      unint64_t v9 = v8 + 1;
      if (v8 >= v7 >> 1)
      {
        unint64_t v17 = sub_1B51E85E8((char *)(v7 > 1), v8 + 1, 1, v6);
        unint64_t v9 = v8 + 1;
        float v6 = v17;
      }
      *((void *)v6 + 2) = v9;
      uint64_t v10 = &v6[8 * v8];
      *((_DWORD *)v10 + 8) = v5 & v4;
      unint64_t v11 = v10 + 32;
LABEL_20:
      *((_WORD *)v11 + 2) = 0;
      uint64_t result = 0;
      v11[6] = BYTE6(v5);
      *uint64_t v1 = v6;
    }
  }
  else if (!BYTE6(v4))
  {
    int v12 = v4 & v5 & 1;
    float v6 = *v1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      float v6 = sub_1B51E85E8(0, *((void *)v6 + 2) + 1, 1, v6);
    }
    unint64_t v13 = *((void *)v6 + 2);
    unint64_t v14 = *((void *)v6 + 3);
    unint64_t v15 = v13 + 1;
    if (v13 >= v14 >> 1)
    {
      unint64_t v18 = v6;
      unint64_t v19 = *((void *)v6 + 2);
      BOOL v20 = sub_1B51E85E8((char *)(v14 > 1), v13 + 1, 1, v18);
      unint64_t v13 = v19;
      float v6 = v20;
    }
    *((void *)v6 + 2) = v15;
    char v16 = &v6[8 * v13];
    *((_DWORD *)v16 + 8) = v12;
    unint64_t v11 = v16 + 32;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_1B5246210()
{
  uint64_t v1 = *(char **)(v0 + 8);
  if (!*((void *)v1 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v5 = *((void *)v1 + 2);
    if (v5) {
      goto LABEL_4;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v1 = sub_1B5293510((uint64_t)v1);
  unint64_t v5 = *((void *)v1 + 2);
  if (!v5) {
    goto LABEL_23;
  }
LABEL_4:
  unint64_t v6 = v5 - 1;
  unint64_t v7 = &v1[8 * v5 - 8];
  int v8 = v7[38];
  int v9 = *((_DWORD *)v7 + 8);
  *((void *)v1 + 2) = v6;
  *(void *)(v0 + 8) = v1;
  if (v8 == 2)
  {
    int v4 = v9 & 0x7FFFFFFF;
    unint64_t v5 = *((void *)v1 + 2);
    unint64_t v3 = *((void *)v1 + 3);
    int64_t v2 = v5 + 1;
    if (v5 < v3 >> 1)
    {
LABEL_12:
      *((void *)v1 + 2) = v2;
      char v16 = &v1[8 * v5];
      *((_DWORD *)v16 + 8) = v4;
      unint64_t v14 = v16 + 32;
      goto LABEL_13;
    }
LABEL_24:
    int64_t v34 = v2;
    uLongf v23 = v1;
    int v32 = v4;
    unint64_t v24 = v5;
    unint64_t v25 = sub_1B51E85E8((char *)(v3 > 1), v2, 1, v23);
    unint64_t v5 = v24;
    int v4 = v32;
    int64_t v2 = v34;
    uint64_t v1 = v25;
    goto LABEL_12;
  }
  if (v8 != 1) {
    return 0x6365686365707974;
  }
  if (v9 != 0x80000000)
  {
    if (v9 >= 0) {
      int v18 = v9;
    }
    else {
      int v18 = -v9;
    }
    unint64_t v19 = *((void *)v1 + 2);
    unint64_t v20 = *((void *)v1 + 3);
    unint64_t v21 = v19 + 1;
    if (v19 >= v20 >> 1)
    {
      unint64_t v33 = *((void *)v1 + 2);
      unint64_t v36 = v19 + 1;
      char v29 = v1;
      int v30 = v18;
      BOOL v31 = sub_1B51E85E8((char *)(v20 > 1), v19 + 1, 1, v29);
      unint64_t v19 = v33;
      unint64_t v21 = v36;
      int v18 = v30;
      uint64_t v1 = v31;
    }
    *((void *)v1 + 2) = v21;
    unint64_t v22 = &v1[8 * v19];
    *((_DWORD *)v22 + 8) = v18;
    unint64_t v14 = v22 + 32;
    *((_WORD *)v14 + 2) = 0;
    char v17 = 1;
    goto LABEL_21;
  }
  unint64_t v10 = *((void *)v1 + 2);
  unint64_t v11 = *((void *)v1 + 3);
  unint64_t v12 = v10 + 1;
  if (v10 >= v11 >> 1)
  {
    unint64_t v35 = v10 + 1;
    uint64_t v26 = v1;
    unint64_t v27 = *((void *)v1 + 2);
    unint64_t v28 = sub_1B51E85E8((char *)(v11 > 1), v10 + 1, 1, v26);
    unint64_t v10 = v27;
    unint64_t v12 = v35;
    uint64_t v1 = v28;
  }
  *((void *)v1 + 2) = v12;
  unint64_t v13 = &v1[8 * v10];
  *((_DWORD *)v13 + 8) = 1325400064;
  unint64_t v14 = v13 + 32;
LABEL_13:
  *((_WORD *)v14 + 2) = 0;
  char v17 = 2;
LABEL_21:
  uint64_t result = 0;
  v14[6] = v17;
  *(void *)(v0 + 8) = v1;
  return result;
}

uint64_t sub_1B524641C()
{
  int v4 = *(char **)(v0 + 8);
  if (!*((void *)v4 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v5 = *((void *)v4 + 2);
    if (v5) {
      goto LABEL_4;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int v4 = sub_1B5293510((uint64_t)v4);
  uint64_t v5 = *((void *)v4 + 2);
  if (!v5) {
    goto LABEL_22;
  }
LABEL_4:
  unint64_t v6 = &v4[8 * v5 - 8];
  unsigned int v7 = *((_DWORD *)v6 + 8);
  LODWORD(v6) = v6[38];
  *((void *)v4 + 2) = v5 - 1;
  *(void *)(v0 + 8) = v4;
  if (v6 != 1) {
    return 0x6365686365707974;
  }
  if ((v7 & 0x80000000) != 0) {
    return 0x65686365676E6172;
  }
  uint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = sub_1B5372A88();
    uint64_t v1 = v9;
    uint64_t v10 = 0;
    *(void *)(v9 + 16) = v8;
    do
    {
      uint64_t v11 = v9 + v10;
      *(_WORD *)(v11 + 36) = 0;
      *(_DWORD *)(v11 + 32) = 0;
      *(unsigned char *)(v11 + 38) = 10;
      v10 += 8;
    }
    while (8 * v8 != v10);
  }
  else
  {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  int64_t v2 = *(void **)(v0 + 32);
  unint64_t v3 = v2[2];
  if (HIDWORD(v3)) {
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_24:
  }
    int64_t v2 = sub_1B51E85AC(0, v3 + 1, 1, v2);
  unint64_t v13 = v2[2];
  unint64_t v14 = v2[3];
  unint64_t v15 = v13 + 1;
  if (v13 >= v14 >> 1)
  {
    unint64_t v22 = v13 + 1;
    unint64_t v19 = v2;
    unint64_t v20 = v2[2];
    unint64_t v21 = sub_1B51E85AC((void *)(v14 > 1), v13 + 1, 1, v19);
    unint64_t v13 = v20;
    unint64_t v15 = v22;
    int64_t v2 = v21;
  }
  v2[2] = v15;
  v2[v13 + 4] = v1;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v2;
  unint64_t v17 = *((void *)v4 + 2);
  unint64_t v16 = *((void *)v4 + 3);
  if (v17 >= v16 >> 1) {
    int v4 = sub_1B51E85E8((char *)(v16 > 1), v17 + 1, 1, v4);
  }
  uint64_t result = 0;
  *((void *)v4 + 2) = v17 + 1;
  int v18 = &v4[8 * v17];
  *((_DWORD *)v18 + 8) = v3;
  *((_WORD *)v18 + 18) = (v3 | 0x300000000) >> 32;
  v18[38] = 7;
  *(void *)(v0 + 8) = v4;
  return result;
}

uint64_t sub_1B524666C()
{
  unint64_t v3 = *(char **)(v0 + 8);
  if (!*((void *)v3 + 2)) {
    return 0x646E756B63617473;
  }
  uint64_t v4 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_27;
  }
  uint64_t v5 = *((void *)v3 + 2);
  if (!v5)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    int64_t v2 = sub_1B5293524(v2);
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v6 = v5 - 1;
    unsigned int v7 = &v3[8 * v5 - 8];
    uint64_t v8 = *((unsigned __int16 *)v7 + 18);
    uint64_t v9 = *((unsigned int *)v7 + 8);
    LODWORD(v7) = v7[38];
    *((void *)v3 + 2) = v6;
    *(void *)(v4 + 8) = v3;
    if (v7 != 7) {
      return 0x6365686365707974;
    }
    uint64_t v10 = v9 | (v8 << 32);
    int64_t v2 = *(void **)(v4 + 32);
    if (v2[2] <= (unint64_t)v10) {
      goto LABEL_29;
    }
    uint64_t v34 = v10;
    unint64_t v35 = v10;
    uint64_t v1 = (char *)v2[v10 + 4];
    uint64_t v11 = *((void *)v1 + 2);
    if (!v11) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    unint64_t v13 = 0;
    while (v13 < *((void *)v1 + 2))
    {
      unint64_t v14 = &v1[v12];
      if (v1[v12 + 38] == 4)
      {
        uint64_t v15 = *(void *)(v4 + 88);
        int v16 = *(_DWORD *)(v4 + 112);
        __int16 v17 = *(_WORD *)(v4 + 116);
        char v18 = *(unsigned char *)(v4 + 118);
        int v19 = *(_DWORD *)(v4 + 120);
        __int16 v20 = *(_WORD *)(v4 + 124);
        char v21 = *(unsigned char *)(v4 + 126);
        int v22 = *(_DWORD *)(v4 + 128);
        __int16 v23 = *(_WORD *)(v4 + 132);
        char v24 = *(unsigned char *)(v4 + 134);
        *(void *)&long long v36 = *(void *)v4;
        *((void *)&v36 + 1) = v3;
        long long v37 = *(_OWORD *)(v4 + 16);
        *(void *)uint64_t v38 = v2;
        long long v25 = *(_OWORD *)(v4 + 56);
        *(_OWORD *)&v38[8] = *(_OWORD *)(v4 + 40);
        *(_OWORD *)&v38[24] = v25;
        *(_OWORD *)&v38[40] = *(_OWORD *)(v4 + 72);
        *(void *)&v38[56] = v15;
        long long v39 = *(_OWORD *)(v4 + 96);
        *(_WORD *)&v40[4] = v17;
        *(_DWORD *)uint64_t v40 = v16;
        v40[6] = v18;
        *(_WORD *)&v40[12] = v20;
        *(_DWORD *)&v40[8] = v19;
        v40[14] = v21;
        *(_WORD *)&v40[20] = v23;
        *(_DWORD *)&v40[16] = v22;
        v40[22] = v24;
        long long v45 = *(_OWORD *)&v38[32];
        long long v46 = *(_OWORD *)&v38[48];
        long long v43 = *(_OWORD *)v38;
        long long v44 = *(_OWORD *)&v38[16];
        long long v41 = v36;
        long long v42 = v37;
        *(void *)((char *)v48 + 15) = *(void *)&v40[15];
        long long v47 = v39;
        v48[0] = *(_OWORD *)v40;
        unint64_t v26 = *((unsigned int *)v14 + 8) | ((unint64_t)*((unsigned __int16 *)v14 + 18) << 32);
        uint64_t v27 = v14[38];
        sub_1B520212C((uint64_t)&v36);
        unint64_t v28 = sub_1B52ABF1C(v26 | (v27 << 48));
        sub_1B520A898((uint64_t)&v36);
        if ((v28 & 0xFF000000000000) == 0x5000000000000)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v1 = sub_1B5293510((uint64_t)v1);
          }
          if (v13 >= *((void *)v1 + 2)) {
            goto LABEL_26;
          }
          char v29 = &v1[v12];
          *((_DWORD *)v29 + 8) = v28;
          *((_WORD *)v29 + 18) = WORD2(v28);
          v29[38] = 5;
        }
      }
      ++v13;
      v12 += 8;
      if (v11 == v13) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    unint64_t v3 = sub_1B5293510((uint64_t)v3);
    uint64_t v5 = *((void *)v3 + 2);
    if (!v5) {
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain();
LABEL_19:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_30;
  }
LABEL_20:
  if (v2[2] <= v35)
  {
    __break(1u);
    goto LABEL_32;
  }
  v2[v35 + 4] = v1;
  swift_bridgeObjectRelease();
  *(void *)(v4 + 32) = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_32:
  }
    unint64_t v3 = sub_1B51E85E8(0, *((void *)v3 + 2) + 1, 1, v3);
  unint64_t v32 = *((void *)v3 + 2);
  unint64_t v31 = *((void *)v3 + 3);
  if (v32 >= v31 >> 1) {
    unint64_t v3 = sub_1B51E85E8((char *)(v31 > 1), v32 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v32 + 1;
  unint64_t v33 = &v3[8 * v32];
  *((_DWORD *)v33 + 8) = v34;
  *((_WORD *)v33 + 18) = WORD2(v34);
  v33[38] = 7;
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  *(void *)(v4 + 8) = v3;
  return result;
}

uint64_t sub_1B5246A08()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  uint64_t v5 = result & 0xFF000000000000;
  if ((result & 0xFF000000000000) != 0xFF000000000000)
  {
    uint64_t v6 = result;
    uint64_t v3 = 0x6365686365707974;
    uint64_t v7 = sub_1B5276FD0();
    uint64_t v8 = 0x1000000000000;
    if ((v7 & 0xFF000000000000) != 0x1000000000000)
    {
      uint64_t v8 = 0xFF000000000000;
      if ((v7 & 0xFF000000000000) != 0xFF000000000000) {
        return v3;
      }
      __break(1u);
    }
    if (v5 != v8) {
      return v3;
    }
    uint64_t v9 = v6 << 32;
    if (v6 << 32 <= (uint64_t)0xFFFFFFDFFFFFFFFFLL) {
      goto LABEL_9;
    }
    if (v9 > 0x2000000000)
    {
LABEL_12:
      uint64_t v11 = *v1;
      int v10 = 0;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_18:
        unint64_t v12 = *((void *)v11 + 2);
        unint64_t v13 = *((void *)v11 + 3);
        unint64_t v14 = v12 + 1;
        if (v12 >= v13 >> 1)
        {
          unint64_t v16 = v12 + 1;
          __int16 v17 = v11;
          unint64_t v18 = *((void *)v11 + 2);
          int v19 = sub_1B51E85E8((char *)(v13 > 1), v12 + 1, 1, v17);
          unint64_t v12 = v18;
          unint64_t v14 = v16;
          uint64_t v11 = v19;
        }
        uint64_t v3 = 0;
        *((void *)v11 + 2) = v14;
        uint64_t v15 = &v11[8 * v12];
        *((_WORD *)v15 + 18) = 0;
        *((_DWORD *)v15 + 8) = v10;
        v15[38] = 1;
        *uint64_t v1 = v11;
        return v3;
      }
LABEL_13:
      uint64_t v11 = sub_1B51E85E8(0, *((void *)v11 + 2) + 1, 1, v11);
      goto LABEL_18;
    }
    if (v9 < 0)
    {
      if ((unint64_t)v9 <= 0xFFFFFFE000000000)
      {
LABEL_9:
        int v10 = (int)v7 >> 31;
        goto LABEL_17;
      }
      int v10 = (int)v7 >> -(char)v6;
    }
    else
    {
      if ((unint64_t)v6 >> 5) {
        goto LABEL_12;
      }
      int v10 = v7 << v6;
    }
LABEL_17:
    uint64_t v11 = *v1;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5246BD4()
{
  uint64_t v2 = *(char **)(v0 + 8);
  if (!*((void *)v2 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v6 = *((void *)v2 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v2 = sub_1B5293510((uint64_t)v2);
  unint64_t v6 = *((void *)v2 + 2);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  unint64_t v7 = v6 - 1;
  uint64_t v8 = &v2[8 * v6 - 8];
  int v1 = v8[38];
  unint64_t v6 = *((unsigned int *)v8 + 8) | ((unint64_t)*((unsigned __int16 *)v8 + 18) << 32);
  *((void *)v2 + 2) = v7;
  *(void *)(v0 + 8) = v2;
  if (v1 == 2)
  {
    float v12 = ceilf(*(float *)&v6);
    unint64_t v13 = *((void *)v2 + 2);
    unint64_t v14 = *((void *)v2 + 3);
    unint64_t v15 = v13 + 1;
    if (v13 >= v14 >> 1)
    {
      unint64_t v26 = v13 + 1;
      __int16 v20 = v2;
      float v24 = v12;
      unint64_t v21 = *((void *)v2 + 2);
      int v22 = sub_1B51E85E8((char *)(v14 > 1), v13 + 1, 1, v20);
      unint64_t v13 = v21;
      float v12 = v24;
      unint64_t v15 = v26;
      uint64_t v2 = v22;
    }
    *((void *)v2 + 2) = v15;
    unint64_t v16 = &v2[8 * v13];
    *((float *)v16 + 8) = v12;
    int v10 = v16 + 32;
    *((_WORD *)v10 + 2) = 0;
    goto LABEL_12;
  }
  if (v1 == 1)
  {
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v5 = *((void *)v2 + 3);
    int64_t v4 = v3 + 1;
    if (v3 < v5 >> 1)
    {
LABEL_7:
      *((void *)v2 + 2) = v4;
      uint64_t v9 = &v2[8 * v3];
      *((_DWORD *)v9 + 8) = v6;
      int v10 = v9 + 32;
      *((_WORD *)v10 + 2) = WORD2(v6);
LABEL_12:
      uint64_t result = 0;
      v10[6] = v1;
      *(void *)(v0 + 8) = v2;
      return result;
    }
LABEL_16:
    unint64_t v23 = v3;
    int64_t v25 = v4;
    __int16 v17 = v2;
    unint64_t v18 = v6;
    int v19 = sub_1B51E85E8((char *)(v5 > 1), v4, 1, v17);
    unint64_t v3 = v23;
    int64_t v4 = v25;
    unint64_t v6 = v18;
    uint64_t v2 = v19;
    goto LABEL_7;
  }
  return 0x6365686365707974;
}

uint64_t sub_1B5246D7C()
{
  uint64_t v2 = v0;
  unint64_t v3 = *(char **)(v0 + 8);
  if (!*((void *)v3 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v4 = *((void *)v3 + 2);
    if (v4) {
      goto LABEL_4;
    }
LABEL_11:
    __break(1u);
LABEL_12:
    uint64_t result = (uint64_t)sub_1B52934FC(v1);
    int v1 = (void *)result;
    *(void *)(v2 + 24) = result;
    goto LABEL_6;
  }
  unint64_t v3 = sub_1B5293510((uint64_t)v3);
  uint64_t v4 = *((void *)v3 + 2);
  if (!v4) {
    goto LABEL_11;
  }
LABEL_4:
  unint64_t v5 = &v3[8 * v4 - 8];
  int v6 = *((_DWORD *)v5 + 8);
  LODWORD(v5) = v5[38];
  *((void *)v3 + 2) = v4 - 1;
  *(void *)(v2 + 8) = v3;
  if (v5 != 6) {
    return 0x6365686365707974;
  }
  LODWORD(v3) = v6;
  int v1 = *(void **)(v2 + 24);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 24) = v1;
  if ((result & 1) == 0) {
    goto LABEL_12;
  }
LABEL_6:
  if (v1[2] <= (unint64_t)v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = &v1[5 * v3];
    uint64_t v9 = v8[7];
    uint64_t v10 = v8[8];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v8 + 4), v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    uint64_t result = 0;
    *(void *)(v2 + 24) = v1;
  }
  return result;
}

uint64_t sub_1B5246ED8()
{
  int v1 = (char *)v0;
  uint64_t result = 0x65686374616D6E75;
  uint64_t v5 = *(void *)(v0 + 8);
  unint64_t v3 = (char **)(v0 + 8);
  uint64_t v4 = v5;
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v4 + 8 * v6 + 30;
  uint64_t v9 = (unsigned __int8 *)v8;
  while (1)
  {
    unsigned int v10 = *v9;
    v9 -= 8;
    if (v10 >= 0xA)
    {
      if (*(unsigned int *)(v8 - 6) | ((unint64_t)*(unsigned __int16 *)(v8 - 2) << 32)) {
        break;
      }
    }
    --v7;
    uint64_t v8 = (uint64_t)v9;
    if (!(v6 + v7)) {
      return result;
    }
  }
  uint64_t v11 = v6 + v7;
  if (v6 < v6 + v7)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRelease();
    sub_1B521CB78(v4, v4 + 32, v6 + v7, (2 * v6) | 1);
    uint64_t v14 = v25;
    goto LABEL_12;
  }
  sub_1B5373238();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = *(void *)(v12 + 16);
  swift_release();
  if (v13 + v7) {
    goto LABEL_23;
  }
  uint64_t v14 = swift_dynamicCastClass();
  if (!v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
LABEL_12:
  swift_bridgeObjectRelease();
  unint64_t v15 = (void *)*((void *)v1 + 4);
  unint64_t v16 = v15[2];
  if (HIDWORD(v16))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_14;
    }
  }
  unint64_t v15 = sub_1B51E85AC(0, v16 + 1, 1, v15);
LABEL_14:
  int64_t v17 = v11 - 1;
  unint64_t v19 = v15[2];
  unint64_t v18 = v15[3];
  unint64_t v20 = v19 + 1;
  if (v19 >= v18 >> 1)
  {
    unint64_t v26 = sub_1B51E85AC((void *)(v18 > 1), v19 + 1, 1, v15);
    unint64_t v20 = v19 + 1;
    unint64_t v15 = v26;
  }
  v15[2] = v20;
  v15[v19 + 4] = v14;
  swift_release();
  *((void *)v1 + 4) = v15;
  int64_t v21 = *(void *)(v4 + 16);
  if (v21 < v17)
  {
    __break(1u);
    goto LABEL_27;
  }
  sub_1B52386F4(v17, v21);
  int v1 = *v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_27:
  }
    int v1 = sub_1B51E85E8(0, *((void *)v1 + 2) + 1, 1, v1);
  unint64_t v23 = *((void *)v1 + 2);
  unint64_t v22 = *((void *)v1 + 3);
  if (v23 >= v22 >> 1) {
    int v1 = sub_1B51E85E8((char *)(v22 > 1), v23 + 1, 1, v1);
  }
  uint64_t result = 0;
  *((void *)v1 + 2) = v23 + 1;
  float v24 = &v1[8 * v23];
  *((_DWORD *)v24 + 8) = v16;
  *((_WORD *)v24 + 18) = (v16 | 0x300000000) >> 32;
  v24[38] = 7;
  *unint64_t v3 = v1;
  return result;
}

uint64_t sub_1B5247188()
{
  uint64_t result = 0x65686374616D6E75;
  uint64_t v2 = *(char **)(v0 + 8);
  uint64_t v3 = *((void *)v2 + 2);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t)&v2[8 * v3 + 30];
    uint64_t v6 = (unsigned __int8 *)v5;
    while (1)
    {
      unsigned int v7 = *v6;
      v6 -= 8;
      if (v7 >= 0xA)
      {
        if (*(unsigned int *)(v5 - 6) | ((unint64_t)*(unsigned __int16 *)(v5 - 2) << 32)) {
          break;
        }
      }
      --v4;
      uint64_t v5 = (uint64_t)v6;
      if (-v3 == v4) {
        return result;
      }
    }
    if (0xFFFFFFFF80000000 - v4 >= 0xFFFFFFFF00000000)
    {
      uint64_t v8 = -v4;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_1B51E85E8(0, v3 + 1, 1, v2);
      }
      unint64_t v10 = *((void *)v2 + 2);
      unint64_t v9 = *((void *)v2 + 3);
      unint64_t v11 = v10 + 1;
      if (v10 >= v9 >> 1)
      {
        uint64_t v13 = sub_1B51E85E8((char *)(v9 > 1), v10 + 1, 1, v2);
        unint64_t v11 = v10 + 1;
        uint64_t v2 = v13;
      }
      uint64_t result = 0;
      *((void *)v2 + 2) = v11;
      uint64_t v12 = &v2[8 * v10];
      *((_WORD *)v12 + 18) = 0;
      *((_DWORD *)v12 + 8) = v8;
      v12[38] = 1;
      *(void *)(v0 + 8) = v2;
    }
  }
  return result;
}

uint64_t sub_1B52472C4()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    int v2 = *(_DWORD *)(v3 + 4 * v4 + 28);
    uint64_t v0 = *(char **)(v1 + 8);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v0 = sub_1B51E85E8(0, *((void *)v0 + 2) + 1, 1, v0);
LABEL_3:
  unint64_t v6 = *((void *)v0 + 2);
  unint64_t v5 = *((void *)v0 + 3);
  if (v6 >= v5 >> 1) {
    uint64_t v0 = sub_1B51E85E8((char *)(v5 > 1), v6 + 1, 1, v0);
  }
  *((void *)v0 + 2) = v6 + 1;
  unsigned int v7 = &v0[8 * v6];
  *((_WORD *)v7 + 18) = 0;
  *((_DWORD *)v7 + 8) = v2;
  v7[38] = 8;
  *(void *)(v1 + 8) = v0;
  return 0;
}

uint64_t sub_1B5247390()
{
  uint64_t v3 = *(char **)(v0 + 8);
  if (!*((void *)v3 + 2)) {
    return 0x646E756B63617473;
  }
  int64_t v4 = v0;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v6 = *((void *)v3 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v3 = sub_1B5293510((uint64_t)v3);
  unint64_t v6 = *((void *)v3 + 2);
  if (!v6) {
    goto LABEL_56;
  }
LABEL_4:
  unint64_t v7 = 0xE90000000000006BLL;
  uint64_t v8 = 0x6365686365707974;
  unint64_t v9 = v6 - 1;
  unint64_t v10 = &v3[8 * v6 - 8];
  uint64_t v11 = *((unsigned __int16 *)v10 + 18);
  uint64_t v12 = *((unsigned int *)v10 + 8);
  int v13 = v10[38];
  unint64_t v1 = v12 | (v11 << 32);
  *((void *)v3 + 2) = v9;
  *(void *)(v0 + 8) = v3;
  switch(v13)
  {
    case 9:
      unint64_t v16 = *(void *)(v0 + 48);
      if (*(void *)(v16 + 16) <= (unint64_t)v12)
      {
        __break(1u);
        goto LABEL_59;
      }
      unint64_t v17 = v16 + 16 * v12;
      uint64_t v18 = *(void *)(v17 + 32);
      unint64_t v19 = *(void *)(v17 + 40);
      uint64_t v49 = v18;
      unint64_t v50 = v19;
      switch(v19 >> 62)
      {
        case 1uLL:
          uint64_t v20 = (int)v18;
          goto LABEL_26;
        case 2uLL:
          uint64_t v20 = *(void *)(v18 + 16);
LABEL_26:
          sub_1B51D4BB8(v18, v19);
          sub_1B520AB50(v18, v19);
          break;
        default:
          sub_1B51D4C64(v18, v19);
          sub_1B51D4C64(v18, v19);
          uint64_t v20 = 0;
          break;
      }
      v52[0] = v18;
      v52[1] = v19;
      v52[2] = v20;
      v52[3] = v20;
      v52[4] = 0x2000000000000000;
      int64_t v22 = 0;
      unint64_t v23 = sub_1B5204744((uint64_t)v52);
      unsigned __int8 v25 = v24;
      unint64_t v47 = v26;
      if (v50 >> 60 == 15)
      {
LABEL_30:
        sub_1B51FE548(v18, v50);
        uint64_t v27 = 0;
      }
      else
      {
        switch(v50 >> 62)
        {
          case 1uLL:
            uint64_t v27 = (int)v18;
            break;
          case 2uLL:
            uint64_t v27 = *(void *)(v18 + 16);
            break;
          default:
            sub_1B51FE548(v18, v50);
            goto LABEL_30;
        }
        sub_1B520AB50(v18, v50);
      }
      v51[0] = v18;
      v51[1] = v50;
      v51[2] = v27;
      v51[3] = v27;
      v51[4] = 0x2000000000000000;
      unint64_t v28 = sub_1B5204744((uint64_t)v51);
      unint64_t v30 = v29;
      char v32 = v31;
      if (v31 != -1)
      {
        sub_1B520ABB8(v23, v47, v25);
        sub_1B520ABB8(v28, v30, v32);
        sub_1B51FE548(v49, v50);
        return 0x72657861746E7973;
      }
      if (v25 == 255)
      {
        unsigned __int8 v25 = -1;
LABEL_51:
        uint64_t v40 = v23;
        unint64_t v41 = v47;
        char v42 = v25;
LABEL_52:
        sub_1B520ABB8(v40, v41, v42);
        sub_1B520ABB8(v28, v30, 255);
        sub_1B51FE548(v49, v50);
        return v8;
      }
      if (v25 != 6)
      {
        if (v25 == 5)
        {
          unint64_t v34 = *((void *)v3 + 2);
          unint64_t v33 = *((void *)v3 + 3);
          if (v34 >= v33 >> 1) {
            uint64_t v3 = sub_1B51E85E8((char *)(v33 > 1), v34 + 1, 1, v3);
          }
          *((void *)v3 + 2) = v34 + 1;
          unint64_t v35 = &v3[8 * v34];
          *((_DWORD *)v35 + 8) = v23;
          long long v36 = v35 + 32;
          goto LABEL_49;
        }
        goto LABEL_51;
      }
      if (*(float *)&v23 < -2147500000.0 || *(float *)&v23 > 2147500000.0)
      {
        uint64_t v8 = 0x65686365676E6172;
        uint64_t v40 = v23;
        unint64_t v41 = v47;
        char v42 = 6;
        goto LABEL_52;
      }
      float v37 = truncf(*(float *)&v23);
      unint64_t v38 = LODWORD(v37);
      if ((~LODWORD(v37) & 0x7F800000) != 0)
      {
        unint64_t v38 = 3472883713;
        if (v37 > -2147500000.0)
        {
          if (v37 < 2147500000.0)
          {
            unint64_t v7 = *((void *)v3 + 2);
            unint64_t v38 = *((void *)v3 + 3);
            int64_t v22 = v7 + 1;
            if (v7 < v38 >> 1)
            {
LABEL_48:
              *((void *)v3 + 2) = v22;
              long long v39 = &v3[8 * v7];
              *((_DWORD *)v39 + 8) = (int)v37;
              long long v36 = v39 + 32;
LABEL_49:
              *((_WORD *)v36 + 2) = 0;
              v36[6] = 1;
              sub_1B520ABB8(v23, v47, v25);
              sub_1B520ABB8(v28, v30, 255);
              *(void *)(v4 + 8) = v3;
              sub_1B51FE548(v49, v50);
              return 0;
            }
LABEL_66:
            float v46 = v37;
            long long v45 = sub_1B51E85E8((char *)(v38 > 1), v22, 1, v3);
            float v37 = v46;
            uint64_t v3 = v45;
            goto LABEL_48;
          }
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_65;
    case 2:
      if (*(float *)&v12 < -2147500000.0 || *(float *)&v12 > 2147500000.0) {
        return 0x65686365676E6172;
      }
      float v5 = truncf(*(float *)&v12);
      unint64_t v16 = LODWORD(v5);
      if ((~LODWORD(v5) & 0x7F800000) != 0)
      {
        unint64_t v16 = 3472883713;
        if (v5 > -2147500000.0)
        {
          if (v5 < 2147500000.0)
          {
            unint64_t v1 = *((void *)v3 + 2);
            unint64_t v16 = *((void *)v3 + 3);
            int64_t v0 = v1 + 1;
            if (v1 < v16 >> 1)
            {
LABEL_23:
              uint64_t v8 = 0;
              *((void *)v3 + 2) = v0;
              int64_t v21 = &v3[8 * v1];
              *((_WORD *)v21 + 18) = 0;
              *((_DWORD *)v21 + 8) = (int)v5;
              v21[38] = 1;
              *(void *)(v4 + 8) = v3;
              return v8;
            }
LABEL_62:
            float v48 = v5;
            long long v44 = sub_1B51E85E8((char *)(v16 > 1), v0, 1, v3);
            float v5 = v48;
            uint64_t v3 = v44;
            goto LABEL_23;
          }
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_59:
      __break(1u);
      goto LABEL_60;
    case 1:
      unint64_t v2 = *((void *)v3 + 2);
      unint64_t v6 = *((void *)v3 + 3);
      int64_t v0 = v2 + 1;
      if (v2 < v6 >> 1)
      {
LABEL_8:
        uint64_t v8 = 0;
        *((void *)v3 + 2) = v0;
        uint64_t v14 = &v3[8 * v2];
        *((_DWORD *)v14 + 8) = v1;
        *((_WORD *)v14 + 18) = WORD2(v1);
        v14[38] = 1;
        *(void *)(v4 + 8) = v3;
        return v8;
      }
LABEL_57:
      uint64_t v3 = sub_1B51E85E8((char *)(v6 > 1), v0, 1, v3);
      goto LABEL_8;
  }
  return v8;
}

uint64_t sub_1B5247968()
{
  unint64_t v6 = *(char **)(v0 + 8);
  if (!*((void *)v6 + 2)) {
    return 0x646E756B63617473;
  }
  unint64_t v7 = v0;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v8 = *((void *)v6 + 2);
    if (v8) {
      goto LABEL_4;
    }
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  unint64_t v6 = sub_1B5293510((uint64_t)v6);
  unint64_t v8 = *((void *)v6 + 2);
  if (!v8) {
    goto LABEL_43;
  }
LABEL_4:
  unint64_t v9 = 0xE90000000000006BLL;
  uint64_t v10 = 0x6365686365707974;
  unint64_t v11 = v8 - 1;
  uint64_t v12 = &v6[8 * v8 - 8];
  uint64_t v13 = *((unsigned __int16 *)v12 + 18);
  uint64_t v14 = *((unsigned int *)v12 + 8);
  int v15 = v12[38];
  int64_t v16 = v14 | (v13 << 32);
  *((void *)v6 + 2) = v11;
  *(void *)(v0 + 8) = v6;
  switch(v15)
  {
    case 9:
      unint64_t v20 = *(void *)(v0 + 48);
      if (*(void *)(v20 + 16) > (unint64_t)v14)
      {
        unint64_t v21 = v20 + 16 * v14;
        uint64_t v22 = *(void *)(v21 + 32);
        unint64_t v23 = *(void *)(v21 + 40);
        uint64_t v41 = v22;
        unint64_t v42 = v23;
        switch(v23 >> 62)
        {
          case 1uLL:
            uint64_t v24 = (int)v22;
            goto LABEL_19;
          case 2uLL:
            uint64_t v24 = *(void *)(v22 + 16);
LABEL_19:
            sub_1B51D4BB8(v22, v23);
            sub_1B520AB50(v22, v23);
            break;
          default:
            sub_1B51D4C64(v22, v23);
            sub_1B51D4C64(v22, v23);
            uint64_t v24 = 0;
            break;
        }
        v44[0] = v22;
        v44[1] = v23;
        v44[2] = v24;
        v44[3] = v24;
        v44[4] = 0x2000000000000000;
        unint64_t v25 = sub_1B5204744((uint64_t)v44);
        unint64_t v40 = v27;
        if (v23 >> 60 == 15)
        {
          unsigned __int8 v28 = v26;
          uint64_t v2 = v25;
LABEL_24:
          sub_1B51FE548(v22, v23);
          uint64_t v29 = 0;
        }
        else
        {
          unsigned __int8 v28 = v26;
          uint64_t v2 = v25;
          switch(v23 >> 62)
          {
            case 1uLL:
              uint64_t v29 = (int)v22;
              break;
            case 2uLL:
              uint64_t v29 = *(void *)(v22 + 16);
              break;
            default:
              sub_1B51FE548(v22, v23);
              goto LABEL_24;
          }
          sub_1B520AB50(v22, v23);
        }
        v43[0] = v22;
        v43[1] = v23;
        v43[2] = v29;
        v43[3] = v29;
        v43[4] = 0x2000000000000000;
        unint64_t v5 = sub_1B5204744((uint64_t)v43);
        unint64_t v0 = v30;
        char v32 = v31;
        if (v31 != -1)
        {
          sub_1B520ABB8(v2, v40, v28);
          sub_1B520ABB8(v5, v0, v32);
          sub_1B51FE548(v41, v23);
          return 0x72657861746E7973;
        }
        int v33 = v28;
        if (v28 == 255)
        {
          char v3 = -1;
          unint64_t v4 = v40;
        }
        else
        {
          char v3 = v28;
          if (v28 == 6)
          {
            unint64_t v37 = *((void *)v6 + 2);
            unint64_t v36 = *((void *)v6 + 3);
            if (v37 >= v36 >> 1) {
              unint64_t v6 = sub_1B51E85E8((char *)(v36 > 1), v37 + 1, 1, v6);
            }
            unint64_t v4 = v40;
            *((void *)v6 + 2) = v37 + 1;
            unint64_t v38 = &v6[8 * v37];
            *((_DWORD *)v38 + 8) = v2;
            unint64_t v35 = v38 + 32;
            goto LABEL_38;
          }
          unint64_t v4 = v40;
          if (v33 == 5)
          {
            unint64_t v9 = *((void *)v6 + 2);
            unint64_t v20 = *((void *)v6 + 3);
            int64_t v16 = v9 + 1;
            if (v9 < v20 >> 1)
            {
LABEL_34:
              *((void *)v6 + 2) = v16;
              unint64_t v34 = &v6[8 * v9];
              *((float *)v34 + 8) = (float)(int)v2;
              unint64_t v35 = v34 + 32;
LABEL_38:
              *((_WORD *)v35 + 2) = 0;
              v35[6] = 2;
              sub_1B520ABB8(v2, v4, v3);
              sub_1B520ABB8(v5, v0, 255);
              *(void *)(v7 + 8) = v6;
              sub_1B51FE548(v41, v42);
              return 0;
            }
LABEL_46:
            unint64_t v6 = sub_1B51E85E8((char *)(v20 > 1), v16, 1, v6);
            goto LABEL_34;
          }
        }
        sub_1B520ABB8(v2, v4, v3);
        sub_1B520ABB8(v5, v0, 255);
        sub_1B51FE548(v41, v23);
        return v10;
      }
      __break(1u);
      goto LABEL_46;
    case 2:
      unint64_t v19 = *((void *)v6 + 2);
      unint64_t v18 = *((void *)v6 + 3);
      if (v19 >= v18 >> 1) {
        unint64_t v6 = sub_1B51E85E8((char *)(v18 > 1), v19 + 1, 1, v6);
      }
      uint64_t v10 = 0;
      *((void *)v6 + 2) = v19 + 1;
      unint64_t v17 = &v6[8 * v19];
      *((_DWORD *)v17 + 8) = v16;
      *((_WORD *)v17 + 18) = WORD2(v16);
      goto LABEL_13;
    case 1:
      LODWORD(v2) = v14;
      unint64_t v1 = *((void *)v6 + 2);
      unint64_t v8 = *((void *)v6 + 3);
      unint64_t v0 = v1 + 1;
      if (v1 < v8 >> 1)
      {
LABEL_8:
        uint64_t v10 = 0;
        *((void *)v6 + 2) = v0;
        unint64_t v17 = &v6[8 * v1];
        *((_WORD *)v17 + 18) = 0;
        *((float *)v17 + 8) = (float)(int)v2;
LABEL_13:
        v17[38] = 2;
        *(void *)(v7 + 8) = v6;
        return v10;
      }
LABEL_44:
      unint64_t v6 = sub_1B51E85E8((char *)(v8 > 1), v0, 1, v6);
      goto LABEL_8;
  }
  return v10;
}

uint64_t sub_1B5247E54()
{
  char v3 = *(char **)(v0 + 8);
  if (!*((void *)v3 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v6 = *((void *)v3 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    unint64_t v11 = v3;
    __int16 v12 = v4;
    uint64_t v13 = sub_1B51E85E8((char *)(v5 > 1), v6, 1, v11);
    LOWORD(v4) = v12;
    char v3 = v13;
    goto LABEL_7;
  }
  char v3 = sub_1B5293510((uint64_t)v3);
  unint64_t v6 = *((void *)v3 + 2);
  if (!v6) {
    goto LABEL_17;
  }
LABEL_4:
  uint64_t v2 = 8 * (v6 - 1);
  unint64_t v1 = *(unsigned int *)&v3[v2 + 32] | ((unint64_t)*(unsigned __int16 *)&v3[v2 + 36] << 32);
  int v4 = v3[v2 + 38];
  *((void *)v3 + 2) = v6 - 1;
  if (v4 == 3)
  {
    unint64_t v9 = *((void *)v3 + 3);
    if (v6 > v9 >> 1) {
      char v3 = sub_1B51E85E8((char *)(v9 > 1), v6, 1, v3);
    }
    *((void *)v3 + 2) = v6;
    *(_DWORD *)&v3[v2 + 32] = v1;
    uint64_t v7 = (uint64_t)&v3[v2 + 32];
    *(_WORD *)&v3[v2 + 36] = 0;
    LOBYTE(v4) = 4;
    goto LABEL_15;
  }
  if (v4 != 7)
  {
    unint64_t v10 = *((void *)v3 + 3);
    if (v6 > v10 >> 1)
    {
      uint64_t v14 = v3;
      char v15 = v4;
      int64_t v16 = sub_1B51E85E8((char *)(v10 > 1), v6, 1, v14);
      LOBYTE(v4) = v15;
      char v3 = v16;
    }
    *((void *)v3 + 2) = v6;
    *(_DWORD *)&v3[v2 + 32] = v1;
    uint64_t v7 = (uint64_t)&v3[v2 + 32];
    *(_WORD *)&v3[v2 + 36] = WORD2(v1);
    goto LABEL_15;
  }
  LOWORD(v4) = WORD2(v1);
  unint64_t v5 = *((void *)v3 + 3);
  if (v6 > v5 >> 1) {
    goto LABEL_18;
  }
LABEL_7:
  *((void *)v3 + 2) = v6;
  *(_DWORD *)&v3[v2 + 32] = v1;
  uint64_t v7 = (uint64_t)&v3[v2 + 32];
  *(_WORD *)&v3[v2 + 36] = v4 | 4;
  LOBYTE(v4) = 7;
LABEL_15:
  uint64_t result = 0;
  *(unsigned char *)(v7 + 6) = v4;
  *(void *)(v0 + 8) = v3;
  return result;
}

uint64_t sub_1B5248004()
{
  uint64_t v2 = v0;
  if (*(void *)(v0[1] + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  uint64_t v4 = 0xFF000000000000;
  if ((~result & 0xFF000000000000) == 0) {
    goto LABEL_18;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B5276FD0();
  if ((result & 0xFF000000000000) == 0xFF000000000000)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  if ((result & 0xFF000000000000) == 0x9000000000000)
  {
    uint64_t v7 = v2[6];
    if ((unint64_t)result >= *(void *)(v7 + 16))
    {
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v8 = v7 + 16 * result;
    uint64_t v4 = *(void *)(v8 + 32);
    unint64_t v9 = *(void *)(v8 + 40);
    sub_1B51D4BB8(v4, v9);
    LODWORD(v6) = sub_1B527751C(v4, v9);
    sub_1B51D4C64(v4, v9);
    uint64_t v6 = v6;
    unint64_t v10 = 0x3000000000000;
  }
  else
  {
    unint64_t v10 = result & 0xFFFF000000000000;
  }
  uint64_t v11 = v2[2];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    unint64_t v1 = *(unsigned int *)(v11 + 4 * v12 + 28);
    uint64_t v4 = v2[5];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    v2[5] = v4;
    if (result) {
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = (uint64_t)sub_1B5293538((void *)v4);
  uint64_t v4 = result;
  v2[5] = result;
LABEL_11:
  if (*(void *)(v4 + 16) <= v1)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v13 = v4 + 8 * v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v13 + 32);
  *(void *)(v13 + 32) = 0x8000000000000000;
  sub_1B52374D4(v5 & 0xFFFFFFFFFFFFFFLL, v10 & 0xFF000000000000 | v6 & 0xFFFFFFFFFFFFLL, isUniquelyReferenced_nonNull_native);
  *(void *)(v13 + 32) = v15;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B52481AC()
{
  unint64_t v1 = (char **)(v0 + 8);
  if (*(void *)(*(void *)(v0 + 8) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t v3 = v0;
  uint64_t result = sub_1B5276FD0();
  uint64_t v4 = result & 0xFF000000000000;
  if ((result & 0xFF000000000000) == 0xFF000000000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if (v4 != 0x8000000000000) {
    return 0x6365686365707974;
  }
  uint64_t v6 = result;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *(void *)(v3 + 80);
  *(void *)(v3 + 80) = 0x8000000000000000;
  sub_1B5237604(v5, v6 & 0xFFFFFFFFFFFFFFLL, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 80) = v16;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(char **)(v3 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_1B51E85E8(0, *((void *)v8 + 2) + 1, 1, v8);
  }
  unint64_t v9 = *((void *)v8 + 2);
  unint64_t v10 = *((void *)v8 + 3);
  unint64_t v11 = v9 + 1;
  if (v9 >= v10 >> 1)
  {
    uint64_t v13 = v8;
    unint64_t v14 = *((void *)v8 + 2);
    uint64_t v15 = sub_1B51E85E8((char *)(v10 > 1), v9 + 1, 1, v13);
    unint64_t v9 = v14;
    uint64_t v8 = v15;
  }
  uint64_t result = 0;
  *((void *)v8 + 2) = v11;
  uint64_t v12 = &v8[8 * v9];
  *((_DWORD *)v12 + 8) = v5;
  *((_WORD *)v12 + 18) = WORD2(v5);
  v12[38] = 8;
  *unint64_t v1 = v8;
  return result;
}

uint64_t sub_1B5248354()
{
  uint64_t v4 = (char *)v0[1];
  if (!*((void *)v4 + 2)) {
    return 0x646E756B63617473;
  }
  uint64_t v5 = v0;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v6 = *((void *)v4 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v4 = sub_1B5293510((uint64_t)v4);
  uint64_t v6 = *((void *)v4 + 2);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v7 = &v4[8 * v6 - 8];
  int v8 = *((_DWORD *)v7 + 8);
  LODWORD(v7) = v7[38];
  *((void *)v4 + 2) = v6 - 1;
  v0[1] = v4;
  if (v7 != 1) {
    return 0x6365686365707974;
  }
  int v9 = v8;
  unint64_t v21 = sub_1B52380C4(MEMORY[0x1E4FBC860]);
  unint64_t v1 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47B78);
  sub_1B5372588();
  uint64_t v0 = (void *)v5[5];
  unint64_t v3 = v0[2];
  unint64_t v2 = HIDWORD(v3);
  if (HIDWORD(v3)) {
    goto LABEL_16;
  }
  unint64_t v1 = v21;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_17:
  }
    uint64_t v0 = sub_1B51E85C0(0, v3 + 1, 1, v0);
  unint64_t v10 = v0[2];
  unint64_t v11 = v0[3];
  unint64_t v12 = v10 + 1;
  if (v10 >= v11 >> 1)
  {
    unint64_t v20 = v10 + 1;
    unint64_t v17 = v0;
    unint64_t v18 = v0[2];
    unint64_t v19 = sub_1B51E85C0((void *)(v11 > 1), v10 + 1, 1, v17);
    unint64_t v10 = v18;
    unint64_t v12 = v20;
    uint64_t v0 = v19;
  }
  v0[2] = v12;
  v0[v10 + 4] = v1;
  swift_bridgeObjectRelease();
  v5[5] = v0;
  unint64_t v14 = *((void *)v4 + 2);
  unint64_t v13 = *((void *)v4 + 3);
  if (v14 >= v13 >> 1) {
    uint64_t v4 = sub_1B51E85E8((char *)(v13 > 1), v14 + 1, 1, v4);
  }
  uint64_t result = 0;
  *((void *)v4 + 2) = v14 + 1;
  uint64_t v16 = &v4[8 * v14];
  *((_DWORD *)v16 + 8) = v3;
  *((_WORD *)v16 + 18) = v2;
  v16[38] = 8;
  v5[1] = v4;
  return result;
}

uint64_t sub_1B524855C()
{
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = 0x6365686365707974;
  if (BYTE6(v5) != 2)
  {
    if (BYTE6(v5) != 1) {
      return result;
    }
    if (BYTE6(v4) != 1)
    {
      if (BYTE6(v4) != 2) {
        return result;
      }
      double v6 = (double)(int)v5;
      double v7 = *(float *)&v4;
      goto LABEL_17;
    }
    double v6 = (double)(int)v5;
    goto LABEL_16;
  }
  if (BYTE6(v4) == 1)
  {
    double v6 = *(float *)&v5;
LABEL_16:
    double v7 = (double)(int)v4;
    goto LABEL_17;
  }
  if (BYTE6(v4) != 2) {
    return result;
  }
  double v6 = *(float *)&v5;
  double v7 = *(float *)&v4;
LABEL_17:
  int v8 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v8 = sub_1B51E85E8(0, *((void *)v8 + 2) + 1, 1, v8);
  }
  unint64_t v9 = *((void *)v8 + 2);
  unint64_t v10 = *((void *)v8 + 3);
  unint64_t v11 = v9 + 1;
  if (v9 >= v10 >> 1)
  {
    unint64_t v14 = v8;
    unint64_t v15 = v9 + 1;
    unint64_t v16 = v9;
    unint64_t v17 = sub_1B51E85E8((char *)(v10 > 1), v9 + 1, 1, v14);
    unint64_t v9 = v16;
    unint64_t v11 = v15;
    int v8 = v17;
  }
  uint64_t result = 0;
  float v12 = v6 / v7;
  *((void *)v8 + 2) = v11;
  unint64_t v13 = &v8[8 * v9];
  *((_WORD *)v13 + 18) = 0;
  *((float *)v13 + 8) = v12;
  v13[38] = 2;
  *unint64_t v1 = v8;
  return result;
}

uint64_t sub_1B524872C()
{
  unint64_t v1 = *(char **)(v0 + 8);
  uint64_t v2 = *((void *)v1 + 2);
  if (!v2) {
    return 0x646E756B63617473;
  }
  unint64_t v3 = &v1[8 * v2];
  unint64_t v4 = *((unsigned int *)v3 + 6) | ((unint64_t)*((unsigned __int16 *)v3 + 14) << 32);
  char v5 = v3[30];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v1 = sub_1B51E85E8(0, v2 + 1, 1, v1);
  }
  unint64_t v7 = *((void *)v1 + 2);
  unint64_t v6 = *((void *)v1 + 3);
  if (v7 >= v6 >> 1) {
    unint64_t v1 = sub_1B51E85E8((char *)(v6 > 1), v7 + 1, 1, v1);
  }
  uint64_t result = 0;
  *((void *)v1 + 2) = v7 + 1;
  unint64_t v9 = &v1[8 * v7];
  *((_DWORD *)v9 + 8) = v4;
  *((_WORD *)v9 + 18) = WORD2(v4);
  v9[38] = v5;
  *(void *)(v0 + 8) = v1;
  return result;
}

uint64_t sub_1B5248820()
{
  unint64_t v7 = *(char **)(v0 + 8);
  if (!*((void *)v7 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v8 = *((void *)v7 + 2);
    if (v8) {
      goto LABEL_4;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v7 = sub_1B5293510((uint64_t)v7);
  uint64_t v8 = *((void *)v7 + 2);
  if (!v8) {
    goto LABEL_21;
  }
LABEL_4:
  uint64_t v9 = v8 - 1;
  unint64_t v10 = &v7[8 * v8 - 8];
  uint64_t v11 = *((unsigned __int16 *)v10 + 18);
  uint64_t v12 = *((unsigned int *)v10 + 8);
  LODWORD(v10) = v10[38];
  *((void *)v7 + 2) = v9;
  *(void *)(v0 + 8) = v7;
  if (v10 != 6) {
    return 0x6365686365707974;
  }
  uint64_t v2 = *(void **)(v0 + 24);
  unint64_t v42 = (uint64_t *)(v0 + 24);
  if (v2[2] <= (unint64_t)v12) {
    goto LABEL_22;
  }
  uint64_t v41 = v12 | (v11 << 32);
  sub_1B51DFF98((uint64_t)&v2[5 * v12 + 4], (uint64_t)v49);
  uint64_t v13 = v50;
  uint64_t v14 = v51;
  unint64_t v15 = __swift_project_boxed_opaque_existential_1(v49, v50);
  uint64_t v16 = type metadata accessor for PSDecryptionFilter();
  uint64_t v17 = sub_1B5372CD8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = &v38[-v19];
  sub_1B5248D18((uint64_t)v15, v13, v14, &v38[-v19]);
  uint64_t v21 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v16) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    return 0x726F7272656F69;
  }
  uint64_t v44 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v21 + 32))(boxed_opaque_existential_1, v20, v16);
  sub_1B51E0D0C(&v43, (uint64_t)v46);
  int v1 = *(_DWORD *)(v0 + 4);
  uint64_t v4 = v47;
  uint64_t v24 = v48;
  unint64_t v25 = __swift_project_boxed_opaque_existential_1(v46, v47);
  uint64_t v44 = v4;
  uint64_t v5 = *(void *)(v24 + 8);
  uint64_t WitnessTable = v5;
  unint64_t v6 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
  unint64_t v7 = (char *)(*(void *)(v4 - 8) + 16);
  unint64_t v3 = *(void (**)(unsigned char *, uint64_t *, uint64_t, double))v7;
  (*(void (**)(uint64_t *, void *, uint64_t))v7)(v6, v25, v4);
  unint64_t v40 = v2[2];
  if (!HIDWORD(v40))
  {
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v42 = (uint64_t)v2;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1B51E85D4(0, v40 + 1, 1, v2);
  uint64_t v2 = (void *)isUniquelyReferenced_nonNull_native;
  *unint64_t v42 = isUniquelyReferenced_nonNull_native;
LABEL_12:
  unint64_t v28 = v2[2];
  unint64_t v27 = v2[3];
  int v39 = v1;
  if (v28 >= v27 >> 1)
  {
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1B51E85D4((void *)(v27 > 1), v28 + 1, 1, v2);
    uint64_t v2 = (void *)isUniquelyReferenced_nonNull_native;
    *unint64_t v42 = isUniquelyReferenced_nonNull_native;
  }
  double v29 = MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
  char v31 = &v38[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3(v31, v6, v4, v29);
  sub_1B5237D00(v28, (uint64_t)v31, v42, v4, v5);
  *(void *)(v0 + 24) = v2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  unsigned int v32 = v40;
  *(_DWORD *)(v0 + 4) = v40;
  int v33 = *(char **)(v0 + 16);
  uint64_t v34 = *((void *)v33 + 2);
  if (!v34)
  {
    __break(1u);
    goto LABEL_26;
  }
  LODWORD(v7) = *((_DWORD *)v33 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_26:
  }
    int v33 = sub_1B51E85A0(0, v34 + 1, 1, v33);
  unint64_t v36 = *((void *)v33 + 2);
  unint64_t v35 = *((void *)v33 + 3);
  if (v36 >= v35 >> 1) {
    int v33 = sub_1B51E85A0((char *)(v35 > 1), v36 + 1, 1, v33);
  }
  *((void *)v33 + 2) = v36 + 1;
  *(_DWORD *)&v33[4 * v36 + 32] = v7;
  *(void *)(v0 + 16) = v33;
  uint64_t v22 = sub_1B5277050(0, 0);
  sub_1B5248E44(v0, v41, v32, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return v22;
}

uint64_t sub_1B5248D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  double v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v10 + 16))(v9, v7);
  return PSDecryptionFilter.init(forEExec:)((uint64_t)v9, a2, a3, a4);
}

uint64_t sub_1B5248E44(uint64_t a1, unsigned int a2, unsigned int a3, int a4)
{
  uint64_t v8 = *(void *)(a1 + 24);
  if (*(void *)(v8 + 16) <= (unint64_t)a3)
  {
    __break(1u);
  }
  else
  {
    int v4 = a4;
    unsigned int v7 = a2;
    uint64_t v6 = a1;
    sub_1B51DFF98(v8 + 40 * a3 + 32, (uint64_t)v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47B90);
    __swift_instantiateConcreteTypeFromMangledName(qword_1E9D48428);
    swift_dynamicCast();
    uint64_t v9 = v20;
    uint64_t v10 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 32);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
    v11(v9, v10);
    uint64_t v5 = *(void **)(v6 + 24);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v6 + 24) = v5;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  uint64_t v5 = sub_1B52934FC(v5);
  *(void *)(v6 + 24) = v5;
LABEL_3:
  if (v5[2] <= (unint64_t)v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v13 = (uint64_t)&v5[5 * v7 + 4];
  __swift_destroy_boxed_opaque_existential_1(v13);
  sub_1B51E0D0C(&v16, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  uint64_t v5 = *(void **)(v6 + 16);
  if (!v5[2])
  {
LABEL_11:
    __break(1u);
LABEL_12:
    uint64_t result = (uint64_t)sub_1B529354C((uint64_t)v5);
    uint64_t v5 = (void *)result;
    uint64_t v15 = *(void *)(result + 16);
    if (v15) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v15 = v5[2];
  if (v15)
  {
LABEL_7:
    v5[2] = v15 - 1;
    *(void *)(v6 + 16) = v5;
    *(_DWORD *)(v6 + 4) = v4;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1B5249028()
{
  if (*(void *)(*(void *)(v0 + 8) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  unint64_t v3 = *(char **)(v0 + 8);
  int v4 = sub_1B52491AC(result & 0xFFFFFFFFFFFFFFLL, v2 & 0xFFFFFFFFFFFFFFLL);
  if (v4 != 3)
  {
    BOOL v5 = v4 == 1;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_7;
    }
LABEL_11:
    unint64_t v3 = sub_1B51E85E8(0, *((void *)v3 + 2) + 1, 1, v3);
    goto LABEL_7;
  }
  BOOL v5 = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_11;
  }
LABEL_7:
  unint64_t v7 = *((void *)v3 + 2);
  unint64_t v6 = *((void *)v3 + 3);
  if (v7 >= v6 >> 1) {
    unint64_t v3 = sub_1B51E85E8((char *)(v6 > 1), v7 + 1, 1, v3);
  }
  uint64_t result = 0;
  *((void *)v3 + 2) = v7 + 1;
  uint64_t v8 = &v3[8 * v7];
  *((_WORD *)v8 + 18) = 0;
  *((_DWORD *)v8 + 8) = v5;
  v8[38] = 0;
  *(void *)(v0 + 8) = v3;
  return result;
}

uint64_t sub_1B52491AC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = 3;
  unint64_t v4 = HIWORD(a2);
  switch(BYTE6(a1))
  {
    case 1:
      if (BYTE6(a2) == 1)
      {
        int v13 = a1 - a2;
        BOOL v14 = __OFSUB__(a1, a2);
        if (v13) {
          int v15 = 2;
        }
        else {
          int v15 = 1;
        }
        if (v13 >= 0) {
          LODWORD(v3) = v15;
        }
        else {
          LODWORD(v3) = 0;
        }
        if (v14) {
          return 2 * ((((int)a2 > 0) | ((int)a2 >> 31)) == -1);
        }
        else {
          return v3;
        }
      }
      if (BYTE6(a2) != 2) {
        return 3;
      }
      return sub_1B524E218(a1, *(float *)&a2);
    case 2:
      if (BYTE6(a2) == 1) {
        return 2 - sub_1B524E218(a2, *(float *)&a1);
      }
      if (BYTE6(a2) != 2) {
        return 3;
      }
      return sub_1B524E3C0(*(float *)&a1, *(float *)&a2);
    case 3:
      if (BYTE6(a2) == 3)
      {
        uint64_t v9 = *(void *)(v2 + 56);
        uint64_t v10 = a1;
        unint64_t v16 = *(void *)(v9 + 16);
        if (a1 < v16)
        {
          uint64_t v12 = a2;
          if (a2 < v16) {
            goto LABEL_39;
          }
          goto LABEL_49;
        }
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      if (BYTE6(a2) != 9) {
        return 3;
      }
      uint64_t v6 = *(void *)(v2 + 56);
      unint64_t v4 = a2;
      if ((unint64_t)a2 >= *(void *)(v6 + 16))
      {
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      uint64_t v7 = *(void *)(v2 + 48);
      uint64_t v8 = a1;
      if ((unint64_t)a1 < *(void *)(v7 + 16)) {
        goto LABEL_42;
      }
      __break(1u);
LABEL_17:
      if (v4 == 3)
      {
        uint64_t v6 = *(void *)(v2 + 48);
        unint64_t v4 = a1;
        if ((unint64_t)a1 >= *(void *)(v6 + 16))
        {
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        uint64_t v7 = *(void *)(v2 + 56);
        uint64_t v8 = a2;
        if ((unint64_t)a2 >= *(void *)(v7 + 16))
        {
LABEL_51:
          __break(1u);
          JUMPOUT(0x1B5249420);
        }
LABEL_42:
        uint64_t v24 = v6 + 16 * v4;
        uint64_t v20 = *(void *)(v24 + 32);
        unint64_t v19 = *(void *)(v24 + 40);
        uint64_t v25 = v7 + 16 * v8;
        uint64_t v22 = *(void *)(v25 + 32);
        unint64_t v23 = *(void *)(v25 + 40);
        goto LABEL_43;
      }
      if (v4 != 9) {
        return 3;
      }
      uint64_t v9 = *(void *)(v2 + 48);
      uint64_t v10 = a1;
      unint64_t v11 = *(void *)(v9 + 16);
      if (a1 >= v11) {
        goto LABEL_47;
      }
      uint64_t v12 = a2;
      if (a2 < v11)
      {
LABEL_39:
        uint64_t v17 = v9 + 32;
        uint64_t v18 = (uint64_t *)(v17 + 16 * v10);
        uint64_t v20 = *v18;
        unint64_t v19 = v18[1];
        uint64_t v21 = (uint64_t *)(v17 + 16 * v12);
        uint64_t v22 = *v21;
        unint64_t v23 = v21[1];
LABEL_43:
        sub_1B51D4BB8(v20, v19);
        sub_1B51D4BB8(v22, v23);
        return sub_1B5286A28(v20, v19, v22, v23);
      }
      __break(1u);
      return 3;
    case 9:
      goto LABEL_17;
    default:
      return v3;
  }
}

uint64_t sub_1B5249444()
{
  uint64_t v2 = *(void *)(v0 + 8);
  int v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v4 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = 0x6365686365707974;
  if (BYTE6(v5) != 2)
  {
    if (BYTE6(v5) != 1) {
      return result;
    }
    if (BYTE6(v4) != 1)
    {
      if (BYTE6(v4) != 2) {
        return result;
      }
      float v6 = *(float *)&v4;
      float v7 = (float)(int)v5;
      goto LABEL_16;
    }
    float v7 = (float)(int)v5;
    goto LABEL_15;
  }
  float v7 = *(float *)&v5;
  if (BYTE6(v4) == 1)
  {
LABEL_15:
    float v6 = (float)(int)v4;
    goto LABEL_16;
  }
  if (BYTE6(v4) != 2) {
    return result;
  }
  float v6 = *(float *)&v4;
LABEL_16:
  float v8 = powf(v7, v6);
  if ((~LODWORD(v8) & 0x7F800000) == 0) {
    return 0x656E696665646E75;
  }
  uint64_t v9 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = sub_1B51E85E8(0, *((void *)v9 + 2) + 1, 1, v9);
  }
  unint64_t v10 = *((void *)v9 + 2);
  unint64_t v11 = *((void *)v9 + 3);
  unint64_t v12 = v10 + 1;
  if (v10 >= v11 >> 1)
  {
    BOOL v14 = v9;
    unint64_t v17 = v10 + 1;
    unint64_t v15 = *((void *)v9 + 2);
    unint64_t v16 = sub_1B51E85E8((char *)(v11 > 1), v10 + 1, 1, v14);
    unint64_t v10 = v15;
    unint64_t v12 = v17;
    uint64_t v9 = v16;
  }
  uint64_t result = 0;
  *((void *)v9 + 2) = v12;
  int v13 = &v9[8 * v10];
  *((_WORD *)v13 + 18) = 0;
  *((float *)v13 + 8) = v8;
  v13[38] = 2;
  *int v1 = v9;
  return result;
}

uint64_t sub_1B5249634()
{
  uint64_t v2 = *(char **)(v0 + 8);
  if (!*((void *)v2 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v6 = *((void *)v2 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v2 = sub_1B5293510((uint64_t)v2);
  unint64_t v6 = *((void *)v2 + 2);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  unint64_t v7 = v6 - 1;
  float v8 = &v2[8 * v6 - 8];
  int v1 = v8[38];
  unint64_t v6 = *((unsigned int *)v8 + 8) | ((unint64_t)*((unsigned __int16 *)v8 + 18) << 32);
  *((void *)v2 + 2) = v7;
  *(void *)(v0 + 8) = v2;
  if (v1 == 2)
  {
    float v12 = floorf(*(float *)&v6);
    unint64_t v13 = *((void *)v2 + 2);
    unint64_t v14 = *((void *)v2 + 3);
    unint64_t v15 = v13 + 1;
    if (v13 >= v14 >> 1)
    {
      unint64_t v26 = v13 + 1;
      uint64_t v20 = v2;
      float v24 = v12;
      unint64_t v21 = *((void *)v2 + 2);
      uint64_t v22 = sub_1B51E85E8((char *)(v14 > 1), v13 + 1, 1, v20);
      unint64_t v13 = v21;
      float v12 = v24;
      unint64_t v15 = v26;
      uint64_t v2 = v22;
    }
    *((void *)v2 + 2) = v15;
    unint64_t v16 = &v2[8 * v13];
    *((float *)v16 + 8) = v12;
    unint64_t v10 = v16 + 32;
    *((_WORD *)v10 + 2) = 0;
    goto LABEL_12;
  }
  if (v1 == 1)
  {
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v5 = *((void *)v2 + 3);
    int64_t v4 = v3 + 1;
    if (v3 < v5 >> 1)
    {
LABEL_7:
      *((void *)v2 + 2) = v4;
      uint64_t v9 = &v2[8 * v3];
      *((_DWORD *)v9 + 8) = v6;
      unint64_t v10 = v9 + 32;
      *((_WORD *)v10 + 2) = WORD2(v6);
LABEL_12:
      uint64_t result = 0;
      v10[6] = v1;
      *(void *)(v0 + 8) = v2;
      return result;
    }
LABEL_16:
    unint64_t v23 = v3;
    int64_t v25 = v4;
    unint64_t v17 = v2;
    unint64_t v18 = v6;
    unint64_t v19 = sub_1B51E85E8((char *)(v5 > 1), v4, 1, v17);
    unint64_t v3 = v23;
    int64_t v4 = v25;
    unint64_t v6 = v18;
    uint64_t v2 = v19;
    goto LABEL_7;
  }
  return 0x6365686365707974;
}

uint64_t sub_1B52497DC()
{
  int v1 = (char **)v0 + 1;
  if (*(void *)(*((void *)v0 + 1) + 16) < 4uLL) {
    return 0x646E756B63617473;
  }
  unint64_t v3 = v0;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v6 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v7 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_51:
    __break(1u);
    return result;
  }
  unint64_t v8 = result;
  if ((v5 & 0x400000000) != 0 && BYTE6(v5) == 7)
  {
    if ((unint64_t)v5 < *(void *)(*((void *)v0 + 4) + 16))
    {
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    __break(1u);
LABEL_47:
    uint64_t result = swift_release();
    __break(1u);
    goto LABEL_48;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47A20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B538C0E0;
  *(_WORD *)(v9 + 36) = WORD2(v5);
  *(_DWORD *)(v9 + 32) = v5;
  *(unsigned char *)(v9 + 38) = BYTE6(v5);
LABEL_12:
  if (BYTE6(v7) != 2 && BYTE6(v7) != 1)
  {
    uint64_t v2 = 0x6365686365707974;
    goto LABEL_17;
  }
  swift_getKeyPath();
  long long v33 = *v0;
  unint64_t v31 = v6 & 0xFFFFFFFFFFFFFFLL;
  if (sub_1B52491AC(v8 & 0xFFFFFFFFFFFFFFLL, v6 & 0xFFFFFFFFFFFFFFLL) == 3)
  {
LABEL_15:
    uint64_t v2 = 0x6365686365707974;
    swift_release();
LABEL_17:
    swift_bridgeObjectRelease();
    return v2;
  }
  unint64_t v10 = HIWORD(v8);
  while (1)
  {
    swift_getAtKeyPath();
    if (v32 != 1) {
      goto LABEL_42;
    }
    unint64_t v11 = (char *)*((void *)&v33 + 1);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_1B51E85E8(0, *(void *)(*((void *)&v33 + 1) + 16) + 1, 1, *((char **)&v33 + 1));
    }
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      unint64_t v11 = sub_1B51E85E8((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    unint64_t v14 = &v11[8 * v13];
    *((_DWORD *)v14 + 8) = v8;
    *((_WORD *)v14 + 18) = WORD2(v8);
    v14[38] = v10;
    *((void *)v3 + 1) = v11;
    uint64_t v15 = swift_bridgeObjectRetain();
    LOBYTE(v16) = sub_1B5277050(v15, 0);
    swift_bridgeObjectRelease();
    LODWORD(v17) = v16;
    if ((_BYTE)v16) {
      goto LABEL_41;
    }
    unint64_t v18 = *v1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v18 = sub_1B51E85E8(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v16 = *((void *)v18 + 2);
    unint64_t v19 = *((void *)v18 + 3);
    int64_t v20 = v19 >> 1;
    unint64_t v21 = v16 + 1;
    if (v19 >> 1 <= v16)
    {
      unint64_t v18 = sub_1B51E85E8((char *)(v19 > 1), v16 + 1, 1, v18);
      unint64_t v19 = *((void *)v18 + 3);
      int64_t v20 = v19 >> 1;
    }
    *((void *)v18 + 2) = v21;
    uint64_t v22 = &v18[8 * v16];
    *((_DWORD *)v22 + 8) = v8;
    *((_WORD *)v22 + 18) = WORD2(v8);
    v22[38] = v10;
    if (v20 < (uint64_t)(v16 + 2)) {
      unint64_t v18 = sub_1B51E85E8((char *)(v19 > 1), v16 + 2, 1, v18);
    }
    *((void *)v18 + 2) = v16 + 2;
    unint64_t v23 = &v18[8 * v21];
    *((_DWORD *)v23 + 8) = v7;
    *((_WORD *)v23 + 18) = WORD2(v7);
    v23[38] = BYTE6(v7);
    *((void *)v3 + 1) = v18;
    uint64_t v24 = sub_1B5245D98();
    uint64_t v2 = v24;
    if (v25 || (_BYTE)v24)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v2;
    }
    unint64_t v26 = *v1;
    if (!*((void *)*v1 + 2)) {
      goto LABEL_47;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      break;
    }
    uint64_t v17 = *((void *)v26 + 2);
    if (!v17) {
      goto LABEL_40;
    }
LABEL_37:
    uint64_t v27 = v17 - 1;
    unint64_t v28 = &v26[8 * v27];
    uint64_t v29 = *((unsigned __int16 *)v28 + 18);
    uint64_t v30 = *((unsigned int *)v28 + 8);
    unint64_t v10 = v28[38];
    *((void *)v26 + 2) = v27;
    unint64_t v8 = v30 | (v29 << 32);
    *((void *)v3 + 1) = v26;
    long long v33 = *v3;
    if (sub_1B52491AC(v8 | (v10 << 48), v31) == 3) {
      goto LABEL_15;
    }
  }
  unint64_t v26 = sub_1B5293510((uint64_t)v26);
  uint64_t v17 = *((void *)v26 + 2);
  if (v17) {
    goto LABEL_37;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  if (v17 == 1)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  swift_bridgeObjectRelease();
  swift_release();
  return v16;
}

uint64_t sub_1B5249D18()
{
  int v1 = (char **)v0 + 1;
  if (*(void *)(*((void *)v0 + 1) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  long long v9 = *v0;
  if (sub_1B52491AC(result & 0xFFFFFFFFFFFFFFLL, v3 & 0xFFFFFFFFFFFFFFLL) == 3) {
    return 0x6365686365707974;
  }
  int64_t v4 = (char *)*((void *)&v9 + 1);
  swift_getAtKeyPath();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v4 = sub_1B51E85E8(0, *(void *)(*((void *)&v9 + 1) + 16) + 1, 1, *((char **)&v9 + 1));
  }
  unint64_t v6 = *((void *)v4 + 2);
  unint64_t v5 = *((void *)v4 + 3);
  if (v6 >= v5 >> 1) {
    int64_t v4 = sub_1B51E85E8((char *)(v5 > 1), v6 + 1, 1, v4);
  }
  uint64_t result = 0;
  *((void *)v4 + 2) = v6 + 1;
  uint64_t v7 = &v4[8 * v6];
  *((_WORD *)v7 + 18) = 0;
  *((_DWORD *)v7 + 8) = v8;
  v7[38] = 0;
  *int v1 = v4;
  return result;
}

uint64_t sub_1B5249EC0()
{
  uint64_t v2 = (char **)(v0 + 8);
  if (*(void *)(*(void *)(v0 + 8) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  int64_t v4 = (char *)v0;
  uint64_t v5 = sub_1B5276FD0();
  if ((~v5 & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  unint64_t v6 = v5;
  uint64_t v7 = sub_1B5276FD0();
  if ((~v7 & 0xFF000000000000) == 0)
  {
LABEL_46:
    __break(1u);
    JUMPOUT(0x1B524A358);
  }
  uint64_t v3 = 0x6365686365707974;
  if (BYTE6(v7) == 9)
  {
    if (BYTE6(v6) != 1) {
      return v3;
    }
    uint64_t v17 = *((void *)v4 + 6);
    if ((unint64_t)v7 < *(void *)(v17 + 16))
    {
      uint64_t v18 = v17 + 16 * v7;
      uint64_t v19 = *(void *)(v18 + 32);
      unint64_t v11 = *(void *)(v18 + 40);
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      switch(v11 >> 62)
      {
        case 1uLL:
          uint64_t v20 = (int)v19;
          uint64_t v21 = v19 >> 32;
          goto LABEL_30;
        case 2uLL:
          uint64_t v20 = *(void *)(v19 + 16);
          uint64_t v21 = *(void *)(v19 + 24);
LABEL_30:
          sub_1B51D4BB8(*(void *)(v18 + 32), *(void *)(v18 + 40));
          if (v21 >= v20) {
            goto LABEL_31;
          }
          __break(1u);
          goto LABEL_44;
        case 3uLL:
          goto LABEL_31;
        default:
          uint64_t v20 = 0;
          uint64_t v21 = BYTE6(v11);
LABEL_31:
          if ((int)v6 < v20 || (int)v6 >= v21)
          {
            uint64_t v3 = 0x65686365676E6172;
            sub_1B51D4C64(v19, v11);
          }
          else
          {
            unsigned __int8 v26 = sub_1B5372438();
            uint64_t v27 = *v2;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v27 = sub_1B51E85E8(0, *((void *)v27 + 2) + 1, 1, v27);
            }
            unint64_t v29 = *((void *)v27 + 2);
            unint64_t v28 = *((void *)v27 + 3);
            if (v29 >= v28 >> 1) {
              uint64_t v27 = sub_1B51E85E8((char *)(v28 > 1), v29 + 1, 1, v27);
            }
            *((void *)v27 + 2) = v29 + 1;
            uint64_t v30 = &v27[8 * v29];
            *((_WORD *)v30 + 18) = 0;
            *((_DWORD *)v30 + 8) = v26;
            v30[38] = 1;
            sub_1B51D4C64(v19, v11);
            uint64_t v3 = 0;
            *uint64_t v2 = v27;
          }
          return v3;
      }
    }
    goto LABEL_41;
  }
  if (BYTE6(v7) == 8)
  {
    long long v34 = *((_OWORD *)v4 + 2);
    long long v33 = *(_OWORD *)v4;
    if ((unint64_t)v7 < *(void *)(*((void *)&v34 + 1) + 16))
    {
      uint64_t v16 = *(void *)(*((void *)&v34 + 1) + 8 * v7 + 32);
      swift_bridgeObjectRetain();
      unint64_t v6 = sub_1B52AC4EC(v6 & 0xFFFFFFFFFFFFFFLL, v16);
      swift_bridgeObjectRelease();
      if ((~v6 & 0xFF000000000000) == 0) {
        return 0x656E696665646E75;
      }
      int64_t v4 = (char *)*((void *)&v33 + 1);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_25;
      }
      goto LABEL_42;
    }
    __break(1u);
    goto LABEL_40;
  }
  if (BYTE6(v7) != 7 || BYTE6(v6) != 1) {
    return v3;
  }
  uint64_t v8 = *((void *)v4 + 4);
  if ((unint64_t)v7 >= *(void *)(v8 + 16))
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    int64_t v4 = sub_1B51E85E8(0, *((void *)v4 + 2) + 1, 1, v4);
LABEL_25:
    unint64_t v24 = *((void *)v4 + 2);
    unint64_t v23 = *((void *)v4 + 3);
    if (v24 >= v23 >> 1) {
      int64_t v4 = sub_1B51E85E8((char *)(v23 > 1), v24 + 1, 1, v4);
    }
    uint64_t v3 = 0;
    *((void *)v4 + 2) = v24 + 1;
    char v25 = &v4[8 * v24];
    *((_DWORD *)v25 + 8) = v6;
    *((_WORD *)v25 + 18) = WORD2(v6);
    v25[38] = BYTE6(v6);
    *uint64_t v2 = v4;
    return v3;
  }
  uint64_t v3 = 0x65686365676E6172;
  if ((uint64_t)(v6 << 32) >= (uint64_t)0xFFFFFFFF00000001)
  {
    uint64_t v9 = *(void *)(v8 + 8 * v7 + 32);
    if ((int)v6 < *(void *)(v9 + 16))
    {
      uint64_t v10 = v9 + ((8 * v6) & 0x7FFFFFFFFLL);
      unint64_t v1 = *(unsigned int *)(v10 + 32) | ((unint64_t)*(unsigned __int16 *)(v10 + 36) << 32);
      LOBYTE(v11) = *(unsigned char *)(v10 + 38);
      unint64_t v6 = (unint64_t)*v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_44:
      }
        unint64_t v6 = (unint64_t)sub_1B51E85E8(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      unint64_t v14 = v12 + 1;
      if (v12 >= v13 >> 1)
      {
        unint64_t v31 = *(void *)(v6 + 16);
        char v32 = sub_1B51E85E8((char *)(v13 > 1), v12 + 1, 1, (char *)v6);
        unint64_t v12 = v31;
        unint64_t v6 = (unint64_t)v32;
      }
      uint64_t v3 = 0;
      *(void *)(v6 + 16) = v14;
      unint64_t v15 = v6 + 8 * v12;
      *(_DWORD *)(v15 + 32) = v1;
      *(_WORD *)(v15 + 36) = WORD2(v1);
      *(unsigned char *)(v15 + 38) = v11;
      *uint64_t v2 = (char *)v6;
    }
  }
  return v3;
}

uint64_t sub_1B524A368()
{
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  uint64_t v5 = result & 0xFF000000000000;
  if ((result & 0xFF000000000000) != 0xFF000000000000)
  {
    int v6 = result;
    uint64_t v3 = 0x6365686365707974;
    uint64_t v7 = sub_1B5276FD0();
    uint64_t v8 = 0x1000000000000;
    if ((v7 & 0xFF000000000000) != 0x1000000000000)
    {
      uint64_t v8 = 0xFF000000000000;
      if ((v7 & 0xFF000000000000) != 0xFF000000000000) {
        return v3;
      }
      __break(1u);
    }
    if (v5 == v8)
    {
      uint64_t v3 = 0x656E696665646E75;
      if (v6)
      {
        int v9 = v7;
        if (v6 != -1 || v7 != 0x80000000)
        {
          uint64_t v10 = *v1;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_1B51E85E8(0, *((void *)v10 + 2) + 1, 1, v10);
          }
          unint64_t v11 = *((void *)v10 + 2);
          unint64_t v12 = *((void *)v10 + 3);
          unint64_t v13 = v11 + 1;
          int v14 = v9 / v6;
          if (v11 >= v12 >> 1)
          {
            unint64_t v16 = v11 + 1;
            unint64_t v17 = *((void *)v10 + 2);
            uint64_t v18 = sub_1B51E85E8((char *)(v12 > 1), v11 + 1, 1, v10);
            unint64_t v11 = v17;
            unint64_t v13 = v16;
            uint64_t v10 = v18;
          }
          uint64_t v3 = 0;
          *((void *)v10 + 2) = v13;
          unint64_t v15 = &v10[8 * v11];
          *((_WORD *)v15 + 18) = 0;
          *((_DWORD *)v15 + 8) = v14;
          v15[38] = 1;
          *unint64_t v1 = v10;
        }
      }
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B524A514()
{
  unint64_t v1 = *(char **)(v0 + 8);
  if (!*((void *)v1 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    int64_t v7 = *((void *)v1 + 2);
    if (v7) {
      goto LABEL_4;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v1 = sub_1B5293510((uint64_t)v1);
  int64_t v7 = *((void *)v1 + 2);
  if (!v7) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v8 = (uint64_t)&v1[8 * v7 + 24];
  int v9 = *(_DWORD *)v8;
  LODWORD(v8) = *(unsigned __int8 *)(v8 + 6);
  *((void *)v1 + 2) = v7 - 1;
  *(void *)(v0 + 8) = v1;
  if (v8 != 1) {
    return 0x6365686365707974;
  }
  unint64_t v3 = *((void *)v1 + 2);
  BOOL v10 = __OFSUB__(v3 - 1, v9);
  uint64_t v11 = v3 - 1 - v9;
  char v2 = 1;
  uint64_t result = 0x65686365676E6172;
  if (!v10 && (v11 & 0x8000000000000000) == 0 && v11 < (uint64_t)v3)
  {
    unint64_t v13 = &v1[8 * v11 + 32];
    unint64_t v5 = *(unsigned int *)v13 | ((unint64_t)*((unsigned __int16 *)v13 + 2) << 32);
    char v4 = v13[6];
    unint64_t v6 = *((void *)v1 + 3);
    int64_t v7 = v3 + 1;
    if (v3 < v6 >> 1)
    {
LABEL_9:
      uint64_t result = 0;
      *((void *)v1 + 2) = v7;
      int v14 = &v1[8 * v3];
      *((_DWORD *)v14 + 8) = v5;
      *((_WORD *)v14 + 18) = WORD2(v5);
      v14[38] = v4;
      *(void *)(v0 + 8) = v1;
      return result;
    }
LABEL_15:
    unint64_t v15 = v1;
    int64_t v19 = v7;
    unint64_t v16 = v3;
    char v20 = v4;
    unint64_t v18 = v5;
    unint64_t v17 = sub_1B51E85E8((char *)(v6 > 1), v7, v2, v15);
    unint64_t v5 = v18;
    int64_t v7 = v19;
    char v4 = v20;
    unint64_t v3 = v16;
    unint64_t v1 = v17;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1B524A6A0()
{
  unint64_t v1 = (char **)(v0 + 8);
  if (*(void *)(*(void *)(v0 + 8) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  unint64_t v3 = (char *)v0;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  unint64_t v5 = v0 + 8;
  uint64_t result = sub_1B5276FD0();
  if ((result & 0xFF000000000000) != 0x8000000000000)
  {
    if ((result & 0xFF000000000000) != 0xFF000000000000) {
      return 0x6365686365707974;
    }
    goto LABEL_15;
  }
  long long v10 = *((_OWORD *)v3 + 2);
  if ((unint64_t)result >= *(void *)(*((void *)&v10 + 1) + 16))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v3 = (char *)*((void *)v3 + 1);
  uint64_t v6 = *(void *)(*((void *)&v10 + 1) + 8 * result + 32);
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1B52AC4EC(v4 & 0xFFFFFFFFFFFFFFLL, v6);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_13:
  }
    unint64_t v3 = sub_1B51E85E8(0, *((void *)v3 + 2) + 1, 1, v3);
  unint64_t v8 = *((void *)v3 + 2);
  unint64_t v7 = *((void *)v3 + 3);
  if (v8 >= v7 >> 1) {
    unint64_t v3 = sub_1B51E85E8((char *)(v7 > 1), v8 + 1, 1, v3);
  }
  uint64_t result = 0;
  *((void *)v3 + 2) = v8 + 1;
  int v9 = &v3[8 * v8];
  *((_WORD *)v9 + 18) = 0;
  *((_DWORD *)v9 + 8) = (~v5 & 0xFF000000000000) != 0;
  v9[38] = 0;
  *unint64_t v1 = v3;
  return result;
}

uint64_t sub_1B524A878()
{
  unint64_t v1 = (char *)v0[1];
  if (!*((void *)v1 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    int64_t v6 = *((void *)v1 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    unsigned __int8 v26 = v1;
    int64_t v29 = v6;
    unint64_t v30 = v4;
    int v27 = v3;
    unint64_t v28 = sub_1B51E85E8((char *)(v5 > 1), v6, v2, v26);
    int64_t v6 = v29;
    unint64_t v4 = v30;
    LODWORD(v3) = v27;
    unint64_t v1 = v28;
    goto LABEL_27;
  }
  unint64_t v1 = sub_1B5293510((uint64_t)v1);
  int64_t v6 = *((void *)v1 + 2);
  if (!v6) {
    goto LABEL_29;
  }
LABEL_4:
  unint64_t v7 = &v1[8 * v6 - 8];
  unsigned int v8 = *((_DWORD *)v7 + 8);
  LODWORD(v7) = v7[38];
  *((void *)v1 + 2) = v6 - 1;
  v0[1] = v1;
  char v2 = 1;
  uint64_t result = 0x6365686365707974;
  LODWORD(v6) = v8;
  switch((int)v7)
  {
    case 3:
      uint64_t v10 = v0[7];
      if (*(void *)(v10 + 16) > (unint64_t)v8)
      {
        uint64_t v11 = v10 + 16 * v8;
        uint64_t v12 = *(void *)(v11 + 32);
        unint64_t v13 = *(void *)(v11 + 40);
        LODWORD(v3) = 0;
        switch(v13 >> 62)
        {
          case 1uLL:
            BOOL v14 = __OFSUB__(HIDWORD(v12), v12);
            int v15 = HIDWORD(v12) - v12;
            if (!v14) {
              goto LABEL_22;
            }
            __break(1u);
            return 0x646E756B63617473;
          case 2uLL:
            uint64_t v21 = v12 + 16;
            uint64_t v19 = *(void *)(v12 + 16);
            uint64_t v20 = *(void *)(v21 + 8);
            BOOL v14 = __OFSUB__(v20, v19);
            uint64_t v3 = v20 - v19;
            if (!v14) {
              goto LABEL_24;
            }
            __break(1u);
            goto LABEL_21;
          case 3uLL:
            goto LABEL_26;
          default:
            goto LABEL_17;
        }
      }
      __break(1u);
      goto LABEL_32;
    case 7:
      uint64_t v16 = v0[4];
      int64_t v6 = v6;
      if (*(void *)(v16 + 16) > (unint64_t)v6) {
        goto LABEL_14;
      }
      __break(1u);
LABEL_13:
      uint64_t v16 = v0[5];
      int64_t v6 = v6;
      if (*(void *)(v16 + 16) <= (unint64_t)v6)
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        JUMPOUT(0x1B524AB0CLL);
      }
LABEL_14:
      uint64_t v3 = *(void *)(*(void *)(v16 + 8 * v6 + 32) + 16);
      break;
    case 8:
      goto LABEL_13;
    case 9:
      uint64_t v17 = v0[6];
      if (*(void *)(v17 + 16) <= (unint64_t)v8) {
        goto LABEL_33;
      }
      uint64_t v18 = v17 + 16 * v8;
      uint64_t v19 = *(void *)(v18 + 32);
      unint64_t v13 = *(void *)(v18 + 40);
      LODWORD(v3) = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
LABEL_21:
          BOOL v14 = __OFSUB__(HIDWORD(v19), v19);
          int v15 = HIDWORD(v19) - v19;
          if (v14) {
            goto LABEL_34;
          }
LABEL_22:
          uint64_t v3 = v15;
          break;
        case 2uLL:
          uint64_t v24 = v19 + 16;
          uint64_t v22 = *(void *)(v19 + 16);
          uint64_t v23 = *(void *)(v24 + 8);
          BOOL v14 = __OFSUB__(v23, v22);
          uint64_t v3 = v23 - v22;
          if (!v14) {
            goto LABEL_24;
          }
          goto LABEL_35;
        case 3uLL:
          goto LABEL_26;
        default:
LABEL_17:
          uint64_t v3 = BYTE6(v13);
          goto LABEL_24;
      }
      break;
    default:
      return result;
  }
LABEL_24:
  if (v3 != (int)v3) {
    return 0x65686365676E6172;
  }
LABEL_26:
  unint64_t v4 = *((void *)v1 + 2);
  unint64_t v5 = *((void *)v1 + 3);
  int64_t v6 = v4 + 1;
  if (v4 >= v5 >> 1) {
    goto LABEL_30;
  }
LABEL_27:
  uint64_t result = 0;
  *((void *)v1 + 2) = v6;
  char v25 = &v1[8 * v4];
  *((_WORD *)v25 + 18) = 0;
  *((_DWORD *)v25 + 8) = v3;
  v25[38] = 1;
  v0[1] = v1;
  return result;
}

float sub_1B524AB48(long double a1)
{
  char v2 = *(char **)(v1 + 8);
  if (!*((void *)v2 + 2)) {
    return *(float *)&a1;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    int64_t v5 = *((void *)v2 + 2);
    if (v5) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  char v2 = sub_1B5293510((uint64_t)v2);
  int64_t v5 = *((void *)v2 + 2);
  if (!v5) {
    goto LABEL_15;
  }
LABEL_4:
  int64_t v6 = v5 - 1;
  unint64_t v7 = &v2[8 * v5 - 8];
  int v8 = v7[38];
  float v9 = *((float *)v7 + 8);
  *((void *)v2 + 2) = v6;
  *(void *)(v1 + 8) = v2;
  if (v8 == 2)
  {
    double v10 = v9;
  }
  else
  {
    if (v8 != 1) {
      return *(float *)&a1;
    }
    double v10 = (double)SLODWORD(v9);
  }
  a1 = log(v10);
  if ((~*(void *)&a1 & 0x7FF0000000000000) != 0)
  {
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v4 = *((void *)v2 + 3);
    int64_t v5 = v3 + 1;
    if (v3 < v4 >> 1)
    {
LABEL_13:
      *(float *)&a1 = a1;
      *((void *)v2 + 2) = v5;
      uint64_t v11 = &v2[8 * v3];
      *((_WORD *)v11 + 18) = 0;
      *((_DWORD *)v11 + 8) = LODWORD(a1);
      v11[38] = 2;
      *(void *)(v1 + 8) = v2;
      return *(float *)&a1;
    }
LABEL_16:
    uint64_t v12 = v2;
    double v17 = a1;
    int64_t v13 = v5;
    unint64_t v16 = v3;
    BOOL v14 = sub_1B51E85E8((char *)(v4 > 1), v5, 1, v12);
    unint64_t v3 = v16;
    int64_t v5 = v13;
    a1 = v17;
    char v2 = v14;
    goto LABEL_13;
  }
  return *(float *)&a1;
}

float sub_1B524ACE0(uint64_t a1, long double a2)
{
  char v2 = *(char **)(a1 + 8);
  if (!*((void *)v2 + 2)) {
    return *(float *)&a2;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    int64_t v6 = *((void *)v2 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  char v2 = sub_1B5293510((uint64_t)v2);
  int64_t v6 = *((void *)v2 + 2);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  int64_t v7 = v6 - 1;
  int v8 = &v2[8 * v6 - 8];
  int v9 = v8[38];
  float v10 = *((float *)v8 + 8);
  *((void *)v2 + 2) = v7;
  *(void *)(a1 + 8) = v2;
  if (v9 == 2)
  {
    double v11 = v10;
  }
  else
  {
    if (v9 != 1) {
      return *(float *)&a2;
    }
    double v11 = (double)SLODWORD(v10);
  }
  a2 = cos(v11 / 180.0 * 3.14159265);
  if ((~*(void *)&a2 & 0x7FF0000000000000) != 0)
  {
    unint64_t v4 = *((void *)v2 + 2);
    unint64_t v5 = *((void *)v2 + 3);
    int64_t v6 = v4 + 1;
    if (v4 < v5 >> 1)
    {
LABEL_13:
      *(float *)&a2 = a2;
      *((void *)v2 + 2) = v6;
      uint64_t v12 = &v2[8 * v4];
      *((_WORD *)v12 + 18) = 0;
      *((_DWORD *)v12 + 8) = LODWORD(a2);
      v12[38] = 2;
      *(void *)(a1 + 8) = v2;
      return *(float *)&a2;
    }
LABEL_16:
    int64_t v13 = v2;
    double v18 = a2;
    int64_t v14 = v6;
    unint64_t v17 = v4;
    int v15 = sub_1B51E85E8((char *)(v5 > 1), v6, 1, v13);
    unint64_t v4 = v17;
    int64_t v6 = v14;
    a2 = v18;
    char v2 = v15;
    goto LABEL_13;
  }
  return *(float *)&a2;
}

float sub_1B524AE98(uint64_t a1, long double a2)
{
  char v2 = *(char **)(a1 + 8);
  if (!*((void *)v2 + 2)) {
    return *(float *)&a2;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    int64_t v6 = *((void *)v2 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  char v2 = sub_1B5293510((uint64_t)v2);
  int64_t v6 = *((void *)v2 + 2);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  int64_t v7 = v6 - 1;
  int v8 = &v2[8 * v6 - 8];
  int v9 = v8[38];
  float v10 = *((float *)v8 + 8);
  *((void *)v2 + 2) = v7;
  *(void *)(a1 + 8) = v2;
  if (v9 == 2)
  {
    double v11 = v10;
  }
  else
  {
    if (v9 != 1) {
      return *(float *)&a2;
    }
    double v11 = (double)SLODWORD(v10);
  }
  a2 = sin(v11 / 180.0 * 3.14159265);
  if ((~*(void *)&a2 & 0x7FF0000000000000) != 0)
  {
    unint64_t v4 = *((void *)v2 + 2);
    unint64_t v5 = *((void *)v2 + 3);
    int64_t v6 = v4 + 1;
    if (v4 < v5 >> 1)
    {
LABEL_13:
      *(float *)&a2 = a2;
      *((void *)v2 + 2) = v6;
      uint64_t v12 = &v2[8 * v4];
      *((_WORD *)v12 + 18) = 0;
      *((_DWORD *)v12 + 8) = LODWORD(a2);
      v12[38] = 2;
      *(void *)(a1 + 8) = v2;
      return *(float *)&a2;
    }
LABEL_16:
    int64_t v13 = v2;
    double v18 = a2;
    int64_t v14 = v6;
    unint64_t v17 = v4;
    int v15 = sub_1B51E85E8((char *)(v5 > 1), v6, 1, v13);
    unint64_t v4 = v17;
    int64_t v6 = v14;
    a2 = v18;
    char v2 = v15;
    goto LABEL_13;
  }
  return *(float *)&a2;
}

uint64_t sub_1B524B050()
{
  uint64_t v1 = *(char **)(v0 + 8);
  if (!*((void *)v1 + 2)) {
    return 0x646E756B63617473;
  }
  unint64_t v2 = v0;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v3 = *((void *)v1 + 2);
    if (v3) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v1 = sub_1B5293510((uint64_t)v1);
    uint64_t v3 = *((void *)v1 + 2);
    if (v3)
    {
LABEL_4:
      uint64_t v4 = v3 - 1;
      unint64_t v5 = &v1[8 * v4];
      uint64_t v6 = *((unsigned __int16 *)v5 + 18);
      uint64_t v7 = *((unsigned int *)v5 + 8);
      uint64_t v8 = v5[38];
      *((void *)v1 + 2) = v4;
      *(void *)(v0 + 8) = v1;
      unint64_t v9 = sub_1B52ABF1C(v7 | (v6 << 32) | (v8 << 48));
      if ((~v9 & 0xFF000000000000) == 0) {
        return 0x656E696665646E75;
      }
      unint64_t v0 = v9;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_13:
  uint64_t v1 = sub_1B51E85E8(0, *((void *)v1 + 2) + 1, 1, v1);
LABEL_8:
  unint64_t v12 = *((void *)v1 + 2);
  unint64_t v11 = *((void *)v1 + 3);
  if (v12 >= v11 >> 1) {
    uint64_t v1 = sub_1B51E85E8((char *)(v11 > 1), v12 + 1, 1, v1);
  }
  uint64_t result = 0;
  *((void *)v1 + 2) = v12 + 1;
  int64_t v13 = &v1[8 * v12];
  *((_DWORD *)v13 + 8) = v0;
  *((_WORD *)v13 + 18) = WORD2(v0);
  v13[38] = BYTE6(v0);
  *(void *)(v2 + 8) = v1;
  return result;
}

float sub_1B524B244(long double a1)
{
  unint64_t v2 = *(char **)(v1 + 8);
  if (!*((void *)v2 + 2)) {
    return *(float *)&a1;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    int64_t v5 = *((void *)v2 + 2);
    if (v5) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v2 = sub_1B5293510((uint64_t)v2);
  int64_t v5 = *((void *)v2 + 2);
  if (!v5) {
    goto LABEL_15;
  }
LABEL_4:
  int64_t v6 = v5 - 1;
  uint64_t v7 = &v2[8 * v5 - 8];
  int v8 = v7[38];
  float v9 = *((float *)v7 + 8);
  *((void *)v2 + 2) = v6;
  *(void *)(v1 + 8) = v2;
  if (v8 == 2)
  {
    double v10 = v9;
  }
  else
  {
    if (v8 != 1) {
      return *(float *)&a1;
    }
    double v10 = (double)SLODWORD(v9);
  }
  a1 = log10(v10);
  if ((~*(void *)&a1 & 0x7FF0000000000000) != 0)
  {
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v4 = *((void *)v2 + 3);
    int64_t v5 = v3 + 1;
    if (v3 < v4 >> 1)
    {
LABEL_13:
      *(float *)&a1 = a1;
      *((void *)v2 + 2) = v5;
      unint64_t v11 = &v2[8 * v3];
      *((_WORD *)v11 + 18) = 0;
      *((_DWORD *)v11 + 8) = LODWORD(a1);
      v11[38] = 2;
      *(void *)(v1 + 8) = v2;
      return *(float *)&a1;
    }
LABEL_16:
    unint64_t v12 = v2;
    double v17 = a1;
    int64_t v13 = v5;
    unint64_t v16 = v3;
    int64_t v14 = sub_1B51E85E8((char *)(v4 > 1), v5, 1, v12);
    unint64_t v3 = v16;
    int64_t v5 = v13;
    a1 = v17;
    unint64_t v2 = v14;
    goto LABEL_13;
  }
  return *(float *)&a1;
}

uint64_t sub_1B524B3DC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (!*(void *)(v1 + 16)) {
    return 0x646E756B63617473;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3) {
      goto LABEL_4;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t result = (uint64_t)sub_1B5293510(v1);
  uint64_t v1 = result;
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    goto LABEL_18;
  }
LABEL_4:
  uint64_t v4 = v3 - 1;
  uint64_t v5 = v1 + 8 * v4;
  unint64_t v6 = *(unsigned int *)(v5 + 32) | ((unint64_t)*(unsigned __int16 *)(v5 + 36) << 32);
  int v7 = *(unsigned __int8 *)(v5 + 38);
  *(void *)(v1 + 16) = v4;
  *(void *)(v0 + 8) = v1;
  if (v7 == 7 && (v6 & 0x400000000) != 0)
  {
    if (*(void *)(*(void *)(v0 + 32) + 16) > (unint64_t)v6)
    {
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
LABEL_19:
    __break(1u);
    return result;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47A20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B538C0E0;
  *(_WORD *)(v9 + 36) = WORD2(v6);
  *(_DWORD *)(v9 + 32) = v6;
  *(unsigned char *)(v9 + 38) = v7;
  do
  {
LABEL_13:
    uint64_t v10 = swift_bridgeObjectRetain();
    unsigned __int8 v11 = sub_1B5277050(v10, 0);
    swift_bridgeObjectRelease();
  }
  while (!v11);
  swift_bridgeObjectRelease();
  if (v11 == 1) {
    return 0;
  }
  else {
    return v11;
  }
}

uint64_t sub_1B524B548()
{
  if (*(void *)(*(void *)(v0 + 8) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v3 = *(char **)(v0 + 8);
  int v4 = sub_1B52491AC(result & 0xFFFFFFFFFFFFFFLL, v2 & 0xFFFFFFFFFFFFFFLL);
  if (v4 != 3)
  {
    BOOL v5 = v4 != 1;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_7;
    }
LABEL_11:
    uint64_t v3 = sub_1B51E85E8(0, *((void *)v3 + 2) + 1, 1, v3);
    goto LABEL_7;
  }
  BOOL v5 = 1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_11;
  }
LABEL_7:
  unint64_t v7 = *((void *)v3 + 2);
  unint64_t v6 = *((void *)v3 + 3);
  if (v7 >= v6 >> 1) {
    uint64_t v3 = sub_1B51E85E8((char *)(v6 > 1), v7 + 1, 1, v3);
  }
  uint64_t result = 0;
  *((void *)v3 + 2) = v7 + 1;
  int v8 = &v3[8 * v7];
  *((_WORD *)v8 + 18) = 0;
  *((_DWORD *)v8 + 8) = v5;
  v8[38] = 0;
  *(void *)(v0 + 8) = v3;
  return result;
}

uint64_t sub_1B524B6CC()
{
  uint64_t v1 = *(void **)(v0 + 32);
  unint64_t v2 = v1[2];
  if (HIDWORD(v2))
  {
    __break(1u);
  }
  else if (swift_isUniquelyReferenced_nonNull_native())
  {
    goto LABEL_3;
  }
  uint64_t v1 = sub_1B51E85AC(0, v2 + 1, 1, v1);
LABEL_3:
  unint64_t v4 = v1[2];
  unint64_t v3 = v1[3];
  if (v4 >= v3 >> 1) {
    uint64_t v1 = sub_1B51E85AC((void *)(v3 > 1), v4 + 1, 1, v1);
  }
  v1[2] = v4 + 1;
  v1[v4 + 4] = &unk_1F0DDCF88;
  *(void *)(v0 + 32) = v1;
  BOOL v5 = *(char **)(v0 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    BOOL v5 = sub_1B51E85E8(0, *((void *)v5 + 2) + 1, 1, v5);
  }
  unint64_t v7 = *((void *)v5 + 2);
  unint64_t v6 = *((void *)v5 + 3);
  if (v7 >= v6 >> 1) {
    BOOL v5 = sub_1B51E85E8((char *)(v6 > 1), v7 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v7 + 1;
  int v8 = &v5[8 * v7];
  *((_DWORD *)v8 + 8) = v2;
  *((_WORD *)v8 + 18) = (v2 | 0x300000000) >> 32;
  v8[38] = 7;
  *(void *)(v0 + 8) = v5;
  return 0;
}

uint64_t sub_1B524B80C()
{
  uint64_t v1 = *(char **)(v0 + 8);
  if (!*((void *)v1 + 2)) {
    return 0x646E756B63617473;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v1 = sub_1B5293510((uint64_t)v1);
    int64_t v5 = *((void *)v1 + 2);
    if (v5) {
      goto LABEL_4;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  int64_t v5 = *((void *)v1 + 2);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_4:
  unint64_t v6 = &v1[8 * v5 - 8];
  LODWORD(v2) = *((_DWORD *)v6 + 8);
  unint64_t v4 = v6[38];
  *((void *)v1 + 2) = v5 - 1;
  *(void *)(v0 + 8) = v1;
  if (v4 == 8)
  {
    int64_t v5 = *(void *)(v0 + 40);
    uint64_t v2 = v2;
    unint64_t v3 = *(void *)(v5 + 16);
    if (v3 > v2)
    {
      unint64_t v7 = *(void *)(*(void *)(v5 + 8 * v2 + 32) + 24);
      uint64_t v2 = 0x7FFFFFFFLL;
      if (v7 < 0x7FFFFFFF) {
        uint64_t v2 = v7;
      }
      unint64_t v3 = *((void *)v1 + 2);
      unint64_t v4 = *((void *)v1 + 3);
      int64_t v5 = v3 + 1;
      if (v3 < v4 >> 1) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
LABEL_14:
    __break(1u);
LABEL_15:
    uint64_t v10 = v1;
    int64_t v13 = v5;
    unint64_t v14 = v3;
    uint64_t v11 = v2;
    unint64_t v12 = sub_1B51E85E8((char *)(v4 > 1), v5, 1, v10);
    int64_t v5 = v13;
    unint64_t v3 = v14;
    uint64_t v2 = v11;
    uint64_t v1 = v12;
LABEL_9:
    uint64_t result = 0;
    *((void *)v1 + 2) = v5;
    uint64_t v9 = &v1[8 * v3];
    *((_DWORD *)v9 + 8) = v2;
    *((_WORD *)v9 + 18) = WORD2(v2);
    v9[38] = 1;
    *(void *)(v0 + 8) = v1;
    return result;
  }
  return 0x6365686365707974;
}

uint64_t sub_1B524B974()
{
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v2 = (uint64_t *)(v0 + 8);
  if (*(void *)(v3 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  uint64_t v6 = result & 0xFF000000000000;
  if ((result & 0xFF000000000000) != 0xFF000000000000)
  {
    int v7 = result;
    uint64_t v4 = 0x6365686365707974;
    uint64_t result = sub_1B5276FD0();
    uint64_t v8 = 0x1000000000000;
    if ((result & 0xFF000000000000) != 0x1000000000000)
    {
      uint64_t v8 = 0xFF000000000000;
      if ((result & 0xFF000000000000) != 0xFF000000000000) {
        return v4;
      }
      __break(1u);
    }
    if (v6 != v8) {
      return v4;
    }
    if (!v7)
    {
      __break(1u);
      goto LABEL_17;
    }
    int v1 = result;
    if (v7 != -1 || result != 0x80000000)
    {
      uint64_t v6 = *v2;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_12:
        unint64_t v9 = *(void *)(v6 + 16);
        unint64_t v10 = *(void *)(v6 + 24);
        unint64_t v11 = v9 + 1;
        if (v9 >= v10 >> 1)
        {
          unint64_t v13 = v9 + 1;
          unint64_t v14 = *(void *)(v6 + 16);
          int v15 = sub_1B51E85E8((char *)(v10 > 1), v9 + 1, 1, (char *)v6);
          unint64_t v9 = v14;
          unint64_t v11 = v13;
          uint64_t v6 = (uint64_t)v15;
        }
        uint64_t v4 = 0;
        *(void *)(v6 + 16) = v11;
        uint64_t v12 = v6 + 8 * v9;
        *(_WORD *)(v12 + 36) = 0;
        *(_DWORD *)(v12 + 32) = v1 % v7;
        *(unsigned char *)(v12 + 38) = 1;
        *uint64_t v2 = v6;
        return v4;
      }
LABEL_17:
      uint64_t v6 = (uint64_t)sub_1B51E85E8(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B524BB0C()
{
  uint64_t v2 = *(void *)(v0 + 8);
  int v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v4 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = 0x6365686365707974;
  if (BYTE6(v5) == 2)
  {
    if (BYTE6(v4) == 1)
    {
      float v7 = (float)(int)v4;
    }
    else
    {
      if (BYTE6(v4) != 2) {
        return result;
      }
      float v7 = *(float *)&v4;
    }
    float v6 = v7 * *(float *)&v5;
    goto LABEL_18;
  }
  if (BYTE6(v5) == 1)
  {
    if (BYTE6(v4) == 1)
    {
      uint64_t v8 = (int)v5 * (uint64_t)(int)v4;
      if (v8 == (int)v8)
      {
        unint64_t v10 = *v1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v10 = sub_1B51E85E8(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v17 = *((void *)v10 + 2);
        unint64_t v18 = *((void *)v10 + 3);
        unint64_t v19 = v17 + 1;
        if (v17 >= v18 >> 1)
        {
          unint64_t v28 = v17 + 1;
          uint64_t v24 = v10;
          unint64_t v25 = *((void *)v10 + 2);
          unsigned __int8 v26 = sub_1B51E85E8((char *)(v18 > 1), v17 + 1, 1, v24);
          unint64_t v17 = v25;
          unint64_t v19 = v28;
          unint64_t v10 = v26;
        }
        *((void *)v10 + 2) = v19;
        uint64_t v20 = &v10[8 * v17];
        *((_DWORD *)v20 + 8) = v8;
        int v15 = v20 + 32;
        *((_WORD *)v15 + 2) = 0;
        char v16 = 1;
LABEL_30:
        uint64_t result = 0;
        v15[6] = v16;
        *int v1 = v10;
        return result;
      }
      float v6 = (float)v8;
LABEL_18:
      float v9 = v6;
      if ((~LODWORD(v6) & 0x7F800000) == 0) {
        return 0x656E696665646E75;
      }
      unint64_t v10 = *v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v10 = sub_1B51E85E8(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v11 = *((void *)v10 + 2);
      unint64_t v12 = *((void *)v10 + 3);
      unint64_t v13 = v11 + 1;
      if (v11 >= v12 >> 1)
      {
        unint64_t v27 = v11 + 1;
        uint64_t v21 = v10;
        unint64_t v22 = *((void *)v10 + 2);
        uint64_t v23 = sub_1B51E85E8((char *)(v12 > 1), v11 + 1, 1, v21);
        unint64_t v11 = v22;
        unint64_t v13 = v27;
        unint64_t v10 = v23;
      }
      *((void *)v10 + 2) = v13;
      unint64_t v14 = &v10[8 * v11];
      *((float *)v14 + 8) = v9;
      int v15 = v14 + 32;
      *((_WORD *)v15 + 2) = 0;
      char v16 = 2;
      goto LABEL_30;
    }
    if (BYTE6(v4) == 2)
    {
      float v6 = *(float *)&v4 * (float)(int)v5;
      goto LABEL_18;
    }
  }
  return result;
}

uint64_t sub_1B524BD94()
{
  int v1 = *(char **)(v0 + 8);
  if (!*((void *)v1 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v5 = (char *)*((void *)v1 + 2);
    if (v5) {
      goto LABEL_4;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  int v1 = sub_1B5293510((uint64_t)v1);
  uint64_t v5 = (char *)*((void *)v1 + 2);
  if (!v5) {
    goto LABEL_20;
  }
LABEL_4:
  float v6 = v5 - 1;
  uint64_t v5 = &v1[8 * (void)(v5 - 1)];
  int v7 = v5[38];
  LODWORD(v5) = *((_DWORD *)v5 + 8);
  *((void *)v1 + 2) = v6;
  *(void *)(v0 + 8) = v1;
  if (v7 == 2)
  {
    unint64_t v2 = *((void *)v1 + 2);
    unint64_t v4 = *((void *)v1 + 3);
    int64_t v3 = v2 + 1;
    if (v2 < v4 >> 1)
    {
LABEL_12:
      unsigned int v14 = v5 ^ 0x80000000;
      *((void *)v1 + 2) = v3;
      int v15 = &v1[8 * v2];
      *((_DWORD *)v15 + 8) = v14;
      unint64_t v12 = v15 + 32;
      goto LABEL_13;
    }
LABEL_21:
    unint64_t v31 = v2;
    int64_t v33 = v3;
    unint64_t v22 = v1;
    int v23 = (int)v5;
    uint64_t v24 = sub_1B51E85E8((char *)(v4 > 1), v3, 1, v22);
    unint64_t v2 = v31;
    int64_t v3 = v33;
    LODWORD(v5) = v23;
    int v1 = v24;
    goto LABEL_12;
  }
  if (v7 != 1) {
    return 0x6365686365707974;
  }
  if (v5 != 0x80000000)
  {
    int v17 = -(int)v5;
    unint64_t v18 = *((void *)v1 + 2);
    unint64_t v19 = *((void *)v1 + 3);
    unint64_t v20 = v18 + 1;
    if (v18 >= v19 >> 1)
    {
      unint64_t v32 = *((void *)v1 + 2);
      unint64_t v35 = v18 + 1;
      unint64_t v28 = v1;
      int v29 = v17;
      unint64_t v30 = sub_1B51E85E8((char *)(v19 > 1), v18 + 1, 1, v28);
      unint64_t v18 = v32;
      unint64_t v20 = v35;
      int v17 = v29;
      int v1 = v30;
    }
    *((void *)v1 + 2) = v20;
    uint64_t v21 = &v1[8 * v18];
    *((_DWORD *)v21 + 8) = v17;
    unint64_t v12 = v21 + 32;
    *((_WORD *)v12 + 2) = 0;
    char v16 = 1;
    goto LABEL_18;
  }
  unint64_t v8 = *((void *)v1 + 2);
  unint64_t v9 = *((void *)v1 + 3);
  unint64_t v10 = v8 + 1;
  if (v8 >= v9 >> 1)
  {
    unint64_t v34 = v8 + 1;
    unint64_t v25 = v1;
    unint64_t v26 = *((void *)v1 + 2);
    unint64_t v27 = sub_1B51E85E8((char *)(v9 > 1), v8 + 1, 1, v25);
    unint64_t v8 = v26;
    unint64_t v10 = v34;
    int v1 = v27;
  }
  *((void *)v1 + 2) = v10;
  unint64_t v11 = &v1[8 * v8];
  *((_DWORD *)v11 + 8) = 1325400064;
  unint64_t v12 = v11 + 32;
LABEL_13:
  *((_WORD *)v12 + 2) = 0;
  char v16 = 2;
LABEL_18:
  uint64_t result = 0;
  v12[6] = v16;
  *(void *)(v0 + 8) = v1;
  return result;
}

uint64_t sub_1B524BF90()
{
  unint64_t v2 = *(char **)(v0 + 8);
  if (!*((void *)v2 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    float v6 = (char *)*((void *)v2 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v2 = sub_1B5293510((uint64_t)v2);
  float v6 = (char *)*((void *)v2 + 2);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  int v7 = v6 - 1;
  float v6 = &v2[8 * (void)(v6 - 1)];
  int v1 = v6[38];
  LODWORD(v6) = *((_DWORD *)v6 + 8);
  *((void *)v2 + 2) = v7;
  *(void *)(v0 + 8) = v2;
  if (!v1)
  {
    int v10 = v6 & 1;
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v11 = *((void *)v2 + 3);
    int64_t v4 = v3 + 1;
    if (v3 >= v11 >> 1)
    {
      unint64_t v20 = *((void *)v2 + 2);
      int64_t v22 = v3 + 1;
      char v16 = v2;
      int v17 = v10;
      unint64_t v18 = sub_1B51E85E8((char *)(v11 > 1), v3 + 1, 1, v16);
      unint64_t v3 = v20;
      int64_t v4 = v22;
      int v10 = v17;
      unint64_t v2 = v18;
    }
    int v8 = v10 ^ 1;
    goto LABEL_12;
  }
  if (v1 == 1)
  {
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v5 = *((void *)v2 + 3);
    int64_t v4 = v3 + 1;
    if (v3 < v5 >> 1)
    {
LABEL_7:
      int v8 = ~v6;
LABEL_12:
      *((void *)v2 + 2) = v4;
      unint64_t v12 = &v2[8 * v3];
      *((_DWORD *)v12 + 8) = v8;
      v12 += 32;
      *((_WORD *)v12 + 2) = 0;
      uint64_t result = 0;
      v12[6] = v1;
      *(void *)(v0 + 8) = v2;
      return result;
    }
LABEL_16:
    unint64_t v19 = v3;
    int64_t v21 = v4;
    unint64_t v13 = v2;
    int v14 = (int)v6;
    int v15 = sub_1B51E85E8((char *)(v5 > 1), v4, 1, v13);
    unint64_t v3 = v19;
    int64_t v4 = v21;
    LODWORD(v6) = v14;
    unint64_t v2 = v15;
    goto LABEL_7;
  }
  return 0x6365686365707974;
}

uint64_t sub_1B524C11C()
{
  uint64_t v2 = *(void *)(v0 + 8);
  int v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = 0x6365686365707974;
  if (BYTE6(v5))
  {
    if (BYTE6(v5) == 1 && BYTE6(v4) == 1)
    {
      float v6 = *v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        float v6 = sub_1B51E85E8(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v8 = *((void *)v6 + 2);
      unint64_t v7 = *((void *)v6 + 3);
      unint64_t v9 = v8 + 1;
      if (v8 >= v7 >> 1)
      {
        int v17 = sub_1B51E85E8((char *)(v7 > 1), v8 + 1, 1, v6);
        unint64_t v9 = v8 + 1;
        float v6 = v17;
      }
      *((void *)v6 + 2) = v9;
      int v10 = &v6[8 * v8];
      *((_DWORD *)v10 + 8) = v5 | v4;
      unint64_t v11 = v10 + 32;
LABEL_20:
      *((_WORD *)v11 + 2) = 0;
      uint64_t result = 0;
      v11[6] = BYTE6(v5);
      *int v1 = v6;
    }
  }
  else if (!BYTE6(v4))
  {
    int v12 = (v5 | v4) & 1;
    float v6 = *v1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      float v6 = sub_1B51E85E8(0, *((void *)v6 + 2) + 1, 1, v6);
    }
    unint64_t v13 = *((void *)v6 + 2);
    unint64_t v14 = *((void *)v6 + 3);
    unint64_t v15 = v13 + 1;
    if (v13 >= v14 >> 1)
    {
      unint64_t v18 = v6;
      unint64_t v19 = *((void *)v6 + 2);
      unint64_t v20 = sub_1B51E85E8((char *)(v14 > 1), v13 + 1, 1, v18);
      unint64_t v13 = v19;
      float v6 = v20;
    }
    *((void *)v6 + 2) = v15;
    char v16 = &v6[8 * v13];
    *((_DWORD *)v16 + 8) = v12;
    unint64_t v11 = v16 + 32;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_1B524C308()
{
  if (*(void *)(*(void *)(v0 + 8) + 16) < 3uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  uint64_t v2 = result & 0xFF000000000000;
  if ((result & 0xFF000000000000) == 0xFF000000000000)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v3 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v4 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = 0x6365686365707974;
  if (BYTE6(v5) == 9)
  {
    if (v2 == 0x1000000000000 && BYTE6(v4) == 1)
    {
      float v6 = (void (*)(unsigned char *, void))sub_1B51D5FC4((uint64_t)v9, v5);
      sub_1B524C584(v8, v4, (uint64_t)&v10);
      goto LABEL_16;
    }
  }
  else
  {
    if (BYTE6(v5) == 8)
    {
      sub_1B52AC064(v4 & 0xFFFFFFFFFFFFFFLL, v3 & 0xFFFFFFFFFFFFFFLL, v5);
      return 0;
    }
    if (BYTE6(v5) == 7 && BYTE6(v4) == 1)
    {
      float v6 = (void (*)(unsigned char *, void))sub_1B51D5F38((uint64_t)v9, v5);
      sub_1B524C4C4(v7, v4, v3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)&v10);
LABEL_16:
      v6(v9, 0);
      return v10;
    }
  }
  return result;
}

uint64_t sub_1B524C4C4@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a2 < 0 || (uint64_t v5 = (void *)result, v6 = *(void *)result, v7 = a2, *(void *)(*(void *)result + 16) <= a2))
  {
    *(_OWORD *)a4 = xmmword_1B538DAB0;
    *(unsigned char *)(a4 + 16) = 1;
  }
  else
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B5293510(v6);
      uint64_t v6 = result;
    }
    if (*(void *)(v6 + 16) <= v7)
    {
      __break(1u);
    }
    else
    {
      uint64_t v9 = v6 + 8 * v7;
      *(_DWORD *)(v9 + 32) = a3;
      *(_WORD *)(v9 + 36) = WORD2(a3);
      *(unsigned char *)(v9 + 38) = BYTE6(a3);
      *uint64_t v5 = v6;
      *(void *)a4 = 0;
      *(void *)(a4 + 8) = 0;
      *(unsigned char *)(a4 + 16) = 0;
    }
  }
  return result;
}

uint64_t *sub_1B524C584@<X0>(uint64_t *result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *result;
  unint64_t v4 = result[1];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)v3;
      uint64_t v7 = v3 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v6 = *(void *)(v3 + 16);
      uint64_t v7 = *(void *)(v3 + 24);
LABEL_5:
      if (v7 < v6)
      {
        __break(1u);
        JUMPOUT(0x1B524C648);
      }
      return result;
    case 3uLL:
      break;
    default:
      uint64_t v6 = 0;
      uint64_t v7 = BYTE6(v4);
      break;
  }
  long long v8 = xmmword_1B538DAB0;
  char v9 = 1;
  if (v6 <= a2 && v7 > a2)
  {
    uint64_t result = (uint64_t *)sub_1B53723A8();
    char v9 = 0;
    long long v8 = 0uLL;
  }
  *(_OWORD *)a3 = v8;
  *(unsigned char *)(a3 + 16) = v9;
  return result;
}

uint64_t sub_1B524C658()
{
  uint64_t v1 = sub_1B5372788();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = *(void *)(v0 + 8);
  if (!*(void *)(v2 + 16)) {
    return 0x646E756B63617473;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    uint64_t v4 = *(void *)(v2 + 16);
    if (v4) {
      goto LABEL_4;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t result = (uint64_t)sub_1B5293510(v2);
  uint64_t v2 = result;
  uint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    goto LABEL_13;
  }
LABEL_4:
  uint64_t v5 = v2 + 8 * (v4 - 1);
  unsigned int v6 = *(_DWORD *)(v5 + 32);
  LODWORD(v5) = *(unsigned __int8 *)(v5 + 38);
  *(void *)(v2 + 16) = v4 - 1;
  *(void *)(v0 + 8) = v2;
  if (v5 != 3) {
    return 0x6365686365707974;
  }
  uint64_t v7 = *(void *)(v0 + 56);
  if (*(void *)(v7 + 16) > (unint64_t)v6)
  {
    uint64_t v8 = v7 + 16 * v6;
    uint64_t v9 = *(void *)(v8 + 32);
    unint64_t v10 = *(void *)(v8 + 40);
    sub_1B51D4BB8(v9, v10);
    sub_1B5372768();
    uint64_t v11 = sub_1B5372708();
    uint64_t v13 = v12;
    sub_1B51D4C64(v9, v10);
    if (!v13) {
      return 3;
    }
    return v11;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1B524C7E0()
{
  uint64_t v2 = v0 + 1;
  if (*(void *)(v0[1] + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t v4 = v0;
  uint64_t v5 = sub_1B5276FD0();
  uint64_t v6 = v5 & 0xFF000000000000;
  uint64_t v7 = 0xFF000000000000;
  if ((v5 & 0xFF000000000000) == 0xFF000000000000)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unsigned int v8 = v5;
  uint64_t v9 = sub_1B5276FD0();
  uint64_t v10 = v9 & 0xFF000000000000;
  if ((v9 & 0xFF000000000000) == 0xFF000000000000)
  {
LABEL_42:
    __break(1u);
    JUMPOUT(0x1B524CC34);
  }
  uint64_t v11 = v9;
  uint64_t result = 0x6365686365707974;
  if (v6 == 0x9000000000000 && v10 == 0x6000000000000)
  {
    uint64_t v12 = v4[6];
    unint64_t v13 = v8;
    if ((unint64_t)v8 < *(void *)(v12 + 16))
    {
      uint64_t v14 = v12 + 16 * v8;
      uint64_t v6 = *(void *)(v14 + 32);
      unint64_t v15 = *(void *)(v14 + 40);
      uint64_t v42 = v6;
      unint64_t v43 = v15;
      switch(v15 >> 62)
      {
        case 1uLL:
          uint64_t v22 = (int)v6;
          uint64_t v23 = v6 >> 32;
          goto LABEL_18;
        case 2uLL:
          uint64_t v22 = *(void *)(v6 + 16);
          uint64_t v23 = *(void *)(v6 + 24);
LABEL_18:
          sub_1B51D4BB8(v6, v15);
          if (v22 == v23) {
            goto LABEL_19;
          }
          goto LABEL_10;
        case 3uLL:
          goto LABEL_19;
        default:
          if ((v15 & 0xFF000000000000) == 0)
          {
LABEL_19:
            sub_1B51D4C64(v6, v15);
            return 0x65686365676E6172;
          }
LABEL_10:
          uint64_t v7 = v4[3];
          unint64_t v1 = v11;
          if ((unint64_t)v11 >= *(void *)(v7 + 16)) {
            goto LABEL_33;
          }
          sub_1B51DFF98(v7 + 40 * v11 + 32, (uint64_t)v39);
          uint64_t v16 = v40;
          uint64_t v17 = v41;
          uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
          uint64_t v11 = sub_1B524CC44(v18, &v42, v16, v17);
          uint64_t v6 = *v2;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native) {
            goto LABEL_21;
          }
          goto LABEL_37;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
    uint64_t v7 = (uint64_t)sub_1B52934FC((void *)v7);
    v4[3] = v7;
    if (v1 >= *(void *)(v7 + 16))
    {
      __break(1u);
    }
    else
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(v7 + 40 * v1 + 32), v39);
      uint64_t v11 = v42;
      uint64_t v6 = v43;
      uint64_t v7 = v4[6];
      sub_1B51D4BB8(v42, v43);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_14:
        if ((unint64_t)v8 < *(void *)(v7 + 16))
        {
          uint64_t v19 = v7 + 16 * v8;
          uint64_t v20 = *(void *)(v19 + 32);
          unint64_t v21 = *(void *)(v19 + 40);
          *(void *)(v19 + 32) = v11;
          *(void *)(v19 + 40) = v6;
          sub_1B51D4C64(v20, v21);
          sub_1B51D4C64(v11, v6);
          v4[6] = v7;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
          return 0x726F7272656F69;
        }
        __break(1u);
LABEL_37:
        uint64_t v6 = (uint64_t)sub_1B51E85E8(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
LABEL_21:
        unint64_t v25 = *(void *)(v6 + 16);
        unint64_t v26 = *(void *)(v6 + 24);
        int64_t v27 = v26 >> 1;
        unint64_t v28 = v25 + 1;
        if (v26 >> 1 <= v25)
        {
          unint64_t v36 = (char *)v6;
          unint64_t v37 = *(void *)(v6 + 16);
          unint64_t v38 = sub_1B51E85E8((char *)(v26 > 1), v25 + 1, 1, v36);
          unint64_t v25 = v37;
          uint64_t v6 = (uint64_t)v38;
          unint64_t v26 = *((void *)v38 + 3);
          int64_t v27 = v26 >> 1;
        }
        *(void *)(v6 + 16) = v28;
        uint64_t v29 = v6 + 8 * v25;
        *(_WORD *)(v29 + 36) = 0;
        *(_DWORD *)(v29 + 32) = v8;
        *(unsigned char *)(v29 + 38) = 9;
        unint64_t v30 = v25 + 2;
        if (v27 < (uint64_t)(v25 + 2)) {
          uint64_t v6 = (uint64_t)sub_1B51E85E8((char *)(v26 > 1), v25 + 2, 1, (char *)v6);
        }
        *(void *)(v6 + 16) = v30;
        uint64_t v31 = v6 + 8 * v28;
        *(_WORD *)(v31 + 36) = 0;
        *(_DWORD *)(v31 + 32) = v11 & 1;
        *(unsigned char *)(v31 + 38) = 0;
        v4[1] = v6;
        char v32 = swift_isUniquelyReferenced_nonNull_native();
        v4[3] = v7;
        if ((v32 & 1) == 0)
        {
          uint64_t v7 = (uint64_t)sub_1B52934FC((void *)v7);
          v4[3] = v7;
        }
        if (v1 >= *(void *)(v7 + 16))
        {
          __break(1u);
        }
        else
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)(v7 + 40 * v1 + 32), v39);
          uint64_t v11 = v42;
          uint64_t v6 = v43;
          uint64_t v7 = v4[6];
          sub_1B51D4BB8(v42, v43);
          if (swift_isUniquelyReferenced_nonNull_native())
          {
LABEL_29:
            if (v13 < *(void *)(v7 + 16))
            {
              uint64_t v33 = v7 + 16 * v13;
              uint64_t v34 = *(void *)(v33 + 32);
              unint64_t v35 = *(void *)(v33 + 40);
              *(void *)(v33 + 32) = v11;
              *(void *)(v33 + 40) = v6;
              sub_1B51D4C64(v34, v35);
              sub_1B51D4C64(v11, v6);
              v4[6] = v7;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
              return 0;
            }
            __break(1u);
            goto LABEL_41;
          }
        }
        uint64_t v7 = (uint64_t)sub_1B5293560(v7);
        goto LABEL_29;
      }
    }
    uint64_t v7 = (uint64_t)sub_1B5293560(v7);
    goto LABEL_14;
  }
  return result;
}

BOOL sub_1B524CC44(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  int v39 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = type metadata accessor for PSInputByteStream();
  uint64_t v38 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v37 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v35 = v10;
  uint64_t v36 = a1;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v14, a1, a3, v18);
  PSInputByteStream.init(input:)((uint64_t)v14, a3, a4, (uint64_t)v20);
  uint64_t v21 = *a2;
  unint64_t v22 = a2[1];
  uint64_t v23 = 0;
  switch(v22 >> 62)
  {
    case 1uLL:
      uint64_t v23 = (int)v21;
      break;
    case 2uLL:
      uint64_t v23 = *(void *)(v21 + 16);
      break;
    default:
      break;
  }
  uint64_t v24 = v38;
  uint64_t v25 = (uint64_t)v39;
  while (2)
  {
    switch(v22 >> 62)
    {
      case 1uLL:
        if (v23 < v21 >> 32) {
          goto LABEL_13;
        }
        goto LABEL_16;
      case 2uLL:
        if (v23 >= *(void *)(v21 + 24)) {
          goto LABEL_16;
        }
        goto LABEL_13;
      case 3uLL:
        if (v23 < 0) {
          goto LABEL_13;
        }
        goto LABEL_16;
      default:
        if (v23 >= BYTE6(v22)) {
          goto LABEL_16;
        }
LABEL_13:
        Swift::UInt8_optional v26 = PSInputByteStream.consume()();
        uint64_t v5 = v27;
        if (v27) {
          goto LABEL_17;
        }
        if ((*(_WORD *)&v26 & 0x100) == 0)
        {
          sub_1B53723A8();
          ++v23;
          uint64_t v21 = *a2;
          unint64_t v22 = a2[1];
          continue;
        }
LABEL_16:
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v37, v20, v15);
        PSInputByteStream.finish()(v15, v25);
        if (v5)
        {
LABEL_17:
          (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v15);
        }
        else
        {
          uint64_t v30 = v35;
          uint64_t v29 = v36;
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, a3);
          (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v29, v39, a3);
          uint64_t v31 = *a2;
          unint64_t v32 = a2[1];
          uint64_t v33 = 0;
          switch(v32 >> 62)
          {
            case 1uLL:
              uint64_t v33 = v31 >> 32;
              break;
            case 2uLL:
              uint64_t v33 = *(void *)(v31 + 24);
              break;
            case 3uLL:
              break;
            default:
              uint64_t v33 = BYTE6(v32);
              break;
          }
          (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v15);
          return v33 == v23;
        }
        return v28;
    }
  }
}

uint64_t sub_1B524CFFC()
{
  if (*(void *)(*(void *)(v0 + 8) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0) {
    goto LABEL_22;
  }
  uint64_t v2 = result;
  uint64_t result = sub_1B5276FD0();
  if ((result & 0xFF000000000000) != 0x1000000000000)
  {
    if ((result & 0xFF000000000000) != 0xFF000000000000) {
      return 0x6365686365707974;
    }
    goto LABEL_23;
  }
  int v3 = result;
  if ((v2 & 0x400000000) != 0 && BYTE6(v2) == 7)
  {
    if ((unint64_t)v2 >= *(void *)(*(void *)(v0 + 32) + 16))
    {
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47A20);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B538C0E0;
    *(_WORD *)(result + 36) = WORD2(v2);
    *(_DWORD *)(result + 32) = v2;
    *(unsigned char *)(result + 38) = BYTE6(v2);
  }
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (!v3) {
    goto LABEL_18;
  }
  while (1)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    unsigned __int8 v5 = sub_1B5277050(v4, 0);
    swift_bridgeObjectRelease();
    if (v5) {
      break;
    }
    if (!--v3) {
      goto LABEL_18;
    }
  }
  if (v5 != 1)
  {
    swift_bridgeObjectRelease();
    return v5;
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
}

unint64_t sub_1B524D1B8()
{
  unint64_t v1 = 0x646E756B63617473;
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v2 = (uint64_t *)(v0 + 8);
  if (*(void *)(v3 + 16) < 2uLL) {
    return v1;
  }
  unint64_t result = sub_1B5276FD0();
  uint64_t v5 = result & 0xFF000000000000;
  if ((result & 0xFF000000000000) != 0xFF000000000000)
  {
    int v6 = result;
    unint64_t result = sub_1B5276FD0();
    uint64_t v7 = 0x1000000000000;
    if ((result & 0xFF000000000000) != 0x1000000000000)
    {
      uint64_t v7 = 0xFF000000000000;
      if ((result & 0xFF000000000000) != 0xFF000000000000) {
        return 0x6365686365707974;
      }
      __break(1u);
    }
    if (v5 == v7)
    {
      uint64_t v8 = *v2;
      int64_t v9 = *(void *)(*v2 + 16);
      if (v9 < (int)result) {
        return v1;
      }
      if (!v6) {
        return 0;
      }
      if (v6 < 0)
      {
        BOOL v10 = __OFADD__(result, v6);
        v6 += result;
        if (v10) {
          goto LABEL_36;
        }
      }
      BOOL v10 = __OFSUB__(result, v6);
      int v11 = result - v6;
      if (v10)
      {
        __break(1u);
      }
      else
      {
        unint64_t v1 = v9 - (int)result;
        if (!__OFSUB__(v9, (int)result))
        {
          uint64_t v12 = (int)result;
          if (v9 >= (uint64_t)v1)
          {
            if ((v1 & 0x8000000000000000) == 0)
            {
              sub_1B5373238();
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain_n();
              uint64_t v13 = swift_dynamicCastClass();
              if (!v13)
              {
                swift_bridgeObjectRelease();
                uint64_t v13 = MEMORY[0x1E4FBC860];
              }
              uint64_t v14 = *(void *)(v13 + 16);
              swift_release();
              if (v14 == v12)
              {
                uint64_t v15 = swift_dynamicCastClass();
                if (!v15)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v15 = MEMORY[0x1E4FBC860];
                }
LABEL_21:
                unint64_t result = swift_bridgeObjectRelease();
                unint64_t v16 = *(void *)(v8 + 16);
                if (v16 < v1)
                {
                  __break(1u);
                }
                else
                {
                  uint64_t v17 = v11;
                  unint64_t result = sub_1B52386F4(v1, v16);
                  uint64_t v18 = *(void *)(v15 + 16);
                  if (v18 >= v11)
                  {
                    if ((v11 & 0x80000000) == 0)
                    {
                      unint64_t v19 = (2 * v18) | 1;
                      uint64_t v20 = swift_retain();
                      sub_1B51DD764(v20, v15 + 32, v17, v19);
                      swift_release();
                      sub_1B51DD764(v15, v15 + 32, 0, (2 * v17) | 1);
                      swift_release();
                      return 0;
                    }
                    goto LABEL_35;
                  }
                }
                __break(1u);
LABEL_35:
                __break(1u);
LABEL_36:
                __break(1u);
                goto LABEL_37;
              }
LABEL_32:
              swift_bridgeObjectRelease();
              sub_1B521CB78(v8, v8 + 32, v1, (2 * v9) | 1);
              uint64_t v15 = v21;
              goto LABEL_21;
            }
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
      }
      __break(1u);
      goto LABEL_30;
    }
    return 0x6365686365707974;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B524D410()
{
  uint64_t v2 = *(char **)(v0 + 8);
  if (!*((void *)v2 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v6 = *((void *)v2 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v2 = sub_1B5293510((uint64_t)v2);
  unint64_t v6 = *((void *)v2 + 2);
  if (!v6) {
    goto LABEL_18;
  }
LABEL_4:
  unint64_t v7 = v6 - 1;
  uint64_t v8 = &v2[8 * v6 - 8];
  int v1 = v8[38];
  unint64_t v6 = *((unsigned int *)v8 + 8) | ((unint64_t)*((unsigned __int16 *)v8 + 18) << 32);
  *((void *)v2 + 2) = v7;
  *(void *)(v0 + 8) = v2;
  if (v1 == 2)
  {
    float v12 = floorf(*(float *)&v6 + 0.5);
    float v13 = ceilf(*(float *)&v6 + 0.5);
    if (COERCE_INT(*(float *)&v6 + 0.5) >= 0) {
      float v14 = v13;
    }
    else {
      float v14 = v12;
    }
    unint64_t v15 = *((void *)v2 + 2);
    unint64_t v16 = *((void *)v2 + 3);
    unint64_t v17 = v15 + 1;
    if (v15 >= v16 >> 1)
    {
      unint64_t v28 = v15 + 1;
      unint64_t v22 = v2;
      float v26 = v14;
      unint64_t v23 = *((void *)v2 + 2);
      uint64_t v24 = sub_1B51E85E8((char *)(v16 > 1), v15 + 1, 1, v22);
      unint64_t v15 = v23;
      float v14 = v26;
      unint64_t v17 = v28;
      uint64_t v2 = v24;
    }
    *((void *)v2 + 2) = v17;
    uint64_t v18 = &v2[8 * v15];
    *((float *)v18 + 8) = v14;
    BOOL v10 = v18 + 32;
    *((_WORD *)v10 + 2) = 0;
    goto LABEL_15;
  }
  if (v1 == 1)
  {
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v5 = *((void *)v2 + 3);
    int64_t v4 = v3 + 1;
    if (v3 < v5 >> 1)
    {
LABEL_7:
      *((void *)v2 + 2) = v4;
      int64_t v9 = &v2[8 * v3];
      *((_DWORD *)v9 + 8) = v6;
      BOOL v10 = v9 + 32;
      *((_WORD *)v10 + 2) = WORD2(v6);
LABEL_15:
      uint64_t result = 0;
      v10[6] = v1;
      *(void *)(v0 + 8) = v2;
      return result;
    }
LABEL_19:
    unint64_t v25 = v3;
    int64_t v27 = v4;
    unint64_t v19 = v2;
    unint64_t v20 = v6;
    uint64_t v21 = sub_1B51E85E8((char *)(v5 > 1), v4, 1, v19);
    unint64_t v3 = v25;
    int64_t v4 = v27;
    unint64_t v6 = v20;
    uint64_t v2 = v21;
    goto LABEL_7;
  }
  return 0x6365686365707974;
}

float sub_1B524D5D0(double a1)
{
  uint64_t v2 = *(char **)(v1 + 8);
  if (!*((void *)v2 + 2)) {
    return *(float *)&a1;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    int64_t v5 = *((void *)v2 + 2);
    if (v5) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v2 = sub_1B5293510((uint64_t)v2);
  int64_t v5 = *((void *)v2 + 2);
  if (!v5) {
    goto LABEL_15;
  }
LABEL_4:
  int64_t v6 = v5 - 1;
  unint64_t v7 = &v2[8 * v5 - 8];
  int v8 = v7[38];
  float v9 = *((float *)v7 + 8);
  *((void *)v2 + 2) = v6;
  *(void *)(v1 + 8) = v2;
  if (v8 == 2)
  {
    double v10 = v9;
  }
  else
  {
    if (v8 != 1) {
      return *(float *)&a1;
    }
    double v10 = (double)SLODWORD(v9);
  }
  a1 = sqrt(v10);
  if ((~*(void *)&a1 & 0x7FF0000000000000) != 0)
  {
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v4 = *((void *)v2 + 3);
    int64_t v5 = v3 + 1;
    if (v3 < v4 >> 1)
    {
LABEL_13:
      *(float *)&a1 = a1;
      *((void *)v2 + 2) = v5;
      int v11 = &v2[8 * v3];
      *((_WORD *)v11 + 18) = 0;
      *((_DWORD *)v11 + 8) = LODWORD(a1);
      v11[38] = 2;
      *(void *)(v1 + 8) = v2;
      return *(float *)&a1;
    }
LABEL_16:
    float v12 = v2;
    int64_t v13 = v5;
    double v16 = a1;
    unint64_t v17 = v3;
    float v14 = sub_1B51E85E8((char *)(v4 > 1), v5, 1, v12);
    unint64_t v3 = v17;
    a1 = v16;
    int64_t v5 = v13;
    uint64_t v2 = v14;
    goto LABEL_13;
  }
  return *(float *)&a1;
}

uint64_t sub_1B524D768()
{
  if (*(void *)(*(void *)(v0 + 8) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v2 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v3 = result & 0xFFFFFFFFFFFFFFLL;
  long long v6 = *(_OWORD *)(v0 + 16);
  uint64_t result = sub_1B52AC1E4(result & 0xFFFFFFFFFFFFFFLL);
  unsigned int v4 = result;
  if ((result & 0x100000000) != 0)
  {
    uint64_t v5 = *(void *)(v6 + 16);
    if (v5)
    {
      unsigned int v4 = *(_DWORD *)(v6 + 4 * v5 + 28);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_8:
  sub_1B52AC064(v3, v2 & 0xFFFFFFFFFFFFFFLL, v4);
  return 0;
}

uint64_t sub_1B524D86C()
{
  long long v6 = *(char **)(v0 + 8);
  if (!*((void *)v6 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v7 = *((void *)v6 + 2);
    if (v7) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v6 = sub_1B5293510((uint64_t)v6);
  uint64_t v7 = *((void *)v6 + 2);
  if (!v7) {
    goto LABEL_15;
  }
LABEL_4:
  int v8 = &v6[8 * v7 - 8];
  int v9 = *((_DWORD *)v8 + 8);
  LODWORD(v8) = v8[38];
  *((void *)v6 + 2) = v7 - 1;
  *(void *)(v0 + 8) = v6;
  if (v8 != 1) {
    return 0x6365686365707974;
  }
  uint64_t v27 = sub_1B52414F4(v9);
  unint64_t v28 = v10;
  uint64_t v1 = 0;
  sub_1B523FED0(&v27, 0);
  uint64_t v3 = *(char **)(v0 + 48);
  unint64_t v5 = *((void *)v3 + 2);
  unint64_t v4 = HIDWORD(v5);
  if (HIDWORD(v5)) {
    goto LABEL_16;
  }
  uint64_t v1 = v27;
  unint64_t v2 = v28;
  sub_1B51D4BB8(v27, v28);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_17:
  }
    uint64_t v3 = sub_1B51E849C(0, v5 + 1, 1, v3);
  unint64_t v11 = *((void *)v3 + 2);
  unint64_t v12 = *((void *)v3 + 3);
  unint64_t v13 = v11 + 1;
  if (v11 >= v12 >> 1)
  {
    unint64_t v26 = v11 + 1;
    unint64_t v20 = v3;
    unint64_t v21 = *((void *)v3 + 2);
    unint64_t v22 = sub_1B51E849C((char *)(v12 > 1), v11 + 1, 1, v20);
    unint64_t v11 = v21;
    unint64_t v13 = v26;
    uint64_t v3 = v22;
  }
  *((void *)v3 + 2) = v13;
  float v14 = &v3[16 * v11];
  *((void *)v14 + 4) = v1;
  *((void *)v14 + 5) = v2;
  *(void *)(v0 + 48) = v3;
  unint64_t v15 = *((void *)v6 + 2);
  unint64_t v16 = *((void *)v6 + 3);
  unint64_t v17 = v15 + 1;
  if (v15 >= v16 >> 1)
  {
    unint64_t v23 = v6;
    unint64_t v24 = *((void *)v6 + 2);
    unint64_t v25 = sub_1B51E85E8((char *)(v16 > 1), v15 + 1, 1, v23);
    unint64_t v15 = v24;
    long long v6 = v25;
  }
  *((void *)v6 + 2) = v17;
  uint64_t v18 = &v6[8 * v15];
  *((_DWORD *)v18 + 8) = v5;
  *((_WORD *)v18 + 18) = v4;
  v18[38] = 9;
  sub_1B51D4C64(v1, v2);
  uint64_t result = 0;
  *(void *)(v0 + 8) = v6;
  return result;
}

uint64_t sub_1B524DA74()
{
  unint64_t v2 = *(char **)(v0 + 8);
  if (!*((void *)v2 + 2)) {
    return 0x646E756B63617473;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    unint64_t v6 = *((void *)v2 + 2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v2 = sub_1B5293510((uint64_t)v2);
  unint64_t v6 = *((void *)v2 + 2);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  unint64_t v7 = v6 - 1;
  int v8 = &v2[8 * v6 - 8];
  int v1 = v8[38];
  unint64_t v6 = *((unsigned int *)v8 + 8) | ((unint64_t)*((unsigned __int16 *)v8 + 18) << 32);
  *((void *)v2 + 2) = v7;
  *(void *)(v0 + 8) = v2;
  if (v1 == 2)
  {
    float v12 = truncf(*(float *)&v6);
    unint64_t v13 = *((void *)v2 + 2);
    unint64_t v14 = *((void *)v2 + 3);
    unint64_t v15 = v13 + 1;
    if (v13 >= v14 >> 1)
    {
      unint64_t v26 = v13 + 1;
      unint64_t v20 = v2;
      float v24 = v12;
      unint64_t v21 = *((void *)v2 + 2);
      unint64_t v22 = sub_1B51E85E8((char *)(v14 > 1), v13 + 1, 1, v20);
      unint64_t v13 = v21;
      float v12 = v24;
      unint64_t v15 = v26;
      unint64_t v2 = v22;
    }
    *((void *)v2 + 2) = v15;
    unint64_t v16 = &v2[8 * v13];
    *((float *)v16 + 8) = v12;
    unint64_t v10 = v16 + 32;
    *((_WORD *)v10 + 2) = 0;
    goto LABEL_12;
  }
  if (v1 == 1)
  {
    unint64_t v3 = *((void *)v2 + 2);
    unint64_t v5 = *((void *)v2 + 3);
    int64_t v4 = v3 + 1;
    if (v3 < v5 >> 1)
    {
LABEL_7:
      *((void *)v2 + 2) = v4;
      int v9 = &v2[8 * v3];
      *((_DWORD *)v9 + 8) = v6;
      unint64_t v10 = v9 + 32;
      *((_WORD *)v10 + 2) = WORD2(v6);
LABEL_12:
      uint64_t result = 0;
      v10[6] = v1;
      *(void *)(v0 + 8) = v2;
      return result;
    }
LABEL_16:
    unint64_t v23 = v3;
    int64_t v25 = v4;
    unint64_t v17 = v2;
    unint64_t v18 = v6;
    unint64_t v19 = sub_1B51E85E8((char *)(v5 > 1), v4, 1, v17);
    unint64_t v3 = v23;
    int64_t v4 = v25;
    unint64_t v6 = v18;
    unint64_t v2 = v19;
    goto LABEL_7;
  }
  return 0x6365686365707974;
}

uint64_t sub_1B524DC1C()
{
  uint64_t v1 = v0;
  if (*(void *)(*(void *)(v0 + 8) + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0) {
    goto LABEL_22;
  }
  unint64_t v3 = result;
  uint64_t result = sub_1B5276FD0();
  if ((result & 0xFF000000000000) != 0x8000000000000)
  {
    if ((result & 0xFF000000000000) != 0xFF000000000000) {
      return 0x6365686365707974;
    }
    goto LABEL_23;
  }
  unsigned int v4 = result;
  if (BYTE6(v3) != 9)
  {
    if (BYTE6(v3) == 4) {
      unint64_t v5 = v3;
    }
    else {
      unint64_t v5 = v3;
    }
    if (BYTE6(v3) == 4) {
      LOBYTE(v6) = 3;
    }
    else {
      unint64_t v6 = HIWORD(v3);
    }
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(v0 + 48);
  if ((unint64_t)v3 < *(void *)(v7 + 16))
  {
    uint64_t v8 = v7 + 16 * v3;
    uint64_t v9 = *(void *)(v8 + 32);
    unint64_t v10 = *(void *)(v8 + 40);
    sub_1B51D4BB8(v9, v10);
    unsigned int v11 = sub_1B527751C(v9, v10);
    sub_1B51D4C64(v9, v10);
    unint64_t v5 = v11;
    LOBYTE(v6) = 3;
LABEL_16:
    float v12 = *(void **)(v1 + 40);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B5293538(v12);
      float v12 = (void *)result;
    }
    if ((unint64_t)v4 < v12[2])
    {
      sub_1B5215CB0(v5 & 0xFFFFFFFFFFFFLL | ((unint64_t)v6 << 48));
      uint64_t result = 0;
      *(void *)(v1 + 40) = v12;
      return result;
    }
    __break(1u);
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1B524DDB8()
{
  uint64_t v1 = *(char **)(v0 + 8);
  if (!*((void *)v1 + 2)) {
    return 0x646E756B63617473;
  }
  unint64_t v2 = v0;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v3 = *((void *)v1 + 2);
    if (v3) {
      goto LABEL_4;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t v1 = sub_1B51E85E8(0, *((void *)v1 + 2) + 1, 1, v1);
    goto LABEL_6;
  }
  uint64_t v1 = sub_1B5293510((uint64_t)v1);
  uint64_t v3 = *((void *)v1 + 2);
  if (!v3) {
    goto LABEL_19;
  }
LABEL_4:
  uint64_t v4 = v3 - 1;
  unint64_t v5 = &v1[8 * v4];
  uint64_t v6 = *((unsigned __int16 *)v5 + 18);
  uint64_t v7 = *((unsigned int *)v5 + 8);
  uint64_t v8 = v5[38];
  *((void *)v1 + 2) = v4;
  unint64_t v0 = sub_1B52AC1E4(v7 | (v6 << 32) | (v8 << 48));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((v0 & 0x100000000) != 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v1 = sub_1B51E85E8(0, *((void *)v1 + 2) + 1, 1, v1);
    }
    unint64_t v19 = *((void *)v1 + 2);
    unint64_t v18 = *((void *)v1 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v1 = sub_1B51E85E8((char *)(v18 > 1), v19 + 1, 1, v1);
    }
    *((void *)v1 + 2) = v19 + 1;
    unint64_t v20 = &v1[8 * v19];
    *((_DWORD *)v20 + 8) = 0;
    unint64_t v16 = v20 + 32;
    goto LABEL_17;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_20;
  }
LABEL_6:
  unint64_t v11 = *((void *)v1 + 2);
  unint64_t v10 = *((void *)v1 + 3);
  int64_t v12 = v10 >> 1;
  unint64_t v13 = v11 + 1;
  if (v10 >> 1 <= v11)
  {
    uint64_t v1 = sub_1B51E85E8((char *)(v10 > 1), v11 + 1, 1, v1);
    unint64_t v10 = *((void *)v1 + 3);
    int64_t v12 = v10 >> 1;
  }
  *((void *)v1 + 2) = v13;
  unint64_t v14 = &v1[8 * v11];
  *((_WORD *)v14 + 18) = 0;
  *((_DWORD *)v14 + 8) = v0;
  v14[38] = 8;
  if (v12 < (uint64_t)(v11 + 2)) {
    uint64_t v1 = sub_1B51E85E8((char *)(v10 > 1), v11 + 2, 1, v1);
  }
  *((void *)v1 + 2) = v11 + 2;
  unint64_t v15 = &v1[8 * v13];
  *((_DWORD *)v15 + 8) = 1;
  unint64_t v16 = v15 + 32;
LABEL_17:
  *((_WORD *)v16 + 2) = 0;
  uint64_t result = 0;
  v16[6] = 0;
  *(void *)(v2 + 8) = v1;
  return result;
}

uint64_t sub_1B524E030()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = (char **)(v0 + 8);
  if (*(void *)(v2 + 16) < 2uLL) {
    return 0x646E756B63617473;
  }
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = result;
  uint64_t result = sub_1B5276FD0();
  if ((~result & 0xFF000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = 0x6365686365707974;
  if (BYTE6(v5))
  {
    if (BYTE6(v5) == 1 && BYTE6(v4) == 1)
    {
      uint64_t v6 = *v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1B51E85E8(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v7 = *((void *)v6 + 2);
      unint64_t v8 = *((void *)v6 + 3);
      unint64_t v9 = v7 + 1;
      if (v7 >= v8 >> 1)
      {
        unint64_t v19 = v7 + 1;
        unint64_t v13 = v6;
        unint64_t v14 = *((void *)v6 + 2);
        unint64_t v15 = sub_1B51E85E8((char *)(v8 > 1), v7 + 1, 1, v13);
        unint64_t v7 = v14;
        unint64_t v9 = v19;
        uint64_t v6 = v15;
      }
      int v10 = v5 ^ v4;
LABEL_20:
      *((void *)v6 + 2) = v9;
      int64_t v12 = &v6[8 * v7];
      *((_DWORD *)v12 + 8) = v10;
      v12 += 32;
      *((_WORD *)v12 + 2) = 0;
      uint64_t result = 0;
      v12[6] = BYTE6(v5);
      *uint64_t v1 = v6;
    }
  }
  else if (!BYTE6(v4))
  {
    uint64_t v6 = *v1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1B51E85E8(0, *((void *)v6 + 2) + 1, 1, v6);
    }
    unint64_t v7 = *((void *)v6 + 2);
    unint64_t v11 = *((void *)v6 + 3);
    unint64_t v9 = v7 + 1;
    if (v7 >= v11 >> 1)
    {
      unint64_t v20 = v7 + 1;
      unint64_t v16 = v6;
      unint64_t v17 = *((void *)v6 + 2);
      unint64_t v18 = sub_1B51E85E8((char *)(v11 > 1), v7 + 1, 1, v16);
      unint64_t v7 = v17;
      unint64_t v9 = v20;
      uint64_t v6 = v18;
    }
    int v10 = (v4 ^ v5) & 1;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_1B524E218(int a1, float a2)
{
  if ((~LODWORD(a2) & 0x7F800000) == 0 && (LODWORD(a2) & 0x7FFFFF) != 0) {
    return 2;
  }
  if (a2 >= 2147500000.0) {
    return 0;
  }
  if (a2 <= -2147500000.0) {
    return 2;
  }
  sub_1B524E428((uint64_t)v8, floorf(a2));
  if ((v8[0] & 0x100000000) != 0
    || (float v5 = ceilf(a2), v6 = v8[0], sub_1B524E428((uint64_t)v8, v5), (v8[0] & 0x100000000) != 0))
  {
    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    sub_1B5372F98();
    sub_1B5372868();
    sub_1B5372868();
    sub_1B5372868();
    sub_1B5372868();
    uint64_t result = sub_1B53730C8();
    __break(1u);
  }
  else
  {
    if (v6 > a1) {
      return 0;
    }
    if (SLODWORD(v8[0]) < a1) {
      return 2;
    }
    if (v5 == a2 && LODWORD(v8[0]) == a1) {
      return 1;
    }
    else {
      return 2 * (v6 != a1);
    }
  }
  return result;
}

uint64_t sub_1B524E3C0(float a1, float a2)
{
  BOOL v2 = (LODWORD(a1) & 0x7FFFFF) != 0 && (~LODWORD(a1) & 0x7F800000) == 0;
  if ((~LODWORD(a2) & 0x7F800000) != 0)
  {
    if (v2) {
      return 0;
    }
  }
  else
  {
    int v3 = LODWORD(a2) & 0x7FFFFF;
    if (v2) {
      return v3 != 0;
    }
    if (v3) {
      return 2;
    }
  }
  float v5 = a1 - a2;
  if (v5 == 0.0) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5 >= 0.0) {
    return v6;
  }
  else {
    return 0;
  }
}

BOOL sub_1B524E428(uint64_t a1, float a2)
{
  int v4 = (LODWORD(a2) >> 23);
  unsigned int v5 = LODWORD(a2) & 0x7FFFFF;
  int v6 = v4 | LODWORD(a2) & 0x7FFFFF;
  if (!v6)
  {
    LODWORD(v12) = 0;
    BOOL result = 1;
    goto LABEL_25;
  }
  if (v4 == 255) {
    goto LABEL_28;
  }
  uint64_t v7 = sub_1B5372B48();
  if (v7 > 31) {
    goto LABEL_28;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_1B5372B38();
  BOOL result = v8 >= v9;
  uint64_t v11 = v9 + __clz(__rbit32(v5));
  uint64_t v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
LABEL_27:
    if (a2 < 0.0)
    {
LABEL_36:
      LOBYTE(v6) = 0;
      LODWORD(v12) = 0x80000000;
      goto LABEL_25;
    }
LABEL_28:
    LODWORD(v12) = 0;
    BOOL result = 0;
    LOBYTE(v6) = 1;
    goto LABEL_25;
  }
  if (v11 > 31)
  {
    if (v12 < -32 || v12 > 32) {
      goto LABEL_11;
    }
  }
  else if (v12 < -32 || v12 > 32)
  {
    goto LABEL_11;
  }
  if (v12 < 0) {
    goto LABEL_32;
  }
  if ((unint64_t)v12 < 0x20)
  {
    unsigned int v14 = v5 << v12;
    if (v8 != 31) {
      goto LABEL_17;
    }
LABEL_34:
    if (a2 < 0.0 && !v14) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
LABEL_11:
  if (v8 == 31) {
    goto LABEL_27;
  }
  int v13 = 0;
  unsigned int v14 = 0;
  if (v8 < 0) {
    goto LABEL_20;
  }
LABEL_19:
  int v13 = 1 << v8;
LABEL_20:
  while (1)
  {
    uint64_t v12 = v14 | v13;
    if (a2 >= 0.0) {
      break;
    }
    if ((v12 & 0x80000000) == 0)
    {
      LOBYTE(v6) = 0;
      LODWORD(v12) = -(int)v12;
      goto LABEL_25;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFE0) {
      goto LABEL_11;
    }
    unsigned int v14 = v5 >> -(char)v12;
    if (v8 == 31) {
      goto LABEL_34;
    }
LABEL_17:
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
    int v13 = 0;
  }
  if ((v12 & 0x80000000) != 0) {
    goto LABEL_31;
  }
  LOBYTE(v6) = 0;
LABEL_25:
  *(_DWORD *)a1 = v12;
  *(unsigned char *)(a1 + 4) = v6;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unsigned char *sub_1B524E600@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

unsigned char *sub_1B524E614@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 2;
  return result;
}

uint64_t GlyphRecorder<>.withRenderer(_:)(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

uint64_t GlyphRenderer.asRecorder()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t GlyphRendererAsRecorder.init(renderer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1B524E788(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

uint64_t GlyphRendererAsRecorder.withRenderer(_:)(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

_UNKNOWN **sub_1B524E800()
{
  return &protocol witness table for NoOpRenderer;
}

_UNKNOWN **sub_1B524E80C()
{
  return &protocol witness table for NeverRenderer;
}

uint64_t sub_1B524E818(uint64_t (*a1)(uint64_t))
{
  return GlyphRendererAsRecorder.withRenderer(_:)(a1);
}

ValueMetadata *type metadata accessor for NoOpRenderer()
{
  return &type metadata for NoOpRenderer;
}

ValueMetadata *type metadata accessor for NeverRenderer()
{
  return &type metadata for NeverRenderer;
}

uint64_t sub_1B524E850(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1B524E9AC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B524EBC4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for GlyphRendererAsRecorder()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1B524EC04(double a1, double a2, double a3, double a4, double a5, double a6)
{
  if (*(unsigned char *)(v6 + 32))
  {
    double v7 = a1;
    double v8 = a2;
  }
  else
  {
    double v7 = *(double *)(v6 + 16);
    double v8 = *(double *)(v6 + 24);
    double v10 = *(double *)v6;
    double v9 = *(double *)(v6 + 8);
    if (*(double *)v6 >= a1) {
      double v10 = a1;
    }
    if (v7 < a1) {
      double v7 = a1;
    }
    if (v9 >= a2) {
      double v9 = a2;
    }
    if (v8 < a2) {
      double v8 = a2;
    }
    a1 = v10;
    a2 = v9;
  }
  if (a1 >= a3) {
    a1 = a3;
  }
  if (v7 >= a3) {
    a3 = v7;
  }
  if (a2 >= a4) {
    a2 = a4;
  }
  if (v8 >= a4) {
    a4 = v8;
  }
  if (a1 >= a5) {
    a1 = a5;
  }
  if (a3 < a5) {
    a3 = a5;
  }
  if (a2 >= a6) {
    a2 = a6;
  }
  *(double *)uint64_t v6 = a1;
  *(double *)(v6 + 8) = a2;
  if (a4 < a6) {
    double v11 = a6;
  }
  else {
    double v11 = a4;
  }
  *(double *)(v6 + 16) = a3;
  *(double *)(v6 + 24) = v11;
  *(unsigned char *)(v6 + 32) = 0;
}

uint64_t sub_1B524ECAC(uint64_t (*a1)(uint64_t))
{
  return sub_1B524E788(a1);
}

uint64_t sub_1B524ECC8(int a1, uint64_t a2, unint64_t a3, int a4)
{
  sub_1B51D4BB8(a2, a3);
  sub_1B51D4C10();
  uint64_t result = sub_1B53724D8();
  uint64_t v9 = v8;
  if (a4)
  {
    uint64_t v10 = result;
    uint64_t v11 = v7;
    while (!__OFSUB__(v11, v10))
    {
      if (v11 - v10 <= 3)
      {
        swift_bridgeObjectRetain_n();
        sub_1B5372F98();
LABEL_24:
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
      if (v10 > 0x7FFFFFFFFFFFFFFBLL || v11 < v10 + 4) {
        goto LABEL_29;
      }
      if (v10 < 0) {
        goto LABEL_30;
      }
      unint64_t v12 = *(void *)(v9 + 16);
      if (v12 < v10) {
        goto LABEL_31;
      }
      unint64_t v13 = v10 + 4;
      if (v12 < v10 + 4) {
        goto LABEL_31;
      }
      unsigned int v14 = *(_DWORD *)(v9 + v10 + 32);
      BOOL v15 = __OFSUB__(v11, v13);
      uint64_t result = swift_bridgeObjectRetain();
      if (v15) {
        goto LABEL_32;
      }
      if ((uint64_t)(v11 - v13) <= 3)
      {
        sub_1B5372F98();
        goto LABEL_24;
      }
      uint64_t v16 = v10 + 8;
      if (v10 + 8 <= v10 + 4 || v11 < v16) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v9 + 16);
      if (v17 < v13 || (uint64_t)v17 < v16) {
        goto LABEL_34;
      }
      unsigned int v18 = *(_DWORD *)(v9 + v10 + 36);
      uint64_t result = swift_bridgeObjectRelease();
      if (bswap32(v14) == a1)
      {
        swift_bridgeObjectRelease();
        unsigned __int8 v20 = 0;
        uint64_t v19 = bswap32(v18);
        return v19 | ((unint64_t)v20 << 32);
      }
      uint64_t v10 = v13 + 4;
      if (!--a4) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v19 = 0;
    unsigned __int8 v20 = 1;
    return v19 | ((unint64_t)v20 << 32);
  }
  return result;
}

uint64_t sub_1B524EEB8(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t result = sub_1B524ECC8(1936486004, a1, a2, a3);
  if ((result & 0x100000000) != 0) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_1B524EEEC(uint64_t a1)
{
  if (!*(void *)(a1 + 16) || (uint64_t v2 = sub_1B5230664(1717859171), (v3 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v2);
  uint64_t v6 = *v4;
  unint64_t v5 = v4[1];
  sub_1B51D4BB8(*v4, v5);
  swift_bridgeObjectRelease();
  sub_1B51D4BB8(v6, v5);
  sub_1B51D4C10();
  *(void *)&long long v34 = sub_1B53724D8();
  *((void *)&v34 + 1) = v7;
  uint64_t v35 = v8;
  *(void *)&long long v32 = v34;
  *((void *)&v32 + 1) = v7;
  uint64_t v33 = v8;
  swift_bridgeObjectRetain_n();
  sub_1B51F3E3C((uint64_t *)&v32, v9, 1);
  swift_bridgeObjectRelease();
  long long v34 = v32;
  uint64_t v35 = v33;
  unsigned int v13 = sub_1B51F3DDC((uint64_t *)&v34, v10, 1);
  swift_bridgeObjectRelease();
  long long v14 = v34;
  switch(v5 >> 62)
  {
    case 1uLL:
      swift_bridgeObjectRelease();
      uint64_t v15 = *((void *)&v14 + 1) - v14;
      if (__OFSUB__(*((void *)&v14 + 1), (void)v14)) {
        goto LABEL_41;
      }
      LODWORD(v17) = HIDWORD(v6) - v6;
      if (__OFSUB__(HIDWORD(v6), v6)) {
        goto LABEL_42;
      }
      uint64_t v16 = (int)v6;
      uint64_t v17 = (int)v17;
      goto LABEL_19;
    case 2uLL:
      uint64_t v16 = *(void *)(v6 + 16);
      swift_bridgeObjectRelease();
      uint64_t v15 = *((void *)&v14 + 1) - v14;
      if (__OFSUB__(*((void *)&v14 + 1), (void)v14)) {
        goto LABEL_43;
      }
      uint64_t v19 = *(void *)(v6 + 16);
      uint64_t v18 = *(void *)(v6 + 24);
      BOOL v20 = __OFSUB__(v18, v19);
      uint64_t v17 = v18 - v19;
      if (!v20) {
        goto LABEL_19;
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRelease();
      uint64_t v15 = *((void *)&v14 + 1) - v14;
      if (__OFSUB__(*((void *)&v14 + 1), (void)v14)) {
        goto LABEL_44;
      }
      uint64_t v17 = 0;
      uint64_t v16 = 0;
LABEL_19:
      BOOL v20 = __OFSUB__(v15, v17);
      uint64_t v21 = v15 - v17;
      if (v20)
      {
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v22 = v16 + v21;
      if (__OFADD__(v16, v21))
      {
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        JUMPOUT(0x1B524F23CLL);
      }
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      switch(v5 >> 62)
      {
        case 1uLL:
          uint64_t v24 = (int)v6;
          uint64_t v23 = v6 >> 32;
          break;
        case 2uLL:
          uint64_t v24 = *(void *)(v6 + 16);
          uint64_t v23 = *(void *)(v6 + 24);
          break;
        case 3uLL:
          break;
        default:
          uint64_t v24 = 0;
          uint64_t v23 = BYTE6(v5);
          break;
      }
      if (v23 < v22 || v23 < v24) {
        goto LABEL_39;
      }
      unint64_t v25 = sub_1B5372398();
      uint64_t v11 = v25;
      unint64_t v27 = v26;
      switch(v26 >> 62)
      {
        case 1uLL:
          unint64_t v29 = HIDWORD(v25);
          sub_1B51D4C64(v6, v5);
          LODWORD(v28) = v29 - v11;
          if (__OFSUB__(v29, v11)) {
            goto LABEL_45;
          }
          uint64_t v28 = (int)v28;
          break;
        case 2uLL:
          uint64_t v31 = *(void *)(v25 + 16);
          uint64_t v30 = *(void *)(v25 + 24);
          sub_1B51D4C64(v6, v5);
          uint64_t v28 = v30 - v31;
          if (!__OFSUB__(v30, v31)) {
            break;
          }
          __break(1u);
LABEL_34:
          sub_1B51D4C64(v6, v5);
          uint64_t v28 = 0;
          break;
        case 3uLL:
          goto LABEL_34;
        default:
          sub_1B51D4C64(v6, v5);
          uint64_t v28 = BYTE6(v27);
          break;
      }
      if (v13 > v28 / 8)
      {
        sub_1B51D4C64(v11, v27);
        return 0;
      }
      return v11;
    case 3uLL:
      goto LABEL_17;
    default:
      swift_bridgeObjectRelease();
      uint64_t v15 = *((void *)&v14 + 1) - v14;
      if (__OFSUB__(*((void *)&v14 + 1), (void)v14)) {
        goto LABEL_40;
      }
      uint64_t v16 = 0;
      uint64_t v17 = BYTE6(v5);
      goto LABEL_19;
  }
}

uint64_t sub_1B524F26C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(v3 + 16)
    && (uint64_t v5 = sub_1B5230664(1819239265), (v6 & 1) != 0)
    && *(void *)(v3 + 16)
    && (uint64_t v7 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v5),
        uint64_t v8 = *v7,
        unint64_t v9 = v7[1],
        uint64_t v10 = sub_1B5230664(1735162214),
        (v11 & 1) != 0))
  {
    unint64_t v12 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v10);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    LOWORD(v12) = *((_WORD *)v2 + 208);
    *(void *)&v17[0] = v8;
    *((void *)&v17[0] + 1) = v9;
    *(void *)&v17[1] = v13;
    *((void *)&v17[1] + 1) = v14;
    memset(&v17[2], 0, 72);
    WORD4(v17[6]) = (_WORD)v12;
    *(void *)&v17[7] = 0;
    *((void *)&v17[7] + 1) = MEMORY[0x1E4FBC860];
    v17[8] = 0uLL;
    LOBYTE(v17[9]) = 1;
    *((void *)&v17[9] + 1) = 0;
    *(void *)&v17[10] = 0;
    BYTE8(v17[10]) = 1;
    v17[11] = xmmword_1B538DC00;
    v17[12] = 0u;
    v17[13] = xmmword_1B538DC10;
    memset(&v17[14], 0, 32);
    unsigned char v17[16] = xmmword_1B538DC00;
    memcpy(__dst, v17, sizeof(__dst));
    sub_1B51D4BB8(v8, v9);
    sub_1B51D4BB8(v13, v14);
    sub_1B51D4BB8(v8, v9);
    sub_1B51D4BB8(v13, v14);
    uint64_t v3 = sub_1B5255048(a1);
    sub_1B5256D68((uint64_t *)v17);
    sub_1B51D4C64(v13, v14);
    sub_1B51D4C64(v8, v9);
  }
  else
  {
    sub_1B51DD5FC();
    swift_allocError();
    *uint64_t v15 = 2;
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1B524F424(uint64_t a1, uint64_t (**a2)(uint64_t, double))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_7;
  }
  uint64_t v7 = sub_1B5230664(1819239265);
  if ((v8 & 1) == 0) {
    goto LABEL_7;
  }
  if (!*(void *)(v4 + 16)) {
    goto LABEL_7;
  }
  unint64_t v9 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v7);
  uint64_t v11 = *v9;
  unint64_t v10 = v9[1];
  uint64_t v12 = sub_1B5230664(1735162214);
  if ((v13 & 1) == 0) {
    goto LABEL_7;
  }
  unint64_t v14 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v12);
  uint64_t v16 = *v14;
  unint64_t v15 = v14[1];
  __int16 v31 = 257;
  char v32 = 1;
  char v33 = 1;
  int v34 = 1594834165;
  uint64_t v35 = sub_1B51D2364;
  uint64_t v36 = 0;
  char v38 = 1;
  v37[0] = 0x101010101010101;
  *(_DWORD *)((char *)v37 + 7) = 16843009;
  int v39 = sub_1B528724C;
  uint64_t v40 = 0;
  char v41 = 1;
  uint64_t v42 = sub_1B528725C;
  uint64_t v43 = 0;
  uint64_t v44 = sub_1B51E7B2C;
  uint64_t v45 = 0;
  sub_1B51D4BB8(v11, v10);
  sub_1B51D4BB8(v16, v15);
  sub_1B51E06BC(1751474532, (uint64_t)__src);
  if (BYTE10(__src[3]))
  {
    sub_1B51D4C64(v16, v15);
    sub_1B51D4C64(v11, v10);
LABEL_7:
    sub_1B51DD5FC();
    swift_allocError();
    *uint64_t v17 = 2;
    return swift_willThrow();
  }
  long long v19 = 0uLL;
  if ((__src[1] & 0x20) != 0)
  {
    sub_1B52AC768(0, (uint64_t)v29);
    long long v19 = 0uLL;
    long long v21 = v29[0];
    long long v22 = v29[1];
    long long v23 = v29[2];
    long long v24 = v29[3];
    uint64_t v20 = v30;
  }
  else
  {
    uint64_t v20 = 0;
    long long v21 = 0uLL;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
  }
  __int16 v25 = *((_WORD *)v3 + 208);
  char v28 = 1;
  char v46 = 1;
  *(void *)&__src[0] = v11;
  *((void *)&__src[0] + 1) = v10;
  *(void *)&__src[1] = v16;
  *((void *)&__src[1] + 1) = v15;
  __src[2] = v21;
  __src[3] = v22;
  __src[4] = v23;
  __src[5] = v24;
  *(void *)&__src[6] = v20;
  WORD4(__src[6]) = v25;
  *(void *)&__src[7] = 0;
  *((void *)&__src[7] + 1) = MEMORY[0x1E4FBC860];
  __src[8] = 0uLL;
  LOBYTE(__src[9]) = 1;
  *((void *)&__src[9] + 1) = 0;
  *(void *)&__src[10] = 0;
  BYTE8(__src[10]) = 1;
  __src[11] = xmmword_1B538DC00;
  __src[12] = v19;
  __src[13] = xmmword_1B538DC10;
  __src[14] = v19;
  __src[15] = v19;
  __src[16] = xmmword_1B538DC00;
  sub_1B51D4BB8(v11, v10);
  sub_1B51D4BB8(v16, v15);
  sub_1B524FEB0(a2, a1);
  memcpy(v26, __src, sizeof(v26));
  sub_1B5256D68(v26);
  sub_1B51D4C64(v11, v10);
  return sub_1B51D4C64(v16, v15);
}

uint64_t sub_1B524F6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_7;
  }
  uint64_t v7 = sub_1B5230664(1819239265);
  if ((v8 & 1) == 0) {
    goto LABEL_7;
  }
  if (!*(void *)(v4 + 16)) {
    goto LABEL_7;
  }
  unint64_t v9 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v7);
  uint64_t v11 = *v9;
  unint64_t v10 = v9[1];
  uint64_t v12 = sub_1B5230664(1735162214);
  if ((v13 & 1) == 0) {
    goto LABEL_7;
  }
  unint64_t v14 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v12);
  uint64_t v16 = *v14;
  unint64_t v15 = v14[1];
  __int16 v31 = 257;
  char v32 = 1;
  char v33 = 1;
  int v34 = 1594834165;
  uint64_t v35 = sub_1B51D2364;
  uint64_t v36 = 0;
  char v38 = 1;
  v37[0] = 0x101010101010101;
  *(_DWORD *)((char *)v37 + 7) = 16843009;
  int v39 = sub_1B528724C;
  uint64_t v40 = 0;
  char v41 = 1;
  uint64_t v42 = sub_1B528725C;
  uint64_t v43 = 0;
  uint64_t v44 = sub_1B51E7B2C;
  uint64_t v45 = 0;
  sub_1B51D4BB8(v11, v10);
  sub_1B51D4BB8(v16, v15);
  sub_1B51E06BC(1751474532, (uint64_t)__src);
  if (BYTE10(__src[3]))
  {
    sub_1B51D4C64(v16, v15);
    sub_1B51D4C64(v11, v10);
LABEL_7:
    sub_1B51DD5FC();
    swift_allocError();
    *uint64_t v17 = 2;
    return swift_willThrow();
  }
  long long v19 = 0uLL;
  if ((__src[1] & 0x20) != 0)
  {
    sub_1B52AC768(0, (uint64_t)v29);
    long long v19 = 0uLL;
    long long v21 = v29[0];
    long long v22 = v29[1];
    long long v23 = v29[2];
    long long v24 = v29[3];
    uint64_t v20 = v30;
  }
  else
  {
    uint64_t v20 = 0;
    long long v21 = 0uLL;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
  }
  __int16 v25 = *((_WORD *)v3 + 208);
  char v28 = 1;
  char v46 = 1;
  *(void *)&__src[0] = v11;
  *((void *)&__src[0] + 1) = v10;
  *(void *)&__src[1] = v16;
  *((void *)&__src[1] + 1) = v15;
  __src[2] = v21;
  __src[3] = v22;
  __src[4] = v23;
  __src[5] = v24;
  *(void *)&__src[6] = v20;
  WORD4(__src[6]) = v25;
  *(void *)&__src[7] = 0;
  *((void *)&__src[7] + 1) = MEMORY[0x1E4FBC860];
  __src[8] = 0uLL;
  LOBYTE(__src[9]) = 1;
  *((void *)&__src[9] + 1) = 0;
  *(void *)&__src[10] = 0;
  BYTE8(__src[10]) = 1;
  __src[11] = xmmword_1B538DC00;
  __src[12] = v19;
  __src[13] = xmmword_1B538DC10;
  __src[14] = v19;
  __src[15] = v19;
  __src[16] = xmmword_1B538DC00;
  sub_1B51D4BB8(v11, v10);
  sub_1B51D4BB8(v16, v15);
  sub_1B5250254(a2, a1);
  memcpy(v26, __src, sizeof(v26));
  sub_1B5256D68(v26);
  sub_1B51D4C64(v11, v10);
  return sub_1B51D4C64(v16, v15);
}

uint64_t sub_1B524F98C(void *a1, id *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_7;
  }
  uint64_t v7 = sub_1B5230664(1819239265);
  if ((v8 & 1) == 0) {
    goto LABEL_7;
  }
  if (!*(void *)(v4 + 16)) {
    goto LABEL_7;
  }
  unint64_t v9 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v7);
  uint64_t v11 = *v9;
  unint64_t v10 = v9[1];
  uint64_t v12 = sub_1B5230664(1735162214);
  if ((v13 & 1) == 0) {
    goto LABEL_7;
  }
  unint64_t v14 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v12);
  uint64_t v16 = *v14;
  unint64_t v15 = v14[1];
  __int16 v31 = 257;
  char v32 = 1;
  char v33 = 1;
  int v34 = 1594834165;
  uint64_t v35 = sub_1B51D2364;
  uint64_t v36 = 0;
  char v38 = 1;
  v37[0] = 0x101010101010101;
  *(_DWORD *)((char *)v37 + 7) = 16843009;
  int v39 = sub_1B528724C;
  uint64_t v40 = 0;
  char v41 = 1;
  uint64_t v42 = sub_1B528725C;
  uint64_t v43 = 0;
  uint64_t v44 = sub_1B51E7B2C;
  uint64_t v45 = 0;
  sub_1B51D4BB8(v11, v10);
  sub_1B51D4BB8(v16, v15);
  sub_1B51E06BC(1751474532, (uint64_t)__src);
  if (BYTE10(__src[3]))
  {
    sub_1B51D4C64(v16, v15);
    sub_1B51D4C64(v11, v10);
LABEL_7:
    sub_1B51DD5FC();
    swift_allocError();
    *uint64_t v17 = 2;
    return swift_willThrow();
  }
  long long v19 = 0uLL;
  if ((__src[1] & 0x20) != 0)
  {
    sub_1B52AC768(0, (uint64_t)v29);
    long long v19 = 0uLL;
    long long v21 = v29[0];
    long long v22 = v29[1];
    long long v23 = v29[2];
    long long v24 = v29[3];
    uint64_t v20 = v30;
  }
  else
  {
    uint64_t v20 = 0;
    long long v21 = 0uLL;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
  }
  __int16 v25 = *((_WORD *)v3 + 208);
  char v28 = 1;
  char v46 = 1;
  *(void *)&__src[0] = v11;
  *((void *)&__src[0] + 1) = v10;
  *(void *)&__src[1] = v16;
  *((void *)&__src[1] + 1) = v15;
  __src[2] = v21;
  __src[3] = v22;
  __src[4] = v23;
  __src[5] = v24;
  *(void *)&__src[6] = v20;
  WORD4(__src[6]) = v25;
  *(void *)&__src[7] = 0;
  *((void *)&__src[7] + 1) = MEMORY[0x1E4FBC860];
  __src[8] = 0uLL;
  LOBYTE(__src[9]) = 1;
  *((void *)&__src[9] + 1) = 0;
  *(void *)&__src[10] = 0;
  BYTE8(__src[10]) = 1;
  __src[11] = xmmword_1B538DC00;
  __src[12] = v19;
  __src[13] = xmmword_1B538DC10;
  __src[14] = v19;
  __src[15] = v19;
  __src[16] = xmmword_1B538DC00;
  sub_1B51D4BB8(v11, v10);
  sub_1B51D4BB8(v16, v15);
  sub_1B525062C(a2, a1);
  memcpy(v26, __src, sizeof(v26));
  sub_1B5256D68(v26);
  sub_1B51D4C64(v11, v10);
  return sub_1B51D4C64(v16, v15);
}

void __swiftcall SfntTrueTypeFont.getBoundingBox(glyphID:)(__C::CGRect_optional *__return_ptr retstr, Swift::Int glyphID)
{
  sub_1B524F26C(glyphID);
  sub_1B51D4C10();
  *(void *)&v23.f64[0] = sub_1B53724D8();
  v23.f64[1] = v4;
  v24.f64[0] = v5;
  swift_bridgeObjectRetain_n();
  sub_1B51F6BC8((unsigned __int16 *)&v22, &v23, v6, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
  unint64_t v8 = v7;
  int v9 = v22;
  signed __int16 v14 = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v23, v7, 1);
  swift_bridgeObjectRelease();
  if (v9 < (int)v8 >> 16 || v14 < (int)(v8 >> 16) >> 16)
  {
    sub_1B51DD5FC();
    long long v19 = (void *)swift_allocError();
    *uint64_t v20 = 6;
    swift_willThrow();
    id v21 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B5200310(v19);
    swift_bridgeObjectRelease();

    float64x2_t v23 = 0u;
    float64x2_t v24 = 0u;
    char v25 = 1;
    sub_1B524F6D8(glyphID, (uint64_t)&v23);
    if (v25)
    {
      Swift::Bool v10 = 1;
      double v11 = 0.0;
      double v12 = 0.0;
      __C::CGSize v13 = (__C::CGSize)0;
    }
    else
    {
      Swift::Bool v10 = 0;
      double v11 = v23.f64[0];
      __C::CGSize v13 = (__C::CGSize)vsubq_f64(v24, v23);
      double v12 = v23.f64[1];
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v15 = v9 - SWORD1(v8);
  if ((__int16)(v9 - WORD1(v8)) == v15)
  {
    int v16 = v14 - SWORD2(v8);
    if ((__int16)(v14 - WORD2(v8)) == v16)
    {
      Swift::Bool v10 = 0;
      double v11 = (double)SWORD1(v8);
      double v12 = (double)SWORD2(v8);
      int32x2_t v17 = vshr_n_s32(vshl_n_s32((int32x2_t)__PAIR64__(v16, v15), 0x10uLL), 0x10uLL);
      v18.i64[0] = v17.i32[0];
      v18.i64[1] = v17.i32[1];
      __C::CGSize v13 = (__C::CGSize)vcvtq_f64_s64(v18);
LABEL_4:
      retstr->value.origin.x = v11;
      retstr->value.origin.y = v12;
      retstr->value.size = v13;
      retstr->is_nil = v10;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t *sub_1B524FEB0(uint64_t (**a1)(uint64_t, double), uint64_t a2)
{
  float64_t v4 = v2;
  memcpy(__dst, v2, 0x110uLL);
  sub_1B5256DD0(__dst);
  uint64_t v7 = sub_1B5255048(a2);
  if (v3) {
    return sub_1B5256D68(__dst);
  }
  uint64_t v40 = v7;
  uint64_t v41 = v8;
  sub_1B51D4C10();
  uint64_t v10 = sub_1B53724D8();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_1B5256D68(__dst);
  uint64_t v43 = v10;
  uint64_t v44 = v12;
  uint64_t v45 = v14;
  if (v10 == v12) {
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  uint64_t v40 = v10;
  uint64_t v41 = v12;
  uint64_t v42 = v14;
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_1B51F6BC8((unsigned __int16 *)&v47, &v40, v15, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
  unint64_t v18 = v17;
  int v19 = v47;
  signed __int16 v20 = (unsigned __int16)sub_1B51F3F70(&v40, v17, 1);
  swift_bridgeObjectRelease();
  uint64_t v38 = v40;
  uint64_t v39 = v42;
  if (v19 < (int)v18 >> 16 || v20 < (int)(v18 >> 16) >> 16)
  {
    sub_1B51DD5FC();
    unint64_t v29 = (void *)swift_allocError();
    *uint64_t v30 = 6;
    swift_willThrow();
    sub_1B51D4D34();
    swift_allocError();
    *__int16 v31 = v29;
    v31[1] = v38;
    v31[2] = 0x7272652072657355;
    v31[3] = 0xEA0000000000726FLL;
    v31[4] = v29;
    id v32 = v29;
    swift_willThrow();
    swift_bridgeObjectRelease();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  uint64_t v37 = v41;
  uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
  uint64_t v43 = v38;
  uint64_t v44 = v37;
  uint64_t v45 = v39;
  int v21 = (__int16)(v19 - WORD1(v18));
  if (v21 != v19 - SWORD1(v18))
  {
    __break(1u);
    goto LABEL_26;
  }
  int v22 = (__int16)(v20 - WORD2(v18));
  if (v22 != v20 - SWORD2(v18))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  float64_t v23 = sub_1B5250EEC((double)SWORD1(v18), (double)SWORD2(v18), (double)v21, (double)v22);
  uint64_t result = (uint64_t *)(*a1)(a2, v23);
  if ((v18 & 1) == 0 || !v16) {
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  if (v16 != 1)
  {
    sub_1B51DD5FC();
    swift_allocError();
    unsigned char *v33 = 13;
    swift_willThrow();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  uint64_t v24 = __dst[14] + 1;
  if (__OFADD__(__dst[14], 1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v4[14] = v24;
  if (v24 >= 16)
  {
    sub_1B51DD5FC();
    swift_allocError();
    *int v34 = 4;
    uint64_t result = (uint64_t *)swift_willThrow();
    uint64_t v35 = v4[14];
    BOOL v26 = __OFSUB__(v35, 1);
    uint64_t v36 = v35 - 1;
    if (!v26)
    {
      v4[14] = v36;
      return (uint64_t *)swift_bridgeObjectRelease();
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (uint64_t *)sub_1B5251188((uint64_t)a1, &v43);
  uint64_t v25 = v4[14];
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  char v28 = v26;
  if ((v28 & 1) == 0)
  {
    v4[14] = v27;
    return (uint64_t *)swift_bridgeObjectRelease();
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1B5250254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)v2;
  memcpy(__dst, v2, 0x110uLL);
  sub_1B5256DD0(__dst);
  uint64_t v7 = sub_1B5255048(a2);
  if (v3)
  {
    sub_1B5256D68(__dst);
    return;
  }
  uint64_t v39 = v7;
  uint64_t v40 = v8;
  sub_1B51D4C10();
  uint64_t v9 = sub_1B53724D8();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  sub_1B5256D68(__dst);
  uint64_t v42 = v9;
  uint64_t v43 = v11;
  uint64_t v44 = v13;
  if (v9 == v11) {
    goto LABEL_5;
  }
  uint64_t v39 = v9;
  uint64_t v40 = v11;
  uint64_t v41 = v13;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1B51F6BC8((unsigned __int16 *)&v38, &v39, v14, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
  unint64_t v17 = v16;
  int v18 = v38;
  signed __int16 v19 = (unsigned __int16)sub_1B51F3F70(&v39, v16, 1);
  swift_bridgeObjectRelease();
  uint64_t v36 = v39;
  uint64_t v37 = v41;
  if (v18 < (int)v17 >> 16 || v19 < (int)(v17 >> 16) >> 16)
  {
    sub_1B51DD5FC();
    int v22 = (void *)swift_allocError();
    *float64_t v23 = 6;
    swift_willThrow();
    sub_1B51D4D34();
    swift_allocError();
    *uint64_t v24 = v22;
    v24[1] = v36;
    v24[2] = 0x7272652072657355;
    v24[3] = 0xEA0000000000726FLL;
    v24[4] = v22;
    id v25 = v22;
    swift_willThrow();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v35 = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = v36;
  uint64_t v43 = v35;
  uint64_t v44 = v37;
  int v20 = (__int16)(v18 - WORD1(v17));
  if (v20 != v18 - SWORD1(v17))
  {
    __break(1u);
    goto LABEL_27;
  }
  int v21 = (__int16)(v19 - WORD2(v17));
  if (v21 != v19 - SWORD2(v17))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1B5250EEC((double)SWORD1(v17), (double)SWORD2(v17), (double)v20, (double)v21);
  if ((v17 & 1) == 0)
  {
    sub_1B5256DD0(__dst);
    sub_1B5258110(a2, (unint64_t *)&v42, v15, (uint64_t)__dst, a1, v4, (double)SWORD1(v17));
    sub_1B5256D68(__dst);
LABEL_5:
    swift_bridgeObjectRelease();
    return;
  }
  if (!v15) {
    goto LABEL_5;
  }
  if (v15 != 1)
  {
    sub_1B51DD5FC();
    swift_allocError();
    *__int16 v31 = 13;
    swift_willThrow();
    goto LABEL_5;
  }
  uint64_t v26 = __dst[14] + 1;
  if (__OFADD__(__dst[14], 1)) {
    goto LABEL_28;
  }
  *(void *)(v4 + 112) = v26;
  if (v26 >= 16)
  {
    sub_1B51DD5FC();
    swift_allocError();
    unsigned char *v32 = 4;
    swift_willThrow();
    uint64_t v33 = *(void *)(v4 + 112);
    BOOL v28 = __OFSUB__(v33, 1);
    uint64_t v34 = v33 - 1;
    if (!v28)
    {
      *(void *)(v4 + 112) = v34;
      goto LABEL_5;
    }
    goto LABEL_29;
  }
  sub_1B5251C68(a1, &v42);
  uint64_t v27 = *(void *)(v4 + 112);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  char v30 = v28;
  if ((v30 & 1) == 0)
  {
    *(void *)(v4 + 112) = v29;
    goto LABEL_5;
  }
LABEL_30:
  __break(1u);
}

void sub_1B525062C(id *a1, void *a2)
{
  uint64_t v4 = (uint64_t)v2;
  memcpy(__dst, v2, 0x110uLL);
  sub_1B5256DD0(__dst);
  uint64_t v7 = sub_1B5255048((uint64_t)a2);
  if (v3)
  {
    sub_1B5256D68(__dst);
    return;
  }
  uint64_t v39 = v7;
  uint64_t v40 = v8;
  sub_1B51D4C10();
  uint64_t v9 = sub_1B53724D8();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  sub_1B5256D68(__dst);
  uint64_t v42 = v9;
  uint64_t v43 = v11;
  uint64_t v44 = v13;
  if (v9 == v11) {
    goto LABEL_5;
  }
  uint64_t v39 = v9;
  uint64_t v40 = v11;
  uint64_t v41 = v13;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1B51F6BC8((unsigned __int16 *)&v38, &v39, v14, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
  unint64_t v17 = v16;
  int v18 = v38;
  signed __int16 v19 = (unsigned __int16)sub_1B51F3F70(&v39, v16, 1);
  swift_bridgeObjectRelease();
  uint64_t v36 = v39;
  uint64_t v37 = v41;
  if (v18 < (int)v17 >> 16 || v19 < (int)(v17 >> 16) >> 16)
  {
    sub_1B51DD5FC();
    int v22 = (void *)swift_allocError();
    *float64_t v23 = 6;
    swift_willThrow();
    sub_1B51D4D34();
    swift_allocError();
    *uint64_t v24 = v22;
    v24[1] = v36;
    v24[2] = 0x7272652072657355;
    v24[3] = 0xEA0000000000726FLL;
    v24[4] = v22;
    id v25 = v22;
    swift_willThrow();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v35 = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = v36;
  uint64_t v43 = v35;
  uint64_t v44 = v37;
  int v20 = (__int16)(v18 - WORD1(v17));
  if (v20 != v18 - SWORD1(v17))
  {
    __break(1u);
    goto LABEL_27;
  }
  int v21 = (__int16)(v19 - WORD2(v17));
  if (v21 != v19 - SWORD2(v17))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1B5250EEC((double)SWORD1(v17), (double)SWORD2(v17), (double)v20, (double)v21);
  if ((v17 & 1) == 0)
  {
    sub_1B5256DD0(__dst);
    sub_1B5258F1C(a2, (unint64_t *)&v42, v15, (uint64_t)__dst, a1, v4, (double)SWORD1(v17));
    sub_1B5256D68(__dst);
LABEL_5:
    swift_bridgeObjectRelease();
    return;
  }
  if (!v15) {
    goto LABEL_5;
  }
  if (v15 != 1)
  {
    sub_1B51DD5FC();
    swift_allocError();
    *__int16 v31 = 13;
    swift_willThrow();
    goto LABEL_5;
  }
  uint64_t v26 = __dst[14] + 1;
  if (__OFADD__(__dst[14], 1)) {
    goto LABEL_28;
  }
  *(void *)(v4 + 112) = v26;
  if (v26 >= 16)
  {
    sub_1B51DD5FC();
    swift_allocError();
    unsigned char *v32 = 4;
    swift_willThrow();
    uint64_t v33 = *(void *)(v4 + 112);
    BOOL v28 = __OFSUB__(v33, 1);
    uint64_t v34 = v33 - 1;
    if (!v28)
    {
      *(void *)(v4 + 112) = v34;
      goto LABEL_5;
    }
    goto LABEL_29;
  }
  sub_1B5252748((uint64_t)a1, &v42);
  uint64_t v27 = *(void *)(v4 + 112);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  char v30 = v28;
  if ((v30 & 1) == 0)
  {
    *(void *)(v4 + 112) = v29;
    goto LABEL_5;
  }
LABEL_30:
  __break(1u);
}

uint64_t *sub_1B5250A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  memcpy(v53, v4, 0x110uLL);
  sub_1B5256DD0(v53);
  uint64_t v11 = sub_1B5255048(a2);
  if (v5) {
    return sub_1B5256D68(v53);
  }
  uint64_t v46 = a1;
  uint64_t v47 = v11;
  uint64_t v14 = a3;
  uint64_t v48 = v12;
  sub_1B51D4C10();
  uint64_t v15 = sub_1B53724D8();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  sub_1B5256D68(v53);
  uint64_t v50 = v15;
  uint64_t v51 = v17;
  uint64_t v52 = v19;
  if (v15 == v17) {
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  uint64_t v47 = v15;
  uint64_t v48 = v17;
  uint64_t v49 = v19;
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_1B51F6BC8((unsigned __int16 *)&v55, &v47, v20, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
  unint64_t v23 = v22;
  uint64_t v45 = v21;
  int v24 = v55;
  unsigned int v54 = sub_1B51F3F70(&v47, v22, 1);
  swift_bridgeObjectRelease();
  uint64_t v43 = v47;
  uint64_t v44 = v49;
  if (v24 < (int)v23 >> 16 || (unsigned int v54 = (__int16)v54, (__int16)v54 < (int)(v23 >> 16) >> 16))
  {
    sub_1B51DD5FC();
    char v30 = (void *)swift_allocError();
    *__int16 v31 = 6;
    swift_willThrow();
    sub_1B51D4D34();
    swift_allocError();
    void *v32 = v30;
    v32[1] = v43;
    void v32[2] = 0x7272652072657355;
    v32[3] = 0xEA0000000000726FLL;
    v32[4] = v30;
    id v33 = v30;
    swift_willThrow();
    swift_bridgeObjectRelease();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  uint64_t v42 = v48;
  uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
  uint64_t v50 = v43;
  uint64_t v51 = v42;
  uint64_t v52 = v44;
  int v25 = (__int16)(v24 - WORD1(v23));
  if (v25 != v24 - SWORD1(v23))
  {
    __break(1u);
    goto LABEL_26;
  }
  int v26 = (__int16)(v54 - WORD2(v23));
  if (v26 != v54 - SWORD2(v23))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  float64_t v27 = sub_1B5250EEC((double)SWORD1(v23), (double)SWORD2(v23), (double)v25, (double)v26);
  uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float64_t))(a4 + 24))(a2, v14, a4, v27);
  if ((v23 & 1) == 0)
  {
    double v28 = MEMORY[0x1F4188790](result);
    (*(void (**)(uint64_t *(*)(uint64_t *), double))(a4 + 40))(sub_1B5259C24, v28);
    uint64_t v29 = v14;
LABEL_22:
    (*(void (**)(uint64_t, uint64_t))(a4 + 32))(v29, a4);
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  if (!v45)
  {
    uint64_t v29 = v14;
    goto LABEL_22;
  }
  uint64_t v29 = v14;
  if (v45 != 1)
  {
    sub_1B51DD5FC();
    swift_allocError();
    *uint64_t v35 = 13;
    swift_willThrow();
    goto LABEL_22;
  }
  uint64_t v34 = v53[14] + 1;
  if (__OFADD__(v53[14], 1)) {
    goto LABEL_27;
  }
  v6[14] = v34;
  if (v34 > 15)
  {
    sub_1B51DD5FC();
    swift_allocError();
    *uint64_t v36 = 4;
    uint64_t result = (uint64_t *)swift_willThrow();
    uint64_t v37 = v6[14];
    BOOL v38 = __OFSUB__(v37, 1);
    uint64_t v39 = v37 - 1;
    if (!v38)
    {
      v6[14] = v39;
      goto LABEL_22;
    }
    goto LABEL_28;
  }
  uint64_t result = (uint64_t *)sub_1B5253228(v46, &v50, v14, a4);
  uint64_t v40 = v6[14];
  BOOL v38 = __OFSUB__(v40, 1);
  uint64_t v41 = v40 - 1;
  if (!v38)
  {
    v6[14] = v41;
    goto LABEL_22;
  }
LABEL_29:
  __break(1u);
  return result;
}

float64_t sub_1B5250EEC(double a1, double a2, double a3, double a4)
{
  double v5 = a1 + a3;
  float64x2_t v6 = v4[11];
  float64x2_t v7 = v4[13];
  float64x2_t v8 = v4[15];
  float64x2_t v9 = vaddq_f64(v8, vmlaq_n_f64(vmulq_n_f64(v6, a1), v7, a2));
  float64x2_t v10 = vaddq_f64(v8, vmlaq_n_f64(vmulq_n_f64(v6, v5), v7, a2 + a4));
  if (vmovn_s64(vcltzq_s64(vcgtq_f64(v9, v10))).u8[0]) {
    v9.f64[0] = v10.f64[0];
  }
  return v9.f64[0];
}

uint64_t *sub_1B5250F68(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, unint64_t *a7, uint64_t a8)
{
  if ((__int16)(HIWORD(a5) - WORD1(a5)) == (a5 >> 48) - SWORD1(a5))
  {
    if ((__int16)(a6 - WORD2(a5)) == a6 - SWORD2(a5))
    {
      double v8 = (double)SWORD1(a5);
      uint64_t v9 = (uint64_t)result;
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      return sub_1B5251098(v8, v9, a3, a7, a8);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *sub_1B5251098(double a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  memcpy(__dst, v5, sizeof(__dst));
  sub_1B5256DD0(__dst);
  sub_1B5254354(a3, a4, a5, (uint64_t (*)(double, double, void))sub_1B5259BE0, a1);
  return sub_1B5256D68(__dst);
}

uint64_t sub_1B5251188(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  float64x2_t v6 = a2;
  uint64_t v137 = *(void *)(v2 + 120);
  float64x2_t v7 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v2 + 120) = MEMORY[0x1E4FBC860];
  double v8 = v7;
  while (1)
  {
    uint64_t v9 = v6[1];
    uint64_t v10 = v6[2];
    *(void *)&long long v135 = *v6;
    *((void *)&v135 + 1) = v9;
    uint64_t v136 = v10;
    *(void *)&long long v124 = v135;
    *((void *)&v124 + 1) = v9;
    *(void *)&long long v125 = v10;
    swift_bridgeObjectRetain_n();
    unsigned __int16 v12 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v124, v11, 1);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B51D5B00(*(void *)(v5 + 120));
      *(void *)(v5 + 120) = v137;
      return result;
    }
    unsigned __int16 v13 = v12;
    uint64_t v155 = v8;
    swift_bridgeObjectRelease();
    long long v135 = v124;
    uint64_t v136 = v125;
    unsigned __int16 v134 = v13;
    sub_1B5255414(&v134, (uint64_t)&v124);
    v153[6] = v130;
    v153[7] = v131;
    v153[8] = v132;
    v153[2] = v126;
    v153[3] = v127;
    uint64_t v154 = v133;
    v153[4] = v128;
    v153[5] = v129;
    v153[0] = v124;
    v153[1] = v125;
    sub_1B51F6DC4(v123, (uint64_t)&v135, v14, (uint64_t)&v119);
    __int16 v106 = (__int16)v119;
    uint64_t v15 = v120;
    char v108 = v121;
    long long v104 = v122;
    sub_1B5200F78((uint64_t)v153);
    swift_bridgeObjectRelease_n();
    long long v100 = v123[1];
    long long v102 = v123[0];
    uint64_t v16 = v136;
    *(_OWORD *)float64x2_t v6 = v135;
    v6[2] = v16;
    uint64_t v17 = *(void *)(v5 + 96);
    __int16 v18 = *(_WORD *)(v5 + 104);
    uint64_t v19 = *(void *)(v5 + 112);
    char v20 = *(unsigned char *)(v5 + 168);
    float64x2_t v21 = *(float64x2_t *)(v5 + 176);
    float64x2_t v22 = *(float64x2_t *)(v5 + 192);
    float64x2_t v23 = *(float64x2_t *)(v5 + 208);
    float64x2_t v24 = *(float64x2_t *)(v5 + 224);
    float64x2_t v25 = *(float64x2_t *)(v5 + 240);
    float64x2_t v26 = *(float64x2_t *)(v5 + 256);
    char v118 = *(unsigned char *)(v5 + 144);
    char v117 = v20;
    long long v27 = *(_OWORD *)(v5 + 16);
    v138[0] = *(_OWORD *)v5;
    v138[1] = v27;
    long long v28 = *(_OWORD *)(v5 + 48);
    v138[2] = *(_OWORD *)(v5 + 32);
    v138[3] = v28;
    long long v29 = *(_OWORD *)(v5 + 80);
    v138[4] = *(_OWORD *)(v5 + 64);
    v138[5] = v29;
    uint64_t v139 = v17;
    __int16 v140 = v18;
    uint64_t v141 = v19;
    uint64_t v142 = MEMORY[0x1E4FBC860];
    long long v143 = *(_OWORD *)(v5 + 128);
    char v144 = v118;
    long long v145 = *(_OWORD *)(v5 + 152);
    char v146 = v20;
    float64x2_t v96 = v24;
    float64x2_t v97 = v22;
    float64x2_t v147 = v21;
    float64x2_t v148 = v22;
    float64x2_t v110 = v21;
    float64x2_t v149 = v23;
    float64x2_t v150 = v24;
    float64x2_t v98 = v25;
    float64x2_t v99 = v23;
    float64x2_t v95 = v26;
    float64x2_t v151 = v25;
    float64x2_t v152 = v26;
    uint64_t v111 = v15;
    uint64_t v114 = (void *)sub_1B5255048(v15);
    uint64_t v115 = v30;
    sub_1B51D4C10();
    id v119 = (id)sub_1B53724D8();
    uint64_t v120 = v31;
    uint64_t v121 = v32;
    uint64_t v114 = v119;
    uint64_t v115 = v31;
    uint64_t v116 = v32;
    swift_bridgeObjectRetain_n();
    uint64_t v34 = sub_1B51F6BC8((unsigned __int16 *)&v113, &v114, v33, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
    unint64_t v36 = v35;
    uint64_t v37 = v7;
    int v38 = v113;
    uint64_t v4 = 0;
    signed __int16 v39 = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v114, v35, 1);
    swift_bridgeObjectRelease();
    uint64_t v40 = v114;
    uint64_t v41 = v116;
    if (v38 < (int)v36 >> 16 || v39 < (int)(v36 >> 16) >> 16)
    {
      sub_1B51DD5FC();
      uint64_t v56 = (void *)swift_allocError();
      *uint64_t v57 = 6;
      swift_willThrow();
      sub_1B51D4D34();
      swift_allocError();
      *uint64_t v58 = v56;
      v58[1] = v40;
      _OWORD v58[2] = 0x7272652072657355;
      v58[3] = 0xEA0000000000726FLL;
      v58[4] = v56;
      id v59 = v56;
      swift_willThrow();
      swift_bridgeObjectRelease();
      uint64_t v5 = v94;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v42 = v115;
    swift_bridgeObjectRelease();
    id v119 = v40;
    uint64_t v120 = v42;
    uint64_t v121 = v41;
    float64x2_t v7 = v37;
    if (v36)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v94;
      char v45 = v108;
      if ((v108 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1B51DD5FC();
        swift_allocError();
        *uint64_t v84 = 8;
        swift_willThrow();
        goto LABEL_26;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v8 = v155;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        float64x2_t v7 = sub_1B51E90FC(0, v7[2] + 1, 1, v7);
      }
      unint64_t v50 = v7[2];
      unint64_t v49 = v7[3];
      if (v50 >= v49 >> 1) {
        float64x2_t v7 = sub_1B51E90FC((void *)(v49 > 1), v50 + 1, 1, v7);
      }
      v7[2] = v50 + 1;
      v7[v50 + 4] = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v114 = (void *)MEMORY[0x1E4FBC860];
      sub_1B52572C4(v111, (unint64_t *)&v119, v34, (uint64_t)v138, (uint64_t *)&v114, (double)SWORD1(v36));
      uint64_t v5 = v94;
      swift_bridgeObjectRelease();
      uint64_t v43 = (uint64_t)v114;
      swift_bridgeObjectRetain();
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      double v8 = v155;
      if ((v44 & 1) == 0) {
        float64x2_t v7 = sub_1B51E90FC(0, v7[2] + 1, 1, v7);
      }
      char v45 = v108;
      unint64_t v47 = v7[2];
      unint64_t v46 = v7[3];
      if (v47 >= v46 >> 1) {
        float64x2_t v7 = sub_1B51E90FC((void *)(v46 > 1), v47 + 1, 1, v7);
      }
      v7[2] = v47 + 1;
      v7[v47 + 4] = v43;
      swift_bridgeObjectRelease();
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B51E8FE8(0, v8[2] + 1, 1, (char *)v8);
      double v8 = (void *)result;
    }
    unint64_t v53 = v8[2];
    unint64_t v52 = v8[3];
    float64x2_t v54 = v110;
    if (v53 >= v52 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B51E8FE8((char *)(v52 > 1), v53 + 1, 1, (char *)v8);
      float64x2_t v54 = v110;
      double v8 = (void *)result;
    }
    void v8[2] = v53 + 1;
    __int16 v55 = &v8[10 * v53];
    *((_WORD *)v55 + 16) = v106;
    v55[5] = v111;
    *((unsigned char *)v55 + 48) = v45;
    *(_OWORD *)(v55 + 7) = v104;
    *((_OWORD *)v55 + 5) = v102;
    *((_OWORD *)v55 + 6) = v100;
    if ((v106 & 0x20) == 0) {
      break;
    }
    float64x2_t v6 = a2;
  }
  size_t v60 = v8;
  uint64_t v61 = v8[2];
  uint64_t v155 = v7;
  if (!v61) {
    goto LABEL_25;
  }
  uint64_t v62 = 0;
  unint64_t v63 = 0;
  int8x16_t v64 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v54.f64[0], 0);
  float64x2_t v109 = (float64x2_t)vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL);
  float64x2_t v72 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v54, 1);
  int8x16_t v65 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v97.f64[0], 0);
  int8x16_t v66 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v99.f64[0], 0);
  float64x2_t v101 = (float64x2_t)vextq_s8((int8x16_t)v99, (int8x16_t)v99, 8uLL);
  int8x16_t v67 = (int8x16_t)vdupq_laneq_s64((int64x2_t)v99, 1);
  int8x16_t v68 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v96.f64[0], 0);
  int8x16_t v69 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v98.f64[0], 0);
  int8x16_t v70 = (int8x16_t)vdupq_laneq_s64((int64x2_t)v98, 1);
  int8x16_t v71 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v95.f64[0], 0);
  v64.i64[1] = vextq_s8(v64, v64, 8uLL).u64[0];
  float64x2_t v112 = (float64x2_t)v64;
  *(void *)&v72.f64[1] = vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL).u64[0];
  v65.i64[1] = vextq_s8(v65, v65, 8uLL).u64[0];
  float64x2_t v105 = (float64x2_t)v65;
  float64x2_t v107 = v72;
  v66.i64[1] = vextq_s8(v66, v66, 8uLL).u64[0];
  float64x2_t v103 = (float64x2_t)v66;
  v67.i64[1] = vextq_s8(v67, v67, 8uLL).u64[0];
  float64x2_t v93 = (float64x2_t)v67;
  v68.i64[1] = vextq_s8(v68, v68, 8uLL).u64[0];
  float64x2_t v90 = (float64x2_t)v68;
  v69.i64[1] = vextq_s8(v69, v69, 8uLL).u64[0];
  float64x2_t v88 = (float64x2_t)vextq_s8((int8x16_t)v98, (int8x16_t)v98, 8uLL);
  float64x2_t v89 = (float64x2_t)v69;
  v70.i64[1] = vextq_s8(v70, v70, 8uLL).u64[0];
  v71.i64[1] = vextq_s8(v71, v71, 8uLL).u64[0];
  float64x2_t v86 = (float64x2_t)v71;
  float64x2_t v87 = (float64x2_t)v70;
  while (v63 < v155[2])
  {
    uint64_t v73 = v60[v62 + 5];
    int64x2_t v74 = *(int64x2_t *)&v60[v62 + 7];
    float64x2_t v76 = *(float64x2_t *)&v60[v62 + 10];
    float64x2_t v75 = *(float64x2_t *)&v60[v62 + 12];
    if (LOBYTE(v60[v62 + 6]))
    {
      float64x2_t v77 = vcvtq_f64_s64(v74);
    }
    else
    {
      if (v74.i64[0] < 0
        || (uint64_t v78 = *(void *)(v5 + 120), v74.i64[0] >= *(void *)(v78 + 16))
        || v74.i64[1] < 0
        || (uint64_t v79 = v7[v63 + 4], v74.i64[1] >= *(void *)(v79 + 16)))
      {
        swift_bridgeObjectRelease();
        sub_1B51DD5FC();
        swift_allocError();
        *BOOL v85 = 9;
        swift_willThrow();
        goto LABEL_26;
      }
      float64x2_t v77 = vsubq_f64(*(float64x2_t *)(v78 + 16 * v74.i64[0] + 32), *(float64x2_t *)(v79 + 16 * v74.i64[1] + 32));
    }
    unint64_t v80 = vextq_s8((int8x16_t)v76, (int8x16_t)v76, 8uLL).u64[0];
    float64x2_t v81 = (float64x2_t)vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL);
    if ((v60[v62 + 4] & 0x1800) == 0x800) {
      char v82 = v60[v62 + 6];
    }
    else {
      char v82 = 0;
    }
    if (v82)
    {
      v83.f64[0] = sqrt(vaddvq_f64(vmulq_f64(v76, v76)));
      v83.f64[1] = fabs(vaddvq_f64(vmulq_f64(v76, v81))) / v83.f64[0];
      float64x2_t v77 = vmulq_f64(v83, v77);
    }
    *(void *)&v76.f64[1] = v80;
    v72.f64[0] = 0.0;
    v75.f64[1] = v81.f64[0];
    *(float64x2_t *)(v5 + 176) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v112), v107, v75), v105, v77);
    *(float64x2_t *)(v5 + 192) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v54), v109, v72), v97, (float64x2_t)xmmword_1B538DC00);
    *(float64x2_t *)(v5 + 208) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v103), v93, v75), v90, v77);
    *(float64x2_t *)(v5 + 224) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v99), v101, v72), v96, (float64x2_t)xmmword_1B538DC00);
    *(float64x2_t *)(v5 + 240) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v89), v87, v75), v86, v77);
    *(float64x2_t *)(v5 + 256) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v98), v88, v72), v95, (float64x2_t)xmmword_1B538DC00);
    uint64_t result = sub_1B524FEB0(a1, v73);
    ++v63;
    float64x2_t v54 = v110;
    *(float64x2_t *)(v5 + 176) = v110;
    *(float64x2_t *)(v5 + 192) = v97;
    *(float64x2_t *)(v5 + 208) = v99;
    *(float64x2_t *)(v5 + 224) = v96;
    v62 += 10;
    *(float64x2_t *)(v5 + 240) = v98;
    *(float64x2_t *)(v5 + 256) = v95;
    if (v61 == v63) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5251C68(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  float64x2_t v6 = a2;
  uint64_t v137 = *(void *)(v2 + 120);
  float64x2_t v7 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v2 + 120) = MEMORY[0x1E4FBC860];
  double v8 = v7;
  while (1)
  {
    uint64_t v9 = v6[1];
    uint64_t v10 = v6[2];
    *(void *)&long long v135 = *v6;
    *((void *)&v135 + 1) = v9;
    uint64_t v136 = v10;
    *(void *)&long long v124 = v135;
    *((void *)&v124 + 1) = v9;
    *(void *)&long long v125 = v10;
    swift_bridgeObjectRetain_n();
    unsigned __int16 v12 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v124, v11, 1);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B51D5B00(*(void *)(v5 + 120));
      *(void *)(v5 + 120) = v137;
      return result;
    }
    unsigned __int16 v13 = v12;
    uint64_t v155 = v8;
    swift_bridgeObjectRelease();
    long long v135 = v124;
    uint64_t v136 = v125;
    unsigned __int16 v134 = v13;
    sub_1B5255414(&v134, (uint64_t)&v124);
    v153[6] = v130;
    v153[7] = v131;
    v153[8] = v132;
    v153[2] = v126;
    v153[3] = v127;
    uint64_t v154 = v133;
    v153[4] = v128;
    v153[5] = v129;
    v153[0] = v124;
    v153[1] = v125;
    sub_1B51F6DC4(v123, (uint64_t)&v135, v14, (uint64_t)&v119);
    __int16 v106 = (__int16)v119;
    uint64_t v15 = v120;
    char v108 = v121;
    long long v104 = v122;
    sub_1B5200F78((uint64_t)v153);
    swift_bridgeObjectRelease_n();
    long long v100 = v123[1];
    long long v102 = v123[0];
    uint64_t v16 = v136;
    *(_OWORD *)float64x2_t v6 = v135;
    v6[2] = v16;
    uint64_t v17 = *(void *)(v5 + 96);
    __int16 v18 = *(_WORD *)(v5 + 104);
    uint64_t v19 = *(void *)(v5 + 112);
    char v20 = *(unsigned char *)(v5 + 168);
    float64x2_t v21 = *(float64x2_t *)(v5 + 176);
    float64x2_t v22 = *(float64x2_t *)(v5 + 192);
    float64x2_t v23 = *(float64x2_t *)(v5 + 208);
    float64x2_t v24 = *(float64x2_t *)(v5 + 224);
    float64x2_t v25 = *(float64x2_t *)(v5 + 240);
    float64x2_t v26 = *(float64x2_t *)(v5 + 256);
    char v118 = *(unsigned char *)(v5 + 144);
    char v117 = v20;
    long long v27 = *(_OWORD *)(v5 + 16);
    v138[0] = *(_OWORD *)v5;
    v138[1] = v27;
    long long v28 = *(_OWORD *)(v5 + 48);
    v138[2] = *(_OWORD *)(v5 + 32);
    v138[3] = v28;
    long long v29 = *(_OWORD *)(v5 + 80);
    v138[4] = *(_OWORD *)(v5 + 64);
    v138[5] = v29;
    uint64_t v139 = v17;
    __int16 v140 = v18;
    uint64_t v141 = v19;
    uint64_t v142 = MEMORY[0x1E4FBC860];
    long long v143 = *(_OWORD *)(v5 + 128);
    char v144 = v118;
    long long v145 = *(_OWORD *)(v5 + 152);
    char v146 = v20;
    float64x2_t v96 = v24;
    float64x2_t v97 = v22;
    float64x2_t v147 = v21;
    float64x2_t v148 = v22;
    float64x2_t v110 = v21;
    float64x2_t v149 = v23;
    float64x2_t v150 = v24;
    float64x2_t v98 = v25;
    float64x2_t v99 = v23;
    float64x2_t v95 = v26;
    float64x2_t v151 = v25;
    float64x2_t v152 = v26;
    uint64_t v111 = v15;
    uint64_t v114 = (void *)sub_1B5255048(v15);
    uint64_t v115 = v30;
    sub_1B51D4C10();
    id v119 = (id)sub_1B53724D8();
    uint64_t v120 = v31;
    uint64_t v121 = v32;
    uint64_t v114 = v119;
    uint64_t v115 = v31;
    uint64_t v116 = v32;
    swift_bridgeObjectRetain_n();
    uint64_t v34 = sub_1B51F6BC8((unsigned __int16 *)&v113, &v114, v33, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
    unint64_t v36 = v35;
    uint64_t v37 = v7;
    int v38 = v113;
    uint64_t v4 = 0;
    signed __int16 v39 = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v114, v35, 1);
    swift_bridgeObjectRelease();
    uint64_t v40 = v114;
    uint64_t v41 = v116;
    if (v38 < (int)v36 >> 16 || v39 < (int)(v36 >> 16) >> 16)
    {
      sub_1B51DD5FC();
      uint64_t v56 = (void *)swift_allocError();
      *uint64_t v57 = 6;
      swift_willThrow();
      sub_1B51D4D34();
      swift_allocError();
      *uint64_t v58 = v56;
      v58[1] = v40;
      _OWORD v58[2] = 0x7272652072657355;
      v58[3] = 0xEA0000000000726FLL;
      v58[4] = v56;
      id v59 = v56;
      swift_willThrow();
      swift_bridgeObjectRelease();
      uint64_t v5 = v94;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v42 = v115;
    swift_bridgeObjectRelease();
    id v119 = v40;
    uint64_t v120 = v42;
    uint64_t v121 = v41;
    float64x2_t v7 = v37;
    if (v36)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v94;
      char v45 = v108;
      if ((v108 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1B51DD5FC();
        swift_allocError();
        *uint64_t v84 = 8;
        swift_willThrow();
        goto LABEL_26;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v8 = v155;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        float64x2_t v7 = sub_1B51E90FC(0, v7[2] + 1, 1, v7);
      }
      unint64_t v50 = v7[2];
      unint64_t v49 = v7[3];
      if (v50 >= v49 >> 1) {
        float64x2_t v7 = sub_1B51E90FC((void *)(v49 > 1), v50 + 1, 1, v7);
      }
      v7[2] = v50 + 1;
      v7[v50 + 4] = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v114 = (void *)MEMORY[0x1E4FBC860];
      sub_1B52572C4(v111, (unint64_t *)&v119, v34, (uint64_t)v138, (uint64_t *)&v114, (double)SWORD1(v36));
      uint64_t v5 = v94;
      swift_bridgeObjectRelease();
      uint64_t v43 = (uint64_t)v114;
      swift_bridgeObjectRetain();
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      double v8 = v155;
      if ((v44 & 1) == 0) {
        float64x2_t v7 = sub_1B51E90FC(0, v7[2] + 1, 1, v7);
      }
      char v45 = v108;
      unint64_t v47 = v7[2];
      unint64_t v46 = v7[3];
      if (v47 >= v46 >> 1) {
        float64x2_t v7 = sub_1B51E90FC((void *)(v46 > 1), v47 + 1, 1, v7);
      }
      v7[2] = v47 + 1;
      v7[v47 + 4] = v43;
      swift_bridgeObjectRelease();
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B51E8FE8(0, v8[2] + 1, 1, (char *)v8);
      double v8 = (void *)result;
    }
    unint64_t v53 = v8[2];
    unint64_t v52 = v8[3];
    float64x2_t v54 = v110;
    if (v53 >= v52 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B51E8FE8((char *)(v52 > 1), v53 + 1, 1, (char *)v8);
      float64x2_t v54 = v110;
      double v8 = (void *)result;
    }
    void v8[2] = v53 + 1;
    __int16 v55 = &v8[10 * v53];
    *((_WORD *)v55 + 16) = v106;
    v55[5] = v111;
    *((unsigned char *)v55 + 48) = v45;
    *(_OWORD *)(v55 + 7) = v104;
    *((_OWORD *)v55 + 5) = v102;
    *((_OWORD *)v55 + 6) = v100;
    if ((v106 & 0x20) == 0) {
      break;
    }
    float64x2_t v6 = a2;
  }
  size_t v60 = v8;
  uint64_t v61 = v8[2];
  uint64_t v155 = v7;
  if (!v61) {
    goto LABEL_25;
  }
  uint64_t v62 = 0;
  unint64_t v63 = 0;
  int8x16_t v64 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v54.f64[0], 0);
  float64x2_t v109 = (float64x2_t)vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL);
  float64x2_t v72 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v54, 1);
  int8x16_t v65 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v97.f64[0], 0);
  int8x16_t v66 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v99.f64[0], 0);
  float64x2_t v101 = (float64x2_t)vextq_s8((int8x16_t)v99, (int8x16_t)v99, 8uLL);
  int8x16_t v67 = (int8x16_t)vdupq_laneq_s64((int64x2_t)v99, 1);
  int8x16_t v68 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v96.f64[0], 0);
  int8x16_t v69 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v98.f64[0], 0);
  int8x16_t v70 = (int8x16_t)vdupq_laneq_s64((int64x2_t)v98, 1);
  int8x16_t v71 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v95.f64[0], 0);
  v64.i64[1] = vextq_s8(v64, v64, 8uLL).u64[0];
  float64x2_t v112 = (float64x2_t)v64;
  *(void *)&v72.f64[1] = vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL).u64[0];
  v65.i64[1] = vextq_s8(v65, v65, 8uLL).u64[0];
  float64x2_t v105 = (float64x2_t)v65;
  float64x2_t v107 = v72;
  v66.i64[1] = vextq_s8(v66, v66, 8uLL).u64[0];
  float64x2_t v103 = (float64x2_t)v66;
  v67.i64[1] = vextq_s8(v67, v67, 8uLL).u64[0];
  float64x2_t v93 = (float64x2_t)v67;
  v68.i64[1] = vextq_s8(v68, v68, 8uLL).u64[0];
  float64x2_t v90 = (float64x2_t)v68;
  v69.i64[1] = vextq_s8(v69, v69, 8uLL).u64[0];
  float64x2_t v88 = (float64x2_t)vextq_s8((int8x16_t)v98, (int8x16_t)v98, 8uLL);
  float64x2_t v89 = (float64x2_t)v69;
  v70.i64[1] = vextq_s8(v70, v70, 8uLL).u64[0];
  v71.i64[1] = vextq_s8(v71, v71, 8uLL).u64[0];
  float64x2_t v86 = (float64x2_t)v71;
  float64x2_t v87 = (float64x2_t)v70;
  while (v63 < v155[2])
  {
    uint64_t v73 = v60[v62 + 5];
    int64x2_t v74 = *(int64x2_t *)&v60[v62 + 7];
    float64x2_t v76 = *(float64x2_t *)&v60[v62 + 10];
    float64x2_t v75 = *(float64x2_t *)&v60[v62 + 12];
    if (LOBYTE(v60[v62 + 6]))
    {
      float64x2_t v77 = vcvtq_f64_s64(v74);
    }
    else
    {
      if (v74.i64[0] < 0
        || (uint64_t v78 = *(void *)(v5 + 120), v74.i64[0] >= *(void *)(v78 + 16))
        || v74.i64[1] < 0
        || (uint64_t v79 = v7[v63 + 4], v74.i64[1] >= *(void *)(v79 + 16)))
      {
        swift_bridgeObjectRelease();
        sub_1B51DD5FC();
        swift_allocError();
        *BOOL v85 = 9;
        swift_willThrow();
        goto LABEL_26;
      }
      float64x2_t v77 = vsubq_f64(*(float64x2_t *)(v78 + 16 * v74.i64[0] + 32), *(float64x2_t *)(v79 + 16 * v74.i64[1] + 32));
    }
    unint64_t v80 = vextq_s8((int8x16_t)v76, (int8x16_t)v76, 8uLL).u64[0];
    float64x2_t v81 = (float64x2_t)vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL);
    if ((v60[v62 + 4] & 0x1800) == 0x800) {
      char v82 = v60[v62 + 6];
    }
    else {
      char v82 = 0;
    }
    if (v82)
    {
      v83.f64[0] = sqrt(vaddvq_f64(vmulq_f64(v76, v76)));
      v83.f64[1] = fabs(vaddvq_f64(vmulq_f64(v76, v81))) / v83.f64[0];
      float64x2_t v77 = vmulq_f64(v83, v77);
    }
    *(void *)&v76.f64[1] = v80;
    v72.f64[0] = 0.0;
    v75.f64[1] = v81.f64[0];
    *(float64x2_t *)(v5 + 176) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v112), v107, v75), v105, v77);
    *(float64x2_t *)(v5 + 192) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v54), v109, v72), v97, (float64x2_t)xmmword_1B538DC00);
    *(float64x2_t *)(v5 + 208) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v103), v93, v75), v90, v77);
    *(float64x2_t *)(v5 + 224) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v99), v101, v72), v96, (float64x2_t)xmmword_1B538DC00);
    *(float64x2_t *)(v5 + 240) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v89), v87, v75), v86, v77);
    *(float64x2_t *)(v5 + 256) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v98), v88, v72), v95, (float64x2_t)xmmword_1B538DC00);
    uint64_t result = sub_1B5250254(a1, v73);
    ++v63;
    float64x2_t v54 = v110;
    *(float64x2_t *)(v5 + 176) = v110;
    *(float64x2_t *)(v5 + 192) = v97;
    *(float64x2_t *)(v5 + 208) = v99;
    *(float64x2_t *)(v5 + 224) = v96;
    v62 += 10;
    *(float64x2_t *)(v5 + 240) = v98;
    *(float64x2_t *)(v5 + 256) = v95;
    if (v61 == v63) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5252748(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  float64x2_t v6 = a2;
  uint64_t v137 = *(void *)(v2 + 120);
  float64x2_t v7 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v2 + 120) = MEMORY[0x1E4FBC860];
  double v8 = v7;
  while (1)
  {
    uint64_t v9 = v6[1];
    uint64_t v10 = v6[2];
    *(void *)&long long v135 = *v6;
    *((void *)&v135 + 1) = v9;
    uint64_t v136 = v10;
    *(void *)&long long v124 = v135;
    *((void *)&v124 + 1) = v9;
    *(void *)&long long v125 = v10;
    swift_bridgeObjectRetain_n();
    unsigned __int16 v12 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v124, v11, 1);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B51D5B00(*(void *)(v5 + 120));
      *(void *)(v5 + 120) = v137;
      return result;
    }
    unsigned __int16 v13 = v12;
    uint64_t v155 = v8;
    swift_bridgeObjectRelease();
    long long v135 = v124;
    uint64_t v136 = v125;
    unsigned __int16 v134 = v13;
    sub_1B5255414(&v134, (uint64_t)&v124);
    v153[6] = v130;
    v153[7] = v131;
    v153[8] = v132;
    v153[2] = v126;
    v153[3] = v127;
    uint64_t v154 = v133;
    v153[4] = v128;
    v153[5] = v129;
    v153[0] = v124;
    v153[1] = v125;
    sub_1B51F6DC4(v123, (uint64_t)&v135, v14, (uint64_t)&v119);
    __int16 v106 = (__int16)v119;
    uint64_t v15 = v120;
    char v108 = v121;
    long long v104 = v122;
    sub_1B5200F78((uint64_t)v153);
    swift_bridgeObjectRelease_n();
    long long v100 = v123[1];
    long long v102 = v123[0];
    uint64_t v16 = v136;
    *(_OWORD *)float64x2_t v6 = v135;
    v6[2] = v16;
    uint64_t v17 = *(void *)(v5 + 96);
    __int16 v18 = *(_WORD *)(v5 + 104);
    uint64_t v19 = *(void *)(v5 + 112);
    char v20 = *(unsigned char *)(v5 + 168);
    float64x2_t v21 = *(float64x2_t *)(v5 + 176);
    float64x2_t v22 = *(float64x2_t *)(v5 + 192);
    float64x2_t v23 = *(float64x2_t *)(v5 + 208);
    float64x2_t v24 = *(float64x2_t *)(v5 + 224);
    float64x2_t v25 = *(float64x2_t *)(v5 + 240);
    float64x2_t v26 = *(float64x2_t *)(v5 + 256);
    char v118 = *(unsigned char *)(v5 + 144);
    char v117 = v20;
    long long v27 = *(_OWORD *)(v5 + 16);
    v138[0] = *(_OWORD *)v5;
    v138[1] = v27;
    long long v28 = *(_OWORD *)(v5 + 48);
    v138[2] = *(_OWORD *)(v5 + 32);
    v138[3] = v28;
    long long v29 = *(_OWORD *)(v5 + 80);
    v138[4] = *(_OWORD *)(v5 + 64);
    v138[5] = v29;
    uint64_t v139 = v17;
    __int16 v140 = v18;
    uint64_t v141 = v19;
    uint64_t v142 = MEMORY[0x1E4FBC860];
    long long v143 = *(_OWORD *)(v5 + 128);
    char v144 = v118;
    long long v145 = *(_OWORD *)(v5 + 152);
    char v146 = v20;
    float64x2_t v96 = v24;
    float64x2_t v97 = v22;
    float64x2_t v147 = v21;
    float64x2_t v148 = v22;
    float64x2_t v110 = v21;
    float64x2_t v149 = v23;
    float64x2_t v150 = v24;
    float64x2_t v98 = v25;
    float64x2_t v99 = v23;
    float64x2_t v95 = v26;
    float64x2_t v151 = v25;
    float64x2_t v152 = v26;
    uint64_t v111 = v15;
    uint64_t v114 = (void *)sub_1B5255048(v15);
    uint64_t v115 = v30;
    sub_1B51D4C10();
    id v119 = (id)sub_1B53724D8();
    uint64_t v120 = v31;
    uint64_t v121 = v32;
    uint64_t v114 = v119;
    uint64_t v115 = v31;
    uint64_t v116 = v32;
    swift_bridgeObjectRetain_n();
    uint64_t v34 = sub_1B51F6BC8((unsigned __int16 *)&v113, &v114, v33, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
    unint64_t v36 = v35;
    uint64_t v37 = v7;
    int v38 = v113;
    uint64_t v4 = 0;
    signed __int16 v39 = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v114, v35, 1);
    swift_bridgeObjectRelease();
    uint64_t v40 = v114;
    uint64_t v41 = v116;
    if (v38 < (int)v36 >> 16 || v39 < (int)(v36 >> 16) >> 16)
    {
      sub_1B51DD5FC();
      uint64_t v56 = (void *)swift_allocError();
      *uint64_t v57 = 6;
      swift_willThrow();
      sub_1B51D4D34();
      swift_allocError();
      *uint64_t v58 = v56;
      v58[1] = v40;
      _OWORD v58[2] = 0x7272652072657355;
      v58[3] = 0xEA0000000000726FLL;
      v58[4] = v56;
      id v59 = v56;
      swift_willThrow();
      swift_bridgeObjectRelease();
      uint64_t v5 = v94;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v42 = v115;
    swift_bridgeObjectRelease();
    id v119 = v40;
    uint64_t v120 = v42;
    uint64_t v121 = v41;
    float64x2_t v7 = v37;
    if (v36)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v94;
      char v45 = v108;
      if ((v108 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1B51DD5FC();
        swift_allocError();
        *uint64_t v84 = 8;
        swift_willThrow();
        goto LABEL_26;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v8 = v155;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        float64x2_t v7 = sub_1B51E90FC(0, v7[2] + 1, 1, v7);
      }
      unint64_t v50 = v7[2];
      unint64_t v49 = v7[3];
      if (v50 >= v49 >> 1) {
        float64x2_t v7 = sub_1B51E90FC((void *)(v49 > 1), v50 + 1, 1, v7);
      }
      v7[2] = v50 + 1;
      v7[v50 + 4] = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v114 = (void *)MEMORY[0x1E4FBC860];
      sub_1B52572C4(v111, (unint64_t *)&v119, v34, (uint64_t)v138, (uint64_t *)&v114, (double)SWORD1(v36));
      uint64_t v5 = v94;
      swift_bridgeObjectRelease();
      uint64_t v43 = (uint64_t)v114;
      swift_bridgeObjectRetain();
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      double v8 = v155;
      if ((v44 & 1) == 0) {
        float64x2_t v7 = sub_1B51E90FC(0, v7[2] + 1, 1, v7);
      }
      char v45 = v108;
      unint64_t v47 = v7[2];
      unint64_t v46 = v7[3];
      if (v47 >= v46 >> 1) {
        float64x2_t v7 = sub_1B51E90FC((void *)(v46 > 1), v47 + 1, 1, v7);
      }
      v7[2] = v47 + 1;
      v7[v47 + 4] = v43;
      swift_bridgeObjectRelease();
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B51E8FE8(0, v8[2] + 1, 1, (char *)v8);
      double v8 = (void *)result;
    }
    unint64_t v53 = v8[2];
    unint64_t v52 = v8[3];
    float64x2_t v54 = v110;
    if (v53 >= v52 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B51E8FE8((char *)(v52 > 1), v53 + 1, 1, (char *)v8);
      float64x2_t v54 = v110;
      double v8 = (void *)result;
    }
    void v8[2] = v53 + 1;
    __int16 v55 = &v8[10 * v53];
    *((_WORD *)v55 + 16) = v106;
    v55[5] = v111;
    *((unsigned char *)v55 + 48) = v45;
    *(_OWORD *)(v55 + 7) = v104;
    *((_OWORD *)v55 + 5) = v102;
    *((_OWORD *)v55 + 6) = v100;
    if ((v106 & 0x20) == 0) {
      break;
    }
    float64x2_t v6 = a2;
  }
  size_t v60 = v8;
  uint64_t v61 = v8[2];
  uint64_t v155 = v7;
  if (!v61) {
    goto LABEL_25;
  }
  uint64_t v62 = 0;
  unint64_t v63 = 0;
  int8x16_t v64 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v54.f64[0], 0);
  float64x2_t v109 = (float64x2_t)vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL);
  float64x2_t v72 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v54, 1);
  int8x16_t v65 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v97.f64[0], 0);
  int8x16_t v66 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v99.f64[0], 0);
  float64x2_t v101 = (float64x2_t)vextq_s8((int8x16_t)v99, (int8x16_t)v99, 8uLL);
  int8x16_t v67 = (int8x16_t)vdupq_laneq_s64((int64x2_t)v99, 1);
  int8x16_t v68 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v96.f64[0], 0);
  int8x16_t v69 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v98.f64[0], 0);
  int8x16_t v70 = (int8x16_t)vdupq_laneq_s64((int64x2_t)v98, 1);
  int8x16_t v71 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v95.f64[0], 0);
  v64.i64[1] = vextq_s8(v64, v64, 8uLL).u64[0];
  float64x2_t v112 = (float64x2_t)v64;
  *(void *)&v72.f64[1] = vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL).u64[0];
  v65.i64[1] = vextq_s8(v65, v65, 8uLL).u64[0];
  float64x2_t v105 = (float64x2_t)v65;
  float64x2_t v107 = v72;
  v66.i64[1] = vextq_s8(v66, v66, 8uLL).u64[0];
  float64x2_t v103 = (float64x2_t)v66;
  v67.i64[1] = vextq_s8(v67, v67, 8uLL).u64[0];
  float64x2_t v93 = (float64x2_t)v67;
  v68.i64[1] = vextq_s8(v68, v68, 8uLL).u64[0];
  float64x2_t v90 = (float64x2_t)v68;
  v69.i64[1] = vextq_s8(v69, v69, 8uLL).u64[0];
  float64x2_t v88 = (float64x2_t)vextq_s8((int8x16_t)v98, (int8x16_t)v98, 8uLL);
  float64x2_t v89 = (float64x2_t)v69;
  v70.i64[1] = vextq_s8(v70, v70, 8uLL).u64[0];
  v71.i64[1] = vextq_s8(v71, v71, 8uLL).u64[0];
  float64x2_t v86 = (float64x2_t)v71;
  float64x2_t v87 = (float64x2_t)v70;
  while (v63 < v155[2])
  {
    uint64_t v73 = v60[v62 + 5];
    int64x2_t v74 = *(int64x2_t *)&v60[v62 + 7];
    float64x2_t v76 = *(float64x2_t *)&v60[v62 + 10];
    float64x2_t v75 = *(float64x2_t *)&v60[v62 + 12];
    if (LOBYTE(v60[v62 + 6]))
    {
      float64x2_t v77 = vcvtq_f64_s64(v74);
    }
    else
    {
      if (v74.i64[0] < 0
        || (uint64_t v78 = *(void *)(v5 + 120), v74.i64[0] >= *(void *)(v78 + 16))
        || v74.i64[1] < 0
        || (uint64_t v79 = v7[v63 + 4], v74.i64[1] >= *(void *)(v79 + 16)))
      {
        swift_bridgeObjectRelease();
        sub_1B51DD5FC();
        swift_allocError();
        *BOOL v85 = 9;
        swift_willThrow();
        goto LABEL_26;
      }
      float64x2_t v77 = vsubq_f64(*(float64x2_t *)(v78 + 16 * v74.i64[0] + 32), *(float64x2_t *)(v79 + 16 * v74.i64[1] + 32));
    }
    unint64_t v80 = vextq_s8((int8x16_t)v76, (int8x16_t)v76, 8uLL).u64[0];
    float64x2_t v81 = (float64x2_t)vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL);
    if ((v60[v62 + 4] & 0x1800) == 0x800) {
      char v82 = v60[v62 + 6];
    }
    else {
      char v82 = 0;
    }
    if (v82)
    {
      v83.f64[0] = sqrt(vaddvq_f64(vmulq_f64(v76, v76)));
      v83.f64[1] = fabs(vaddvq_f64(vmulq_f64(v76, v81))) / v83.f64[0];
      float64x2_t v77 = vmulq_f64(v83, v77);
    }
    *(void *)&v76.f64[1] = v80;
    v72.f64[0] = 0.0;
    v75.f64[1] = v81.f64[0];
    *(float64x2_t *)(v5 + 176) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v112), v107, v75), v105, v77);
    *(float64x2_t *)(v5 + 192) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v54), v109, v72), v97, (float64x2_t)xmmword_1B538DC00);
    *(float64x2_t *)(v5 + 208) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v103), v93, v75), v90, v77);
    *(float64x2_t *)(v5 + 224) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v99), v101, v72), v96, (float64x2_t)xmmword_1B538DC00);
    *(float64x2_t *)(v5 + 240) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v89), v87, v75), v86, v77);
    *(float64x2_t *)(v5 + 256) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v98), v88, v72), v95, (float64x2_t)xmmword_1B538DC00);
    uint64_t result = sub_1B525062C(a1, v73);
    ++v63;
    float64x2_t v54 = v110;
    *(float64x2_t *)(v5 + 176) = v110;
    *(float64x2_t *)(v5 + 192) = v97;
    *(float64x2_t *)(v5 + 208) = v99;
    *(float64x2_t *)(v5 + 224) = v96;
    v62 += 10;
    *(float64x2_t *)(v5 + 240) = v98;
    *(float64x2_t *)(v5 + 256) = v95;
    if (v61 == v63) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5253228(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  double v8 = a2;
  uint64_t v139 = *(void *)(v4 + 120);
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v4 + 120) = MEMORY[0x1E4FBC860];
  uint64_t v111 = v9;
  while (1)
  {
    uint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    *(void *)&long long v137 = *v8;
    *((void *)&v137 + 1) = v10;
    uint64_t v138 = v11;
    *(void *)&long long v126 = v137;
    *((void *)&v126 + 1) = v10;
    *(void *)&long long v127 = v11;
    swift_bridgeObjectRetain_n();
    unsigned __int16 v13 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v126, v12, 1);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B51D5B00(*(void *)(v7 + 120));
      *(void *)(v7 + 120) = v139;
      return result;
    }
    unsigned __int16 v14 = v13;
    swift_bridgeObjectRelease();
    long long v137 = v126;
    uint64_t v138 = v127;
    unsigned __int16 v136 = v14;
    sub_1B5255414(&v136, (uint64_t)&v126);
    v155[6] = v132;
    v155[7] = v133;
    v155[8] = v134;
    v155[2] = v128;
    v155[3] = v129;
    uint64_t v156 = v135;
    v155[4] = v130;
    v155[5] = v131;
    v155[0] = v126;
    v155[1] = v127;
    sub_1B51F6DC4(v125, (uint64_t)&v137, v15, (uint64_t)&v121);
    __int16 v106 = (__int16)v121;
    uint64_t v16 = v122;
    char v108 = v123;
    long long v104 = v124;
    sub_1B5200F78((uint64_t)v155);
    swift_bridgeObjectRelease_n();
    long long v100 = v125[1];
    long long v102 = v125[0];
    uint64_t v17 = v138;
    *(_OWORD *)double v8 = v137;
    void v8[2] = v17;
    uint64_t v18 = *(void *)(v7 + 96);
    __int16 v19 = *(_WORD *)(v7 + 104);
    uint64_t v20 = *(void *)(v7 + 112);
    char v21 = *(unsigned char *)(v7 + 168);
    float64x2_t v22 = *(float64x2_t *)(v7 + 176);
    float64x2_t v23 = *(float64x2_t *)(v7 + 192);
    float64x2_t v24 = *(float64x2_t *)(v7 + 208);
    float64x2_t v25 = *(float64x2_t *)(v7 + 224);
    float64x2_t v26 = *(float64x2_t *)(v7 + 240);
    float64x2_t v27 = *(float64x2_t *)(v7 + 256);
    char v120 = *(unsigned char *)(v7 + 144);
    char v119 = v21;
    long long v28 = *(_OWORD *)(v7 + 16);
    v140[0] = *(_OWORD *)v7;
    v140[1] = v28;
    long long v29 = *(_OWORD *)(v7 + 48);
    v140[2] = *(_OWORD *)(v7 + 32);
    v140[3] = v29;
    long long v30 = *(_OWORD *)(v7 + 80);
    v140[4] = *(_OWORD *)(v7 + 64);
    v140[5] = v30;
    uint64_t v141 = v18;
    __int16 v142 = v19;
    uint64_t v143 = v20;
    uint64_t v144 = MEMORY[0x1E4FBC860];
    long long v145 = *(_OWORD *)(v7 + 128);
    char v146 = v120;
    long long v147 = *(_OWORD *)(v7 + 152);
    char v148 = v21;
    float64x2_t v96 = v25;
    float64x2_t v97 = v23;
    float64x2_t v149 = v22;
    float64x2_t v150 = v23;
    float64x2_t v110 = v22;
    float64x2_t v151 = v24;
    float64x2_t v152 = v25;
    float64x2_t v98 = v26;
    float64x2_t v99 = v24;
    float64x2_t v95 = v27;
    float64x2_t v153 = v26;
    float64x2_t v154 = v27;
    uint64_t v113 = v16;
    uint64_t v116 = (void *)sub_1B5255048(v16);
    uint64_t v117 = v31;
    sub_1B51D4C10();
    id v121 = (id)sub_1B53724D8();
    uint64_t v122 = v32;
    uint64_t v123 = v33;
    uint64_t v116 = v121;
    uint64_t v117 = v32;
    uint64_t v118 = v33;
    swift_bridgeObjectRetain_n();
    uint64_t v35 = sub_1B51F6BC8((unsigned __int16 *)&v115, &v116, v34, 1, (void (*)(uint64_t *__return_ptr, unsigned __int16 *))sub_1B5255530, 0, 65793);
    unint64_t v37 = v36;
    int v38 = v9;
    int v39 = v115;
    uint64_t v6 = 0;
    signed __int16 v40 = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v116, v36, 1);
    swift_bridgeObjectRelease();
    uint64_t v41 = v116;
    uint64_t v42 = v118;
    if (v39 < (int)v37 >> 16 || v40 < (int)(v37 >> 16) >> 16)
    {
      sub_1B51DD5FC();
      uint64_t v56 = (void *)swift_allocError();
      *uint64_t v57 = 6;
      swift_willThrow();
      sub_1B51D4D34();
      swift_allocError();
      *uint64_t v58 = v56;
      v58[1] = v41;
      _OWORD v58[2] = 0x7272652072657355;
      v58[3] = 0xEA0000000000726FLL;
      v58[4] = v56;
      id v59 = v56;
      swift_willThrow();
      swift_bridgeObjectRelease();
      uint64_t v7 = v157;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v43 = v117;
    swift_bridgeObjectRelease();
    id v121 = v41;
    uint64_t v122 = v43;
    uint64_t v123 = v42;
    uint64_t v9 = v38;
    if (v37)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = v157;
      char v46 = v108;
      if ((v108 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1B51DD5FC();
        swift_allocError();
        *uint64_t v84 = 8;
        swift_willThrow();
        goto LABEL_26;
      }
      uint64_t v45 = (uint64_t)v111;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1B51E90FC(0, v9[2] + 1, 1, v9);
      }
      unint64_t v50 = v9[2];
      unint64_t v49 = v9[3];
      if (v50 >= v49 >> 1) {
        uint64_t v9 = sub_1B51E90FC((void *)(v49 > 1), v50 + 1, 1, v9);
      }
      v9[2] = v50 + 1;
      v9[v50 + 4] = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v116 = (void *)MEMORY[0x1E4FBC860];
      sub_1B52572C4(v113, (unint64_t *)&v121, v35, (uint64_t)v140, (uint64_t *)&v116, (double)SWORD1(v37));
      uint64_t v7 = v157;
      swift_bridgeObjectRelease();
      uint64_t v44 = (uint64_t)v116;
      swift_bridgeObjectRetain();
      uint64_t v45 = (uint64_t)v111;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1B51E90FC(0, v9[2] + 1, 1, v9);
      }
      char v46 = v108;
      unint64_t v48 = v9[2];
      unint64_t v47 = v9[3];
      if (v48 >= v47 >> 1) {
        uint64_t v9 = sub_1B51E90FC((void *)(v47 > 1), v48 + 1, 1, v9);
      }
      v9[2] = v48 + 1;
      v9[v48 + 4] = v44;
      swift_bridgeObjectRelease();
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B51E8FE8(0, *(void *)(v45 + 16) + 1, 1, (char *)v45);
      uint64_t v45 = result;
    }
    unint64_t v53 = *(void *)(v45 + 16);
    unint64_t v52 = *(void *)(v45 + 24);
    float64x2_t v54 = v110;
    if (v53 >= v52 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B51E8FE8((char *)(v52 > 1), v53 + 1, 1, (char *)v45);
      float64x2_t v54 = v110;
      uint64_t v45 = result;
    }
    *(void *)(v45 + 16) = v53 + 1;
    unint64_t v55 = v45 + 80 * v53;
    *(_WORD *)(v55 + 32) = v106;
    *(void *)(v55 + 40) = v113;
    *(unsigned char *)(v55 + 48) = v46;
    *(_OWORD *)(v55 + 56) = v104;
    *(_OWORD *)(v55 + 80) = v102;
    *(_OWORD *)(v55 + 96) = v100;
    if ((v106 & 0x20) == 0) {
      break;
    }
    uint64_t v111 = (void *)v45;
    double v8 = a2;
  }
  uint64_t v60 = v45;
  uint64_t v61 = *(void *)(v45 + 16);
  if (!v61) {
    goto LABEL_25;
  }
  uint64_t v62 = 0;
  unint64_t v63 = 0;
  int8x16_t v64 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v54.f64[0], 0);
  float64x2_t v112 = (float64x2_t)vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL);
  float64x2_t v72 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v54, 1);
  int8x16_t v65 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v97.f64[0], 0);
  int8x16_t v66 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v99.f64[0], 0);
  float64x2_t v103 = (float64x2_t)vextq_s8((int8x16_t)v99, (int8x16_t)v99, 8uLL);
  int8x16_t v67 = (int8x16_t)vdupq_laneq_s64((int64x2_t)v99, 1);
  int8x16_t v68 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v96.f64[0], 0);
  int8x16_t v69 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v98.f64[0], 0);
  int8x16_t v70 = (int8x16_t)vdupq_laneq_s64((int64x2_t)v98, 1);
  int8x16_t v71 = (int8x16_t)vdupq_lane_s64(*(uint64_t *)&v95.f64[0], 0);
  v64.i64[1] = vextq_s8(v64, v64, 8uLL).u64[0];
  float64x2_t v114 = (float64x2_t)v64;
  *(void *)&v72.f64[1] = vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL).u64[0];
  v65.i64[1] = vextq_s8(v65, v65, 8uLL).u64[0];
  float64x2_t v107 = (float64x2_t)v65;
  float64x2_t v109 = v72;
  v66.i64[1] = vextq_s8(v66, v66, 8uLL).u64[0];
  float64x2_t v105 = (float64x2_t)v66;
  v67.i64[1] = vextq_s8(v67, v67, 8uLL).u64[0];
  float64x2_t v101 = (float64x2_t)v67;
  v68.i64[1] = vextq_s8(v68, v68, 8uLL).u64[0];
  float64x2_t v94 = (float64x2_t)v68;
  v69.i64[1] = vextq_s8(v69, v69, 8uLL).u64[0];
  float64x2_t v88 = (float64x2_t)vextq_s8((int8x16_t)v98, (int8x16_t)v98, 8uLL);
  float64x2_t v89 = (float64x2_t)v69;
  v70.i64[1] = vextq_s8(v70, v70, 8uLL).u64[0];
  v71.i64[1] = vextq_s8(v71, v71, 8uLL).u64[0];
  float64x2_t v86 = (float64x2_t)v71;
  float64x2_t v87 = (float64x2_t)v70;
  while (v63 < v9[2])
  {
    uint64_t v73 = *(void *)(v60 + v62 + 40);
    int64x2_t v74 = *(int64x2_t *)(v60 + v62 + 56);
    float64x2_t v76 = *(float64x2_t *)(v60 + v62 + 80);
    float64x2_t v75 = *(float64x2_t *)(v60 + v62 + 96);
    if (*(unsigned char *)(v60 + v62 + 48))
    {
      float64x2_t v77 = vcvtq_f64_s64(v74);
    }
    else
    {
      if (v74.i64[0] < 0
        || (uint64_t v78 = *(void *)(v7 + 120), v74.i64[0] >= *(void *)(v78 + 16))
        || v74.i64[1] < 0
        || (uint64_t v79 = v9[v63 + 4], v74.i64[1] >= *(void *)(v79 + 16)))
      {
        swift_bridgeObjectRelease();
        sub_1B51DD5FC();
        swift_allocError();
        *BOOL v85 = 9;
        swift_willThrow();
        goto LABEL_26;
      }
      float64x2_t v77 = vsubq_f64(*(float64x2_t *)(v78 + 16 * v74.i64[0] + 32), *(float64x2_t *)(v79 + 16 * v74.i64[1] + 32));
    }
    unint64_t v80 = vextq_s8((int8x16_t)v76, (int8x16_t)v76, 8uLL).u64[0];
    float64x2_t v81 = (float64x2_t)vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL);
    if ((*(_WORD *)(v60 + v62 + 32) & 0x1800) == 0x800) {
      int v82 = *(unsigned __int8 *)(v60 + v62 + 48);
    }
    else {
      int v82 = 0;
    }
    if (v82 == 1)
    {
      v83.f64[0] = sqrt(vaddvq_f64(vmulq_f64(v76, v76)));
      v83.f64[1] = fabs(vaddvq_f64(vmulq_f64(v76, v81))) / v83.f64[0];
      float64x2_t v77 = vmulq_f64(v83, v77);
    }
    *(void *)&v76.f64[1] = v80;
    v72.f64[0] = 0.0;
    v75.f64[1] = v81.f64[0];
    *(float64x2_t *)(v7 + 176) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v114), v109, v75), v107, v77);
    *(float64x2_t *)(v7 + 192) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v54), v112, v72), v97, (float64x2_t)xmmword_1B538DC00);
    *(float64x2_t *)(v7 + 208) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v105), v101, v75), v94, v77);
    *(float64x2_t *)(v7 + 224) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v99), v103, v72), v96, (float64x2_t)xmmword_1B538DC00);
    *(float64x2_t *)(v7 + 240) = vmlaq_f64(vmlaq_f64(vmulq_f64(v76, v89), v87, v75), v86, v77);
    *(float64x2_t *)(v7 + 256) = vmlaq_f64(vmlaq_f64(vmulq_f64(v72, v98), v88, v72), v95, (float64x2_t)xmmword_1B538DC00);
    uint64_t result = sub_1B5250A04(a1, v73, a3, a4);
    ++v63;
    float64x2_t v54 = v110;
    *(float64x2_t *)(v7 + 176) = v110;
    *(float64x2_t *)(v7 + 192) = v97;
    *(float64x2_t *)(v7 + 208) = v99;
    *(float64x2_t *)(v7 + 224) = v96;
    v62 += 80;
    *(float64x2_t *)(v7 + 240) = v98;
    *(float64x2_t *)(v7 + 256) = v95;
    if (v61 == v63) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5253D20(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  switch(a3)
  {
    case 2:
      return (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 8))(a6, a7);
    case 3:
      *(void *)(a5 + 128) = 0;
      *(void *)(a5 + 136) = 0;
      *(unsigned char *)(a5 + 144) = 1;
      *(void *)(a5 + 152) = 0;
      *(void *)(a5 + 160) = 0;
      *(unsigned char *)(a5 + 168) = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 16))(a6, a7);
    case 4:
      return sub_1B5253E18(a4, a6, a7);
    default:
      float64x2_t v8 = vaddq_f64(*(float64x2_t *)(a5 + 240), vmlaq_f64(vmulq_f64((float64x2_t)vdupq_n_s64(a1), *(float64x2_t *)(a5 + 176)), (float64x2_t)vdupq_n_s64(a2), *(float64x2_t *)(a5 + 208)));
      return sub_1B52541BC((a3 & 1) == 0, v8.f64[0], v8.f64[1], a4, a6, a7);
  }
}

uint64_t sub_1B5253E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)(v3 + 144) & 1) == 0 && (*(unsigned char *)(v3 + 168) & 1) == 0) {
    (*(void (**)(uint64_t, uint64_t, double, double, double, double))(a3 + 40))(a2, a3, *(double *)(v3 + 128), *(double *)(v3 + 136), *(double *)(v3 + 152), *(double *)(v3 + 160));
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
}

uint64_t sub_1B5253E9C(char a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7 = *(void *)(v4 + 120);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B51E8EEC(0, *(void *)(v7 + 16) + 1, 1, (char *)v7);
    uint64_t v7 = result;
  }
  unint64_t v10 = *(void *)(v7 + 16);
  unint64_t v9 = *(void *)(v7 + 24);
  double v12 = a3;
  double v11 = a4;
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B51E8EEC((char *)(v9 > 1), v10 + 1, 1, (char *)v7);
    double v12 = a3;
    double v11 = a4;
    uint64_t v7 = result;
  }
  *(void *)(v7 + 16) = v10 + 1;
  unint64_t v13 = v7 + 16 * v10;
  *(double *)(v13 + 32) = v12;
  *(double *)(v13 + 40) = v11;
  *(void *)(v4 + 120) = v7;
  if (*(unsigned char *)(v4 + 144))
  {
    *(double *)(v4 + 128) = v12;
    *(double *)(v4 + 136) = v11;
    *(unsigned char *)(v4 + 144) = 0;
  }
  else
  {
    if ((*(unsigned char *)(v4 + 168) & 1) == 0)
    {
      double v18 = *(double *)(v4 + 152);
      double v17 = *(double *)(v4 + 160);
      double v19 = (v17 + v11) * 0.5;
      if (a1)
      {
        double v20 = (v18 + v12) * 0.5;
      }
      else
      {
        double v19 = v11;
        double v20 = v12;
      }
      unsigned __int16 v14 = (unsigned char *)(a2 + 32);
      if (*(unsigned char *)(a2 + 32))
      {
        double v21 = v20;
        double v22 = v19;
      }
      else
      {
        double v21 = *(double *)(a2 + 16);
        double v22 = *(double *)(a2 + 24);
        double v24 = *(double *)a2;
        double v23 = *(double *)(a2 + 8);
        if (*(double *)a2 >= v20) {
          double v24 = v20;
        }
        if (v20 > v21) {
          double v21 = v20;
        }
        if (v23 >= v19) {
          double v23 = v19;
        }
        if (v19 > v22) {
          double v22 = v19;
        }
        double v20 = v24;
        double v19 = v23;
      }
      if (v20 >= v18) {
        double v20 = *(double *)(v4 + 152);
      }
      if (v18 <= v21) {
        double v18 = v21;
      }
      if (v19 >= v17) {
        double v19 = *(double *)(v4 + 160);
      }
      *(double *)a2 = v20;
      *(double *)(a2 + 8) = v19;
      if (v17 <= v22) {
        double v17 = v22;
      }
      *(double *)(a2 + 16) = v18;
      *(double *)(a2 + 24) = v17;
      goto LABEL_36;
    }
    if (a1) {
      goto LABEL_37;
    }
  }
  unsigned __int16 v14 = (unsigned char *)(a2 + 32);
  v15.f64[0] = v12;
  v15.f64[1] = v11;
  if (*(unsigned char *)(a2 + 32))
  {
    int8x16_t v16 = (int8x16_t)v15;
  }
  else
  {
    int8x16_t v16 = vbslq_s8((int8x16_t)vcgeq_f64(*(float64x2_t *)(a2 + 16), v15), *(int8x16_t *)(a2 + 16), (int8x16_t)v15);
    float64x2_t v15 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v15, *(float64x2_t *)a2), *(int8x16_t *)a2, (int8x16_t)v15);
  }
  *(float64x2_t *)a2 = v15;
  *(int8x16_t *)(a2 + 16) = v16;
LABEL_36:
  *unsigned __int16 v14 = 0;
LABEL_37:
  double v25 = v12;
  double v26 = v11;
  if ((a1 & 1) == 0)
  {
    double v25 = 0.0;
    double v26 = 0.0;
  }
  *(double *)(v4 + 152) = v25;
  *(double *)(v4 + 160) = v26;
  *(unsigned char *)(v4 + 168) = (a1 & 1) == 0;
  return result;
}

uint64_t sub_1B5254068(char a1, id *a2, double a3, double a4)
{
  uint64_t v9 = *(void *)(v4 + 120);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B51E8EEC(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
    uint64_t v9 = result;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B51E8EEC((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    uint64_t v9 = result;
  }
  *(void *)(v9 + 16) = v12 + 1;
  unint64_t v13 = v9 + 16 * v12;
  *(double *)(v13 + 32) = a3;
  *(double *)(v13 + 40) = a4;
  *(void *)(v4 + 120) = v9;
  if (*(unsigned char *)(v4 + 144))
  {
    *(double *)(v4 + 128) = a3;
    *(double *)(v4 + 136) = a4;
    *(unsigned char *)(v4 + 144) = 0;
    uint64_t result = (uint64_t)objc_msgSend(*a2, sel_moveTo_, a3, a4);
  }
  else if (*(unsigned char *)(v4 + 168))
  {
    if ((a1 & 1) == 0) {
      uint64_t result = (uint64_t)objc_msgSend(*a2, sel_lineTo_, a3, a4);
    }
  }
  else
  {
    double v14 = (*(double *)(v4 + 152) + a3) * 0.5;
    double v15 = (*(double *)(v4 + 160) + a4) * 0.5;
    if ((a1 & 1) == 0)
    {
      double v15 = a4;
      double v14 = a3;
    }
    uint64_t result = (uint64_t)objc_msgSend(*a2, sel_quadCurveTo_control_, v14, v15);
  }
  double v16 = a3;
  double v17 = a4;
  if ((a1 & 1) == 0)
  {
    double v16 = 0.0;
    double v17 = 0.0;
  }
  *(double *)(v4 + 152) = v16;
  *(double *)(v4 + 160) = v17;
  *(unsigned char *)(v4 + 168) = (a1 & 1) == 0;
  return result;
}

uint64_t sub_1B52541BC(char a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(v6 + 120);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B51E8EEC(0, *(void *)(v12 + 16) + 1, 1, (char *)v12);
    uint64_t v12 = result;
  }
  unint64_t v17 = *(void *)(v12 + 16);
  unint64_t v16 = *(void *)(v12 + 24);
  if (v17 >= v16 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B51E8EEC((char *)(v16 > 1), v17 + 1, 1, (char *)v12);
    uint64_t v12 = result;
  }
  *(void *)(v12 + 16) = v17 + 1;
  unint64_t v18 = v12 + 16 * v17;
  *(double *)(v18 + 32) = a2;
  *(double *)(v18 + 40) = a3;
  *(void *)(v6 + 120) = v12;
  if (*(unsigned char *)(v6 + 144))
  {
    *(double *)(v6 + 128) = a2;
    *(double *)(v6 + 136) = a3;
    *(unsigned char *)(v6 + 144) = 0;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double, double))(a6 + 24))(a5, a6, a2, a3);
    if ((a1 & 1) == 0) {
      goto LABEL_15;
    }
  }
  else if (*(unsigned char *)(v6 + 168))
  {
    if ((a1 & 1) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double, double))(a6 + 32))(a5, a6, a2, a3);
LABEL_15:
      char v19 = 1;
      a2 = 0.0;
      a3 = 0.0;
      goto LABEL_16;
    }
  }
  else
  {
    v14.n128_f64[0] = (*(double *)(v6 + 152) + a2) * 0.5;
    v15.n128_f64[0] = (*(double *)(v6 + 160) + a3) * 0.5;
    if ((a1 & 1) == 0)
    {
      v15.n128_f64[0] = a3;
      v14.n128_f64[0] = a2;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, __n128, __n128))(a6 + 40))(a5, a6, v14, v15);
    if ((a1 & 1) == 0) {
      goto LABEL_15;
    }
  }
  char v19 = 0;
LABEL_16:
  *(double *)(v6 + 152) = a2;
  *(double *)(v6 + 160) = a3;
  *(unsigned char *)(v6 + 168) = v19;
  return result;
}

uint64_t sub_1B5254354(uint64_t result, unint64_t *a2, uint64_t a3, uint64_t (*a4)(double, double, void), double a5)
{
  if (a3 < 1) {
    return result;
  }
  uint64_t v7 = v5;
  uint64_t v11 = result;
  uint64_t result = sub_1B52559A0((uint64_t)a2, (uint64_t)a2, 1, MEMORY[0x1E4FBC860], a3);
  if (v6) {
    return result;
  }
  uint64_t v12 = result;
  unint64_t v79 = a2[2];
  long long v75 = *(_OWORD *)a2;
  *(void *)&long long v76 = v79;
  swift_bridgeObjectRetain_n();
  unsigned __int16 v14 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v75, v13, 1);
  swift_bridgeObjectRelease();
  long long v78 = v75;
  unint64_t v79 = v76;
  sub_1B5256BB4((uint64_t *)&v78, v15, v14);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v16 = v79;
  *(_OWORD *)a2 = v78;
  a2[2] = v16;
  uint64_t v17 = *(void *)(v12 + 16);
  if (!v17)
  {
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v18 = *(void *)(v12 + 32 + 8 * v17 - 8);
  if (__OFADD__(v18, 1)) {
    goto LABEL_59;
  }
  uint64_t v19 = sub_1B5256E38(a2, v18 + 1);
  uint64_t v21 = v19;
  uint64_t v22 = v20;
  uint64_t v71 = v23;
  if (v24)
  {
    uint64_t v73 = v19;
    ((void (*)(void, void, uint64_t))a4)(0, 0, 2);
    uint64_t v21 = v73;
  }
  double v25 = sub_1B5256BB4((uint64_t *)a2, v20, v22);
  *((void *)&v68 + 1) = v26;
  float64x2_t v27 = sub_1B5256BB4((uint64_t *)a2, v26, v71);
  uint64_t v64 = v28;
  int8x16_t v66 = v27;
  uint64_t v74 = v21;
  sub_1B5201994(v7 + 32, (uint64_t)v80, &qword_1E9D479A0);
  uint64_t result = sub_1B5201994((uint64_t)v80, (uint64_t)v86, &qword_1E9D479A0);
  *(void *)&long long v68 = v25;
  if (!v87) {
    goto LABEL_17;
  }
  long long v83 = v86[2];
  long long v84 = v86[3];
  uint64_t v85 = v87;
  long long v81 = v86[0];
  long long v82 = v86[1];
  uint64_t result = sub_1B5284728(v11);
  if ((~*(void *)&a5 & 0x7FF0000000000000) == 0) {
    goto LABEL_66;
  }
  if (a5 <= -9.22337204e18)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a5 >= 9.22337204e18)
  {
LABEL_68:
    __break(1u);
    return result;
  }
  uint64_t v72 = result - (uint64_t)a5;
  if (!__OFSUB__(result, (uint64_t)a5)) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_17:
  uint64_t v72 = 0;
LABEL_18:
  uint64_t v29 = *(void *)(v21 + 16);
  if (v29)
  {
    uint64_t v63 = 0;
    unint64_t v30 = 0;
    unint64_t v31 = 0;
    uint64_t v60 = v21 + 32;
    uint64_t v61 = *(void *)(v21 + 16);
    uint64_t v58 = v29 - 1;
LABEL_20:
    unint64_t v59 = v30;
    char v32 = 1;
    while (1)
    {
      if (v31 >= *(void *)(v21 + 16)) {
        goto LABEL_60;
      }
      char v33 = *(unsigned char *)(v60 + v31);
      if (v32) {
        ((void (*)(void, void, uint64_t))a4)(0, 0, 3);
      }
      int v34 = v33 & 0x10;
      char v70 = v33;
      if ((v33 & 2) == 0) {
        break;
      }
      unint64_t v39 = a2[2];
      if (v34)
      {
        unint64_t v36 = v31;
        long long v75 = v68;
        *(void *)&long long v76 = v39;
        swift_bridgeObjectRetain_n();
        LOBYTE(v38) = sub_1B51FC9AC((unint64_t *)&v75, v44);
        unint64_t v62 = v39;
        swift_bridgeObjectRelease();
        uint64_t v38 = v38;
LABEL_31:
        uint64_t v43 = *((void *)&v75 + 1);
        uint64_t v42 = v75;
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      long long v75 = v68;
      *(void *)&long long v76 = v39;
      swift_bridgeObjectRetain_n();
      sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      swift_bridgeObjectRetain();
      sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      unsigned __int8 v41 = sub_1B51FC9AC((unint64_t *)&v75, v40);
      unint64_t v36 = v31;
      swift_bridgeObjectRelease();
      long long v69 = v75;
      id v77 = (id)v41;
      sub_1B525523C(&v77, &v78);
      unint64_t v62 = v39;
      swift_bridgeObjectRelease();
      sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      uint64_t v38 = v78;
      uint64_t v43 = *((void *)&v69 + 1);
      uint64_t v42 = v69;
LABEL_32:
      *(void *)&long long v68 = v42;
      if (v43 < v42) {
        goto LABEL_62;
      }
      BOOL v45 = __OFADD__(v72, v38);
      v72 += v38;
      unint64_t v35 = v62;
      if (v45) {
        goto LABEL_57;
      }
      *((void *)&v68 + 1) = v43;
LABEL_36:
      unint64_t v46 = v36;
      if ((v70 & 4) != 0)
      {
        if ((v70 & 0x20) == 0)
        {
          *(void *)&long long v75 = v66;
          *((void *)&v75 + 1) = v64;
          *(void *)&long long v76 = v35;
          swift_bridgeObjectRetain_n();
          sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          swift_bridgeObjectRetain();
          sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          unsigned __int8 v50 = sub_1B51FC9AC((unint64_t *)&v75, v49);
          swift_bridgeObjectRelease();
          uint64_t v65 = *((void *)&v75 + 1);
          int8x16_t v67 = (uint64_t *)v75;
          id v77 = (id)v50;
          sub_1B525523C(&v77, &v78);
          swift_bridgeObjectRelease();
          sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          swift_bridgeObjectRelease();
          uint64_t result = sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          uint64_t v48 = v78;
          uint64_t v51 = v65;
          unint64_t v52 = v67;
          goto LABEL_44;
        }
        *(void *)&long long v75 = v66;
        *((void *)&v75 + 1) = v64;
        *(void *)&long long v76 = v35;
        swift_bridgeObjectRetain_n();
        LOBYTE(v48) = sub_1B51FC9AC((unint64_t *)&v75, v54);
        swift_bridgeObjectRelease();
        uint64_t v48 = v48;
      }
      else
      {
        if ((v70 & 0x20) != 0)
        {
          uint64_t v53 = v61;
          uint64_t result = sub_1B5259BD0(0, 0, 0, 0, 0);
          char v56 = v70;
          if (v64 < (uint64_t)v66) {
            goto LABEL_65;
          }
          uint64_t v55 = v63;
          goto LABEL_50;
        }
        *(void *)&long long v75 = v66;
        *((void *)&v75 + 1) = v64;
        *(void *)&long long v76 = v35;
        swift_bridgeObjectRetain_n();
        LOWORD(v48) = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v75, v47, 1);
        swift_bridgeObjectRelease();
        uint64_t v48 = (__int16)v48;
      }
      uint64_t v51 = *((void *)&v75 + 1);
      unint64_t v52 = (uint64_t *)v75;
      uint64_t result = swift_bridgeObjectRelease();
LABEL_44:
      uint64_t v64 = v51;
      int8x16_t v66 = v52;
      if (v51 < (uint64_t)v52) {
        goto LABEL_63;
      }
      uint64_t v55 = v63 + v48;
      char v56 = v70;
      uint64_t v53 = v61;
      if (__OFADD__(v63, v48))
      {
LABEL_57:
        sub_1B51D4F28();
        swift_allocError();
        swift_willThrow();
        goto LABEL_4;
      }
LABEL_50:
      uint64_t v63 = v55;
      uint64_t result = ((uint64_t (*)(void, void, void))a4)((double)v72, (double)v55, v56 & 1);
      uint64_t v21 = v74;
      if (v59 >= *(void *)(v12 + 16)) {
        goto LABEL_61;
      }
      if (v46 == *(void *)(v12 + 32 + 8 * v59))
      {
        uint64_t result = ((uint64_t (*)(void, void, uint64_t))a4)(0, 0, 4);
        unint64_t v30 = v59 + 1;
        BOOL v57 = v58 == v46;
        unint64_t v31 = v46 + 1;
        uint64_t v21 = v74;
        if (v57) {
          goto LABEL_4;
        }
        goto LABEL_20;
      }
      char v32 = 0;
      unint64_t v31 = v46 + 1;
      if (v53 == v31) {
        goto LABEL_4;
      }
    }
    unint64_t v35 = a2[2];
    if (v34)
    {
      unint64_t v36 = v31;
      uint64_t result = sub_1B5259BD0(0, 0, 0, 0, 0);
      if (*((uint64_t *)&v68 + 1) < (uint64_t)v68) {
        goto LABEL_64;
      }
      goto LABEL_36;
    }
    unint64_t v36 = v31;
    long long v75 = v68;
    *(void *)&long long v76 = v35;
    swift_bridgeObjectRetain_n();
    LOWORD(v38) = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v75, v37, 1);
    unint64_t v62 = v35;
    swift_bridgeObjectRelease();
    uint64_t v38 = (__int16)v38;
    goto LABEL_31;
  }
LABEL_4:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5255048(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int16 *)(v1 + 104);
  if (v3 > 1)
  {
    sub_1B51DD5FC();
    swift_allocError();
    char v10 = 3;
    goto LABEL_9;
  }
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)v1;
  unint64_t v6 = *(void *)(v1 + 8);
  if (sub_1B52AC5F0(*(_WORD *)(v1 + 104), *(void *)v1, v6) > a1 || v7 <= v4)
  {
    sub_1B51DD5FC();
    swift_allocError();
    char v10 = 14;
LABEL_9:
    *uint64_t v9 = v10;
    return swift_willThrow();
  }
  if (v3)
  {
    if ((unint64_t)(v4 - 0x2000000000000000) >> 62 != 3)
    {
      __break(1u);
      goto LABEL_18;
    }
    v4 *= 4;
    sub_1B51D4BB8(v5, v6);
    uint64_t v12 = sub_1B51D91B0(1, v4, v3, v5, v6);
    if (!v2)
    {
LABEL_16:
      sub_1B5244AD0(v12, v13, *(void *)(v1 + 16), *(void *)(v1 + 24));
      uint64_t v14 = sub_1B5372398();
      sub_1B51D4C64(v5, v6);
      return v14;
    }
    swift_unexpectedError();
    __break(1u);
  }
  if (v4 + 0x4000000000000000 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1B51D4BB8(v5, v6);
  uint64_t v12 = sub_1B51D8F68(1, (uint64_t)sub_1B521A9D0, 0, 2 * v4, 0, v5, v6);
  if (!v2) {
    goto LABEL_16;
  }
LABEL_19:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void *sub_1B525523C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFSUB__(0, *result)) {
    __break(1u);
  }
  else {
    *a2 = -*result;
  }
  return result;
}

unsigned char *sub_1B5255254@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1B5255260(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unsigned char *sub_1B5255268@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

unsigned char *sub_1B525527C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

unsigned char *sub_1B5255290@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1B52552A4(unsigned char *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  int v4 = *v2;
  if ((v4 & v3) != v3) {
    *uint64_t v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_1B52552D4@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    *uint64_t v2 = v4 & ~(_BYTE)v3;
  }
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_1B5255300@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *uint64_t v2 = v4 | v3;
  int v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned char *sub_1B5255324(unsigned char *result)
{
  *v1 |= *result;
  return result;
}

unsigned char *sub_1B5255338(unsigned char *result)
{
  *v1 &= *result;
  return result;
}

unsigned char *sub_1B525534C(unsigned char *result)
{
  *v1 ^= *result;
  return result;
}

unsigned char *sub_1B5255360@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1B5255374(unsigned __int8 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1B5255388(unsigned char *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1B525539C(unsigned __int8 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1B52553B0()
{
  return *v0 == 0;
}

unsigned char *sub_1B52553C0(unsigned char *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1B52553D4@<X0>(unsigned char *a1@<X8>)
{
  char v2 = sub_1B526A090();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

__n128 sub_1B5255414@<Q0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  if ((v3 & 0x2000) != 0) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 1;
  }
  BOOL v5 = (v3 & 1) == 0;
  if ((v3 & 2) != 0) {
    __int16 v6 = 1;
  }
  else {
    __int16 v6 = 257;
  }
  uint64_t v18 = 0;
  uint64_t v19 = 0x3FF0000000000000;
  v15[0] = 1;
  unint64_t v16 = sub_1B5255570;
  uint64_t v17 = 0;
  sub_1B5255594(v3, &v19, &v18, v15, (uint64_t)v20);
  __int16 v7 = v21;
  char v8 = v22;
  __n128 result = (__n128)v20[0];
  long long v10 = v20[1];
  long long v11 = v20[2];
  long long v12 = v20[3];
  long long v13 = v20[4];
  long long v14 = v20[5];
  *(_WORD *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = (unsigned __int16)(v3 & 0x2000) >> 13;
  *(unsigned char *)(a2 + 17) = (v3 & 0x2000) == 0;
  *(unsigned char *)(a2 + 18) = (v3 & 2) >> 1;
  *(_WORD *)(a2 + 19) = v6;
  *(unsigned char *)(a2 + 21) = v5;
  *(_WORD *)(a2 + 22) = v6;
  *(unsigned char *)(a2 + 24) = v5;
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v10;
  *(_OWORD *)(a2 + 64) = v11;
  *(_OWORD *)(a2 + 80) = v12;
  *(_OWORD *)(a2 + 96) = v13;
  *(_OWORD *)(a2 + 112) = v14;
  *(_WORD *)(a2 + 128) = v7;
  *(unsigned char *)(a2 + 130) = v8;
  *(void *)(a2 + 136) = sub_1B51D2440;
  *(void *)(a2 + 144) = 0;
  return result;
}

_WORD *sub_1B5255530@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  int v2 = (unsigned __int16)*result;
  if ((v2 & 0x8000) != 0) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = (unsigned __int16)*result;
  }
  BOOL v4 = (v2 & 0x8000) != 0 || *result == 0;
  BOOL v5 = v2 == 65534;
  if (v2 == 65534) {
    uint64_t v6 = 2;
  }
  else {
    uint64_t v6 = v3;
  }
  char v7 = v5 || v4;
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v7;
  return result;
}

double sub_1B5255570@<D0>(__int16 *a1@<X0>, double *a2@<X8>, int16x4_t a3@<D0>)
{
  a3.i16[0] = *a1;
  double result = (double)vmovl_s16(a3).i32[0] * 0.0000610351562;
  *a2 = result;
  return result;
}

uint64_t sub_1B5255594@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, double (**a3)@<D0>(double *a1@<X0>, uint64_t a2@<X8>)@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  if ((result & 8) != 0)
  {
    if ((result & 0xC0) == 0)
    {
      uint64_t v15 = *a4;
      unint64_t v16 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))*((void *)a4 + 1);
      uint64_t v17 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))*((void *)a4 + 2);
      uint64_t v19 = *a3;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v19;
      double result = swift_retain();
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v11 = 0;
      long long v12 = 0;
      __int16 v13 = 0;
      char v14 = 0;
      uint64_t v18 = sub_1B5259C10;
      uint64_t v7 = 1;
      goto LABEL_11;
    }
LABEL_9:
    sub_1B51DD5FC();
    uint64_t v15 = swift_allocError();
    *uint64_t v20 = 7;
    double result = (uint64_t)(id)v15;
    unint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    long long v11 = 0;
    long long v12 = 0;
    __int16 v13 = 0;
    char v14 = 1;
    uint64_t v18 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))0xE000000000000000;
    uint64_t v6 = v15;
    goto LABEL_11;
  }
  if ((result & 0x40) != 0)
  {
    if ((result & 0x80) == 0)
    {
      uint64_t v15 = *a4;
      unint64_t v16 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))*((void *)a4 + 1);
      uint64_t v17 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))*((void *)a4 + 2);
      uint64_t v18 = *a3;
      double result = swift_retain_n();
      uint64_t v10 = 0;
      long long v11 = 0;
      long long v12 = 0;
      char v14 = 0;
      __int16 v13 = 256;
      uint64_t v6 = (uint64_t)v18;
      uint64_t v7 = v15;
      uint64_t v8 = (uint64_t)v16;
      uint64_t v9 = v17;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if ((result & 0x80) != 0)
  {
    uint64_t v15 = *a4;
    unint64_t v16 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))*((void *)a4 + 1);
    uint64_t v17 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))*((void *)a4 + 2);
    double result = swift_retain_n();
    char v14 = 0;
    __int16 v13 = 257;
    uint64_t v18 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))v15;
    uint64_t v6 = (uint64_t)v16;
    uint64_t v7 = (uint64_t)v17;
    uint64_t v8 = v15;
    uint64_t v9 = v16;
    uint64_t v10 = v15;
    long long v11 = v16;
    long long v12 = v17;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    long long v11 = 0;
    long long v12 = 0;
    __int16 v13 = 0;
    char v14 = 0;
    uint64_t v15 = *a2;
    unint64_t v16 = *a3;
    uint64_t v17 = *a3;
    uint64_t v18 = (double (*)@<D0>(double *@<X0>, uint64_t@<X8>))*a2;
  }
LABEL_11:
  *(void *)a5 = v15;
  *(void *)(a5 + 8) = v16;
  *(void *)(a5 + 16) = v17;
  *(void *)(a5 + 24) = v18;
  *(void *)(a5 + 32) = v6;
  *(void *)(a5 + 40) = v7;
  *(void *)(a5 + 48) = v8;
  *(void *)(a5 + 56) = v9;
  *(void *)(a5 + 64) = v12;
  *(void *)(a5 + 72) = v10;
  *(void *)(a5 + 80) = v11;
  *(void *)(a5 + 88) = v12;
  *(_WORD *)(a5 + 96) = v13;
  *(unsigned char *)(a5 + 98) = v14;
  return result;
}

uint64_t sub_1B525578C@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, v2, sizeof(__dst));
  SfntTrueTypeFont.getBoundingBox(glyphID:)(&v6, a1);
  return sub_1B5201994((uint64_t)&v6, a2, &qword_1E9D47D68);
}

char *sub_1B52557F4(char *result, uint64_t a2)
{
  void (*v20)(long long *__return_ptr, uint64_t *);
  char v21;
  uint64_t v23;
  long long v24;
  uint64_t v25;
  char *v26;

  uint64_t v4 = *(void *)result;
  uint64_t v5 = *((void *)result + 1);
  uint64_t v6 = *((void *)result + 2);
  uint64_t v7 = *(char **)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v26 = v7;
  if (v8 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v3;
    uint64_t v10 = result;
    if (v8)
    {
      __int16 v21 = *(unsigned char *)v2;
      uint64_t v20 = *(void (**)(long long *__return_ptr, uint64_t *))(v2 + 8);
      uint64_t v18 = result;
      uint64_t v19 = *(void *)(v2 + 16);
      sub_1B51DFE7C((uint64_t)&v26);
      swift_bridgeObjectRetain();
      while (1)
      {
        *(void *)&char v24 = v4;
        *((void *)&v24 + 1) = v5;
        double v25 = v6;
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1B52AFE94(&v24, v21, v20, v19, a2);
        if (v9) {
          break;
        }
        uint64_t v13 = v11;
        char v14 = v12;
        swift_bridgeObjectRelease();
        uint64_t v5 = *((void *)&v24 + 1);
        uint64_t v23 = v24;
        uint64_t v6 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1B51E7E4C(0, *((void *)v7 + 2) + 1, 1, v7);
        }
        unint64_t v16 = *((void *)v7 + 2);
        unint64_t v15 = *((void *)v7 + 3);
        if (v16 >= v15 >> 1) {
          uint64_t v7 = sub_1B51E7E4C((char *)(v15 > 1), v16 + 1, 1, v7);
        }
        *((void *)v7 + 2) = v16 + 1;
        uint64_t v17 = &v7[16 * v16];
        *((void *)v17 + 4) = v13;
        v17[40] = v14;
        --v8;
        uint64_t v4 = v23;
        if (!v8)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v18;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_13:
      *(void *)uint64_t v10 = v4;
      *((void *)v10 + 1) = v5;
      *((void *)v10 + 2) = v6;
    }
    return v7;
  }
  return result;
}

uint64_t sub_1B52559A0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  uint64_t v5 = a5;
  uint64_t v7 = (void *)result;
  uint64_t v8 = *(void *)result;
  uint64_t v9 = *(void *)(result + 8);
  uint64_t v10 = *(void *)(result + 16);
  if (a5)
  {
    uint64_t v19 = (void *)result;
    swift_bridgeObjectRetain();
    double result = swift_bridgeObjectRetain();
    uint64_t v11 = v8;
    while (v5)
    {
      if (__OFSUB__(v9, v11)) {
        goto LABEL_26;
      }
      if (v9 - v11 <= 1)
      {
        swift_bridgeObjectRetain();
        sub_1B5372F98();
        swift_bridgeObjectRelease();
        sub_1B51D4D34();
        swift_allocError();
        *uint64_t v18 = 0;
        v18[1] = v11;
        v18[2] = 0xD00000000000002BLL;
        v18[3] = 0x80000001B537BD30;
        v18[4] = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return a4;
      }
      if (v11 > 0x7FFFFFFFFFFFFFFDLL) {
        goto LABEL_27;
      }
      unint64_t v12 = v11 + 2;
      if (v9 < v11 + 2) {
        goto LABEL_27;
      }
      if (v8 < 0) {
        goto LABEL_28;
      }
      unint64_t v13 = *(void *)(v10 + 16);
      if (v13 < v11 || v13 < v12) {
        goto LABEL_29;
      }
      unsigned int v14 = bswap32(*(unsigned __int16 *)(v10 + v11 + 32)) >> 16;
      if (a3) {
        unsigned __int16 v15 = v14;
      }
      else {
        unsigned __int16 v15 = *(_WORD *)(v10 + v11 + 32);
      }
      double result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        double result = (uint64_t)sub_1B51E7F50(0, *(void *)(a4 + 16) + 1, 1, (char *)a4);
        a4 = result;
      }
      unint64_t v17 = *(void *)(a4 + 16);
      unint64_t v16 = *(void *)(a4 + 24);
      if (v17 >= v16 >> 1)
      {
        double result = (uint64_t)sub_1B51E7F50((char *)(v16 > 1), v17 + 1, 1, (char *)a4);
        a4 = result;
      }
      *(void *)(a4 + 16) = v17 + 1;
      *(void *)(a4 + 8 * v17 + 32) = v15;
      v11 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v12;
        uint64_t v7 = v19;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
LABEL_23:
  *uint64_t v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  return a4;
}

uint64_t sub_1B5255BCC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  uint64_t v5 = a5;
  uint64_t v7 = (void *)result;
  uint64_t v8 = *(void *)result;
  uint64_t v9 = *(void *)(result + 8);
  uint64_t v10 = *(void *)(result + 16);
  if (a5)
  {
    uint64_t v19 = (void *)result;
    swift_bridgeObjectRetain();
    double result = swift_bridgeObjectRetain();
    uint64_t v11 = v8;
    while (v5)
    {
      if (__OFSUB__(v9, v11)) {
        goto LABEL_26;
      }
      if (v9 - v11 <= 1)
      {
        sub_1B5372F98();
        swift_bridgeObjectRelease();
        sub_1B51D4D34();
        swift_allocError();
        *uint64_t v18 = 0;
        v18[1] = v11;
        v18[2] = 0xD00000000000002BLL;
        v18[3] = 0x80000001B537BD30;
        v18[4] = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return a4;
      }
      if (v11 > 0x7FFFFFFFFFFFFFFDLL) {
        goto LABEL_27;
      }
      unint64_t v12 = v11 + 2;
      if (v9 < v11 + 2) {
        goto LABEL_27;
      }
      if (v8 < 0) {
        goto LABEL_28;
      }
      unint64_t v13 = *(void *)(v10 + 16);
      if (v13 < v11 || v13 < v12) {
        goto LABEL_29;
      }
      unsigned int v14 = bswap32(*(unsigned __int16 *)(v10 + v11 + 32)) >> 16;
      if (a3) {
        __int16 v15 = v14;
      }
      else {
        __int16 v15 = *(_WORD *)(v10 + v11 + 32);
      }
      double result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        double result = (uint64_t)sub_1B51E9CE4(0, *(void *)(a4 + 16) + 1, 1, (char *)a4);
        a4 = result;
      }
      unint64_t v17 = *(void *)(a4 + 16);
      unint64_t v16 = *(void *)(a4 + 24);
      if (v17 >= v16 >> 1)
      {
        double result = (uint64_t)sub_1B51E9CE4((char *)(v16 > 1), v17 + 1, 1, (char *)a4);
        a4 = result;
      }
      *(void *)(a4 + 16) = v17 + 1;
      *(_WORD *)(a4 + 2 * v17 + 32) = v15;
      v11 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v12;
        uint64_t v7 = v19;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
LABEL_23:
  *uint64_t v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  return a4;
}

uint64_t sub_1B5255DE8(uint64_t result, uint64_t *a2, void (*a3)(long long *__return_ptr, uint64_t *), uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v24 = a4;
  if (a6 < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v7 = v6;
  uint64_t v8 = a6;
  uint64_t v10 = (void *)result;
  uint64_t v11 = *(void *)result;
  uint64_t v12 = *(void *)(result + 8);
  uint64_t v13 = *(void *)(result + 16);
  if (a6)
  {
    uint64_t v18 = (void *)result;
    swift_bridgeObjectRetain();
    double result = swift_bridgeObjectRetain();
    while (v8)
    {
      uint64_t v21 = v11;
      uint64_t v22 = v12;
      uint64_t v23 = v13;
      swift_bridgeObjectRetain();
      unsigned int v14 = sub_1B52B9028((uint64_t)&v21, a3, v24, a2);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)a5;
      }
      __int16 v15 = v14;
      swift_bridgeObjectRelease();
      uint64_t v11 = v21;
      uint64_t v12 = v22;
      uint64_t v13 = v23;
      double result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        double result = (uint64_t)sub_1B51E9DDC(0, a5[2] + 1, 1, a5);
        a5 = (void *)result;
      }
      unint64_t v17 = a5[2];
      unint64_t v16 = a5[3];
      if (v17 >= v16 >> 1)
      {
        double result = (uint64_t)sub_1B51E9DDC((void *)(v16 > 1), v17 + 1, 1, a5);
        a5 = (void *)result;
      }
      a5[2] = v17 + 1;
      a5[v17 + 4] = v15;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v18;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
LABEL_14:
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  return (uint64_t)a5;
}

uint64_t sub_1B5255F70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 < 0)
  {
LABEL_53:
    __break(1u);
    return result;
  }
  uint64_t v5 = v4;
  uint64_t v6 = a4;
  uint64_t v8 = (void *)result;
  int64_t v10 = *(void *)result;
  uint64_t v9 = *(void *)(result + 8);
  uint64_t v11 = *(void *)(result + 16);
  if (a4)
  {
    int v34 = (void *)result;
    swift_bridgeObjectRetain();
    double result = swift_bridgeObjectRetain();
    while (v6)
    {
      if (__OFSUB__(v9, v10)) {
        goto LABEL_46;
      }
      if (v9 - v10 <= 0)
      {
        *(void *)&long long v38 = 0;
        *((void *)&v38 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1B5372F98();
        swift_bridgeObjectRelease();
        sub_1B51D4D34();
        swift_allocError();
        *float64x2_t v27 = 0;
        v27[1] = v10;
        void v27[2] = 0xD00000000000002ALL;
        v27[3] = 0x80000001B537BD00;
        v27[4] = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
LABEL_43:
        swift_bridgeObjectRelease_n();
        return a3;
      }
      if (v10 == 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_47;
      }
      unint64_t v12 = v10 + 1;
      if (v9 < v10 + 1) {
        goto LABEL_47;
      }
      if (v10 < 0) {
        goto LABEL_48;
      }
      unint64_t v13 = *(void *)(v11 + 16);
      if (v13 < v10 || v13 < v12) {
        goto LABEL_49;
      }
      uint64_t v14 = v11 + 32;
      double result = swift_bridgeObjectRetain();
      unsigned int v15 = *(unsigned __int8 *)(v11 + 32 + v10);
      switch(v15)
      {
        case 0xFFu:
          *(void *)&long long v38 = v10 + 1;
          *((void *)&v38 + 1) = v9;
          *(void *)&long long v39 = v11;
          swift_bridgeObjectRetain();
          sub_1B5200F40(1, (uint64_t)sub_1B5284CAC, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68);
          swift_bridgeObjectRetain();
          sub_1B5200F40(1, (uint64_t)sub_1B5284CAC, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68);
          unsigned __int8 v18 = sub_1B51FC9AC((unint64_t *)&v38, a2);
          uint64_t v19 = v5;
          if (v5)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B5200F40(1, (uint64_t)sub_1B5284CAC, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
            sub_1B5200F40(1, (uint64_t)sub_1B5284CAC, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
            sub_1B5200F30(1, (uint64_t)sub_1B5284CAC, 0, 0);
LABEL_39:
            id v41 = v19;
            id v29 = v19;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47950);
            if (swift_dynamicCast())
            {

              long long v35 = v39;
              long long v37 = v38;
              uint64_t v30 = v40;
              sub_1B51D4D34();
              swift_allocError();
              *(_OWORD *)uint64_t v31 = v37;
              *(_OWORD *)(v31 + 16) = v35;
              *(void *)(v31 + 32) = v30;
              swift_willThrow();
            }
            else
            {

              sub_1B51D4D34();
              swift_allocError();
              void *v32 = v19;
              v32[1] = v12;
              void v32[2] = 0x7272652072657355;
              v32[3] = 0xEA0000000000726FLL;
              v32[4] = v19;
              id v33 = v19;
              swift_willThrow();
            }
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
          unsigned __int8 v20 = v18;
          swift_bridgeObjectRelease();
          uint64_t v9 = *((void *)&v38 + 1);
          int64_t v10 = v38;
          uint64_t v21 = v39;
          unsigned __int16 v42 = v20;
          sub_1B5284CAC(&v42, &v41);
          uint64_t v5 = 0;
          swift_bridgeObjectRelease();
          sub_1B5200F40(1, (uint64_t)sub_1B5284CAC, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
          sub_1B5200F40(1, (uint64_t)sub_1B5284CAC, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
          sub_1B5200F30(1, (uint64_t)sub_1B5284CAC, 0, 0);
          swift_bridgeObjectRelease();
          LOWORD(v15) = (_WORD)v41;
          uint64_t v11 = v21;
          break;
        case 0xFEu:
          *(void *)&long long v38 = v10 + 1;
          *((void *)&v38 + 1) = v9;
          *(void *)&long long v39 = v11;
          swift_bridgeObjectRetain();
          sub_1B5200F40(1, (uint64_t)sub_1B5284C7C, 0, 1, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68);
          swift_bridgeObjectRetain();
          sub_1B5200F40(1, (uint64_t)sub_1B5284C7C, 0, 1, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68);
          unsigned __int8 v22 = sub_1B51FC9AC((unint64_t *)&v38, a2);
          uint64_t v19 = v5;
          if (v5)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B5200F40(1, (uint64_t)sub_1B5284C7C, 0, 1, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
            sub_1B5200F40(1, (uint64_t)sub_1B5284C7C, 0, 1, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
            sub_1B5200F20(1, (uint64_t)sub_1B5284C7C, 0, 1);
            goto LABEL_39;
          }
          unsigned __int8 v23 = v22;
          swift_bridgeObjectRelease();
          uint64_t v9 = *((void *)&v38 + 1);
          int64_t v10 = v38;
          uint64_t v24 = v39;
          unsigned __int16 v42 = v23;
          sub_1B5284C7C(&v42, &v41);
          swift_bridgeObjectRelease();
          sub_1B5200F40(1, (uint64_t)sub_1B5284C7C, 0, 1, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
          sub_1B5200F40(1, (uint64_t)sub_1B5284C7C, 0, 1, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
          sub_1B5200F20(1, (uint64_t)sub_1B5284C7C, 0, 1);
          uint64_t v5 = 0;
          swift_bridgeObjectRelease();
          LOWORD(v15) = (_WORD)v41;
          uint64_t v11 = v24;
          break;
        case 0xFDu:
          if (__OFSUB__(v9, v12)) {
            goto LABEL_50;
          }
          if ((uint64_t)(v9 - v12) <= 1)
          {
            *(void *)&long long v38 = 0;
            *((void *)&v38 + 1) = 0xE000000000000000;
            sub_1B5372F98();
            swift_bridgeObjectRelease();
            sub_1B51D4D34();
            uint64_t v19 = (void *)swift_allocError();
            *uint64_t v28 = 0;
            v28[1] = v12;
            v28[2] = 0xD00000000000002BLL;
            void v28[3] = 0x80000001B537BD30;
            v28[4] = 0;
            swift_willThrow();
            sub_1B5200F40(1, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
            goto LABEL_39;
          }
          v10 += 3;
          if (v10 < (uint64_t)v12 || v9 < v10) {
            goto LABEL_51;
          }
          unint64_t v16 = *(void *)(v11 + 16);
          if (v16 < v12 || (uint64_t)v16 < v10) {
            goto LABEL_52;
          }
          unsigned int v17 = *(unsigned __int16 *)(v14 + v12);
          sub_1B5200F40(1, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
          swift_bridgeObjectRelease();
          unsigned int v15 = bswap32(v17) >> 16;
          break;
        default:
          sub_1B5200F40(*(unsigned __int8 *)(v14 + v10), 0, 0, 1, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30);
          swift_bridgeObjectRelease();
          ++v10;
          break;
      }
      double result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        double result = (uint64_t)sub_1B51E9CE4(0, *(void *)(a3 + 16) + 1, 1, (char *)a3);
        a3 = result;
      }
      unint64_t v26 = *(void *)(a3 + 16);
      unint64_t v25 = *(void *)(a3 + 24);
      if (v26 >= v25 >> 1)
      {
        double result = (uint64_t)sub_1B51E9CE4((char *)(v25 > 1), v26 + 1, 1, (char *)a3);
        a3 = result;
      }
      *(void *)(a3 + 16) = v26 + 1;
      *(_WORD *)(a3 + 2 * v26 + 32) = v15;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v34;
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  swift_bridgeObjectRetain();
LABEL_35:
  *uint64_t v8 = v10;
  v8[1] = v9;
  void v8[2] = v11;
  return a3;
}

uint64_t sub_1B5256990(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  uint64_t v5 = a5;
  uint64_t v7 = (void *)result;
  uint64_t v8 = *(void *)result;
  uint64_t v9 = *(void *)(result + 8);
  uint64_t v10 = *(void *)(result + 16);
  if (a5)
  {
    uint64_t v19 = (void *)result;
    swift_bridgeObjectRetain();
    double result = swift_bridgeObjectRetain();
    uint64_t v11 = v8;
    while (v5)
    {
      if (__OFSUB__(v9, v11)) {
        goto LABEL_26;
      }
      if (v9 - v11 <= 3)
      {
        swift_bridgeObjectRetain();
        sub_1B5372F98();
        swift_bridgeObjectRelease();
        sub_1B51D4D34();
        swift_allocError();
        *unsigned __int8 v18 = 0;
        v18[1] = v11;
        v18[2] = 0xD00000000000002ALL;
        v18[3] = 0x80000001B537BFD0;
        v18[4] = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return a4;
      }
      if (v11 > 0x7FFFFFFFFFFFFFFBLL) {
        goto LABEL_27;
      }
      unint64_t v12 = v11 + 4;
      if (v9 < v11 + 4) {
        goto LABEL_27;
      }
      if (v8 < 0) {
        goto LABEL_28;
      }
      unint64_t v13 = *(void *)(v10 + 16);
      if (v13 < v11 || v13 < v12) {
        goto LABEL_29;
      }
      unsigned int v14 = bswap32(*(_DWORD *)(v10 + v11 + 32));
      if (a3) {
        unsigned int v15 = v14;
      }
      else {
        unsigned int v15 = *(_DWORD *)(v10 + v11 + 32);
      }
      double result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        double result = (uint64_t)sub_1B51EA7A0(0, *(void *)(a4 + 16) + 1, 1, (char *)a4);
        a4 = result;
      }
      unint64_t v17 = *(void *)(a4 + 16);
      unint64_t v16 = *(void *)(a4 + 24);
      if (v17 >= v16 >> 1)
      {
        double result = (uint64_t)sub_1B51EA7A0((char *)(v16 > 1), v17 + 1, 1, (char *)a4);
        a4 = result;
      }
      *(void *)(a4 + 16) = v17 + 1;
      *(_DWORD *)(a4 + 4 * v17 + 32) = v15;
      v11 += 4;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v12;
        uint64_t v7 = v19;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
LABEL_23:
  *uint64_t v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  return a4;
}

uint64_t *sub_1B5256BB4(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *result;
  if (a3 < 0)
  {
    sub_1B5372F98();
    swift_bridgeObjectRelease();
    sub_1B53731F8();
    sub_1B5372868();
    swift_bridgeObjectRelease();
    unint64_t v5 = 0xD000000000000023;
    unint64_t v6 = 0x80000001B537CC20;
    sub_1B51D4D34();
    swift_allocError();
    *uint64_t v7 = 2;
    goto LABEL_6;
  }
  uint64_t v4 = result[1];
  if (__OFSUB__(v4, v3))
  {
    __break(1u);
  }
  else
  {
    if (v4 - v3 < a3)
    {
      sub_1B5372F98();
      swift_bridgeObjectRelease();
      sub_1B53731F8();
      sub_1B5372868();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000024;
      unint64_t v6 = 0x80000001B537CBF0;
      sub_1B51D4D34();
      swift_allocError();
      *uint64_t v7 = 0;
LABEL_6:
      v7[1] = v3;
      v7[2] = v5;
      void v7[3] = v6;
      v7[4] = 0;
      swift_willThrow();
      return (uint64_t *)v3;
    }
    uint64_t v8 = v3 + a3;
    if (v3 + a3 >= v3 && v4 >= v8)
    {
      *double result = v8;
      return (uint64_t *)v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1B5256D68(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  sub_1B51D4C64(*a1, a1[1]);
  sub_1B51D4C64(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1B5256DD0(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  sub_1B51D4BB8(*a1, a1[1]);
  sub_1B51D4BB8(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B5256E38(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t result = (uint64_t)sub_1B51E8EE0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x1E4FBC860]);
  uint64_t v44 = result;
  if (v3 <= 0)
  {
    if (!v3) {
      return result;
    }
    goto LABEL_56;
  }
  unint64_t v6 = *a1;
  int64_t v7 = a1[1];
  if (__OFSUB__(v7, *a1))
  {
LABEL_68:
    __break(1u);
    return result;
  }
  unint64_t v8 = a1[2];
  if ((uint64_t)(v7 - *a1) >= 1)
  {
    uint64_t v37 = v2;
    uint64_t v38 = 0;
    LOBYTE(v9) = 0;
    uint64_t v10 = 0;
    unint64_t v36 = a1;
    while (1)
    {
      unint64_t v11 = v6 + 1;
      if (v6 == 0x7FFFFFFFFFFFFFFFLL || v7 < (uint64_t)v11)
      {
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      if ((v6 & 0x8000000000000000) != 0) {
        goto LABEL_61;
      }
      unint64_t v13 = *(void *)(v8 + 16);
      if (v13 < v6 || v13 < v11) {
        goto LABEL_62;
      }
      uint64_t v40 = v10;
      unsigned int v15 = *(unsigned __int8 *)(v8 + v6 + 32);
      *a1 = v11;
      a1[1] = v7;
      a1[2] = v8;
      if ((v15 & 8) != 0)
      {
        unint64_t v41 = v6 + 1;
        unint64_t v42 = v7;
        unint64_t v43 = v8;
        swift_bridgeObjectRetain_n();
        unsigned __int8 v21 = sub_1B51FC9AC(&v41, v20);
        if (v37)
        {
          swift_bridgeObjectRelease();
          goto LABEL_54;
        }
        unsigned __int8 v22 = v21;
        uint64_t v37 = 0;
        swift_bridgeObjectRelease();
        unint64_t v11 = v41;
        unint64_t v23 = v43;
        if (!v22)
        {
          unint64_t v41 = 0;
          unint64_t v42 = 0xE000000000000000;
          sub_1B5372F98();
          sub_1B5372868();
          sub_1B5373018();
          sub_1B5372868();
          unint64_t v33 = v41;
          unint64_t v34 = v42;
          sub_1B51D4D34();
          swift_allocError();
          *long long v35 = 3;
          v35[1] = v11;
          _OWORD v35[2] = v33;
          v35[3] = v34;
          v35[4] = 0;
          swift_willThrow();
          goto LABEL_54;
        }
        unint64_t v24 = v42;
        swift_bridgeObjectRelease();
        *a1 = v11;
        a1[1] = v24;
        int64_t v39 = v24;
        a1[2] = v23;
        uint64_t v19 = v22 + 1;
        uint64_t v25 = sub_1B5372A88();
        *(void *)(v25 + 16) = v19;
        *(unsigned char *)(v25 + 32) = v15;
        memset((void *)(v25 + 33), v15, v22);
        uint64_t result = sub_1B51D5A1C(v25);
        unint64_t v8 = v23;
      }
      else
      {
        int64_t v39 = v7;
        uint64_t v16 = v44;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1B51E8EE0(0, *(void *)(v16 + 16) + 1, 1, (char *)v16);
          uint64_t v16 = result;
        }
        unint64_t v18 = *(void *)(v16 + 16);
        unint64_t v17 = *(void *)(v16 + 24);
        if (v18 >= v17 >> 1)
        {
          uint64_t result = (uint64_t)sub_1B51E8EE0((char *)(v17 > 1), v18 + 1, 1, (char *)v16);
          uint64_t v16 = result;
        }
        *(void *)(v16 + 16) = v18 + 1;
        *(unsigned char *)(v16 + v18 + 32) = v15;
        uint64_t v44 = v16;
        uint64_t v19 = 1;
      }
      uint64_t v26 = 1;
      if ((v15 & 0x10) == 0) {
        uint64_t v26 = 2;
      }
      uint64_t v27 = 3;
      if ((v15 & 0x10) != 0) {
        uint64_t v27 = 0;
      }
      if ((v15 & 2) == 0) {
        uint64_t v26 = v27;
      }
      uint64_t v28 = qword_1B538E020[v26] * v19;
      uint64_t v10 = v40 + v28;
      if (__OFADD__(v40, v28)) {
        goto LABEL_63;
      }
      if ((v15 & 4) != 0)
      {
        BOOL v29 = __OFADD__(v38, v19);
        v38 += v19;
        BOOL v30 = v29;
        if ((v15 & 0x20) != 0)
        {
          if (v30) {
            goto LABEL_67;
          }
        }
        else if (v30)
        {
          goto LABEL_66;
        }
      }
      else if ((v15 & 0x20) == 0)
      {
        BOOL v29 = __OFADD__(v38, 2 * v19);
        v38 += 2 * v19;
        if (v29) {
          goto LABEL_65;
        }
      }
      if (v9) {
        LOBYTE(v9) = 1;
      }
      else {
        int v9 = (v15 >> 6) & 1;
      }
      int64_t v7 = v39;
      v3 -= v19;
      if (v3 < 1) {
        break;
      }
      if (__OFSUB__(v39, v11)) {
        goto LABEL_64;
      }
      unint64_t v6 = v11;
      a1 = v36;
      if ((uint64_t)(v39 - v11) < 1) {
        goto LABEL_53;
      }
    }
    uint64_t result = v44;
    if (!v3) {
      return result;
    }
LABEL_56:
    swift_bridgeObjectRelease();
    sub_1B51DD5FC();
    swift_allocError();
    unsigned char *v32 = 5;
    return swift_willThrow();
  }
  unint64_t v11 = *a1;
LABEL_53:
  unint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1B5372F98();
  swift_bridgeObjectRelease();
  sub_1B51D4D34();
  swift_allocError();
  *uint64_t v31 = 0;
  v31[1] = v11;
  v31[2] = 0xD00000000000002ALL;
  v31[3] = 0x80000001B537BD00;
  v31[4] = 0;
  swift_willThrow();
LABEL_54:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B52572C4(uint64_t result, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, double a6)
{
  if (a3 < 1) {
    return result;
  }
  uint64_t v11 = result;
  uint64_t result = sub_1B52559A0((uint64_t)a2, (uint64_t)a2, 1, MEMORY[0x1E4FBC860], a3);
  if (v6) {
    return result;
  }
  uint64_t v12 = result;
  unint64_t v79 = a2[2];
  long long v75 = *(_OWORD *)a2;
  *(void *)&long long v76 = v79;
  swift_bridgeObjectRetain_n();
  unsigned __int16 v14 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v75, v13, 1);
  swift_bridgeObjectRelease();
  long long v78 = v75;
  unint64_t v79 = v76;
  sub_1B5256BB4((uint64_t *)&v78, v15, v14);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v16 = v79;
  *(_OWORD *)a2 = v78;
  a2[2] = v16;
  uint64_t v17 = *(void *)(v12 + 16);
  if (!v17)
  {
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  uint64_t v18 = *(void *)(v12 + 32 + 8 * v17 - 8);
  if (__OFADD__(v18, 1)) {
    goto LABEL_74;
  }
  uint64_t v19 = sub_1B5256E38(a2, v18 + 1);
  uint64_t v21 = v20;
  unint64_t v23 = sub_1B5256BB4((uint64_t *)a2, v22, v22);
  uint64_t v69 = v24;
  uint64_t v72 = v23;
  uint64_t v25 = sub_1B5256BB4((uint64_t *)a2, v24, v21);
  uint64_t v64 = v26;
  uint64_t v66 = (uint64_t)v25;
  sub_1B5201994(a4 + 32, (uint64_t)v80, &qword_1E9D479A0);
  uint64_t result = sub_1B5201994((uint64_t)v80, (uint64_t)v86, &qword_1E9D479A0);
  if (!v87) {
    goto LABEL_15;
  }
  long long v83 = v86[2];
  long long v84 = v86[3];
  uint64_t v85 = v87;
  long long v81 = v86[0];
  long long v82 = v86[1];
  uint64_t result = sub_1B5284728(v11);
  if ((~*(void *)&a6 & 0x7FF0000000000000) == 0) {
    goto LABEL_89;
  }
  if (a6 <= -9.22337204e18)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  uint64_t v27 = (uint64_t)v72;
  if (a6 >= 9.22337204e18)
  {
LABEL_91:
    __break(1u);
    return result;
  }
  uint64_t v71 = result - (uint64_t)a6;
  if (!__OFSUB__(result, (uint64_t)a6)) {
    goto LABEL_16;
  }
  __break(1u);
LABEL_15:
  uint64_t v71 = 0;
  uint64_t v27 = (uint64_t)v72;
LABEL_16:
  uint64_t v28 = *(void *)(v19 + 16);
  if (!v28) {
    goto LABEL_4;
  }
  uint64_t v68 = 0;
  unint64_t v29 = 0;
  unint64_t v30 = 0;
  uint64_t v61 = v19 + 32;
  uint64_t v62 = v19;
  uint64_t v58 = v28 - 1;
  uint64_t v59 = *(void *)(v19 + 16);
  while (2)
  {
    unint64_t v60 = v29;
    unint64_t v31 = v30;
    uint64_t v32 = v66;
    while (1)
    {
      if (v31 >= *(void *)(v62 + 16)) {
        goto LABEL_75;
      }
      char v33 = *(unsigned char *)(v61 + v31);
      unint64_t v63 = v31;
      if ((v33 & 2) != 0)
      {
        unint64_t v39 = a2[2];
        unint64_t v65 = v39;
        *(void *)&long long v75 = v27;
        *((void *)&v75 + 1) = v69;
        *(void *)&long long v76 = v39;
        swift_bridgeObjectRetain_n();
        if ((v33 & 0x10) != 0)
        {
          LOBYTE(v36) = sub_1B51FC9AC((unint64_t *)&v75, v40);
          swift_bridgeObjectRelease();
          uint64_t v36 = v36;
          uint64_t v38 = *((void *)&v75 + 1);
          uint64_t v73 = v75;
          uint64_t result = swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          swift_bridgeObjectRetain();
          sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          unsigned __int8 v42 = sub_1B51FC9AC((unint64_t *)&v75, v41);
          swift_bridgeObjectRelease();
          uint64_t v70 = *((void *)&v75 + 1);
          uint64_t v73 = v75;
          id v77 = (id)v42;
          sub_1B525523C(&v77, &v78);
          swift_bridgeObjectRelease();
          sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          swift_bridgeObjectRelease();
          uint64_t result = sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          uint64_t v36 = v78;
          uint64_t v38 = v70;
        }
        uint64_t v37 = v73;
      }
      else
      {
        unint64_t v34 = a2[2];
        unint64_t v65 = v34;
        if ((v33 & 0x10) != 0)
        {
          uint64_t v67 = v32;
          uint64_t v43 = v27;
          uint64_t result = sub_1B5259BD0(0, 0, 0, 0, 0);
          if (v69 < v43) {
            goto LABEL_79;
          }
          uint64_t v37 = v43;
          uint64_t v32 = v67;
          goto LABEL_40;
        }
        if (__OFSUB__(v69, v27)) {
          goto LABEL_81;
        }
        if (v69 - v27 <= 1)
        {
          *(void *)&long long v75 = 0;
          *((void *)&v75 + 1) = 0xE000000000000000;
          uint64_t v55 = v27;
          swift_bridgeObjectRetain_n();
          sub_1B5372F98();
          swift_bridgeObjectRelease();
          sub_1B51D4D34();
          swift_allocError();
          *char v56 = 0;
          v56[1] = v55;
          v56[2] = 0xD00000000000002ALL;
          v56[3] = 0x80000001B537C0C0;
          v56[4] = 0;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease_n();
        }
        if (v27 > 0x7FFFFFFFFFFFFFFDLL || v69 < v27 + 2) {
          goto LABEL_82;
        }
        if (v27 < 0) {
          goto LABEL_83;
        }
        unint64_t v35 = *(void *)(v34 + 16);
        if (v35 < v27 || v35 < v27 + 2) {
          goto LABEL_84;
        }
        uint64_t v36 = (__int16)(bswap32(*(unsigned __int16 *)(v34 + v27 + 32)) >> 16);
        uint64_t v37 = v27 + 2;
        uint64_t v38 = v69;
      }
      if (v38 < v37) {
        goto LABEL_77;
      }
      BOOL v44 = __OFADD__(v71, v36);
      v71 += v36;
      if (v44)
      {
LABEL_69:
        sub_1B51D4F28();
        swift_allocError();
        swift_willThrow();
        goto LABEL_4;
      }
      uint64_t v69 = v38;
LABEL_40:
      uint64_t v45 = v64;
      uint64_t v74 = v37;
      if ((v33 & 4) != 0)
      {
        *(void *)&long long v75 = v32;
        *((void *)&v75 + 1) = v64;
        *(void *)&long long v76 = v65;
        swift_bridgeObjectRetain_n();
        if ((v33 & 0x20) != 0)
        {
          LOBYTE(v47) = sub_1B51FC9AC((unint64_t *)&v75, v48);
          swift_bridgeObjectRelease();
          uint64_t v47 = v47;
          uint64_t v45 = *((void *)&v75 + 1);
          uint64_t v32 = v75;
          uint64_t result = swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          swift_bridgeObjectRetain();
          sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          unsigned __int8 v50 = sub_1B51FC9AC((unint64_t *)&v75, v49);
          swift_bridgeObjectRelease();
          uint64_t v45 = *((void *)&v75 + 1);
          uint64_t v32 = v75;
          id v77 = (id)v50;
          sub_1B525523C(&v77, &v78);
          swift_bridgeObjectRelease();
          sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          swift_bridgeObjectRelease();
          uint64_t result = sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          uint64_t v47 = v78;
        }
LABEL_54:
        if (v45 < v32) {
          goto LABEL_78;
        }
        goto LABEL_57;
      }
      if ((v33 & 0x20) == 0)
      {
        if (__OFSUB__(v64, v32)) {
          goto LABEL_85;
        }
        if (v64 - v32 > 1)
        {
          if (v32 > 0x7FFFFFFFFFFFFFFDLL || v64 < v32 + 2) {
            goto LABEL_86;
          }
          if (v32 < 0) {
            goto LABEL_87;
          }
          unint64_t v46 = *(void *)(v65 + 16);
          if (v46 < v32 || v46 < v32 + 2) {
            goto LABEL_88;
          }
          uint64_t v47 = (__int16)(bswap32(*(unsigned __int16 *)(v65 + v32 + 32)) >> 16);
          v32 += 2;
          goto LABEL_54;
        }
        *(void *)&long long v75 = 0;
        *((void *)&v75 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain_n();
        sub_1B5372F98();
        swift_bridgeObjectRelease();
        sub_1B51D4D34();
        swift_allocError();
        *BOOL v57 = 0;
        v57[1] = v32;
        v57[2] = 0xD00000000000002ALL;
        v57[3] = 0x80000001B537C0C0;
        v57[4] = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease_n();
      }
      uint64_t v47 = 0;
      uint64_t result = sub_1B5259BD0(0, 0, 0, 0, 0);
      if (v64 < v32) {
        goto LABEL_80;
      }
LABEL_57:
      BOOL v44 = __OFADD__(v68, v47);
      v68 += v47;
      if (v44) {
        goto LABEL_69;
      }
      uint64_t v66 = v32;
      uint64_t v51 = *a5;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *a5 = v51;
      uint64_t v64 = v45;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B51E8EEC(0, *(void *)(v51 + 16) + 1, 1, (char *)v51);
        uint64_t v51 = result;
        *a5 = result;
      }
      unint64_t v53 = *(void *)(v51 + 16);
      unint64_t v52 = *(void *)(v51 + 24);
      if (v53 >= v52 >> 1)
      {
        uint64_t result = (uint64_t)sub_1B51E8EEC((char *)(v52 > 1), v53 + 1, 1, (char *)v51);
        uint64_t v51 = result;
      }
      *(void *)(v51 + 16) = v53 + 1;
      unint64_t v54 = v51 + 16 * v53;
      *(double *)(v54 + 32) = (double)v71;
      *(double *)(v54 + 40) = (double)v68;
      *a5 = v51;
      if (v60 >= *(void *)(v12 + 16)) {
        goto LABEL_76;
      }
      uint64_t v27 = v74;
      if (v63 == *(void *)(v12 + 32 + 8 * v60)) {
        break;
      }
      unint64_t v31 = v63 + 1;
      if (v59 == v63 + 1) {
        goto LABEL_4;
      }
    }
    unint64_t v29 = v60 + 1;
    unint64_t v30 = v63 + 1;
    if (v58 != v63) {
      continue;
    }
    break;
  }
LABEL_4:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5258110(uint64_t result, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  if (a3 >= 1)
  {
    uint64_t v13 = result;
    uint64_t result = sub_1B52559A0((uint64_t)a2, (uint64_t)a2, 1, MEMORY[0x1E4FBC860], a3);
    if (!v7)
    {
      uint64_t v14 = result;
      unint64_t v83 = a2[2];
      long long v79 = *(_OWORD *)a2;
      *(void *)&long long v80 = v83;
      swift_bridgeObjectRetain_n();
      unsigned __int16 v16 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v79, v15, 1);
      swift_bridgeObjectRelease();
      long long v82 = v79;
      unint64_t v83 = v80;
      sub_1B5256BB4((uint64_t *)&v82, v17, v16);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v18 = v83;
      *(_OWORD *)a2 = v82;
      a2[2] = v18;
      uint64_t v19 = *(void *)(v14 + 16);
      if (v19)
      {
        uint64_t v20 = v14 + 32;
        uint64_t v21 = *(void *)(v14 + 32 + 8 * v19 - 8);
        if (!__OFADD__(v21, 1))
        {
          uint64_t v22 = sub_1B5256E38(a2, v21 + 1);
          uint64_t v24 = v23;
          uint64_t v78 = v22;
          uint64_t v26 = sub_1B5256BB4((uint64_t *)a2, v25, v25);
          uint64_t v75 = v27;
          uint64_t v76 = (uint64_t)v26;
          uint64_t v28 = (uint64_t)sub_1B5256BB4((uint64_t *)a2, v27, v24);
          uint64_t v71 = v29;
          sub_1B5201994(a4 + 32, (uint64_t)v84, &qword_1E9D479A0);
          uint64_t result = sub_1B5201994((uint64_t)v84, (uint64_t)v90, &qword_1E9D479A0);
          if (!v91) {
            goto LABEL_14;
          }
          long long v87 = v90[2];
          long long v88 = v90[3];
          uint64_t v89 = v91;
          long long v85 = v90[0];
          long long v86 = v90[1];
          uint64_t result = sub_1B5284728(v13);
          if ((~*(void *)&a7 & 0x7FF0000000000000) != 0)
          {
            uint64_t v30 = v78;
            if (a7 > -9.22337204e18)
            {
              if (a7 < 9.22337204e18)
              {
                uint64_t v31 = result - (uint64_t)a7;
                if (!__OFSUB__(result, (uint64_t)a7)) {
                  goto LABEL_15;
                }
                __break(1u);
LABEL_14:
                uint64_t v31 = 0;
                uint64_t v30 = v78;
LABEL_15:
                uint64_t v32 = *(void *)(v30 + 16);
                if (!v32) {
                  goto LABEL_75;
                }
                uint64_t v70 = 0;
                unint64_t v33 = 0;
                unint64_t v34 = 0;
                uint64_t v68 = v30 + 32;
                uint64_t v64 = (float64x2_t *)(a6 + 152);
                uint64_t v63 = v32 - 1;
                uint64_t v65 = *(void *)(v30 + 16);
                while (1)
                {
                  char v35 = 1;
                  unint64_t v36 = v34;
                  unint64_t v67 = v33;
                  while (1)
                  {
                    if (v36 >= *(void *)(v78 + 16)) {
                      goto LABEL_81;
                    }
                    char v37 = *(unsigned char *)(v68 + v36);
                    if (v35)
                    {
                      *(void *)(a6 + 128) = 0;
                      *(void *)(a6 + 136) = 0;
                      *(unsigned char *)(a6 + 144) = 1;
                      v64->f64[0] = 0.0;
                      *(void *)(a6 + 160) = 0;
                      *(unsigned char *)(a6 + 168) = 1;
                    }
                    char v73 = v37;
                    unint64_t v69 = v36;
                    if ((v37 & 2) != 0)
                    {
                      unint64_t v44 = a2[2];
                      unint64_t v74 = v44;
                      *(void *)&long long v79 = v76;
                      *((void *)&v79 + 1) = v75;
                      *(void *)&long long v80 = v44;
                      if ((v37 & 0x10) != 0)
                      {
                        swift_bridgeObjectRetain_n();
                        LOBYTE(v41) = sub_1B51FC9AC((unint64_t *)&v79, v47);
                        swift_bridgeObjectRelease();
                        uint64_t v41 = v41;
                        uint64_t v40 = *((void *)&v79 + 1);
                        uint64_t v77 = v79;
                        uint64_t result = swift_bridgeObjectRelease();
                      }
                      else
                      {
                        swift_bridgeObjectRetain_n();
                        sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        swift_bridgeObjectRetain();
                        sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        unsigned __int8 v46 = sub_1B51FC9AC((unint64_t *)&v79, v45);
                        swift_bridgeObjectRelease();
                        uint64_t v40 = *((void *)&v79 + 1);
                        uint64_t v77 = v79;
                        id v81 = (id)v46;
                        sub_1B525523C(&v81, &v82);
                        swift_bridgeObjectRelease();
                        sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        swift_bridgeObjectRelease();
                        uint64_t result = sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        uint64_t v41 = v82;
                      }
                      uint64_t v42 = v77;
                      uint64_t v43 = v71;
                      char v37 = v73;
                    }
                    else
                    {
                      unint64_t v38 = a2[2];
                      unint64_t v74 = v38;
                      if ((v37 & 0x10) != 0)
                      {
                        uint64_t result = sub_1B5259BD0(0, 0, 0, 0, 0);
                        uint64_t v42 = v76;
                        if (v75 < v76) {
                          goto LABEL_85;
                        }
                        uint64_t v43 = v71;
                        char v37 = v73;
                        goto LABEL_41;
                      }
                      if (__OFSUB__(v75, v76)) {
                        goto LABEL_87;
                      }
                      if (v75 - v76 <= 1)
                      {
                        *(void *)&long long v79 = 0;
                        *((void *)&v79 + 1) = 0xE000000000000000;
                        uint64_t v28 = v76;
LABEL_78:
                        swift_bridgeObjectRetain_n();
                        sub_1B5372F98();
                        swift_bridgeObjectRelease();
                        sub_1B51D4D34();
                        swift_allocError();
                        *uint64_t v62 = 0;
                        v62[1] = v28;
                        v62[2] = 0xD00000000000002ALL;
                        v62[3] = 0x80000001B537C0C0;
                        v62[4] = 0;
                        swift_willThrow();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        return swift_bridgeObjectRelease_n();
                      }
                      if (v76 > 0x7FFFFFFFFFFFFFFDLL || v75 < v76 + 2) {
                        goto LABEL_88;
                      }
                      if (v76 < 0) {
                        goto LABEL_89;
                      }
                      unint64_t v39 = *(void *)(v38 + 16);
                      if (v39 < v76 || v39 < v76 + 2) {
                        goto LABEL_90;
                      }
                      uint64_t v40 = v75;
                      uint64_t v41 = (__int16)(bswap32(*(unsigned __int16 *)(v38 + v76 + 32)) >> 16);
                      uint64_t v42 = v76 + 2;
                      uint64_t v43 = v71;
                    }
                    if (v40 < v42) {
                      goto LABEL_83;
                    }
                    uint64_t v48 = v40;
                    BOOL v49 = __OFADD__(v31, v41);
                    v31 += v41;
                    uint64_t v20 = v14 + 32;
                    if (v49) {
                      goto LABEL_74;
                    }
                    uint64_t v75 = v48;
LABEL_41:
                    uint64_t v76 = v42;
                    if ((v37 & 4) != 0)
                    {
                      *(void *)&long long v79 = v28;
                      *((void *)&v79 + 1) = v43;
                      *(void *)&long long v80 = v74;
                      if ((v37 & 0x20) != 0)
                      {
                        swift_bridgeObjectRetain_n();
                        LOBYTE(v51) = sub_1B51FC9AC((unint64_t *)&v79, v54);
                        swift_bridgeObjectRelease();
                        uint64_t v51 = v51;
                        uint64_t v55 = *((void *)&v79 + 1);
                        uint64_t v66 = (uint64_t *)v79;
                        uint64_t result = swift_bridgeObjectRelease();
                        uint64_t v43 = v55;
                      }
                      else
                      {
                        swift_bridgeObjectRetain_n();
                        sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        swift_bridgeObjectRetain();
                        sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        unsigned __int8 v53 = sub_1B51FC9AC((unint64_t *)&v79, v52);
                        swift_bridgeObjectRelease();
                        uint64_t v72 = *((void *)&v79 + 1);
                        uint64_t v66 = (uint64_t *)v79;
                        id v81 = (id)v53;
                        sub_1B525523C(&v81, &v82);
                        swift_bridgeObjectRelease();
                        sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        swift_bridgeObjectRelease();
                        uint64_t result = sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
                        uint64_t v51 = v82;
                        uint64_t v43 = v72;
                      }
                      uint64_t v28 = (uint64_t)v66;
                      char v37 = v73;
                    }
                    else
                    {
                      if ((v37 & 0x20) != 0)
                      {
                        uint64_t result = sub_1B5259BD0(0, 0, 0, 0, 0);
                        if (v71 < v28) {
                          goto LABEL_86;
                        }
                        uint64_t v56 = v70;
                        char v37 = v73;
                        goto LABEL_61;
                      }
                      if (__OFSUB__(v43, v28)) {
                        goto LABEL_91;
                      }
                      if (v43 - v28 <= 1)
                      {
                        *(void *)&long long v79 = 0;
                        *((void *)&v79 + 1) = 0xE000000000000000;
                        goto LABEL_78;
                      }
                      if (v28 > 0x7FFFFFFFFFFFFFFDLL || v43 < v28 + 2) {
                        goto LABEL_92;
                      }
                      if (v28 < 0) {
                        goto LABEL_93;
                      }
                      unint64_t v50 = *(void *)(v74 + 16);
                      if (v50 < v28 || v50 < v28 + 2) {
                        goto LABEL_94;
                      }
                      uint64_t v51 = (__int16)(bswap32(*(unsigned __int16 *)(v74 + v28 + 32)) >> 16);
                      v28 += 2;
                    }
                    if (v43 < v28) {
                      goto LABEL_84;
                    }
                    uint64_t v56 = v70 + v51;
                    if (__OFADD__(v70, v51))
                    {
LABEL_74:
                      sub_1B51D4F28();
                      swift_allocError();
                      swift_willThrow();
                      goto LABEL_75;
                    }
                    uint64_t v71 = v43;
LABEL_61:
                    uint64_t v70 = v56;
                    float64x2_t v57 = vaddq_f64(*(float64x2_t *)(a6 + 240), vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(a6 + 176), (double)v31), *(float64x2_t *)(a6 + 208), (double)v56));
                    uint64_t result = sub_1B5253E9C((v37 & 1) == 0, a5, v57.f64[0], v57.f64[1]);
                    unint64_t v58 = v67;
                    if (v67 >= *(void *)(v14 + 16)) {
                      goto LABEL_82;
                    }
                    if (v69 == *(void *)(v20 + 8 * v67)) {
                      break;
                    }
                    char v35 = 0;
                    unint64_t v36 = v69 + 1;
                    if (v65 == v69 + 1) {
                      goto LABEL_75;
                    }
                  }
                  if ((*(unsigned char *)(a6 + 144) & 1) == 0 && *(unsigned char *)(a6 + 168) != 1)
                  {
                    float64x2_t v59 = *(float64x2_t *)(a6 + 128);
                    if (*(unsigned char *)(a5 + 32))
                    {
                      float64x2_t v60 = *(float64x2_t *)(a6 + 128);
                    }
                    else
                    {
                      float64x2_t v60 = (float64x2_t)vbslq_s8((int8x16_t)vcgeq_f64(*(float64x2_t *)(a5 + 16), v59), *(int8x16_t *)(a5 + 16), (int8x16_t)v59);
                      float64x2_t v59 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v59, *(float64x2_t *)a5), *(int8x16_t *)a5, (int8x16_t)v59);
                    }
                    uint64_t v20 = v14 + 32;
                    int8x16_t v61 = vbslq_s8((int8x16_t)vcgeq_f64(v60, *v64), (int8x16_t)v60, *(int8x16_t *)v64);
                    *(int8x16_t *)a5 = vbslq_s8((int8x16_t)vcgtq_f64(*v64, v59), (int8x16_t)v59, *(int8x16_t *)v64);
                    *(int8x16_t *)(a5 + 16) = v61;
                    *(unsigned char *)(a5 + 32) = 0;
                    unint64_t v58 = v67;
                  }
                  unint64_t v34 = v69 + 1;
                  unint64_t v33 = v58 + 1;
                  if (v63 == v69)
                  {
LABEL_75:
                    swift_bridgeObjectRelease();
                    return swift_bridgeObjectRelease();
                  }
                }
              }
              goto LABEL_97;
            }
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
            return result;
          }
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
  }
  return result;
}

void *sub_1B5258F1C(void *result, unint64_t *a2, uint64_t a3, uint64_t a4, id *a5, uint64_t a6, double a7)
{
  if (a3 < 1) {
    return result;
  }
  uint64_t v13 = (uint64_t)result;
  uint64_t result = (void *)sub_1B52559A0((uint64_t)a2, (uint64_t)a2, 1, MEMORY[0x1E4FBC860], a3);
  if (v7) {
    return result;
  }
  uint64_t v14 = result;
  unint64_t v75 = a2[2];
  long long v71 = *(_OWORD *)a2;
  *(void *)&long long v72 = v75;
  swift_bridgeObjectRetain_n();
  unsigned __int16 v16 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v71, v15, 1);
  swift_bridgeObjectRelease();
  long long v74 = v71;
  unint64_t v75 = v72;
  sub_1B5256BB4((uint64_t *)&v74, v17, v16);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  unint64_t v18 = v75;
  *(_OWORD *)a2 = v74;
  a2[2] = v18;
  uint64_t v19 = v14[2];
  if (!v19)
  {
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v20 = v14[v19 + 3];
  if (__OFADD__(v20, 1)) {
    goto LABEL_60;
  }
  uint64_t v21 = sub_1B5256E38(a2, v20 + 1);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v70 = v21;
  if (v26) {
    objc_msgSend(*a5, sel_setOverlaps_, 1);
  }
  uint64_t v27 = sub_1B5256BB4((uint64_t *)a2, v22, v23);
  uint64_t v67 = v28;
  uint64_t v29 = sub_1B5256BB4((uint64_t *)a2, v28, v25);
  uint64_t v65 = v30;
  sub_1B5201994(a4 + 32, (uint64_t)v76, &qword_1E9D479A0);
  uint64_t result = (void *)sub_1B5201994((uint64_t)v76, (uint64_t)v82, &qword_1E9D479A0);
  int8x16_t v61 = v27;
  if (!v83)
  {
    uint64_t v69 = 0;
    uint64_t v32 = v70;
    uint64_t v31 = v65;
    goto LABEL_18;
  }
  long long v79 = v82[2];
  long long v80 = v82[3];
  uint64_t v81 = v83;
  long long v77 = v82[0];
  long long v78 = v82[1];
  uint64_t result = (void *)sub_1B5284728(v13);
  if ((~*(void *)&a7 & 0x7FF0000000000000) == 0) {
    goto LABEL_67;
  }
  if (a7 <= -9.22337204e18)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (a7 >= 9.22337204e18)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v69 = (uint64_t)result - (uint64_t)a7;
  uint64_t v31 = v65;
  if (__OFSUB__(result, (uint64_t)a7))
  {
LABEL_70:
    __break(1u);
    return result;
  }
  uint64_t v32 = v70;
LABEL_18:
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v63 = 0;
    uint64_t v64 = v29;
    unint64_t v34 = 0;
    unint64_t v35 = 0;
    uint64_t v60 = v32 + 32;
    unint64_t v36 = a2[2];
    uint64_t v58 = *(void *)(v32 + 16);
    uint64_t v57 = v33 - 1;
    unint64_t v66 = v36;
LABEL_20:
    char v37 = 1;
    unint64_t v59 = v34;
    while (1)
    {
      if (v35 >= *(void *)(v32 + 16)) {
        goto LABEL_61;
      }
      char v38 = *(unsigned char *)(v60 + v35);
      if (v37)
      {
        *(void *)(a6 + 128) = 0;
        *(void *)(a6 + 136) = 0;
        *(unsigned char *)(a6 + 144) = 1;
        *(void *)(a6 + 152) = 0;
        *(void *)(a6 + 160) = 0;
        *(unsigned char *)(a6 + 168) = 1;
      }
      unint64_t v62 = v35;
      if ((v38 & 2) == 0) {
        break;
      }
      if ((v38 & 0x10) != 0)
      {
        uint64_t v39 = v31;
        *(void *)&long long v71 = v61;
        *((void *)&v71 + 1) = v67;
        *(void *)&long long v72 = v36;
        swift_bridgeObjectRetain_n();
        LOBYTE(v41) = sub_1B51FC9AC((unint64_t *)&v71, v46);
        swift_bridgeObjectRelease();
        uint64_t v41 = v41;
LABEL_31:
        uint64_t v45 = *((void *)&v71 + 1);
        unint64_t v44 = (uint64_t *)v71;
        uint64_t result = (void *)swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      *(void *)&long long v71 = v61;
      *((void *)&v71 + 1) = v67;
      *(void *)&long long v72 = v36;
      swift_bridgeObjectRetain_n();
      sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      swift_bridgeObjectRetain();
      sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      unsigned __int8 v43 = sub_1B51FC9AC((unint64_t *)&v71, v42);
      uint64_t v39 = v31;
      swift_bridgeObjectRelease();
      uint64_t v68 = *((void *)&v71 + 1);
      unint64_t v44 = (uint64_t *)v71;
      id v73 = (id)v43;
      sub_1B525523C(&v73, &v74);
      swift_bridgeObjectRelease();
      sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      swift_bridgeObjectRelease();
      uint64_t result = (void *)sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
      uint64_t v41 = v74;
      uint64_t v45 = v68;
LABEL_32:
      int8x16_t v61 = v44;
      if (v45 < (uint64_t)v44) {
        goto LABEL_63;
      }
      BOOL v47 = __OFADD__(v69, v41);
      v69 += v41;
      unint64_t v48 = v66;
      if (v47)
      {
LABEL_58:
        sub_1B51D4F28();
        swift_allocError();
        swift_willThrow();
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v67 = v45;
      uint64_t v31 = v39;
LABEL_37:
      if ((v38 & 4) != 0)
      {
        if ((v38 & 0x20) != 0)
        {
          *(void *)&long long v71 = v64;
          *((void *)&v71 + 1) = v31;
          *(void *)&long long v72 = v48;
          swift_bridgeObjectRetain_n();
          LOBYTE(v50) = sub_1B51FC9AC((unint64_t *)&v71, v54);
          swift_bridgeObjectRelease();
          uint64_t v50 = v50;
LABEL_44:
          uint64_t v31 = *((void *)&v71 + 1);
          unsigned __int8 v53 = (uint64_t *)v71;
          uint64_t result = (void *)swift_bridgeObjectRelease();
        }
        else
        {
          *(void *)&long long v71 = v64;
          *((void *)&v71 + 1) = v31;
          *(void *)&long long v72 = v48;
          swift_bridgeObjectRetain_n();
          sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          swift_bridgeObjectRetain();
          sub_1B5259BC0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          unsigned __int8 v52 = sub_1B51FC9AC((unint64_t *)&v71, v51);
          swift_bridgeObjectRelease();
          uint64_t v31 = *((void *)&v71 + 1);
          unsigned __int8 v53 = (uint64_t *)v71;
          id v73 = (id)v52;
          sub_1B525523C(&v73, &v74);
          swift_bridgeObjectRelease();
          sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          swift_bridgeObjectRelease();
          uint64_t result = (void *)sub_1B5259BD0(1, (uint64_t)sub_1B525523C, 0, 1, 0);
          uint64_t v50 = v74;
        }
        if (v31 < (uint64_t)v53) {
          goto LABEL_64;
        }
        goto LABEL_48;
      }
      if ((v38 & 0x20) == 0)
      {
        *(void *)&long long v71 = v64;
        *((void *)&v71 + 1) = v31;
        *(void *)&long long v72 = v48;
        swift_bridgeObjectRetain_n();
        LOWORD(v50) = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v71, v49, 1);
        swift_bridgeObjectRelease();
        uint64_t v50 = (__int16)v50;
        goto LABEL_44;
      }
      uint64_t v50 = 0;
      uint64_t result = (void *)sub_1B5259BD0(0, 0, 0, 0, 0);
      unsigned __int8 v53 = v64;
      if (v31 < (uint64_t)v64) {
        goto LABEL_66;
      }
LABEL_48:
      uint64_t v55 = v63 + v50;
      if (__OFADD__(v63, v50)) {
        goto LABEL_58;
      }
      v63 += v50;
      uint64_t v64 = v53;
      float64x2_t v56 = vaddq_f64(*(float64x2_t *)(a6 + 240), vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(a6 + 176), (double)v69), *(float64x2_t *)(a6 + 208), (double)v55));
      uint64_t result = (void *)sub_1B5254068((v38 & 1) == 0, a5, v56.f64[0], v56.f64[1]);
      if (v59 >= v14[2]) {
        goto LABEL_62;
      }
      uint64_t v32 = v70;
      unint64_t v36 = v66;
      if (v62 == v14[v59 + 4])
      {
        if ((*(unsigned char *)(a6 + 144) & 1) == 0 && *(unsigned char *)(a6 + 168) != 1) {
          objc_msgSend(*a5, sel_quadCurveTo_control_, *(double *)(a6 + 128), *(double *)(a6 + 136), *(double *)(a6 + 152), *(double *)(a6 + 160));
        }
        unint64_t v35 = v62 + 1;
        uint64_t result = objc_msgSend(*a5, sel_endPath, v57);
        unint64_t v34 = v59 + 1;
        uint64_t v32 = v70;
        unint64_t v36 = v66;
        if (v57 != v62) {
          goto LABEL_20;
        }
        goto LABEL_4;
      }
      char v37 = 0;
      unint64_t v35 = v62 + 1;
      if (v58 == v62 + 1) {
        goto LABEL_4;
      }
    }
    if ((v38 & 0x10) != 0)
    {
      uint64_t result = (void *)sub_1B5259BD0(0, 0, 0, 0, 0);
      if (v67 < (uint64_t)v61) {
        goto LABEL_65;
      }
      unint64_t v48 = v66;
      goto LABEL_37;
    }
    uint64_t v39 = v31;
    *(void *)&long long v71 = v61;
    *((void *)&v71 + 1) = v67;
    *(void *)&long long v72 = v36;
    swift_bridgeObjectRetain_n();
    LOWORD(v41) = (unsigned __int16)sub_1B51F3F70((uint64_t *)&v71, v40, 1);
    swift_bridgeObjectRelease();
    uint64_t v41 = (__int16)v41;
    goto LABEL_31;
  }
LABEL_4:
  swift_bridgeObjectRelease();
  return (void *)swift_bridgeObjectRelease();
}

uint64_t sub_1B5259BC0(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) == 0) {
    return sub_1B5200F58(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B5259BD0(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) == 0) {
    return sub_1B5200F20(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B5259BE0(unint64_t a1, unint64_t a2, char a3)
{
  return sub_1B5253D20(a1, a2, a3, v3[4], v3[5], v3[2], v3[3]);
}

uint64_t sub_1B5259C00()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

double sub_1B5259C10@<D0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  double result = *a1;
  uint64_t v4 = *(void *)(v2 + 16);
  *(double *)a2 = *a1;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v4;
  *(double *)(a2 + 24) = result;
  return result;
}

uint64_t *sub_1B5259C24(uint64_t *a1)
{
  return sub_1B5250F68(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), ((unint64_t)*(unsigned __int16 *)(v1 + 58) << 16) | ((unint64_t)*(unsigned int *)(v1 + 60) << 32) | *(unsigned __int8 *)(v1 + 56), *(_WORD *)(v1 + 64), *(unint64_t **)(v1 + 72), *(void *)(v1 + 80));
}

__n128 __swift_memcpy80_16(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CompositeGlyphEntry(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CompositeGlyphEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositeGlyphEntry()
{
  return &type metadata for CompositeGlyphEntry;
}

ValueMetadata *type metadata accessor for SimpleGlyphFlags()
{
  return &type metadata for SimpleGlyphFlags;
}

unint64_t sub_1B5259D58()
{
  unint64_t result = qword_1E9D484B0;
  if (!qword_1E9D484B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484B0);
  }
  return result;
}

unint64_t sub_1B5259DB0()
{
  unint64_t result = qword_1E9D484B8;
  if (!qword_1E9D484B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484B8);
  }
  return result;
}

unint64_t sub_1B5259E08()
{
  unint64_t result = qword_1E9D484C0;
  if (!qword_1E9D484C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484C0);
  }
  return result;
}

unint64_t sub_1B5259E60()
{
  unint64_t result = qword_1E9D484C8;
  if (!qword_1E9D484C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CompositeGlyphEntry.ArgumentInterpretation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5259F80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositeGlyphEntry.ArgumentInterpretation()
{
  return &type metadata for CompositeGlyphEntry.ArgumentInterpretation;
}

ValueMetadata *type metadata accessor for CompositeGlyphFlags()
{
  return &type metadata for CompositeGlyphFlags;
}

unint64_t sub_1B5259FCC()
{
  unint64_t result = qword_1E9D484D0;
  if (!qword_1E9D484D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484D0);
  }
  return result;
}

unint64_t sub_1B525A024()
{
  unint64_t result = qword_1E9D484D8;
  if (!qword_1E9D484D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484D8);
  }
  return result;
}

unint64_t sub_1B525A07C()
{
  unint64_t result = qword_1E9D484E0;
  if (!qword_1E9D484E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484E0);
  }
  return result;
}

unint64_t sub_1B525A0D4()
{
  unint64_t result = qword_1E9D484E8;
  if (!qword_1E9D484E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484E8);
  }
  return result;
}

unint64_t sub_1B525A12C()
{
  unint64_t result = qword_1E9D484F0;
  if (!qword_1E9D484F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484F0);
  }
  return result;
}

uint64_t TTFContainer.init(data:residence:)(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1B525C890(a1, a2, a3);
}

char *sub_1B525A19C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t result = (char *)swift_bridgeObjectRetain();
  unsigned int v4 = (char *)MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; ; i += 16)
  {
    uint64_t v6 = *(void *)(a1 + i);
    uint64_t v7 = *(void *)(v6 + 16);
    int64_t v8 = *((void *)v4 + 2);
    int64_t v9 = v8 + v7;
    if (__OFADD__(v8, v7)) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v9 <= *((void *)v4 + 3) >> 1)
    {
      if (*(void *)(v6 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v8 <= v9) {
        int64_t v10 = v8 + v7;
      }
      else {
        int64_t v10 = v8;
      }
      unint64_t result = sub_1B51E86F8(result, v10, 1, v4);
      unsigned int v4 = result;
      if (*(void *)(v6 + 16))
      {
LABEL_14:
        if ((*((void *)v4 + 3) >> 1) - *((void *)v4 + 2) < v7) {
          goto LABEL_23;
        }
        unint64_t result = (char *)swift_arrayInitWithCopy();
        if (v7)
        {
          uint64_t v11 = *((void *)v4 + 2);
          BOOL v12 = __OFADD__(v11, v7);
          uint64_t v13 = v11 + v7;
          if (v12) {
            goto LABEL_24;
          }
          *((void *)v4 + 2) = v13;
        }
        goto LABEL_4;
      }
    }
    if (v7) {
      goto LABEL_22;
    }
LABEL_4:
    unint64_t result = (char *)swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

FontParser::TTFContainer __swiftcall TTFContainer.init(constructed:)(Swift::OpaquePointer constructed)
{
  FontParser::FontDataResidence v1 = FontParser_FontDataResidence_inMemory;
  result.fonts = constructed;
  result.dataResidence = v1;
  return result;
}

uint64_t TTFContainer.encoded()(uint64_t a1)
{
  unint64_t v3 = *(void *)(a1 + 16);
  sub_1B525A53C(v3);
  if (v1)
  {
    sub_1B51D4C64(0, 0xC000000000000000);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = 32;
      do
      {
        memcpy(__dst, (const void *)(a1 + v5), 0x1A4uLL);
        sub_1B51DD4E8(__dst);
        sub_1B525A6E8(__dst);
        sub_1B51DD650(__dst);
        v5 += 424;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    return sub_1B525AE64();
  }
}

uint64_t sub_1B525A414(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B51DA94C((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1B525C044(v5);
  *a1 = v2;
  return result;
}

BOOL static TTFFileError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TTFFileError.hash(into:)()
{
  return sub_1B5373308();
}

uint64_t TTFFileError.hashValue.getter()
{
  return sub_1B5373358();
}

uint64_t TTFContainer.dataResidence.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t TTFContainer.dataResidence.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*TTFContainer.dataResidence.modify())()
{
  return nullsub_1;
}

uint64_t TTFContainer.containerType.getter()
{
  return 0;
}

uint64_t sub_1B525A53C(unint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (a1 == 1)
  {
    unsigned int v12 = 256;
    uint64_t result = sub_1B5372388();
    v1[3] = 0;
    *((unsigned char *)v1 + 32) = 1;
  }
  else
  {
    sub_1B52189C4("ttcf", 4, (int *)&v12);
    unsigned int v12 = bswap32(v12);
    sub_1B5372388();
    unsigned int v12 = 256;
    sub_1B5372388();
    if (HIDWORD(a1))
    {
      sub_1B51D4ED4();
      swift_allocError();
      *unsigned int v4 = 1;
      return swift_willThrow();
    }
    else
    {
      unsigned int v12 = bswap32(a1);
      sub_1B5372388();
      uint64_t v5 = *v1;
      unint64_t v6 = v1[1];
      uint64_t v7 = 0;
      switch(v6 >> 62)
      {
        case 1uLL:
          LODWORD(v7) = HIDWORD(v5) - v5;
          if (__OFSUB__(HIDWORD(v5), v5))
          {
            __break(1u);
LABEL_12:
            __break(1u);
          }
          uint64_t v7 = (int)v7;
LABEL_10:
          v1[3] = v7;
          *((unsigned char *)v1 + 32) = 0;
          uint64_t result = sub_1B5244D60(0, 4 * a1);
          break;
        case 2uLL:
          uint64_t v10 = v5 + 16;
          uint64_t v9 = *(void *)(v5 + 16);
          uint64_t v8 = *(void *)(v10 + 8);
          BOOL v11 = __OFSUB__(v8, v9);
          uint64_t v7 = v8 - v9;
          if (!v11) {
            goto LABEL_10;
          }
          goto LABEL_12;
        case 3uLL:
          goto LABEL_10;
        default:
          uint64_t v7 = BYTE6(v6);
          goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t sub_1B525A6E8(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  if (v1[4]) {
    goto LABEL_13;
  }
  uint64_t v5 = v1[3];
  uint64_t v6 = v5 + 4;
  if (__OFADD__(v5, 4))
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v6 < v5)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
  }
  uint64_t v7 = *v1;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(v7) - v7;
      if (__OFSUB__(HIDWORD(v7), v7)) {
        goto LABEL_53;
      }
      unint64_t v8 = (int)v8;
LABEL_9:
      long long v55 = xmmword_1B538BFE0;
      if (HIDWORD(v8))
      {
        sub_1B51D4ED4();
        swift_allocError();
        *uint64_t v13 = 1;
        swift_willThrow();
        return sub_1B51D4C64(v55, *((unint64_t *)&v55 + 1));
      }
LABEL_12:
      sub_1B5372388();
      sub_1B528417C(v55, *((unint64_t *)&v55 + 1));
      sub_1B51D4C64(v55, *((unint64_t *)&v55 + 1));
      v1[3] = v6;
      *((unsigned char *)v1 + 32) = 0;
      break;
    case 2uLL:
      uint64_t v11 = v7 + 16;
      uint64_t v10 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v11 + 8);
      BOOL v12 = __OFSUB__(v9, v10);
      unint64_t v8 = v9 - v10;
      if (!v12) {
        goto LABEL_9;
      }
      goto LABEL_54;
    default:
      long long v55 = xmmword_1B538BFE0;
      goto LABEL_12;
  }
LABEL_13:
  uint64_t v54 = *a1;
  uint64_t v15 = v54;
  sub_1B51DD4E8(a1);
  sub_1B51DFE7C((uint64_t)&v54);
  uint64_t v16 = sub_1B525CCA0(v15, a1);
  sub_1B51DD650(a1);
  sub_1B51DFEA8((uint64_t)&v54);
  if (*(void *)(v16 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47EB0);
    uint64_t v17 = sub_1B5373138();
  }
  else
  {
    uint64_t v17 = MEMORY[0x1E4FBC868];
  }
  *(void *)&long long v55 = v17;
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_1B521C3D0(v18, 1, &v55);
  if (v2)
  {
    swift_unexpectedError();
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1B525AE34);
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = v55;
  unint64_t v20 = *(void *)(v55 + 16);
  if (!v20)
  {
    swift_release();
    return sub_1B5244D60(0, 8);
  }
  unint64_t v21 = __clz(v20) ^ 0x3F;
  if (v21 >= 0x3B)
  {
    sub_1B51D4F28();
    swift_allocError();
LABEL_25:
    swift_willThrow();
    return swift_release();
  }
  if (v20 >= 0x10000) {
    goto LABEL_24;
  }
  uint64_t v22 = 16 << v21;
  LOWORD(v55) = bswap32(v20) >> 16;
  sub_1B5372388();
  if ((unint64_t)(16 << v21) >= 0x10000
    || (LOWORD(v55) = bswap32(v22) >> 16,
        sub_1B5372388(),
        LOWORD(v55) = (_WORD)v21 << 8,
        sub_1B5372388(),
        unint64_t v23 = 16 * v20 - v22,
        v23 >= 0x10000))
  {
LABEL_24:
    sub_1B51D4ED4();
    swift_allocError();
    *uint64_t v24 = 1;
    goto LABEL_25;
  }
  LOWORD(v55) = bswap32(v23) >> 16;
  sub_1B5372388();
  swift_retain();
  uint64_t v25 = swift_bridgeObjectRetain();
  char v26 = sub_1B521CC40(v25);
  swift_release();
  *(void *)&long long v55 = v26;
  sub_1B525A414((char **)&v55);
  swift_release();
  uint64_t v27 = v55;
  uint64_t v52 = *(void *)(v55 + 16);
  if (!v52)
  {
LABEL_48:
    swift_release();
    return swift_release();
  }
  uint64_t v28 = 0;
  uint64_t v50 = v19;
  uint64_t v51 = v55;
  while (2)
  {
    if (!*(void *)(v19 + 16)) {
      goto LABEL_51;
    }
    unsigned int v29 = *(_DWORD *)(v27 + 4 * v28 + 32);
    uint64_t v30 = sub_1B5230664(v29);
    if ((v31 & 1) == 0) {
      goto LABEL_52;
    }
    uint64_t v32 = (uint64_t *)(*(void *)(v19 + 56) + 16 * v30);
    uint64_t v33 = *v32;
    unint64_t v34 = v32[1];
    *(void *)&long long v55 = v33;
    *((void *)&v55 + 1) = v34;
    sub_1B51D4BB8(v33, v34);
    if (v29 == 1751474532)
    {
      sub_1B51D4BB8(v33, v34);
      sub_1B5244AD0(8, 12, v33, v34);
      sub_1B51D4C64(v33, v34);
      sub_1B5372368();
      unint64_t v34 = *((void *)&v55 + 1);
      uint64_t v33 = v55;
    }
    uint64_t v53 = v28 + 1;
    sub_1B5372388();
    sub_1B51D4BB8(v33, v34);
    sub_1B5244FC8(v33, v34);
    sub_1B51D4C64(v33, v34);
    sub_1B5372388();
    uint64_t v35 = *v3;
    unint64_t v36 = v3[1];
    uint64_t v37 = 0;
    switch(v36 >> 62)
    {
      case 1uLL:
        BOOL v12 = __OFSUB__(HIDWORD(v35), v35);
        int v38 = HIDWORD(v35) - v35;
        if (v12) {
          goto LABEL_55;
        }
        uint64_t v37 = v38;
LABEL_38:
        uint64_t v42 = (void *)v3[2];
        sub_1B51D4BB8(v33, v34);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v42 = sub_1B51E8A30(0, v42[2] + 1, 1, v42);
        }
        unint64_t v44 = v42[2];
        unint64_t v43 = v42[3];
        if (v44 >= v43 >> 1) {
          uint64_t v42 = sub_1B51E8A30((void *)(v43 > 1), v44 + 1, 1, v42);
        }
        break;
      case 2uLL:
        uint64_t v41 = v35 + 16;
        uint64_t v39 = *(void *)(v35 + 16);
        uint64_t v40 = *(void *)(v41 + 8);
        uint64_t v37 = v40 - v39;
        if (!__OFSUB__(v40, v39)) {
          goto LABEL_38;
        }
        goto LABEL_56;
      case 3uLL:
        goto LABEL_38;
      default:
        uint64_t v37 = BYTE6(v36);
        goto LABEL_38;
    }
    v42[2] = v44 + 1;
    uint64_t v45 = &v42[4 * v44];
    v45[4] = v37;
    *((_DWORD *)v45 + 10) = v29;
    v45[6] = v33;
    v45[7] = v34;
    v3[2] = (uint64_t)v42;
    sub_1B5372388();
    uint64_t v19 = v50;
    ++v28;
    switch(v34 >> 62)
    {
      case 1uLL:
        LODWORD(v46) = HIDWORD(v33) - v33;
        if (__OFSUB__(HIDWORD(v33), v33)) {
          goto LABEL_57;
        }
        unint64_t v46 = (int)v46;
LABEL_46:
        if (!HIDWORD(v46))
        {
LABEL_28:
          sub_1B5372388();
          sub_1B51D4C64(v33, v34);
          uint64_t v27 = v51;
          if (v52 == v53) {
            goto LABEL_48;
          }
          continue;
        }
        sub_1B51D4ED4();
        swift_allocError();
        *uint64_t v49 = 1;
        swift_willThrow();
        swift_release();
        swift_release();
        return sub_1B51D4C64(v55, *((unint64_t *)&v55 + 1));
      case 2uLL:
        uint64_t v48 = *(void *)(v33 + 16);
        uint64_t v47 = *(void *)(v33 + 24);
        BOOL v12 = __OFSUB__(v47, v48);
        unint64_t v46 = v47 - v48;
        if (!v12) {
          goto LABEL_46;
        }
        goto LABEL_58;
      default:
        goto LABEL_28;
    }
  }
}

uint64_t sub_1B525AE64()
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  uint64_t v31 = *((void *)v0 + 2);
  long long v2 = v0[1];
  long long v35 = *v0;
  long long v36 = v2;
  char v37 = *((unsigned char *)v0 + 32);
  uint64_t v28 = *(void *)(v31 + 16);
  if (!v28) {
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = 0;
  uint64_t v26 = 0;
  BOOL v27 = 1;
  unsigned int v4 = &qword_1E9D47BC8;
LABEL_6:
  uint64_t v5 = v31 + 32 + 32 * v3;
  uint64_t v6 = *(void *)v5;
  int v7 = *(_DWORD *)(v5 + 8);
  ++v3;
  uint64_t v29 = *(void *)(v5 + 16);
  unint64_t v30 = *(void *)(v5 + 24);
  sub_1B51D4BB8(v29, v30);
  while (2)
  {
    uint64_t v9 = *((void *)&v35 + 1) >> 62;
    switch(*((void *)&v35 + 1) >> 62)
    {
      case 1:
        char v10 = BYTE4(v35) - v35;
        if (!__OFSUB__(DWORD1(v35), v35)) {
          goto LABEL_13;
        }
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        uint64_t v25 = *(void *)(v6 + 16);
        uint64_t v24 = *(void *)(v6 + 24);
        swift_retain();
        swift_retain();
        sub_1B5284384(v25, v24);
        if (v4)
        {
          swift_release();
          swift_release();
          __break(1u);
          sub_1B51D4C64(v6, v3);
          __break(1u);
          JUMPOUT(0x1B525B4F8);
        }
        swift_release();
        swift_release();
        goto LABEL_50;
      case 2:
        uint64_t v12 = *(void *)(v35 + 16);
        uint64_t v11 = *(void *)(v35 + 24);
        BOOL v13 = __OFSUB__(v11, v12);
        char v10 = v11 - v12;
        if (!v13) {
          goto LABEL_13;
        }
        goto LABEL_43;
      case 3:
        unint64_t v14 = 0;
        goto LABEL_22;
      default:
        char v10 = BYTE14(v35);
LABEL_13:
        if ((v10 & 3) != 0)
        {
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BC0);
          uint64_t v33 = v8;
          uint64_t v34 = sub_1B52010C8((unint64_t *)&qword_1E9D47BC8, &qword_1E9D47BC0);
          LOBYTE(v32) = 0;
          __swift_project_boxed_opaque_existential_1(&v32, v8);
          sub_1B5372368();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
          continue;
        }
        if (!v9)
        {
          unint64_t v14 = BYTE14(v35);
          goto LABEL_22;
        }
        if (v9 == 1)
        {
          if (!__OFSUB__(DWORD1(v35), v35))
          {
            unint64_t v14 = DWORD1(v35) - (int)v35;
            goto LABEL_22;
          }
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
        }
        uint64_t v16 = *(void *)(v35 + 16);
        uint64_t v15 = *(void *)(v35 + 24);
        unint64_t v14 = v15 - v16;
        if (__OFSUB__(v15, v16)) {
          goto LABEL_54;
        }
LABEL_22:
        if (__OFADD__(v6, 4))
        {
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v6 + 4 < v6) {
          goto LABEL_52;
        }
        long long v32 = xmmword_1B538BFE0;
        if (HIDWORD(v14))
        {
          sub_1B51D4ED4();
          swift_allocError();
          *uint64_t v19 = 1;
          swift_willThrow();
          sub_1B51D4C64(v32, *((unint64_t *)&v32 + 1));
          sub_1B51DFEA8((uint64_t)&v31);
          sub_1B51D4C64(v29, v30);
          unint64_t v21 = *((void *)&v35 + 1);
          uint64_t v20 = v35;
          goto LABEL_34;
        }
        sub_1B5372388();
        long long v17 = v32;
        sub_1B528417C(v32, *((unint64_t *)&v32 + 1));
        sub_1B51D4C64(v17, *((unint64_t *)&v17 + 1));
        sub_1B5372408();
        if (v7 != 1751474532)
        {
          sub_1B51D4C64(v29, v30);
          goto LABEL_4;
        }
        *(void *)((char *)&v32 + 6) = 0;
        *(void *)&long long v32 = 0;
        sub_1B5372368();
        sub_1B51D4C64(v29, v30);
        if (v27)
        {
          BOOL v27 = v26 != 0;
          if (v26) {
            uint64_t v18 = 1;
          }
          else {
            uint64_t v18 = v14 + 8;
          }
          uint64_t v26 = v18;
LABEL_4:
          if (v3 != v28)
          {
LABEL_5:
            if (v3 >= *(void *)(v31 + 16)) {
              goto LABEL_53;
            }
            goto LABEL_6;
          }
          sub_1B51DFEA8((uint64_t)&v31);
          if (v27) {
            goto LABEL_40;
          }
          unint64_t v21 = *((void *)&v35 + 1);
          uint64_t v20 = v35;
          sub_1B51D4BB8(v35, *((unint64_t *)&v35 + 1));
          sub_1B5244FC8(v20, v21);
          sub_1B51D4C64(v20, v21);
          if (v26 > 0x7FFFFFFFFFFFFFFBLL) {
            goto LABEL_56;
          }
          sub_1B51D4BB8(v20, v21);
          sub_1B5244AD0(v26, v26 + 4, v20, v21);
          unsigned int v4 = v1;
          sub_1B51D4C64(v20, v21);
          if (!v1)
          {
            long long v32 = xmmword_1B538BFE0;
            sub_1B5372388();
            unint64_t v3 = *((void *)&v32 + 1);
            uint64_t v6 = v32;
            switch(*((void *)&v32 + 1) >> 62)
            {
              case 1:
                if ((uint64_t)v32 >> 32 < (int)v32) {
                  goto LABEL_57;
                }
                swift_retain();
                sub_1B5284384((int)v6, v6 >> 32);
                sub_1B51D4C64(v6, v3);
                break;
              case 2:
                goto LABEL_44;
              case 3:
                *(void *)((char *)&v32 + 6) = 0;
                *(void *)&long long v32 = 0;
                goto LABEL_47;
              default:
LABEL_47:
                sub_1B5372368();
                break;
            }
LABEL_50:
            sub_1B51D4C64(v6, v3);
            goto LABEL_40;
          }
LABEL_34:
          sub_1B51D4C64(v20, v21);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v3 != v28)
          {
            uint64_t v26 = 1;
            BOOL v27 = 1;
            goto LABEL_5;
          }
          sub_1B51DFEA8((uint64_t)&v31);
LABEL_40:
          unint64_t v22 = *((void *)&v35 + 1);
          uint64_t v20 = v35;
          sub_1B51D4BB8(v35, *((unint64_t *)&v35 + 1));
          sub_1B51D4C64(v20, v22);
          swift_bridgeObjectRelease();
        }
        return v20;
    }
  }
}

uint64_t sub_1B525B518@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1B525C890(a1, a2, a3);
  if (!v4)
  {
    *(void *)a4 = result;
    *(unsigned char *)(a4 + 8) = v7;
  }
  return result;
}

uint64_t sub_1B525B548()
{
  return TTFContainer.encoded()(*v0);
}

id sub_1B525B564@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*((unsigned __int8 *)a1 + 16) - 1 >= 2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      sub_1B525CF44();
      uint64_t v21 = swift_allocError();
      char v14 = 1;
      *uint64_t v25 = 1;
      id result = (id)v21;
      uint64_t v22 = 0;
      uint64_t v20 = 0;
      uint64_t v12 = 0;
      uint64_t v18 = 0;
      uint64_t v6 = 0;
      uint64_t v17 = 0;
      uint64_t v5 = 0;
      uint64_t v16 = 0;
      uint64_t v15 = 0;
      uint64_t v8 = 0;
      char v13 = 0;
      unint64_t v11 = 0xE000000000000000;
      uint64_t v19 = (__n128 (*)@<Q0>(uint64_t@<X0>, uint64_t@<X8>))v21;
    }
    else
    {
      uint64_t v19 = (__n128 (*)@<Q0>(uint64_t@<X0>, uint64_t@<X8>))a1[1];
      uint64_t v20 = swift_allocObject();
      long long v23 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v20 + 16) = *(_OWORD *)a2;
      *(_OWORD *)(v20 + 32) = v23;
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(v20 + 64) = *(unsigned char *)(a2 + 48);
      uint64_t v18 = swift_allocObject();
      long long v24 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v18 + 16) = *(_OWORD *)a2;
      *(_OWORD *)(v18 + 32) = v24;
      *(_OWORD *)(v18 + 48) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(v18 + 64) = *(unsigned char *)(a2 + 48);
      sub_1B5221910(a2);
      id result = (id)sub_1B5221910(a2);
      uint64_t v6 = 0;
      uint64_t v17 = 0;
      uint64_t v5 = 0;
      uint64_t v16 = 0;
      uint64_t v15 = 0;
      uint64_t v8 = 0;
      char v14 = 0;
      uint64_t v21 = 1;
      uint64_t v12 = sub_1B525CFBC;
      unint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v22 = (uint64_t)sub_1B525CF9C;
      char v13 = 1;
    }
  }
  else
  {
    uint64_t v5 = *a1;
    uint64_t v6 = swift_allocObject();
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v6 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v6 + 32) = v7;
    *(_OWORD *)(v6 + 48) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(v6 + 64) = *(unsigned char *)(a2 + 48);
    uint64_t v8 = swift_allocObject();
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v8 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v8 + 32) = v9;
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(v8 + 64) = *(unsigned char *)(a2 + 48);
    sub_1B5221910(a2);
    id result = (id)sub_1B5221910(a2);
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 0;
    char v14 = 0;
    uint64_t v15 = sub_1B525CFFC;
    uint64_t v16 = sub_1B525B95C;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v18 = (uint64_t)sub_1B525CFDC;
    uint64_t v19 = sub_1B525C030;
    uint64_t v20 = (uint64_t)sub_1B525BFB4;
    uint64_t v21 = 257;
    uint64_t v22 = 257;
  }
  *(void *)a3 = v21;
  *(void *)(a3 + 8) = v22;
  *(void *)(a3 + 16) = v20;
  *(void *)(a3 + 24) = v11;
  *(void *)(a3 + 32) = v19;
  *(void *)(a3 + 40) = v12;
  *(void *)(a3 + 48) = v18;
  *(void *)(a3 + 56) = v6;
  *(void *)(a3 + 64) = v17;
  *(void *)(a3 + 72) = v5;
  *(void *)(a3 + 80) = v16;
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = v15;
  *(void *)(a3 + 104) = v8;
  *(unsigned char *)(a3 + 112) = v13;
  *(unsigned char *)(a3 + 113) = v14;
  return result;
}

uint64_t sub_1B525B80C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a2 + 48))
  {
    uint64_t v5 = *a1;
    *(unsigned char *)a3 = *(unsigned char *)a2;
    *(_OWORD *)(a3 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a3 + 40) = v5;
    *(unsigned char *)(a3 + 48) = 0;
    return sub_1B5221910(a2);
  }
  else
  {
    sub_1B525CF44();
    swift_allocError();
    *unint64_t v3 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1B525B894@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B525A19C(v4);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_1B525B8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_DWORD *)a3 = *(_DWORD *)a1;
  uint64_t result = sub_1B5244AD0(v5, v6, *(void *)(a2 + 8), *(void *)(a2 + 16));
  if (!v3)
  {
    uint64_t result = sub_1B5372398();
    *(void *)(a3 + 8) = result;
    *(void *)(a3 + 16) = v8;
  }
  return result;
}

uint64_t sub_1B525B95C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(*(void *)a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47EB0);
    uint64_t v4 = sub_1B5373138();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  uint64_t v7 = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1B525D018(v5, 1, &v7);
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v7;
  }
  return result;
}

void *sub_1B525BA10@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47900);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B538C0E0;
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1B52B8B80(v6, v4, 0, __src);
  if (v2)
  {
    *(void *)(v5 + 16) = 0;
    return (void *)swift_release();
  }
  else
  {
    uint64_t result = memcpy((void *)(v5 + 32), __src, 0x1A4uLL);
    *(void *)a2 = v5;
    *(unsigned char *)(a2 + 8) = v4;
  }
  return result;
}

uint64_t sub_1B525BACC@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[2];
  long long v4 = *v1;
  *(_OWORD *)unint64_t v11 = v1[1];
  *(_OWORD *)&v11[16] = v3;
  char v12 = *((unsigned char *)v1 + 48);
  long long v9 = *(_OWORD *)&v11[8];
  long long v10 = v4;
  uint64_t v5 = *((void *)&v3 + 1);
  uint64_t v6 = swift_allocObject();
  long long v7 = v1[1];
  *(_OWORD *)(v6 + 16) = *v1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = v1[2];
  *(unsigned char *)(v6 + 64) = *((unsigned char *)v1 + 48);
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = sub_1B525BCC8;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = sub_1B525D6AC;
  *(void *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 40) = v9;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = 2;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  return sub_1B5221910((uint64_t)&v10);
}

uint64_t sub_1B525BB9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v8 = v3[2];
  long long v9 = *v3;
  v16[1] = v3[1];
  v16[2] = v8;
  v16[0] = v9;
  char v17 = *((unsigned char *)v3 + 48);
  uint64_t v10 = swift_allocObject();
  long long v11 = v3[1];
  *(_OWORD *)(v10 + 16) = *v3;
  *(_OWORD *)(v10 + 32) = v11;
  *(_OWORD *)(v10 + 48) = v3[2];
  *(unsigned char *)(v10 + 64) = *((unsigned char *)v3 + 48);
  sub_1B5221910((uint64_t)v16);
  uint64_t v12 = sub_1B51D247C(a1, a2);
  char v14 = v13;
  uint64_t result = swift_release();
  if (!v4)
  {
    *(void *)a3 = v12;
    *(unsigned char *)(a3 + 8) = v14;
  }
  return result;
}

unsigned __int8 *sub_1B525BCC8@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *(_DWORD *)result;
  *((void *)&v4 + 1) = 0;
  uint64_t v5 = sub_1B525BF64;
  if (*(_DWORD *)result == 1953784678)
  {
    __int16 v6 = 0;
    char v7 = 0;
    *(void *)&long long v4 = sub_1B525BFA0;
    uint64_t v8 = 257;
  }
  else
  {
    uint64_t result = sub_1B52189C4("OTTO", 4, &v11);
    uint64_t v5 = sub_1B525BF78;
    if (v11 == v3)
    {
      char v7 = 0;
      *((void *)&v4 + 1) = 0;
      *(void *)&long long v4 = sub_1B51D2470;
      __int16 v6 = 1;
      uint64_t v8 = 16843009;
    }
    else
    {
      uint64_t result = sub_1B52189C4("typ1", 4, &v10);
      *((void *)&v4 + 1) = 0;
      uint64_t v5 = sub_1B525BF8C;
      if (v10 == v3)
      {
        char v7 = 0;
        *(void *)&long long v4 = sub_1B51D2470;
        __int16 v6 = 256;
        uint64_t v8 = 16843009;
      }
      else
      {
        uint64_t result = sub_1B52189C4("true", 4, &v9);
        uint64_t v5 = sub_1B525D694;
        if (v9 == v3)
        {
          char v7 = 0;
          *((void *)&v4 + 1) = 0;
          *(void *)&long long v4 = sub_1B51D2470;
          __int16 v6 = 257;
          uint64_t v8 = 16843009;
        }
        else
        {
          uint64_t v5 = sub_1B525D694;
          switch(v3)
          {
            case -1519689116:
              __int16 v6 = 0;
              *((void *)&v4 + 1) = 0;
              *(void *)&long long v4 = sub_1B51D2470;
              char v7 = 1;
              uint64_t v8 = 16843009;
              break;
            case 65536:
              *((void *)&v4 + 1) = 0;
              *(void *)&long long v4 = sub_1B51D2470;
              char v7 = 1;
              __int16 v6 = 256;
              uint64_t v5 = sub_1B525D694;
              uint64_t v8 = 16843009;
              break;
            case -1519619212:
              *((void *)&v4 + 1) = 0;
              *(void *)&long long v4 = sub_1B51D2470;
              __int16 v6 = 1;
              uint64_t v5 = sub_1B525D694;
              uint64_t v8 = 16843009;
              char v7 = 1;
              break;
            default:
              uint64_t v8 = 0;
              uint64_t v5 = 0;
              long long v4 = xmmword_1B538E040;
              char v7 = 1;
              __int16 v6 = 257;
              break;
          }
        }
      }
    }
  }
  *(void *)a2 = v8;
  *(_OWORD *)(a2 + 8) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = 0;
  *(_WORD *)(a2 + 40) = v6;
  *(unsigned char *)(a2 + 42) = v7;
  return result;
}

unsigned int *sub_1B525BF64@<X0>(unsigned int *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *((void *)result + 1);
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

void *sub_1B525BF78@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 2;
  return result;
}

void *sub_1B525BF8C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  return result;
}

uint64_t sub_1B525BFA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 8);
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(void *)(a2 + 8) = v2;
  return result;
}

void *sub_1B525BFB4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  BOOL v4 = __OFADD__(*result, v3);
  uint64_t v5 = *result + v3;
  if (v4)
  {
    sub_1B51D4F28();
LABEL_6:
    swift_allocError();
    return (void *)swift_willThrow();
  }
  if (v5 < v2)
  {
    sub_1B51D4F7C();
    goto LABEL_6;
  }
  *a2 = v2;
  a2[1] = v5;
  return result;
}

__n128 sub_1B525C030@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)a1;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1B525C044(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B53731D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v79 = *(_DWORD *)(v77 + 4 * i);
        uint64_t v80 = v76;
        do
        {
          unsigned int v81 = *(_DWORD *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(_DWORD *)(v77 + v80 + 4) = v81;
          *(_DWORD *)(v77 + v80) = v79;
          v80 -= 4;
        }
        while (v80 != -4);
        v76 += 4;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v93 = result;
    uint64_t v94 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_1B5372A88();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v94;
      uint64_t v92 = result;
      float64x2_t v96 = (char *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *v2;
      float64x2_t v90 = v2;
      uint64_t v91 = *v2 - 4;
      uint64_t v10 = MEMORY[0x1E4FBC860];
      uint64_t v95 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          unsigned int v13 = *(_DWORD *)(v9 + 4 * v8);
          unsigned int v14 = *(_DWORD *)(v9 + 4 * v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            unsigned int v15 = v13;
            while (1)
            {
              unsigned int v16 = *(_DWORD *)(v9 + 4 * v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              unsigned int v15 = v16;
              if (v3 == v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              uint64_t v17 = v8 - 1;
              uint64_t v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  int v19 = *(_DWORD *)(v9 + 4 * v18);
                  *(_DWORD *)(v9 + 4 * v18) = *(_DWORD *)(v9 + 4 * v17);
                  *(_DWORD *)(v9 + 4 * v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v93)
          {
            uint64_t v20 = v12 + v93;
            if (__OFADD__(v12, v93)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              uint64_t v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              uint64_t v21 = (unsigned int *)(v91 + 4 * v8);
              do
              {
                unsigned int v22 = *(_DWORD *)(v9 + 4 * v8);
                uint64_t v23 = v12;
                long long v24 = v21;
                do
                {
                  unsigned int v25 = *v24;
                  if (v22 >= *v24) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  *long long v24 = v22;
                  v24[1] = v25;
                  --v24;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              uint64_t v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1B51DA83C(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v27 = *(void *)(v10 + 16);
        unint64_t v26 = *(void *)(v10 + 24);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v95;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_1B51DA83C((char *)(v26 > 1), v27 + 1, 1, (char *)v10);
          uint64_t v9 = v95;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v28 = v10 + 32;
        uint64_t v29 = (uint64_t *)(v10 + 32 + 16 * v27);
        *uint64_t v29 = v12;
        v29[1] = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v35 = v28 + 16 * v11;
              uint64_t v36 = *(void *)(v35 - 64);
              uint64_t v37 = *(void *)(v35 - 56);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(void *)(v35 - 48);
              uint64_t v39 = *(void *)(v35 - 40);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              unint64_t v43 = (uint64_t *)(v28 + 16 * (v11 - 2));
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                uint64_t v65 = (uint64_t *)(v28 + 16 * v30);
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *(void *)(v10 + 32);
                uint64_t v60 = *(void *)(v10 + 40);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *(void *)(v10 + 32);
              uint64_t v31 = *(void *)(v10 + 40);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            uint64_t v48 = (uint64_t *)(v28 + 16 * (v11 - 2));
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            uint64_t v54 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            int8x16_t v61 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v70 = (uint64_t *)(v28 + 16 * v69);
            uint64_t v71 = *v70;
            uint64_t v72 = v28;
            id v73 = (void *)(v28 + 16 * v30);
            uint64_t v74 = v73[1];
            uint64_t result = sub_1B525C68C((char *)(v9 + 4 * *v70), (char *)(v9 + 4 * *v73), v9 + 4 * v74, v96);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *(void *)(v10 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v70 = v71;
            *(void *)(v72 + 16 * v69 + 8) = v74;
            unint64_t v75 = *(void *)(v10 + 16);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            uint64_t v28 = v72;
            *(void *)(v10 + 16) = v75 - 1;
            uint64_t v9 = v95;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v94;
        if (v8 >= v94)
        {
          uint64_t v7 = v92;
          uint64_t v2 = v90;
          goto LABEL_103;
        }
      }
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    float64x2_t v96 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v92 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_103:
    uint64_t v92 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = v10;
        uint64_t v85 = v10 + 32;
        uint64_t v86 = *(void *)(v10 + 32 + 16 * v83);
        uint64_t v87 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_1B525C68C((char *)(v82 + 4 * v86), (char *)(v82 + 4 * *(void *)(v85 + 16 * (v11 - 1))), v82 + 4 * v87, v96);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1B51DA938(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        long long v88 = (void *)(v84 + 32 + 16 * v83);
        void *v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v92 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B525C68C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  BOOL v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 3;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 3;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 2;
  if (v10 >= v12 >> 2)
  {
    if (a4 != __src || &__src[4 * v13] <= a4) {
      memmove(a4, __src, 4 * v13);
    }
    unsigned int v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 4) {
      goto LABEL_39;
    }
    uint64_t v17 = (char *)(a3 - 4);
    uint64_t v18 = v6;
    while (1)
    {
      int v19 = v17 + 4;
      unsigned int v21 = *((_DWORD *)v18 - 1);
      v18 -= 4;
      unsigned int v20 = v21;
      if (*((_DWORD *)v14 - 1) < v21) {
        break;
      }
      unsigned int v20 = *((_DWORD *)v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        v14 -= 4;
LABEL_35:
        *(_DWORD *)uint64_t v17 = v20;
        goto LABEL_36;
      }
      BOOL v22 = v17 >= v14;
      v14 -= 4;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 4;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4) {
    memmove(a4, __dst, 4 * v10);
  }
  unsigned int v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 4)
  {
    while (1)
    {
      int v15 = *(_DWORD *)v6;
      if (*(_DWORD *)v6 >= *(_DWORD *)v4) {
        break;
      }
      BOOL v16 = v7 == v6;
      v6 += 4;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 4;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    int v15 = *(_DWORD *)v4;
    BOOL v16 = v7 == v4;
    v4 += 4;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(_DWORD *)uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 3uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFFCLL]) {
    memmove(v6, v4, 4 * (v23 >> 2));
  }
  return 1;
}

uint64_t sub_1B525C890(uint64_t a1, unint64_t a2, char a3)
{
  *(void *)&long long v20 = a1;
  *((void *)&v20 + 1) = a2;
  sub_1B51D4BB8(a1, a2);
  sub_1B51D4BB8(a1, a2);
  sub_1B51D4C10();
  uint64_t result = sub_1B53724D8();
  v23[0] = result;
  v23[1] = v8;
  v23[2] = v9;
  if (v8 >= result)
  {
    uint64_t v10 = result;
    uint64_t v11 = v8;
    uint64_t v12 = swift_allocObject();
    *(unsigned char *)(v12 + 16) = a3;
    *(void *)(v12 + 24) = a1;
    *(void *)(v12 + 32) = a2;
    *(void *)(v12 + 40) = v10;
    *(void *)(v12 + 48) = v11;
    *(void *)(v12 + 56) = 0;
    *(unsigned char *)(v12 + 64) = 1;
    char v24 = 1;
    unsigned int v25 = sub_1B525BCC8;
    uint64_t v26 = 0;
    unint64_t v27 = sub_1B525CF28;
    uint64_t v28 = v12;
    uint64_t v29 = v10;
    uint64_t v30 = v11;
    uint64_t v31 = 0;
    char v32 = 2;
    uint64_t v33 = 0;
    char v34 = 1;
    sub_1B51D4BB8(a1, a2);
    sub_1B51D4BB8(a1, a2);
    uint64_t v14 = sub_1B51D247C(v23, v13);
    swift_release();
    sub_1B51D4C64(a1, a2);
    if (v3)
    {
      id v35 = v3;
      id v15 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47950);
      if (!swift_dynamicCast())
      {

        uint64_t v17 = v23[0];
        sub_1B51D4D34();
        swift_allocError();
        *uint64_t v18 = v3;
        v18[1] = v17;
        v18[2] = 0x7272652072657355;
        v18[3] = 0xEA0000000000726FLL;
        v18[4] = v3;
        id v19 = v3;
        swift_willThrow();
        swift_bridgeObjectRelease();
        sub_1B51D4C64(a1, a2);
        sub_1B51D4C64(a1, a2);
        return v14;
      }

      sub_1B51D4D34();
      swift_allocError();
      *(_OWORD *)uint64_t v16 = v20;
      *(_OWORD *)(v16 + 16) = v21;
      *(void *)(v16 + 32) = v22;
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    sub_1B51D4C64(a1, a2);
    sub_1B51D4C64(a1, a2);
    return v14;
  }
  __break(1u);
  return result;
}

unint64_t sub_1B525CB38()
{
  unint64_t result = qword_1E9D484F8;
  if (!qword_1E9D484F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D484F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTFFileError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B525CC58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTFFileError()
{
  return &type metadata for TTFFileError;
}

ValueMetadata *type metadata accessor for TTFContainer()
{
  return &type metadata for TTFContainer;
}

uint64_t sub_1B525CCA0(uint64_t a1, uint64_t *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v35 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v35;
  }
  uint64_t v4 = a1;
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1B521CEB0(0, v2, 0);
  uint64_t v35 = v36;
  uint64_t result = sub_1B51DD438(v4);
  unint64_t v7 = result;
  uint64_t v8 = 0;
  uint64_t v9 = v4 + 64;
  uint64_t v10 = *a2;
  char v11 = *(unsigned char *)(v4 + 32);
  uint64_t v28 = v4 + 88;
  int v31 = v6;
  uint64_t v32 = v4;
  uint64_t v29 = *a2;
  int64_t v30 = v2;
  while ((v7 & 0x8000000000000000) == 0 && (uint64_t)v7 < 1 << v11)
  {
    if ((*(void *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(v4 + 36) != v6) {
      goto LABEL_28;
    }
    if (!*(void *)(v10 + 16)) {
      goto LABEL_29;
    }
    uint64_t v33 = v8;
    unint64_t v34 = v7 >> 6;
    unsigned int v14 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v7);
    uint64_t result = sub_1B5230664(v14);
    if ((v15 & 1) == 0) {
      goto LABEL_30;
    }
    uint64_t v16 = (uint64_t *)(*(void *)(v10 + 56) + 16 * result);
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    uint64_t result = sub_1B51D4BB8(*v16, v18);
    unint64_t v19 = *(void *)(v36 + 16);
    unint64_t v20 = *(void *)(v36 + 24);
    if (v19 >= v20 >> 1) {
      uint64_t result = (uint64_t)sub_1B521CEB0((void *)(v20 > 1), v19 + 1, 1);
    }
    *(void *)(v36 + 16) = v19 + 1;
    uint64_t v21 = v36 + 24 * v19;
    *(_DWORD *)(v21 + 32) = v14;
    *(void *)(v21 + 40) = v17;
    *(void *)(v21 + 48) = v18;
    uint64_t v4 = v32;
    char v11 = *(unsigned char *)(v32 + 32);
    unint64_t v12 = 1 << v11;
    if ((uint64_t)v7 >= 1 << v11) {
      goto LABEL_31;
    }
    unint64_t v22 = v7 >> 6;
    uint64_t v23 = *(void *)(v9 + 8 * v34);
    if ((v23 & (1 << v7)) == 0) {
      goto LABEL_32;
    }
    int v6 = v31;
    if (*(_DWORD *)(v32 + 36) != v31) {
      goto LABEL_33;
    }
    unint64_t v24 = v23 & (-2 << (v7 & 0x3F));
    if (v24)
    {
      unint64_t v12 = __clz(__rbit64(v24)) | v7 & 0xFFFFFFFFFFFFFFC0;
      int64_t v13 = v30;
    }
    else
    {
      unint64_t v25 = v34 + 1;
      unint64_t v26 = (v12 + 63) >> 6;
      int64_t v13 = v30;
      if (v34 + 1 < v26)
      {
        unint64_t v27 = *(void *)(v9 + 8 * v25);
        if (!v27)
        {
          unint64_t v25 = v34 + 2;
          if (v34 + 2 >= v26) {
            goto LABEL_4;
          }
          unint64_t v27 = *(void *)(v9 + 8 * v25);
          if (!v27)
          {
            while (v26 - 3 != v22)
            {
              unint64_t v27 = *(void *)(v28 + 8 * v22++);
              if (v27)
              {
                unint64_t v25 = v22 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        unint64_t v12 = __clz(__rbit64(v27)) + (v25 << 6);
      }
    }
LABEL_4:
    uint64_t v10 = v29;
    uint64_t v8 = v33 + 1;
    unint64_t v7 = v12;
    if (v33 + 1 == v13) {
      return v35;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

id sub_1B525CF28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B525B564(a1, v2 + 16, a2);
}

unint64_t sub_1B525CF44()
{
  unint64_t result = qword_1E9D48500;
  if (!qword_1E9D48500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48500);
  }
  return result;
}

uint64_t sub_1B525CF9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B525B80C(a1, v2 + 16, a2);
}

uint64_t sub_1B525CFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B525B894((char *)(v1 + 16), a1);
}

uint64_t sub_1B525CFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B525B8F4(a1, v2 + 16, a2);
}

void *sub_1B525CFFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B525BA10((char *)(v1 + 16), a1);
}

unint64_t sub_1B525D018(uint64_t a1, char a2, void *a3)
{
  LOBYTE(v4) = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v6) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  unint64_t v8 = *(void *)(a1 + 48);
  sub_1B51D4BB8(v9, v8);
  if (v8 >> 60 == 15) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = (void *)*a3;
  unint64_t result = sub_1B5230664(v7);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v17 = v12;
  if (v10[3] < v16)
  {
    sub_1B5232034(v16, v4 & 1);
    unint64_t result = sub_1B5230664(v7);
    if ((v17 & 1) == (v18 & 1)) {
      goto LABEL_8;
    }
LABEL_6:
    unint64_t result = sub_1B5373288();
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    unint64_t v21 = result;
    sub_1B52368CC();
    unint64_t result = v21;
    unint64_t v19 = (void *)*a3;
    if (v17)
    {
LABEL_9:
      uint64_t v20 = v19[7] + 16 * result;
      sub_1B51D4C64(*(void *)v20, *(void *)(v20 + 8));
      *(void *)uint64_t v20 = v9;
      *(void *)(v20 + 8) = v8;
      if (--v6)
      {
LABEL_15:
        uint64_t v4 = (unint64_t *)(a1 + 72);
        do
        {
          uint64_t v7 = *((unsigned int *)v4 - 4);
          uint64_t v9 = *(v4 - 1);
          unint64_t v8 = *v4;
          sub_1B51D4BB8(v9, *v4);
          if (v8 >> 60 == 15) {
            break;
          }
          unint64_t v26 = (void *)*a3;
          unint64_t result = sub_1B5230664(v7);
          uint64_t v28 = v26[2];
          BOOL v29 = (v27 & 1) == 0;
          BOOL v15 = __OFADD__(v28, v29);
          uint64_t v30 = v28 + v29;
          if (v15) {
            goto LABEL_25;
          }
          char v17 = v27;
          if (v26[3] < v30)
          {
            sub_1B5232034(v30, 1);
            unint64_t result = sub_1B5230664(v7);
            if ((v17 & 1) != (v31 & 1)) {
              goto LABEL_6;
            }
          }
          uint64_t v32 = (void *)*a3;
          if (v17)
          {
            uint64_t v25 = v32[7] + 16 * result;
            sub_1B51D4C64(*(void *)v25, *(void *)(v25 + 8));
            *(void *)uint64_t v25 = v9;
            *(void *)(v25 + 8) = v8;
          }
          else
          {
            v32[(result >> 6) + 8] |= 1 << result;
            *(_DWORD *)(v32[6] + 4 * result) = v7;
            uint64_t v33 = (uint64_t *)(v32[7] + 16 * result);
            uint64_t *v33 = v9;
            v33[1] = v8;
            uint64_t v34 = v32[2];
            BOOL v15 = __OFADD__(v34, 1);
            uint64_t v35 = v34 + 1;
            if (v15) {
              goto LABEL_26;
            }
            void v32[2] = v35;
          }
          v4 += 3;
        }
        while (--v6);
      }
      return swift_bridgeObjectRelease();
    }
    goto LABEL_12;
  }
LABEL_8:
  unint64_t v19 = (void *)*a3;
  if (v17) {
    goto LABEL_9;
  }
LABEL_12:
  v19[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(v19[6] + 4 * result) = v7;
  unint64_t v22 = (uint64_t *)(v19[7] + 16 * result);
  *unint64_t v22 = v9;
  v22[1] = v8;
  uint64_t v23 = v19[2];
  BOOL v15 = __OFADD__(v23, 1);
  uint64_t v24 = v23 + 1;
  if (!v15)
  {
    long long v19[2] = v24;
    if (--v6) {
      goto LABEL_15;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t objectdestroyTm()
{
  sub_1B51D4C64(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 65, 7);
}

ValueMetadata *type metadata accessor for TrueTypeHeader.TableDirectory()
{
  return &type metadata for TrueTypeHeader.TableDirectory;
}

uint64_t getEnumTagSinglePayload for TrueTypeHeader(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrueTypeHeader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B525D368(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1B525D380(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TrueTypeHeader()
{
  return &type metadata for TrueTypeHeader;
}

ValueMetadata *type metadata accessor for TrueTypeHeader.CollectionDirectory()
{
  return &type metadata for TrueTypeHeader.CollectionDirectory;
}

uint64_t destroy for TTFParser(uint64_t a1)
{
  return sub_1B51D4C64(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t initializeWithCopy for TTFParser(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_1B51D4BB8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for TTFParser(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_1B51D4BB8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1B51D4C64(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTFParser(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1B51D4C64(v4, v5);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTFParser(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TTFParser(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTFParser()
{
  return &type metadata for TTFParser;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FontInfo.Typo(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FontInfo.Typo(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TableDirectoryEntry()
{
  return &type metadata for TableDirectoryEntry;
}

uint64_t sub_1B525D63C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B525D658()
{
  return sub_1B52010C8(&qword_1E9D48508, qword_1E9D48510);
}

void *sub_1B525D694@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B525BF8C(a1, a2);
}

id sub_1B525D6AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B525CF28(a1, a2);
}

uint64_t PSScanner.init(input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t PSScanner.next()(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = type metadata accessor for PSInputByteStream();
  double v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, v1, v4, v11);
  PSInputByteStream.init(input:)((uint64_t)v7, v4, v9, (uint64_t)v13);
  uint64_t result = sub_1B525D848((uint64_t)v13, a1);
  if (v2) {
    return v15;
  }
  return result;
}

uint64_t sub_1B525D848(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PSInputByteStream();
  Swift::UInt8_optional v7 = PSInputByteStream.peek()();
  if (v8) {
    goto LABEL_2;
  }
  Swift::UInt8 value = v7.value;
  if ((*(_WORD *)&v7 & 0x100) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return 0;
  }
  if (sub_1B5226AF0(v7.value)) {
    return sub_1B525E134(a1, a2);
  }
  if (value - 45 < 2 || value == 43) {
    return sub_1B5260258(a1, a2);
  }
  if (value != 37)
  {
    if (value - 58 < 0xFFFFFFF6)
    {
      switch(value)
      {
        case '(':
          PSInputByteStream.advance(by:)(1);
          if (v13) {
            goto LABEL_2;
          }
          return sub_1B525FD6C(a1, a2);
        case ')':
          goto LABEL_36;
        case '/':
          PSInputByteStream.advance(by:)(1);
          if (v17) {
            goto LABEL_2;
          }
          Swift::UInt8_optional v18 = PSInputByteStream.peek()();
          if (v19) {
            goto LABEL_2;
          }
          uint64_t v20 = sub_1B5261498;
          if ((*(_WORD *)&v18 & 0x1FF) == 0x2F)
          {
            PSInputByteStream.advance(by:)(1);
            uint64_t v20 = sub_1B5261464;
            if (v21) {
              goto LABEL_2;
            }
            uint64_t v16 = 2;
          }
          else
          {
            uint64_t v16 = 1;
          }
          uint64_t v15 = a1;
          BOOL v14 = (uint64_t (*)(void))v20;
          return sub_1B525EF38(v15, v14, 0, v16, a2);
        case '<':
          PSInputByteStream.advance(by:)(1);
          if (v22) {
            goto LABEL_2;
          }
          Swift::UInt8_optional v23 = PSInputByteStream.peek()();
          if (v24) {
            goto LABEL_2;
          }
          if ((*(_WORD *)&v23 & 0x100) != 0) {
            goto LABEL_32;
          }
          if (v23.value == 126)
          {
            PSInputByteStream.advance(by:)(1);
            if (v28) {
              goto LABEL_2;
            }
            uint64_t v10 = sub_1B525F370(a1, a2);
          }
          else if (v23.value == 60)
          {
LABEL_14:
            uint64_t v10 = sub_1B525F2AC(a1, a2);
          }
          else
          {
LABEL_32:
            uint64_t v10 = sub_1B525F8E0(a1, a2);
          }
          break;
        case '>':
          PSInputByteStream.advance(by:)(1);
          if (v25) {
            goto LABEL_2;
          }
          Swift::UInt8_optional v26 = PSInputByteStream.peek()();
          if (v27) {
            goto LABEL_2;
          }
          if ((*(_WORD *)&v26 & 0x1FF) == 0x3E) {
            goto LABEL_14;
          }
LABEL_36:
          uint64_t v3 = 0x72657861746E7973;
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
          return v3;
        case '[':
        case ']':
        case '{':
        case '}':
          goto LABEL_14;
        default:
          BOOL v14 = (uint64_t (*)(void))sub_1B526166C;
          uint64_t v15 = a1;
          uint64_t v16 = 0;
          return sub_1B525EF38(v15, v14, 0, v16, a2);
      }
      return v10;
    }
    return sub_1B5260258(a1, a2);
  }
  PSInputByteStream.advance(by:)(1);
  if (!v11) {
    return sub_1B525E248(a1, a2);
  }
LABEL_2:
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v3;
}

uint64_t sub_1B525DD80(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1B525DEDC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B525E0F4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for PSScanner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B525E134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PSInputByteStream();
  while (1)
  {
    Swift::UInt8_optional v5 = PSInputByteStream.peek()();
    if (v6)
    {
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      return 0;
    }
    if ((*(_WORD *)&v5 & 0x100) != 0 || v5.value > 0x20u || ((1 << v5.value) & 0x100003601) == 0) {
      break;
    }
    PSInputByteStream.advance(by:)(1);
    if (v7) {
      goto LABEL_7;
    }
  }
  uint64_t v8 = sub_1B5260614(a1, a2);
  sub_1B51D4C64(v8, v9);
  return 0;
}

uint64_t sub_1B525E248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PSInputByteStream();
  do
  {
    Swift::UInt8_optional v5 = PSInputByteStream.peek()();
    if (v6) {
      break;
    }
    if ((*(_WORD *)&v5 & 0x100) != 0 || v5.value == 13 || v5.value == 10)
    {
      uint64_t v8 = sub_1B5260614(a1, a2);
      unint64_t v10 = v9;
      uint64_t v11 = v8;
      switch(v9 >> 62)
      {
        case 1uLL:
          uint64_t v12 = (int)v8;
          uint64_t v14 = (int)v8 + 1;
          uint64_t v13 = v11 >> 32;
          goto LABEL_14;
        case 2uLL:
          uint64_t v12 = *(void *)(v8 + 16);
          uint64_t v14 = v12 + 1;
          if (__OFADD__(v12, 1))
          {
            __break(1u);
          }
          else
          {
            uint64_t v13 = *(void *)(v11 + 24);
LABEL_14:
            if (v13 >= v12 && v13 >= v14)
            {
              uint64_t v4 = sub_1B5372398();
              sub_1B51D4C64(v11, v10);
              return v4;
            }
          }
LABEL_19:
          __break(1u);
          JUMPOUT(0x1B525E3D4);
        case 3uLL:
          goto LABEL_19;
        default:
          uint64_t v12 = 0;
          uint64_t v13 = BYTE6(v9);
          uint64_t v14 = 1;
          goto LABEL_14;
      }
    }
    PSInputByteStream.advance(by:)(1);
  }
  while (!v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return v4;
}

int64_t sub_1B525E3E4(uint64_t a1, int64_t a2)
{
  return sub_1B525E430(a1, a2);
}

int64_t sub_1B525E430(uint64_t a1, int64_t a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v29 = *(_OWORD *)a1;
  long long v30 = v4;
  int64_t v31 = *(void *)(a1 + 32);
  while (2)
  {
    unint64_t v5 = *((void *)&v29 + 1);
    if (*((void *)&v29 + 1) >> 60 == 15)
    {
LABEL_23:
      v32[0] = v29;
      v32[1] = v30;
      int64_t v33 = v31;
      uint64_t v17 = (uint64_t)sub_1B520A104(v32);
      if (v2) {
        return a2;
      }
      unint64_t v19 = v18;
      unint64_t v20 = v18 >> 62;
      uint64_t v21 = v17;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      switch(v20)
      {
        case 1uLL:
          uint64_t v23 = (int)v17;
          BOOL v24 = __OFADD__((int)v17, a2);
          a2 += (int)v17;
          if (v24) {
            goto LABEL_41;
          }
          uint64_t v22 = v17 >> 32;
          break;
        case 2uLL:
          uint64_t v23 = *(void *)(v17 + 16);
          BOOL v24 = __OFADD__(v23, a2);
          a2 += v23;
          if (v24) {
            goto LABEL_42;
          }
          uint64_t v22 = *(void *)(v17 + 24);
          break;
        case 3uLL:
          break;
        default:
          uint64_t v23 = 0;
          uint64_t v22 = BYTE6(v19);
          break;
      }
      if (v22 >= v23 && v22 >= a2)
      {
        a2 = sub_1B5372398();
        sub_1B51D4C64(v21, v19);
        return a2;
      }
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
    }
    uint64_t v6 = v29;
    uint64_t v7 = v30;
    switch(*((void *)&v29 + 1) >> 62)
    {
      case 1:
        if ((uint64_t)v30 < (int)v29 || (uint64_t)v30 >= (uint64_t)v29 >> 32) {
          goto LABEL_35;
        }
        swift_retain();
        uint64_t v10 = sub_1B5372268();
        if (!v10)
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          JUMPOUT(0x1B525E768);
        }
        uint64_t v11 = v10;
        uint64_t v12 = sub_1B5372298();
        uint64_t v13 = v7 - v12;
        if (!__OFSUB__(v7, v12)) {
          goto LABEL_19;
        }
        goto LABEL_37;
      case 2:
        if ((uint64_t)v30 < *(void *)(v29 + 16)) {
          goto LABEL_36;
        }
        if ((uint64_t)v30 >= *(void *)(v29 + 24)) {
          goto LABEL_38;
        }
        swift_retain();
        swift_retain();
        uint64_t v14 = sub_1B5372268();
        if (!v14) {
          goto LABEL_45;
        }
        uint64_t v11 = v14;
        uint64_t v15 = sub_1B5372298();
        uint64_t v13 = v7 - v15;
        if (__OFSUB__(v7, v15)) {
          goto LABEL_39;
        }
LABEL_19:
        int v8 = *(unsigned __int8 *)(v11 + v13);
        goto LABEL_20;
      case 3:
        __break(1u);
        goto LABEL_44;
      default:
        if ((uint64_t)v30 >= BYTE14(v29))
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        __int16 v26 = v29;
        int v27 = *(_DWORD *)((char *)&v29 + 2);
        uint64_t v28 = *(void *)((char *)&v29 + 6);
        int v8 = *((unsigned __int8 *)&v26 + v30);
LABEL_20:
        sub_1B51FE548(v6, v5);
        switch(v8)
        {
          case 0:
          case 9:
          case 10:
          case 12:
          case 13:
          case 32:
          case 37:
          case 40:
          case 41:
          case 47:
          case 60:
          case 61:
          case 91:
          case 93:
          case 123:
          case 125:
            goto LABEL_23;
          default:
            sub_1B5203B78(1);
            if (!v2) {
              continue;
            }
            uint64_t v16 = *((void *)&v30 + 1);
            a2 = v31;
            sub_1B51FE548(v29, *((unint64_t *)&v29 + 1));
            sub_1B520ACCC(v16, a2);
            break;
        }
        return a2;
    }
  }
}

uint64_t sub_1B525E980(uint64_t a1, uint64_t a2)
{
  return sub_1B525E9CC(a1, a2);
}

uint64_t sub_1B525E9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v29 = *(_OWORD *)a1;
  long long v30 = v4;
  long long v31 = *(_OWORD *)(a1 + 32);
  unint64_t v32 = *(void *)(a1 + 48);
  while (2)
  {
    unint64_t v5 = *((void *)&v29 + 1);
    if (*((void *)&v29 + 1) >> 60 == 15)
    {
LABEL_23:
      v33[0] = v29;
      v33[1] = v30;
      v33[2] = v31;
      unint64_t v34 = v32;
      uint64_t v17 = (uint64_t)sub_1B520A27C(v33);
      if (v2) {
        return a2;
      }
      unint64_t v19 = v18;
      unint64_t v20 = v18 >> 62;
      uint64_t v21 = v17;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      switch(v20)
      {
        case 1uLL:
          uint64_t v23 = (int)v17;
          BOOL v24 = __OFADD__((int)v17, a2);
          a2 += (int)v17;
          if (v24) {
            goto LABEL_41;
          }
          uint64_t v22 = v17 >> 32;
          break;
        case 2uLL:
          uint64_t v23 = *(void *)(v17 + 16);
          BOOL v24 = __OFADD__(v23, a2);
          a2 += v23;
          if (v24) {
            goto LABEL_42;
          }
          uint64_t v22 = *(void *)(v17 + 24);
          break;
        case 3uLL:
          break;
        default:
          uint64_t v23 = 0;
          uint64_t v22 = BYTE6(v19);
          break;
      }
      if (v22 >= v23 && v22 >= a2)
      {
        a2 = sub_1B5372398();
        sub_1B51D4C64(v21, v19);
        return a2;
      }
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
    }
    uint64_t v6 = v29;
    uint64_t v7 = v31;
    switch(*((void *)&v29 + 1) >> 62)
    {
      case 1:
        if ((uint64_t)v31 < (int)v29 || (uint64_t)v31 >= (uint64_t)v29 >> 32) {
          goto LABEL_35;
        }
        swift_retain();
        uint64_t v10 = sub_1B5372268();
        if (!v10)
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          JUMPOUT(0x1B525ED20);
        }
        uint64_t v11 = v10;
        uint64_t v12 = sub_1B5372298();
        uint64_t v13 = v7 - v12;
        if (!__OFSUB__(v7, v12)) {
          goto LABEL_19;
        }
        goto LABEL_37;
      case 2:
        if ((uint64_t)v31 < *(void *)(v29 + 16)) {
          goto LABEL_36;
        }
        if ((uint64_t)v31 >= *(void *)(v29 + 24)) {
          goto LABEL_38;
        }
        swift_retain();
        swift_retain();
        uint64_t v14 = sub_1B5372268();
        if (!v14) {
          goto LABEL_45;
        }
        uint64_t v11 = v14;
        uint64_t v15 = sub_1B5372298();
        uint64_t v13 = v7 - v15;
        if (__OFSUB__(v7, v15)) {
          goto LABEL_39;
        }
LABEL_19:
        int v8 = *(unsigned __int8 *)(v11 + v13);
        goto LABEL_20;
      case 3:
        __break(1u);
        goto LABEL_44;
      default:
        if ((uint64_t)v31 >= BYTE14(v29))
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        __int16 v26 = v29;
        int v27 = *(_DWORD *)((char *)&v29 + 2);
        uint64_t v28 = *(void *)((char *)&v29 + 6);
        int v8 = *((unsigned __int8 *)&v26 + v31);
LABEL_20:
        sub_1B51FE548(v6, v5);
        switch(v8)
        {
          case 0:
          case 9:
          case 10:
          case 12:
          case 13:
          case 32:
          case 37:
          case 40:
          case 41:
          case 47:
          case 60:
          case 61:
          case 91:
          case 93:
          case 123:
          case 125:
            goto LABEL_23;
          default:
            sub_1B5203F28(1);
            if (!v2) {
              continue;
            }
            a2 = *((void *)&v31 + 1);
            unint64_t v16 = v32;
            sub_1B51FE548(v29, *((unint64_t *)&v29 + 1));
            swift_bridgeObjectRelease();
            sub_1B520ACCC(a2, v16);
            break;
        }
        return a2;
    }
  }
}

uint64_t sub_1B525EF38(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for PSInputByteStream();
  while (2)
  {
    Swift::UInt8_optional v10 = PSInputByteStream.peek()();
    if (v11)
    {
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    }
    else
    {
      if ((*(_WORD *)&v10 & 0x100) == 0)
      {
        int value = v10.value;
        if ((sub_1B5226AF0(v10.value) & 1) == 0)
        {
          switch(value)
          {
            case '%':
            case '(':
            case ')':
            case '/':
            case '<':
            case '=':
            case '[':
            case ']':
            case '{':
            case '}':
              break;
            default:
              PSInputByteStream.advance(by:)(1);
              if (v13) {
                goto LABEL_7;
              }
              continue;
          }
        }
      }
      uint64_t v14 = sub_1B5260614(a1, a5);
      unint64_t v16 = v15;
      unint64_t v17 = v15 >> 62;
      uint64_t v18 = v14;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      switch(v17)
      {
        case 1uLL:
          uint64_t v20 = (int)v14;
          BOOL v21 = __OFADD__((int)v14, a4);
          a4 += (int)v14;
          if (v21) {
            goto LABEL_20;
          }
          uint64_t v19 = v14 >> 32;
          break;
        case 2uLL:
          uint64_t v20 = *(void *)(v14 + 16);
          BOOL v21 = __OFADD__(v20, a4);
          a4 += v20;
          if (v21) {
            goto LABEL_21;
          }
          uint64_t v19 = *(void *)(v14 + 24);
          break;
        case 3uLL:
          break;
        default:
          uint64_t v20 = 0;
          uint64_t v19 = BYTE6(v16);
          break;
      }
      if (v19 < v20 || v19 < a4)
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1B525F138);
      }
      uint64_t v22 = sub_1B5372398();
      unint64_t v24 = v23;
      a1 = a2();
      sub_1B51D4C64(v22, v24);
      sub_1B51D4C64(v18, v16);
    }
    return a1;
  }
}

uint64_t sub_1B525F2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PSInputByteStream();
  PSInputByteStream.advance(by:)(1);
  if (v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    return sub_1B5260614(a1, a2);
  }
}

uint64_t sub_1B525F370(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  long long v38 = xmmword_1B538BFE0;
  uint64_t v39 = 0;
  char v40 = 0;
  uint64_t v6 = type metadata accessor for PSInputByteStream();
  uint64_t v7 = a1;
  Swift::UInt8_optional v8 = PSInputByteStream.consume()();
  uint64_t v10 = v9;
  if (v9)
  {
LABEL_2:
    sub_1B51D4C64(v38, *((unint64_t *)&v38 + 1));
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return v7;
  }
  while ((*(_WORD *)&v8 & 0x100) == 0)
  {
    if (v8.value == 126)
    {
      uint64_t v7 = a1;
      Swift::UInt8_optional v13 = PSInputByteStream.consume()();
      if (v14) {
        goto LABEL_2;
      }
      if ((*(_WORD *)&v13 & 0x1FF) == 0x3E)
      {
        uint64_t v27 = sub_1B5260614(a1, a2);
        sub_1B51D4C64(v27, v28);
        uint64_t v7 = sub_1B5260E48();
        goto LABEL_45;
      }
LABEL_5:
      char v40 = 1;
      goto LABEL_6;
    }
    if ((v40 & 1) != 0 || v8.value <= 0x20u && ((1 << v8.value) & 0x100003601) != 0) {
      goto LABEL_6;
    }
    if ((v8.value - 118) > 0xAAu)
    {
      LODWORD(v18) = (v8.value - 33);
      switch(HIDWORD(v39))
      {
        case 0:
          uint64_t v18 = 52200625 * (v8.value - 33);
          if ((v18 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_48;
          }
          break;
        case 1:
          int v19 = 614125;
          goto LABEL_25;
        case 2:
          int v19 = 7225;
          goto LABEL_25;
        case 3:
          int v19 = 85;
LABEL_25:
          LODWORD(v18) = v18 * v19;
          break;
        default:
          break;
      }
      BOOL v20 = __CFADD__(v39, v18);
      unsigned int v21 = v39 + v18;
      if (v20)
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
      }
      LODWORD(v39) = v21;
      int v22 = HIDWORD(v39) + 1;
      if (HIDWORD(v39) == -1) {
        goto LABEL_47;
      }
      ++HIDWORD(v39);
      if (v22 == 5)
      {
        unsigned int v37 = bswap32(v21);
        sub_1B5372388();
        uint64_t v39 = 0;
      }
    }
    else
    {
      if (v8.value != 122 || HIDWORD(v39)) {
        goto LABEL_5;
      }
      uint64_t v35 = MEMORY[0x1E4F277C0];
      uint64_t v36 = MEMORY[0x1E4F277B0];
      long long v34 = xmmword_1B538C360;
      unint64_t v15 = __swift_project_boxed_opaque_existential_1(&v34, MEMORY[0x1E4F277C0]);
      uint64_t v17 = *v15;
      unint64_t v16 = v15[1];
      switch(v16 >> 62)
      {
        case 1uLL:
          uint64_t v29 = (int)v17;
          if (v17 >> 32 < (int)v17) {
            goto LABEL_49;
          }
          uint64_t v33 = *v15;
          unint64_t v31 = v15[1];
          sub_1B51D4BB8(v17, v16);
          if (sub_1B5372268() && __OFSUB__(v29, sub_1B5372298())) {
            goto LABEL_51;
          }
          sub_1B5372288();
          sub_1B5372388();
          sub_1B51D4C64(v33, v31);
          goto LABEL_42;
        case 2uLL:
          uint64_t v30 = *(void *)(v17 + 24);
          uint64_t v32 = *(void *)(v17 + 16);
          swift_retain();
          swift_retain();
          if (sub_1B5372268())
          {
            uint64_t v23 = sub_1B5372298();
            uint64_t v24 = v32;
            if (__OFSUB__(v32, v23)) {
              goto LABEL_52;
            }
          }
          else
          {
            uint64_t v24 = v32;
          }
          if (__OFSUB__(v30, v24)) {
            goto LABEL_50;
          }
          sub_1B5372288();
          sub_1B5372388();
          swift_release();
          swift_release();
LABEL_42:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
          break;
        default:
          sub_1B5372388();
          goto LABEL_42;
      }
    }
LABEL_6:
    uint64_t v7 = a1;
    Swift::UInt8_optional v8 = PSInputByteStream.consume()();
    uint64_t v10 = v12;
    if (v12) {
      goto LABEL_2;
    }
  }
  uint64_t v7 = v3;
  uint64_t v25 = sub_1B5260614(a1, a2);
  if (!v10)
  {
    sub_1B51D4C64(v25, v26);
    uint64_t v7 = 0x726F7272656F69;
  }
LABEL_45:
  sub_1B51D4C64(v38, *((unint64_t *)&v38 + 1));
  return v7;
}

uint64_t sub_1B525F8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  char v30 = 0;
  long long v31 = xmmword_1B538BFE0;
  char v32 = 0;
  uint64_t v6 = type metadata accessor for PSInputByteStream();
  uint64_t v7 = a1;
  Swift::UInt8_optional v8 = PSInputByteStream.consume()();
  uint64_t v10 = v9;
  if (v9)
  {
LABEL_2:
    sub_1B51D4C64(v31, *((unint64_t *)&v31 + 1));
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return v7;
  }
  char v12 = 0;
  while (1)
  {
    if ((*(_WORD *)&v8 & 0x100) != 0)
    {
      uint64_t v7 = v3;
      uint64_t v20 = sub_1B5260614(a1, a2);
      if (!v10)
      {
        uint64_t v7 = 0x726F7272656F69;
        sub_1B51D4C64(v20, v21);
        sub_1B51D4C64(v31, *((unint64_t *)&v31 + 1));
        return v7;
      }
      goto LABEL_37;
    }
    if (v8.value == 62) {
      break;
    }
    if ((v32 & 1) != 0 || v8.value <= 0x20u && ((1 << v8.value) & 0x100003601) != 0) {
      goto LABEL_6;
    }
    if ((v8.value - 58) > 0xF5u)
    {
      char v16 = -48;
    }
    else if ((v8.value - 71) > 0xF9u)
    {
      char v16 = -55;
    }
    else
    {
      if ((v8.value - 103) <= 0xF9u)
      {
        char v32 = 1;
        goto LABEL_6;
      }
      char v16 = -87;
    }
    uint64_t v24 = v3;
    if (v12)
    {
      switch(*((void *)&v31 + 1) >> 62)
      {
        case 1:
          uint64_t v17 = (uint64_t)v31 >> 32;
          if ((uint64_t)v31 >> 32 <= (int)v31)
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
          }
          if (!sub_1B5372268())
          {
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
            JUMPOUT(0x1B525FD4CLL);
          }
          if (__OFSUB__(v17 - 1, sub_1B5372298())) {
            goto LABEL_43;
          }
LABEL_33:
          sub_1B53723A8();
          char v12 = 0;
          char v30 = 0;
          break;
        case 2:
          uint64_t v18 = *(void *)(v31 + 24);
          uint64_t v19 = v18 - 1;
          if (__OFSUB__(v18, 1)) {
            goto LABEL_42;
          }
          if (v19 < *(void *)(v31 + 16)) {
            goto LABEL_44;
          }
          if (v19 >= v18) {
            goto LABEL_45;
          }
          if (!sub_1B5372268()) {
            goto LABEL_49;
          }
          if (!__OFSUB__(v19, sub_1B5372298())) {
            goto LABEL_33;
          }
          goto LABEL_46;
        case 3:
          __break(1u);
          goto LABEL_48;
        default:
          uint64_t v25 = v31;
          int v26 = DWORD2(v31);
          __int16 v27 = WORD6(v31);
          goto LABEL_33;
      }
    }
    else
    {
      char v13 = 16 * (v8.value + v16);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BC0);
      uint64_t v28 = v14;
      unint64_t v29 = sub_1B520ACD8();
      LOBYTE(v25) = v13;
      __swift_project_boxed_opaque_existential_1(&v25, v14);
      char v12 = 1;
      sub_1B5372368();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
      char v30 = 1;
    }
    uint64_t v3 = v24;
LABEL_6:
    uint64_t v7 = a1;
    Swift::UInt8_optional v8 = PSInputByteStream.consume()();
    uint64_t v10 = v15;
    if (v15) {
      goto LABEL_2;
    }
  }
  uint64_t v7 = v3;
  uint64_t v22 = sub_1B5260614(a1, a2);
  if (v10)
  {
LABEL_37:
    sub_1B51D4C64(v31, *((unint64_t *)&v31 + 1));
    return v7;
  }
  sub_1B51D4C64(v22, v23);
  uint64_t v7 = v31;
  if (v32 == 1)
  {
    sub_1B51D4C64(v31, *((unint64_t *)&v31 + 1));
    return 0x726F7272656F69;
  }
  return v7;
}

uint64_t sub_1B525FD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  long long v30 = xmmword_1B538BFE0;
  uint64_t v31 = 1;
  unsigned int v32 = 65024;
  char v33 = 0;
  uint64_t v6 = type metadata accessor for PSInputByteStream();
  LOWORD(v7) = PSInputByteStream.consume()();
  uint64_t v9 = v8;
  if (!v8)
  {
    int v11 = v7;
    uint64_t v3 = (uint64_t)&qword_1E9D47BC0;
    do
    {
      if ((v11 & 0x100) != 0)
      {
        uint64_t v23 = sub_1B5260614(a1, a2);
        if (v9)
        {
          sub_1B51D4C64(v30, *((unint64_t *)&v30 + 1));
          return v3;
        }
        uint64_t v3 = 0x72657861746E7973;
        goto LABEL_39;
      }
      if ((~v32 & 0xFE00) != 0)
      {
        unsigned int v14 = sub_1B526121C(v11, v32);
        unsigned int v15 = v14;
        int v16 = (unsigned __int16)v14 >> 14;
        if (v16 == 1)
        {
          unsigned int v32 = 65024;
          if ((v14 & 0x100) == 0)
          {
            uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BC0);
            uint64_t v28 = v20;
            unint64_t v29 = sub_1B520ACD8();
            LOBYTE(v27[0]) = v15;
            __swift_project_boxed_opaque_existential_1(v27, v20);
            sub_1B5372368();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
          }
          if ((v15 & 0x1000000) != 0) {
            goto LABEL_6;
          }
          if (BYTE2(v15) != 92)
          {
            if (BYTE2(v15) == 41)
            {
              uint64_t v21 = v31 - 1;
              if (__OFSUB__(v31, 1)) {
                goto LABEL_48;
              }
              --v31;
              if (!v21)
              {
LABEL_40:
                if (v33)
                {
                  unint64_t v25 = 0xEB00000000726F72;
                  uint64_t v3 = 0x72657861746E7973;
                  char v26 = 7;
                }
                else
                {
                  unint64_t v25 = *((void *)&v30 + 1);
                  uint64_t v3 = v30;
                  sub_1B51D4BB8(v30, *((unint64_t *)&v30 + 1));
                  char v26 = 4;
                }
                uint64_t v23 = sub_1B5260614(a1, a2);
                if (v9)
                {
                  sub_1B51D4C64(v30, *((unint64_t *)&v30 + 1));
                  sub_1B520ABCC(v3, v25, v26);
                  return v3;
                }
LABEL_39:
                sub_1B51D4C64(v23, v24);
                sub_1B51D4C64(v30, *((unint64_t *)&v30 + 1));
                return v3;
              }
            }
            else if (BYTE2(v15) == 40)
            {
              if (__OFADD__(v31, 1)) {
                goto LABEL_47;
              }
              ++v31;
            }
            uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BC0);
            uint64_t v28 = v22;
            unint64_t v29 = sub_1B520ACD8();
            LOBYTE(v27[0]) = BYTE2(v15);
            __swift_project_boxed_opaque_existential_1(v27, v22);
            goto LABEL_25;
          }
          goto LABEL_5;
        }
        if (v16 != 2 || v14 != 32770)
        {
          unsigned int v32 = v14;
          goto LABEL_6;
        }
        unsigned int v32 = 65024;
        char v33 = 1;
      }
      if (v11 != 92)
      {
        if (v11 == 41)
        {
          uint64_t v18 = v31 - 1;
          if (__OFSUB__(v31, 1)) {
            goto LABEL_46;
          }
          --v31;
          if (!v18) {
            goto LABEL_40;
          }
        }
        else if (v11 == 40)
        {
          if (__OFADD__(v31, 1))
          {
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
          }
          ++v31;
        }
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BC0);
        uint64_t v28 = v19;
        unint64_t v29 = sub_1B520ACD8();
        LOBYTE(v27[0]) = v11;
        __swift_project_boxed_opaque_existential_1(v27, v19);
LABEL_25:
        sub_1B5372368();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
        goto LABEL_6;
      }
LABEL_5:
      unsigned int v32 = 0x8000;
LABEL_6:
      LOWORD(v12) = PSInputByteStream.consume()();
      int v11 = v12;
      uint64_t v9 = v13;
    }
    while (!v13);
  }
  sub_1B51D4C64(v30, *((unint64_t *)&v30 + 1));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v3;
}

uint64_t sub_1B5260258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PSInputByteStream();
  Swift::UInt8_optional v5 = PSInputByteStream.consume()();
  if (v6) {
    goto LABEL_2;
  }
  uint64_t v28 = a2;
  if ((*(_WORD *)&v5 & 0x100) != 0)
  {
    __break(1u);
    JUMPOUT(0x1B52604B0);
  }
  uint64_t v7 = sub_1B52615B4(v5.value);
  uint64_t v9 = v8;
  char v11 = v10;
  while (2)
  {
    Swift::UInt8_optional v12 = PSInputByteStream.peek()();
    if (v13)
    {
LABEL_14:
      sub_1B520AD78(v7, v9, v11);
LABEL_2:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      return a1;
    }
    Swift::UInt8 value = v12.value;
    if (*(_WORD *)&v12 & 0x100) != 0 || (int v15 = v12.value, (sub_1B5226AF0(v12.value)))
    {
LABEL_12:
      char v23 = v11;
      uint64_t v25 = sub_1B5260614(a1, v28);
      unint64_t v27 = v26;
      a1 = sub_1B5260B3C(v25, v26, v7, v9, v23);
      sub_1B51D4C64(v25, v27);
      sub_1B520AD78(v7, v9, v23);
    }
    else
    {
      switch(v15)
      {
        case '%':
        case '(':
        case ')':
        case '/':
        case '<':
        case '=':
        case '[':
        case ']':
        case '{':
        case '}':
          goto LABEL_12;
        default:
          PSInputByteStream.advance(by:)(1);
          if (v16) {
            goto LABEL_14;
          }
          uint64_t v17 = sub_1B52607B0(value, v7, v9, v11);
          uint64_t v19 = v18;
          char v20 = v11;
          char v11 = v21;
          int v22 = ~v21;
          sub_1B520AD78(v7, v9, v20);
          uint64_t v7 = v17;
          uint64_t v9 = v19;
          if (v22) {
            continue;
          }
          a1 = sub_1B525EF38(a1, (uint64_t (*)(void))sub_1B52614CC, 0, 0, v28);
          break;
      }
    }
    return a1;
  }
}

uint64_t sub_1B5260614(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PSInputByteStream();
  Swift::UInt8_optional v10 = PSInputByteStream.peek()();
  uint64_t v12 = v11;
  if (v11
    || (char v14 = sub_1B5226AF0(*(_WORD *)&v10 & 0x1FF), (v14 & 1) != 0)
    && (PSInputByteStream.advance(by:)(1), (uint64_t v12 = v15) != 0))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v4, v9);
  }
  else
  {
    uint64_t v16 = PSInputByteStream.finishWithData()((uint64_t)v8, v9);
    if (!v12)
    {
      uint64_t v4 = v16;
      unint64_t v18 = v17;
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v3, v8, v5);
      if (v14)
      {
        sub_1B520A414(1, v4, v18, &v20);
        return v20;
      }
    }
  }
  return v4;
}

uint64_t sub_1B52607B0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      int v6 = a2;
      unint64_t v7 = HIDWORD(a2) * (unint64_t)a2;
      if ((v7 & 0xFFFFFFFF00000000) != 0) {
        return 0x65686374696D696CLL;
      }
      if (a2 >= 0xAu) {
        int v6 = 10;
      }
      if (a1 >= 0x30u && (v6 | 0x30u) > a1)
      {
        char v8 = -48;
        goto LABEL_61;
      }
      if (((a2 - 10) & 0xFFFFFF00) != 0)
      {
        __break(1u);
        goto LABEL_67;
      }
      if ((((a2 - 10) + 65) >> 8))
      {
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      if (a1 >= 0x41u && (a2 + 55) > a1)
      {
        char v8 = -55;
        goto LABEL_61;
      }
      if ((((a2 - 10) + 97) >> 8))
      {
LABEL_68:
        __break(1u);
        JUMPOUT(0x1B5260B1CLL);
      }
      uint64_t v5 = 0;
      if (a1 < 0x61u || (a2 + 87) <= a1) {
        return v5;
      }
      char v8 = -87;
LABEL_61:
      BOOL v11 = __CFADD__(v7, (v8 + a1));
      uint64_t v16 = v7 + (v8 + a1);
      if (v11) {
        return 0x65686374696D696CLL;
      }
      else {
        return a2 | (unint64_t)(v16 << 32);
      }
    case 2:
      swift_bridgeObjectRetain();
      return a2;
    case 3:
      switch(a2)
      {
        case 1:
          uint64_t v13 = 2;
          if ((a1 | 0x20) != 0x65) {
            uint64_t v13 = 0;
          }
          if ((a1 - 58) <= 0xF5u) {
            uint64_t v5 = v13;
          }
          else {
            uint64_t v5 = 0;
          }
          break;
        case 2:
          if ((a1 - 58) >= 0xF6u) {
            uint64_t v14 = 3;
          }
          else {
            uint64_t v14 = 0;
          }
          if (a1 == 45) {
            uint64_t v14 = 3;
          }
          if (a1 == 43) {
            uint64_t v5 = 3;
          }
          else {
            uint64_t v5 = v14;
          }
          break;
        case 3:
          if ((a1 - 58) >= 0xF6u) {
            uint64_t v5 = 3;
          }
          else {
            uint64_t v5 = 0;
          }
          break;
        default:
          uint64_t v9 = 2;
          if ((a1 | 0x20) != 0x65) {
            uint64_t v9 = 0;
          }
          if ((a1 - 58) <= 0xF5u) {
            uint64_t v10 = v9;
          }
          else {
            uint64_t v10 = 0;
          }
          if (a1 == 46) {
            uint64_t v5 = 1;
          }
          else {
            uint64_t v5 = v10;
          }
          break;
      }
      return v5;
    default:
      if (a1 == 35)
      {
        BOOL v11 = a2 == 2 && (HIDWORD(a2) - 37) >= 0xFFFFFFDD;
        if (!v11) {
          return 0;
        }
        else {
          return BYTE4(a2);
        }
      }
      else if (a1 == 46)
      {
        return 1;
      }
      else if ((a1 - 58) >= 0xF6u)
      {
        unint64_t v15 = 10 * HIDWORD(a2) + (a1 - 48);
        if (v15 >= (a2 & 1 | 0x80000000uLL)) {
          return 0;
        }
        else {
          return a2 | (v15 << 32);
        }
      }
      else if ((a1 | 0x20) == 0x65)
      {
        return 2;
      }
      else
      {
        return 0;
      }
  }
}

uint64_t sub_1B5260B3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7 = sub_1B5372788();
  MEMORY[0x1F4188790](v7 - 8);
  switch(a5)
  {
    case 2:
      swift_bridgeObjectRetain();
      return a3;
    case 1:
      a3 >>= 32;
      return a3;
    case 0:
      if ((a3 & 1) == 0)
      {
        if ((a3 & 0x8000000000000000) == 0)
        {
          a3 >>= 32;
          return a3;
        }
        __break(1u);
        goto LABEL_35;
      }
      if (HIDWORD(a3) == 0x80000000) {
        return 0x80000000;
      }
      if ((a3 & 0x8000000000000000) == 0) {
        return -HIDWORD(a3);
      }
      __break(1u);
      goto LABEL_37;
  }
  sub_1B5372738();
  uint64_t result = sub_1B5372708();
  if (v9)
  {
    uint64_t v10 = v9;
    unsigned int v23 = 0;
    MEMORY[0x1F4188790](result);
    v21[-2] = &v23;
    if ((v10 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v12 & 0x1000000000000000))
    {
      sub_1B5372F58();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v22 & 1) == 0) {
        goto LABEL_38;
      }
      goto LABEL_26;
    }
    MEMORY[0x1F4188790](v11);
    v21[-2] = sub_1B5261500;
    v21[-1] = v14;
    if ((v10 & 0x2000000000000000) == 0)
    {
      if ((v13 & 0x1000000000000000) != 0)
      {
        uint64_t v15 = (v10 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
        goto LABEL_15;
      }
LABEL_35:
      uint64_t v15 = sub_1B5372FB8();
LABEL_15:
      char v17 = sub_1B5261404(v15, v16, (void (*)(uint64_t *__return_ptr))sub_1B5261570);
      uint64_t result = swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        goto LABEL_38;
      }
LABEL_26:
      if ((~v23 & 0x7F800000) != 0) {
        return v23;
      }
      else {
        return 0x65686374696D696CLL;
      }
    }
    v21[0] = v13;
    v21[1] = v10 & 0xFFFFFFFFFFFFFFLL;
    if (v13 > 0x20u || ((1 << v13) & 0x100003E01) == 0)
    {
      uint64_t v19 = (unsigned __int8 *)_swift_stdlib_strtof_clocale();
      if (v19)
      {
        int v20 = *v19;
        uint64_t result = swift_bridgeObjectRelease();
        if (!v20) {
          goto LABEL_26;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
LABEL_37:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_38;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1B5260E48()
{
  uint64_t v1 = 0x726F7272656F69;
  if (*(unsigned char *)(v0 + 24)) {
    return v1;
  }
  int v2 = *(_DWORD *)(v0 + 20);
  if (!v2)
  {
LABEL_20:
    uint64_t v1 = *(void *)v0;
    sub_1B51D4BB8(*(void *)v0, *(void *)(v0 + 8));
    return v1;
  }
  uint64_t v3 = 0;
  do
  {
    if ((v2 - 1) >= 3) {
      int v4 = 84;
    }
    else {
      int v4 = dword_1B538E1D4[v2 - 1];
    }
    int v5 = *(_DWORD *)(v0 + 16);
    BOOL v6 = __CFADD__(v5, v4);
    int v7 = v5 + v4;
    if (v6)
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      JUMPOUT(0x1B5261014);
    }
    *(_DWORD *)(v0 + 16) = v7;
    BOOL v6 = __CFADD__(v2++, 1);
    if (v6) {
      goto LABEL_35;
    }
    *(_DWORD *)(v0 + 20) = v2;
    if (v2 == 5)
    {
      sub_1B5372388();
      int v2 = 0;
      *(void *)(v0 + 16) = 0;
    }
    uint64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_36;
    }
    if (*(unsigned char *)(v0 + 24))
    {
      if (v3 != 3) {
        return v1;
      }
      goto LABEL_22;
    }
    ++v3;
  }
  while (v2);
  if (!v8) {
    goto LABEL_20;
  }
  if (v8 == 4)
  {
LABEL_22:
    *(unsigned char *)(v0 + 24) = 1;
    return v1;
  }
  uint64_t v9 = *(void *)v0;
  unint64_t v10 = *(void *)(v0 + 8);
  switch(v10 >> 62)
  {
    case 1uLL:
      uint64_t v11 = v9 >> 32;
      uint64_t v12 = (v9 >> 32) - v8;
      if (__OFSUB__(v9 >> 32, v8)) {
        goto LABEL_40;
      }
      uint64_t v14 = (int)v9;
      goto LABEL_31;
    case 2uLL:
      uint64_t v11 = *(void *)(v9 + 24);
      uint64_t v12 = v11 - v8;
      if (__OFSUB__(v11, v8)) {
        goto LABEL_38;
      }
      uint64_t v14 = *(void *)(v9 + 16);
      goto LABEL_31;
    case 3uLL:
      uint64_t v12 = -v8;
      if (__OFSUB__(0, v8)) {
        goto LABEL_39;
      }
      uint64_t v11 = 0;
LABEL_30:
      uint64_t v14 = 0;
LABEL_31:
      if (v11 < v14 || v12 < v14) {
        goto LABEL_37;
      }
      uint64_t v1 = sub_1B5372398();
      break;
    default:
      uint64_t v11 = BYTE6(v10);
      uint64_t v12 = BYTE6(v10) - v8;
      if (!__OFSUB__(BYTE6(v10), v8)) {
        goto LABEL_30;
      }
      __break(1u);
      goto LABEL_20;
  }
  return v1;
}

uint64_t sub_1B5261024(char *a1, uint64_t a2)
{
  int v5 = *(void **)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  int v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PSScanner();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = (void (*)(char *, char *, uint64_t, double))v5[2];
  char v21 = a1;
  v13(v7, a1, a2, v10);
  uint64_t v14 = (void (*)(char *, char *, uint64_t))v5[4];
  v14(v12, v7, a2);
  uint64_t v15 = PSScanner.next()(v8);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  char v17 = (void (*)(char *, uint64_t))v5[1];
  unint64_t v18 = v21;
  uint64_t v20 = v15;
  v17(v21, a2);
  v14(v18, v12, a2);
  return v20;
}

uint64_t sub_1B526121C(int a1, unsigned int a2)
{
  if ((unsigned __int16)a2 >> 14)
  {
    if ((unsigned __int16)a2 >> 14 == 1)
    {
      return 32770;
    }
    else if (a2 == 0x8000)
    {
      if (a1 - 40 < 2)
      {
        return a1 | 0x1004000u;
      }
      else if (a1 == 13)
      {
        return 32769;
      }
      else if (a1 == 10)
      {
        return 16793856;
      }
      else if ((a1 - 56) >= 0xF8u)
      {
        return ((a1 - 48) << 16) | 1u;
      }
      else
      {
        HIDWORD(v9) = a1;
        LODWORD(v9) = (a1 << 24) - 1543503872;
        uint64_t v3 = 16793608;
        switch((v9 >> 25))
        {
          case 0u:
            uint64_t result = a1 | 0x1004000u;
            break;
          case 3u:
            return v3;
          case 5u:
          case 0xBu:
            uint64_t result = 16793612;
            break;
          case 9u:
            uint64_t result = 16793610;
            break;
          case 0xCu:
            uint64_t result = 16793609;
            break;
          default:
            uint64_t result = (a1 << 16) | 0x4100u;
            break;
        }
      }
    }
    else
    {
      if (a1 == 10) {
        unsigned __int8 v4 = 0;
      }
      else {
        unsigned __int8 v4 = a1;
      }
      if (a2 == 32769) {
        return ((a1 == 10) << 24) | (v4 << 16) | 0x4100u;
      }
      else {
        return a2;
      }
    }
  }
  else if ((a1 - 56) >= 0xF8u)
  {
    if (((a2 + 1) & 0x100) != 0)
    {
      __break(1u);
      JUMPOUT(0x1B52613D0);
    }
    int v5 = (a2 + 1);
    unsigned int v6 = (unsigned __int16)((a1 - 48) | (unsigned __int16)(8 * HIWORD(a2)));
    BOOL v7 = v6 > 0xFF;
    unsigned int v8 = v6 | 0x1004000;
    if (v7) {
      unsigned int v8 = 32770;
    }
    if (v5 == 3) {
      return v8;
    }
    else {
      return v5 | (((a1 - 48) | (8 * HIWORD(a2))) << 16);
    }
  }
  else
  {
    return (a1 << 16) | BYTE2(a2) | 0x4000u;
  }
  return result;
}

uint64_t sub_1B5261404(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t sub_1B5261464(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t sub_1B5261498(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t sub_1B52614CC(uint64_t a1, unint64_t a2)
{
  return a1;
}

unsigned char *sub_1B5261500@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_1B5261570@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1B52615B4(unsigned __int8 a1)
{
  if (a1 == 43) {
    return 0;
  }
  if (a1 == 46 || a1 == 45) {
    return 1;
  }
  if (a1 - 58 >= 0xFFFFFFF6) {
    return ((unint64_t)a1 << 32) - 0x2FFFFFFFFELL;
  }
  uint64_t result = sub_1B53730C8();
  __break(1u);
  return result;
}

unint64_t sub_1B5261670(unsigned __int16 a1, uint64_t a2)
{
  unint64_t result = *(void *)(a2 + 16);
  if (result)
  {
    unint64_t v4 = __clz(result);
    uint64_t v5 = v4 ^ 0x3F;
    unint64_t v6 = 1 << (v4 ^ 0x3Fu);
    if (v6 == result)
    {
      unint64_t v7 = 0;
      unint64_t v6 = *(void *)(a2 + 16);
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v6 >= result)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (*(unsigned __int16 *)(a2 + 24 * v6 + 32) >= a1)
      {
        unint64_t v7 = 0;
        if (v5) {
          goto LABEL_15;
        }
      }
      else
      {
        unint64_t v8 = result + ~v6;
        if (!v8) {
          return result;
        }
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_29;
        }
        if (v8 == 1)
        {
          unint64_t v7 = result - 1;
        }
        else
        {
          if (v8 - 0x4000000000000001 < 0xC000000000000001)
          {
LABEL_30:
            __break(1u);
            return result;
          }
          int v9 = __clz(v8 - 1);
          int v10 = -v9;
          unint64_t v6 = 1 << -(char)v9;
          unint64_t v7 = result - v6;
          if ((v10 & 0x3F) != 0)
          {
LABEL_15:
            while (1)
            {
              unint64_t v11 = v7 + (v6 >> 1);
              if (__OFADD__(v7, v6 >> 1)) {
                break;
              }
              if (v11 >= result) {
                goto LABEL_26;
              }
              if (*(unsigned __int16 *)(a2 + 32 + 24 * v11) < a1) {
                v7 += v6 >> 1;
              }
              BOOL v12 = v6 >= 4;
              v6 >>= 1;
              if (!v12) {
                goto LABEL_20;
              }
            }
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
        }
      }
    }
LABEL_20:
    if (v7 < result)
    {
      if (*(unsigned __int16 *)(a2 + 24 * v7 + 32) >= a1) {
        return v7;
      }
      else {
        return v7 + 1;
      }
    }
    goto LABEL_27;
  }
  return result;
}

unint64_t sub_1B526178C(int64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 62;
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_96;
      }
      uint64_t v7 = (int)v7;
      int v8 = (unsigned __int16)a2;
      if ((_WORD)a2) {
        goto LABEL_12;
      }
      goto LABEL_15;
    case 2uLL:
      uint64_t v10 = *(void *)(a3 + 16);
      uint64_t v9 = *(void *)(a3 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v7 = v9 - v10;
      if (v11) {
        goto LABEL_95;
      }
      int v8 = (unsigned __int16)a2;
      if (!(_WORD)a2) {
        goto LABEL_15;
      }
LABEL_12:
      if (v8 != 1) {
        goto LABEL_102;
      }
      uint64_t v12 = 4;
      goto LABEL_16;
    case 3uLL:
      if ((_WORD)a2)
      {
        if ((unsigned __int16)a2 != 1) {
          goto LABEL_102;
        }
        uint64_t v7 = 0;
        uint64_t v12 = 4;
      }
      else
      {
        uint64_t v7 = (unsigned __int16)a2;
LABEL_15:
        uint64_t v12 = 2;
      }
LABEL_16:
      uint64_t v13 = v7 / v12;
      unint64_t v14 = v7 / v12 - 1;
      if (v7 / v12 == 1) {
        return v14;
      }
      if (v13 < 1) {
        goto LABEL_92;
      }
      unint64_t v15 = __clz(v14) ^ 0x3F;
      uint64_t v16 = 1 << v15;
      if (1 << v15 == v14)
      {
        if (v15)
        {
          unint64_t v51 = a4 >> 62;
          uint64_t v17 = 0;
          goto LABEL_46;
        }
LABEL_31:
        if ((_WORD)a2)
        {
          uint64_t v17 = 0;
          uint64_t v20 = 0;
          if ((unsigned __int16)a2 != 1) {
            goto LABEL_81;
          }
          goto LABEL_79;
        }
        uint64_t v17 = (unsigned __int16)a2;
LABEL_78:
        int64_t v44 = sub_1B51D8F68(1, (uint64_t)sub_1B521A9D0, 0, 2 * v17, a2, a3, a4);
        goto LABEL_83;
      }
      if ((_WORD)a2)
      {
        uint64_t v18 = 4;
        if ((unsigned __int16)a2 != 1) {
          uint64_t v18 = 0;
        }
        if ((unsigned __int128)(v16 * (__int128)v18) >> 64 != (v16 * v18) >> 63) {
          goto LABEL_98;
        }
        int64_t v19 = sub_1B51D91B0(1, v16 * v18, a2, a3, a4);
      }
      else
      {
        if (v16 + 0x4000000000000000 < 0) {
          goto LABEL_99;
        }
        int64_t v19 = sub_1B51D8F68(1, (uint64_t)sub_1B521A9D0, 0, 2 << v15, 0, a3, a4);
      }
      if (v19 > a1)
      {
        if (v15)
        {
          LODWORD(v51) = v4;
          uint64_t v17 = 0;
          unint64_t v14 = 1 << v15;
          goto LABEL_46;
        }
        goto LABEL_31;
      }
      unint64_t v21 = v14 + ~v16;
      if (!v21) {
        return v14;
      }
      if ((v21 & 0x8000000000000000) != 0) {
        goto LABEL_100;
      }
      if (v21 == 1)
      {
        uint64_t v17 = v13 - 2;
        goto LABEL_75;
      }
      LODWORD(v51) = v4;
      if (v21 - 0x4000000000000001 < 0xC000000000000001) {
        goto LABEL_101;
      }
      int v22 = -(int)__clz(v21 - 1);
      uint64_t v17 = v14 - (1 << v22);
      unint64_t v14 = 1 << v22;
      if ((v22 & 0x3F) != 0)
      {
        do
        {
LABEL_46:
          unint64_t v24 = v14 >> 1;
          uint64_t v25 = v17 + (v14 >> 1);
          if (__OFADD__(v17, v14 >> 1)) {
            goto LABEL_88;
          }
          if ((unsigned __int16)a2 == 1)
          {
            uint64_t v27 = 4;
          }
          else
          {
            if (!(_WORD)a2)
            {
              if (v25 + 0x4000000000000000 < 0) {
                goto LABEL_91;
              }
              int64_t v26 = sub_1B51D8F68(1, (uint64_t)sub_1B521A9D0, 0, 2 * v25, 0, a3, a4);
              goto LABEL_42;
            }
            uint64_t v27 = 0;
          }
          uint64_t v28 = v25 * v27;
          if ((unsigned __int128)(v25 * (__int128)v27) >> 64 != (v25 * v27) >> 63) {
            goto LABEL_89;
          }
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = (int)a3;
          switch((int)v51)
          {
            case 1:
              goto LABEL_57;
            case 2:
              uint64_t v31 = *(void *)(a3 + 16);
LABEL_57:
              BOOL v11 = __OFADD__(v31, v28);
              v28 += v31;
              if (v11)
              {
                sub_1B51D4F28();
                swift_allocError();
LABEL_106:
                swift_willThrow();
                goto LABEL_107;
              }
              uint64_t v30 = a3 >> 32;
              uint64_t v29 = (int)a3;
              if (v51 == 2)
              {
                uint64_t v29 = *(void *)(a3 + 16);
                uint64_t v30 = *(void *)(a3 + 24);
              }
              if (v30 < v29)
              {
                __break(1u);
LABEL_88:
                __break(1u);
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
LABEL_92:
                __break(1u);
LABEL_93:
                __break(1u);
LABEL_94:
                __break(1u);
LABEL_95:
                __break(1u);
LABEL_96:
                __break(1u);
LABEL_97:
                __break(1u);
LABEL_98:
                __break(1u);
LABEL_99:
                __break(1u);
LABEL_100:
                __break(1u);
LABEL_101:
                __break(1u);
LABEL_102:
                __break(1u);
LABEL_103:
                sub_1B51D4ED4();
                swift_allocError();
                unsigned char *v46 = 2;
                goto LABEL_106;
              }
LABEL_61:
              if (v28 < v29 || v30 < v28) {
                goto LABEL_103;
              }
              uint64_t v33 = 0;
              uint64_t v34 = 0;
              switch((int)v51)
              {
                case 1:
                  uint64_t v33 = a3 >> 32;
                  uint64_t v34 = (int)a3;
                  break;
                case 2:
                  uint64_t v34 = *(void *)(a3 + 16);
                  uint64_t v33 = *(void *)(a3 + 24);
                  break;
                case 3:
                  break;
                default:
                  uint64_t v34 = 0;
                  uint64_t v33 = BYTE6(a4);
                  break;
              }
              if (v33 < v28 || v33 < v34) {
                goto LABEL_90;
              }
              unint64_t v54 = v17 + (v14 >> 1);
              uint64_t v36 = v17;
              uint64_t v55 = sub_1B5372398();
              uint64_t v56 = v37;
              sub_1B51D4C10();
              uint64_t v55 = sub_1B53724D8();
              uint64_t v56 = v38;
              uint64_t v57 = v39;
              swift_bridgeObjectRetain_n();
              unsigned int v41 = sub_1B51F3DDC(&v55, v40, 1);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              unsigned int v43 = sub_1B51F3DDC(&v55, v42, 1);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v43 < v41)
              {
                uint64_t v47 = v55;
                sub_1B51D4F7C();
                uint64_t v48 = (void *)swift_allocError();
                swift_willThrow();
                sub_1B51D4D34();
                swift_allocError();
                *uint64_t v49 = v48;
                v49[1] = v47;
                v49[2] = 0x7272652072657355;
                void v49[3] = 0xEA0000000000726FLL;
                v49[4] = v48;
                id v50 = v48;
                swift_willThrow();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                while (1)
                {
LABEL_107:
                  swift_unexpectedError();
                  __break(1u);
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              int64_t v26 = v41;
              uint64_t v17 = v36;
              uint64_t v25 = v54;
              unint64_t v24 = v14 >> 1;
              break;
            case 3:
              goto LABEL_61;
            default:
              uint64_t v29 = 0;
              uint64_t v30 = BYTE6(a4);
              goto LABEL_61;
          }
LABEL_42:
          if (v26 <= a1) {
            uint64_t v17 = v25;
          }
          BOOL v23 = v14 >= 4;
          unint64_t v14 = v24;
        }
        while (v23);
      }
LABEL_75:
      if ((unsigned __int16)a2 != 1)
      {
        if ((_WORD)a2)
        {
          uint64_t v20 = 0;
          goto LABEL_81;
        }
        if (v17 + 0x4000000000000000 < 0) {
          goto LABEL_97;
        }
        goto LABEL_78;
      }
LABEL_79:
      uint64_t v20 = 4;
LABEL_81:
      if ((unsigned __int128)(v17 * (__int128)v20) >> 64 != (v17 * v20) >> 63) {
        goto LABEL_93;
      }
      int64_t v44 = sub_1B51D91B0(1, v17 * v20, a2, a3, a4);
LABEL_83:
      if (v44 > a1) {
        return v17;
      }
      unint64_t v14 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_94;
      }
      return v14;
    default:
      uint64_t v7 = BYTE6(a4);
      int v8 = (unsigned __int16)a2;
      if (!(_WORD)a2) {
        goto LABEL_15;
      }
      goto LABEL_12;
  }
}

uint64_t sub_1B5261EC8(unsigned int a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = v4 - *a2;
  if (__OFSUB__(v4, *a2))
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v5)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    unint64_t v7 = 1 << (__clz(v5) ^ 0x3Fu);
    if (v7 == v5)
    {
      uint64_t v8 = *a2;
      unint64_t v7 = v4 - *a2;
    }
    else
    {
      uint64_t v9 = v3 + v7;
      if (__OFADD__(v3, v7))
      {
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      if (v9 < v3 || v9 >= v4) {
        goto LABEL_61;
      }
      long long v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)uint64_t v48 = *((_OWORD *)a2 + 1);
      *(_OWORD *)&v48[16] = v11;
      *(void *)&v48[32] = a2[6];
      uint64_t v12 = (unsigned __int128)(v9 * (__int128)5) >> 64;
      uint64_t v13 = 5 * v9;
      if (v12 != v13 >> 63)
      {
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      uint64_t v57 = 3;
      __int16 v58 = 257;
      uint64_t v59 = sub_1B5217CD8;
      uint64_t v60 = 0;
      long long v61 = *(_OWORD *)&v48[24];
      uint64_t v62 = v13;
      char v63 = 2;
      uint64_t v64 = 0;
      char v65 = 1;
      long long v49 = *(_OWORD *)&v48[8];
      sub_1B5221910((uint64_t)v48);
      sub_1B51D4C10();
      *(void *)&long long v49 = sub_1B53724D8();
      *((void *)&v49 + 1) = v14;
      id v50 = v15;
      unint64_t v2 = 0;
      unsigned int v16 = sub_1B51D26C8((uint64_t *)&v49, v14);
      swift_bridgeObjectRelease();
      if (v16 >= a1)
      {
        uint64_t v8 = v3;
      }
      else
      {
        unint64_t v17 = v5 + ~v7;
        if (!v17) {
          return v4;
        }
        if ((v17 & 0x8000000000000000) != 0)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        if (v17 == 1)
        {
          unint64_t v7 = 1;
        }
        else
        {
          if (v17 - 0x4000000000000001 < 0xC000000000000001) {
            goto LABEL_65;
          }
          unint64_t v7 = 1 << -(uint64_t)__clz(v17 - 1);
        }
        uint64_t v8 = v3 + v5 - v7;
        if (__OFADD__(v3, v5 - v7))
        {
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          sub_1B51D4D34();
          swift_allocError();
          *uint64_t v37 = 2;
          v37[1] = v2;
          void v37[2] = 0xD00000000000001DLL;
          v37[3] = 0x80000001B537BD80;
          v37[4] = 0;
          swift_willThrow();
          while (1)
          {
LABEL_68:
            swift_bridgeObjectRelease();
            swift_unexpectedError();
            __break(1u);
          }
        }
      }
    }
    uint64_t v39 = a2;
    if (v7 >= 2)
    {
      long long v18 = *((_OWORD *)a2 + 2);
      *(_OWORD *)uint64_t v45 = *((_OWORD *)a2 + 1);
      *(_OWORD *)&v45[16] = v18;
      uint64_t v46 = a2[6];
      uint64_t v40 = *((void *)&v18 + 1);
      long long v47 = *(_OWORD *)&v45[8];
      while (1)
      {
        unint64_t v19 = v7;
        unint64_t v20 = v7 >> 1;
        BOOL v21 = __OFADD__(v8, v7 >> 1);
        uint64_t v22 = v8 + (v7 >> 1);
        if (v21) {
          break;
        }
        if (v22 < v3 || v22 >= v4) {
          goto LABEL_50;
        }
        if ((unsigned __int128)(v22 * (__int128)5) >> 64 != (5 * v22) >> 63) {
          goto LABEL_51;
        }
        long long v49 = v47;
        sub_1B5221910((uint64_t)v45);
        sub_1B51D4C10();
        unint64_t v2 = sub_1B53724D8();
        if (__OFADD__(v40, 5 * v22)) {
          goto LABEL_66;
        }
        uint64_t v24 = v4;
        *(void *)&long long v49 = sub_1B53724B8();
        *((void *)&v49 + 1) = v25;
        id v50 = v26;
        swift_bridgeObjectRetain_n();
        unsigned int v28 = sub_1B51F9F5C((uint64_t *)&v49, v27, 3, 1);
        unint64_t v2 = v49;
        if (__OFSUB__(*((void *)&v49 + 1), (void)v49)) {
          goto LABEL_52;
        }
        if ((uint64_t)(*((void *)&v49 + 1) - v49) <= 1)
        {
          *(void *)&long long v43 = 0;
          *((void *)&v43 + 1) = 0xE000000000000000;
          sub_1B5372F98();
          swift_bridgeObjectRelease();
          sub_1B51D4D34();
          swift_allocError();
          *uint64_t v38 = 0;
          v38[1] = v2;
          void v38[2] = 0xD00000000000002BLL;
          v38[3] = 0x80000001B537BD30;
          unsigned char v38[4] = 0;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_68;
        }
        if ((uint64_t)v49 > 0x7FFFFFFFFFFFFFFDLL) {
          goto LABEL_53;
        }
        unint64_t v29 = v49 + 2;
        if (*((uint64_t *)&v49 + 1) < (uint64_t)v49 + 2) {
          goto LABEL_53;
        }
        *(void *)&long long v49 = v49 + 2;
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        unint64_t v30 = *((void *)v50 + 2);
        if (v30 < v2 || v30 < v29) {
          goto LABEL_55;
        }
        unsigned int v31 = v28;
        swift_bridgeObjectRelease_n();
        unint64_t v2 = (unint64_t)v50;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31 < a1) {
          uint64_t v8 = v22;
        }
        unint64_t v7 = v20;
        uint64_t v4 = v24;
        if (v19 < 4) {
          goto LABEL_42;
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
LABEL_42:
    if (v8 < v3 || v8 >= v4) {
      goto LABEL_58;
    }
    long long v32 = *((_OWORD *)v39 + 2);
    long long v43 = *((_OWORD *)v39 + 1);
    *(_OWORD *)int64_t v44 = v32;
    *(void *)&v44[16] = v39[6];
    if ((unsigned __int128)(v8 * (__int128)5) >> 64 != (5 * v8) >> 63)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    *(void *)&long long v49 = 3;
    WORD4(v49) = 257;
    id v50 = sub_1B5217CD8;
    uint64_t v51 = 0;
    long long v52 = *(_OWORD *)&v44[8];
    uint64_t v53 = 5 * v8;
    char v54 = 2;
    uint64_t v55 = 0;
    char v56 = 1;
    sub_1B5221910((uint64_t)&v43);
    sub_1B51D4C10();
    v42[0] = sub_1B53724D8();
    v42[1] = v33;
    v42[2] = v34;
    unsigned int v35 = sub_1B51D26C8(v42, v33);
    swift_bridgeObjectRelease();
    if (v35 >= a1) {
      return v8;
    }
    else {
      return v8 + 1;
    }
  }
  return v4;
}

uint64_t sub_1B526244C(uint64_t result, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  unint64_t v4 = v2 - *a2;
  if (__OFSUB__(v2, *a2))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!v4) {
    return v2;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  unsigned int v5 = result;
  unint64_t v6 = 1 << (__clz(v4) ^ 0x3Fu);
  if (v6 == v4)
  {
    uint64_t v7 = *a2;
    unint64_t v6 = v2 - *a2;
LABEL_20:
    if (v6 >= 2)
    {
      while (1)
      {
        int64_t v11 = v7 + (v6 >> 1);
        if (__OFADD__(v7, v6 >> 1)) {
          break;
        }
        if (v11 < v3 || v11 >= v2) {
          goto LABEL_40;
        }
        unint64_t result = sub_1B52A3F0C(v7 + (v6 >> 1));
        if (v13 < v5) {
          v7 += v6 >> 1;
        }
        BOOL v14 = v6 >= 4;
        v6 >>= 1;
        if (!v14) {
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_30:
    if (v7 < v3 || v7 >= v2) {
      goto LABEL_43;
    }
    sub_1B52A3F0C(v7);
    if (v16 >= v5) {
      return v7;
    }
    else {
      return v7 + 1;
    }
  }
  unint64_t result = v3 + v6;
  if (__OFADD__(v3, v6))
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (result < v3 || result >= v2) {
    goto LABEL_45;
  }
  unint64_t result = sub_1B52A3F0C(result);
  uint64_t v7 = v3;
  if (v9 >= v5) {
    goto LABEL_20;
  }
  unint64_t v10 = v4 + ~v6;
  if (!v10) {
    return v2;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v10 == 1)
  {
    unint64_t v6 = 1;
    goto LABEL_19;
  }
  if (v10 - 0x4000000000000001 >= 0xC000000000000001)
  {
    unint64_t v6 = 1 << -(uint64_t)__clz(v10 - 1);
LABEL_19:
    uint64_t v7 = v3 + v4 - v6;
    if (__OFADD__(v3, v4 - v6))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    goto LABEL_20;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1B5262644(unsigned int a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = v3 - *a2;
  if (__OFSUB__(v3, *a2))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    unint64_t v6 = 1 << (__clz(v4) ^ 0x3Fu);
    if (v6 == v4)
    {
      uint64_t v7 = *a2;
      unint64_t v6 = v3 - *a2;
    }
    else
    {
      uint64_t v8 = v2 + v6;
      if (__OFADD__(v2, v6))
      {
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      if (v8 < v2 || v8 >= v3) {
        goto LABEL_51;
      }
      long long v10 = *((_OWORD *)a2 + 2);
      long long v58 = *((_OWORD *)a2 + 1);
      *(_OWORD *)uint64_t v59 = v10;
      *(_OWORD *)&v59[16] = *((_OWORD *)a2 + 3);
      *(void *)&v59[32] = a2[8];
      uint64_t v11 = (unsigned __int128)(v8 * (__int128)12) >> 64;
      uint64_t v12 = 12 * v8;
      if (v11 != v12 >> 63)
      {
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      __int16 v70 = 257;
      uint64_t v71 = sub_1B52A47FC;
      uint64_t v72 = 0;
      char v73 = 1;
      uint64_t v74 = sub_1B52A485C;
      uint64_t v75 = 0;
      long long v76 = *(_OWORD *)&v59[8];
      uint64_t v77 = v12;
      char v78 = 2;
      uint64_t v79 = 0;
      char v80 = 1;
      long long v60 = *(_OWORD *)&v59[24];
      sub_1B52218E0((uint64_t)&v58);
      sub_1B51D4C10();
      *(void *)&long long v60 = sub_1B53724D8();
      *((void *)&v60 + 1) = v13;
      uint64_t v61 = v14;
      uint64_t v15 = sub_1B51D2BC4((uint64_t *)&v60, v13);
      swift_bridgeObjectRelease();
      if (HIDWORD(v15) >= a1)
      {
        uint64_t v7 = v2;
      }
      else
      {
        unint64_t v16 = v4 + ~v6;
        if (!v16) {
          return v3;
        }
        if ((v16 & 0x8000000000000000) != 0)
        {
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v16 == 1)
        {
          unint64_t v6 = 1;
        }
        else
        {
          if (v16 - 0x4000000000000001 < 0xC000000000000001)
          {
LABEL_55:
            __break(1u);
            swift_bridgeObjectRelease();
LABEL_58:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_59;
          }
          unint64_t v6 = 1 << -(uint64_t)__clz(v16 - 1);
        }
        uint64_t v7 = v2 + v4 - v6;
        if (__OFADD__(v2, v4 - v6))
        {
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
      }
    }
    int64_t v44 = a2;
    if (v6 >= 2)
    {
      long long v17 = *((_OWORD *)a2 + 3);
      *(void *)&v56[16] = a2[8];
      long long v18 = *((_OWORD *)a2 + 1);
      long long v55 = *((_OWORD *)a2 + 2);
      *(_OWORD *)char v56 = v17;
      long long v54 = v18;
      uint64_t v45 = *((void *)&v55 + 1);
      uint64_t v46 = v2;
      long long v57 = *(_OWORD *)&v56[8];
      while (1)
      {
        uint64_t v19 = v7 + (v6 >> 1);
        if (__OFADD__(v7, v6 >> 1)) {
          break;
        }
        if (v19 < v2 || v19 >= v3) {
          goto LABEL_44;
        }
        if ((unsigned __int128)(v19 * (__int128)12) >> 64 != (12 * v19) >> 63) {
          goto LABEL_45;
        }
        uint64_t v49 = v7;
        long long v60 = v57;
        sub_1B52218E0((uint64_t)&v54);
        sub_1B51D4C10();
        uint64_t v21 = sub_1B53724D8();
        if (__OFADD__(v45, 12 * v19))
        {
          sub_1B51D4D34();
          swift_allocError();
          *uint64_t v40 = 2;
          v40[1] = v21;
          v40[2] = 0xD00000000000001DLL;
          v40[3] = 0x80000001B537BD80;
          v40[4] = 0;
          swift_willThrow();
          while (1)
          {
LABEL_59:
            swift_bridgeObjectRelease();
            swift_unexpectedError();
            __break(1u);
          }
        }
        unint64_t v48 = v6 >> 1;
        unint64_t v22 = v6;
        *(void *)&long long v60 = sub_1B53724B8();
        *((void *)&v60 + 1) = v23;
        uint64_t v61 = v24;
        *(void *)&long long v51 = v60;
        *((void *)&v51 + 1) = v23;
        *(void *)long long v52 = v24;
        swift_bridgeObjectRetain_n();
        unsigned int v26 = sub_1B51F3DDC((uint64_t *)&v51, v25, 1);
        uint64_t v27 = v3;
        unsigned int v29 = sub_1B51F3DDC((uint64_t *)&v51, v28, 1);
        swift_bridgeObjectRelease();
        uint64_t v30 = v51;
        uint64_t v31 = *(void *)v52;
        if (v29 < v26)
        {
          sub_1B51D4F7C();
          unsigned int v41 = (void *)swift_allocError();
          swift_willThrow();
          sub_1B51D4D34();
          swift_allocError();
          *uint64_t v42 = v41;
          v42[1] = v30;
          v42[2] = 0x7272652072657355;
          v42[3] = 0xEA0000000000726FLL;
          uint64_t v42[4] = v41;
          id v43 = v41;
          swift_willThrow();
          goto LABEL_58;
        }
        uint64_t v32 = *((void *)&v51 + 1);
        swift_bridgeObjectRelease();
        *(void *)&long long v60 = v30;
        *((void *)&v60 + 1) = v32;
        uint64_t v61 = v31;
        sub_1B51F3DDC((uint64_t *)&v60, v33, 1);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = v49;
        if (v29 < a1) {
          uint64_t v7 = v19;
        }
        unint64_t v6 = v48;
        uint64_t v3 = v27;
        uint64_t v2 = v46;
        if (v22 < 4) {
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
LABEL_36:
    if (v7 < v2 || v7 >= v3) {
      goto LABEL_48;
    }
    long long v34 = *((_OWORD *)v44 + 2);
    long long v51 = *((_OWORD *)v44 + 1);
    *(_OWORD *)long long v52 = v34;
    *(_OWORD *)&v52[16] = *((_OWORD *)v44 + 3);
    uint64_t v53 = v44[8];
    if ((unsigned __int128)(v7 * (__int128)12) >> 64 != (12 * v7) >> 63)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    uint64_t v35 = v7;
    LOWORD(v60) = 257;
    *((void *)&v60 + 1) = sub_1B52A47FC;
    uint64_t v61 = 0;
    char v62 = 1;
    char v63 = sub_1B52A485C;
    uint64_t v64 = 0;
    long long v65 = *(_OWORD *)&v52[8];
    uint64_t v66 = 12 * v7;
    char v67 = 2;
    uint64_t v68 = 0;
    char v69 = 1;
    sub_1B52218E0((uint64_t)&v51);
    sub_1B51D4C10();
    v50[0] = sub_1B53724D8();
    v50[1] = v36;
    v50[2] = v37;
    uint64_t v38 = sub_1B51D2BC4(v50, v36);
    swift_bridgeObjectRelease();
    if (HIDWORD(v38) >= a1) {
      return v35;
    }
    else {
      return v35 + 1;
    }
  }
  return v3;
}

uint64_t sub_1B5262C60(unsigned int a1, uint64_t *a2)
{
  unint64_t v2 = a2[5];
  if (!v2) {
    return v2;
  }
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_30;
  }
  unint64_t v3 = __clz(v2) ^ 0x3F;
  unint64_t v4 = 1 << v3;
  if (1 << v3 == v2)
  {
    uint64_t v5 = 0;
    unint64_t v4 = a2[5];
    if (!v3) {
      goto LABEL_22;
    }
  }
  else
  {
    sub_1B52A52C4(1 << v3, (uint64_t)&v44);
    unsigned int v6 = v44;
    uint64_t v7 = v47;
    unint64_t v8 = v48;
    sub_1B51D4C64(v45, v46);
    sub_1B51D4C64(v7, v8);
    if (v6 < a1)
    {
      unint64_t v9 = v2 + ~v4;
      if (!v9) {
        return v2;
      }
      if ((v9 & 0x8000000000000000) != 0) {
        goto LABEL_31;
      }
      if (v9 == 1)
      {
        uint64_t v5 = v2 - 1;
      }
      else
      {
        if (v9 - 0x4000000000000001 < 0xC000000000000001) {
          goto LABEL_32;
        }
        int v10 = -(int)__clz(v9 - 1);
        unint64_t v4 = 1 << v10;
        uint64_t v5 = v2 - (1 << v10);
        if ((v10 & 0x3F) != 0) {
          goto LABEL_15;
        }
      }
LABEL_22:
      sub_1B52A52C4(v5, (uint64_t)&v44);
      unsigned int v29 = v44;
      uint64_t v30 = v47;
      unint64_t v31 = v48;
      sub_1B51D4C64(v45, v46);
      sub_1B51D4C64(v30, v31);
      if (v29 < a1)
      {
        unint64_t v2 = v5 + 1;
        if (!__OFADD__(v5, 1)) {
          return v2;
        }
        __break(1u);
      }
      return v5;
    }
    uint64_t v5 = 0;
    if (!v3) {
      goto LABEL_22;
    }
  }
LABEL_15:
  uint64_t v34 = a2[2];
  unint64_t v39 = a2[1];
  uint64_t v40 = *a2;
  while (1)
  {
    int64_t v11 = v5 + (v4 >> 1);
    if (__OFADD__(v5, v4 >> 1)) {
      break;
    }
    if ((unsigned __int128)(v11 * (__int128)11) >> 64 != (11 * v11) >> 63) {
      goto LABEL_29;
    }
    *(void *)&long long v44 = v40;
    *((void *)&v44 + 1) = v39;
    sub_1B5221844((uint64_t)a2);
    sub_1B51D4BB8(v40, v39);
    sub_1B51D4C10();
    unint64_t v2 = sub_1B53724D8();
    if (__OFADD__(v34, 11 * v11)) {
      goto LABEL_33;
    }
    uint64_t v12 = sub_1B53724B8();
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    swift_bridgeObjectRetain();
    *(void *)&long long v44 = v12;
    *((void *)&v44 + 1) = v14;
    uint64_t v45 = v16;
    swift_bridgeObjectRetain_n();
    LODWORD(v12) = sub_1B51F9F5C((uint64_t *)&v44, v17, 3, 1);
    uint64_t v36 = v5 + (v4 >> 1);
    unint64_t v37 = v4 >> 1;
    long long v42 = v44;
    uint64_t v43 = v45;
    swift_bridgeObjectRetain();
    unsigned int v19 = sub_1B51F3DDC((uint64_t *)&v42, v18, 1);
    unsigned int v20 = v12;
    unint64_t v38 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v44 = v42;
    uint64_t v45 = v43;
    swift_bridgeObjectRetain();
    unsigned int v22 = sub_1B51F3DDC((uint64_t *)&v44, v21, 1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v23 = v19;
    uint64_t v24 = v22;
    sub_1B5221844((uint64_t)a2);
    unint64_t v2 = v39;
    sub_1B52A702C(v49, v40, v39, v23);
    uint64_t v25 = v49[1];
    unint64_t v26 = v49[2];
    sub_1B5221844((uint64_t)a2);
    sub_1B52A702C(v50, v40, v39, v24);
    uint64_t v28 = v50[1];
    unint64_t v27 = v50[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B52686D8((uint64_t)a2);
    sub_1B51D4C64(v25, v26);
    sub_1B51D4C64(v28, v27);
    if (v20 < a1) {
      uint64_t v5 = v36;
    }
    unint64_t v4 = v37;
    if (v38 < 4) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  sub_1B51D4D34();
  swift_allocError();
  void *v33 = 2;
  v33[1] = v2;
  v33[2] = 0xD00000000000001DLL;
  long long v33[3] = 0x80000001B537BD80;
  v33[4] = 0;
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1B52686D8((uint64_t)a2);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_1B52630D0(unsigned int a1, uint64_t a2)
{
  unint64_t result = *(void *)(a2 + 16);
  if (result)
  {
    unint64_t v4 = __clz(result);
    uint64_t v5 = v4 ^ 0x3F;
    unint64_t v6 = 1 << (v4 ^ 0x3Fu);
    if (v6 == result)
    {
      unint64_t v7 = 0;
      unint64_t v6 = *(void *)(a2 + 16);
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v6 >= result)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (*(unsigned __int16 *)(a2 + 4 * v6 + 32) >= a1)
      {
        unint64_t v7 = 0;
        if (v5) {
          goto LABEL_15;
        }
      }
      else
      {
        unint64_t v8 = result + ~v6;
        if (!v8) {
          return result;
        }
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_29;
        }
        if (v8 == 1)
        {
          unint64_t v7 = result - 1;
        }
        else
        {
          if (v8 - 0x4000000000000001 < 0xC000000000000001)
          {
LABEL_30:
            __break(1u);
            return result;
          }
          int v9 = __clz(v8 - 1);
          int v10 = -v9;
          unint64_t v6 = 1 << -(char)v9;
          unint64_t v7 = result - v6;
          if ((v10 & 0x3F) != 0)
          {
LABEL_15:
            while (1)
            {
              unint64_t v11 = v7 + (v6 >> 1);
              if (__OFADD__(v7, v6 >> 1)) {
                break;
              }
              if (v11 >= result) {
                goto LABEL_26;
              }
              if (*(unsigned __int16 *)(a2 + 32 + 4 * v11) < a1) {
                v7 += v6 >> 1;
              }
              BOOL v12 = v6 >= 4;
              v6 >>= 1;
              if (!v12) {
                goto LABEL_20;
              }
            }
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
        }
      }
    }
LABEL_20:
    if (v7 < result)
    {
      if (*(unsigned __int16 *)(a2 + 4 * v7 + 32) >= a1) {
        return v7;
      }
      else {
        return v7 + 1;
      }
    }
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_1B52631DC(uint64_t a1, uint64_t a2)
{
  void (*v14)(void *__return_ptr, void *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  uint64_t v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  void (*v34)(void *__return_ptr, void *);
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void v41[2];
  void v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void v46[3];
  void v47[4];
  long long v48;
  long long v49;
  char v50;
  _OWORD v51[2];
  uint64_t v52;

  long long v2 = *(_OWORD *)(a2 + 16);
  v51[0] = *(_OWORD *)a2;
  v51[1] = v2;
  long long v52 = *(void *)(a2 + 32);
  uint64_t v3 = *((void *)&v51[0] + 1);
  if (!*((void *)&v51[0] + 1)) {
    return v3;
  }
  if ((*((void *)&v51[0] + 1) & 0x8000000000000000) == 0)
  {
    unint64_t v4 = __clz(*((unint64_t *)&v51[0] + 1)) ^ 0x3F;
    unint64_t v5 = 1 << v4;
    if (1 << v4 == *((void *)&v51[0] + 1))
    {
      uint64_t v6 = 0;
      unint64_t v5 = *((void *)&v51[0] + 1);
      if (!v4) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_1B529C424(1 << v4);
      if (v7 <= a1)
      {
        unint64_t v8 = *((void *)&v51[0] + 1) + ~v5;
        if (!v8) {
          return v3;
        }
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_28;
        }
        if (v8 == 1)
        {
          uint64_t v6 = *((void *)&v51[0] + 1) - 1;
LABEL_21:
          sub_1B529C424(v6);
          if (v29 > a1) {
            return v6;
          }
          uint64_t v3 = v6 + 1;
          if (!__OFADD__(v6, 1)) {
            return v3;
          }
          goto LABEL_27;
        }
        if (v8 - 0x4000000000000001 < 0xC000000000000001) {
          goto LABEL_29;
        }
        int v9 = -(int)__clz(v8 - 1);
        unint64_t v5 = 1 << v9;
        uint64_t v6 = *((void *)&v51[0] + 1) - (1 << v9);
        if ((v9 & 0x3F) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v6 = 0;
        if (!v4) {
          goto LABEL_21;
        }
      }
    }
    unint64_t v31 = *(void *)&v51[0];
    while (1)
    {
      uint64_t v10 = v6 + (v5 >> 1);
      if (__OFADD__(v6, v5 >> 1)) {
        break;
      }
      if ((unsigned __int128)(v10 * (__int128)v31) >> 64 != (v10 * v31) >> 63) {
        goto LABEL_30;
      }
      uint64_t v35 = v5 >> 1;
      uint64_t v36 = v5;
      unint64_t v37 = v6;
      uint64_t v34 = *(void (**)(void *__return_ptr, void *))(a2 + 80);
      long long v11 = *(_OWORD *)(a2 + 56);
      unint64_t v48 = *(_OWORD *)(a2 + 40);
      uint64_t v49 = v11;
      id v50 = *(unsigned char *)(a2 + 72);
      sub_1B52685FC((uint64_t)&v48);
      swift_retain();
      sub_1B5268628((uint64_t)v51);
      uint64_t v12 = sub_1B53724C8();
      uint64_t v14 = (void (*)(void *__return_ptr, void *))*((void *)&v48 + 1);
      __int16 v13 = v48;
      uint64_t v43 = v12;
      long long v44 = v15;
      uint64_t v45 = v16;
      unint64_t v38 = v12;
      unint64_t v39 = v15;
      uint64_t v40 = v16;
      swift_bridgeObjectRetain_n();
      uint64_t v18 = (unsigned __int16)sub_1B51F3E0C(&v38, v17, v13 & 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unsigned int v20 = (unsigned __int16)sub_1B51F3E0C(&v38, v19, HIBYTE(v13) & 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v18;
      unsigned int v22 = v38;
      uint64_t v23 = v39;
      uint64_t v24 = v40;
      v41[0] = v21;
      v41[1] = v20;
      v14(v42, v41);
      swift_bridgeObjectRelease();
      uint64_t v25 = v42[0];
      unint64_t v26 = v42[1];
      uint64_t v43 = v22;
      long long v44 = v23;
      uint64_t v45 = v24;
      uint64_t v28 = sub_1B51FA4D0(&v43, v27, *((uint64_t *)&v49 + 1), v50);
      swift_bridgeObjectRelease();
      v46[0] = v25;
      v46[1] = v26;
      v46[2] = v28;
      v34(v47, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B51E00CC((uint64_t)v51);
      sub_1B5268654((uint64_t)&v48);
      swift_release();
      uint64_t v6 = v37;
      if (v47[1] <= a1) {
        uint64_t v6 = v10;
      }
      unint64_t v5 = v35;
      if (v36 < 4) {
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  sub_1B51D4F28();
  swift_allocError();
  swift_willThrow();
  unint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B52636C4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  v39[0] = *(_OWORD *)a2;
  v39[1] = v2;
  uint64_t v40 = *(void *)(a2 + 32);
  uint64_t v3 = *((void *)&v39[0] + 1);
  if (!*((void *)&v39[0] + 1)) {
    return v3;
  }
  if ((*((void *)&v39[0] + 1) & 0x8000000000000000) != 0) {
    goto LABEL_34;
  }
  unint64_t v4 = __clz(*((unint64_t *)&v39[0] + 1)) ^ 0x3F;
  unint64_t v5 = 1 << v4;
  if (1 << v4 == *((void *)&v39[0] + 1))
  {
    uint64_t v6 = 0;
    unint64_t v5 = *((void *)&v39[0] + 1);
    if (!v4) {
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  uint64_t v7 = sub_1B529C5D4(1 << v4);
  uint64_t v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v8 >= v7)
  {
    if (v8 <= a1)
    {
      unint64_t v9 = *((void *)&v39[0] + 1) + ~v5;
      if (!v9) {
        return v3;
      }
      if ((v9 & 0x8000000000000000) != 0) {
        goto LABEL_40;
      }
      if (v9 == 1)
      {
        uint64_t v6 = *((void *)&v39[0] + 1) - 1;
        goto LABEL_25;
      }
      if (v9 - 0x4000000000000001 < 0xC000000000000001) {
        goto LABEL_41;
      }
      int v10 = -(int)__clz(v9 - 1);
      unint64_t v5 = 1 << v10;
      uint64_t v6 = *((void *)&v39[0] + 1) - (1 << v10);
      if ((v10 & 0x3F) == 0)
      {
LABEL_25:
        uint64_t v23 = sub_1B529C5D4(v6);
        uint64_t v24 = v23 + 1;
        if (!__OFADD__(v23, 1))
        {
          if (v24 >= v23)
          {
            if (v24 > a1) {
              return v6;
            }
            uint64_t v3 = v6 + 1;
            if (!__OFADD__(v6, 1)) {
              return v3;
            }
            goto LABEL_39;
          }
          goto LABEL_36;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v6 = 0;
      if (!v4) {
        goto LABEL_25;
      }
    }
LABEL_17:
    uint64_t v27 = *(void *)&v39[0];
    while (1)
    {
      uint64_t v11 = v6 + (v5 >> 1);
      if (__OFADD__(v6, v5 >> 1)) {
        break;
      }
      if ((unsigned __int128)(v11 * (__int128)v27) >> 64 != (v11 * v27) >> 63) {
        goto LABEL_42;
      }
      long long v12 = *(_OWORD *)(a2 + 56);
      long long v35 = *(_OWORD *)(a2 + 40);
      long long v36 = v12;
      uint64_t v37 = *(void *)(a2 + 72);
      sub_1B5268680((uint64_t)&v35);
      sub_1B5268628((uint64_t)v39);
      *(void *)&long long v29 = sub_1B53724C8();
      uint64_t v13 = *((void *)&v35 + 1);
      char v38 = v36;
      char v14 = v35 & 1;
      *(void *)&long long v31 = v29;
      *((void *)&v31 + 1) = v15;
      uint64_t v32 = v16;
      *((void *)&v29 + 1) = v15;
      uint64_t v30 = v16;
      swift_bridgeObjectRetain_n();
      unsigned __int16 v18 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v29, v17, v14);
      unint64_t v19 = v5;
      swift_bridgeObjectRelease();
      long long v31 = v29;
      uint64_t v32 = v30;
      uint64_t v21 = sub_1B51FA4D0((uint64_t *)&v31, v20, v13, v38);
      swift_bridgeObjectRelease();
      v33[0] = v18;
      v33[1] = v21;
      (*((void (**)(uint64_t *__return_ptr, void *))&v36 + 1))(v34, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B51E00CC((uint64_t)v39);
      sub_1B52686AC((uint64_t)&v35);
      uint64_t v22 = v34[0] + 1;
      if (__OFADD__(v34[0], 1)) {
        goto LABEL_32;
      }
      if (v22 < v34[0]) {
        goto LABEL_33;
      }
      v5 >>= 1;
      if (v22 <= a1) {
        uint64_t v6 = v11;
      }
      if (v19 < 4) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  sub_1B51D4F28();
  swift_allocError();
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B5263AAC(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return v3;
  }
  uint64_t v6 = result;
  unint64_t v7 = __clz(v3) ^ 0x3F;
  unint64_t v8 = 1 << v7;
  if (1 << v7 == v3)
  {
    unint64_t v9 = 0;
    uint64_t result = 0;
    unint64_t v8 = *(void *)(a3 + 16);
    if (!v7)
    {
LABEL_30:
      if (v9 < v3)
      {
        uint64_t v18 = a3 + 16 * v9;
        if (*(void *)(v18 + 32) == v6 && *(void *)(v18 + 40) == a2) {
          return v9;
        }
        else {
          return v9 + (sub_1B5373228() & 1);
        }
      }
      goto LABEL_40;
    }
LABEL_16:
    unint64_t v9 = result;
    while (1)
    {
      unint64_t v14 = v9 + (v8 >> 1);
      if (__OFADD__(v9, v8 >> 1)) {
        break;
      }
      if (v14 >= v3) {
        goto LABEL_39;
      }
      uint64_t v15 = (uint64_t *)(a3 + 32 + 16 * v14);
      uint64_t result = *v15;
      if (*v15 != v6 || v15[1] != a2)
      {
        uint64_t result = sub_1B5373228();
        if (result) {
          v9 += v8 >> 1;
        }
      }
      BOOL v13 = v8 >= 4;
      v8 >>= 1;
      if (!v13) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (1 << v7 >= v3)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v10 = a3 + 16 * v8;
  BOOL v11 = *(void *)(v10 + 32) == result && *(void *)(v10 + 40) == a2;
  if (v11 || (uint64_t result = sub_1B5373228(), (result & 1) == 0))
  {
    unint64_t v9 = 0;
    uint64_t result = 0;
    if (!v7) {
      goto LABEL_30;
    }
    goto LABEL_16;
  }
  unint64_t v12 = v3 + ~v8;
  if (!v12) {
    return v3;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v12 == 1)
  {
    unint64_t v9 = v3 - 1;
    goto LABEL_30;
  }
  if (v12 - 0x4000000000000001 >= 0xC000000000000001)
  {
    int v17 = -(int)__clz(v12 - 1);
    unint64_t v8 = 1 << v17;
    unint64_t v9 = v3 - (1 << v17);
    uint64_t result = v9;
    if ((v17 & 0x3F) == 0) {
      goto LABEL_30;
    }
    goto LABEL_16;
  }
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_1B5263C68(unsigned int a1, uint64_t a2)
{
  unint64_t result = *(void *)(a2 + 16);
  if (result)
  {
    unint64_t v4 = 1 << (__clz(result) ^ 0x3Fu);
    if (v4 == result)
    {
      unint64_t v5 = 0;
      unint64_t v4 = *(void *)(a2 + 16);
      if (result >= 2) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v4 >= result)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (*(_DWORD *)(a2 + 8 * v4 + 32) >= a1)
      {
        unint64_t v5 = 0;
        if (v4 >= 2) {
          goto LABEL_15;
        }
      }
      else
      {
        unint64_t v4 = result + ~v4;
        if (!v4) {
          return result;
        }
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_29;
        }
        if (v4 != 1)
        {
          if (v4 - 0x4000000000000001 < 0xC000000000000001)
          {
LABEL_30:
            __break(1u);
            return result;
          }
          unint64_t v4 = 1 << -(char)__clz(v4 - 1);
        }
        unint64_t v5 = result - v4;
        if (v4 >= 2)
        {
LABEL_15:
          while (1)
          {
            unint64_t v6 = v5 + (v4 >> 1);
            if (__OFADD__(v5, v4 >> 1)) {
              break;
            }
            if (v6 >= result) {
              goto LABEL_26;
            }
            if (*(_DWORD *)(a2 + 32 + 8 * v6) < a1) {
              v5 += v4 >> 1;
            }
            BOOL v7 = v4 >= 4;
            v4 >>= 1;
            if (!v7) {
              goto LABEL_20;
            }
          }
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
    }
LABEL_20:
    if (v5 < result)
    {
      if (*(_DWORD *)(a2 + 8 * v5 + 32) >= a1) {
        return v5;
      }
      else {
        return v5 + 1;
      }
    }
    goto LABEL_27;
  }
  return result;
}

uint64_t Collection<>.lowerBound<A>(of:lessFunc:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v312 = a3;
  v313 = a2;
  uint64_t v311 = a1;
  uint64_t v293 = a8;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  v267 = (char *)&v256 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  v273 = (char *)&v256 - v16;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v269 = sub_1B5372688();
  uint64_t v268 = *(void *)(v269 - 8);
  MEMORY[0x1F4188790](v269);
  v271 = (char *)&v256 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v266 = (char *)&v256 - v20;
  uint64_t v307 = swift_getAssociatedTypeWitness();
  uint64_t v298 = *(void *)(v307 - 8);
  MEMORY[0x1F4188790](v307);
  v306 = (char *)&v256 - v21;
  uint64_t v297 = AssociatedConformanceWitness;
  uint64_t v290 = sub_1B5373048();
  uint64_t v302 = *(void *)(v290 - 8);
  MEMORY[0x1F4188790](v290);
  v291 = (char *)&v256 - v22;
  uint64_t v23 = sub_1B5372CD8();
  MEMORY[0x1F4188790](v23 - 8);
  v278 = (char *)&v256 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v277 = (char *)&v256 - v26;
  MEMORY[0x1F4188790](v27);
  v287 = (char *)&v256 - v28;
  uint64_t v280 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v322 = *(void *)(v280 + 16);
  uint64_t v320 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v320);
  v265 = (char *)&v256 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  v321 = (char *)&v256 - v31;
  uint64_t v289 = *(void *)(AssociatedTypeWitness - 8);
  v303 = (void *)v289;
  MEMORY[0x1F4188790](v32);
  v296 = (char *)&v256 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  v314 = (char *)&v256 - v35;
  MEMORY[0x1F4188790](v36);
  v264 = (char *)&v256 - v37;
  MEMORY[0x1F4188790](v38);
  v272 = (char *)&v256 - v39;
  MEMORY[0x1F4188790](v40);
  v282 = (char *)&v256 - v41;
  MEMORY[0x1F4188790](v42);
  v279 = (char *)&v256 - v43;
  MEMORY[0x1F4188790](v44);
  v284 = (char *)&v256 - v45;
  MEMORY[0x1F4188790](v46);
  v283 = (char *)&v256 - v47;
  MEMORY[0x1F4188790](v48);
  v276 = (char *)&v256 - v49;
  MEMORY[0x1F4188790](v50);
  v270 = (char *)&v256 - v51;
  MEMORY[0x1F4188790](v52);
  v281 = (char *)&v256 - v53;
  MEMORY[0x1F4188790](v54);
  v286 = (char *)&v256 - v55;
  MEMORY[0x1F4188790](v56);
  v324 = (char *)&v256 - v57;
  MEMORY[0x1F4188790](v58);
  v315 = (char *)&v256 - v59;
  MEMORY[0x1F4188790](v60);
  v319 = (char *)&v256 - v61;
  MEMORY[0x1F4188790](v62);
  v323 = (char *)&v256 - v63;
  MEMORY[0x1F4188790](v64);
  uint64_t v66 = (char *)&v256 - v65;
  uint64_t v67 = swift_checkMetadataState();
  uint64_t v295 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  v300 = (char *)&v256 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v69);
  v275 = (char *)&v256 - v70;
  MEMORY[0x1F4188790](v71);
  v288 = (char *)&v256 - v72;
  MEMORY[0x1F4188790](v73);
  uint64_t v75 = (char *)&v256 - v74;
  MEMORY[0x1F4188790](v76);
  char v78 = (char *)&v256 - v77;
  sub_1B5372B88();
  uint64_t v309 = a5;
  uint64_t v310 = v8;
  uint64_t v308 = a4;
  uint64_t v301 = v67;
  sub_1B5372BC8();
  v292 = v75;
  v316 = v78;
  uint64_t v305 = a6;
  sub_1B5372DB8();
  uint64_t v285 = a7;
  uint64_t v79 = *(void *)(a7 + 8);
  char v80 = sub_1B5372E78();
  v294 = v66;
  uint64_t v304 = v79;
  if ((v80 & 1) == 0)
  {
    char v87 = sub_1B5372E78();
    uint64_t v88 = sub_1B5372E68();
    unint64_t v89 = v66;
    if ((v87 & 1) == 0)
    {
      float64x2_t v96 = v323;
      uint64_t v85 = v314;
      uint64_t v84 = v315;
      uint64_t v86 = v300;
      if (v88 >= 64)
      {
        uint64_t v325 = 0;
        sub_1B51D0074();
        sub_1B5372DE8();
        uint64_t v91 = v297;
        char v103 = sub_1B5372698();
        long long v104 = v96;
        uint64_t v93 = v303;
        ((void (*)(char *, uint64_t))v303[1])(v104, AssociatedTypeWitness);
        unint64_t v83 = v89;
        if (v103) {
          goto LABEL_19;
        }
        goto LABEL_21;
      }
      uint64_t v82 = sub_1B5372E58();
      unint64_t v83 = v66;
      goto LABEL_13;
    }
    float64x2_t v90 = v323;
    uint64_t v84 = v315;
    uint64_t v86 = v300;
    if (v88 <= 64)
    {
      swift_getAssociatedConformanceWitness();
      sub_1B5373268();
      sub_1B5373218();
      char v97 = sub_1B5372618();
      float64x2_t v98 = v90;
      float64x2_t v99 = v303;
      long long v100 = (void (*)(char *, uint64_t))v303[1];
      v100(v98, AssociatedTypeWitness);
      float64x2_t v101 = v319;
      ((void (*)(char *, char *, uint64_t))v99[2])(v319, v66, AssociatedTypeWitness);
      if (v97)
      {
        uint64_t v102 = sub_1B5372E58();
        v100(v101, AssociatedTypeWitness);
        unint64_t v83 = v294;
        uint64_t v85 = v314;
        uint64_t v91 = v297;
        uint64_t v93 = v303;
        if (!v102) {
          goto LABEL_19;
        }
      }
      else
      {
        v100(v101, AssociatedTypeWitness);
        unint64_t v83 = v294;
        uint64_t v85 = v314;
        uint64_t v91 = v297;
        uint64_t v93 = v303;
      }
      goto LABEL_21;
    }
    uint64_t v325 = 0;
    sub_1B51D0074();
    sub_1B5372DE8();
    uint64_t v91 = v297;
    char v92 = sub_1B5372698();
    uint64_t v93 = v303;
    ((void (*)(char *, uint64_t))v303[1])(v90, AssociatedTypeWitness);
    unint64_t v83 = v89;
    uint64_t v85 = v314;
    if ((v92 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_19:
    ((void (*)(char *, uint64_t))v93[1])(v83, AssociatedTypeWitness);
    uint64_t v105 = v295;
    uint64_t v106 = v301;
    (*(void (**)(char *, uint64_t))(v295 + 8))(v316, v301);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v105 + 32))(v293, v292, v106);
  }
  unsigned int v81 = v66;
  if (sub_1B5372E68() >= 64)
  {
    uint64_t v325 = 0;
    sub_1B51D0074();
    uint64_t v94 = v323;
    sub_1B5372DE8();
    uint64_t v91 = v297;
    char v95 = sub_1B5372698();
    uint64_t v93 = v303;
    ((void (*)(char *, uint64_t))v303[1])(v94, AssociatedTypeWitness);
    unint64_t v83 = v81;
    uint64_t v85 = v314;
    uint64_t v84 = v315;
    uint64_t v86 = v300;
    if ((v95 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v82 = sub_1B5372E58();
  unint64_t v83 = v66;
  uint64_t v85 = v314;
  uint64_t v84 = v315;
  uint64_t v86 = v300;
LABEL_13:
  uint64_t v91 = v297;
  uint64_t v93 = v303;
  if (!v82) {
    goto LABEL_19;
  }
LABEL_21:
  v317 = (void (*)(char *, char *, uint64_t))v93[2];
  v318 = v93 + 2;
  v317(v324, v83, AssociatedTypeWitness);
  uint64_t v108 = swift_getAssociatedConformanceWitness();
  sub_1B5373268();
  float64x2_t v109 = v291;
  sub_1B5373218();
  uint64_t v110 = *(void *)(v91 + 8);
  uint64_t result = sub_1B5372698();
  if ((result & 1) == 0)
  {
    __break(1u);
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v111 = v290;
  uint64_t WitnessTable = swift_getWitnessTable();
  char v112 = sub_1B53729B8();
  uint64_t v113 = *(void (**)(char *, uint64_t))(v302 + 8);
  v302 += 8;
  v262 = v113;
  v113(v109, v111);
  v319 = (char *)v108;
  uint64_t v299 = v110;
  if (v112)
  {
    float64x2_t v114 = v303;
    __int16 v115 = v324;
    v324 = (char *)v303[1];
    ((void (*)(char *, uint64_t))v324)(v115, AssociatedTypeWitness);
    uint64_t v116 = v287;
    v259 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v114[7];
    v259(v287, 1, 1, AssociatedTypeWitness);
    goto LABEL_29;
  }
  sub_1B5373268();
  uint64_t v117 = v323;
  sub_1B5373218();
  uint64_t v118 = v324;
  char v119 = sub_1B5372698();
  char v120 = (void (*)(char *, uint64_t))v303[1];
  v120(v117, AssociatedTypeWitness);
  v324 = (char *)v120;
  v120(v118, AssociatedTypeWitness);
  if (v119)
  {
    sub_1B5373268();
    uint64_t v116 = v287;
    sub_1B5373218();
    float64x2_t v114 = v303;
    v259 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v303[7];
    v259(v116, 0, 1, AssociatedTypeWitness);
    goto LABEL_29;
  }
  sub_1B5373268();
  sub_1B5373218();
  uint64_t v121 = sub_1B5373058();
  uint64_t result = sub_1B5373078();
  uint64_t v122 = v121 - result;
  if (__OFSUB__(v121, result)) {
    goto LABEL_95;
  }
  BOOL v123 = __OFSUB__(v122, 1);
  uint64_t v124 = v122 - 1;
  long long v125 = v303;
  uint64_t v116 = v287;
  if (v123)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  uint64_t v325 = v124;
  sub_1B51D0074();
  long long v126 = v323;
  sub_1B5372E48();
  ((void (*)(char *, uint64_t))v324)(v126, AssociatedTypeWitness);
  v259 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v125[7];
  v259(v116, 0, 1, AssociatedTypeWitness);
  float64x2_t v114 = v125;
LABEL_29:
  long long v127 = (uint64_t (*)(char *, uint64_t, uint64_t))v114[6];
  v261 = v114 + 6;
  v260 = v127;
  uint64_t result = v127(v116, 1, AssociatedTypeWitness);
  if (result == 1)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  v287 = (char *)v114[4];
  v303 = v114 + 4;
  ((void (*)(char *, char *, uint64_t))v287)(v84, v116, AssociatedTypeWitness);
  if (sub_1B5372698()) {
    goto LABEL_68;
  }
  long long v128 = v288;
  uint64_t v129 = v301;
  sub_1B5372DA8();
  uint64_t v130 = sub_1B5372CA8();
  uint64_t v131 = v298;
  long long v132 = v306;
  uint64_t v133 = v307;
  (*(void (**)(char *))(v298 + 16))(v306);
  ((void (*)(uint64_t *, void))v130)(&v325, 0);
  long long v134 = *(void (**)(char *, uint64_t))(v295 + 8);
  uint64_t v135 = v128;
  uint64_t v86 = v300;
  uint64_t v136 = v129;
  uint64_t v84 = v315;
  uint64_t v258 = v295 + 8;
  v257 = v134;
  v134(v135, v136);
  LOBYTE(v130) = v313(v132, v311);
  uint64_t v137 = v133;
  uint64_t v85 = v314;
  (*(void (**)(char *, uint64_t))(v131 + 8))(v132, v137);
  if ((v130 & 1) == 0) {
    goto LABEL_68;
  }
  sub_1B5373268();
  uint64_t v138 = v281;
  sub_1B5373218();
  uint64_t v139 = *(void *)(v280 + 8);
  __int16 v140 = v323;
  sub_1B53730D8();
  uint64_t v141 = v289 + 8;
  __int16 v142 = v138;
  uint64_t v143 = (void (*)(char *, uint64_t))v324;
  ((void (*)(char *, uint64_t))v324)(v142, AssociatedTypeWitness);
  uint64_t v256 = v139;
  sub_1B53730E8();
  uint64_t v280 = v141;
  v143(v140, AssociatedTypeWitness);
  if (sub_1B5372E78())
  {
    uint64_t v144 = v286;
    if (sub_1B5372E68() < 64)
    {
      uint64_t v145 = sub_1B5372E58();
      char v146 = v279;
      if (!v145) {
        goto LABEL_48;
      }
      goto LABEL_50;
    }
  }
  else
  {
    char v147 = sub_1B5372E78();
    uint64_t v144 = v286;
    uint64_t v148 = sub_1B5372E68();
    if ((v147 & 1) == 0)
    {
      char v146 = v279;
      if (v148 < 64)
      {
        if (!sub_1B5372E58()) {
          goto LABEL_48;
        }
      }
      else
      {
        uint64_t v325 = 0;
        sub_1B51D0074();
        uint64_t v157 = v323;
        sub_1B5372DE8();
        char v158 = sub_1B5372698();
        ((void (*)(char *, uint64_t))v324)(v157, AssociatedTypeWitness);
        if (v158) {
          goto LABEL_48;
        }
      }
      goto LABEL_50;
    }
    if (v148 <= 64)
    {
      sub_1B5373268();
      float64x2_t v151 = v323;
      sub_1B5373218();
      char v152 = sub_1B5372618();
      float64x2_t v153 = v144;
      float64x2_t v154 = (void (*)(char *, uint64_t))v324;
      ((void (*)(char *, uint64_t))v324)(v151, AssociatedTypeWitness);
      uint64_t v155 = v270;
      v317(v270, v153, AssociatedTypeWitness);
      if (v152)
      {
        uint64_t v156 = sub_1B5372E58();
        v154(v155, AssociatedTypeWitness);
        uint64_t v144 = v286;
        char v146 = v279;
        if (!v156) {
          goto LABEL_48;
        }
      }
      else
      {
        v154(v155, AssociatedTypeWitness);
        char v146 = v279;
      }
      goto LABEL_50;
    }
  }
  uint64_t v325 = 0;
  sub_1B51D0074();
  float64x2_t v149 = v323;
  sub_1B5372DE8();
  char v150 = sub_1B5372698();
  ((void (*)(char *, uint64_t))v324)(v149, AssociatedTypeWitness);
  char v146 = v279;
  if (v150)
  {
LABEL_48:
    uint64_t v159 = (void (*)(char *, uint64_t))v324;
    ((void (*)(char *, uint64_t))v324)(v144, AssociatedTypeWitness);
    v159(v84, AssociatedTypeWitness);
    v159(v294, AssociatedTypeWitness);
    uint64_t v160 = v301;
    v257(v316, v301);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v295 + 32))(v293, v292, v160);
  }
LABEL_50:
  v161 = v284;
  sub_1B5373088();
  v317(v146, v161, AssociatedTypeWitness);
  sub_1B5373268();
  uint64_t v162 = v146;
  int64_t v163 = v291;
  sub_1B5373218();
  uint64_t result = sub_1B5372698();
  if ((result & 1) == 0)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  uint64_t v164 = v290;
  char v165 = sub_1B53729B8();
  v262(v163, v164);
  if (v165)
  {
    ((void (*)(char *, uint64_t))v324)(v162, AssociatedTypeWitness);
    uint64_t v166 = 1;
    uint64_t v167 = v282;
    size_t v168 = v278;
  }
  else
  {
    sub_1B5373268();
    uint64_t v169 = v323;
    sub_1B5373218();
    char v170 = sub_1B5372698();
    uint64_t v171 = (void (*)(char *, uint64_t))v324;
    ((void (*)(char *, uint64_t))v324)(v169, AssociatedTypeWitness);
    v171(v162, AssociatedTypeWitness);
    uint64_t v167 = v282;
    if (v170)
    {
      sub_1B5373268();
      size_t v168 = v278;
      sub_1B5373218();
      uint64_t v166 = 0;
    }
    else
    {
      sub_1B5373268();
      sub_1B5373218();
      uint64_t v172 = sub_1B5373058();
      uint64_t result = sub_1B5373078();
      uint64_t v173 = v172 - result;
      if (__OFSUB__(v172, result))
      {
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
      BOOL v123 = __OFSUB__(v173, 1);
      uint64_t v174 = v173 - 1;
      if (v123)
      {
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
      uint64_t v325 = v174;
      sub_1B51D0074();
      int64_t v175 = v323;
      sub_1B5372E48();
      uint64_t v176 = v175;
      size_t v168 = v278;
      ((void (*)(char *, uint64_t))v324)(v176, AssociatedTypeWitness);
      uint64_t v166 = 0;
    }
  }
  v279 = (char *)(v289 + 56);
  v259(v168, v166, 1, AssociatedTypeWitness);
  uint64_t result = v260(v168, 1, AssociatedTypeWitness);
  if (result == 1)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  ((void (*)(char *, char *, uint64_t))v287)(v283, v168, AssociatedTypeWitness);
  ((void (*)(char *, uint64_t))v324)(v284, AssociatedTypeWitness);
  v317(v167, v286, AssociatedTypeWitness);
  size_t v177 = v167;
  sub_1B5373268();
  uint64_t v178 = v291;
  sub_1B5373218();
  uint64_t result = sub_1B5372698();
  if ((result & 1) == 0)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  uint64_t v179 = v290;
  char v180 = sub_1B53729B8();
  v262(v178, v179);
  if (v180)
  {
    uint64_t v181 = (void (*)(char *, uint64_t))v324;
    ((void (*)(char *, uint64_t))v324)(v177, AssociatedTypeWitness);
    v181(v283, AssociatedTypeWitness);
    uint64_t v182 = 1;
    uint64_t v183 = v277;
    size_t v184 = (void (*)(char *, char *, uint64_t))v287;
    goto LABEL_66;
  }
  sub_1B5373268();
  v185 = v323;
  sub_1B5373218();
  char v186 = sub_1B5372698();
  ((void (*)(char *, uint64_t))v324)(v185, AssociatedTypeWitness);
  unint64_t v187 = v282;
  if ((v186 & 1) == 0)
  {
    sub_1B5373268();
    uint64_t v188 = v323;
    sub_1B5373218();
    char v189 = sub_1B5372698();
    ((void (*)(char *, uint64_t))v324)(v188, AssociatedTypeWitness);
    if ((v189 & 1) == 0)
    {
      ((void (*)(char *, char *, uint64_t))v287)(v272, v187, AssociatedTypeWitness);
      sub_1B5373268();
      sub_1B5373218();
      char v239 = v283;
      uint64_t result = sub_1B5372628();
      if (result)
      {
        uint64_t v302 = (uint64_t)&v273[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v240 = v302;
        char v241 = (void (*)(char *, char *, uint64_t))v287;
        ((void (*)(void))v287)();
        char v242 = v317;
        v317((char *)v240, v239, AssociatedTypeWitness);
        char v243 = v267;
        char v244 = &v267[*(int *)(TupleTypeMetadata2 + 48)];
        v242(v267, v273, AssociatedTypeWitness);
        v242(v244, (char *)v302, AssociatedTypeWitness);
        v241(v271, v243, AssociatedTypeWitness);
        ((void (*)(char *, uint64_t))v324)(v244, AssociatedTypeWitness);
        v245 = &v243[*(int *)(TupleTypeMetadata2 + 48)];
        v241(v243, v273, AssociatedTypeWitness);
        v241(v245, (char *)v302, AssociatedTypeWitness);
        uint64_t v246 = v269;
        v247 = v271;
        v241(&v271[*(int *)(v269 + 36)], v245, AssociatedTypeWitness);
        ((void (*)(char *, uint64_t))v324)(v243, AssociatedTypeWitness);
        uint64_t v248 = v268;
        v249 = v266;
        (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v266, v247, v246);
        swift_getWitnessTable();
        v250 = v272;
        LOBYTE(v247) = sub_1B53729B8();
        (*(void (**)(char *, uint64_t))(v248 + 8))(v249, v246);
        ((void (*)(char *, uint64_t))v324)(v250, AssociatedTypeWitness);
        if ((v247 & 1) == 0)
        {
          ((void (*)(char *, uint64_t))v324)(v283, AssociatedTypeWitness);
          uint64_t v182 = 1;
          uint64_t v183 = v277;
          goto LABEL_65;
        }
        sub_1B5373268();
        sub_1B5373218();
        uint64_t v302 = sub_1B5373058();
        sub_1B5373268();
        v251 = v264;
        sub_1B5373218();
        v252 = v281;
        sub_1B53730E8();
        v253 = (uint64_t (*)(char *, uint64_t))v324;
        ((void (*)(char *, uint64_t))v324)(v251, AssociatedTypeWitness);
        uint64_t v254 = sub_1B5373078();
        uint64_t result = v253(v252, AssociatedTypeWitness);
        if (!__OFSUB__(v302, v254))
        {
          uint64_t v325 = v302 - v254;
          sub_1B51D0074();
          v255 = v323;
          uint64_t v183 = v277;
          sub_1B5372E48();
          v253(v255, AssociatedTypeWitness);
          v253(v283, AssociatedTypeWitness);
          uint64_t v182 = 0;
          uint64_t v85 = v314;
          goto LABEL_65;
        }
        goto LABEL_102;
      }
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
      goto LABEL_103;
    }
  }
  uint64_t v190 = v187;
  uint64_t v191 = (void (*)(char *, uint64_t))v324;
  ((void (*)(char *, uint64_t))v324)(v190, AssociatedTypeWitness);
  sub_1B5373268();
  uint64_t v183 = v277;
  sub_1B5373218();
  v191(v283, AssociatedTypeWitness);
  uint64_t v182 = 0;
LABEL_65:
  size_t v184 = (void (*)(char *, char *, uint64_t))v287;
LABEL_66:
  v259(v183, v182, 1, AssociatedTypeWitness);
  uint64_t result = v260(v183, 1, AssociatedTypeWitness);
  if (result == 1)
  {
LABEL_105:
    __break(1u);
    return result;
  }
  uint64_t v192 = v276;
  v184(v276, v183, AssociatedTypeWitness);
  ((void (*)(char *, uint64_t))v324)(v84, AssociatedTypeWitness);
  v184(v84, v192, AssociatedTypeWitness);
  uint64_t v193 = v275;
  v194 = v316;
  uint64_t v195 = v301;
  (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v275, v316, v301);
  v196 = v323;
  sub_1B53730E8();
  uint64_t v197 = v288;
  sub_1B5372DA8();
  uint64_t v198 = v196;
  uint64_t v199 = (void (*)(char *, uint64_t))v324;
  ((void (*)(char *, uint64_t))v324)(v198, AssociatedTypeWitness);
  uint64_t v200 = v193;
  uint64_t v201 = v257;
  v257(v200, v195);
  v199(v286, AssociatedTypeWitness);
  v201(v194, v195);
  uint64_t v202 = v195;
  uint64_t v84 = v315;
  (*(void (**)(char *, char *, uint64_t))(v295 + 32))(v194, v197, v202);
LABEL_68:
  sub_1B5373268();
  unint64_t v203 = v323;
  sub_1B5373218();
  sub_1B5372E28();
  ((void (*)(char *, uint64_t))v324)(v203, AssociatedTypeWitness);
  uint64_t v302 = v298 + 16;
  v303 = (void *)(v298 + 8);
  unsigned int v204 = (void (**)(char *, uint64_t))(v295 + 8);
  uint64_t v298 = v295 + 16;
  uint64_t v205 = v301;
  while (1)
  {
    v317(v85, v84, AssociatedTypeWitness);
    char v207 = sub_1B5372E78();
    uint64_t v208 = (void (*)(char *, uint64_t))v324;
    if ((v207 & 1) == 0) {
      break;
    }
    if (sub_1B5372E68() < 64) {
      goto LABEL_72;
    }
LABEL_79:
    uint64_t v325 = 0;
    sub_1B51D0074();
    unint64_t v214 = v323;
    sub_1B5372DE8();
    char v215 = sub_1B5372698();
    unint64_t v216 = v214;
    uint64_t v86 = v300;
    v208(v216, AssociatedTypeWitness);
    v208(v85, AssociatedTypeWitness);
    if (v215) {
      goto LABEL_86;
    }
LABEL_80:
    unint64_t v217 = v316;
    sub_1B5372DA8();
    uint64_t v218 = sub_1B5372CA8();
    unint64_t v219 = v86;
    uint64_t v220 = v306;
    uint64_t v221 = v205;
    uint64_t v222 = v307;
    (*(void (**)(char *))v302)(v306);
    ((void (*)(uint64_t *, void))v218)(&v325, 0);
    LOBYTE(v218) = v313(v220, v311);
    ((void (*)(char *, uint64_t))*v303)(v220, v222);
    if (v218)
    {
      (*v204)(v217, v221);
      (*(void (**)(char *, char *, uint64_t))v298)(v217, v219, v221);
    }
    sub_1B5373268();
    v206 = v323;
    sub_1B5373218();
    uint64_t v84 = v315;
    sub_1B5372E28();
    ((void (*)(char *, uint64_t))v324)(v206, AssociatedTypeWitness);
    (*v204)(v219, v221);
    uint64_t v205 = v221;
    uint64_t v85 = v314;
    uint64_t v86 = v219;
  }
  char v210 = sub_1B5372E78();
  uint64_t v211 = sub_1B5372E68();
  if ((v210 & 1) == 0)
  {
    uint64_t v205 = v301;
    if (v211 < 64)
    {
LABEL_72:
      uint64_t v209 = sub_1B5372E58();
      v208(v85, AssociatedTypeWitness);
      if (!v209) {
        goto LABEL_86;
      }
      goto LABEL_80;
    }
    goto LABEL_79;
  }
  if (v211 > 64)
  {
    uint64_t v325 = 0;
    sub_1B51D0074();
    BOOL v212 = v323;
    sub_1B5372DE8();
    char v213 = sub_1B5372698();
    v208(v212, AssociatedTypeWitness);
    v208(v85, AssociatedTypeWitness);
    uint64_t v205 = v301;
    if (v213) {
      goto LABEL_86;
    }
    goto LABEL_80;
  }
  sub_1B5373268();
  double v223 = v323;
  sub_1B5373218();
  char v224 = sub_1B5372618();
  v208(v223, AssociatedTypeWitness);
  unsigned __int8 v225 = v85;
  unsigned int v226 = v296;
  v317(v296, v225, AssociatedTypeWitness);
  if ((v224 & 1) == 0)
  {
    v208(v226, AssociatedTypeWitness);
    v208(v225, AssociatedTypeWitness);
    uint64_t v205 = v301;
    uint64_t v86 = v300;
    goto LABEL_80;
  }
  uint64_t v227 = sub_1B5372E58();
  v208(v226, AssociatedTypeWitness);
  v208(v225, AssociatedTypeWitness);
  uint64_t v205 = v301;
  uint64_t v86 = v300;
  if (v227) {
    goto LABEL_80;
  }
LABEL_86:
  unsigned __int8 v228 = v316;
  uint64_t v229 = sub_1B5372CA8();
  unsigned __int8 v230 = v306;
  uint64_t v231 = v307;
  (*(void (**)(char *))v302)(v306);
  ((void (*)(uint64_t *, void))v229)(&v325, 0);
  LOBYTE(v229) = v313(v230, v311);
  ((void (*)(char *, uint64_t))*v303)(v230, v231);
  if (v229)
  {
    unint64_t v232 = v288;
    uint64_t v233 = v301;
    (*(void (**)(char *, char *, uint64_t))v298)(v288, v228, v301);
    sub_1B5373268();
    char v234 = v323;
    sub_1B5373218();
    sub_1B5372DA8();
    v208(v234, AssociatedTypeWitness);
    char v235 = v84;
    char v236 = *v204;
    (*v204)(v232, v233);
    v208(v235, AssociatedTypeWitness);
    v208(v294, AssociatedTypeWitness);
    v236(v292, v233);
    return ((uint64_t (*)(char *, uint64_t))v236)(v316, v233);
  }
  else
  {
    v208(v84, AssociatedTypeWitness);
    v208(v294, AssociatedTypeWitness);
    uint64_t v237 = v295;
    uint64_t v238 = v301;
    (*(void (**)(char *, uint64_t))(v295 + 8))(v292, v301);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v237 + 32))(v293, v228, v238);
  }
}

uint64_t Collection<>.upperBound<A>(of:lessFunc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  v10[2] = a4;
  v10[3] = a5;
  void v10[4] = a6;
  v10[5] = a7;
  v10[6] = a8;
  v10[7] = a2;
  v10[8] = a3;
  return Collection<>.lowerBound<A>(of:lessFunc:)(a1, (uint64_t (*)(char *, uint64_t))sub_1B5266A08, (uint64_t)v10, a4, a6, a7, a8, a9);
}

uint64_t Collection<>.lowerBound(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = a2;
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return Collection<>.lowerBound<A>(of:lessFunc:)(a1, (uint64_t (*)(char *, uint64_t))sub_1B5266A44, (uint64_t)&v10, v11, v12, v14, v15, a7);
}

BOOL sub_1B5266A08(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(a2, a1) & 1) == 0;
}

uint64_t Collection<>.upperBound(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = a2;
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = v11;
  uint64_t v19 = AssociatedTypeWitness;
  uint64_t v20 = v12;
  uint64_t v21 = v14;
  uint64_t v22 = v15;
  uint64_t v23 = sub_1B5266A44;
  uint64_t v24 = &v10;
  return Collection<>.lowerBound<A>(of:lessFunc:)(a1, (uint64_t (*)(char *, uint64_t))sub_1B5266A08, (uint64_t)v17, v11, v12, v14, v15, a7);
}

uint64_t sub_1B5266B24()
{
  return sub_1B5372608() & 1;
}

uint64_t IndexRangedSequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  double v4 = MEMORY[0x1F4188790](a1);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  return sub_1B5266C60((uint64_t)v6, v3, a2);
}

uint64_t sub_1B5266C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  v8.n128_f64[0] = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 16))(a3, a1, a2, v8);
  sub_1B5372B88();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, a2);
  uint64_t v12 = type metadata accessor for IndexRangedIterator();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3 + *(int *)(v12 + 36), v10, AssociatedTypeWitness);
}

uint64_t sub_1B5266DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1B5266E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  IndexRangedSequence.makeIterator()(a1, a2);
  double v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t IndexRangedIterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v53 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)v44 - v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v60 = sub_1B5372CB8();
  uint64_t v51 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v49 = (char *)v44 - v11;
  uint64_t v12 = *(void **)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v44 - v18;
  uint64_t v20 = (void (*)(char *, char *, uint64_t))v12[2];
  uint64_t v54 = (char *)(v2 + *(int *)(a1 + 36));
  uint64_t v56 = v20;
  ((void (*)(char *, double))v20)((char *)v44 - v18, v17);
  uint64_t v57 = v2;
  uint64_t v61 = v4;
  sub_1B5372BC8();
  uint64_t v55 = AssociatedConformanceWitness;
  uint64_t v59 = v19;
  char v21 = sub_1B5372698();
  uint64_t v22 = (void (*)(char *, uint64_t))v12[1];
  v22(v15, AssociatedTypeWitness);
  if (v21)
  {
    v22(v59, AssociatedTypeWitness);
    swift_getAssociatedTypeWitness();
    uint64_t v23 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v58, 1, 1, v23);
  }
  else
  {
    uint64_t v47 = v22;
    uint64_t v25 = v54;
    sub_1B5372BD8();
    uint64_t v48 = v5;
    uint64_t v46 = swift_getAssociatedTypeWitness();
    uint64_t v26 = swift_getTupleTypeMetadata2();
    uint64_t v45 = (char *)*(int *)(v26 + 48);
    v56(v15, v25, AssociatedTypeWitness);
    uint64_t v27 = v59;
    uint64_t result = sub_1B5372628();
    if (result)
    {
      uint64_t v54 = &v45[v58];
      uint64_t v55 = v26;
      uint64_t v28 = TupleTypeMetadata2;
      uint64_t v29 = v50;
      uint64_t v30 = &v50[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v31 = v27;
      uint64_t v32 = v56;
      v56(v50, v31, AssociatedTypeWitness);
      uint64_t v33 = (void (*)(char *, char *, uint64_t))v12[4];
      uint64_t v45 = v30;
      v33(v30, v15, AssociatedTypeWitness);
      uint64_t v34 = *(int *)(v28 + 48);
      uint64_t v35 = v53;
      v44[1] = v12 + 1;
      uint64_t v36 = &v53[v34];
      v32(v53, v29, AssociatedTypeWitness);
      v32(v36, v30, AssociatedTypeWitness);
      uint64_t v37 = v49;
      v33(v49, v35, AssociatedTypeWitness);
      uint64_t v38 = v47;
      v47(v36, AssociatedTypeWitness);
      uint64_t v39 = &v35[*(int *)(v28 + 48)];
      v33(v35, v29, AssociatedTypeWitness);
      v33(v39, v45, AssociatedTypeWitness);
      uint64_t v40 = v60;
      v33(&v37[*(int *)(v60 + 36)], v39, AssociatedTypeWitness);
      v38(v35, AssociatedTypeWitness);
      uint64_t v41 = v58;
      (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v58, v37, v40);
      uint64_t v42 = v59;
      uint64_t v43 = (void (*)(char *, void))sub_1B5372CA8();
      (*(void (**)(char *))(*(void *)(v46 - 8) + 16))(v54);
      v43(v62, 0);
      v38(v42, AssociatedTypeWitness);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v41, 0, 1, v55);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1B526746C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B526748C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1B52675E8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B5267800);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for IndexRangedSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5267840()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_1B5267930(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_1B5267AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = AssociatedTypeWitness;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v7(v9, v8);
}

uint64_t sub_1B5267B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B5267C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B5267D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B5267DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B5267ECC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v12) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          char v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_1B5268160(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1B5268474);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for IndexRangedIterator()
{
  return __swift_instantiateGenericMetadata();
}

int64_t sub_1B52684B4(unsigned __int16 a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t result = a4 >> 1;
  unint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    uint64_t v7 = 1 << (__clz(v6) ^ 0x3Fu);
    uint64_t v8 = a3;
    unint64_t v9 = (a4 >> 1) - a3;
    if (v7 != v6)
    {
      uint64_t v10 = a3 + v7;
      if (__OFADD__(a3, v7))
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (v10 < a3 || v10 >= result) {
        goto LABEL_44;
      }
      unsigned int v12 = *(unsigned __int16 *)(a2 + 24 * v10);
      uint64_t v8 = a3;
      unint64_t v9 = v7;
      if (v12 <= a1)
      {
        unint64_t v13 = v6 + ~v7;
        if (!v13) {
          return result;
        }
        if ((v13 & 0x8000000000000000) != 0)
        {
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        if (v13 == 1)
        {
          unint64_t v9 = 1;
        }
        else
        {
          if (v13 - 0x4000000000000001 < 0xC000000000000001)
          {
LABEL_47:
            __break(1u);
            return result;
          }
          unint64_t v9 = 1 << -(char)__clz(v13 - 1);
        }
        unint64_t v14 = v6 - v9;
        uint64_t v8 = a3 + v14;
        if (__OFADD__(a3, v14))
        {
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
      }
    }
    if (v9 >= 2)
    {
      while (1)
      {
        uint64_t v15 = v8 + (v9 >> 1);
        if (__OFADD__(v8, v9 >> 1)) {
          break;
        }
        if (v15 < a3 || v15 >= result) {
          goto LABEL_39;
        }
        if (*(unsigned __int16 *)(a2 + 24 * v15) <= a1) {
          v8 += v9 >> 1;
        }
        BOOL v17 = v9 >= 4;
        v9 >>= 1;
        if (!v17) {
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
LABEL_29:
    if (v8 < a3 || v8 >= result) {
      goto LABEL_42;
    }
    if (*(unsigned __int16 *)(a2 + 24 * v8) > a1) {
      return v8;
    }
    else {
      return v8 + 1;
    }
  }
  return result;
}

uint64_t sub_1B52685FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5268628(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5268654(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5268680(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B52686AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B52686D8(uint64_t a1)
{
  return a1;
}

int64_t sub_1B5268708(unsigned int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t result = a4 >> 1;
  unint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    uint64_t v7 = 1 << (__clz(v6) ^ 0x3Fu);
    uint64_t v8 = a3;
    unint64_t v9 = (a4 >> 1) - a3;
    if (v7 != v6)
    {
      uint64_t v10 = a3 + v7;
      if (__OFADD__(a3, v7))
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (v10 < a3 || v10 >= result) {
        goto LABEL_44;
      }
      unsigned int v12 = *(_DWORD *)(a2 + 8 * v10);
      uint64_t v8 = a3;
      unint64_t v9 = v7;
      if (v12 <= a1)
      {
        unint64_t v13 = v6 + ~v7;
        if (!v13) {
          return result;
        }
        if ((v13 & 0x8000000000000000) != 0)
        {
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        if (v13 == 1)
        {
          unint64_t v9 = 1;
        }
        else
        {
          if (v13 - 0x4000000000000001 < 0xC000000000000001)
          {
LABEL_47:
            __break(1u);
            return result;
          }
          unint64_t v9 = 1 << -(char)__clz(v13 - 1);
        }
        unint64_t v14 = v6 - v9;
        uint64_t v8 = a3 + v14;
        if (__OFADD__(a3, v14))
        {
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
      }
    }
    if (v9 >= 2)
    {
      while (1)
      {
        uint64_t v15 = v8 + (v9 >> 1);
        if (__OFADD__(v8, v9 >> 1)) {
          break;
        }
        if (v15 < a3 || v15 >= result) {
          goto LABEL_39;
        }
        if (*(_DWORD *)(a2 + 8 * v15) <= a1) {
          v8 += v9 >> 1;
        }
        BOOL v17 = v9 >= 4;
        v9 >>= 1;
        if (!v17) {
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
LABEL_29:
    if (v8 < a3 || v8 >= result) {
      goto LABEL_42;
    }
    if (*(_DWORD *)(a2 + 8 * v8) > a1) {
      return v8;
    }
    else {
      return v8 + 1;
    }
  }
  return result;
}

uint64_t WOFFContainer.init(data:residence:)(uint64_t a1, unint64_t a2, int a3)
{
  return sub_1B5268984(a1, a2, a3);
}

void *sub_1B5268858@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  BOOL v4 = __OFADD__(*result, v3);
  uint64_t v5 = *result + v3;
  if (v4)
  {
    sub_1B51D4F28();
    swift_allocError();
    return (void *)swift_willThrow();
  }
  else if (v5 < v2)
  {
    __break(1u);
  }
  else
  {
    *a2 = v2;
    a2[1] = v5;
  }
  return result;
}

uint64_t WOFFContainer.dataResidence.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t WOFFContainer.dataResidence.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*WOFFContainer.dataResidence.modify())()
{
  return nullsub_1;
}

uint64_t WOFFContainer.containerType.getter()
{
  return 0;
}

FontParser::WOFFContainer __swiftcall WOFFContainer.init(constructed:)(Swift::OpaquePointer constructed)
{
  FontParser::FontDataResidence v1 = FontParser_FontDataResidence_inMemory;
  result.fonts = constructed;
  result.dataResidence = v1;
  return result;
}

uint64_t WOFFContainer.encoded()()
{
  sub_1B51DD5FC();
  swift_allocError();
  *uint64_t v0 = 0;
  return swift_willThrow();
}

uint64_t sub_1B5268954@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1B5268984(a1, a2, a3);
  if (!v4)
  {
    *(void *)a4 = result;
    *(unsigned char *)(a4 + 8) = v7;
  }
  return result;
}

uint64_t sub_1B5268984(uint64_t a1, unint64_t a2, int a3)
{
  int v57 = a3;
  uint64_t v6 = sub_1B5372328();
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void (**)())((char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = sub_1B5238408(MEMORY[0x1E4FBC860]);
  *(void *)&unsigned long long v66 = a1;
  *((void *)&v66 + 1) = a2;
  unint64_t v82 = a2;
  sub_1B51D4BB8(a1, a2);
  sub_1B51D4C10();
  uint64_t v10 = sub_1B53724D8();
  char v69 = 1;
  int v70 = 2001684038;
  uint64_t v71 = sub_1B51D2364;
  uint64_t v72 = 0;
  __int16 v75 = 257;
  int v73 = 16843009;
  __int16 v74 = 257;
  uint64_t v76 = sub_1B5268858;
  uint64_t v77 = 0;
  char v78 = 1;
  __int16 v79 = 257;
  char v80 = sub_1B5268858;
  uint64_t v81 = 0;
  *(void *)&unsigned long long v66 = v10;
  *((void *)&v66 + 1) = v11;
  uint64_t v67 = v12;
  swift_bridgeObjectRetain();
  unint64_t v13 = &v69;
  sub_1B51F7814((uint64_t *)&v64, &v66, v14);
  if (v3)
  {
    swift_bridgeObjectRelease();
    sub_1B51D4C64(a1, v82);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  uint64_t v17 = v15;
  uint64_t v18 = v62;
  uint64_t v58 = a1;
  uint64_t v54 = v8;
  uint64_t v56 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v63 = v67;
    if (!v17)
    {
      uint64_t v21 = v9;
LABEL_17:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47900);
      unint64_t v13 = (char *)swift_allocObject();
      *((_OWORD *)v13 + 1) = xmmword_1B538C0E0;
      sub_1B52B8B80(v21, v57, 1, v68);
      memcpy(v13 + 32, v68, 0x1A4uLL);
      sub_1B51D4C64(v58, v82);
      return (uint64_t)v13;
    }
    uint64_t v19 = *((void *)&v66 + 1);
    uint64_t v20 = v66;
    unsigned int v53 = *MEMORY[0x1E4F27758];
    uint64_t v51 = (void (**)(void (**)(), uint64_t))(v18 + 8);
    uint64_t v52 = (void (**)(void (**)(), void, uint64_t))(v18 + 104);
    uint64_t v21 = v9;
    while (v17)
    {
      *(void *)&unsigned long long v66 = v20;
      *((void *)&v66 + 1) = v19;
      uint64_t v67 = v63;
      *(void *)&unsigned long long v64 = v20;
      *((void *)&v64 + 1) = v19;
      uint64_t v65 = v63;
      swift_bridgeObjectRetain_n();
      unsigned int v25 = sub_1B51F3DDC((uint64_t *)&v64, v24, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      unsigned int v27 = sub_1B51F3DDC((uint64_t *)&v64, v26, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unsigned int v29 = sub_1B51F3DDC((uint64_t *)&v64, v28, 1);
      unsigned int v60 = v25;
      uint64_t v61 = v17;
      uint64_t v62 = v21;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v31 = *((void *)&v64 + 1);
      unint64_t v30 = v64;
      uint64_t v32 = v65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned long long v64 = __PAIR128__(v31, v30);
      uint64_t v65 = v32;
      swift_bridgeObjectRetain();
      unsigned int v34 = sub_1B51F3DDC((uint64_t *)&v64, v33, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned long long v66 = v64;
      uint64_t v67 = v65;
      sub_1B51F3DDC((uint64_t *)&v66, v35, 1);
      swift_bridgeObjectRelease_n();
      uint64_t v59 = *((void *)&v66 + 1);
      uint64_t v20 = v66;
      unint64_t v13 = v67;
      sub_1B5244AD0(v27, v27 + (unint64_t)v29, v58, v82);
      uint64_t v63 = v13;
      uint64_t v36 = sub_1B5372398();
      uint64_t v38 = v36;
      unint64_t v39 = v37;
      if (v34 < v29)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B522157C();
        swift_allocError();
        *uint64_t v49 = 1;
        swift_willThrow();
        sub_1B51D4C64(v58, v82);
        sub_1B51D4C64(v38, v39);
        return (uint64_t)v13;
      }
      if (v34 == v29)
      {
        uint64_t v22 = v62;
      }
      else
      {
        uint64_t v40 = v34;
        sub_1B51D4BB8(v36, v37);
        uint64_t v41 = (Bytef *)swift_slowAlloc();
        uLongf v42 = sub_1B5245540(v41, (uint64_t)&v41[v40], v38, v39);
        uint64_t v55 = v20;
        uint64_t v43 = v54;
        char *v54 = sub_1B52458DC;
        v43[1] = 0;
        (*v52)(v43, v53, v56);
        sub_1B5372318();
        if (v42)
        {
          sub_1B53722B8();
          swift_allocObject();
          swift_retain();
          uint64_t v44 = sub_1B5372248();
          uint64_t v45 = sub_1B52458E8(v44, v42);
          unint64_t v47 = v46;
          swift_release();
        }
        else
        {
          uint64_t v48 = (void (*)(Bytef *, void))sub_1B5372318();
          v48(v41, 0);
          swift_release();
          swift_release();
          uint64_t v45 = 0;
          unint64_t v47 = 0xC000000000000000;
        }
        (*v51)(v43, v56);
        sub_1B51D4C64(v38, v39);
        sub_1B51D4C64(v38, v39);
        uint64_t v38 = v45;
        unint64_t v39 = v47;
        uint64_t v22 = v62;
        uint64_t v20 = v55;
      }
      sub_1B51D4BB8(v38, v39);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&unsigned long long v66 = v22;
      sub_1B5237848(v38, v39, v60, isUniquelyReferenced_nonNull_native);
      uint64_t v21 = v66;
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B51D4C64(v38, v39);
      uint64_t v17 = v61 - 1;
      uint64_t v19 = v59;
      if (v61 == 1) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for WOFFContainer()
{
  return &type metadata for WOFFContainer;
}

uint64_t Variations.axes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *FontParser::FontDataResidence v1 = a1;
  return result;
}

uint64_t (*Variations.axes.modify())()
{
  return nullsub_1;
}

uint64_t Variations.namedVariations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Variations.namedVariations.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Variations.namedVariations.modify())()
{
  return nullsub_1;
}

uint64_t VariationAxis.tag.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*VariationAxis.tag.modify())()
{
  return nullsub_1;
}

uint64_t VariationAxis.valueRange.getter(uint64_t a1, uint64_t a2)
{
  *((void *)&v3 + 1) = a2;
  *(void *)&long long v3 = a1;
  return v3 >> 32;
}

uint64_t VariationAxis.valueRange.setter(uint64_t result)
{
  *(void *)(v1 + 4) = result;
  return result;
}

uint64_t (*VariationAxis.valueRange.modify())()
{
  return nullsub_1;
}

unint64_t VariationAxis.defaultValue.getter(uint64_t a1, unint64_t a2)
{
  return HIDWORD(a2);
}

uint64_t VariationAxis.defaultValue.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*VariationAxis.defaultValue.modify())()
{
  return nullsub_1;
}

uint64_t VariationAxis.axisID.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

uint64_t VariationAxis.axisID.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*VariationAxis.axisID.modify())()
{
  return nullsub_1;
}

BOOL VariationAxis.isUserVisible.getter(uint64_t a1, uint64_t a2, char a3)
{
  return (a3 & 1) == 0;
}

uint64_t VariationAxisTag.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*VariationAxisTag.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t static VariationAxisTag.weight.getter()
{
  return 2003265652;
}

uint64_t static VariationAxisTag.width.getter()
{
  return 2003072104;
}

uint64_t static VariationAxisTag.opticalSize.getter()
{
  return 1869640570;
}

uint64_t static VariationAxisTag.serif.getter()
{
  return 1936028262;
}

uint64_t static VariationAxisTag.style.getter()
{
  return 1937013100;
}

uint64_t static VariationAxisTag.slant.getter()
{
  return 1936486004;
}

uint64_t static VariationAxisTag.grade.getter()
{
  return 1196572996;
}

uint64_t static VariationAxisTag.casual.getter()
{
  return 1128354636;
}

uint64_t static VariationAxisTag.cursive.getter()
{
  return 1129468758;
}

uint64_t static VariationAxisTag.fill.getter()
{
  return 1179208780;
}

uint64_t static VariationAxisTag.italic.getter()
{
  return 1769234796;
}

uint64_t static VariationAxisTag.monospace.getter()
{
  return 1297043023;
}

uint64_t static VariationAxisTag.ascenderHeight.getter()
{
  return 1498693971;
}

uint64_t static VariationAxisTag.counterWidth.getter()
{
  return 1481921089;
}

uint64_t static VariationAxisTag.descenderHeight.getter()
{
  return 1498694725;
}

uint64_t static VariationAxisTag.figureHeight.getter()
{
  return 1498695241;
}

uint64_t static VariationAxisTag.lowercaseHeight.getter()
{
  return 1498696771;
}

uint64_t static VariationAxisTag.thickStroke.getter()
{
  return 1481592913;
}

uint64_t static VariationAxisTag.thinStroke.getter()
{
  return 1498370129;
}

uint64_t static VariationAxisTag.uppercaseHeight.getter()
{
  return 1498699075;
}

uint64_t static VariationAxisTag.softness.getter()
{
  return 1397704276;
}

uint64_t static VariationAxisTag.wonky.getter()
{
  return 1464815179;
}

uint64_t VariationAxisTag.description.getter(unsigned int a1)
{
  if (a1 == 2003265652) {
    return 0x746867696557;
  }
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  if (a1 == 2003072104) {
    return 0x6874646957;
  }
  sub_1B52189C4("opsz", 4, &v5);
  if (v5 == a1) {
    return 0x206C61636974704FLL;
  }
  sub_1B52189C4("serf", 4, &v5);
  if (v5 == a1) {
    return 0x6669726553;
  }
  sub_1B52189C4("styl", 4, &v5);
  if (v5 == a1) {
    return 0x656C797453;
  }
  sub_1B52189C4("slnt", 4, &v5);
  if (v5 == a1) {
    return 0x746E616C53;
  }
  sub_1B52189C4("GRAD", 4, &v5);
  if (v5 == a1) {
    return 0x6564617247;
  }
  sub_1B52189C4("CASL", 4, &v5);
  if (v5 == a1) {
    return 0x6C6175736143;
  }
  sub_1B52189C4("CRSV", 4, &v5);
  if (v5 == a1) {
    return 0x65766973727543;
  }
  sub_1B52189C4("FILL", 4, &v5);
  if (v5 == a1) {
    return 1819044166;
  }
  sub_1B52189C4("ital", 4, &v5);
  if (v5 == a1) {
    return 0x63696C617449;
  }
  sub_1B52189C4("MONO", 4, &v5);
  if (v5 == a1) {
    return 0x636170736F6E6F4DLL;
  }
  sub_1B52189C4("YTAS", 4, &v5);
  if (v5 == a1) {
    return 0x7265646E65637341;
  }
  sub_1B52189C4("XTRA", 4, &v5);
  if (v5 == a1) {
    return 0x207265746E756F43;
  }
  sub_1B52189C4("YTDE", 4, &v5);
  if (v5 == a1) {
    return 0xD000000000000010;
  }
  sub_1B52189C4("YTFI", 4, &v5);
  if (v5 == a1) {
    return 0x4820657275676946;
  }
  sub_1B52189C4("YTLC", 4, &v5);
  if (v5 == a1) {
    return 0xD000000000000010;
  }
  sub_1B52189C4("XOPQ", 4, &v5);
  if (v5 == a1) {
    return 0x7453206B63696854;
  }
  sub_1B52189C4("YOPQ", 4, &v5);
  if (v5 == a1) {
    return 0x727453206E696854;
  }
  sub_1B52189C4("YTUC", 4, &v5);
  if (v5 == a1) {
    return 0xD000000000000010;
  }
  sub_1B52189C4("SOFT", 4, &v5);
  if (v5 == a1) {
    return 0x7373656E74666F53;
  }
  sub_1B52189C4("WONK", 4, &v5);
  if (v5 == a1) {
    return 0x796B6E6F57;
  }
  else {
    return _s10FontParser7SfntTagV11descriptionSSvg_0(a1);
  }
}

uint64_t sub_1B5269900()
{
  return VariationAxisTag.description.getter(*v0);
}

uint64_t NamedVariation.familyNameID.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*NamedVariation.familyNameID.modify())()
{
  return nullsub_1;
}

uint64_t NamedVariation.postScriptNameID.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t NamedVariation.postScriptNameID.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*NamedVariation.postScriptNameID.modify())()
{
  return nullsub_1;
}

uint64_t NamedVariation.coordinates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NamedVariation.coordinates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*NamedVariation.coordinates.modify())()
{
  return nullsub_1;
}

BOOL sub_1B52699C4(unsigned __int16 *a1)
{
  int v1 = *a1;
  return v1 == 2 || v1 == 17 || (__int16)v1 > 255;
}

BOOL sub_1B52699E8(void *a1)
{
  return *a1 == 6 || (unint64_t)(*a1 - 256) >> 8 < 0x7F || *a1 == 0xFFFFLL;
}

uint64_t *sub_1B5269A10@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = *result == 0xFFFF;
  if (*result == 0xFFFF) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

unint64_t sub_1B5269A34()
{
  unint64_t result = qword_1E9D48698;
  if (!qword_1E9D48698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48698);
  }
  return result;
}

uint64_t destroy for Variations()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s10FontParser10VariationsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Variations(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for Variations(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Variations(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Variations(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Variations()
{
  return &type metadata for Variations;
}

ValueMetadata *type metadata accessor for VariationAxis()
{
  return &type metadata for VariationAxis;
}

ValueMetadata *type metadata accessor for VariationAxisTag()
{
  return &type metadata for VariationAxisTag;
}

uint64_t destroy for Format0()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NamedVariation(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NamedVariation(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NamedVariation(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NamedVariation()
{
  return &type metadata for NamedVariation;
}

ValueMetadata *type metadata accessor for FvarInstanceRecordFlags()
{
  return &type metadata for FvarInstanceRecordFlags;
}

ValueMetadata *type metadata accessor for FvarAxisFlags()
{
  return &type metadata for FvarAxisFlags;
}

uint64_t sub_1B5269D8C@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  __int16 v3 = sub_1B526A0CC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_1B5269DD0()
{
  unint64_t result = qword_1E9D486A0;
  if (!qword_1E9D486A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486A0);
  }
  return result;
}

unint64_t sub_1B5269E28()
{
  unint64_t result = qword_1E9D486A8;
  if (!qword_1E9D486A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486A8);
  }
  return result;
}

unint64_t sub_1B5269E80()
{
  unint64_t result = qword_1E9D486B0;
  if (!qword_1E9D486B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486B0);
  }
  return result;
}

unint64_t sub_1B5269ED8()
{
  unint64_t result = qword_1E9D486B8;
  if (!qword_1E9D486B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486B8);
  }
  return result;
}

unint64_t sub_1B5269F30()
{
  unint64_t result = qword_1E9D486C0;
  if (!qword_1E9D486C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486C0);
  }
  return result;
}

unint64_t sub_1B5269F88()
{
  unint64_t result = qword_1E9D486C8;
  if (!qword_1E9D486C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486C8);
  }
  return result;
}

unint64_t sub_1B5269FE0()
{
  unint64_t result = qword_1E9D486D0;
  if (!qword_1E9D486D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486D0);
  }
  return result;
}

unint64_t sub_1B526A038()
{
  unint64_t result = qword_1E9D486D8;
  if (!qword_1E9D486D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486D8);
  }
  return result;
}

uint64_t sub_1B526A094(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  __int16 v3 = (unsigned __int8 *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    unint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1B526A0CC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  __int16 v3 = (unsigned __int16 *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    unint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t static NameStringIdentifier.postScriptName.getter()
{
  return 6;
}

uint64_t sub_1B526A158(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B5293588((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1B526C680(v5);
  *a1 = v2;
  return result;
}

uint64_t NameStringEntry.localeIdentifier.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B526D870(a4, WORD2(a4));
}

uint64_t static NameStringIdentifier.fullName.getter()
{
  return 4;
}

uint64_t static NameStringIdentifier.fontFamily.getter()
{
  return 1;
}

uint64_t static NameStringIdentifier.fontSubfamily.getter()
{
  return 2;
}

uint64_t NameStringIdentifier.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*NameStringIdentifier.rawValue.modify())()
{
  return nullsub_1;
}

BOOL static NameStringIdentifier.< infix(_:_:)(unsigned __int16 a1, unsigned __int16 a2)
{
  return a1 < a2;
}

unint64_t NameStringIdentifier.description.getter(unsigned __int16 a1)
{
  int v1 = a1;
  unint64_t result = 0xD000000000000010;
  switch(v1)
  {
    case 0:
    case 16:
      return result;
    case 1:
      unint64_t result = 0x6D614620746E6F46;
      break;
    case 2:
      unint64_t result = 0x62755320746E6F46;
      break;
    case 3:
      unint64_t result = 0x4920657571696E55;
      break;
    case 4:
      unint64_t result = 0x6D614E206C6C7546;
      break;
    case 5:
      unint64_t result = 0x6E6F6973726556;
      break;
    case 6:
      unint64_t result = 0x6972635374736F50;
      break;
    case 7:
      unint64_t result = 0x72616D6564617254;
      break;
    case 8:
      unint64_t result = 0x74636166756E614DLL;
      break;
    case 9:
    case 12:
      unint64_t result = 0x72656E6769736544;
      break;
    case 10:
      unint64_t result = 0x7470697263736544;
      break;
    case 11:
      unint64_t result = 0x5520726F646E6556;
      break;
    case 13:
      unint64_t result = 0x65736E6563694CLL;
      break;
    case 14:
      unint64_t result = 0x2065736E6563694CLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000013;
      break;
    case 18:
      unint64_t result = 0xD000000000000018;
      break;
    case 19:
      unint64_t result = 0x5420656C706D6153;
      break;
    case 20:
      unint64_t result = 0xD000000000000013;
      break;
    case 25:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      sub_1B53731F8();
      sub_1B5372868();
      swift_bridgeObjectRelease();
      sub_1B5372868();
      unint64_t result = 40;
      break;
  }
  return result;
}

uint64_t static NameStringIdentifier.copyright.getter()
{
  return 0;
}

uint64_t static NameStringIdentifier.uniqueID.getter()
{
  return 3;
}

uint64_t static NameStringIdentifier.version.getter()
{
  return 5;
}

uint64_t static NameStringIdentifier.trademark.getter()
{
  return 7;
}

uint64_t static NameStringIdentifier.manufacturer.getter()
{
  return 8;
}

uint64_t static NameStringIdentifier.designer.getter()
{
  return 9;
}

uint64_t static NameStringIdentifier.description.getter()
{
  return 10;
}

uint64_t static NameStringIdentifier.vendorURL.getter()
{
  return 11;
}

uint64_t static NameStringIdentifier.designerURL.getter()
{
  return 12;
}

uint64_t static NameStringIdentifier.license.getter()
{
  return 13;
}

uint64_t static NameStringIdentifier.licenseURL.getter()
{
  return 14;
}

uint64_t static NameStringIdentifier.preferredFamily.getter()
{
  return 16;
}

uint64_t static NameStringIdentifier.preferredSubfamily.getter()
{
  return 17;
}

uint64_t static NameStringIdentifier.macCompatibleFullName.getter()
{
  return 18;
}

uint64_t static NameStringIdentifier.sampleText.getter()
{
  return 19;
}

uint64_t static NameStringIdentifier.postScriptCIDName.getter()
{
  return 20;
}

uint64_t static NameStringIdentifier.variationsPostScriptNamePrefix.getter()
{
  return 25;
}

uint64_t sub_1B526A5F4()
{
  return sub_1B53729F8();
}

uint64_t sub_1B526A654()
{
  return sub_1B53729E8();
}

BOOL sub_1B526A6A4(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1B526A6B8(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1B526A6CC(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1B526A6E0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a2 < *a1;
}

unint64_t sub_1B526A6F4()
{
  return NameStringIdentifier.description.getter(*v0);
}

uint64_t sub_1B526A6FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s10FontParser20NameStringIdentifierV8allCasesSayACGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t NameStringEntry.name.setter(uint64_t result)
{
  *int v1 = result;
  return result;
}

uint64_t (*NameStringEntry.name.modify())()
{
  return nullsub_1;
}

uint64_t NameStringEntry.value.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t NameStringEntry.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*NameStringEntry.value.modify())()
{
  return nullsub_1;
}

uint64_t NameStringEntry.platform.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

unint64_t NameStringEntry.scriptValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return a4 >> 16;
}

unint64_t NameStringEntry.languageValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return HIDWORD(a4);
}

uint64_t NameStringEntry.init(name:value:platform:scriptValue:languageValue:)(unsigned __int16 a1, int a2, int a3, int a4, Swift::UInt16 encoding, unsigned __int16 a6)
{
  int v7 = a6;
  if (Platform.interpret(encoding:language:)(encoding, (Swift::UInt16_optional)v7).value != FontParser_Encoding_unknownDefault) {
    return a1;
  }
  swift_bridgeObjectRelease();
  return 0;
}

FontParser::Encoding_optional NameStringEntry.encoding.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = WORD2(a4);
  result.Swift::UInt8 value = Platform.interpret(encoding:language:)(WORD1(a4), (Swift::UInt16_optional)v4).value;
  if (result.value == FontParser_Encoding_unknownDefault) {
    __break(1u);
  }
  return result;
}

FontParser::Language_optional NameStringEntry.language.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Platform.interpret(language:)(WORD2(a4));
}

uint64_t NameStringEntry.region.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((unsigned __int16)a4 != 3) {
    return 128;
  }
  unsigned __int16 v4 = WORD2(a4);
  unint64_t v5 = sub_1B5238328((uint64_t)&unk_1F0DDDE98);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1B5230620(v4), (v7 & 1) != 0)) {
    uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 + 56) + v6);
  }
  else {
    uint64_t v8 = 128;
  }
  swift_bridgeObjectRelease();
  return v8;
}

BOOL static NameStringEntry.__derived_struct_equals(_:_:)(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B526D070(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL, a5, a6, a7, a8 & 0xFFFFFFFFFFFFLL);
}

uint64_t sub_1B526A958()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x6D726F6674616C70;
      break;
    case 3:
      uint64_t result = 0x6156747069726373;
      break;
    case 4:
      uint64_t result = 0x65676175676E616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B526AA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B526DB50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B526AA34()
{
  return 0;
}

void sub_1B526AA40(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1B526AA4C(uint64_t a1)
{
  unint64_t v2 = sub_1B526DA54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B526AA88(uint64_t a1)
{
  unint64_t v2 = sub_1B526DA54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NameStringEntry.encode(to:)(void *a1, __int16 a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  v14[1] = a3;
  v14[2] = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D486E0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B526DA54();
  sub_1B5373378();
  __int16 v21 = a2;
  char v20 = 0;
  sub_1B526DAA8();
  sub_1B53731B8();
  if (!v5)
  {
    char v19 = 1;
    sub_1B5373198();
    __int16 v18 = a5;
    char v17 = 2;
    sub_1B526DAFC();
    sub_1B53731B8();
    char v16 = 3;
    sub_1B53731C8();
    char v15 = 4;
    sub_1B53731C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t NameStringEntry.init(from:)(void *a1)
{
  LODWORD(result) = sub_1B526DD94(a1);
  if (v1) {
    return v3;
  }
  else {
    return result;
  }
}

uint64_t sub_1B526AD04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B526DD94(a1);
  if (!v2)
  {
    *(_WORD *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(_DWORD *)(a2 + 24) = v7;
    *(_WORD *)(a2 + 28) = WORD2(v7);
  }
  return result;
}

uint64_t sub_1B526AD48(void *a1)
{
  return NameStringEntry.encode(to:)(a1, *(_WORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(_DWORD *)(v1 + 24));
}

BOOL sub_1B526AD74(uint64_t a1, uint64_t a2)
{
  return sub_1B526D070(*(_WORD *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32), *(_WORD *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int16 *)(a2 + 28) << 32));
}

uint64_t sub_1B526ADA4()
{
  return sub_1B5373358();
}

uint64_t sub_1B526AE2C()
{
  return sub_1B5373328();
}

uint64_t sub_1B526AE8C()
{
  return sub_1B5373358();
}

BOOL sub_1B526AF10(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    return a1[3] < a2[3];
  }
  else {
    return v5;
  }
}

BOOL sub_1B526AF38(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 >= v2;
  if (v4) {
    return a2[3] >= a1[3];
  }
  else {
    return v5;
  }
}

BOOL sub_1B526AF60(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 >= v3;
  if (v4) {
    return a1[3] >= a2[3];
  }
  else {
    return v5;
  }
}

BOOL sub_1B526AF88(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    return a2[3] < a1[3];
  }
  else {
    return v5;
  }
}

BOOL sub_1B526AFB0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

FontParser::Encoding_optional sub_1B526AFF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = a1;
  unint64_t v6 = HIDWORD(a1);
  unint64_t v7 = HIWORD(a1);
  int v8 = HIWORD(a1);
  result.Swift::UInt8 value = Platform.interpret(encoding:language:)(WORD2(a1), (Swift::UInt16_optional)v8).value;
  if (result.value == FontParser_Encoding_unknownDefault)
  {
    __break(1u);
  }
  else
  {
    sub_1B526B0EC(a2, a3, result.value);
    if (!v10) {
      return 0;
    }
    int v11 = v7;
    result.Swift::UInt8 value = Platform.interpret(encoding:language:)(v6, (Swift::UInt16_optional)v11).value;
    if (result.value != FontParser_Encoding_unknownDefault) {
      return (FontParser::Encoding_optional)v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B526B0EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = sub_1B526BDDC(a3);
  if ((v3 & 0x100000000) != 0) {
    return 0;
  }
  CFStringEncoding v4 = v3;
  uint64_t v5 = sub_1B5372398();
  uint64_t v7 = v5;
  unint64_t v8 = v6;
  switch(v6 >> 62)
  {
    case 1uLL:
      unsigned int v12 = (__CFString *)((v5 >> 32) - (int)v5);
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
        goto LABEL_42;
      }
      uint64_t v13 = sub_1B5372268();
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = sub_1B5372298();
        uint64_t v16 = (int)v7 - v15;
        if (__OFSUB__((int)v7, v15)) {
          goto LABEL_43;
        }
        uint64_t v17 = sub_1B5372288();
        int v11 = (UInt8 *)(v14 + v16);
        if (v17 >= (uint64_t)v12) {
          CFIndex v9 = (v7 >> 32) - (int)v7;
        }
        else {
          CFIndex v9 = v17;
        }
        CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        goto LABEL_23;
      }
      sub_1B5372288();
      CFStringRef v30 = CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, v4, 0);
      if (!v30)
      {
        sub_1B51D4C64(v7, v8);
        return 0;
      }
      uint64_t v28 = (__CFString *)v30;
      uint64_t v25 = sub_1B53726E8();
      if ((v31 & 0x1000000000000000) == 0) {
        goto LABEL_25;
      }
      uint64_t v25 = sub_1B526C12C();

      swift_bridgeObjectRelease();
      sub_1B51D4C64(v7, v8);
      return v25;
    case 2uLL:
      unsigned int v12 = *(__CFString **)(v5 + 16);
      uint64_t v18 = *(void *)(v5 + 24);
      swift_retain();
      swift_retain();
      char v19 = (const UInt8 *)sub_1B5372268();
      if (!v19) {
        goto LABEL_14;
      }
      uint64_t v20 = sub_1B5372298();
      if (__OFSUB__(v12, v20)) {
        goto LABEL_44;
      }
      char v19 = (const UInt8 *)v12 + (void)v19 - v20;
LABEL_14:
      BOOL v21 = __OFSUB__(v18, v12);
      unsigned int v12 = (__CFString *)(v18 - (void)v12);
      if (v21)
      {
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      uint64_t v22 = sub_1B5372288();
      if (v19)
      {
        if (v22 >= (uint64_t)v12) {
          CFIndex v23 = (CFIndex)v12;
        }
        else {
          CFIndex v23 = v22;
        }
        CFStringRef v24 = CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v19, v23, v4, 0);
        if (!v24)
        {
          uint64_t v25 = 0;
          goto LABEL_33;
        }
        unsigned int v12 = (__CFString *)v24;
        uint64_t v25 = sub_1B53726E8();
        if ((v26 & 0x1000000000000000) == 0)
        {

LABEL_33:
          swift_release();
          swift_release();
          goto LABEL_38;
        }
LABEL_45:
        uint64_t v25 = sub_1B526C12C();

        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      CFStringRef v32 = CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, v4, 0);
      if (v32)
      {
        uint64_t v33 = (__CFString *)v32;
        uint64_t v25 = sub_1B53726E8();
        if ((v34 & 0x1000000000000000) != 0)
        {
          uint64_t v25 = sub_1B526C12C();
          swift_release();
          swift_release();

          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
LABEL_37:
        uint64_t v25 = 0;
      }
LABEL_38:
      sub_1B51D4C64(v7, v8);
      break;
    case 3uLL:
      memset(bytes, 0, 14);
      CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      int v11 = bytes;
      CFIndex v9 = 0;
      goto LABEL_23;
    default:
      *(void *)bytes = v5;
      *(_WORD *)&bytes[8] = v6;
      bytes[10] = BYTE2(v6);
      bytes[11] = BYTE3(v6);
      bytes[12] = BYTE4(v6);
      CFIndex v9 = BYTE6(v6);
      bytes[13] = BYTE5(v6);
      CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      int v11 = bytes;
LABEL_23:
      CFStringRef v27 = CFStringCreateWithBytes(v10, v11, v9, v4, 0);
      if (!v27) {
        goto LABEL_37;
      }
      uint64_t v28 = (__CFString *)v27;
      uint64_t v25 = sub_1B53726E8();
      if ((v29 & 0x1000000000000000) != 0)
      {
        uint64_t v25 = sub_1B526C12C();

        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_25:
      }
      goto LABEL_38;
  }
  return v25;
}

uint64_t sub_1B526B518(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8 = a1;
  uint64_t v95 = *MEMORY[0x1E4F143B8];
  int64_t v9 = sub_1B5261670(a1, a3);
  uint64_t v90 = a3;
  CFAllocatorRef v10 = *(__CFString **)(a3 + 16);
  if ((uint64_t)v10 < v9)
  {
    __break(1u);
    goto LABEL_133;
  }
  uint64_t v11 = v9;
  if (v9 < 0)
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  uint64_t v12 = v90 + 32;
  int64_t v13 = sub_1B52684B4(v8, v90 + 32, v9, (2 * (void)v10) | 1);
  if (v13 < v11)
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  int64_t v14 = v13;
  if ((uint64_t)v10 < v13)
  {
LABEL_135:
    __break(1u);
LABEL_136:
    uint64_t v69 = sub_1B526C12C();

    swift_bridgeObjectRelease();
LABEL_131:
    sub_1B51D4C64(a5, v8);
    return v69;
  }
  if (v11 == v13) {
    return 0;
  }
  uint64_t v15 = a2 & 0xFF000000;
  int v16 = BYTE3(a2);
  uint64_t v91 = a2 & 0xFF0000000000;
  uint64_t v92 = a2 & 0xFF00000000;
  int v85 = BYTE5(a2);
  swift_bridgeObjectRetain();
  uint64_t v88 = a2;
  int v86 = BYTE3(a2);
  int64_t v87 = v14;
  uint64_t v84 = v15;
  while (1)
  {
    if (v11 >= v14)
    {
      __break(1u);
      goto LABEL_126;
    }
    uint64_t v17 = (unsigned __int16 *)(v12 + 24 * v11);
    unint64_t v8 = v17[1];
    a5 = v17[2];
    uint64_t v18 = v17[3];
    if (v17[1])
    {
      if (v8 > 3) {
        goto LABEL_140;
      }
      char v19 = *(&off_1E60E16A0 + (__int16)(v8 - 1));
    }
    else
    {
      char v19 = &unk_1F0DDD000;
    }
    if (v19[2] <= a5)
    {
LABEL_139:
      swift_bridgeObjectRelease();
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      uint64_t v69 = sub_1B526C12C();

      swift_bridgeObjectRelease();
LABEL_124:
      swift_release();
      swift_release();
      goto LABEL_131;
    }
    CFStringEncoding v20 = *((unsigned __int8 *)v19 + a5 + 32);
    swift_bridgeObjectRelease();
    uint64_t language = v18;
    if (v8 != 1)
    {
      if (v20 == 56) {
        goto LABEL_140;
      }
      if (!v8)
      {
        if (v18) {
          unsigned __int8 v34 = -81;
        }
        else {
          unsigned __int8 v34 = 0;
        }
        goto LABEL_61;
      }
      if (v8 != 3) {
        goto LABEL_35;
      }
      uint64_t v22 = qword_1F0DDD190;
      if (qword_1F0DDD190)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48208);
        CFIndex v23 = (void *)sub_1B5373138();
        CFStringRef v24 = &byte_1F0DDD1A8;
        do
        {
          uint64_t v25 = *((void *)v24 - 1);
          char v26 = *v24;
          unint64_t v27 = sub_1B5230620(v25);
          if (v28)
          {
            __break(1u);
LABEL_114:
            __break(1u);
            goto LABEL_115;
          }
          *(void *)((char *)v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v27;
          *(void *)(v23[6] + 8 * v27) = v25;
          *(unsigned char *)(v23[7] + v27) = v26;
          uint64_t v29 = v23[2];
          BOOL v30 = __OFADD__(v29, 1);
          uint64_t v31 = v29 + 1;
          if (v30) {
            goto LABEL_114;
          }
          v24 += 16;
          v23[2] = v31;
          --v22;
        }
        while (v22);
        uint64_t v12 = v90 + 32;
        a2 = v88;
        int v16 = v86;
        int64_t v14 = v87;
        uint64_t v32 = language;
        if (v31) {
          goto LABEL_40;
        }
      }
      else
      {
        CFIndex v23 = (void *)MEMORY[0x1E4FBC868];
        uint64_t v32 = language;
        if (*(void *)(MEMORY[0x1E4FBC868] + 16))
        {
LABEL_40:
          unint64_t v35 = sub_1B5230620(v32);
          if (v36)
          {
            char v37 = *(unsigned char *)(v23[7] + v35);
            goto LABEL_43;
          }
        }
      }
      char v37 = -81;
LABEL_43:
      char v89 = v37;
      swift_release();
      uint64_t v38 = qword_1F0DDDEA8;
      if (qword_1F0DDDEA8)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D481C8);
        unint64_t v39 = (void *)sub_1B5373138();
        uint64_t v40 = &byte_1F0DDDEC0;
        while (1)
        {
          uint64_t v41 = *((void *)v40 - 1);
          char v42 = *v40;
          unint64_t v43 = sub_1B5230620(v41);
          if (v44) {
            break;
          }
          *(void *)((char *)v39 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v43;
          *(void *)(v39[6] + 8 * v43) = v41;
          *(unsigned char *)(v39[7] + v43) = v42;
          uint64_t v45 = v39[2];
          BOOL v30 = __OFADD__(v45, 1);
          uint64_t v46 = v45 + 1;
          if (v30) {
            goto LABEL_116;
          }
          v40 += 16;
          _OWORD v39[2] = v46;
          if (!--v38)
          {
            uint64_t v12 = v90 + 32;
            a2 = v88;
            int v16 = v86;
            int64_t v14 = v87;
            uint64_t v47 = language;
            if (v46) {
              goto LABEL_51;
            }
            goto LABEL_53;
          }
        }
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        sub_1B5372288();
        CFStringRef v78 = CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, v20, 0);
        if (v78)
        {
          CFAllocatorRef v10 = (__CFString *)v78;
          uint64_t v69 = sub_1B53726E8();
          if ((v79 & 0x1000000000000000) == 0)
          {
LABEL_112:

            goto LABEL_131;
          }
          uint64_t v69 = sub_1B526C12C();

          swift_bridgeObjectRelease();
          sub_1B51D4C64(a5, v8);
          return v69;
        }
LABEL_126:
        sub_1B51D4C64(a5, v8);
        return 0;
      }
      unint64_t v39 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v47 = language;
      if (*(void *)(MEMORY[0x1E4FBC868] + 16))
      {
LABEL_51:
        unint64_t v48 = sub_1B5230620(v47);
        if (v49)
        {
          int v33 = *(unsigned __int8 *)(v39[7] + v48);
          swift_release();
LABEL_54:
          uint64_t v15 = v84;
          unsigned __int8 v34 = v89;
          goto LABEL_62;
        }
      }
LABEL_53:
      swift_release();
      int v33 = 128;
      goto LABEL_54;
    }
    if (v20 == 56) {
      goto LABEL_140;
    }
    if (qword_1F0DDD0D8 <= v18)
    {
LABEL_35:
      int v33 = 128;
      unsigned __int8 v34 = -81;
      goto LABEL_62;
    }
    int v21 = *((unsigned __int8 *)&unk_1F0DDD0C8 + v18 + 32);
    if (v21 == 175) {
      goto LABEL_60;
    }
    switch(v20)
    {
      case 0x15u:
        BOOL v50 = v21 == 163;
        int v51 = 21;
        goto LABEL_57;
      case 0x11u:
        BOOL v50 = v21 == 40;
        int v51 = 17;
LABEL_57:
        if (v50) {
          CFStringEncoding v20 = v51 + 1;
        }
        else {
          CFStringEncoding v20 = v51;
        }
        break;
      case 9u:
        if (*((unsigned __int8 *)&unk_1F0DDD0C8 + v18 + 32) > 0x74u)
        {
          if (v21 == 117)
          {
            CFStringEncoding v20 = 13;
          }
          else
          {
            if (v21 != 160)
            {
LABEL_85:
              CFStringEncoding v20 = 9;
              break;
            }
            CFStringEncoding v20 = 10;
          }
        }
        else if (v21 == 28)
        {
          CFStringEncoding v20 = 11;
        }
        else
        {
          if (v21 != 59) {
            goto LABEL_85;
          }
          CFStringEncoding v20 = 12;
        }
        break;
    }
LABEL_60:
    unsigned __int8 v34 = *((unsigned char *)&unk_1F0DDD0C8 + v18 + 32);
LABEL_61:
    int v33 = 128;
LABEL_62:
    BOOL v52 = v15 == 939524096 || v20 == v16;
    BOOL v53 = v52;
    BOOL v54 = v8 != (unsigned __int16)a2 && (a2 & 0x10000) == 0;
    if (!v54
      && v53
      && (v92 == 0xAF00000000 || v34 != 175 && v34 == BYTE4(a2))
      && (v91 == 0x800000000000 || v33 != 128 && v33 == v85))
    {
      break;
    }
    if (++v11 == v14)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  int v55 = language;
  v56.Swift::UInt8 value = Platform.interpret(encoding:language:)(a5, (Swift::UInt16_optional)v55).value;
  if (v56.value == FontParser_Encoding_unknownDefault)
  {
    __break(1u);
    JUMPOUT(0x1B526BDCCLL);
  }
  unint64_t v57 = sub_1B526BDDC(v56.value);
  if ((v57 & 0x100000000) == 0)
  {
    CFStringEncoding v20 = v57;
    uint64_t v58 = sub_1B5372398();
    a5 = v58;
    unint64_t v8 = v59;
    switch(v59 >> 62)
    {
      case 1uLL:
        uint64_t v11 = (v58 >> 32) - (int)v58;
        if (v58 >> 32 < (int)v58)
        {
          __break(1u);
          goto LABEL_138;
        }
        uint64_t v71 = sub_1B5372268();
        if (!v71) {
          goto LABEL_117;
        }
        uint64_t v72 = v71;
        uint64_t v73 = sub_1B5372298();
        uint64_t v74 = (int)a5 - v73;
        if (__OFSUB__((int)a5, v73)) {
          goto LABEL_142;
        }
        uint64_t v75 = sub_1B5372288();
        uint64_t v62 = (UInt8 *)(v72 + v74);
        if (v75 >= v11) {
          CFIndex v60 = (a5 >> 32) - (int)a5;
        }
        else {
          CFIndex v60 = v75;
        }
        CFAllocatorRef v61 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        goto LABEL_110;
      case 2uLL:
        uint64_t v11 = *(void *)(v58 + 16);
        uint64_t v63 = *(void *)(v58 + 24);
        swift_retain();
        swift_retain();
        unsigned long long v64 = (const UInt8 *)sub_1B5372268();
        if (!v64) {
          goto LABEL_94;
        }
        uint64_t v65 = sub_1B5372298();
        if (__OFSUB__(v11, v65)) {
          goto LABEL_141;
        }
        v64 += v11 - v65;
LABEL_94:
        BOOL v30 = __OFSUB__(v63, v11);
        uint64_t v11 = v63 - v11;
        if (v30)
        {
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        uint64_t v66 = sub_1B5372288();
        if (!v64)
        {
          CFStringRef v80 = CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, v20, 0);
          if (v80)
          {
            uint64_t v81 = (__CFString *)v80;
            uint64_t v69 = sub_1B53726E8();
            if ((v82 & 0x1000000000000000) != 0)
            {
              uint64_t v69 = sub_1B526C12C();
              swift_release();
              swift_release();

              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();
              swift_release();
            }
          }
          else
          {
            swift_release();
            swift_release();
LABEL_130:
            uint64_t v69 = 0;
          }
          goto LABEL_131;
        }
        if (v66 >= v11) {
          CFIndex v67 = v11;
        }
        else {
          CFIndex v67 = v66;
        }
        CFStringRef v68 = CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v64, v67, v20, 0);
        if (v68)
        {
          uint64_t v11 = (uint64_t)v68;
          uint64_t v69 = sub_1B53726E8();
          if ((v70 & 0x1000000000000000) != 0) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v69 = 0;
        }
        break;
      case 3uLL:
        memset(bytes, 0, 14);
        CFAllocatorRef v61 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        uint64_t v62 = bytes;
        CFIndex v60 = 0;
        goto LABEL_110;
      default:
        *(void *)bytes = v58;
        *(_WORD *)&bytes[8] = v59;
        bytes[10] = BYTE2(v59);
        bytes[11] = BYTE3(v59);
        bytes[12] = BYTE4(v59);
        CFIndex v60 = BYTE6(v59);
        bytes[13] = BYTE5(v59);
        CFAllocatorRef v61 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        uint64_t v62 = bytes;
LABEL_110:
        CFStringRef v76 = CFStringCreateWithBytes(v61, v62, v60, v20, 0);
        if (!v76) {
          goto LABEL_130;
        }
        CFAllocatorRef v10 = (__CFString *)v76;
        uint64_t v69 = sub_1B53726E8();
        if ((v77 & 0x1000000000000000) == 0) {
          goto LABEL_112;
        }
        goto LABEL_136;
    }
    goto LABEL_124;
  }
  return 0;
}

unint64_t sub_1B526BDDC(char a1)
{
  unsigned __int8 v1 = 1;
  uint64_t v2 = 0;
  switch(a1)
  {
    case 5:
    case 6:
    case 23:
    case 47:
    case 48:
      return v2 | ((unint64_t)v1 << 32);
    case 7:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 1536;
      break;
    case 8:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 513;
      break;
    case 9:
      uint64_t v2 = 0;
      unsigned __int8 v1 = 0;
      break;
    case 10:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 35;
      break;
    case 11:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 36;
      break;
    case 12:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 37;
      break;
    case 13:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 38;
      break;
    case 14:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 1;
      break;
    case 15:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 2;
      break;
    case 16:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 3;
      break;
    case 17:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 4;
      break;
    case 18:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 140;
      break;
    case 19:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 5;
      break;
    case 20:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 6;
      break;
    case 21:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 7;
      break;
    case 22:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 152;
      break;
    case 24:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 9;
      break;
    case 25:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 10;
      break;
    case 26:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 11;
      break;
    case 27:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 12;
      break;
    case 28:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 13;
      break;
    case 29:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 14;
      break;
    case 30:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 15;
      break;
    case 31:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 16;
      break;
    case 32:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 17;
      break;
    case 33:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 18;
      break;
    case 34:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 19;
      break;
    case 35:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 20;
      break;
    case 36:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 21;
      break;
    case 37:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 22;
      break;
    case 38:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 23;
      break;
    case 39:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 24;
      break;
    case 40:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 25;
      break;
    case 41:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 26;
      break;
    case 42:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 27;
      break;
    case 43:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 28;
      break;
    case 44:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 29;
      break;
    case 45:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 30;
      break;
    case 46:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 31;
      break;
    case 50:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 2561;
      break;
    case 51:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 2352;
      break;
    case 52:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 2563;
      break;
    case 53:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 2368;
      break;
    case 54:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 1601;
      break;
    case 55:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 402653440;
      break;
    default:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 268435712;
      break;
  }
  return v2 | ((unint64_t)v1 << 32);
}

uint64_t sub_1B526C12C()
{
  unint64_t v0 = sub_1B5372948();
  uint64_t v4 = sub_1B526C1AC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B526C1AC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1B526C304(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1B526C404(v9, 0);
      unint64_t v12 = sub_1B526C46C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1B5372FB8();
LABEL_4:
        JUMPOUT(0x1BA9980D0);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1BA9980D0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1BA9980D0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1B526C304(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1B51D93B4(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1B51D93B4(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

void *sub_1B526C404(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47AF8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1B526C46C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    FontParser::Encoding_optional result = v12;
    if (v17 == v15) {
      FontParser::Encoding_optional result = sub_1B51D93B4(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      FontParser::Encoding_optional result = sub_1B53728D8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        FontParser::Encoding_optional result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          FontParser::Encoding_optional result = sub_1B5372FB8();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    FontParser::Encoding_optional result = sub_1B51D93B4(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1B53728A8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1B526C680(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B53731D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if (v3) {
      return sub_1B526CD40(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_136;
  }
  uint64_t v6 = result;
  uint64_t v106 = a1;
  if (v3 > 1)
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48750);
    uint64_t result = sub_1B5372A88();
    *(void *)(result + 16) = v7;
    uint64_t v108 = result;
    char v112 = (unsigned __int16 *)(result + 32);
LABEL_13:
    uint64_t v9 = 0;
    uint64_t v10 = *a1;
    uint64_t v107 = *a1 + 48;
    uint64_t v105 = *a1 + 8;
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t v109 = v6;
    uint64_t v110 = v3;
    uint64_t v111 = v10;
    while (1)
    {
      uint64_t v13 = v9++;
      if (v9 < v3)
      {
        uint64_t v14 = (unsigned __int16 *)(v10 + 24 * v9);
        unsigned int v15 = *v14;
        unsigned int v16 = v14[3];
        unint64_t v17 = (unsigned __int16 *)(v10 + 24 * v13);
        unsigned int v18 = *v17;
        int v19 = v16 < v17[3];
        BOOL v20 = v15 == v18;
        BOOL v21 = v15 < v18;
        if (!v20) {
          int v19 = v21;
        }
        uint64_t v9 = v13 + 2;
        if (v13 + 2 < v3)
        {
          uint64_t v22 = (unsigned __int16 *)(v107 + 24 * v13);
          while (1)
          {
            unsigned int v23 = *v22;
            unsigned int v24 = v22[3];
            BOOL v25 = v24 < v16;
            BOOL v20 = v23 == v15;
            int v26 = v23 < v15;
            if (v20) {
              int v26 = v25;
            }
            if (v19 != v26) {
              break;
            }
            v22 += 12;
            ++v9;
            unsigned int v16 = v24;
            unsigned int v15 = v23;
            if (v3 == v9)
            {
              uint64_t v9 = v3;
              break;
            }
          }
        }
        if (v19)
        {
          if (v9 < v13) {
            goto LABEL_138;
          }
          if (v13 < v9)
          {
            uint64_t v27 = 24 * v9;
            uint64_t v28 = 24 * v13;
            uint64_t v29 = v9;
            uint64_t v30 = v13;
            do
            {
              if (v30 != --v29)
              {
                if (!v10) {
                  goto LABEL_143;
                }
                uint64_t v31 = v10 + v28;
                uint64_t v32 = v10 + v27;
                long long v33 = *(_OWORD *)(v10 + v28 + 8);
                uint64_t v34 = *(void *)(v10 + v28);
                long long v35 = *(_OWORD *)(v10 + v27 - 24);
                *(void *)(v31 + 16) = *(void *)(v10 + v27 - 8);
                *(_OWORD *)uint64_t v31 = v35;
                *(void *)(v32 - 24) = v34;
                *(_OWORD *)(v32 - 16) = v33;
              }
              ++v30;
              v27 -= 24;
              v28 += 24;
            }
            while (v30 < v29);
          }
        }
      }
      if (v9 < v3)
      {
        if (__OFSUB__(v9, v13)) {
          goto LABEL_135;
        }
        if (v9 - v13 < v6)
        {
          uint64_t v36 = v13 + v6;
          if (__OFADD__(v13, v6)) {
            goto LABEL_139;
          }
          if (v36 >= v3) {
            uint64_t v36 = v3;
          }
          if (v36 < v13)
          {
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
            return result;
          }
          if (v9 != v36)
          {
            uint64_t v37 = v105 + 24 * v9;
            do
            {
              uint64_t v38 = (unsigned __int16 *)(v10 + 24 * v9);
              unsigned int v39 = *v38;
              unsigned int v40 = v38[3];
              uint64_t v41 = v13;
              uint64_t v42 = v37;
              do
              {
                unsigned int v43 = *(unsigned __int16 *)(v42 - 32);
                BOOL v20 = v39 == v43;
                BOOL v44 = v39 < v43;
                if (v20) {
                  BOOL v44 = v40 < *(unsigned __int16 *)(v42 - 26);
                }
                if (!v44) {
                  break;
                }
                if (!v10) {
                  goto LABEL_141;
                }
                uint64_t v45 = v42 - 8;
                uint64_t v46 = *(void *)(v42 - 16);
                long long v47 = *(_OWORD *)(v42 - 32);
                *(_OWORD *)(v42 - 24) = *(_OWORD *)v42;
                v42 -= 24;
                int v48 = *(_DWORD *)(v42 + 18);
                *(_OWORD *)uint64_t v45 = v47;
                *(void *)(v45 + 16) = v46;
                *(_WORD *)(v42 - 8) = v39;
                *(_DWORD *)(v42 - 6) = v48;
                *(_WORD *)(v42 - 2) = v40;
                ++v41;
              }
              while (v9 != v41);
              ++v9;
              v37 += 24;
            }
            while (v9 != v36);
            uint64_t v9 = v36;
          }
        }
      }
      if (v9 < v13) {
        goto LABEL_130;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B51DA83C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
        uint64_t v11 = result;
      }
      unint64_t v50 = *(void *)(v11 + 16);
      unint64_t v49 = *(void *)(v11 + 24);
      unint64_t v12 = v50 + 1;
      uint64_t v10 = v111;
      if (v50 >= v49 >> 1)
      {
        uint64_t result = (uint64_t)sub_1B51DA83C((char *)(v49 > 1), v50 + 1, 1, (char *)v11);
        uint64_t v10 = v111;
        uint64_t v11 = result;
      }
      *(void *)(v11 + 16) = v12;
      uint64_t v51 = v11 + 32;
      BOOL v52 = (uint64_t *)(v11 + 32 + 16 * v50);
      *BOOL v52 = v13;
      v52[1] = v9;
      if (v50)
      {
        while (1)
        {
          unint64_t v53 = v12 - 1;
          if (v12 >= 4)
          {
            unint64_t v58 = v51 + 16 * v12;
            uint64_t v59 = *(void *)(v58 - 64);
            uint64_t v60 = *(void *)(v58 - 56);
            BOOL v64 = __OFSUB__(v60, v59);
            uint64_t v61 = v60 - v59;
            if (v64) {
              goto LABEL_119;
            }
            uint64_t v63 = *(void *)(v58 - 48);
            uint64_t v62 = *(void *)(v58 - 40);
            BOOL v64 = __OFSUB__(v62, v63);
            uint64_t v56 = v62 - v63;
            char v57 = v64;
            if (v64) {
              goto LABEL_120;
            }
            unint64_t v65 = v12 - 2;
            uint64_t v66 = (uint64_t *)(v51 + 16 * (v12 - 2));
            uint64_t v68 = *v66;
            uint64_t v67 = v66[1];
            BOOL v64 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v64) {
              goto LABEL_121;
            }
            BOOL v64 = __OFADD__(v56, v69);
            uint64_t v70 = v56 + v69;
            if (v64) {
              goto LABEL_123;
            }
            if (v70 >= v61)
            {
              uint64_t v88 = (uint64_t *)(v51 + 16 * v53);
              uint64_t v90 = *v88;
              uint64_t v89 = v88[1];
              BOOL v64 = __OFSUB__(v89, v90);
              uint64_t v91 = v89 - v90;
              if (v64) {
                goto LABEL_129;
              }
              BOOL v81 = v56 < v91;
              goto LABEL_89;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v82 = *(void *)(v11 + 32);
              uint64_t v83 = *(void *)(v11 + 40);
              BOOL v64 = __OFSUB__(v83, v82);
              uint64_t v75 = v83 - v82;
              char v76 = v64;
              goto LABEL_83;
            }
            uint64_t v55 = *(void *)(v11 + 32);
            uint64_t v54 = *(void *)(v11 + 40);
            BOOL v64 = __OFSUB__(v54, v55);
            uint64_t v56 = v54 - v55;
            char v57 = v64;
          }
          if (v57) {
            goto LABEL_122;
          }
          unint64_t v65 = v12 - 2;
          uint64_t v71 = (uint64_t *)(v51 + 16 * (v12 - 2));
          uint64_t v73 = *v71;
          uint64_t v72 = v71[1];
          BOOL v74 = __OFSUB__(v72, v73);
          uint64_t v75 = v72 - v73;
          char v76 = v74;
          if (v74) {
            goto LABEL_124;
          }
          uint64_t v77 = (uint64_t *)(v51 + 16 * v53);
          uint64_t v79 = *v77;
          uint64_t v78 = v77[1];
          BOOL v64 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v64) {
            goto LABEL_126;
          }
          if (__OFADD__(v75, v80)) {
            goto LABEL_128;
          }
          if (v75 + v80 >= v56)
          {
            BOOL v81 = v56 < v80;
LABEL_89:
            if (v81) {
              unint64_t v53 = v65;
            }
            goto LABEL_91;
          }
LABEL_83:
          if (v76) {
            goto LABEL_125;
          }
          uint64_t v84 = (uint64_t *)(v51 + 16 * v53);
          uint64_t v86 = *v84;
          uint64_t v85 = v84[1];
          BOOL v64 = __OFSUB__(v85, v86);
          uint64_t v87 = v85 - v86;
          if (v64) {
            goto LABEL_127;
          }
          if (v87 < v75) {
            goto LABEL_15;
          }
LABEL_91:
          unint64_t v92 = v53 - 1;
          if (v53 - 1 >= v12)
          {
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
            goto LABEL_140;
          }
          if (!v10) {
            goto LABEL_142;
          }
          uint64_t v93 = (uint64_t *)(v51 + 16 * v92);
          uint64_t v94 = *v93;
          uint64_t v95 = (void *)(v51 + 16 * v53);
          uint64_t v96 = v95[1];
          uint64_t result = sub_1B526CDF0((unsigned __int16 *)(v10 + 24 * *v93), (unsigned __int16 *)(v10 + 24 * *v95), v10 + 24 * v96, v112);
          if (v1) {
            goto LABEL_99;
          }
          if (v96 < v94) {
            goto LABEL_116;
          }
          if (v53 > *(void *)(v11 + 16)) {
            goto LABEL_117;
          }
          *uint64_t v93 = v94;
          *(void *)(v51 + 16 * v92 + 8) = v96;
          unint64_t v97 = *(void *)(v11 + 16);
          if (v53 >= v97) {
            goto LABEL_118;
          }
          unint64_t v12 = v97 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v51 + 16 * v53), v95 + 2, 16 * (v97 - 1 - v53));
          *(void *)(v11 + 16) = v97 - 1;
          uint64_t v10 = v111;
          if (v97 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_15:
      uint64_t v6 = v109;
      uint64_t v3 = v110;
      if (v9 >= v110)
      {
        uint64_t v8 = v108;
        goto LABEL_102;
      }
    }
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  char v112 = (unsigned __int16 *)(MEMORY[0x1E4FBC860] + 32);
  if (v3 == 1)
  {
    uint64_t v108 = MEMORY[0x1E4FBC860];
    goto LABEL_13;
  }
  unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_102:
  uint64_t result = v11;
  uint64_t v108 = v8;
  if (v12 >= 2)
  {
    uint64_t v98 = *v106;
    do
    {
      unint64_t v99 = v12 - 2;
      if (v12 < 2) {
        goto LABEL_131;
      }
      if (!v98) {
        goto LABEL_144;
      }
      uint64_t v100 = result;
      uint64_t v101 = *(void *)(result + 32 + 16 * v99);
      uint64_t v102 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
      uint64_t result = sub_1B526CDF0((unsigned __int16 *)(v98 + 24 * v101), (unsigned __int16 *)(v98 + 24 * *(void *)(result + 32 + 16 * (v12 - 1))), v98 + 24 * v102, v112);
      if (v1) {
        break;
      }
      if (v102 < v101) {
        goto LABEL_132;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B51DA938(v100);
        uint64_t v100 = result;
      }
      if (v99 >= *(void *)(v100 + 16)) {
        goto LABEL_133;
      }
      char v103 = (void *)(v100 + 32 + 16 * v99);
      *char v103 = v101;
      v103[1] = v102;
      unint64_t v104 = *(void *)(v100 + 16);
      if (v12 > v104) {
        goto LABEL_134;
      }
      memmove((void *)(v100 + 32 + 16 * (v12 - 1)), (const void *)(v100 + 32 + 16 * v12), 16 * (v104 - v12));
      uint64_t result = v100;
      *(void *)(v100 + 16) = v104 - 1;
      unint64_t v12 = v104 - 1;
    }
    while (v104 > 2);
  }
LABEL_99:
  swift_bridgeObjectRelease();
  *(void *)(v108 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B526CD40(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 24 * a3 + 8;
LABEL_5:
    uint64_t v6 = (unsigned __int16 *)(v4 + 24 * a3);
    unsigned int v7 = *v6;
    unsigned int v8 = v6[3];
    uint64_t v9 = result;
    uint64_t v10 = v5;
    while (1)
    {
      unsigned int v11 = *(unsigned __int16 *)(v10 - 32);
      BOOL v12 = v7 == v11;
      BOOL v13 = v7 < v11;
      if (v12) {
        BOOL v13 = v8 < *(unsigned __int16 *)(v10 - 26);
      }
      if (!v13)
      {
LABEL_4:
        ++a3;
        v5 += 24;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      uint64_t v14 = v10 - 8;
      uint64_t v15 = *(void *)(v10 - 16);
      long long v16 = *(_OWORD *)(v10 - 32);
      *(_OWORD *)(v10 - 24) = *(_OWORD *)v10;
      v10 -= 24;
      int v17 = *(_DWORD *)(v10 + 18);
      *(_OWORD *)uint64_t v14 = v16;
      *(void *)(v14 + 16) = v15;
      *(_WORD *)(v10 - 8) = v7;
      *(_DWORD *)(v10 - 6) = v17;
      *(_WORD *)(v10 - 2) = v8;
      if (a3 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B526CDF0(unsigned __int16 *__dst, unsigned __int16 *__src, unint64_t a3, unsigned __int16 *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  unsigned int v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 24;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 24;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[12 * v11] <= a4) {
      memmove(a4, __src, 24 * v11);
    }
    BOOL v12 = &v4[12 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_40;
    }
    unint64_t v19 = a3 - 24;
    while (1)
    {
      unsigned int v20 = *(v12 - 12);
      BOOL v21 = (unsigned __int16 *)(v19 + 24);
      uint64_t v22 = v6 - 12;
      unsigned int v23 = *(v6 - 12);
      BOOL v15 = v20 == v23;
      BOOL v24 = v20 < v23;
      if (v15) {
        BOOL v24 = *(v12 - 9) < *(v6 - 9);
      }
      if (v24)
      {
        if (v21 != v6)
        {
          v6 -= 12;
LABEL_37:
          long long v26 = *(_OWORD *)v22;
          *(void *)(v19 + 16) = *((void *)v22 + 2);
          *(_OWORD *)unint64_t v19 = v26;
          goto LABEL_38;
        }
        BOOL v25 = v19 >= (unint64_t)v6;
        v6 -= 12;
        if (v25) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v22 = v12 - 12;
        if (v21 != v12)
        {
          v12 -= 12;
          goto LABEL_37;
        }
        BOOL v25 = v19 >= (unint64_t)v12;
        v12 -= 12;
        if (v25) {
          goto LABEL_37;
        }
      }
LABEL_38:
      if (v6 > v7)
      {
        v19 -= 24;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_40;
    }
  }
  if (a4 != __dst || &__dst[12 * v9] <= a4) {
    memmove(a4, __dst, 24 * v9);
  }
  BOOL v12 = &v4[12 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      unsigned int v13 = *v6;
      unsigned int v14 = *v4;
      BOOL v15 = v13 == v14;
      BOOL v16 = v13 < v14;
      if (v15) {
        BOOL v16 = v6[3] < v4[3];
      }
      if (!v16) {
        break;
      }
      int v17 = v6;
      BOOL v15 = v7 == v6;
      v6 += 12;
      if (!v15) {
        goto LABEL_14;
      }
LABEL_15:
      v7 += 12;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    int v17 = v4;
    BOOL v15 = v7 == v4;
    v4 += 12;
    if (v15) {
      goto LABEL_15;
    }
LABEL_14:
    long long v18 = *(_OWORD *)v17;
    *((void *)v7 + 2) = *((void *)v17 + 2);
    *(_OWORD *)unsigned int v7 = v18;
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_40:
  uint64_t v27 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  uint64_t v28 = (v27 >> 2) + ((unint64_t)v27 >> 63);
  if (v6 != v4 || v6 >= &v4[12 * v28]) {
    memmove(v6, v4, 24 * v28);
  }
  return 1;
}

BOOL sub_1B526D070(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 != a5) {
    return 0;
  }
  __int16 v8 = WORD2(a8);
  __int16 v9 = WORD2(a4);
  int v10 = (unsigned __int16)a4;
  int v11 = WORD1(a4);
  int v12 = (unsigned __int16)a8;
  int v13 = WORD1(a8);
  if (a2 == a6 && a3 == a7)
  {
    BOOL result = 0;
  }
  else
  {
    char v15 = sub_1B5373228();
    BOOL result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
  }
  if (v10 == v12 && v11 == v13) {
    return v9 == v8;
  }
  return result;
}

char *sub_1B526D128(uint64_t a1)
{
  if (!*(void *)(a1 + 16) || (uint64_t v3 = sub_1B5230664(1851878757), (v4 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v5 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v3);
  uint64_t v7 = *v5;
  unint64_t v6 = v5[1];
  sub_1B51D4BB8(*v5, v6);
  swift_bridgeObjectRelease();
  *(void *)&long long v74 = v7;
  *((void *)&v74 + 1) = v6;
  sub_1B51D4BB8(v7, v6);
  sub_1B51D4C10();
  *(void *)&long long v76 = sub_1B53724D8();
  *((void *)&v76 + 1) = v8;
  uint64_t v77 = v9;
  uint64_t v10 = sub_1B51F6568(&v74, &v76, v9, 65793);
  if (v1)
  {
    sub_1B51D4C64(v7, v6);

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = v10;
  unint64_t v13 = v6 >> 62;
  uint64_t v14 = v74;
  switch(v6 >> 62)
  {
    case 1uLL:
      LODWORD(v15) = HIDWORD(v7) - v7;
      if (__OFSUB__(HIDWORD(v7), v7)) {
        goto LABEL_56;
      }
      uint64_t v15 = (int)v15;
LABEL_12:
      if (v15 < (uint64_t)v74)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        sub_1B51D4C64(v7, v6);
        return 0;
      }
      if (v13)
      {
        if (v13 == 1)
        {
          uint64_t v19 = (int)v7;
          uint64_t v14 = (int)v7 + (void)v74;
          if (__OFADD__((int)v7, (void)v74))
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          uint64_t v20 = v7 >> 32;
        }
        else
        {
          uint64_t v19 = *(void *)(v7 + 16);
          uint64_t v14 = v19 + v74;
          if (__OFADD__(v19, (void)v74))
          {
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            JUMPOUT(0x1B526D840);
          }
          uint64_t v20 = *(void *)(v7 + 24);
        }
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v20 = BYTE6(v6);
      }
LABEL_23:
      if (v20 < v19 || v20 < v14) {
        goto LABEL_50;
      }
      uint64_t v21 = sub_1B5372398();
      unint64_t v23 = v22;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      switch((int)v13)
      {
        case 1:
          LODWORD(v24) = HIDWORD(v7) - v7;
          if (__OFSUB__(HIDWORD(v7), v7)) {
            goto LABEL_60;
          }
          uint64_t v25 = (int)v7;
          uint64_t v24 = (int)v24;
LABEL_30:
          uint64_t v27 = *((void *)&v76 + 1) - v76;
          if (__OFSUB__(*((void *)&v76 + 1), (void)v76)) {
            goto LABEL_51;
          }
          BOOL v18 = __OFSUB__(v24, v27);
          uint64_t v28 = v24 - v27;
          if (v18) {
            goto LABEL_52;
          }
          uint64_t v29 = v25 + v28;
          if (__OFADD__(v25, v28)) {
            goto LABEL_53;
          }
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          switch((int)v13)
          {
            case 1:
              uint64_t v31 = (int)v7;
              uint64_t v30 = v7 >> 32;
              break;
            case 2:
              uint64_t v31 = *(void *)(v7 + 16);
              uint64_t v30 = *(void *)(v7 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v31 = 0;
              uint64_t v30 = BYTE6(v6);
              break;
          }
          unint64_t v64 = v23;
          if (v30 < v29 || v30 < v31) {
            goto LABEL_54;
          }
          uint64_t v62 = v7;
          unint64_t v63 = v6;
          *(void *)&long long v74 = sub_1B5372398();
          *((void *)&v74 + 1) = v32;
          uint64_t v60 = v74;
          unint64_t v61 = v32;
          sub_1B51D4BB8(v74, v32);
          uint64_t v33 = sub_1B53724D8();
          uint64_t v35 = v34;
          uint64_t v37 = v36;
          unint64_t v65 = sub_1B51E8918(0, v12 & ~(v12 >> 63), 0, MEMORY[0x1E4FBC860]);
          uint64_t v78 = v65;
          if (v12 < 0) {
            goto LABEL_55;
          }
          if (!v12) {
            goto LABEL_41;
          }
          break;
        case 2:
          uint64_t v25 = *(void *)(v7 + 16);
          uint64_t v26 = *(void *)(v7 + 24);
          BOOL v18 = __OFSUB__(v26, v25);
          uint64_t v24 = v26 - v25;
          if (!v18) {
            goto LABEL_30;
          }
          goto LABEL_61;
        case 3:
          goto LABEL_30;
        default:
          uint64_t v25 = 0;
          uint64_t v24 = BYTE6(v6);
          goto LABEL_30;
      }
      do
      {
        if (!v12)
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        *(void *)&long long v74 = v33;
        *((void *)&v74 + 1) = v35;
        uint64_t v75 = v37;
        *(void *)&long long v72 = v33;
        *((void *)&v72 + 1) = v35;
        uint64_t v73 = v37;
        *(void *)&long long v70 = v33;
        *((void *)&v70 + 1) = v35;
        uint64_t v71 = v37;
        swift_bridgeObjectRetain_n();
        unsigned __int16 v40 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v70, v39, 1);
        swift_bridgeObjectRelease();
        long long v72 = v70;
        uint64_t v73 = v71;
        unsigned int v79 = sub_1B51F3E0C((uint64_t *)&v72, v41, 1);
        swift_bridgeObjectRelease();
        long long v74 = v72;
        uint64_t v75 = v73;
        unsigned __int16 v43 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v74, v42, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unsigned __int16 v45 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v74, v44, 1);
        uint64_t v69 = v12;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unsigned __int16 v47 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v74, v46, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unsigned __int16 v49 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v74, v48, 1);
        unsigned __int16 v67 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = *((void *)&v74 + 1);
        uint64_t v33 = v74;
        int v50 = v43;
        uint64_t v68 = v75;
        unsigned __int16 v66 = v40;
        int value = Platform.interpret(encoding:language:)(v79, (Swift::UInt16_optional)v50).value;
        swift_bridgeObjectRelease();
        if (value == 56)
        {
          uint64_t v38 = v68;
        }
        else
        {
          uint64_t v52 = sub_1B5244AD0(v49, v49 + (unint64_t)v47, v21, v64);
          uint64_t v54 = v53;
          unint64_t v56 = *((void *)v65 + 2);
          unint64_t v55 = *((void *)v65 + 3);
          unint64_t v57 = v56 + 1;
          uint64_t v38 = v68;
          if (v56 >= v55 >> 1)
          {
            uint64_t v59 = sub_1B51E8918((char *)(v55 > 1), v56 + 1, 1, v65);
            unint64_t v57 = v56 + 1;
            unint64_t v65 = v59;
          }
          *((void *)v65 + 2) = v57;
          unint64_t v58 = &v65[24 * v56];
          *((_WORD *)v58 + 16) = v67;
          *((_WORD *)v58 + 17) = v66;
          *((_WORD *)v58 + 18) = v79;
          *((_WORD *)v58 + 19) = v43;
          *((void *)v58 + 5) = v52;
          *((void *)v58 + 6) = v54;
          uint64_t v78 = v65;
        }
        uint64_t v37 = v38;
        uint64_t v12 = v69 - 1;
      }
      while (v69 != 1);
LABEL_41:
      sub_1B526A158(&v78);
      sub_1B51D4C64(v60, v61);
      sub_1B51D4C64(v62, v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v78;
    case 2uLL:
      uint64_t v17 = *(void *)(v7 + 16);
      uint64_t v16 = *(void *)(v7 + 24);
      BOOL v18 = __OFSUB__(v16, v17);
      uint64_t v15 = v16 - v17;
      if (!v18) {
        goto LABEL_12;
      }
      goto LABEL_57;
    case 3uLL:
      if ((uint64_t)v74 > 0) {
        goto LABEL_18;
      }
      uint64_t v20 = 0;
      uint64_t v19 = 0;
      goto LABEL_23;
    default:
      uint64_t v15 = BYTE6(v6);
      goto LABEL_12;
  }
}

uint64_t sub_1B526D870(__int16 a1, unsigned __int16 a2)
{
  if (a1 != 3)
  {
    if (a1 == 1)
    {
      CanonicalLocaleIdentifierFromScriptManagerCodes = (__CFString *)CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2, -128);
      if (CanonicalLocaleIdentifierFromScriptManagerCodes) {
        goto LABEL_4;
      }
    }
    return 0;
  }
  CanonicalLocaleIdentifierFromScriptManagerCodes = (__CFString *)CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2);
  if (!CanonicalLocaleIdentifierFromScriptManagerCodes) {
    return 0;
  }
LABEL_4:
  uint64_t v3 = sub_1B53726E8();

  return v3;
}

uint64_t _s10FontParser20NameStringIdentifierV8allCasesSayACGvgZ_0()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1B521D010(0, 15, 0);
  uint64_t v1 = 0;
  uint64_t v2 = v11;
  unint64_t v3 = *(void *)(v11 + 16);
  do
  {
    uint64_t v12 = v2;
    unint64_t v4 = *(void *)(v2 + 24);
    if (v3 >= v4 >> 1)
    {
      sub_1B521D010((char *)(v4 > 1), v3 + 1, 1);
      uint64_t v2 = v12;
    }
    *(void *)(v2 + 16) = v3 + 1;
    *(_WORD *)(v2 + 2 * v3++ + 32) = v1++;
  }
  while (v1 != 15);
  sub_1B51D5DC4(v2);
  uint64_t v13 = v0;
  uint64_t v5 = 10;
  sub_1B521D010(0, 10, 0);
  uint64_t v6 = v13;
  unint64_t v7 = *(void *)(v13 + 16);
  int v8 = 16;
  do
  {
    uint64_t v14 = v6;
    unint64_t v9 = *(void *)(v6 + 24);
    if (v7 >= v9 >> 1)
    {
      sub_1B521D010((char *)(v9 > 1), v7 + 1, 1);
      uint64_t v6 = v14;
    }
    *(void *)(v6 + 16) = v7 + 1;
    *(_WORD *)(v6 + 2 * v7++ + 32) = v8++;
    --v5;
  }
  while (v5);
  sub_1B51D5DC4(v6);
  return v15;
}

unint64_t sub_1B526DA54()
{
  unint64_t result = qword_1E9D486E8;
  if (!qword_1E9D486E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486E8);
  }
  return result;
}

unint64_t sub_1B526DAA8()
{
  unint64_t result = qword_1E9D486F0;
  if (!qword_1E9D486F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486F0);
  }
  return result;
}

unint64_t sub_1B526DAFC()
{
  unint64_t result = qword_1E9D486F8;
  if (!qword_1E9D486F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D486F8);
  }
  return result;
}

uint64_t sub_1B526DB50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6156747069726373 && a2 == 0xEB0000000065756CLL || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xED000065756C6156)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1B5373228();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1B526DD94(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48738);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B526DA54();
  sub_1B5373368();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v15 = 0;
    sub_1B526E794();
    sub_1B5373178();
    uint64_t v7 = v16;
    char v14 = 1;
    sub_1B5373158();
    char v12 = 2;
    sub_1B526E7E8();
    swift_bridgeObjectRetain();
    sub_1B5373178();
    v9[2] = v13;
    char v11 = 3;
    v9[1] = sub_1B5373188();
    char v10 = 4;
    sub_1B5373188();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1B526E04C()
{
  unint64_t result = qword_1E9D48700;
  if (!qword_1E9D48700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48700);
  }
  return result;
}

unint64_t sub_1B526E0A4()
{
  unint64_t result = qword_1E9D48708;
  if (!qword_1E9D48708)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D48710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48708);
  }
  return result;
}

ValueMetadata *type metadata accessor for NameStringIdentifier()
{
  return &type metadata for NameStringIdentifier;
}

uint64_t destroy for NameStringEntry()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NameStringEntry(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_DWORD *)(a1 + 26) = *(_DWORD *)(a2 + 26);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NameStringEntry(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  return a1;
}

__n128 __swift_memcpy30_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 14) = *(_OWORD *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NameStringEntry(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_DWORD *)(a1 + 26) = *(_DWORD *)(a2 + 26);
  return a1;
}

uint64_t getEnumTagSinglePayload for NameStringEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 30)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NameStringEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 30) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 30) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NameStringEntry()
{
  return &type metadata for NameStringEntry;
}

uint64_t getEnumTagSinglePayload for NameStringEntry.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NameStringEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B526E430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NameStringEntry.CodingKeys()
{
  return &type metadata for NameStringEntry.CodingKeys;
}

uint64_t destroy for NameInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  return sub_1B51D4C64(v2, v3);
}

void *_s10FontParser8NameInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  sub_1B51D4BB8(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for NameInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[1];
  unint64_t v4 = a2[2];
  sub_1B51D4BB8(v5, v4);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_1B51D4C64(v6, v7);
  return a1;
}

void *assignWithTake for NameInfo(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1B51D4C64(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for NameInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NameInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NameInfo()
{
  return &type metadata for NameInfo;
}

unint64_t sub_1B526E63C()
{
  unint64_t result = qword_1E9D48718;
  if (!qword_1E9D48718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48718);
  }
  return result;
}

unint64_t sub_1B526E694()
{
  unint64_t result = qword_1E9D48720;
  if (!qword_1E9D48720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48720);
  }
  return result;
}

unint64_t sub_1B526E6EC()
{
  unint64_t result = qword_1E9D48728;
  if (!qword_1E9D48728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48728);
  }
  return result;
}

unint64_t sub_1B526E740()
{
  unint64_t result = qword_1E9D48730;
  if (!qword_1E9D48730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48730);
  }
  return result;
}

unint64_t sub_1B526E794()
{
  unint64_t result = qword_1E9D48740;
  if (!qword_1E9D48740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48740);
  }
  return result;
}

unint64_t sub_1B526E7E8()
{
  unint64_t result = qword_1E9D48748;
  if (!qword_1E9D48748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48748);
  }
  return result;
}

void *__swift_memcpy8_2(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NameInfo.NameKey(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NameInfo.NameKey(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NameInfo.NameKey()
{
  return &type metadata for NameInfo.NameKey;
}

unint64_t sub_1B526E8A4()
{
  unint64_t result = qword_1E9D48758;
  if (!qword_1E9D48758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48758);
  }
  return result;
}

uint64_t sub_1B526E8F8()
{
  sub_1B5372828();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B526EA2C()
{
  return sub_1B5373358();
}

uint64_t sub_1B526EB70(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x486D657473;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x486D657473;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x566D657473;
      break;
    case 2:
      unint64_t v5 = 0x6870796C4778;
      unint64_t v3 = 0xE600000000000000;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x6870796C476FLL;
      break;
    case 4:
      unint64_t v5 = 0x70697263536B6A63;
      unint64_t v3 = 0xE900000000000074;
      break;
    case 5:
      unint64_t v5 = 0x7367616C66;
      break;
    case 6:
      unint64_t v5 = 0x614C6E6769736564;
      unint64_t v3 = 0xEF7365676175676ELL;
      break;
    case 7:
      unint64_t v3 = 0x80000001B537BCB0;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x566D657473) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6870796C4778) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6870796C476FLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE900000000000074;
      if (v5 != 0x70697263536B6A63) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      if (v5 != 0x7367616C66) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x614C6E6769736564;
      unint64_t v6 = 0xEF7365676175676ELL;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0x80000001B537BCB0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1B5373228();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t Font.string(name:platform:encoding:language:region:)(uint64_t a1, int a2, unsigned __int8 a3, unsigned __int8 a4, unsigned __int8 a5, uint64_t a6, uint64_t a7)
{
  char v12 = BYTE2(a2);
  if ((a2 & 0x10000) != 0)
  {
    unsigned __int16 v14 = 0;
    if (a3 == 56 && a4 == 175 && a5 == 128)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 56))(a1, 0x802438010000, a6, a7);
      if (v16) {
        return result;
      }
      unsigned __int16 v14 = 0;
    }
  }
  else
  {
    unsigned __int16 v14 = a2;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a7 + 56))(a1, ((unint64_t)a4 << 32) | ((unint64_t)a5 << 40) | ((unint64_t)a3 << 24) | ((unint64_t)(v12 & 1) << 16) | v14, a6, a7);
}

void *Font.findBestCharacterMap()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t result = (*(void *(**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a2 + 64))(v9, 0x80AF38010000, a1);
  if (!v3)
  {
    if ((void)v10)
    {
      long long v6 = v11;
      a3[2] = v10;
      a3[3] = v6;
      long long v7 = v13;
      a3[4] = v12;
      a3[5] = v7;
      long long v8 = v9[1];
      *a3 = v9[0];
      a3[1] = v8;
    }
    else
    {
      sub_1B526F5FC((uint64_t)v9);
      sub_1B51DFED4();
      swift_allocError();
      return (void *)swift_willThrow();
    }
  }
  return result;
}

uint64_t Font.renderGlyph<A>(glyphIndex:into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a1;
  uint64_t v21 = a3;
  uint64_t v8 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  long long v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GlyphRendererAsRecorder();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v20 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
  uint64_t v22 = a2;
  v16(v10, a2, a4, v13);
  GlyphRendererAsRecorder.init(renderer:)((uint64_t)v10, a4, (uint64_t)v15);
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 96);
  uint64_t WitnessTable = swift_getWitnessTable();
  v17(v20, v15, v11, WitnessTable, v21, a5);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 24))(v22, v15, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t FontDataResidence.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t FontEncodingType.rawValue.getter(char a1)
{
  return a1 & 1;
}

uint64_t sub_1B526F1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v12 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (unsigned __int8 *)(a2 + 48);
      unint64_t v5 = (unsigned __int8 *)(a1 + 48);
      do
      {
        uint64_t v7 = *((void *)v5 - 2);
        unint64_t v6 = *((void *)v5 - 1);
        uint64_t v8 = *((void *)v4 - 2);
        unint64_t v9 = *((void *)v4 - 1);
        uint64_t v10 = *v5;
        uint64_t v11 = *v4;
        sub_1B51DFDC4(v7, v6, *v5);
        sub_1B51DFDC4(v8, v9, v11);
        char v12 = static PSObject.__derived_enum_equals(_:_:)(v7, v6, v10, v8, v9, v11);
        sub_1B51DFE20(v8, v9, v11);
        sub_1B51DFE20(v7, v6, v10);
        BOOL v14 = v3-- != 0;
        if ((v12 & 1) == 0) {
          break;
        }
        v4 += 24;
        v5 += 24;
      }
      while (v14);
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1B526F2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a2 + 48);
    uint64_t v4 = (unsigned char *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v7 = *((void *)v3 - 2);
      int v8 = *v3;
      if (*v4)
      {
        if (*v4 == 1)
        {
          if (v8 != 1) {
            return 0;
          }
          BOOL v9 = v6 == v7 && *((void *)v4 - 1) == *((void *)v3 - 1);
          if (!v9 && (sub_1B5373228() & 1) == 0) {
            return 0;
          }
        }
        else if (v8 != 2 || v6 != v7)
        {
          return 0;
        }
      }
      else
      {
        if (*v3) {
          return 0;
        }
        uint64_t v10 = v6 & 0xFFFFFFFFFFFFLL;
        uint64_t v11 = v7 & 0xFFFFFFFFFFFFLL;
        switch(BYTE6(v6))
        {
          case 1:
            if (BYTE6(v7) != 1 || v6 != v7) {
              return 0;
            }
            break;
          case 2:
            if (BYTE6(v7) != 2 || *(float *)&v6 != *(float *)&v7) {
              return 0;
            }
            break;
          case 3:
            if (BYTE6(v7) != 3 || v6 != v7) {
              return 0;
            }
            break;
          case 4:
            if (BYTE6(v7) != 4 || v6 != v7) {
              return 0;
            }
            break;
          case 5:
            if (BYTE6(v7) != 5 || (v7 ^ v6) != 0) {
              return 0;
            }
            break;
          case 6:
            if (BYTE6(v7) != 6 || v6 != v7) {
              return 0;
            }
            break;
          case 7:
            if (BYTE6(v7) != 7 || v10 != v11) {
              return 0;
            }
            break;
          case 8:
            if (BYTE6(v7) != 8 || v6 != v7) {
              return 0;
            }
            break;
          case 9:
            if (BYTE6(v7) != 9 || v6 != v7) {
              return 0;
            }
            break;
          case 0xA:
            if (v10)
            {
              if (BYTE6(v7) != 10 || v11 != 1) {
                return 0;
              }
            }
            else if (BYTE6(v7) != 10 || v11 != 0)
            {
              return 0;
            }
            break;
          default:
            uint64_t v12 = 0;
            if (!BYTE6(v7) && ((((*((void *)v4 - 2) & 1) == 0) ^ v7) & 1) != 0) {
              break;
            }
            return v12;
        }
      }
      v3 += 24;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1B526F4D4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1B5373228(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    BOOL v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1B5373228() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

FontParser::FontDataResidence_optional __swiftcall FontDataResidence.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3) {
    LOBYTE(rawValue) = 3;
  }
  return (FontParser::FontDataResidence_optional)rawValue;
}

uint64_t *sub_1B526F5AC@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

FontParser::FontEncodingType_optional __swiftcall FontEncodingType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    v1.int value = FontParser_FontEncodingType_type1;
  }
  else {
    v1.int value = FontParser_FontEncodingType_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1B526F5DC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1B526F5FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47930);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FontInfo.Typo.descent.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t FontInfo.Typo.leading.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

BOOL static FontInfo.Typo.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

uint64_t sub_1B526F690()
{
  uint64_t v1 = 0x746E6563736564;
  if (*v0 != 1) {
    uint64_t v1 = 0x676E696461656CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E65637361;
  }
}

uint64_t sub_1B526F6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5271D5C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B526F710(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1B526F71C(uint64_t a1)
{
  unint64_t v2 = sub_1B526F92C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B526F758(uint64_t a1)
{
  unint64_t v2 = sub_1B526F92C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FontInfo.Typo.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48760);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B526F92C();
  sub_1B5373378();
  char v13 = 0;
  sub_1B53731A8();
  if (!v3)
  {
    char v12 = 1;
    sub_1B53731A8();
    char v11 = 2;
    sub_1B53731A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1B526F92C()
{
  unint64_t result = qword_1E9D48768;
  if (!qword_1E9D48768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48768);
  }
  return result;
}

uint64_t FontInfo.Typo.init(from:)(void *a1)
{
  uint64_t result = sub_1B5271EAC(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_1B526F9A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B5271EAC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1B526F9D8(void *a1)
{
  return FontInfo.Typo.encode(to:)(a1, *v1, v1[1]);
}

BOOL sub_1B526F9F8(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t FontInfo.Windows.descent.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL static FontInfo.Windows.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t sub_1B526FA48()
{
  if (*v0) {
    return 0x746E6563736564;
  }
  else {
    return 0x746E65637361;
  }
}

uint64_t sub_1B526FA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B52720CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B526FAA8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1B526FAB4(uint64_t a1)
{
  unint64_t v2 = sub_1B5272078();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B526FAF0(uint64_t a1)
{
  unint64_t v2 = sub_1B5272078();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FontInfo.Windows.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48770);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5272078();
  sub_1B5373378();
  char v10 = 0;
  sub_1B53731A8();
  if (!v1)
  {
    char v9 = 1;
    sub_1B53731A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FontInfo.Windows.init(from:)(void *a1)
{
  return sub_1B52721B8(a1);
}

uint64_t sub_1B526FCAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B52721B8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B526FCD8(void *a1)
{
  return FontInfo.Windows.encode(to:)(a1);
}

BOOL sub_1B526FCF4(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double FontInfo.Strikeout.size.getter(double a1, double a2)
{
  return a2;
}

BOOL static FontInfo.Strikeout.__derived_struct_equals(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

uint64_t sub_1B526FD30()
{
  if (*v0) {
    return 1702521203;
  }
  else {
    return 0x6E6F697469736F70;
  }
}

uint64_t sub_1B526FD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5272404(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B526FD8C(uint64_t a1)
{
  unint64_t v2 = sub_1B527235C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B526FDC8(uint64_t a1)
{
  unint64_t v2 = sub_1B527235C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FontInfo.Strikeout.encode(to:)(void *a1, double a2, double a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48780);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B527235C();
  sub_1B5373378();
  double v14 = a2;
  char v13 = 0;
  sub_1B52723B0();
  sub_1B53731B8();
  if (!v3)
  {
    double v14 = a3;
    char v13 = 1;
    sub_1B53731B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

double FontInfo.Strikeout.init(from:)(void *a1)
{
  return sub_1B52724E8(a1);
}

void sub_1B526FFB0(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1B52724E8(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

uint64_t sub_1B526FFDC(void *a1)
{
  return FontInfo.Strikeout.encode(to:)(a1, *v1, v1[1]);
}

BOOL sub_1B526FFF8(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t FontInfo.RegistryOrderingSupplement.registry.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FontInfo.RegistryOrderingSupplement.registry.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FontInfo.RegistryOrderingSupplement.registry.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.RegistryOrderingSupplement.ordering.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FontInfo.RegistryOrderingSupplement.ordering.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FontInfo.RegistryOrderingSupplement.ordering.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.RegistryOrderingSupplement.supplement.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t FontInfo.RegistryOrderingSupplement.supplement.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*FontInfo.RegistryOrderingSupplement.supplement.modify())()
{
  return nullsub_1;
}

void __swiftcall FontInfo.RegistryOrderingSupplement.init(registry:ordering:supplement:)(FontParser::FontInfo::RegistryOrderingSupplement *__return_ptr retstr, Swift::String registry, Swift::String ordering, Swift::Int supplement)
{
  retstr->registry = registry;
  retstr->ordering = ordering;
  retstr->supplement = supplement;
}

uint64_t sub_1B5270178()
{
  uint64_t v1 = 0x676E69726564726FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656D656C70707573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7972747369676572;
  }
}

uint64_t sub_1B52701D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5272718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B5270200(uint64_t a1)
{
  unint64_t v2 = sub_1B52726C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B527023C(uint64_t a1)
{
  unint64_t v2 = sub_1B52726C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FontInfo.RegistryOrderingSupplement.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48798);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B52726C4();
  sub_1B5373378();
  v8[15] = 0;
  sub_1B5373198();
  if (!v1)
  {
    v8[14] = 1;
    sub_1B5373198();
    v8[13] = 2;
    sub_1B53731A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

double FontInfo.RegistryOrderingSupplement.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B527287C(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

double sub_1B5270448@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B527287C(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B5270490(void *a1)
{
  return FontInfo.RegistryOrderingSupplement.encode(to:)(a1);
}

BOOL sub_1B52704A8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s10FontParser0A4InfoV26RegistryOrderingSupplementV23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7);
}

uint64_t FontInfo.numberOfGlyphs.getter()
{
  return *(void *)v0;
}

uint64_t FontInfo.numberOfGlyphs.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FontInfo.numberOfGlyphs.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.unitsPerEm.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FontInfo.unitsPerEm.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*FontInfo.unitsPerEm.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.ascent.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FontInfo.ascent.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*FontInfo.ascent.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.descent.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FontInfo.descent.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*FontInfo.descent.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.leading.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t FontInfo.leading.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*FontInfo.leading.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.typo.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FontInfo.typo.setter(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v4 + 40) = result;
  *(void *)(v4 + 48) = a2;
  *(void *)(v4 + 56) = a3;
  *(unsigned char *)(v4 + 64) = a4 & 1;
  return result;
}

uint64_t (*FontInfo.typo.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.windows.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t FontInfo.windows.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 72) = result;
  *(void *)(v3 + 80) = a2;
  *(unsigned char *)(v3 + 88) = a3 & 1;
  return result;
}

uint64_t (*FontInfo.windows.modify())()
{
  return nullsub_1;
}

__n128 FontInfo.subscript.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 128);
  __n128 result = *(__n128 *)(v1 + 96);
  long long v4 = *(_OWORD *)(v1 + 112);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t FontInfo.subscript.setter(uint64_t a1)
{
  return sub_1B5272B00(a1, v1 + 96);
}

uint64_t (*FontInfo.subscript.modify())()
{
  return nullsub_1;
}

__n128 FontInfo.superscript.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 168);
  __n128 result = *(__n128 *)(v1 + 136);
  long long v4 = *(_OWORD *)(v1 + 152);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t FontInfo.superscript.setter(uint64_t a1)
{
  return sub_1B5272B00(a1, v1 + 136);
}

uint64_t (*FontInfo.superscript.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.strikeout.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t FontInfo.strikeout.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 176) = result;
  *(void *)(v3 + 184) = a2;
  *(unsigned char *)(v3 + 192) = a3 & 1;
  return result;
}

uint64_t (*FontInfo.strikeout.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.registryOrderingSupplement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5272B68(v1 + 200, a1);
}

uint64_t FontInfo.registryOrderingSupplement.setter(uint64_t a1)
{
  return sub_1B5272BD0(a1, v1 + 200);
}

uint64_t (*FontInfo.registryOrderingSupplement.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.capHeight.getter()
{
  return *(void *)(v0 + 240);
}

uint64_t FontInfo.capHeight.setter(uint64_t result)
{
  *(void *)(v1 + 240) = result;
  return result;
}

uint64_t (*FontInfo.capHeight.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.xHeight.getter()
{
  return *(void *)(v0 + 248);
}

uint64_t FontInfo.xHeight.setter(uint64_t result)
{
  *(void *)(v1 + 248) = result;
  return result;
}

uint64_t (*FontInfo.xHeight.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.maxAdvanceWidth.getter()
{
  return *(void *)(v0 + 256);
}

uint64_t FontInfo.maxAdvanceWidth.setter(uint64_t result)
{
  *(void *)(v1 + 256) = result;
  return result;
}

uint64_t (*FontInfo.maxAdvanceWidth.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.averageWidth.getter()
{
  return *(void *)(v0 + 264);
}

uint64_t FontInfo.averageWidth.setter(uint64_t result)
{
  *(void *)(v1 + 264) = result;
  return result;
}

uint64_t (*FontInfo.averageWidth.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.minLeftSideBearing.getter()
{
  return *(void *)(v0 + 272);
}

uint64_t FontInfo.minLeftSideBearing.setter(uint64_t result)
{
  *(void *)(v1 + 272) = result;
  return result;
}

uint64_t (*FontInfo.minLeftSideBearing.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.minRightSideBearing.getter()
{
  return *(void *)(v0 + 280);
}

uint64_t FontInfo.minRightSideBearing.setter(uint64_t result)
{
  *(void *)(v1 + 280) = result;
  return result;
}

uint64_t (*FontInfo.minRightSideBearing.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.isFixedPitch.getter()
{
  return *(unsigned __int8 *)(v0 + 288);
}

uint64_t FontInfo.isFixedPitch.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 288) = result;
  return result;
}

uint64_t (*FontInfo.isFixedPitch.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.italicAngle.getter()
{
  return *(void *)(v0 + 296);
}

uint64_t FontInfo.italicAngle.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 296) = result;
  *(unsigned char *)(v2 + 304) = a2 & 1;
  return result;
}

uint64_t (*FontInfo.italicAngle.modify())()
{
  return nullsub_1;
}

double FontInfo.underlinePosition.getter()
{
  return *(double *)(v0 + 312);
}

void FontInfo.underlinePosition.setter(double a1)
{
  *(double *)(v1 + 312) = a1;
}

uint64_t (*FontInfo.underlinePosition.modify())()
{
  return nullsub_1;
}

double FontInfo.underlineThickness.getter()
{
  return *(double *)(v0 + 320);
}

void FontInfo.underlineThickness.setter(double a1)
{
  *(double *)(v1 + 320) = a1;
}

uint64_t (*FontInfo.underlineThickness.modify())()
{
  return nullsub_1;
}

double FontInfo.boundingBox.getter()
{
  return *(double *)(v0 + 328);
}

void FontInfo.boundingBox.setter(double a1, double a2, double a3, double a4)
{
  v4[41] = a1;
  v4[42] = a2;
  v4[43] = a3;
  v4[44] = a4;
}

uint64_t (*FontInfo.boundingBox.modify())()
{
  return nullsub_1;
}

double FontInfo.stemH.getter()
{
  return *(double *)(v0 + 360);
}

void FontInfo.stemH.setter(double a1)
{
  *(double *)(v1 + 360) = a1;
}

uint64_t (*FontInfo.stemH.modify())()
{
  return nullsub_1;
}

double FontInfo.stemV.getter()
{
  return *(double *)(v0 + 368);
}

void FontInfo.stemV.setter(double a1)
{
  *(double *)(v1 + 368) = a1;
}

uint64_t (*FontInfo.stemV.modify())()
{
  return nullsub_1;
}

uint64_t FontInfo.isAutohintingUsable.getter()
{
  return *(unsigned __int8 *)(v0 + 376);
}

uint64_t FontInfo.isAutohintingUsable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 376) = result;
  return result;
}

uint64_t (*FontInfo.isAutohintingUsable.modify())()
{
  return nullsub_1;
}

double FontInfo.init()@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = 1;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(unsigned char *)(a1 + 128) = 1;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(unsigned char *)(a1 + 168) = 1;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(unsigned char *)(a1 + 192) = 1;
  *(_OWORD *)(a1 + 200) = 0u;
  uint64_t v2 = a1 + 200;
  *(_OWORD *)(v2 + 73) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 96) = 0;
  *(unsigned char *)(v2 + 104) = 1;
  *(unsigned char *)(v2 + 176) = 0;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  return result;
}

uint64_t FontMetadata.Flags.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FontMetadata.Flags.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t static FontMetadata.Flags.hasBadVmtx.getter()
{
  return 1;
}

uint64_t static FontMetadata.Flags.hasNormalizedGlyphPaths.getter()
{
  return 2;
}

uint64_t static FontMetadata.Flags.useFontHints.getter()
{
  return 4;
}

uint64_t sub_1B5270ADC()
{
  return sub_1B53729F8();
}

uint64_t sub_1B5270B3C()
{
  return sub_1B53729E8();
}

uint64_t FontMetadata.stemH.getter()
{
  return *(void *)v0;
}

uint64_t FontMetadata.stemH.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FontMetadata.stemH.modify())()
{
  return nullsub_1;
}

uint64_t FontMetadata.stemV.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FontMetadata.stemV.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*FontMetadata.stemV.modify())()
{
  return nullsub_1;
}

uint64_t FontMetadata.xGlyph.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FontMetadata.xGlyph.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*FontMetadata.xGlyph.modify())()
{
  return nullsub_1;
}

uint64_t FontMetadata.oGlyph.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FontMetadata.oGlyph.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*FontMetadata.oGlyph.modify())()
{
  return nullsub_1;
}

uint64_t FontMetadata.cjkScript.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t FontMetadata.cjkScript.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*FontMetadata.cjkScript.modify())()
{
  return nullsub_1;
}

uint64_t FontMetadata.flags.getter()
{
  return *(unsigned __int16 *)(v0 + 40);
}

uint64_t FontMetadata.flags.setter(uint64_t result)
{
  *(_WORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*FontMetadata.flags.modify())()
{
  return nullsub_1;
}

uint64_t FontMetadata.designLanguages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FontMetadata.designLanguages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*FontMetadata.designLanguages.modify())()
{
  return nullsub_1;
}

uint64_t FontMetadata.supportedLanguages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FontMetadata.supportedLanguages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FontMetadata.supportedLanguages.modify())()
{
  return nullsub_1;
}

uint64_t FontMetadata.additionalInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FontMetadata.additionalInfo.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*FontMetadata.additionalInfo.modify())()
{
  return nullsub_1;
}

double FontMetadata.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  sub_1B522DD1C(MEMORY[0x1E4FBC860]);
  unint64_t v3 = sub_1B522DD1C(v2);
  swift_bridgeObjectRelease();
  double result = 0.0;
  *(_OWORD *)(a1 + 26) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 48) = v2;
  *(void *)(a1 + 56) = v2;
  *(void *)(a1 + 64) = v3;
  return result;
}

unint64_t sub_1B5270E0C(char a1)
{
  unint64_t result = 0x486D657473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x566D657473;
      break;
    case 2:
      unint64_t result = 0x6870796C4778;
      break;
    case 3:
      unint64_t result = 0x6870796C476FLL;
      break;
    case 4:
      unint64_t result = 0x70697263536B6A63;
      break;
    case 5:
      unint64_t result = 0x7367616C66;
      break;
    case 6:
      unint64_t result = 0x614C6E6769736564;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B5270F0C(char a1)
{
  unint64_t result = 0x486D657473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x566D657473;
      break;
    case 2:
      unint64_t result = 0x6870796C4778;
      break;
    case 3:
      unint64_t result = 0x6870796C476FLL;
      break;
    case 4:
      unint64_t result = 0x70697263536B6A63;
      break;
    case 5:
      unint64_t result = 0x7367616C66;
      break;
    case 6:
      unint64_t result = 0x614C6E6769736564;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B527100C(unsigned __int8 *a1, char *a2)
{
  return sub_1B526EB70(*a1, *a2);
}

uint64_t sub_1B5271018()
{
  return sub_1B526EA2C();
}

uint64_t sub_1B5271024()
{
  return sub_1B526E8F8();
}

uint64_t sub_1B527102C()
{
  return sub_1B526EA2C();
}

uint64_t sub_1B5271034@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5272CE0();
  *a1 = result;
  return result;
}

unint64_t sub_1B5271064@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B5270E0C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B5271090()
{
  return sub_1B5270F0C(*v0);
}

uint64_t sub_1B5271098@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5272CE0();
  *a1 = result;
  return result;
}

void sub_1B52710C0(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1B52710CC(uint64_t a1)
{
  unint64_t v2 = sub_1B5272C38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B5271108(uint64_t a1)
{
  unint64_t v2 = sub_1B5272C38();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B5271148(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = a1 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(63 - v6) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    int64_t v17 = v10;
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_27;
      }
      goto LABEL_7;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v18 >= v8) {
      goto LABEL_30;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v17 + 2;
      if (v17 + 2 >= v8) {
        goto LABEL_30;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v17 + 3;
        if (v17 + 3 >= v8) {
          goto LABEL_30;
        }
        unint64_t v19 = *(void *)(v4 + 8 * v10);
        if (!v19)
        {
          int64_t v10 = v17 + 4;
          if (v17 + 4 >= v8) {
            goto LABEL_30;
          }
          unint64_t v19 = *(void *)(v4 + 8 * v10);
          if (!v19)
          {
            int64_t v10 = v17 + 5;
            if (v17 + 5 >= v8) {
              goto LABEL_30;
            }
            unint64_t v19 = *(void *)(v4 + 8 * v10);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v12 = __clz(__rbit64(v19)) + (v10 << 6);
    if (!*(void *)(a2 + 16))
    {
LABEL_27:
      uint64_t v21 = 0;
LABEL_31:
      sub_1B51E00C0();
      return v21;
    }
LABEL_7:
    char v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain();
    sub_1B52305F4(v15, v14);
    LOBYTE(v15) = v16;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_27;
    }
  }
  int64_t v20 = v17 + 6;
  if (v17 + 6 >= v8)
  {
LABEL_30:
    uint64_t v21 = 1;
    goto LABEL_31;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v17 + 6;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_30;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_26;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t FontMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D487A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5272C38();
  sub_1B5373378();
  LOBYTE(v10) = 0;
  sub_1B53731A8();
  if (!v2)
  {
    LOBYTE(v10) = 1;
    sub_1B53731A8();
    LOBYTE(v10) = 2;
    sub_1B53731A8();
    LOBYTE(v10) = 3;
    sub_1B53731A8();
    LOBYTE(v10) = 4;
    sub_1B53731A8();
    LOWORD(v10) = *(_WORD *)(v3 + 40);
    char v11 = 5;
    sub_1B5272C8C();
    sub_1B53731B8();
    uint64_t v10 = *(void *)(v3 + 48);
    char v11 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47908);
    sub_1B52749C8(&qword_1E9D487C0);
    sub_1B53731B8();
    uint64_t v10 = *(void *)(v3 + 56);
    char v11 = 7;
    sub_1B53731B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 FontMetadata.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B5272D2C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

__n128 sub_1B5271670@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B5272D2C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1B52716C4(void *a1)
{
  return FontMetadata.encode(to:)(a1);
}

uint64_t sub_1B52716DC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  void v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  _OWORD v9[2] = *(_OWORD *)(a2 + 32);
  void v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s10FontParser0A8MetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1B5271738(char a1)
{
  if (a1) {
    return 1986553185;
  }
  else {
    return 1751672161;
  }
}

BOOL static GlyphMetrics.Direction.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t GlyphMetrics.Direction.hash(into:)()
{
  return sub_1B5373308();
}

uint64_t GlyphMetrics.Direction.hashValue.getter()
{
  return sub_1B5373358();
}

uint64_t GlyphMetrics.glyphID.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*GlyphMetrics.glyphID.modify())()
{
  return nullsub_1;
}

uint64_t GlyphMetrics.direction.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t GlyphMetrics.direction.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result & 1;
  return result;
}

uint64_t (*GlyphMetrics.direction.modify())()
{
  return nullsub_1;
}

void GlyphMetrics.advance.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*GlyphMetrics.advance.modify())()
{
  return nullsub_1;
}

double GlyphMetrics.sideBearing.getter(double a1, double a2)
{
  return a2;
}

void GlyphMetrics.sideBearing.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*GlyphMetrics.sideBearing.modify())()
{
  return nullsub_1;
}

uint64_t GlyphMetrics.hash(into:)()
{
  return sub_1B5373348();
}

uint64_t static GlyphMetrics.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, int a4, double a5, double a6, double a7, double a8)
{
  unsigned int v8 = (a1 == a3) & (((a2 & 1) == 0) ^ a4);
  if (a5 != a7) {
    unsigned int v8 = 0;
  }
  if (a6 == a8) {
    return v8;
  }
  else {
    return 0;
  }
}

uint64_t GlyphMetrics.hashValue.getter()
{
  return sub_1B5373358();
}

uint64_t sub_1B5271990()
{
  return sub_1B5373358();
}

uint64_t sub_1B52719FC()
{
  return GlyphMetrics.hash(into:)();
}

uint64_t sub_1B5271A0C()
{
  return sub_1B5373358();
}

BOOL sub_1B5271A74(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(void *)a1 == *(void *)a2
    && ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0
    && *(double *)(a1 + 16) == *(double *)(a2 + 16))
  {
    return *(double *)(a1 + 24) == *(double *)(a2 + 24);
  }
  return result;
}

uint64_t static FontError.__derived_enum_equals(_:_:)()
{
  return 1;
}

uint64_t FontError.hash(into:)()
{
  return sub_1B5373308();
}

uint64_t FontError.hashValue.getter()
{
  return sub_1B5373358();
}

uint64_t sub_1B5271B34()
{
  return sub_1B5373358();
}

uint64_t sub_1B5271B78()
{
  return sub_1B5373308();
}

uint64_t sub_1B5271BA0()
{
  return sub_1B5373358();
}

BOOL _s10FontParser0A4InfoV26RegistryOrderingSupplementV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1B5373228(), BOOL result = 0, (v5 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3]) {
      return a1[4] == a2[4];
    }
    char v8 = sub_1B5373228();
    BOOL result = 0;
    if (v8) {
      return a1[4] == a2[4];
    }
  }
  return result;
}

uint64_t _s10FontParser0A8MetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2
    && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    && *(void *)(a1 + 16) == *(void *)(a2 + 16)
    && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    && *(void *)(a1 + 32) == *(void *)(a2 + 32)
    && *(unsigned __int16 *)(a1 + 40) == *(unsigned __int16 *)(a2 + 40)
    && (sub_1B526F4D4(*(void **)(a1 + 48), *(void **)(a2 + 48)) & 1) != 0
    && (sub_1B526F4D4(*(void **)(a1 + 56), *(void **)(a2 + 56)) & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 64);
    uint64_t v5 = *(void *)(a2 + 64);
    uint64_t v8 = v5;
    uint64_t v9 = v4;
    sub_1B51DFE7C((uint64_t)&v9);
    sub_1B51DFE7C((uint64_t)&v8);
    char v6 = sub_1B5271148(v4, v5);
    sub_1B51DFEA8((uint64_t)&v8);
    sub_1B51DFEA8((uint64_t)&v9);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1B5271D5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65637361 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E6563736564 && a2 == 0xE700000000000000 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696461656CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B5373228();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B5271EAC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D488C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B526F92C();
  sub_1B5373368();
  v8[15] = 0;
  uint64_t v6 = sub_1B5373168();
  v8[14] = 1;
  sub_1B5373168();
  v8[13] = 2;
  sub_1B5373168();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

unint64_t sub_1B5272078()
{
  unint64_t result = qword_1E9D48778;
  if (!qword_1E9D48778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48778);
  }
  return result;
}

uint64_t sub_1B52720CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65637361 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E6563736564 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B5373228();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B52721B8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D488B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1B5272078();
  sub_1B5373368();
  if (!v1)
  {
    v9[15] = 0;
    uint64_t v7 = sub_1B5373168();
    v9[14] = 1;
    sub_1B5373168();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_1B527235C()
{
  unint64_t result = qword_1E9D48788;
  if (!qword_1E9D48788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48788);
  }
  return result;
}

unint64_t sub_1B52723B0()
{
  unint64_t result = qword_1E9D48790;
  if (!qword_1E9D48790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48790);
  }
  return result;
}

uint64_t sub_1B5272404(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B5373228();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_1B52724E8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D488A8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B527235C();
  sub_1B5373368();
  HIBYTE(v8) = 0;
  sub_1B5274A2C();
  sub_1B5373178();
  double v6 = v9;
  HIBYTE(v8) = 1;
  sub_1B5373178();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

unint64_t sub_1B52726C4()
{
  unint64_t result = qword_1E9D487A0;
  if (!qword_1E9D487A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487A0);
  }
  return result;
}

uint64_t sub_1B5272718(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972747369676572 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69726564726FLL && a2 == 0xE800000000000000 || (sub_1B5373228() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D656C70707573 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B5373228();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B527287C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D488A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B52726C4();
  sub_1B5373368();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_1B5373158();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1B5373158();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  char v22 = 2;
  swift_bridgeObjectRetain();
  uint64_t v20 = v14;
  uint64_t v15 = sub_1B5373168();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v16 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v21;
  a2[1] = v11;
  a2[2] = v19;
  a2[3] = v16;
  a2[4] = v15;
  return result;
}

uint64_t sub_1B5272B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5272B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5272BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B5272C38()
{
  unint64_t result = qword_1E9D487B0;
  if (!qword_1E9D487B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487B0);
  }
  return result;
}

unint64_t sub_1B5272C8C()
{
  unint64_t result = qword_1E9D487B8;
  if (!qword_1E9D487B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487B8);
  }
  return result;
}

uint64_t sub_1B5272CE0()
{
  unint64_t v0 = sub_1B5373148();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B5272D2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48888);
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = sub_1B522DD1C(MEMORY[0x1E4FBC860]);
  uint64_t v8 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5272C38();
  swift_bridgeObjectRetain();
  uint64_t v9 = v6;
  sub_1B5373368();
  if (v2)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v4;
    uint64_t v11 = v27;
    uint64_t v12 = v28;
    LOBYTE(v29) = 0;
    uint64_t v13 = v9;
    uint64_t v14 = sub_1B5373168();
    LOBYTE(v29) = 1;
    uint64_t v15 = sub_1B5373168();
    LOBYTE(v29) = 2;
    uint64_t v26 = sub_1B5373168();
    LOBYTE(v29) = 3;
    uint64_t v25 = sub_1B5373168();
    LOBYTE(v29) = 4;
    uint64_t v24 = sub_1B5373168();
    char v31 = 5;
    sub_1B5274974();
    sub_1B5373178();
    int v30 = (unsigned __int16)v29;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47908);
    char v31 = 6;
    uint64_t v22 = sub_1B52749C8(&qword_1E9D48898);
    sub_1B5373178();
    char v31 = 7;
    uint64_t v21 = v29;
    swift_bridgeObjectRetain();
    sub_1B5373178();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v12);
    uint64_t v16 = v29;
    uint64_t v17 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v11 = v14;
    *(void *)(v11 + 8) = v15;
    uint64_t v19 = v25;
    *(void *)(v11 + 16) = v26;
    *(void *)(v11 + 24) = v19;
    *(void *)(v11 + 32) = v24;
    *(_WORD *)(v11 + 40) = v30;
    *(void *)(v11 + 48) = v17;
    *(void *)(v11 + 56) = v16;
    *(void *)(v11 + 64) = v7;
  }
  return result;
}

unint64_t sub_1B52730E4()
{
  unint64_t result = qword_1E9D487C8;
  if (!qword_1E9D487C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487C8);
  }
  return result;
}

unint64_t sub_1B527313C()
{
  unint64_t result = qword_1E9D487D0;
  if (!qword_1E9D487D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487D0);
  }
  return result;
}

unint64_t sub_1B5273194()
{
  unint64_t result = qword_1E9D487D8;
  if (!qword_1E9D487D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487D8);
  }
  return result;
}

unint64_t sub_1B52731EC()
{
  unint64_t result = qword_1E9D487E0;
  if (!qword_1E9D487E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487E0);
  }
  return result;
}

unint64_t sub_1B5273244()
{
  unint64_t result = qword_1E9D487E8;
  if (!qword_1E9D487E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487E8);
  }
  return result;
}

unint64_t sub_1B527329C()
{
  unint64_t result = qword_1E9D487F0;
  if (!qword_1E9D487F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487F0);
  }
  return result;
}

unint64_t sub_1B52732F4()
{
  unint64_t result = qword_1E9D487F8;
  if (!qword_1E9D487F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D487F8);
  }
  return result;
}

unint64_t sub_1B527334C()
{
  unint64_t result = qword_1E9D48800;
  if (!qword_1E9D48800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48800);
  }
  return result;
}

unint64_t sub_1B52733A4()
{
  unint64_t result = qword_1E9D48808;
  if (!qword_1E9D48808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48808);
  }
  return result;
}

ValueMetadata *type metadata accessor for FontDataResidence()
{
  return &type metadata for FontDataResidence;
}

ValueMetadata *type metadata accessor for FontEncodingType()
{
  return &type metadata for FontEncodingType;
}

uint64_t destroy for FontInfo(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 208);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FontInfo(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  uint64_t v6 = *(void *)(a2 + 208);
  if (v6)
  {
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v6;
    uint64_t v7 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v7;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v8;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
  }
  long long v9 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v9;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  uint64_t v10 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = v10;
  long long v11 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v11;
  uint64_t v12 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v12;
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  return a1;
}

uint64_t assignWithCopy for FontInfo(uint64_t a1, uint64_t a2)
{
  long long v4 = (unsigned char *)(a2 + 288);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  *(_OWORD *)(a1 + 40) = v5;
  long long v6 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v6;
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 136);
  long long v10 = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v10;
  *(_OWORD *)(a1 + 136) = v9;
  long long v11 = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = v11;
  uint64_t v12 = a1 + 200;
  uint64_t v13 = (long long *)(a2 + 200);
  uint64_t v14 = *(void *)(a2 + 208);
  if (*(void *)(a1 + 208))
  {
    if (v14)
    {
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
    }
    else
    {
      sub_1B51FFB2C(a1 + 200);
      uint64_t v15 = *((void *)v13 + 4);
      long long v16 = v13[1];
      *(_OWORD *)uint64_t v12 = *v13;
      *(_OWORD *)(v12 + 16) = v16;
      *(void *)(v12 + 32) = v15;
    }
  }
  else if (v14)
  {
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *v13;
    long long v18 = *(_OWORD *)(a2 + 216);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(_OWORD *)uint64_t v12 = v17;
    *(_OWORD *)(a1 + 216) = v18;
  }
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(unsigned char *)(a1 + 288) = *v4;
  uint64_t v19 = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(void *)(a1 + 296) = v19;
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = v4[88];
  return a1;
}

void *__swift_memcpy377_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x179uLL);
}

uint64_t assignWithTake for FontInfo(uint64_t a1, uint64_t a2)
{
  long long v4 = (unsigned char *)(a2 + 288);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  uint64_t v7 = a1 + 200;
  uint64_t v8 = a2 + 200;
  if (!*(void *)(a1 + 208)) {
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(a2 + 208);
  if (!v9)
  {
    sub_1B51FFB2C(v7);
LABEL_5:
    long long v11 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + 16) = v11;
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    goto LABEL_6;
  }
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
LABEL_6:
  long long v12 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v12;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 288) = *v4;
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  long long v13 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v13;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = v4[88];
  return a1;
}

uint64_t getEnumTagSinglePayload for FontInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 377)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 208);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FontInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 376) = 0;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 377) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 377) = 0;
    }
    if (a2) {
      *(void *)(result + 208) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontInfo()
{
  return &type metadata for FontInfo;
}

ValueMetadata *type metadata accessor for FontInfo.Typo()
{
  return &type metadata for FontInfo.Typo;
}

ValueMetadata *type metadata accessor for FontInfo.Windows()
{
  return &type metadata for FontInfo.Windows;
}

ValueMetadata *type metadata accessor for FontInfo.Strikeout()
{
  return &type metadata for FontInfo.Strikeout;
}

uint64_t destroy for FontInfo.RegistryOrderingSupplement()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FontInfo.RegistryOrderingSupplement(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FontInfo.RegistryOrderingSupplement(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for FontInfo.RegistryOrderingSupplement(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for FontInfo.RegistryOrderingSupplement(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FontInfo.RegistryOrderingSupplement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontInfo.RegistryOrderingSupplement()
{
  return &type metadata for FontInfo.RegistryOrderingSupplement;
}

uint64_t destroy for FontMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FontMetadata(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FontMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FontMetadata(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FontMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FontMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontMetadata()
{
  return &type metadata for FontMetadata;
}

ValueMetadata *type metadata accessor for FontMetadata.Flags()
{
  return &type metadata for FontMetadata.Flags;
}

uint64_t getEnumTagSinglePayload for GlyphMetrics(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GlyphMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GlyphMetrics()
{
  return &type metadata for GlyphMetrics;
}

ValueMetadata *type metadata accessor for GlyphMetrics.Direction()
{
  return &type metadata for GlyphMetrics.Direction;
}

uint64_t getEnumTagSinglePayload for FontError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for FontError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5274058);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FontError()
{
  return &type metadata for FontError;
}

uint64_t getEnumTagSinglePayload for FontMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FontMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B52741ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontMetadata.CodingKeys()
{
  return &type metadata for FontMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for FontInfo.RegistryOrderingSupplement.CodingKeys()
{
  return &type metadata for FontInfo.RegistryOrderingSupplement.CodingKeys;
}

ValueMetadata *type metadata accessor for FontInfo.Strikeout.CodingKeys()
{
  return &type metadata for FontInfo.Strikeout.CodingKeys;
}

unsigned char *_s10FontParser16FontEncodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5274310);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontInfo.Windows.CodingKeys()
{
  return &type metadata for FontInfo.Windows.CodingKeys;
}

unsigned char *_s10FontParser17FontDataResidenceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5274414);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontInfo.Typo.CodingKeys()
{
  return &type metadata for FontInfo.Typo.CodingKeys;
}

unint64_t sub_1B5274450()
{
  unint64_t result = qword_1E9D48810;
  if (!qword_1E9D48810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48810);
  }
  return result;
}

unint64_t sub_1B52744A8()
{
  unint64_t result = qword_1E9D48818;
  if (!qword_1E9D48818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48818);
  }
  return result;
}

unint64_t sub_1B5274500()
{
  unint64_t result = qword_1E9D48820;
  if (!qword_1E9D48820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48820);
  }
  return result;
}

unint64_t sub_1B5274558()
{
  unint64_t result = qword_1E9D48828;
  if (!qword_1E9D48828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48828);
  }
  return result;
}

unint64_t sub_1B52745B0()
{
  unint64_t result = qword_1E9D48830;
  if (!qword_1E9D48830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48830);
  }
  return result;
}

unint64_t sub_1B5274608()
{
  unint64_t result = qword_1E9D48838;
  if (!qword_1E9D48838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48838);
  }
  return result;
}

unint64_t sub_1B5274660()
{
  unint64_t result = qword_1E9D48840;
  if (!qword_1E9D48840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48840);
  }
  return result;
}

unint64_t sub_1B52746B8()
{
  unint64_t result = qword_1E9D48848;
  if (!qword_1E9D48848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48848);
  }
  return result;
}

unint64_t sub_1B5274710()
{
  unint64_t result = qword_1E9D48850;
  if (!qword_1E9D48850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48850);
  }
  return result;
}

unint64_t sub_1B5274768()
{
  unint64_t result = qword_1E9D48858;
  if (!qword_1E9D48858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48858);
  }
  return result;
}

unint64_t sub_1B52747C0()
{
  unint64_t result = qword_1E9D48860;
  if (!qword_1E9D48860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48860);
  }
  return result;
}

unint64_t sub_1B5274818()
{
  unint64_t result = qword_1E9D48868;
  if (!qword_1E9D48868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48868);
  }
  return result;
}

unint64_t sub_1B5274870()
{
  unint64_t result = qword_1E9D48870;
  if (!qword_1E9D48870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48870);
  }
  return result;
}

unint64_t sub_1B52748C8()
{
  unint64_t result = qword_1E9D48878;
  if (!qword_1E9D48878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48878);
  }
  return result;
}

unint64_t sub_1B5274920()
{
  unint64_t result = qword_1E9D48880;
  if (!qword_1E9D48880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48880);
  }
  return result;
}

unint64_t sub_1B5274974()
{
  unint64_t result = qword_1E9D48890;
  if (!qword_1E9D48890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48890);
  }
  return result;
}

uint64_t sub_1B52749C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D47908);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B5274A2C()
{
  unint64_t result = qword_1E9D488B0;
  if (!qword_1E9D488B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D488B0);
  }
  return result;
}

uint64_t initializeWithCopy for UTF16Iterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

void *assignWithCopy for UTF16Iterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for UTF16Iterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for UTF16Iterator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UTF16Iterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTF16Iterator()
{
  return &type metadata for UTF16Iterator;
}

ValueMetadata *type metadata accessor for UTF16Sequence()
{
  return &type metadata for UTF16Sequence;
}

unint64_t sub_1B5274C3C()
{
  unint64_t result = qword_1E9D488C8;
  if (!qword_1E9D488C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D488C8);
  }
  return result;
}

uint64_t sub_1B5274C90()
{
  uint64_t v1 = sub_1B527500C(*v0, v0[1], v0[2], v0[3]);
  swift_release();
  return v1;
}

void *sub_1B5274CCC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B527647C(a1, a2, a3, *v3, v3[1], v3[2], v3[3]);
}

void sub_1B5274CD8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v2 + v1;
  if (__OFADD__(v2, v1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v3 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = v0[4];
  if (v4 >= v2 && v4 < v3)
  {
    if (!__OFSUB__(v4, v2))
    {
      uint64_t v6 = v0[1];
      __int16 v7 = *(_WORD *)(v6 + 2 * (v4 - v2));
      uint64_t v8 = v4 + 1;
      uint64_t v10 = v4 + 1;
      if ((v7 & 0xFC00) == 0xDC00) {
        return;
      }
      if ((v7 & 0xFC00) != 0xD800)
      {
LABEL_14:
        v0[4] = v8;
        return;
      }
      uint64_t v9 = sub_1B5276868((uint64_t)&v10, v6, v1, v2);
      if ((v9 & 0xFF00000000) != 0x100000000) {
        return;
      }
      if ((v9 | ((v7 & 0x3FF) << 10)) < 0xFFFF0000)
      {
        uint64_t v8 = v10;
        goto LABEL_14;
      }
LABEL_19:
      __break(1u);
      return;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
}

void sub_1B5274DB4(uint64_t a1@<X8>)
{
  sub_1B5274CD8();
  *(_DWORD *)a1 = v2;
  *(unsigned char *)(a1 + 4) = v3 & 1;
}

uint64_t sub_1B5274DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + a3;
  if (__OFADD__(a4, a3))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (v4 < a4) {
    goto LABEL_35;
  }
  uint64_t result = swift_retain();
  uint64_t v8 = 0;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860] + 32;
  uint64_t v28 = v4;
  uint64_t v11 = a4;
  uint64_t v29 = a2;
  while (v11 < v4)
  {
    if (__OFSUB__(v11, a4))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    int v12 = *(unsigned __int16 *)(a2 + 2 * (v11 - a4));
    uint64_t v13 = v11 + 1;
    if ((v12 & 0xFC00) == 0xD800)
    {
      if (v13 >= v4) {
        break;
      }
      if (__OFSUB__(v13, a4)) {
        goto LABEL_32;
      }
      __int16 v14 = *(_WORD *)(a2 + 2 * (v13 - a4));
      if ((v14 & 0xFC00) != 0xDC00) {
        break;
      }
      uint64_t v13 = v11 + 2;
      int v12 = (v14 & 0x3FF | ((v12 & 0x3FF) << 10)) + 0x10000;
      if (v8) {
        goto LABEL_24;
      }
LABEL_14:
      unint64_t v15 = *((void *)v9 + 3);
      if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_33;
      }
      int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
      if (v16 <= 1) {
        uint64_t v17 = 1;
      }
      else {
        uint64_t v17 = v16;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D488D0);
      long long v18 = (char *)swift_allocObject();
      uint64_t v19 = (uint64_t)(_swift_stdlib_malloc_size(v18) - 32) / 24;
      *((void *)v18 + 2) = v17;
      *((void *)v18 + 3) = 2 * v19;
      uint64_t v20 = v18 + 32;
      uint64_t v21 = *((void *)v9 + 3) >> 1;
      uint64_t v22 = 24 * v21;
      if (*((void *)v9 + 2))
      {
        uint64_t v23 = v9 + 32;
        if (v18 != v9 || v20 >= &v23[v22]) {
          memmove(v18 + 32, v23, 24 * v21);
        }
        *((void *)v9 + 2) = 0;
      }
      uint64_t v10 = (uint64_t)&v20[v22];
      uint64_t v8 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - v21;
      uint64_t result = swift_release();
      uint64_t v9 = v18;
      uint64_t v4 = v28;
      a2 = v29;
      goto LABEL_24;
    }
    if ((v12 & 0xFC00) == 0xDC00) {
      break;
    }
    if (!v8) {
      goto LABEL_14;
    }
LABEL_24:
    BOOL v24 = __OFSUB__(v8--, 1);
    if (v24) {
      goto LABEL_31;
    }
    *(void *)uint64_t v10 = v11;
    *(void *)(v10 + 8) = v13;
    *(_DWORD *)(v10 + 16) = v12;
    v10 += 24;
    uint64_t v11 = v13;
    if (v13 < a4) {
      break;
    }
  }
  uint64_t result = swift_release();
  unint64_t v25 = *((void *)v9 + 3);
  if (v25 >= 2)
  {
    unint64_t v26 = v25 >> 1;
    BOOL v24 = __OFSUB__(v26, v8);
    uint64_t v27 = v26 - v8;
    if (v24) {
      goto LABEL_36;
    }
    *((void *)v9 + 2) = v27;
  }
  return (uint64_t)v9;
}

uint64_t sub_1B527500C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + a3;
  if (__OFADD__(a4, a3)) {
    goto LABEL_41;
  }
  if (v4 < a4)
  {
LABEL_42:
    __break(1u);
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    if (v4 > a4)
    {
      uint64_t result = swift_retain();
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = (int *)(v6 + 4);
      uint64_t v11 = a4;
      uint64_t v30 = a2;
      while (1)
      {
        int v12 = *(unsigned __int16 *)(a2 + 2 * v8);
        uint64_t v13 = v11 + 1;
        if ((v12 & 0xFC00) != 0xD800) {
          break;
        }
        if (v13 < a4 || v13 >= v4) {
          goto LABEL_33;
        }
        BOOL v14 = __OFSUB__(v13, a4);
        uint64_t v15 = v13 - a4;
        if (v14) {
          goto LABEL_39;
        }
        __int16 v16 = *(_WORD *)(a2 + 2 * v15);
        if ((v16 & 0xFC00) != 0xDC00)
        {
LABEL_33:
          uint64_t result = swift_release();
          goto LABEL_34;
        }
        v11 += 2;
        int v12 = (v16 & 0x3FF | ((v12 & 0x3FF) << 10)) + 0x10000;
        if (!v9) {
          goto LABEL_14;
        }
LABEL_26:
        BOOL v14 = __OFSUB__(v9--, 1);
        if (v14)
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        *uint64_t v10 = v12;
        if (v11 < a4 || v11 >= v4) {
          goto LABEL_33;
        }
        ++v10;
        uint64_t v8 = v11 - a4;
        if (__OFSUB__(v11, a4))
        {
          __break(1u);
          goto LABEL_32;
        }
      }
      if ((v12 & 0xFC00) == 0xDC00) {
        goto LABEL_33;
      }
      ++v11;
      if (v9) {
        goto LABEL_26;
      }
LABEL_14:
      unint64_t v17 = v6[3];
      if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_40;
      }
      int64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
      if (v18 <= 1) {
        uint64_t v19 = 1;
      }
      else {
        uint64_t v19 = v18;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47988);
      uint64_t v20 = (void *)swift_allocObject();
      int64_t v21 = _swift_stdlib_malloc_size(v20);
      uint64_t v22 = v21 - 32;
      if (v21 < 32) {
        uint64_t v22 = v21 - 29;
      }
      uint64_t v23 = v22 >> 2;
      void v20[2] = v19;
      v20[3] = 2 * (v22 >> 2);
      unint64_t v24 = (unint64_t)(v20 + 4);
      uint64_t v25 = v6[3] >> 1;
      if (v6[2])
      {
        unint64_t v26 = v6 + 4;
        if (v20 != v6 || v24 >= (unint64_t)v26 + 4 * v25) {
          memmove(v20 + 4, v26, 4 * v25);
        }
        _OWORD v6[2] = 0;
      }
      uint64_t v10 = (int *)(v24 + 4 * v25);
      uint64_t v9 = (v23 & 0x7FFFFFFFFFFFFFFFLL) - v25;
      uint64_t result = swift_release();
      uint64_t v6 = v20;
      a2 = v30;
      goto LABEL_26;
    }
LABEL_32:
    uint64_t v9 = 0;
LABEL_34:
    unint64_t v27 = v6[3];
    if (v27 < 2) {
      return (uint64_t)v6;
    }
    unint64_t v28 = v27 >> 1;
    BOOL v14 = __OFSUB__(v28, v9);
    uint64_t v29 = v28 - v9;
    if (!v14)
    {
      _OWORD v6[2] = v29;
      return (uint64_t)v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B527522C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = v3[5];
  v43[4] = v3[4];
  void v43[5] = v4;
  long long v5 = v3[7];
  v43[6] = v3[6];
  v43[7] = v5;
  long long v6 = v3[1];
  v43[0] = *v3;
  v43[1] = v6;
  long long v7 = v3[3];
  v43[2] = v3[2];
  v43[3] = v7;
  if (!a2)
  {
    uint64_t v8 = 0;
LABEL_25:
    long long v32 = v3[5];
    *(_OWORD *)(a1 + 64) = v3[4];
    *(_OWORD *)(a1 + 80) = v32;
    long long v33 = v3[7];
    *(_OWORD *)(a1 + 96) = v3[6];
    *(_OWORD *)(a1 + 112) = v33;
    long long v34 = v3[1];
    *(_OWORD *)a1 = *v3;
    *(_OWORD *)(a1 + 16) = v34;
    long long v35 = v3[3];
    *(_OWORD *)(a1 + 32) = v3[2];
    *(_OWORD *)(a1 + 48) = v35;
    *(void *)(a1 + 128) = v8;
    return v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    char v3 = v43;
    goto LABEL_25;
  }
  uint64_t v9 = *((void *)v3 + 1);
  uint64_t v39 = *((void *)v3 + 2);
  uint64_t v10 = v39 - v9;
  BOOL v11 = __OFSUB__(v39, v9);
  if (v10 >= 0) {
    uint64_t v12 = v39 - v9;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else if (!v11)
  {
    if ((unint64_t)(v10 + 1) >= 3)
    {
      uint64_t v13 = a2;
      uint64_t v14 = 0;
      uint64_t v37 = a1;
      uint64_t v38 = v12 >> 1;
      uint64_t v15 = 1;
      while (1)
      {
        uint64_t v40 = sub_1B53724C8();
        uint64_t v41 = v16;
        uint64_t v42 = v17;
        swift_bridgeObjectRetain();
        signed __int16 v19 = (unsigned __int16)sub_1B51F3E0C(&v40, v18, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v40 = sub_1B53724C8();
        uint64_t v41 = v20;
        uint64_t v42 = v21;
        swift_bridgeObjectRetain();
        unsigned __int16 v23 = (unsigned __int16)sub_1B51F3E0C(&v40, v22, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v40 = sub_1B53724C8();
        uint64_t v41 = v24;
        uint64_t v42 = v25;
        swift_bridgeObjectRetain();
        LOWORD(v27) = (unsigned __int16)sub_1B51F3E0C(&v40, v26, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((unsigned __int16)v27 <= v23) {
          int v27 = v23;
        }
        else {
          int v27 = (unsigned __int16)v27;
        }
        uint64_t v40 = sub_1B53724C8();
        uint64_t v41 = v28;
        uint64_t v42 = v29;
        swift_bridgeObjectRetain();
        unsigned __int16 v31 = (unsigned __int16)sub_1B51F3E0C(&v40, v30, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v13 = v14;
        *(_DWORD *)(v13 + 8) = v23;
        *(_DWORD *)(v13 + 12) = v27;
        *(_DWORD *)(v13 + 16) = v19;
        *(void *)(v13 + 24) = v31;
        if (v15 == v8) {
          goto LABEL_23;
        }
        if (++v14 == v38) {
          break;
        }
        ++v15;
        v13 += 32;
        if (v14 == 0x4000000000000000)
        {
          __break(1u);
LABEL_23:
          char v3 = v43;
          a1 = v37;
          goto LABEL_25;
        }
      }
      char v3 = v43;
      a1 = v37;
      uint64_t v8 = v38;
    }
    else
    {
      uint64_t v8 = 0;
      char v3 = v43;
    }
    goto LABEL_25;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unexpectedError();
  __break(1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B5275584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *((void *)v3 + 2);
  long long v20 = *(long long *)((char *)v3 + 24);
  long long v21 = *v3;
  if (!a2)
  {
LABEL_11:
    uint64_t v5 = 0;
    goto LABEL_15;
  }
  uint64_t v5 = a3;
  if (!a3)
  {
LABEL_15:
    *(_OWORD *)a1 = v21;
    *(void *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 24) = v20;
    *(void *)(a1 + 40) = v5;
    return v5;
  }
  long long v24 = *(long long *)((char *)v3 + 8);
  if ((a3 & 0x8000000000000000) == 0)
  {
    if ((void)v21)
    {
      uint64_t v6 = a2;
      uint64_t v18 = v4;
      uint64_t v19 = a1;
      uint64_t v7 = 0;
      uint64_t v8 = 1;
      while (1)
      {
        long long v22 = v24;
        sub_1B5221844((uint64_t)&v24);
        sub_1B51D4C10();
        uint64_t v9 = sub_1B53724D8();
        if (__OFADD__((void)v20, v7)) {
          break;
        }
        swift_bridgeObjectRetain();
        *(void *)&long long v22 = sub_1B53724B8();
        *((void *)&v22 + 1) = v10;
        uint64_t v23 = v11;
        swift_bridgeObjectRetain_n();
        unsigned int v13 = sub_1B51F9F5C((uint64_t *)&v22, v12, 3, 1);
        unsigned __int16 v15 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v22, v14, 1);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        a1 = swift_bridgeObjectRelease();
        *(_DWORD *)uint64_t v6 = v13;
        *(_WORD *)(v6 + 4) = v15;
        if (v5 == v8) {
          goto LABEL_14;
        }
        if ((void)v21 == v8)
        {
          uint64_t v5 = v21;
LABEL_14:
          uint64_t v4 = v18;
          a1 = v19;
          goto LABEL_15;
        }
        uint64_t v7 = 5 * v8;
        v6 += 8;
        ++v8;
        uint64_t v4 = 0x199999999999999BLL;
        if (v8 == 0x199999999999999BLL)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      sub_1B51D4D34();
      swift_allocError();
      *uint64_t v17 = 2;
      v17[1] = v9;
      void v17[2] = 0xD00000000000001DLL;
      v17[3] = 0x80000001B537BD80;
      v17[4] = 0;
      swift_willThrow();
      goto LABEL_18;
    }
    uint64_t v5 = 0;
    goto LABEL_15;
  }
  __break(1u);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B5275824(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)v3 + 2);
  long long v24 = *(long long *)((char *)v3 + 24);
  long long v25 = *v3;
  if (!a2)
  {
LABEL_12:
    a3 = 0;
    goto LABEL_16;
  }
  if (!a3)
  {
LABEL_16:
    *(_OWORD *)a1 = v25;
    *(void *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 24) = v24;
    *(void *)(a1 + 40) = a3;
    return a3;
  }
  long long v30 = *(long long *)((char *)v3 + 8);
  if ((a3 & 0x8000000000000000) == 0)
  {
    if ((void)v25)
    {
      uint64_t v6 = a2;
      uint64_t v22 = v5;
      uint64_t v23 = a1;
      uint64_t v7 = 0;
      uint64_t v21 = a3;
      uint64_t v8 = a3 - 1;
      uint64_t v9 = 1;
      while (1)
      {
        long long v28 = v30;
        sub_1B5221844((uint64_t)&v30);
        sub_1B51D4C10();
        uint64_t v4 = sub_1B53724D8();
        if (__OFADD__((void)v24, v7)) {
          goto LABEL_18;
        }
        swift_bridgeObjectRetain_n();
        *(void *)&long long v28 = sub_1B53724B8();
        *((void *)&v28 + 1) = v10;
        uint64_t v29 = v11;
        swift_bridgeObjectRetain();
        unsigned int v13 = sub_1B51F9F5C((uint64_t *)&v28, v12, 3, 1);
        long long v26 = v28;
        uint64_t v27 = v29;
        swift_bridgeObjectRetain();
        unsigned __int8 v15 = sub_1B51FC9AC((unint64_t *)&v26, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (__CFADD__(v13, v15))
        {
          sub_1B51D4F28();
          uint64_t v18 = (void *)swift_allocError();
          swift_willThrow();
          sub_1B51D4D34();
          swift_allocError();
          *uint64_t v19 = v18;
          v19[1] = v4;
          long long v19[2] = 0x7272652072657355;
          void v19[3] = 0xEA0000000000726FLL;
          v19[4] = v18;
          id v20 = v18;
          swift_willThrow();
          swift_bridgeObjectRelease_n();
          goto LABEL_20;
        }
        a1 = swift_bridgeObjectRelease_n();
        *uint64_t v6 = v13;
        v6[1] = v13 + v15;
        if (!v8)
        {
          uint64_t v5 = v22;
          a1 = v23;
          a3 = v21;
          goto LABEL_16;
        }
        if ((void)v25 == v9)
        {
          a3 = v25;
          uint64_t v5 = v22;
          a1 = v23;
          goto LABEL_16;
        }
        ++v9;
        --v8;
        v7 += 4;
        v6 += 2;
        if (v7 == 0x8000000000000000)
        {
          __break(1u);
          goto LABEL_12;
        }
      }
    }
    a3 = 0;
    goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  sub_1B51D4D34();
  swift_allocError();
  *uint64_t v17 = 2;
  v17[1] = v4;
  void v17[2] = 0xD00000000000001DLL;
  v17[3] = 0x80000001B537BD80;
  v17[4] = 0;
  swift_willThrow();
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B5275B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v34 = *(void *)(v3 + 8);
  uint64_t v35 = *(void *)v3;
  long long v25 = *(_OWORD *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v27 = *(void *)(v3 + 40);
  if (!a2)
  {
LABEL_11:
    uint64_t result = 0;
LABEL_16:
    *(void *)a1 = v35;
    *(void *)(a1 + 8) = v34;
    *(_OWORD *)(a1 + 16) = v25;
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v27;
    *(void *)(a1 + 48) = result;
    return result;
  }
  if (!a3)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t result = *(void *)(v3 + 40);
    if (v27)
    {
      uint64_t v4 = v3;
      uint64_t v9 = a2;
      uint64_t v23 = *(void *)(v3 + 32);
      uint64_t v24 = a1;
      uint64_t v10 = 0;
      uint64_t v11 = 1;
      while (1)
      {
        *(void *)&long long v38 = v35;
        *((void *)&v38 + 1) = v34;
        sub_1B51D4BB8(v35, v34);
        sub_1B51D4BB8(v35, v34);
        sub_1B5221844(v4);
        sub_1B51D4C10();
        uint64_t v3 = sub_1B53724D8();
        if (__OFADD__((void)v25, v10)) {
          goto LABEL_18;
        }
        swift_bridgeObjectRetain();
        *(void *)&long long v38 = sub_1B53724B8();
        *((void *)&v38 + 1) = v12;
        uint64_t v39 = v13;
        swift_bridgeObjectRetain_n();
        unsigned int v32 = sub_1B51F9F5C((uint64_t *)&v38, v14, 3, 1);
        uint64_t v33 = v11;
        long long v36 = v38;
        uint64_t v37 = v39;
        swift_bridgeObjectRetain();
        unsigned int v16 = sub_1B51F3DDC((uint64_t *)&v36, v15, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v38 = v36;
        uint64_t v39 = v37;
        swift_bridgeObjectRetain();
        unsigned int v18 = sub_1B51F3DDC((uint64_t *)&v38, v17, 1);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v19 = v18;
        uint64_t v4 = v26;
        sub_1B5221844(v26);
        sub_1B52A702C(v40, v35, v34, v16);
        long long v30 = v40[1];
        long long v31 = v40[0];
        uint64_t v20 = v41;
        sub_1B52A702C(v42, v35, v34, v19);
        long long v28 = v42[1];
        long long v29 = v42[0];
        uint64_t v21 = v43;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B52686D8(v26);
        swift_bridgeObjectRelease();
        *(_DWORD *)uint64_t v9 = v32;
        *(_OWORD *)(v9 + 8) = v31;
        *(_OWORD *)(v9 + 24) = v30;
        *(void *)(v9 + 40) = v20;
        *(_OWORD *)(v9 + 48) = v29;
        *(_OWORD *)(v9 + 64) = v28;
        *(void *)(v9 + 80) = v21;
        if (a3 == v11) {
          break;
        }
        if (v27 == v11)
        {
          uint64_t result = v27;
          goto LABEL_15;
        }
        uint64_t v10 = 11 * v11;
        a1 = v11 + 1;
        v9 += 88;
        ++v11;
        if (v33 == 0xBA2E8BA2E8BA2E9)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      uint64_t result = a3;
LABEL_15:
      uint64_t v6 = v23;
      a1 = v24;
      goto LABEL_16;
    }
    goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  sub_1B52686D8(v4);
  sub_1B51D4D34();
  swift_allocError();
  *uint64_t v22 = 2;
  v22[1] = v3;
  v22[2] = 0xD00000000000001DLL;
  v22[3] = 0x80000001B537BD80;
  v22[4] = 0;
  swift_willThrow();
  sub_1B52686D8(v26);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B5275FC4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)v3;
  __int16 v6 = *(_WORD *)(v3 + 8);
  uint64_t v37 = *(void *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 24);
  long long v9 = *(_OWORD *)(v3 + 40);
  uint64_t v8 = (long long *)(v3 + 40);
  long long v35 = v9;
  long long v36 = v7;
  if (!a2)
  {
LABEL_12:
    uint64_t result = 0;
    goto LABEL_17;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  long long v43 = *v8;
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t result = v37;
    if (v37)
    {
      uint64_t v12 = a2;
      __int16 v32 = v6;
      uint64_t v33 = v5;
      uint64_t v34 = a1;
      uint64_t v13 = 0;
      uint64_t v14 = 1;
      while (1)
      {
        long long v41 = v43;
        sub_1B5221844((uint64_t)&v43);
        sub_1B51D4C10();
        uint64_t v15 = sub_1B53724D8();
        if (__OFADD__((void)v36, v13))
        {
          sub_1B51D4D34();
          swift_allocError();
          *long long v28 = 2;
          v28[1] = v15;
          void v28[2] = 0xD00000000000001DLL;
          void v28[3] = 0x80000001B537BD80;
          v28[4] = 0;
          swift_willThrow();
          goto LABEL_22;
        }
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1B53724B8();
        *(void *)&long long v41 = v38;
        *((void *)&v41 + 1) = v16;
        uint64_t v42 = v17;
        uint64_t v39 = v16;
        uint64_t v40 = v17;
        swift_bridgeObjectRetain_n();
        unsigned int v19 = sub_1B51F3DDC(&v38, v18, 1);
        uint64_t v20 = v10;
        unsigned int v22 = sub_1B51F3DDC(&v38, v21, 1);
        swift_bridgeObjectRelease();
        uint64_t v23 = v38;
        uint64_t v24 = v40;
        if (v22 < v19) {
          break;
        }
        uint64_t v25 = v39;
        swift_bridgeObjectRelease();
        *(void *)&long long v41 = v23;
        *((void *)&v41 + 1) = v25;
        uint64_t v42 = v24;
        unsigned int v27 = sub_1B51F3DDC((uint64_t *)&v41, v26, 1);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *uint64_t v12 = v19;
        v12[1] = v22;
        v12[2] = v27;
        uint64_t v10 = v20;
        if (v20 == v14)
        {
          uint64_t result = v20;
LABEL_16:
          uint64_t v5 = v33;
          a1 = v34;
          __int16 v6 = v32;
          goto LABEL_17;
        }
        if (v37 == v14)
        {
          uint64_t result = v37;
          goto LABEL_16;
        }
        uint64_t v5 = v14 + 1;
        uint64_t v13 = 12 * v14;
        v12 += 3;
        uint64_t v14 = v5;
        a1 = 0xAAAAAAAAAAAAAACLL;
        if (v5 == 0xAAAAAAAAAAAAAACLL)
        {
          __break(1u);
          goto LABEL_12;
        }
      }
      sub_1B51D4F7C();
      long long v29 = (void *)swift_allocError();
      swift_willThrow();
      sub_1B51D4D34();
      swift_allocError();
      *long long v30 = v29;
      v30[1] = v23;
      v30[2] = 0x7272652072657355;
      v30[3] = 0xEA0000000000726FLL;
      v30[4] = v29;
      id v31 = v29;
      swift_willThrow();
      goto LABEL_21;
    }
LABEL_17:
    *(void *)a1 = v5;
    *(_WORD *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v37;
    *(_OWORD *)(a1 + 24) = v36;
    *(_OWORD *)(a1 + 40) = v35;
    *(void *)(a1 + 56) = result;
    return result;
  }
  __break(1u);
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void *sub_1B527637C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a2)
  {
LABEL_20:
    uint64_t v8 = 0;
    uint64_t v11 = a7;
LABEL_24:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = a6;
    result[3] = a7;
    result[4] = v11;
    return (void *)v8;
  }
  if (!a3)
  {
    uint64_t v11 = a7;
LABEL_22:
    uint64_t v8 = a3;
    goto LABEL_24;
  }
  uint64_t v7 = a7 + a6;
  if (!__OFADD__(a7, a6))
  {
    if (a3 < 0 || v7 < a7) {
      goto LABEL_28;
    }
    if (v7 > a7)
    {
      uint64_t v8 = 0;
      uint64_t v9 = a7;
      while (!__OFSUB__(v9, a7))
      {
        int v10 = *(unsigned __int16 *)(a5 + 2 * (v9 - a7));
        uint64_t v11 = v9 + 1;
        if ((v10 & 0xFC00) == 0xD800)
        {
          if (v11 >= v7) {
            goto LABEL_23;
          }
          BOOL v12 = __OFSUB__(v11, a7);
          uint64_t v13 = v11 - a7;
          if (v12) {
            goto LABEL_26;
          }
          __int16 v14 = *(_WORD *)(a5 + 2 * v13);
          if ((v14 & 0xFC00) != 0xDC00)
          {
LABEL_23:
            uint64_t v11 = v9;
            goto LABEL_24;
          }
          uint64_t v11 = v9 + 2;
          int v10 = (v14 & 0x3FF | ((v10 & 0x3FF) << 10)) + 0x10000;
        }
        else if ((v10 & 0xFC00) == 0xDC00)
        {
          goto LABEL_23;
        }
        *(void *)a2 = v9;
        *(void *)(a2 + 8) = v11;
        *(_DWORD *)(a2 + 16) = v10;
        if (a3 - 1 == v8) {
          goto LABEL_22;
        }
        ++v8;
        if (v11 >= a7)
        {
          a2 += 24;
          uint64_t v9 = v11;
          if (v11 < v7) {
            continue;
          }
        }
        goto LABEL_24;
      }
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    goto LABEL_20;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B527647C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a2)
  {
LABEL_25:
    uint64_t v9 = 0;
    uint64_t v11 = a7;
LABEL_28:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = a6;
    result[3] = a7;
    result[4] = v11;
    return (void *)v9;
  }
  if (!a3)
  {
    uint64_t v11 = a7;
LABEL_27:
    uint64_t v9 = a3;
    goto LABEL_28;
  }
  uint64_t v7 = a7 + a6;
  BOOL v8 = __OFADD__(a7, a6);
  if (a3 < 1)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v8)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v7 >= a7)
  {
    if (v7 > a7)
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = a7;
      while (1)
      {
        int v12 = *(unsigned __int16 *)(a5 + 2 * v10);
        uint64_t v13 = v11 + 1;
        if ((v12 & 0xFC00) == 0xD800)
        {
          if (v13 < a7 || v13 >= v7) {
            goto LABEL_28;
          }
          BOOL v14 = __OFSUB__(v13, a7);
          uint64_t v15 = v13 - a7;
          if (v14)
          {
            __break(1u);
            goto LABEL_31;
          }
          __int16 v16 = *(_WORD *)(a5 + 2 * v15);
          if ((v16 & 0xFC00) != 0xDC00) {
            goto LABEL_28;
          }
          v11 += 2;
          int v12 = (v16 & 0x3FF | ((v12 & 0x3FF) << 10)) + 0x10000;
        }
        else
        {
          if ((v12 & 0xFC00) == 0xDC00) {
            goto LABEL_28;
          }
          ++v11;
        }
        *(_DWORD *)(a2 + 4 * v9) = v12;
        if (a3 - 1 == v9) {
          goto LABEL_27;
        }
        if (v11 < a7 || v11 >= v7)
        {
          ++v9;
          goto LABEL_28;
        }
        ++v9;
        uint64_t v10 = v11 - a7;
        if (__OFSUB__(v11, a7))
        {
          __break(1u);
          goto LABEL_25;
        }
      }
    }
    goto LABEL_25;
  }
LABEL_33:
  __break(1u);
  return result;
}

void *sub_1B5276584(void *result, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_DWORD *)(*(void *)(a4 + 48) + 4 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1B5276718(uint64_t result, _WORD *a2, uint64_t a3, unsigned int a4)
{
  unsigned int v4 = HIWORD(a4);
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    LOWORD(v5) = a4;
LABEL_7:
    *(_DWORD *)uint64_t result = a4;
    *(_WORD *)(result + 4) = v5;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if ((unsigned __int16)a4 == HIWORD(a4))
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (v4 < (unsigned __int16)a4) {
    goto LABEL_32;
  }
  if ((unsigned __int16)a4 < HIWORD(a4))
  {
    unsigned int v5 = a4 + 1;
    *a2 = a4;
    unint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    unint64_t v7 = (unsigned __int16)(~(_WORD)a4 + HIWORD(a4));
    if (a3 - 2 < v7) {
      unint64_t v7 = a3 - 2;
    }
    if (v7 < v6) {
      unint64_t v6 = v7;
    }
    if (v6 > 0xF)
    {
      unint64_t v10 = v6 + 1;
      uint64_t v11 = v10 & 0xF;
      if ((v10 & 0xF) == 0) {
        uint64_t v11 = 16;
      }
      unint64_t v12 = v10 - v11;
      uint64_t v8 = v10 - v11 + 1;
      __int16 v13 = v5 + v12;
      uint64_t v9 = &a2[v12];
      int16x8_t v14 = vaddq_s16(vdupq_n_s16(v5), (int16x8_t)xmmword_1B538F8E0);
      int64_t v15 = (int16x8_t *)(a2 + 9);
      v16.i64[0] = 0x8000800080008;
      v16.i64[1] = 0x8000800080008;
      v17.i64[0] = 0x10001000100010;
      v17.i64[1] = 0x10001000100010;
      do
      {
        v15[-1] = v14;
        *int64_t v15 = vaddq_s16(v14, v16);
        int16x8_t v14 = vaddq_s16(v14, v17);
        v15 += 2;
        v12 -= 16;
      }
      while (v12);
      LOWORD(v5) = v13;
    }
    else
    {
      uint64_t v8 = 1;
      uint64_t v9 = a2;
    }
    uint64_t v18 = v9 + 1;
    unsigned __int16 v19 = v5;
    while (a3 != v8)
    {
      if (v4 == v19)
      {
        unsigned int v5 = HIWORD(a4);
        a3 = (unsigned __int16)(~(_WORD)a4 + HIWORD(a4)) + 1;
        goto LABEL_7;
      }
      if (v19 >= HIWORD(a4)) {
        goto LABEL_30;
      }
      ++v8;
      LOWORD(v5) = v19 + 1;
      *v18++ = v19++;
      if (a3 == v8) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5276868(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + a3;
  if (__OFADD__(a4, a3))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v4 < a4)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v5 = *(void *)result;
  if (*(void *)result < a4 || v5 >= v4) {
    return 0xFF00000000;
  }
  if (__OFSUB__(v5, a4)) {
    goto LABEL_16;
  }
  uint64_t v7 = *(unsigned __int16 *)(a2 + 2 * (v5 - a4));
  *(void *)uint64_t result = v5 + 1;
  if ((v7 & 0xFC00) == 0xDC00) {
    return v7 & 0x3FF | 0x100000000;
  }
  if ((v7 & 0xFC00) == 0xD800) {
    return v7 & 0x3FF;
  }
  return v7 | 0x200000000;
}

uint64_t destroy for PSInterpreter()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PSInterpreter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PSInterpreter(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  int v4 = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 112) = v4;
  int v5 = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 120) = v5;
  int v6 = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  *(_DWORD *)(a1 + 128) = v6;
  return a1;
}

__n128 __swift_memcpy135_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 127) = *(void *)(a2 + 127);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for PSInterpreter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  return a1;
}

uint64_t getEnumTagSinglePayload for PSInterpreter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 135)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PSInterpreter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 134) = 0;
    *(_WORD *)(result + 132) = 0;
    *(_DWORD *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 135) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 135) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PSInterpreter()
{
  return &type metadata for PSInterpreter;
}

void *initializeBufferWithCopyOfBuffer for BufferedExecutionContext(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BufferedExecutionContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for BufferedExecutionContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for BufferedExecutionContext(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BufferedExecutionContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t sub_1B5276F58(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1B5276F70(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for BufferedExecutionContext()
{
  return &type metadata for BufferedExecutionContext;
}

uint64_t type metadata accessor for ReferenceArray()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ReferenceArray.Key()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5276FD0()
{
  uint64_t v1 = *v0;
  if (!*(void *)(*v0 + 16)) {
    return 0xFF000000000000;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
LABEL_4:
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 8 * v4;
      unint64_t v6 = *(unsigned int *)(v5 + 32) | ((unint64_t)*(unsigned __int16 *)(v5 + 36) << 32);
      uint64_t v7 = *(unsigned __int8 *)(v5 + 38);
      *(void *)(v1 + 16) = v4;
      *unint64_t v0 = v1;
      return v6 | (v7 << 48);
    }
  }
  else
  {
    uint64_t result = (uint64_t)sub_1B5293510(v1);
    uint64_t v1 = result;
    uint64_t v3 = *(void *)(result + 16);
    if (v3) {
      goto LABEL_4;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1B5277050(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = (char **)(v3 + 88);
  uint64_t v7 = *(char **)(v3 + 88);
  unint64_t v8 = *((void *)v7 + 2);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_59:
  }
    uint64_t v7 = sub_1B51E85F4(0, v8 + 1, 1, v7);
  unint64_t v10 = *((void *)v7 + 2);
  unint64_t v9 = *((void *)v7 + 3);
  if (v10 >= v9 >> 1) {
    uint64_t v7 = sub_1B51E85F4((char *)(v9 > 1), v10 + 1, 1, v7);
  }
  *((void *)v7 + 2) = v10 + 1;
  uint64_t v11 = &v7[16 * v10];
  *((void *)v11 + 4) = a1;
  *((void *)v11 + 5) = a2;
  *unint64_t v6 = v7;
  unint64_t v12 = *((void *)v7 + 2);
  if (v8 >= v12) {
    return 0;
  }
  while (1)
  {
    __int16 v13 = &v7[16 * v12 - 16];
    a2 = *((void *)v13 + 4);
    if (a2)
    {
      a1 = *((void *)v13 + 5);
      unint64_t v14 = *(void *)(a2 + 16);
      if (a1 == v14)
      {
        unint64_t v15 = 0xFF000000000000;
      }
      else
      {
        if (a1 >= v14) {
          goto LABEL_55;
        }
        uint64_t v19 = a2 + 8 * a1++;
        unint64_t v15 = *(unsigned int *)(v19 + 32) | ((unint64_t)*(unsigned __int16 *)(v19 + 36) << 32) | ((unint64_t)*(unsigned __int8 *)(v19 + 38) << 48);
      }
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1B5293574((uint64_t)v7);
      }
      if (v12 > *((void *)v7 + 2))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
      uint64_t v20 = &v7[16 * v12 + 16];
      *(void *)uint64_t v20 = a2;
      *((void *)v20 + 1) = a1;
      swift_bridgeObjectRelease();
      *unint64_t v6 = v7;
      unint64_t v21 = HIWORD(v15);
      if (HIWORD(v15) > 0xFEu)
      {
        uint64_t v22 = *((void *)v7 + 2);
        if (!v22) {
          goto LABEL_56;
        }
        uint64_t v18 = v22 - 1;
LABEL_6:
        *((void *)v7 + 2) = v18;
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    else
    {
      a2 = v3;
      uint64_t v16 = sub_1B5278CEC();
      if ((~v16 & 0xFF000000000000) == 0)
      {
        uint64_t v7 = *v6;
        if (!*((void *)*v6 + 2)) {
          goto LABEL_57;
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v17 = *((void *)v7 + 2);
          if (!v17) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v7 = sub_1B5293574((uint64_t)v7);
          uint64_t v17 = *((void *)v7 + 2);
          if (!v17) {
            goto LABEL_58;
          }
        }
        uint64_t v18 = v17 - 1;
        goto LABEL_6;
      }
      unint64_t v15 = v16 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v21 = BYTE6(v16);
    }
    unint64_t result = sub_1B5277688((char **)(v15 & 0xFFFFFFFFFFFFLL | (v21 << 48)));
    uint64_t v26 = result;
    if (!v25) {
      break;
    }
    if (v25 != 1)
    {
      uint64_t v7 = *v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1B51E85F4(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      a1 = *((void *)v7 + 2);
      unint64_t v39 = *((void *)v7 + 3);
      if (a1 >= v39 >> 1) {
        uint64_t v7 = sub_1B51E85F4((char *)(v39 > 1), a1 + 1, 1, v7);
      }
      *((void *)v7 + 2) = a1 + 1;
      uint64_t v40 = &v7[16 * a1];
      *((void *)v40 + 4) = v26;
      *((void *)v40 + 5) = 0;
      goto LABEL_7;
    }
    uint64_t v27 = v24;
    long long v28 = *(_OWORD *)(v3 + 112);
    long long v46 = *(_OWORD *)(v3 + 96);
    v47[0] = v28;
    *(void *)((char *)v47 + 15) = *(void *)(v3 + 127);
    long long v29 = *(_OWORD *)(v3 + 48);
    void v44[2] = *(_OWORD *)(v3 + 32);
    v44[3] = v29;
    long long v30 = *(_OWORD *)(v3 + 80);
    v44[4] = *(_OWORD *)(v3 + 64);
    long long v45 = v30;
    long long v31 = *(_OWORD *)(v3 + 16);
    v44[0] = *(_OWORD *)v3;
    v44[1] = v31;
    uint64_t v7 = (char *)*((void *)&v45 + 1);
    unint64_t v32 = LODWORD(v47[0]) | ((unint64_t)WORD2(v47[0]) << 32);
    uint64_t v33 = BYTE6(v47[0]);
    sub_1B520212C((uint64_t)v44);
    unint64_t v34 = sub_1B52ABF1C(v32 | (v33 << 48));
    sub_1B520A898((uint64_t)v44);
    if ((v34 & 0xFF000000000000) != 0x8000000000000)
    {
      sub_1B527A6EC(v26, v27, 1);
LABEL_43:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1B51E85F4(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      a1 = *((void *)v7 + 2);
      unint64_t v41 = *((void *)v7 + 3);
      if (a1 >= v41 >> 1) {
        uint64_t v7 = sub_1B51E85F4((char *)(v41 > 1), a1 + 1, 1, v7);
      }
      *((void *)v7 + 2) = a1 + 1;
      uint64_t v42 = &v7[16 * a1];
      *((void *)v42 + 4) = &unk_1F0DDCFD8;
      *((void *)v42 + 5) = 0;
      goto LABEL_7;
    }
    sub_1B520212C((uint64_t)v44);
    unint64_t v35 = sub_1B52AC32C(v26, v27, v34);
    sub_1B527A6EC(v26, v27, 1);
    sub_1B520A898((uint64_t)v44);
    if ((~v35 & 0xFF000000000000) == 0) {
      goto LABEL_43;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47A20);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1B538C0E0;
    *(_WORD *)(v36 + 36) = WORD2(v35);
    *(_DWORD *)(v36 + 32) = v35;
    *(unsigned char *)(v36 + 38) = BYTE6(v35);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_1B51E85F4(0, *((void *)v7 + 2) + 1, 1, v7);
    }
    a1 = *((void *)v7 + 2);
    unint64_t v37 = *((void *)v7 + 3);
    if (a1 >= v37 >> 1) {
      uint64_t v7 = sub_1B51E85F4((char *)(v37 > 1), a1 + 1, 1, v7);
    }
    *((void *)v7 + 2) = a1 + 1;
    uint64_t v38 = &v7[16 * a1];
    *((void *)v38 + 4) = v36;
    *((void *)v38 + 5) = 0;
LABEL_7:
    *unint64_t v6 = v7;
LABEL_8:
    unint64_t v12 = *((void *)v7 + 2);
    if (v8 >= v12) {
      return 0;
    }
  }
  uint64_t v7 = *v6;
  if (!(_BYTE)result) {
    goto LABEL_8;
  }
  unint64_t v43 = *((void *)v7 + 2);
  if (v43 >= v8)
  {
    sub_1B5238804(v8, v43);
    return v26;
  }
  __break(1u);
  return result;
}

unint64_t sub_1B527751C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 72);
  if (*(void *)(v6 + 16))
  {
    sub_1B51D4BB8(a1, a2);
    uint64_t v7 = sub_1B5230668(a1, a2);
    if (v8)
    {
      unint64_t v9 = *(unsigned int *)(*(void *)(v6 + 56) + 4 * v7);
      goto LABEL_10;
    }
    sub_1B51D4C64(a1, a2);
  }
  unint64_t v10 = *(char **)(v3 + 56);
  unint64_t v9 = *((void *)v10 + 2);
  if (HIDWORD(v9))
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_1B51D4BB8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_12:
  }
    unint64_t v10 = sub_1B51E849C(0, v9 + 1, 1, v10);
  unint64_t v12 = *((void *)v10 + 2);
  unint64_t v11 = *((void *)v10 + 3);
  if (v12 >= v11 >> 1) {
    unint64_t v10 = sub_1B51E849C((char *)(v11 > 1), v12 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v12 + 1;
  __int16 v13 = &v10[16 * v12];
  *((void *)v13 + 4) = a1;
  *((void *)v13 + 5) = a2;
  *(void *)(v3 + 56) = v10;
  sub_1B51D4BB8(a1, a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *(void *)(v3 + 72);
  *(void *)(v3 + 72) = 0x8000000000000000;
  sub_1B523731C(v9, a1, a2, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 72) = v16;
  swift_bridgeObjectRelease();
LABEL_10:
  sub_1B51D4C64(a1, a2);
  return v9;
}

unint64_t sub_1B5277688(char **a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  unint64_t v4 = (unint64_t)a1 >> 48;
  int64_t v5 = *(unsigned __int8 *)(v2 + 126);
  unint64_t v6 = (unint64_t)a1 & 0xFFFFFFFFFFFFFFLL;
  BOOL v7 = sub_1B522D004((unint64_t)a1 & 0xFFFFFFFFFFFFFFLL, *(unsigned int *)(v2 + 120) | ((unint64_t)*(unsigned __int16 *)(v2 + 124) << 32) | (v5 << 48));
  uint64_t v9 = *(void *)(v2 + 104);
  if (v7)
  {
    if (!v9)
    {
      unint64_t result = 0;
      *(void *)(v2 + 104) = 1;
      *(void *)(v2 + 96) = *(void *)(*(void *)(v2 + 8) + 16);
      return result;
    }
    if (!__OFADD__(v9, 1))
    {
      *(void *)(v2 + 104) = v9 + 1;
      goto LABEL_27;
    }
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v9 < 1)
  {
    unint64_t result = 0;
    switch((char)v4)
    {
      case 3:
        unint64_t v21 = *(char **)(v2 + 8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v21 = sub_1B51E85E8(0, *((void *)v21 + 2) + 1, 1, v21);
        }
        unint64_t v26 = *((void *)v21 + 2);
        unint64_t v25 = *((void *)v21 + 3);
        if (v26 >= v25 >> 1) {
          unint64_t v21 = sub_1B51E85E8((char *)(v25 > 1), v26 + 1, 1, v21);
        }
        unint64_t result = 0;
        *((void *)v21 + 2) = v26 + 1;
        uint64_t v27 = &v21[8 * v26];
        *((_DWORD *)v27 + 8) = v3;
        *((_WORD *)v27 + 18) = WORD2(v3);
        char v28 = 3;
        goto LABEL_48;
      case 4:
        unint64_t v29 = sub_1B52ABF1C(v6);
        if ((~v29 & 0xFF000000000000) != 0) {
          return sub_1B5277688(v29 & 0xFFFFFFFFFFFFFFLL);
        }
        else {
          return 0x656E696665646E75;
        }
      case 5:
        return sub_1B5278088((char)v3, v8);
      case 7:
        if (((unint64_t)v3 & 0x400000000) != 0)
        {
          if ((unint64_t)v3 >= *(void *)(*(void *)(v2 + 32) + 16))
          {
            __break(1u);
            JUMPOUT(0x1B5277C34);
          }
          return swift_bridgeObjectRetain();
        }
        unint64_t v21 = *(char **)(v2 + 8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v21 = sub_1B51E85E8(0, *((void *)v21 + 2) + 1, 1, v21);
        }
        unint64_t v31 = *((void *)v21 + 2);
        unint64_t v30 = *((void *)v21 + 3);
        if (v31 >= v30 >> 1) {
          unint64_t v21 = sub_1B51E85E8((char *)(v30 > 1), v31 + 1, 1, v21);
        }
        unint64_t result = 0;
        *((void *)v21 + 2) = v31 + 1;
        uint64_t v27 = &v21[8 * v31];
        *((_DWORD *)v27 + 8) = v3;
        *((_WORD *)v27 + 18) = WORD2(v3);
        char v28 = 7;
LABEL_48:
        v27[38] = v28;
        break;
      case 10:
        return result;
      default:
        goto LABEL_27;
    }
    goto LABEL_32;
  }
  if (!sub_1B522D004(v6, *(unsigned int *)(v2 + 128) | ((unint64_t)*(unsigned __int16 *)(v2 + 132) << 32) | ((unint64_t)*(unsigned __int8 *)(v2 + 134) << 48))|| (*(void *)(v2 + 104) = v9 - 1, v9 != 1))
  {
LABEL_27:
    unint64_t v21 = *(char **)(v2 + 8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v21 = sub_1B51E85E8(0, *((void *)v21 + 2) + 1, 1, v21);
    }
    unint64_t v23 = *((void *)v21 + 2);
    unint64_t v22 = *((void *)v21 + 3);
    if (v23 >= v22 >> 1) {
      unint64_t v21 = sub_1B51E85E8((char *)(v22 > 1), v23 + 1, 1, v21);
    }
    unint64_t result = 0;
    *((void *)v21 + 2) = v23 + 1;
    uint64_t v24 = &v21[8 * v23];
    *((_DWORD *)v24 + 8) = v3;
    *((_WORD *)v24 + 18) = WORD2(v3);
    v24[38] = v4;
LABEL_32:
    *(void *)(v2 + 8) = v21;
    return result;
  }
  uint64_t v3 = (char **)(v2 + 8);
  uint64_t v9 = *(void *)(v2 + 8);
  unint64_t v6 = *(void *)(v2 + 96);
  int64_t v5 = *(void *)(v9 + 16);
  if (v5 < (uint64_t)v6) {
    goto LABEL_53;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRelease();
    sub_1B521CB78(v9, v9 + 32, v6, (2 * v5) | 1);
    uint64_t v12 = v32;
    goto LABEL_15;
  }
  sub_1B5373238();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = *(void *)(v10 + 16);
  swift_release();
  if (v11 != v5 - v6) {
    goto LABEL_55;
  }
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
LABEL_15:
  swift_bridgeObjectRelease();
  unint64_t v13 = *(void *)(v9 + 16);
  if (v13 < v6)
  {
    __break(1u);
    goto LABEL_57;
  }
  sub_1B52386F4(v6, v13);
  unint64_t v6 = *(void *)(v2 + 32);
  int64_t v5 = *(void *)(v6 + 16);
  if (HIDWORD(v5))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_58:
  }
    unint64_t v6 = (unint64_t)sub_1B51E85AC(0, v5 + 1, 1, (void *)v6);
  unint64_t v15 = *(void *)(v6 + 16);
  unint64_t v14 = *(void *)(v6 + 24);
  if (v15 >= v14 >> 1) {
    unint64_t v6 = (unint64_t)sub_1B51E85AC((void *)(v14 > 1), v15 + 1, 1, (void *)v6);
  }
  *(void *)(v6 + 16) = v15 + 1;
  *(void *)(v6 + 8 * v15 + 32) = v12;
  swift_release();
  *(void *)(v2 + 32) = v6;
  uint64_t v16 = *(char **)(v2 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_1B51E85E8(0, *((void *)v16 + 2) + 1, 1, v16);
  }
  unint64_t v18 = *((void *)v16 + 2);
  unint64_t v17 = *((void *)v16 + 3);
  if (v18 >= v17 >> 1) {
    uint64_t v16 = sub_1B51E85E8((char *)(v17 > 1), v18 + 1, 1, v16);
  }
  unint64_t result = 0;
  *((void *)v16 + 2) = v18 + 1;
  uint64_t v20 = &v16[8 * v18];
  *((_DWORD *)v20 + 8) = v5;
  *((_WORD *)v20 + 18) = (v5 | 0x700000000uLL) >> 32;
  v20[38] = 7;
  *uint64_t v3 = v16;
  return result;
}

double sub_1B5277C60()
{
  sub_1B5278F1C((unint64_t)&v1);
  xmmword_1E9D53A88 = v7;
  unk_1E9D53A98 = *(_OWORD *)v8;
  unk_1E9D53AA7 = *(void *)&v8[15];
  xmmword_1E9D53A48 = v3;
  unk_1E9D53A58 = v4;
  xmmword_1E9D53A68 = v5;
  unk_1E9D53A78 = v6;
  double result = *(double *)&v2;
  xmmword_1E9D53A28 = v1;
  unk_1E9D53A38 = v2;
  return result;
}

uint64_t sub_1B5277CC4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1B5372788();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = 0xFF000000000000;
  switch(a3)
  {
    case 1:
      sub_1B51D4BB8(a1, a2);
      unsigned int v13 = sub_1B527751C(a1, a2);
      sub_1B520ABCC(a1, a2, 1);
      uint64_t v12 = v13 | 0x4000000000000;
      return v12 & 0xFFFFFFFFFFFFFFLL;
    case 2:
      sub_1B51D4BB8(a1, a2);
      unsigned int v14 = sub_1B527751C(a1, a2);
      sub_1B520ABCC(a1, a2, 2);
      goto LABEL_19;
    case 3:
      uint64_t v15 = *(void *)(v4 + 72);
      uint64_t v16 = *(void *)(v15 + 16);
      sub_1B51D4BB8(a1, a2);
      if (!v16) {
        goto LABEL_7;
      }
      uint64_t v17 = sub_1B5230668(a1, a2);
      if ((v18 & 1) == 0) {
        goto LABEL_7;
      }
      uint64_t v19 = *(unsigned int *)(*(void *)(v15 + 56) + 4 * v17);
      int v20 = *(_DWORD *)(v4 + 112);
      __int16 v21 = *(_WORD *)(v4 + 116);
      char v22 = *(unsigned char *)(v4 + 118);
      int v23 = *(_DWORD *)(v4 + 120);
      __int16 v24 = *(_WORD *)(v4 + 124);
      char v25 = *(unsigned char *)(v4 + 126);
      int v26 = *(_DWORD *)(v4 + 128);
      __int16 v27 = *(_WORD *)(v4 + 132);
      char v28 = *(unsigned char *)(v4 + 134);
      v42[1] = *(void *)v4;
      long long v29 = *(_OWORD *)(v4 + 24);
      long long v43 = *(_OWORD *)(v4 + 8);
      long long v44 = v29;
      long long v30 = *(_OWORD *)(v4 + 56);
      long long v45 = *(_OWORD *)(v4 + 40);
      long long v46 = v30;
      uint64_t v47 = v15;
      long long v31 = *(_OWORD *)(v4 + 96);
      long long v48 = *(_OWORD *)(v4 + 80);
      long long v49 = v31;
      __int16 v51 = v21;
      int v50 = v20;
      char v52 = v22;
      __int16 v54 = v24;
      int v53 = v23;
      char v55 = v25;
      __int16 v57 = v27;
      int v56 = v26;
      char v58 = v28;
      unint64_t v32 = sub_1B52ABF1C(v19 | 0x3000000000000);
      if ((~v32 & 0xFF000000000000) == 0) {
LABEL_7:
      }
        unint64_t v32 = sub_1B5277CC4(0x656E696665646E75, 0xE900000000000064, 7);
      uint64_t v12 = v32;
      sub_1B520ABCC(a1, a2, 3);
      return v12 & 0xFFFFFFFFFFFFFFLL;
    case 4:
      uint64_t v33 = *(char **)(v4 + 48);
      unint64_t v34 = *((void *)v33 + 2);
      if (HIDWORD(v34))
      {
        __break(1u);
      }
      else
      {
        sub_1B51D4BB8(a1, a2);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_11;
        }
      }
      uint64_t v33 = sub_1B51E849C(0, v34 + 1, 1, v33);
LABEL_11:
      unint64_t v36 = *((void *)v33 + 2);
      unint64_t v35 = *((void *)v33 + 3);
      if (v36 >= v35 >> 1) {
        uint64_t v33 = sub_1B51E849C((char *)(v35 > 1), v36 + 1, 1, v33);
      }
      *((void *)v33 + 2) = v36 + 1;
      unint64_t v37 = &v33[16 * v36];
      *((void *)v37 + 4) = a1;
      *((void *)v37 + 5) = a2;
      *(void *)(v4 + 48) = v33;
      uint64_t v12 = v34 | 0x9000000000000;
      return v12 & 0xFFFFFFFFFFFFFFLL;
    case 5:
      uint64_t v12 = a1 | 0x1000000000000;
      return v12 & 0xFFFFFFFFFFFFFFLL;
    case 6:
      uint64_t v12 = a1 | 0x2000000000000;
      return v12 & 0xFFFFFFFFFFFFFFLL;
    case 7:
      sub_1B5372758();
      uint64_t v38 = sub_1B53726F8();
      unint64_t v40 = v39;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if (v40 >> 60 == 15)
      {
        uint64_t v12 = sub_1B5277CC4(0x726F7272656F69, 0xE700000000000000, 7);
      }
      else
      {
        unsigned int v14 = sub_1B527751C(v38, v40);
        sub_1B51FE548(v38, v40);
LABEL_19:
        uint64_t v12 = v14 | 0x3000000000000;
      }
      return v12 & 0xFFFFFFFFFFFFFFLL;
    default:
      return v12 & 0xFFFFFFFFFFFFFFLL;
  }
}

unint64_t sub_1B5278088(char a1, long double a2)
{
  uint64_t v9 = 0;
  switch(a1)
  {
    case 1:
      return sub_1B524872C();
    case 2:
      uint64_t v3 = *(char **)(v2 + 8);
      unint64_t v11 = *((void *)v3 + 2);
      if (v11 < 2) {
        return 0x646E756B63617473;
      }
      uint64_t v12 = 8 * v11;
      uint64_t v6 = v12 - 16;
      unsigned int v13 = &v3[v12 + 16];
      char v5 = v13[6];
      uint64_t v7 = v12 - 8;
      unsigned int v14 = &v3[v12 + 24];
      unint64_t v8 = *(unsigned int *)v14 | ((unint64_t)*((unsigned __int16 *)v14 + 2) << 32);
      LOBYTE(v4) = v14[6];
      unint64_t v71 = *(unsigned int *)v13 | ((unint64_t)*((unsigned __int16 *)v13 + 2) << 32);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_6;
      }
      goto LABEL_148;
    case 3:
      uint64_t v3 = *(char **)(v2 + 8);
      if (!*((void *)v3 + 2)) {
        return 0x646E756B63617473;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v17 = *((void *)v3 + 2);
        if (v17)
        {
LABEL_10:
          uint64_t v9 = 0;
          *((void *)v3 + 2) = v17 - 1;
          *(void *)(v2 + 8) = v3;
          return v9;
        }
      }
      else
      {
        uint64_t v3 = sub_1B5293510((uint64_t)v3);
        uint64_t v17 = *((void *)v3 + 2);
        if (v17) {
          goto LABEL_10;
        }
      }
      __break(1u);
      goto LABEL_144;
    case 4:
      return sub_1B524D1B8();
    case 5:
      return sub_1B524A514();
    case 6:
      char v18 = *(char **)(v2 + 8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v18 = sub_1B51E85E8(0, *((void *)v18 + 2) + 1, 1, v18);
      }
      unint64_t v20 = *((void *)v18 + 2);
      unint64_t v19 = *((void *)v18 + 3);
      unint64_t v21 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        unsigned __int16 v67 = sub_1B51E85E8((char *)(v19 > 1), v20 + 1, 1, v18);
        unint64_t v21 = v20 + 1;
        char v18 = v67;
      }
      uint64_t v9 = 0;
      *((void *)v18 + 2) = v21;
      char v22 = &v18[8 * v20];
      *((_WORD *)v22 + 18) = 0;
      *((_DWORD *)v22 + 8) = 1;
      char v23 = 10;
      goto LABEL_107;
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v9 = 0;
      *(void *)(v2 + 8) = MEMORY[0x1E4FBC860];
      return v9;
    case 8:
      char v18 = *(char **)(v2 + 8);
      unint64_t v4 = *((void *)v18 + 2);
      if (v4 >> 31) {
        return 0x65766F6B63617473;
      }
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_122;
      }
      goto LABEL_151;
    case 9:
      return sub_1B5247188();
    case 10:
      uint64_t v9 = 0x65686374616D6E75;
      uint64_t v24 = *(void *)(v2 + 8);
      int64_t v25 = *(void *)(v24 + 16);
      if (!v25) {
        return v9;
      }
      int64_t v26 = 1 - v25;
      uint64_t v27 = v24 + 8 * v25 + 30;
      char v28 = (unsigned __int8 *)v27;
      while (1)
      {
        unsigned int v29 = *v28;
        v28 -= 8;
        if (v29 >= 0xA)
        {
          if (*(unsigned int *)(v27 - 6) | ((unint64_t)*(unsigned __int16 *)(v27 - 2) << 32)) {
            break;
          }
        }
        ++v26;
        uint64_t v27 = (uint64_t)v28;
        if (v26 == 1) {
          return v9;
        }
      }
      sub_1B52386F4(-v26, v25);
      return 0;
    case 11:
      return sub_1B5245D98();
    case 13:
      return sub_1B524BB0C();
    case 14:
      return sub_1B524855C();
    case 15:
      return sub_1B524A368();
    case 16:
      return sub_1B524B974();
    case 17:
      return sub_1B5246210();
    case 18:
      return sub_1B524BD94();
    case 19:
      return sub_1B5246BD4();
    case 20:
      return sub_1B5249634();
    case 21:
      return sub_1B524D410();
    case 22:
      return sub_1B524DA74();
    case 23:
      sub_1B524D5D0(a2);
      return v10;
    case 24:
      return sub_1B5249444();
    case 25:
      sub_1B524AB48(a2);
      return v10;
    case 26:
      sub_1B524B244(a2);
      return v10;
    case 27:
      sub_1B524AE98(v2, a2);
      return v10;
    case 28:
      sub_1B524ACE0(v2, a2);
      return v10;
    case 30:
      int v30 = *(_DWORD *)v2 & 0x7FFFFFFF;
      *(_DWORD *)uint64_t v2 = 1103515245 * *(_DWORD *)v2 + 12345;
      goto LABEL_47;
    case 32:
      int v30 = *(_DWORD *)v2;
LABEL_47:
      char v18 = *(char **)(v2 + 8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v18 = sub_1B51E85E8(0, *((void *)v18 + 2) + 1, 1, v18);
      }
      unint64_t v32 = *((void *)v18 + 2);
      unint64_t v31 = *((void *)v18 + 3);
      unint64_t v33 = v32 + 1;
      if (v32 >= v31 >> 1)
      {
        unsigned __int16 v66 = sub_1B51E85E8((char *)(v31 > 1), v32 + 1, 1, v18);
        unint64_t v33 = v32 + 1;
        char v18 = v66;
      }
      uint64_t v9 = 0;
      *((void *)v18 + 2) = v33;
      char v22 = &v18[8 * v32];
      *((_WORD *)v22 + 18) = 0;
      *((_DWORD *)v22 + 8) = v30;
      goto LABEL_52;
    case 33:
      return sub_1B5247390();
    case 34:
      return sub_1B5247968();
    case 35:
      return sub_1B5247E54();
    case 36:
      return sub_1B5249028();
    case 37:
      return sub_1B524B548();
    case 38:
    case 39:
    case 40:
    case 41:
      swift_getKeyPath();
      uint64_t v9 = sub_1B5249D18();
      swift_release();
      return v9;
    case 42:
      return sub_1B5246024();
    case 43:
      return sub_1B524C11C();
    case 44:
      return sub_1B524E030();
    case 45:
      return sub_1B524BF90();
    case 46:
      return sub_1B5246A08();
    case 47:
      if (*(void *)(*(void *)(v2 + 8) + 16) < 2uLL) {
        return 0x646E756B63617473;
      }
      uint64_t v34 = sub_1B5276FD0();
      if ((~v34 & 0xFF000000000000) == 0)
      {
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
        JUMPOUT(0x1B5278B5CLL);
      }
      uint64_t v35 = v34;
      uint64_t v36 = sub_1B5276FD0();
      if ((v36 & 0xFF000000000000) == 0)
      {
        if ((v36 & 1) == 0) {
          return 0;
        }
        uint64_t v42 = v35 & 0xFFFFFFFFFFFFFFLL;
        return sub_1B5277688(v42);
      }
      if ((v36 & 0xFF000000000000) != 0xFF000000000000) {
        return 0x6365686365707974;
      }
      __break(1u);
LABEL_68:
      uint64_t v9 = *(void *)(v2 + 8);
      if (!*(void *)(v9 + 16)) {
        return 0x646E756B63617473;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v37 = *(void *)(v9 + 16);
        if (v37)
        {
LABEL_71:
          uint64_t v38 = v37 - 1;
          uint64_t v39 = v9 + 8 * v38;
          unint64_t v40 = *(unsigned int *)(v39 + 32) | ((unint64_t)*(unsigned __int16 *)(v39 + 36) << 32);
          uint64_t v41 = *(unsigned __int8 *)(v39 + 38);
          *(void *)(v9 + 16) = v38;
          *(void *)(v2 + 8) = v9;
          uint64_t v42 = v40 | (v41 << 48);
          return sub_1B5277688(v42);
        }
      }
      else
      {
LABEL_144:
        uint64_t v9 = (uint64_t)sub_1B5293510(v9);
        uint64_t v37 = *(void *)(v9 + 16);
        if (v37) {
          goto LABEL_71;
        }
      }
      __break(1u);
LABEL_146:
      uint64_t v9 = (uint64_t)sub_1B5293510(v9);
      uint64_t v43 = *(void *)(v9 + 16);
      if (!v43)
      {
LABEL_147:
        __break(1u);
LABEL_148:
        uint64_t v3 = sub_1B5293510((uint64_t)v3);
LABEL_6:
        uint64_t v9 = 0;
        uint64_t v15 = &v3[v6 + 32];
        *((_WORD *)v15 + 2) = WORD2(v8);
        *(_DWORD *)uint64_t v15 = v8;
        v15[6] = v4;
        uint64_t v16 = &v3[v7 + 32];
        *((_WORD *)v16 + 2) = WORD2(v71);
        *(_DWORD *)uint64_t v16 = v71;
        v16[6] = v5;
        *(void *)(v2 + 8) = v3;
        return v9;
      }
LABEL_86:
      uint64_t v44 = v9 + 8 * (v43 - 1);
      int v45 = *(_DWORD *)(v44 + 32);
      LODWORD(v44) = *(unsigned __int8 *)(v44 + 38);
      *(void *)(v9 + 16) = v43 - 1;
      *(void *)(v2 + 8) = v9;
      if (v44 == 8)
      {
        int v46 = v45;
        uint64_t v47 = *(char **)(v2 + 16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v47 = sub_1B51E85A0(0, *((void *)v47 + 2) + 1, 1, v47);
        }
        unint64_t v49 = *((void *)v47 + 2);
        unint64_t v48 = *((void *)v47 + 3);
        unint64_t v50 = v49 + 1;
        if (v49 >= v48 >> 1)
        {
          long long v70 = sub_1B51E85A0((char *)(v48 > 1), v49 + 1, 1, v47);
          unint64_t v50 = v49 + 1;
          uint64_t v47 = v70;
        }
        uint64_t v9 = 0;
        *((void *)v47 + 2) = v50;
        *(_DWORD *)&v47[4 * v49 + 32] = v46;
        *(void *)(v2 + 16) = v47;
        return v9;
      }
      return 0x6365686365707974;
    case 48:
      if (*(void *)(*(void *)(v2 + 8) + 16) < 3uLL) {
        return 0x646E756B63617473;
      }
      uint64_t v59 = sub_1B5276FD0();
      if ((~v59 & 0xFF000000000000) == 0) {
        goto LABEL_153;
      }
      uint64_t v60 = v59;
      uint64_t v61 = sub_1B5276FD0();
      if ((~v61 & 0xFF000000000000) == 0) {
        goto LABEL_154;
      }
      uint64_t v62 = v61;
      uint64_t v63 = sub_1B5276FD0();
      if ((v63 & 0xFF000000000000) == 0)
      {
        if (v63) {
          uint64_t v64 = v62;
        }
        else {
          uint64_t v64 = v60;
        }
        uint64_t v42 = v64 & 0xFFFFFFFFFFFFFFLL;
        return sub_1B5277688(v42);
      }
      if ((v63 & 0xFF000000000000) != 0xFF000000000000) {
        return 0x6365686365707974;
      }
      goto LABEL_155;
    case 49:
      goto LABEL_68;
    case 50:
      return sub_1B52497DC();
    case 51:
      return sub_1B524CFFC();
    case 52:
      return sub_1B524B3DC();
    case 54:
      return 1;
    case 55:
      return 2;
    case 59:
      return sub_1B5249EC0();
    case 60:
      return sub_1B524C308();
    case 61:
      return sub_1B524A878();
    case 64:
      return sub_1B524641C();
    case 66:
      return sub_1B5248354();
    case 67:
      return sub_1B524D86C();
    case 70:
      return sub_1B5246ED8();
    case 73:
      return sub_1B524666C();
    case 74:
      return sub_1B524B6CC();
    case 75:
      uint64_t v9 = *(void *)(v2 + 8);
      if (!*(void *)(v9 + 16)) {
        return 0x646E756B63617473;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_146;
      }
      uint64_t v43 = *(void *)(v9 + 16);
      if (v43) {
        goto LABEL_86;
      }
      goto LABEL_147;
    case 76:
      return sub_1B52472C4();
    case 77:
      char v18 = *(char **)(v2 + 16);
      if (*((void *)v18 + 2) < 3uLL) {
        return 0xD000000000000012;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v51 = *((void *)v18 + 2);
        if (v51)
        {
LABEL_96:
          uint64_t v9 = 0;
          *((void *)v18 + 2) = v51 - 1;
          *(void *)(v2 + 16) = v18;
          return v9;
        }
      }
      else
      {
        char v18 = sub_1B529354C((uint64_t)v18);
        uint64_t v51 = *((void *)v18 + 2);
        if (v51) {
          goto LABEL_96;
        }
      }
      __break(1u);
LABEL_151:
      char v18 = sub_1B51E85E8(0, v4 + 1, 1, v18);
LABEL_122:
      unint64_t v57 = *((void *)v18 + 2);
      unint64_t v56 = *((void *)v18 + 3);
      unint64_t v58 = v57 + 1;
      if (v57 >= v56 >> 1)
      {
        uint64_t v69 = sub_1B51E85E8((char *)(v56 > 1), v57 + 1, 1, v18);
        unint64_t v58 = v57 + 1;
        char v18 = v69;
      }
      uint64_t v9 = 0;
      *((void *)v18 + 2) = v58;
      char v22 = &v18[8 * v57];
      *((_DWORD *)v22 + 8) = v4;
      *((_WORD *)v22 + 18) = WORD2(v4);
LABEL_52:
      char v23 = 1;
LABEL_107:
      v22[38] = v23;
      *(void *)(v2 + 8) = v18;
      return v9;
    case 78:
      return sub_1B5248004();
    case 79:
      return sub_1B524D768();
    case 80:
      return sub_1B524B050();
    case 81:
      return sub_1B524DDB8();
    case 85:
      return sub_1B524A6A0();
    case 86:
      return sub_1B524B80C();
    case 87:
      return sub_1B524DC1C();
    case 92:
      int v52 = *(_DWORD *)(v2 + 4);
      char v18 = *(char **)(v2 + 8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v18 = sub_1B51E85E8(0, *((void *)v18 + 2) + 1, 1, v18);
      }
      unint64_t v54 = *((void *)v18 + 2);
      unint64_t v53 = *((void *)v18 + 3);
      unint64_t v55 = v54 + 1;
      if (v54 >= v53 >> 1)
      {
        uint64_t v68 = sub_1B51E85E8((char *)(v53 > 1), v54 + 1, 1, v18);
        unint64_t v55 = v54 + 1;
        char v18 = v68;
      }
      uint64_t v9 = 0;
      *((void *)v18 + 2) = v55;
      char v22 = &v18[8 * v54];
      *((_WORD *)v22 + 18) = 0;
      *((_DWORD *)v22 + 8) = v52;
      char v23 = 6;
      goto LABEL_107;
    case 93:
      return sub_1B5246D7C();
    case 94:
      return sub_1B524C7E0();
    case 95:
      return sub_1B5248820();
    case 96:
    case 97:
    case 98:
      return v9;
    case 99:
      return sub_1B52481AC();
    case 100:
      return sub_1B524C658();
    default:
      return 0x656E696665646E75;
  }
}

uint64_t sub_1B5278CEC()
{
  long long v1 = (void (*)(unsigned char *, void))sub_1B51D5EA8((uint64_t)v14, *(unsigned int *)(v0 + 4));
  uint64_t v3 = *(void *)(v2 + 24);
  unint64_t v4 = (char *)__swift_mutable_project_boxed_opaque_existential_1(v2, v3);
  uint64_t v6 = sub_1B5261024(v4, v3);
  unint64_t v8 = v7;
  char v10 = v9;
  v1(v14, 0);
  uint64_t v11 = 0xFF000000000000;
  if (v10 != -1)
  {
    uint64_t v12 = sub_1B5277CC4(v6, v8, v10);
    if ((~v12 & 0xFF000000000000) != 0)
    {
      uint64_t v13 = v12;
      sub_1B520ABB8(v6, v8, v10);
      uint64_t v11 = v13;
    }
    else
    {
      uint64_t v11 = sub_1B5278CEC();
      sub_1B520ABB8(v6, v8, v10);
    }
  }
  return v11 & 0xFFFFFFFFFFFFFFLL;
}

uint64_t sub_1B5278E14()
{
  return sub_1B5373338();
}

BOOL sub_1B5278E3C(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_1B5278E48()
{
  return sub_1B5373358();
}

uint64_t sub_1B5278E90()
{
  return sub_1B5278E48();
}

uint64_t sub_1B5278E98()
{
  return sub_1B5278E14();
}

uint64_t sub_1B5278EA0()
{
  return sub_1B5373358();
}

BOOL sub_1B5278EE0(int *a1, int *a2)
{
  return sub_1B5278E3C(*a1, *a2);
}

uint64_t sub_1B5278EEC()
{
  return swift_getWitnessTable();
}

void sub_1B5278F08()
{
  off_1E9D488D8 = &unk_1F0DDCC98;
}

uint64_t sub_1B5278F1C@<X0>(unint64_t a1@<X8>)
{
  unint64_t v2 = sub_1B5372788();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (unint64_t)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v217 = MEMORY[0x1E4FBC860];
  uint64_t v218 = (char *)MEMORY[0x1E4FBC860];
  *(void *)&long long v219 = MEMORY[0x1E4FBC860];
  *((void *)&v219 + 1) = MEMORY[0x1E4FBC860];
  uint64_t v220 = (void *)MEMORY[0x1E4FBC860];
  *(void *)&long long v221 = MEMORY[0x1E4FBC860];
  *((void *)&v221 + 1) = MEMORY[0x1E4FBC860];
  *((void *)&v222 + 1) = sub_1B522DE70(MEMORY[0x1E4FBC860]);
  *(void *)&long long v223 = sub_1B5237FD0(v6);
  *((void *)&v223 + 1) = v6;
  *(void *)&long long v222 = &unk_1F0DDCF60;
  uint64_t v216 = 0;
  __int16 v229 = 0;
  int v228 = 0;
  long long v224 = 0uLL;
  char v230 = 4;
  __int16 v232 = 0;
  int v231 = 1;
  char v233 = 4;
  __int16 v226 = 0;
  int v225 = 2;
  char v227 = 3;
  sub_1B5372768();
  uint64_t v7 = sub_1B53726F8();
  unint64_t v9 = v8;
  uint64_t v12 = *(void (**)(unint64_t, unint64_t))(v3 + 8);
  unint64_t v10 = v3 + 8;
  unint64_t v11 = (unint64_t)v12;
  v12(v5, v2);
  if (v9 >> 60 == 15) {
    goto LABEL_177;
  }
  sub_1B527751C(v7, v9);
  sub_1B51FE548(v7, v9);
  sub_1B5372768();
  uint64_t v13 = sub_1B53726F8();
  unint64_t v15 = v14;
  ((void (*)(unint64_t, unint64_t))v11)(v5, v2);
  if (v15 >> 60 == 15)
  {
LABEL_178:
    __break(1u);
    goto LABEL_179;
  }
  sub_1B527751C(v13, v15);
  sub_1B51FE548(v13, v15);
  sub_1B5372768();
  uint64_t v16 = sub_1B53726F8();
  unint64_t v18 = v17;
  ((void (*)(unint64_t, unint64_t))v11)(v5, v2);
  if (v18 >> 60 == 15)
  {
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
    goto LABEL_182;
  }
  sub_1B527751C(v16, v18);
  sub_1B51FE548(v16, v18);
  unint64_t v19 = (long long *)v219;
  unint64_t v20 = *(void *)(v219 + 16);
  if (HIDWORD(v20)) {
    goto LABEL_164;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_165:
  }
    unint64_t v19 = (long long *)sub_1B51E85D4(0, v20 + 1, 1, v19);
  unint64_t v22 = *((void *)v19 + 2);
  unint64_t v21 = *((void *)v19 + 3);
  if (v22 >= v21 >> 1) {
    unint64_t v19 = (long long *)sub_1B51E85D4((void *)(v21 > 1), v22 + 1, 1, v19);
  }
  unint64_t v214 = &type metadata for SingleBufferInput;
  char v215 = &protocol witness table for SingleBufferInput;
  long long v213 = xmmword_1B538BFE0;
  *((void *)v19 + 2) = v22 + 1;
  sub_1B51E0D0C(&v213, (uint64_t)v19 + 40 * v22 + 32);
  *(void *)&long long v219 = v19;
  unint64_t v23 = sub_1B52380C4(MEMORY[0x1E4FBC860]);
  if (qword_1E9D476B0 != -1)
  {
    unint64_t v201 = v23;
    swift_once();
    unint64_t v23 = v201;
  }
  unint64_t v211 = v10;
  unint64_t v212 = v5;
  uint64_t v205 = (void *)a1;
  unint64_t v24 = *((void *)off_1E9D488D8 + 2);
  unint64_t v209 = v2;
  char v210 = (void (*)(unint64_t, unint64_t))v11;
  if (v24)
  {
    uint64_t v208 = (long long *)v23;
    uint64_t v206 = swift_bridgeObjectRetain();
    unint64_t v5 = v206 + 40;
    while (1)
    {
      unint64_t v207 = v24;
      unint64_t v20 = *(void *)(v5 - 8);
      swift_bridgeObjectRetain();
      unint64_t v26 = v212;
      sub_1B5372758();
      uint64_t v27 = sub_1B53726F8();
      unint64_t v11 = v28;
      swift_bridgeObjectRelease();
      v210(v26, v2);
      if (v11 >> 60 == 15)
      {
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
        goto LABEL_178;
      }
      uint64_t v29 = *((void *)&v222 + 1);
      if (*(void *)(*((void *)&v222 + 1) + 16))
      {
        sub_1B51D4BB8(v27, v11);
        uint64_t v30 = sub_1B5230668(v27, v11);
        if (v31)
        {
          unint64_t v10 = *(unsigned int *)(*(void *)(v29 + 56) + 4 * v30);
          sub_1B51FE548(v27, v11);
          sub_1B51FE548(v27, v11);
          goto LABEL_35;
        }
        sub_1B51FE548(v27, v11);
      }
      unint64_t v19 = (long long *)*((void *)&v221 + 1);
      a1 = *(void *)(*((void *)&v221 + 1) + 16);
      if (HIDWORD(a1)) {
        goto LABEL_152;
      }
      sub_1B51D4BB8(v27, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = (long long *)sub_1B51E849C(0, a1 + 1, 1, (char *)v19);
      }
      unint64_t v33 = *((void *)v19 + 2);
      unint64_t v32 = *((void *)v19 + 3);
      unint64_t v20 = v33 + 1;
      if (v33 >= v32 >> 1) {
        unint64_t v19 = (long long *)sub_1B51E849C((char *)(v32 > 1), v33 + 1, 1, (char *)v19);
      }
      *((void *)v19 + 2) = v20;
      uint64_t v34 = &v19[v33];
      *((void *)v34 + 4) = v27;
      *((void *)v34 + 5) = v11;
      *((void *)&v221 + 1) = v19;
      sub_1B51D4BB8(v27, v11);
      unint64_t v19 = (long long *)*((void *)&v222 + 1);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v213 = v19;
      *((void *)&v222 + 1) = 0x8000000000000000;
      unint64_t v2 = sub_1B5230668(v27, v11);
      uint64_t v37 = *((void *)v19 + 2);
      BOOL v38 = (v36 & 1) == 0;
      uint64_t v39 = v37 + v38;
      if (__OFADD__(v37, v38)) {
        goto LABEL_153;
      }
      unint64_t v20 = v36;
      if (*((void *)v19 + 3) >= v39)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1B5236014();
        }
      }
      else
      {
        sub_1B5230D08(v39, isUniquelyReferenced_nonNull_native);
        uint64_t v40 = sub_1B5230668(v27, v11);
        if ((v20 & 1) != (v41 & 1)) {
          goto LABEL_189;
        }
        unint64_t v2 = v40;
      }
      unint64_t v10 = a1;
      unint64_t v19 = (long long *)v213;
      if (v20)
      {
        *(_DWORD *)(*(void *)(v213 + 56) + 4 * v2) = a1;
      }
      else
      {
        *(void *)(v213 + 8 * (v2 >> 6) + 64) |= 1 << v2;
        uint64_t v42 = (uint64_t *)(*((void *)v19 + 6) + 16 * v2);
        *uint64_t v42 = v27;
        v42[1] = v11;
        *(_DWORD *)(*((void *)v19 + 7) + 4 * v2) = a1;
        uint64_t v43 = *((void *)v19 + 2);
        BOOL v44 = __OFADD__(v43, 1);
        uint64_t v45 = v43 + 1;
        if (v44) {
          goto LABEL_161;
        }
        *((void *)v19 + 2) = v45;
        sub_1B51D4BB8(v27, v11);
      }
      *((void *)&v222 + 1) = v19;
      swift_bridgeObjectRelease();
      sub_1B51FE548(v27, v11);
      sub_1B51FE548(v27, v11);
      unint64_t v2 = v209;
LABEL_35:
      unint64_t v19 = v208;
      unint64_t v11 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v213 = v19;
      a1 = v10 | 0x3000000000000;
      unint64_t v47 = sub_1B5230728(v10 | 0x3000000000000);
      uint64_t v48 = *((void *)v19 + 2);
      BOOL v49 = (v46 & 1) == 0;
      uint64_t v50 = v48 + v49;
      if (__OFADD__(v48, v49))
      {
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      unint64_t v20 = v46;
      if (*((void *)v19 + 3) >= v50)
      {
        if ((v11 & 1) == 0)
        {
          unint64_t v19 = &v213;
          sub_1B52361C4();
        }
      }
      else
      {
        sub_1B523100C(v50, v11);
        unint64_t v19 = (long long *)v213;
        unint64_t v51 = sub_1B5230728(v10 | 0x3000000000000);
        if ((v20 & 1) != (v52 & 1)) {
          goto LABEL_188;
        }
        unint64_t v47 = v51;
      }
      unint64_t v53 = (void *)v213;
      uint64_t v208 = (long long *)v213;
      if (v20)
      {
        uint64_t v25 = *(void *)(v213 + 56) + 8 * v47;
        *(_WORD *)(v25 + 4) = 0;
        *(_DWORD *)uint64_t v25 = 55;
        *(unsigned char *)(v25 + 6) = 5;
      }
      else
      {
        *(void *)(v213 + 8 * (v47 >> 6) + 64) |= 1 << v47;
        uint64_t v54 = v53[6] + 8 * v47;
        *(_WORD *)(v54 + 4) = 0;
        *(_DWORD *)uint64_t v54 = v10;
        *(unsigned char *)(v54 + 6) = 3;
        uint64_t v55 = v53[7] + 8 * v47;
        *(_WORD *)(v55 + 4) = 0;
        *(_DWORD *)uint64_t v55 = 55;
        *(unsigned char *)(v55 + 6) = 5;
        uint64_t v56 = v53[2];
        BOOL v44 = __OFADD__(v56, 1);
        uint64_t v57 = v56 + 1;
        if (v44) {
          goto LABEL_158;
        }
        v53[2] = v57;
      }
      v5 += 16;
      swift_bridgeObjectRelease();
      unint64_t v24 = v207 - 1;
      unint64_t v10 = v211;
      if (v207 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v11 = (unint64_t)v210;
        unint64_t v23 = (unint64_t)v208;
        break;
      }
    }
  }
  unint64_t v58 = v220;
  unint64_t v59 = v220[2];
  if (HIDWORD(v59))
  {
    __break(1u);
  }
  else
  {
    uint64_t v208 = (long long *)v23;
    swift_bridgeObjectRetain_n();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_47;
    }
  }
  unint64_t v58 = sub_1B51E85C0(0, v59 + 1, 1, v58);
LABEL_47:
  unint64_t v61 = v58[2];
  unint64_t v60 = v58[3];
  uint64_t v62 = v208;
  if (v61 >= v60 >> 1)
  {
    uint64_t v202 = sub_1B51E85C0((void *)(v60 > 1), v61 + 1, 1, v58);
    uint64_t v62 = v208;
    unint64_t v58 = v202;
  }
  _OWORD v58[2] = v61 + 1;
  v58[v61 + 4] = v62;
  swift_bridgeObjectRelease();
  uint64_t v220 = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47A20);
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_1B538C490;
  unint64_t v64 = v212;
  sub_1B5372768();
  uint64_t v65 = sub_1B53726F8();
  unint64_t v67 = v66;
  ((void (*)(unint64_t, unint64_t))v11)(v64, v2);
  if (v67 >> 60 == 15) {
    goto LABEL_180;
  }
  int v68 = sub_1B527751C(v65, v67);
  sub_1B51FE548(v65, v67);
  *(_WORD *)(v63 + 36) = 0;
  *(_DWORD *)(v63 + 32) = v68;
  *(unsigned char *)(v63 + 38) = 3;
  *(_WORD *)(v63 + 44) = 0;
  *(_DWORD *)(v63 + 40) = 100;
  *(unsigned char *)(v63 + 46) = 5;
  uint64_t v69 = (void *)*((void *)&v219 + 1);
  unint64_t v70 = *(void *)(*((void *)&v219 + 1) + 16);
  if (HIDWORD(v70))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_52;
    }
  }
  uint64_t v69 = sub_1B51E85AC(0, v70 + 1, 1, v69);
LABEL_52:
  unint64_t v72 = v69[2];
  unint64_t v71 = v69[3];
  if (v72 >= v71 >> 1) {
    uint64_t v69 = sub_1B51E85AC((void *)(v71 > 1), v72 + 1, 1, v69);
  }
  v69[2] = v72 + 1;
  v69[v72 + 4] = v63;
  swift_bridgeObjectRelease();
  *((void *)&v219 + 1) = v69;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D489E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B538C120;
  __int16 v74 = v226;
  char v75 = v227;
  *(_DWORD *)(inited + 32) = v225;
  *(_WORD *)(inited + 36) = v74;
  *(unsigned char *)(inited + 38) = v75;
  *(_DWORD *)(inited + 40) = v59;
  *(_WORD *)(inited + 44) = WORD2(v59);
  *(unsigned char *)(inited + 46) = 8;
  unint64_t v76 = v212;
  sub_1B5372768();
  uint64_t v77 = sub_1B53726F8();
  unint64_t v79 = v78;
  uint64_t v80 = v210;
  v210(v76, v2);
  if (v79 >> 60 == 15) {
    goto LABEL_181;
  }
  int v81 = sub_1B527751C(v77, v79);
  sub_1B51FE548(v77, v79);
  *(_WORD *)(inited + 52) = 0;
  *(_DWORD *)(inited + 48) = v81;
  *(unsigned char *)(inited + 54) = 3;
  *(_WORD *)(inited + 60) = 0;
  *(_DWORD *)(inited + 56) = 0;
  *(unsigned char *)(inited + 62) = 0;
  sub_1B5372768();
  uint64_t v82 = sub_1B53726F8();
  unint64_t v84 = v83;
  v80(v76, v2);
  if (v84 >> 60 == 15)
  {
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  uint64_t v85 = v70 | 0x400000000;
  int v86 = sub_1B527751C(v82, v84);
  sub_1B51FE548(v82, v84);
  *(_WORD *)(inited + 68) = 0;
  *(_DWORD *)(inited + 64) = v86;
  *(unsigned char *)(inited + 70) = 3;
  *(_WORD *)(inited + 76) = WORD2(v85);
  *(_DWORD *)(inited + 72) = v85;
  *(unsigned char *)(inited + 78) = 7;
  sub_1B5372768();
  uint64_t v87 = sub_1B53726F8();
  unint64_t v89 = v88;
  v80(v76, v2);
  if (v89 >> 60 == 15)
  {
LABEL_183:
    __break(1u);
    goto LABEL_184;
  }
  int v90 = sub_1B527751C(v87, v89);
  sub_1B51FE548(v87, v89);
  *(_WORD *)(inited + 84) = 0;
  *(_DWORD *)(inited + 80) = v90;
  *(unsigned char *)(inited + 86) = 3;
  *(_WORD *)(inited + 92) = 0;
  *(_DWORD *)(inited + 88) = 1;
  *(unsigned char *)(inited + 94) = 1;
  sub_1B5372768();
  uint64_t v91 = sub_1B53726F8();
  unint64_t v93 = v92;
  v80(v76, v2);
  if (v93 >> 60 == 15)
  {
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  int v94 = sub_1B527751C(v91, v93);
  sub_1B51FE548(v91, v93);
  *(_WORD *)(inited + 100) = 0;
  *(_DWORD *)(inited + 96) = v94;
  *(unsigned char *)(inited + 102) = 3;
  *(_WORD *)(inited + 108) = 0;
  *(_DWORD *)(inited + 104) = 0;
  *(unsigned char *)(inited + 110) = 10;
  sub_1B5372768();
  uint64_t v95 = sub_1B53726F8();
  unint64_t v97 = v96;
  v80(v76, v2);
  if (v97 >> 60 == 15)
  {
LABEL_185:
    __break(1u);
    goto LABEL_186;
  }
  int v98 = sub_1B527751C(v95, v97);
  sub_1B51FE548(v95, v97);
  *(_WORD *)(inited + 116) = 0;
  *(_DWORD *)(inited + 112) = v98;
  *(unsigned char *)(inited + 118) = 3;
  *(_WORD *)(inited + 124) = 0;
  *(_DWORD *)(inited + 120) = 1;
  *(unsigned char *)(inited + 126) = 8;
  sub_1B5372768();
  uint64_t v99 = sub_1B53726F8();
  unint64_t v101 = v100;
  v80(v76, v2);
  if (v101 >> 60 == 15)
  {
LABEL_186:
    __break(1u);
    goto LABEL_187;
  }
  int v102 = sub_1B527751C(v99, v101);
  sub_1B51FE548(v99, v101);
  *(_WORD *)(inited + 132) = 0;
  *(_DWORD *)(inited + 128) = v102;
  *(unsigned char *)(inited + 134) = 3;
  *(_WORD *)(inited + 140) = 0;
  *(_DWORD *)(inited + 136) = 1;
  *(unsigned char *)(inited + 142) = 0;
  sub_1B5372768();
  uint64_t v103 = sub_1B53726F8();
  unint64_t v105 = v104;
  v80(v76, v2);
  if (v105 >> 60 != 15)
  {
    int v106 = sub_1B527751C(v103, v105);
    sub_1B51FE548(v103, v105);
    *(_WORD *)(inited + 148) = 0;
    *(_DWORD *)(inited + 144) = v106;
    *(unsigned char *)(inited + 150) = 3;
    *(_WORD *)(inited + 156) = 0;
    *(_DWORD *)(inited + 152) = 2;
    *(unsigned char *)(inited + 158) = 8;
    unint64_t v10 = sub_1B52380C4(inited);
    swift_setDeallocating();
    uint64_t v107 = qword_1F0DDCE98;
    if (qword_1F0DDCE98)
    {
      unint64_t v11 = (unint64_t)&byte_1F0DDCEA8;
      do
      {
        unsigned int v109 = *(unsigned __int8 *)v11++;
        a1 = v109;
        sub_1B5286094(v109);
        unint64_t v20 = v110;
        sub_1B5372768();
        unint64_t v2 = sub_1B53726F8();
        unint64_t v112 = v111;
        swift_bridgeObjectRelease();
        v210(v76, v209);
        if (v112 >> 60 == 15) {
          goto LABEL_175;
        }
        uint64_t v113 = *((void *)&v222 + 1);
        uint64_t v114 = *(void *)(*((void *)&v222 + 1) + 16);
        uint64_t v206 = v107;
        unint64_t v207 = a1;
        if (v114)
        {
          sub_1B51D4BB8(v2, v112);
          uint64_t v115 = sub_1B5230668(v2, v112);
          if (v116)
          {
            unint64_t v5 = *(unsigned int *)(*(void *)(v113 + 56) + 4 * v115);
            goto LABEL_86;
          }
          sub_1B51FE548(v2, v112);
        }
        unint64_t v19 = (long long *)*((void *)&v221 + 1);
        unint64_t v5 = *(void *)(*((void *)&v221 + 1) + 16);
        if (HIDWORD(v5)) {
          goto LABEL_154;
        }
        sub_1B51D4BB8(v2, v112);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v19 = (long long *)sub_1B51E849C(0, v5 + 1, 1, (char *)v19);
        }
        unint64_t v118 = *((void *)v19 + 2);
        unint64_t v117 = *((void *)v19 + 3);
        if (v118 >= v117 >> 1) {
          unint64_t v19 = (long long *)sub_1B51E849C((char *)(v117 > 1), v118 + 1, 1, (char *)v19);
        }
        *((void *)v19 + 2) = v118 + 1;
        char v119 = &v19[v118];
        *((void *)v119 + 4) = v2;
        *((void *)v119 + 5) = v112;
        *((void *)&v221 + 1) = v19;
        sub_1B51D4BB8(v2, v112);
        unint64_t v19 = (long long *)*((void *)&v222 + 1);
        a1 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v213 = v19;
        *((void *)&v222 + 1) = 0x8000000000000000;
        unint64_t v20 = sub_1B5230668(v2, v112);
        uint64_t v121 = *((void *)v19 + 2);
        BOOL v122 = (v120 & 1) == 0;
        uint64_t v123 = v121 + v122;
        if (__OFADD__(v121, v122)) {
          goto LABEL_155;
        }
        char v124 = v120;
        if (*((void *)v19 + 3) >= v123)
        {
          if ((a1 & 1) == 0) {
            sub_1B5236014();
          }
        }
        else
        {
          sub_1B5230D08(v123, a1);
          uint64_t v125 = sub_1B5230668(v2, v112);
          if ((v124 & 1) != (v126 & 1)) {
            goto LABEL_189;
          }
          unint64_t v20 = v125;
        }
        unint64_t v5 = v5;
        unint64_t v19 = (long long *)v213;
        if (v124)
        {
          *(_DWORD *)(*(void *)(v213 + 56) + 4 * v20) = v5;
        }
        else
        {
          *(void *)(v213 + 8 * (v20 >> 6) + 64) |= 1 << v20;
          long long v127 = (unint64_t *)(*((void *)v19 + 6) + 16 * v20);
          *long long v127 = v2;
          v127[1] = v112;
          *(_DWORD *)(*((void *)v19 + 7) + 4 * v20) = v5;
          uint64_t v128 = *((void *)v19 + 2);
          BOOL v44 = __OFADD__(v128, 1);
          uint64_t v129 = v128 + 1;
          if (v44) {
            goto LABEL_162;
          }
          *((void *)v19 + 2) = v129;
          sub_1B51D4BB8(v2, v112);
        }
        *((void *)&v222 + 1) = v19;
        swift_bridgeObjectRelease();
LABEL_86:
        sub_1B51FE548(v2, v112);
        sub_1B51FE548(v2, v112);
        char v130 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v213 = v10;
        a1 = v5 | 0x3000000000000;
        unint64_t v19 = (long long *)v10;
        unint64_t v132 = sub_1B5230728(v5 | 0x3000000000000);
        uint64_t v133 = *(void *)(v10 + 16);
        BOOL v134 = (v131 & 1) == 0;
        uint64_t v135 = v133 + v134;
        if (__OFADD__(v133, v134)) {
          goto LABEL_150;
        }
        unint64_t v20 = v131;
        if (*(void *)(v10 + 24) >= v135)
        {
          a1 = v207;
          if (v130)
          {
            unint64_t v10 = v213;
            if (v131) {
              goto LABEL_63;
            }
          }
          else
          {
            unint64_t v19 = &v213;
            sub_1B52361C4();
            unint64_t v10 = v213;
            if (v20) {
              goto LABEL_63;
            }
          }
        }
        else
        {
          sub_1B523100C(v135, v130);
          unint64_t v19 = (long long *)v213;
          unint64_t v136 = sub_1B5230728(v5 | 0x3000000000000);
          if ((v20 & 1) != (v137 & 1)) {
            goto LABEL_188;
          }
          unint64_t v132 = v136;
          a1 = v207;
          unint64_t v10 = v213;
          if (v20)
          {
LABEL_63:
            uint64_t v108 = *(void *)(v10 + 56) + 8 * v132;
            *(_WORD *)(v108 + 4) = 0;
            *(_DWORD *)uint64_t v108 = a1;
            *(unsigned char *)(v108 + 6) = 5;
            goto LABEL_64;
          }
        }
        *(void *)(v10 + 8 * (v132 >> 6) + 64) |= 1 << v132;
        uint64_t v138 = *(void *)(v10 + 48) + 8 * v132;
        *(_WORD *)(v138 + 4) = 0;
        *(_DWORD *)uint64_t v138 = v5;
        *(unsigned char *)(v138 + 6) = 3;
        uint64_t v139 = *(void *)(v10 + 56) + 8 * v132;
        *(_WORD *)(v139 + 4) = 0;
        *(_DWORD *)uint64_t v139 = a1;
        *(unsigned char *)(v139 + 6) = 5;
        uint64_t v140 = *(void *)(v10 + 16);
        BOOL v44 = __OFADD__(v140, 1);
        uint64_t v141 = v140 + 1;
        if (v44) {
          goto LABEL_159;
        }
        *(void *)(v10 + 16) = v141;
LABEL_64:
        swift_bridgeObjectRelease();
        uint64_t v107 = v206 - 1;
        unint64_t v76 = v212;
      }
      while (v206 != 1);
    }
    if (qword_1E9D476B8 != -1) {
      swift_once();
    }
    a1 = *(void *)(qword_1E9D53AB0 + 16);
    if (a1)
    {
      uint64_t v204 = swift_bridgeObjectRetain();
      unint64_t v5 = v204 + 48;
      while (1)
      {
        uint64_t v143 = *(unsigned __int8 *)v5;
        unint64_t v20 = *(void *)(v5 - 16);
        swift_bridgeObjectRetain();
        unint64_t v144 = v212;
        sub_1B5372768();
        unint64_t v2 = sub_1B53726F8();
        unint64_t v146 = v145;
        swift_bridgeObjectRelease();
        v210(v144, v209);
        if (v146 >> 60 == 15) {
          goto LABEL_176;
        }
        uint64_t v147 = *((void *)&v222 + 1);
        uint64_t v148 = *(void *)(*((void *)&v222 + 1) + 16);
        uint64_t v206 = v143;
        unint64_t v207 = a1;
        if (v148)
        {
          sub_1B51D4BB8(v2, v146);
          uint64_t v149 = sub_1B5230668(v2, v146);
          if (v150)
          {
            unint64_t v11 = *(unsigned int *)(*(void *)(v147 + 56) + 4 * v149);
            goto LABEL_124;
          }
          sub_1B51FE548(v2, v146);
        }
        unint64_t v19 = (long long *)*((void *)&v221 + 1);
        unint64_t v11 = *(void *)(*((void *)&v221 + 1) + 16);
        if (HIDWORD(v11)) {
          goto LABEL_156;
        }
        sub_1B51D4BB8(v2, v146);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v19 = (long long *)sub_1B51E849C(0, v11 + 1, 1, (char *)v19);
        }
        unint64_t v152 = *((void *)v19 + 2);
        unint64_t v151 = *((void *)v19 + 3);
        if (v152 >= v151 >> 1) {
          unint64_t v19 = (long long *)sub_1B51E849C((char *)(v151 > 1), v152 + 1, 1, (char *)v19);
        }
        *((void *)v19 + 2) = v152 + 1;
        float64x2_t v153 = &v19[v152];
        *((void *)v153 + 4) = v2;
        *((void *)v153 + 5) = v146;
        *((void *)&v221 + 1) = v19;
        sub_1B51D4BB8(v2, v146);
        unint64_t v19 = (long long *)*((void *)&v222 + 1);
        a1 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v213 = v19;
        *((void *)&v222 + 1) = 0x8000000000000000;
        unint64_t v20 = sub_1B5230668(v2, v146);
        uint64_t v155 = *((void *)v19 + 2);
        BOOL v156 = (v154 & 1) == 0;
        uint64_t v157 = v155 + v156;
        if (__OFADD__(v155, v156)) {
          goto LABEL_157;
        }
        char v158 = v154;
        if (*((void *)v19 + 3) >= v157)
        {
          if ((a1 & 1) == 0) {
            sub_1B5236014();
          }
        }
        else
        {
          sub_1B5230D08(v157, a1);
          uint64_t v159 = sub_1B5230668(v2, v146);
          if ((v158 & 1) != (v160 & 1)) {
            goto LABEL_189;
          }
          unint64_t v20 = v159;
        }
        unint64_t v11 = v11;
        unint64_t v19 = (long long *)v213;
        if (v158)
        {
          *(_DWORD *)(*(void *)(v213 + 56) + 4 * v20) = v11;
        }
        else
        {
          *(void *)(v213 + 8 * (v20 >> 6) + 64) |= 1 << v20;
          v161 = (unint64_t *)(*((void *)v19 + 6) + 16 * v20);
          unint64_t *v161 = v2;
          v161[1] = v146;
          *(_DWORD *)(*((void *)v19 + 7) + 4 * v20) = v11;
          uint64_t v162 = *((void *)v19 + 2);
          BOOL v44 = __OFADD__(v162, 1);
          uint64_t v163 = v162 + 1;
          if (v44) {
            goto LABEL_163;
          }
          *((void *)v19 + 2) = v163;
          sub_1B51D4BB8(v2, v146);
        }
        *((void *)&v222 + 1) = v19;
        swift_bridgeObjectRelease();
LABEL_124:
        sub_1B51FE548(v2, v146);
        sub_1B51FE548(v2, v146);
        char v164 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v213 = v10;
        a1 = v11 | 0x3000000000000;
        unint64_t v19 = (long long *)v10;
        unint64_t v166 = sub_1B5230728(v11 | 0x3000000000000);
        uint64_t v167 = *(void *)(v10 + 16);
        BOOL v168 = (v165 & 1) == 0;
        uint64_t v169 = v167 + v168;
        if (__OFADD__(v167, v168)) {
          goto LABEL_151;
        }
        unint64_t v20 = v165;
        if (*(void *)(v10 + 24) >= v169)
        {
          a1 = v207;
          if (v164)
          {
            unint64_t v10 = v213;
            if ((v165 & 1) == 0) {
              goto LABEL_131;
            }
          }
          else
          {
            unint64_t v19 = &v213;
            sub_1B52361C4();
            unint64_t v10 = v213;
            if ((v20 & 1) == 0) {
              goto LABEL_131;
            }
          }
        }
        else
        {
          sub_1B523100C(v169, v164);
          unint64_t v19 = (long long *)v213;
          unint64_t v170 = sub_1B5230728(v11 | 0x3000000000000);
          if ((v20 & 1) != (v171 & 1)) {
            goto LABEL_188;
          }
          unint64_t v166 = v170;
          a1 = v207;
          unint64_t v10 = v213;
          if ((v20 & 1) == 0)
          {
LABEL_131:
            *(void *)(v10 + 8 * (v166 >> 6) + 64) |= 1 << v166;
            uint64_t v172 = *(void *)(v10 + 48) + 8 * v166;
            *(_WORD *)(v172 + 4) = 0;
            *(_DWORD *)uint64_t v172 = v11;
            *(unsigned char *)(v172 + 6) = 3;
            uint64_t v173 = *(void *)(v10 + 56) + 8 * v166;
            *(_WORD *)(v173 + 4) = 0;
            *(_DWORD *)uint64_t v173 = v206;
            *(unsigned char *)(v173 + 6) = 5;
            uint64_t v174 = *(void *)(v10 + 16);
            BOOL v44 = __OFADD__(v174, 1);
            uint64_t v175 = v174 + 1;
            if (v44) {
              goto LABEL_160;
            }
            *(void *)(v10 + 16) = v175;
            goto LABEL_102;
          }
        }
        uint64_t v142 = *(void *)(v10 + 56) + 8 * v166;
        *(_WORD *)(v142 + 4) = 0;
        *(_DWORD *)uint64_t v142 = v206;
        *(unsigned char *)(v142 + 6) = 5;
LABEL_102:
        v5 += 24;
        swift_bridgeObjectRelease();
        if (!--a1)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v176 = v220;
    unint64_t v177 = v220[2];
    if (HIDWORD(v177))
    {
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_138;
      }
    }
    uint64_t v176 = sub_1B51E85C0(0, v177 + 1, 1, v176);
LABEL_138:
    unint64_t v179 = v176[2];
    unint64_t v178 = v176[3];
    if (v179 >= v178 >> 1) {
      uint64_t v176 = sub_1B51E85C0((void *)(v178 > 1), v179 + 1, 1, v176);
    }
    v176[2] = v179 + 1;
    v176[v179 + 4] = v10;
    swift_bridgeObjectRelease();
    uint64_t v220 = v176;
    char v180 = v218;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v180 = sub_1B51E85A0(0, *((void *)v180 + 2) + 1, 1, v180);
    }
    unint64_t v182 = *((void *)v180 + 2);
    unint64_t v181 = *((void *)v180 + 3);
    unint64_t v183 = v182 + 1;
    if (v182 >= v181 >> 1) {
      char v180 = sub_1B51E85A0((char *)(v181 > 1), v182 + 1, 1, v180);
    }
    *((void *)v180 + 2) = v183;
    *(_DWORD *)&v180[4 * v182 + 32] = v177;
    unint64_t v184 = sub_1B52380C4(MEMORY[0x1E4FBC860]);
    unint64_t v185 = v176[2];
    if (HIDWORD(v185))
    {
      __break(1u);
    }
    else
    {
      unint64_t v183 = v184;
      unint64_t v10 = v176[3];
      unint64_t v177 = v185 + 1;
      swift_bridgeObjectRetain();
      if (v185 < v10 >> 1)
      {
LABEL_146:
        v176[2] = v177;
        v176[v185 + 4] = v183;
        swift_bridgeObjectRelease();
        unint64_t v187 = *((void *)v180 + 2);
        unint64_t v186 = *((void *)v180 + 3);
        if (v187 >= v186 >> 1) {
          char v180 = sub_1B51E85A0((char *)(v186 > 1), v187 + 1, 1, v180);
        }
        *((void *)v180 + 2) = v187 + 1;
        *(_DWORD *)&v180[4 * v187 + 32] = v185;
        uint64_t v188 = v217;
        int v189 = v225;
        __int16 v190 = v226;
        char v191 = v227;
        int v192 = v228;
        __int16 v193 = v229;
        char v194 = v230;
        int v195 = v231;
        __int16 v196 = v232;
        char v197 = v233;
        uint64_t result = (uint64_t)v205;
        *uint64_t v205 = v216;
        *(void *)(result + 8) = v188;
        *(void *)(result + 16) = v180;
        *(_OWORD *)(result + 24) = v219;
        *(void *)(result + 40) = v176;
        long long v199 = v222;
        *(_OWORD *)(result + 48) = v221;
        *(_OWORD *)(result + 64) = v199;
        long long v200 = v224;
        *(_OWORD *)(result + 80) = v223;
        *(_OWORD *)(result + 96) = v200;
        *(_WORD *)(result + 116) = v190;
        *(_DWORD *)(result + 112) = v189;
        *(unsigned char *)(result + 118) = v191;
        *(_WORD *)(result + 124) = v193;
        *(_DWORD *)(result + 120) = v192;
        *(unsigned char *)(result + 126) = v194;
        *(_WORD *)(result + 132) = v196;
        *(_DWORD *)(result + 128) = v195;
        *(unsigned char *)(result + 134) = v197;
        return result;
      }
    }
    uint64_t v176 = sub_1B51E85C0((void *)(v10 > 1), v177, 1, v176);
    goto LABEL_146;
  }
LABEL_187:
  __break(1u);
LABEL_188:
  sub_1B5373288();
  __break(1u);
LABEL_189:
  uint64_t result = sub_1B5373288();
  __break(1u);
  return result;
}

uint64_t sub_1B527A6EC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1 || a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *sub_1B527A710@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 0;
  return result;
}

unsigned char *sub_1B527A724@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 2;
  return result;
}

uint64_t sub_1B527A73C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1B521D030(0, v1, 0);
  uint64_t v2 = v34;
  uint64_t v5 = sub_1B5281314(v3);
  uint64_t v6 = 0;
  uint64_t v7 = v3 + 64;
  char v8 = *(unsigned char *)(v3 + 32);
  uint64_t v29 = v3 + 80;
  int64_t v30 = v1;
  int v31 = v4;
  uint64_t v32 = v3 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << v8)
  {
    unint64_t v12 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v3 + 36) != v4) {
      goto LABEL_26;
    }
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v5);
    uint64_t v14 = v13[1];
    if (!qword_1F0DDD038) {
      goto LABEL_30;
    }
    uint64_t v33 = v6;
    uint64_t v15 = v3;
    __int16 v16 = *(_WORD *)(*(void *)(v3 + 48) + 2 * v5);
    uint64_t v17 = *v13;
    int v18 = byte_1F0DDD048;
    uint64_t result = swift_bridgeObjectRetain();
    if (v18 == 56) {
      goto LABEL_31;
    }
    unint64_t v21 = *(void *)(v34 + 16);
    unint64_t v20 = *(void *)(v34 + 24);
    unint64_t v22 = v21 + 1;
    if (v21 >= v20 >> 1)
    {
      sub_1B521D030((char *)(v20 > 1), v21 + 1, 1);
      unint64_t v22 = v21 + 1;
    }
    *(void *)(v34 + 16) = v22;
    uint64_t v23 = v34 + 32 * v21;
    *(_WORD *)(v23 + 32) = v16;
    *(void *)(v23 + 40) = v17;
    *(void *)(v23 + 48) = v14;
    *(_DWORD *)(v23 + 56) = 1;
    *(_WORD *)(v23 + 60) = 0;
    char v8 = *(unsigned char *)(v15 + 32);
    unint64_t v9 = 1 << v8;
    if (v5 >= 1 << v8) {
      goto LABEL_27;
    }
    uint64_t v7 = v32;
    uint64_t v24 = *(void *)(v32 + 8 * v12);
    if ((v24 & (1 << v5)) == 0) {
      goto LABEL_28;
    }
    uint64_t v3 = v15;
    int v4 = v31;
    if (*(_DWORD *)(v15 + 36) != v31) {
      goto LABEL_29;
    }
    unint64_t v25 = v24 & (-2 << (v5 & 0x3F));
    if (v25)
    {
      unint64_t v9 = __clz(__rbit64(v25)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v30;
      uint64_t v11 = v33;
    }
    else
    {
      unint64_t v26 = v12 + 1;
      unint64_t v27 = (v9 + 63) >> 6;
      int64_t v10 = v30;
      uint64_t v11 = v33;
      if (v12 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v32 + 8 * v26);
        if (v28)
        {
LABEL_22:
          unint64_t v9 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v12)
          {
            unint64_t v28 = *(void *)(v29 + 8 * v12++);
            if (v28)
            {
              unint64_t v26 = v12 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v6 = v11 + 1;
    uint64_t v5 = v9;
    if (v6 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = swift_bridgeObjectRetain();
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1B527A99C(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B51DA988((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1B5280A64(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B527AA08@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v294 = a4;
  uint64_t v287 = sub_1B5372788();
  uint64_t v9 = *(void *)(v287 - 8);
  MEMORY[0x1F4188790](v287);
  v286 = (char *)&v268 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v295 = sub_1B523850C(MEMORY[0x1E4FBC860]);
  char v318 = 1;
  char v317 = 1;
  char v316 = 1;
  char v315 = 1;
  char v313 = 1;
  char v310 = 1;
  unint64_t v11 = *(void *)(a3 + 16);
  uint64_t v285 = v9;
  if (!v11)
  {
    uint64_t v290 = 0;
    LODWORD(v26) = 0;
    uint64_t v293 = 0;
    unint64_t v27 = 0;
    uint64_t v288 = 0;
    double v20 = 0.0;
    double v13 = 0.0;
    goto LABEL_61;
  }
  unint64_t v12 = sub_1B5230568(0x6F666E49746E6F46, 0xE800000000000000, 48);
  double v13 = 0.0;
  if ((v14 & 1) == 0
    || (uint64_t v15 = *(void *)(a3 + 56) + 24 * (void)v12,
        LODWORD(v16) = *(unsigned __int8 *)(v15 + 16),
        (v16 & 0xF0) != 0x80))
  {
    LODWORD(v26) = 0;
    uint64_t v290 = 0;
    double v20 = 0.0;
    goto LABEL_50;
  }
  unint64_t v17 = *(void *)v15;
  unint64_t v18 = *(void *)(v15 + 8);
  uint64_t v19 = *(void *)(*(void *)v15 + 16);
  swift_bridgeObjectRetain();
  double v20 = 0.0;
  if (!v19)
  {
    uint64_t v290 = 0;
    LODWORD(v26) = 0;
    goto LABEL_49;
  }
  unint64_t v21 = sub_1B5230568(0x5064657869467369, 0xEC00000068637469, 48);
  if (v22)
  {
    uint64_t v23 = *(void *)(v17 + 56) + 24 * (void)v21;
    uint64_t v24 = *(void *)v23;
    int v25 = *(unsigned __int8 *)(v23 + 16) >> 4;
    if (v25 == 1)
    {
      LODWORD(v26) = v24 != 0;
      if (*(void *)(v17 + 16)) {
        goto LABEL_13;
      }
LABEL_20:
      uint64_t v290 = 0;
      goto LABEL_49;
    }
    if (!v25)
    {
      LODWORD(v26) = v24 & 1;
      if (!*(void *)(v17 + 16)) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
  }
  LODWORD(v26) = 0;
  if (!*(void *)(v17 + 16)) {
    goto LABEL_20;
  }
LABEL_13:
  unint64_t v28 = sub_1B5230568(0x6E4163696C617449, 0xEB00000000656C67, 48);
  unint64_t v296 = v18;
  if ((v29 & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v30 = *(void *)(v17 + 56) + 24 * (void)v28;
  uint64_t v31 = *(void *)v30;
  int v32 = *(unsigned __int8 *)(v30 + 16) >> 4;
  if (v32 == 2)
  {
    if ((~v31 & 0x7FF0000000000000) == 0 && (v31 & 0xFFFFFFFFFFFFFLL) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    if (v32 != 1) {
      goto LABEL_28;
    }
    uint64_t v31 = sub_1B5280A04(v31);
    if (v33) {
      goto LABEL_28;
    }
  }
  if ((v31 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
LABEL_28:
    uint64_t v35 = a2;
    uint64_t v290 = 0;
    goto LABEL_29;
  }
  uint64_t v290 = v31;
  uint64_t v35 = a2;
  char v310 = 0;
LABEL_29:
  if (!*(void *)(v17 + 16)) {
    goto LABEL_48;
  }
  unint64_t v36 = sub_1B5230568(0xD000000000000011, 0x80000001B537CE70, 48);
  if (v37)
  {
    uint64_t v38 = *(void *)(v17 + 56) + 24 * (void)v36;
    uint64_t v39 = *(uint64_t *)v38;
    int v40 = *(unsigned __int8 *)(v38 + 16) >> 4;
    if (v40 == 2)
    {
      if ((v39 & 0xFFFFFFFFFFFFFLL) != 0 && (~v39 & 0x7FF0000000000000) == 0) {
        double v13 = 0.0;
      }
      else {
        double v13 = *(double *)&v39;
      }
    }
    else if (v40 == 1)
    {
      uint64_t v41 = sub_1B5280A04(v39);
      if ((v42 & 1) == 0) {
        double v13 = *(double *)&v41;
      }
    }
  }
  if (!*(void *)(v17 + 16))
  {
LABEL_48:
    a2 = v35;
    unint64_t v18 = v296;
    goto LABEL_49;
  }
  BOOL v44 = sub_1B5230568(0xD000000000000012, 0x80000001B537CE90, 48);
  if ((v45 & 1) == 0) {
    goto LABEL_142;
  }
  uint64_t v46 = *(void *)(v17 + 56) + 24 * (void)v44;
  uint64_t v47 = *(uint64_t *)v46;
  int v48 = *(unsigned __int8 *)(v46 + 16) >> 4;
  if (v48 == 2)
  {
    if ((v47 & 0xFFFFFFFFFFFFFLL) != 0 && (~v47 & 0x7FF0000000000000) == 0) {
      double v20 = 0.0;
    }
    else {
      double v20 = *(double *)&v47;
    }
LABEL_142:
    a2 = v35;
    unint64_t v18 = v296;
LABEL_143:
    if (!*(void *)(v17 + 16)) {
      goto LABEL_49;
    }
    goto LABEL_144;
  }
  a2 = v35;
  if (v48 == 1)
  {
    uint64_t v49 = sub_1B5280A04(v47);
    unint64_t v18 = v296;
    if ((v50 & 1) == 0)
    {
      double v20 = *(double *)&v49;
      if (!*(void *)(v17 + 16)) {
        goto LABEL_49;
      }
      goto LABEL_144;
    }
    goto LABEL_143;
  }
  unint64_t v18 = v296;
  if (*(void *)(v17 + 16))
  {
LABEL_144:
    uint64_t v162 = sub_1B5230568(0x6867697279706F43, 0xE900000000000074, 48);
    uint64_t v279 = a2;
    unint64_t v280 = a1;
    LODWORD(v293) = v16;
    if ((v163 & 1) == 0) {
      goto LABEL_167;
    }
    uint64_t v164 = *(void *)(v17 + 56) + 24 * (void)v162;
    uint64_t v121 = *(void *)(v164 + 8);
    LODWORD(v79) = *(unsigned __int8 *)(v164 + 16);
    unint64_t v292 = *(void *)v164;
    sub_1B51DFDC4(v292, v121, v79);
    unint64_t v165 = v295;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v297 = v165;
    unint64_t v123 = sub_1B5230870(0);
    uint64_t v168 = *(void *)(v165 + 16);
    BOOL v169 = (v167 & 1) == 0;
    uint64_t v170 = v168 + v169;
    if (__OFADD__(v168, v169)) {
      goto LABEL_267;
    }
    LOBYTE(a1) = v167;
    if (*(void *)(v165 + 24) >= v170)
    {
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_152;
      }
      goto LABEL_269;
    }
    sub_1B5232040(v170, isUniquelyReferenced_nonNull_native);
    unint64_t v171 = sub_1B5230870(0);
    if ((a1 & 1) == (v172 & 1))
    {
      unint64_t v123 = v171;
      goto LABEL_152;
    }
    goto LABEL_281;
  }
LABEL_49:
  sub_1B51DFE20(v17, v18, v16);
LABEL_50:
  unint64_t v11 = *(void *)(a3 + 16);
  if (!v11)
  {
    uint64_t v293 = 0;
    goto LABEL_60;
  }
  unint64_t v51 = sub_1B5230568(0x786F4242746E6F46, 0xE800000000000000, 48);
  if ((v52 & 1) == 0 || (unint64_t v53 = (unsigned char *)(*(void *)(a3 + 56) + 24 * (void)v51), (v53[16] & 0xF0) != 0x70))
  {
    uint64_t v293 = 0;
    unint64_t v11 = 0;
LABEL_60:
    unint64_t v27 = 0;
    uint64_t v288 = 0;
    goto LABEL_61;
  }
  int v54 = (int)v26;
  uint64_t v55 = a2;
  uint64_t v56 = *(void *)v53;
  if (*(void *)(*(void *)v53 + 16) == 4)
  {
    unint64_t v280 = a1;
    uint64_t v57 = *(void *)(v56 + 32);
    unint64_t v58 = *(void *)(v56 + 40);
    unsigned int v59 = *(unsigned __int8 *)(v56 + 48);
    if (v59 >> 4 == 2)
    {
      BOOL v145 = (~v57 & 0x7FF0000000000000) != 0 || (v57 & 0xFFFFFFFFFFFFFLL) == 0;
      uint64_t v62 = *(void *)(v56 + 32);
      if (!v145) {
        goto LABEL_123;
      }
    }
    else
    {
      if (v59 >> 4 != 1)
      {
LABEL_161:
        uint64_t v293 = 0;
        unint64_t v11 = 0;
        unint64_t v27 = 0;
        uint64_t v288 = 0;
        a2 = v55;
        a1 = v280;
        LODWORD(v26) = v54;
        goto LABEL_61;
      }
      uint64_t v60 = sub_1B5280A04(*(void *)(v56 + 32));
      if (v61) {
        goto LABEL_123;
      }
      uint64_t v62 = v60;
    }
    uint64_t v147 = *(void *)(v56 + 56);
    unint64_t v146 = *(void *)(v56 + 64);
    LODWORD(v296) = *(unsigned __int8 *)(v56 + 72);
    if (v296 >> 4 == 2)
    {
      unint64_t v289 = v146;
      BOOL v154 = (~v147 & 0x7FF0000000000000) != 0 || (v147 & 0xFFFFFFFFFFFFFLL) == 0;
      uint64_t v284 = v147;
      uint64_t v148 = v147;
      if (!v154)
      {
LABEL_135:
        sub_1B51DFDC4(v57, v58, v59);
        uint64_t v150 = v284;
LABEL_159:
        unint64_t v151 = v289;
        unsigned __int8 v152 = v296;
        goto LABEL_160;
      }
LABEL_131:
      uint64_t v156 = *(void *)(v56 + 80);
      unint64_t v155 = *(void *)(v56 + 88);
      unsigned int v157 = *(unsigned __int8 *)(v56 + 96);
      if (v157 >> 4 == 2)
      {
        unint64_t v283 = *(void *)(v56 + 88);
        unint64_t v160 = v156;
        if ((~v156 & 0x7FF0000000000000) != 0 || (unint64_t v160 = v156, (v156 & 0xFFFFFFFFFFFFFLL) == 0))
        {
LABEL_183:
          uint64_t v198 = *(void *)(v56 + 104);
          unint64_t v197 = *(void *)(v56 + 112);
          unsigned int v199 = *(unsigned __int8 *)(v56 + 120);
          uint64_t v282 = v156;
          if (v199 >> 4 == 2)
          {
            unint64_t v277 = v197;
            LODWORD(v278) = v199;
            LODWORD(v281) = v157;
            unint64_t v291 = v160;
            unint64_t v292 = v148;
            uint64_t v293 = v62;
            uint64_t v201 = v198;
            a2 = v55;
            LODWORD(v26) = v54;
            if ((~v198 & 0x7FF0000000000000) != 0) {
              goto LABEL_242;
            }
            uint64_t v201 = v198;
            if ((v198 & 0xFFFFFFFFFFFFFLL) == 0) {
              goto LABEL_242;
            }
            uint64_t v258 = v198;
            sub_1B51DFDC4(v57, v58, v59);
            sub_1B51DFDC4(v284, v289, v296);
            sub_1B51DFDC4(v282, v283, v281);
            uint64_t v259 = v258;
          }
          else
          {
            LODWORD(v26) = v54;
            if (v199 >> 4 != 1)
            {
              sub_1B51DFDC4(v57, v58, v59);
              sub_1B51DFDC4(v284, v289, v296);
              sub_1B51DFDC4(v282, v283, v157);
              uint64_t v293 = 0;
              unint64_t v11 = 0;
              unint64_t v27 = 0;
              uint64_t v288 = 0;
              a2 = v55;
LABEL_260:
              a1 = v280;
              goto LABEL_61;
            }
            unint64_t v277 = v197;
            LODWORD(v278) = v199;
            LODWORD(v281) = v157;
            unint64_t v291 = v160;
            unint64_t v292 = v148;
            uint64_t v293 = v62;
            uint64_t v200 = v198;
            uint64_t v201 = sub_1B5280A04(v198);
            a2 = v55;
            if ((v202 & 1) == 0)
            {
              uint64_t v198 = v200;
LABEL_242:
              uint64_t v288 = v201;
              uint64_t v260 = v198;
              sub_1B51DFDC4(v57, v58, v59);
              sub_1B51DFDC4(v284, v289, v296);
              sub_1B51DFDC4(v282, v283, v281);
              sub_1B51DFDC4(v260, v277, v278);
              a1 = v280;
              unint64_t v27 = v291;
              unint64_t v11 = v292;
              goto LABEL_61;
            }
            sub_1B51DFDC4(v57, v58, v59);
            sub_1B51DFDC4(v284, v289, v296);
            sub_1B51DFDC4(v282, v283, v281);
            uint64_t v259 = v200;
          }
          sub_1B51DFDC4(v259, v277, v278);
          uint64_t v293 = 0;
          unint64_t v11 = 0;
          unint64_t v27 = 0;
          uint64_t v288 = 0;
          goto LABEL_260;
        }
        unsigned __int8 v195 = v59;
        uint64_t v196 = v156;
        sub_1B51DFDC4(v57, v58, v195);
        sub_1B51DFDC4(v284, v289, v296);
        uint64_t v150 = v196;
        goto LABEL_226;
      }
      if (v157 >> 4 == 1)
      {
        unint64_t v292 = v148;
        uint64_t v293 = v62;
        uint64_t v282 = v156;
        unint64_t v283 = v155;
        uint64_t v158 = sub_1B5280A04(v156);
        if ((v159 & 1) == 0)
        {
          unint64_t v160 = v158;
          uint64_t v148 = v292;
          uint64_t v62 = v293;
          uint64_t v156 = v282;
          goto LABEL_183;
        }
        sub_1B51DFDC4(v57, v58, v59);
        sub_1B51DFDC4(v284, v289, v296);
        uint64_t v150 = v282;
LABEL_226:
        unint64_t v151 = v283;
        unsigned __int8 v152 = v157;
        goto LABEL_160;
      }
      goto LABEL_135;
    }
    if (v296 >> 4 == 1)
    {
      uint64_t v293 = v62;
      unint64_t v289 = v146;
      uint64_t v148 = sub_1B5280A04(v147);
      if (v149)
      {
        sub_1B51DFDC4(v57, v58, v59);
        uint64_t v150 = v147;
        goto LABEL_159;
      }
      uint64_t v284 = v147;
      uint64_t v62 = v293;
      goto LABEL_131;
    }
LABEL_123:
    uint64_t v150 = v57;
    unint64_t v151 = v58;
    unsigned __int8 v152 = v59;
LABEL_160:
    sub_1B51DFDC4(v150, v151, v152);
    goto LABEL_161;
  }
  uint64_t v293 = 0;
  unint64_t v11 = 0;
  unint64_t v27 = 0;
  uint64_t v288 = 0;
  LODWORD(v26) = v54;
LABEL_61:
  unint64_t v291 = v27;
  unint64_t v292 = v11;
  if (*(void *)(a3 + 16))
  {
    uint64_t v63 = sub_1B5230568(0x65746176697250, 0xE700000000000000, 48);
    if (v64)
    {
      uint64_t v65 = *(void *)(a3 + 56) + 24 * (void)v63;
      unsigned __int8 v66 = *(unsigned char *)(v65 + 16);
      if ((v66 & 0xF0) == 0x80)
      {
        LODWORD(v284) = v26;
        unint64_t v26 = (unsigned __int8 *)a1;
        uint64_t v67 = *(void *)v65;
        if (*(void *)(*(void *)v65 + 16))
        {
          unint64_t v68 = *(void *)(v65 + 8);
          sub_1B51DFDC4(*(void *)v65, v68, v66);
          uint64_t v69 = sub_1B5230568(0x7372627553, 0xE500000000000000, 48);
          if (v70)
          {
            uint64_t v279 = a2;
            uint64_t v71 = *(void *)(v67 + 56) + 24 * (void)v69;
            uint64_t v72 = *(void *)v71;
            unint64_t v73 = *(void *)(v71 + 8);
            unsigned __int8 v74 = *(unsigned char *)(v71 + 16);
            sub_1B51DFDC4(*(void *)v71, v73, v74);
            sub_1B51DFE20(v67, v68, v66);
            if ((v74 & 0xF0) == 0x70)
            {
              uint64_t v75 = sub_1B52415D0((uint64_t)&unk_1F0DF4DB8);
              unint64_t v77 = v76;
              sub_1B51D4BB8(v75, v76);
              unint64_t v289 = sub_1B5283234(v72, v75, v77);
              unint64_t v296 = 0;
              sub_1B51D4C64(v75, v77);
              sub_1B51D4C64(v75, v77);
              sub_1B51DFE20(v72, v73, v74);
            }
            else
            {
              sub_1B51DFE20(v72, v73, v74);
              unint64_t v296 = 0;
              unint64_t v289 = MEMORY[0x1E4FBC860];
            }
            a2 = v279;
            goto LABEL_110;
          }
          sub_1B51DFE20(v67, v68, v66);
        }
        unint64_t v296 = 0;
        unint64_t v289 = MEMORY[0x1E4FBC860];
LABEL_110:
        a1 = (unint64_t)v26;
        LODWORD(v26) = v284;
        goto LABEL_69;
      }
    }
  }
  unint64_t v296 = 0;
  unint64_t v289 = MEMORY[0x1E4FBC860];
LABEL_69:
  uint64_t v78 = sub_1B5372A88();
  unint64_t v79 = v78;
  uint64_t v80 = 0;
  *(void *)(v78 + 16) = 256;
  *(_OWORD *)(v78 + 32) = xmmword_1B538BFE0;
  do
  {
    int v81 = (_OWORD *)(v78 + v80);
    v81[3] = xmmword_1B538BFE0;
    v81[4] = xmmword_1B538BFE0;
    v81[5] = xmmword_1B538BFE0;
    v81[6] = xmmword_1B538BFE0;
    v80 += 64;
  }
  while (v80 != 4032);
  *(_OWORD *)(v78 + 4080) = xmmword_1B538BFE0;
  *(_OWORD *)(v78 + 4096) = xmmword_1B538BFE0;
  *(_OWORD *)(v78 + 4112) = xmmword_1B538BFE0;
  uint64_t v82 = (void *)sub_1B5372A88();
  uint64_t v83 = (uint64_t)v82;
  uint64_t v84 = 0;
  v82[2] = 256;
  _OWORD v82[4] = 0x666564746F6E2ELL;
  v82[5] = 0xE700000000000000;
  do
  {
    uint64_t v85 = &v82[v84];
    v85[3] = xmmword_1B538FAF0;
    v85[4] = xmmword_1B538FAF0;
    v85[5] = xmmword_1B538FAF0;
    v85[6] = xmmword_1B538FAF0;
    v84 += 8;
  }
  while (v84 != 504);
  v82[510] = 0x666564746F6E2ELL;
  v82[511] = 0xE700000000000000;
  v82[512] = 0x666564746F6E2ELL;
  v82[513] = 0xE700000000000000;
  v82[514] = 0x666564746F6E2ELL;
  v82[515] = 0xE700000000000000;
  if (!*(void *)(a3 + 16)
    || (int v86 = sub_1B5230568(0x676E69646F636E45, 0xE800000000000000, 48), (v87 & 1) == 0)
    || (uint64_t v88 = *(void *)(a3 + 56) + 24 * (void)v86, (*(unsigned char *)(v88 + 16) & 0xF0) != 0x70)
    || !*(void *)(a3 + 16))
  {
    swift_bridgeObjectRelease();
    char v99 = v294;
    goto LABEL_84;
  }
  int v273 = *(unsigned __int8 *)(v88 + 16);
  LODWORD(v284) = v26;
  uint64_t v89 = *(void *)v88;
  unint64_t v90 = *(void *)(v88 + 8);
  swift_bridgeObjectRetain();
  uint64_t v91 = sub_1B5230568(0x6972745372616843, 0xEB0000000073676ELL, 48);
  if ((v92 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v142 = v89;
    unint64_t v143 = v90;
    goto LABEL_112;
  }
  unint64_t v277 = v90;
  uint64_t v278 = v89;
  uint64_t v93 = *(void *)(a3 + 56) + 24 * (void)v91;
  uint64_t v95 = *(void *)v93;
  unint64_t v94 = *(void *)(v93 + 8);
  int v96 = *(unsigned __int8 *)(v93 + 16);
  sub_1B51DFDC4(*(void *)v93, v94, *(unsigned char *)(v93 + 16));
  swift_bridgeObjectRelease();
  if ((v96 & 0xF0) == 0x80)
  {
    uint64_t v276 = v95;
    unint64_t v271 = v94;
    unint64_t v97 = v277;
    unint64_t v98 = *(void *)(v278 + 16);
    if (v98 >= 0x100) {
      unint64_t v98 = 256;
    }
    char v99 = v294;
    LOBYTE(v26) = v284;
    uint64_t v282 = v98;
    if (!v98)
    {
      sub_1B51DFE20(v278, v277, v273);
      sub_1B51DFE20(v276, v271, v96);
      goto LABEL_84;
    }
    HIDWORD(v268) = v96;
    v270 = (void (**)(char *, uint64_t))(v285 + 8);
    swift_bridgeObjectRetain();
    uint64_t v100 = v278;
    unint64_t v101 = 0;
    unint64_t v26 = (unsigned __int8 *)(v278 + 48);
    int v102 = (unint64_t *)(v79 + 40);
    uint64_t v103 = v83 + 40;
    uint64_t v279 = a2;
    unint64_t v280 = a1;
    while (1)
    {
      a3 = *v26;
      if ((a3 & 0xF0) != 0x30) {
        goto LABEL_89;
      }
      uint64_t v285 = v103;
      v281 = v102;
      a1 = *((void *)v26 - 2);
      uint64_t v121 = *((void *)v26 - 1);
      unint64_t v17 = v101;
      sub_1B51DFDC4(a1, v121, a3);
      unint64_t v122 = *(void *)(v83 + 16);
      swift_bridgeObjectRetain();
      unint64_t v283 = v17;
      if (v17 >= v122)
      {
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
        while (2)
        {
          __break(1u);
LABEL_269:
          unint64_t v264 = v123;
          sub_1B52368D8();
          unint64_t v123 = v264;
LABEL_152:
          unint64_t v18 = v296;
          unsigned __int8 v173 = v79;
          unsigned int v174 = v79 >> 4;
          if (a1)
          {
            uint64_t v175 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v123);
            uint64_t v16 = *v175;
            uint64_t v176 = v175[1];
          }
          else
          {
            uint64_t v16 = 0;
            uint64_t v176 = 0;
          }
          unint64_t v291 = v123;
          if (v174 == 5 || v174 == 3)
          {
            swift_bridgeObjectRelease();
            LOBYTE(v16) = v293;
            uint64_t v177 = v292;
LABEL_163:
            unint64_t v295 = v297;
            if (a1)
            {
              unint64_t v178 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v291);
              *unint64_t v178 = v177;
              v178[1] = v121;
            }
            else
            {
              sub_1B5233314(v291, 0, v177, v121, (void *)v297);
            }
          }
          else
          {
            sub_1B51DFE20(v292, v121, v173);
            uint64_t v177 = v16;
            uint64_t v121 = v176;
            LOBYTE(v16) = v293;
            if (v176) {
              goto LABEL_163;
            }
            unint64_t v295 = v297;
            if (a1) {
              sub_1B51D9910(v291, v297);
            }
          }
          a2 = v279;
          a1 = v280;
LABEL_167:
          if (!*(void *)(v17 + 16)) {
            goto LABEL_49;
          }
          unint64_t v179 = sub_1B5230568(0x614E796C696D6146, 0xEA0000000000656DLL, 48);
          if ((v180 & 1) == 0) {
            goto LABEL_192;
          }
          uint64_t v181 = *(void *)(v17 + 56) + 24 * (void)v179;
          uint64_t v121 = *(void *)(v181 + 8);
          LODWORD(v79) = *(unsigned __int8 *)(v181 + 16);
          unint64_t v292 = *(void *)v181;
          sub_1B51DFDC4(v292, v121, v79);
          unint64_t v182 = v295;
          char v183 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v297 = v182;
          unint64_t v123 = sub_1B5230870(1u);
          uint64_t v185 = *(void *)(v182 + 16);
          BOOL v186 = (v184 & 1) == 0;
          uint64_t v187 = v185 + v186;
          if (__OFADD__(v185, v186)) {
            continue;
          }
          break;
        }
        LOBYTE(a1) = v184;
        if (*(void *)(v182 + 24) < v187)
        {
          sub_1B5232040(v187, v183);
          unint64_t v188 = sub_1B5230870(1u);
          if ((a1 & 1) != (v189 & 1)) {
            goto LABEL_281;
          }
          unint64_t v123 = v188;
          goto LABEL_174;
        }
        if ((v183 & 1) == 0) {
          goto LABEL_271;
        }
LABEL_174:
        while (2)
        {
          unint64_t v18 = v296;
          unsigned __int8 v190 = v79;
          unsigned int v191 = v79 >> 4;
          if (a1)
          {
            int v192 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v123);
            uint64_t v16 = *v192;
            uint64_t v193 = v192[1];
          }
          else
          {
            uint64_t v16 = 0;
            uint64_t v193 = 0;
          }
          unint64_t v291 = v123;
          if (v191 == 5 || v191 == 3)
          {
            swift_bridgeObjectRelease();
            LOBYTE(v16) = v293;
            uint64_t v194 = v292;
LABEL_188:
            unint64_t v295 = v297;
            if (a1)
            {
              uint64_t v203 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v291);
              *uint64_t v203 = v194;
              v203[1] = v121;
            }
            else
            {
              sub_1B5233314(v291, 1, v194, v121, (void *)v297);
            }
          }
          else
          {
            sub_1B51DFE20(v292, v121, v190);
            uint64_t v194 = v16;
            uint64_t v121 = v193;
            LOBYTE(v16) = v293;
            if (v193) {
              goto LABEL_188;
            }
            unint64_t v295 = v297;
            if (a1) {
              sub_1B51D9910(v291, v297);
            }
          }
          a2 = v279;
          a1 = v280;
LABEL_192:
          if (!*(void *)(v17 + 16)) {
            goto LABEL_49;
          }
          uint64_t v204 = sub_1B5230568(0x746867696557, 0xE600000000000000, 48);
          if (v205)
          {
            uint64_t v206 = *(void *)(v17 + 56) + 24 * (void)v204;
            uint64_t v121 = *(void *)(v206 + 8);
            LODWORD(v79) = *(unsigned __int8 *)(v206 + 16);
            unint64_t v292 = *(void *)v206;
            sub_1B51DFDC4(v292, v121, v79);
            unint64_t v207 = v295;
            char v208 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v297 = v207;
            unint64_t v123 = sub_1B5230870(2u);
            uint64_t v210 = *(void *)(v207 + 16);
            BOOL v211 = (v209 & 1) == 0;
            uint64_t v212 = v210 + v211;
            if (__OFADD__(v210, v211))
            {
              __break(1u);
LABEL_271:
              unint64_t v265 = v123;
              sub_1B52368D8();
              unint64_t v123 = v265;
              continue;
            }
            LOBYTE(a1) = v209;
            if (*(void *)(v207 + 24) < v212)
            {
              sub_1B5232040(v212, v208);
              unint64_t v213 = sub_1B5230870(2u);
              if ((a1 & 1) != (v214 & 1)) {
                goto LABEL_281;
              }
              unint64_t v123 = v213;
              goto LABEL_199;
            }
            if ((v208 & 1) == 0) {
              goto LABEL_273;
            }
LABEL_199:
            unint64_t v18 = v296;
            unsigned __int8 v215 = v79;
            unsigned int v216 = v79 >> 4;
            if (a1)
            {
              uint64_t v217 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v123);
              uint64_t v16 = *v217;
              uint64_t v218 = v217[1];
            }
            else
            {
              uint64_t v16 = 0;
              uint64_t v218 = 0;
            }
            unint64_t v291 = v123;
            if (v216 == 5 || v216 == 3)
            {
              swift_bridgeObjectRelease();
              LOBYTE(v16) = v293;
              uint64_t v219 = v292;
LABEL_206:
              unint64_t v295 = v297;
              if (a1)
              {
                uint64_t v220 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v291);
                *uint64_t v220 = v219;
                v220[1] = v121;
              }
              else
              {
                sub_1B5233314(v291, 2, v219, v121, (void *)v297);
              }
            }
            else
            {
              sub_1B51DFE20(v292, v121, v215);
              uint64_t v219 = v16;
              uint64_t v121 = v218;
              LOBYTE(v16) = v293;
              if (v218) {
                goto LABEL_206;
              }
              unint64_t v295 = v297;
              if (a1) {
                sub_1B51D9910(v291, v297);
              }
            }
            a2 = v279;
            a1 = v280;
          }
          break;
        }
        if (!*(void *)(v17 + 16)) {
          goto LABEL_49;
        }
        long long v221 = sub_1B5230568(0x656D614E6C6C7546, 0xE800000000000000, 48);
        if ((v222 & 1) == 0) {
          goto LABEL_232;
        }
        uint64_t v223 = *(void *)(v17 + 56) + 24 * (void)v221;
        uint64_t v121 = *(void *)(v223 + 8);
        LODWORD(v79) = *(unsigned __int8 *)(v223 + 16);
        unint64_t v292 = *(void *)v223;
        sub_1B51DFDC4(v292, v121, v79);
        unint64_t v224 = v295;
        char v225 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v297 = v224;
        unint64_t v123 = sub_1B5230870(4u);
        uint64_t v227 = *(void *)(v224 + 16);
        BOOL v228 = (v226 & 1) == 0;
        uint64_t v229 = v227 + v228;
        if (__OFADD__(v227, v228))
        {
          __break(1u);
LABEL_273:
          unint64_t v266 = v123;
          sub_1B52368D8();
          unint64_t v123 = v266;
          goto LABEL_199;
        }
        LOBYTE(v230) = v226;
        if (*(void *)(v224 + 24) < v229)
        {
          sub_1B5232040(v229, v225);
          unint64_t v231 = sub_1B5230870(4u);
          if ((v230 & 1) == (v232 & 1))
          {
            unint64_t v123 = v231;
            goto LABEL_219;
          }
          goto LABEL_281;
        }
        if ((v225 & 1) == 0) {
          goto LABEL_275;
        }
LABEL_219:
        while (2)
        {
          unint64_t v18 = v296;
          unint64_t v295 = v121;
          unsigned __int8 v233 = v79;
          unsigned int v234 = v79 >> 4;
          if (v230)
          {
            char v235 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v123);
            uint64_t v16 = *v235;
            uint64_t v236 = v235[1];
          }
          else
          {
            uint64_t v16 = 0;
            uint64_t v236 = 0;
          }
          unint64_t v237 = v123;
          if (v234 == 5 || v234 == 3)
          {
            swift_bridgeObjectRelease();
            LOBYTE(v16) = v293;
            uint64_t v238 = v295;
            uint64_t v239 = v292;
LABEL_228:
            unint64_t v295 = v297;
            if (v230)
            {
              uint64_t v240 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v237);
              *uint64_t v240 = v239;
              v240[1] = v238;
            }
            else
            {
              sub_1B5233314(v237, 4, v239, v238, (void *)v297);
            }
          }
          else
          {
            sub_1B51DFE20(v292, v295, v233);
            uint64_t v239 = v16;
            uint64_t v238 = v236;
            LOBYTE(v16) = v293;
            if (v236) {
              goto LABEL_228;
            }
            unint64_t v295 = v297;
            if (v230) {
              sub_1B51D9910(v237, v297);
            }
          }
          a2 = v279;
          a1 = v280;
LABEL_232:
          if (!*(void *)(v17 + 16)) {
            goto LABEL_49;
          }
          char v241 = sub_1B5230568(0x6E6F6973726576, 0xE700000000000000, 48);
          if ((v242 & 1) == 0) {
            goto LABEL_49;
          }
          uint64_t v243 = *(void *)(v17 + 56) + 24 * (void)v241;
          unint64_t v244 = v18;
          uint64_t v245 = *(void *)v243;
          unsigned int v230 = *(unsigned __int8 *)(v243 + 16);
          uint64_t v246 = *(void *)v243;
          unint64_t v292 = *(void *)(v243 + 8);
          sub_1B51DFDC4(v246, v292, v230);
          sub_1B51DFE20(v17, v244, v16);
          unint64_t v247 = v295;
          uint64_t v121 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v297 = v247;
          unint64_t v79 = sub_1B5230870(5u);
          uint64_t v249 = *(void *)(v247 + 16);
          BOOL v250 = (v248 & 1) == 0;
          uint64_t v251 = v249 + v250;
          if (__OFADD__(v249, v250))
          {
            __break(1u);
LABEL_275:
            unint64_t v267 = v123;
            sub_1B52368D8();
            unint64_t v123 = v267;
            continue;
          }
          break;
        }
        char v252 = v248;
        if (*(void *)(v247 + 24) >= v251)
        {
          if (v121)
          {
            unsigned int v255 = v230 >> 4;
            if ((v248 & 1) == 0) {
              goto LABEL_238;
            }
          }
          else
          {
            sub_1B52368D8();
            unsigned int v255 = v230 >> 4;
            if ((v252 & 1) == 0) {
              goto LABEL_238;
            }
          }
LABEL_248:
          v261 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v79);
          uint64_t v256 = *v261;
          unint64_t v257 = v261[1];
          goto LABEL_249;
        }
        sub_1B5232040(v251, v121);
        unint64_t v253 = sub_1B5230870(5u);
        if ((v252 & 1) != (v254 & 1)) {
          goto LABEL_281;
        }
        unint64_t v79 = v253;
        unsigned int v255 = v230 >> 4;
        if (v252) {
          goto LABEL_248;
        }
LABEL_238:
        uint64_t v256 = 0;
        unint64_t v257 = 0;
LABEL_249:
        if (v255 == 5 || v255 == 3)
        {
          swift_bridgeObjectRelease();
          a2 = v279;
          a1 = v280;
LABEL_253:
          unint64_t v295 = v297;
          if (v252)
          {
            v262 = (uint64_t *)(*(void *)(v297 + 56) + 16 * v79);
            unint64_t v263 = v292;
            uint64_t *v262 = v245;
            v262[1] = v263;
          }
          else
          {
            sub_1B5233314(v79, 5, v245, v292, (void *)v297);
          }
        }
        else
        {
          sub_1B51DFE20(v245, v292, v230);
          uint64_t v245 = v256;
          unint64_t v292 = v257;
          a2 = v279;
          a1 = v280;
          if (v257) {
            goto LABEL_253;
          }
          unint64_t v295 = v297;
          if (v252) {
            sub_1B51D9910(v79, v295);
          }
        }
        goto LABEL_50;
      }
      char v124 = (uint64_t *)v285;
      *(void *)(v285 - 8) = a1;
      *char v124 = v121;
      swift_bridgeObjectRelease();
      uint64_t v125 = v276;
      if (*(void *)(v276 + 16) && (char v126 = sub_1B5230568(a1, v121, 48), (v127 & 1) != 0))
      {
        uint64_t v128 = *(void *)(v125 + 56) + 24 * (void)v126;
        uint64_t v129 = *(void *)v128;
        unsigned int v130 = *(unsigned __int8 *)(v128 + 16);
        unint64_t v274 = *(void *)(v128 + 8);
        uint64_t v275 = v129;
        sub_1B51DFDC4(v129, v274, v130);
        sub_1B51DFE20(a1, v121, a3);
        if (v130 >> 4 == 6) {
          goto LABEL_98;
        }
        a1 = v280;
        if (v130 >> 4 == 5)
        {
          unint64_t v131 = v286;
          sub_1B5372758();
          unint64_t v133 = v274;
          uint64_t v132 = v275;
          uint64_t v269 = sub_1B53726F8();
          unint64_t v272 = v134;
          (*v270)(v131, v287);
          sub_1B51DFE20(v132, v133, v130);
          if (v272 >> 60 != 15)
          {
            unint64_t v274 = v272;
            uint64_t v275 = v269;
LABEL_98:
            unint64_t v17 = v296;
            unint64_t v136 = v274;
            uint64_t v135 = v275;
            sub_1B51D4BB8(v275, v274);
            sub_1B522551C(v135, v136, 4, (uint64_t)&v305);
            if (v17) {
              goto LABEL_280;
            }
            unint64_t v296 = 0;
            if (*((void *)&v305 + 1) >> 60 == 11)
            {
              __break(1u);
              goto LABEL_279;
            }
            long long v297 = v305;
            long long v298 = v306;
            LOWORD(v299) = (_WORD)v307;
            uint64_t v137 = sub_1B5222460();
            a3 = v138;
            a1 = *((void *)&v298 + 1);
            uint64_t v121 = v298;
            sub_1B51FE548(v297, *((unint64_t *)&v297 + 1));
            sub_1B51FE548(v121, a1);
            if (v283 >= *(void *)(v79 + 16)) {
              goto LABEL_266;
            }
            uint64_t v139 = v281;
            uint64_t v140 = *(v281 - 1);
            unint64_t v141 = *v281;
            *(v281 - 1) = v137;
            *uint64_t v139 = a3;
            sub_1B51D4C64(v140, v141);
            sub_1B51D4C64(v275, v274);
            int v102 = v139;
            a2 = v279;
            a1 = v280;
            unint64_t v97 = v277;
            uint64_t v100 = v278;
            unint64_t v101 = v283;
            goto LABEL_88;
          }
        }
        else
        {
          sub_1B51DFE20(v275, v274, v130);
        }
        a2 = v279;
      }
      else
      {
        sub_1B51DFE20(a1, v121, a3);
        a2 = v279;
        a1 = v280;
      }
      unint64_t v97 = v277;
      uint64_t v100 = v278;
      unint64_t v101 = v283;
      int v102 = v281;
LABEL_88:
      uint64_t v103 = v285;
LABEL_89:
      ++v101;
      v26 += 24;
      v102 += 2;
      v103 += 16;
      if (v282 == v101)
      {
        unsigned __int8 v153 = v273;
        sub_1B51DFE20(v100, v97, v273);
        sub_1B51DFE20(v100, v97, v153);
        uint64_t v142 = v276;
        unint64_t v143 = v271;
        unsigned __int8 v144 = BYTE4(v268);
        goto LABEL_113;
      }
    }
  }
  sub_1B51DFE20(v95, v94, v96);
  unint64_t v143 = v277;
  uint64_t v142 = v278;
LABEL_112:
  unsigned __int8 v144 = v273;
LABEL_113:
  sub_1B51DFE20(v142, v143, v144);
  char v99 = v294;
  LOBYTE(v26) = v284;
LABEL_84:
  unint64_t v104 = v296;
  unint64_t v105 = (char *)sub_1B527C358(v83);
  swift_bridgeObjectRelease();
  uint64_t v308 = v105;
  swift_bridgeObjectRetain();
  sub_1B527A99C(&v308);
  if (!v104)
  {
    swift_bridgeObjectRelease();
    int v106 = v308;
    uint64_t v107 = sub_1B523E534((uint64_t)v308);
    *((void *)&v306 + 1) = &type metadata for Type1Encoding;
    uint64_t v307 = &off_1F0DF6CE8;
    *(void *)&long long v305 = v106;
    uint64_t v304 = 0;
    memset(v303, 0, sizeof(v303));
    long long v300 = 0u;
    long long v301 = 0u;
    *(void *)&long long v302 = 0;
    *((void *)&v302 + 1) = 2048;
    *(void *)&long long v297 = v107;
    sub_1B51E0D0C(&v305, (uint64_t)&v297 + 8);
    uint64_t result = sub_1B5283904((uint64_t)v303, (uint64_t)&v300);
    long long v109 = v298;
    *(_OWORD *)(a5 + 200) = v299;
    long long v110 = v301;
    *(_OWORD *)(a5 + 216) = v300;
    *(_OWORD *)(a5 + 232) = v110;
    *(_OWORD *)(a5 + 248) = v302;
    *(_OWORD *)(a5 + 168) = v297;
    *(_OWORD *)(a5 + 184) = v109;
    long long v111 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(a5 + 96) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(a5 + 112) = v111;
    *(void *)(a5 + 127) = *(void *)(a1 + 127);
    long long v112 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(a5 + 48) = v112;
    long long v113 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(a5 + 64) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(a5 + 80) = v113;
    long long v114 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a5 = *(_OWORD *)a1;
    *(_OWORD *)(a5 + 16) = v114;
    *(_WORD *)(a5 + 140) = WORD2(a2);
    *(_DWORD *)(a5 + 136) = a2;
    *(unsigned char *)(a5 + 142) = BYTE6(a2);
    *(void *)(a5 + 144) = v295;
    *(void *)(a5 + 152) = v79;
    *(void *)(a5 + 160) = v289;
    char v115 = v318;
    *(_DWORD *)(a5 + 329) = v297;
    *(_DWORD *)(a5 + 332) = *(_DWORD *)((char *)&v297 + 3);
    char v116 = v317;
    *(_DWORD *)(a5 + 353) = v305;
    *(_DWORD *)(a5 + 356) = *(_DWORD *)((char *)&v305 + 3);
    char v117 = v316;
    *(_DWORD *)(a5 + 393) = v303[0];
    *(_DWORD *)(a5 + 396) = *(_DWORD *)((char *)v303 + 3);
    char v118 = v315;
    *(_DWORD *)(a5 + 433) = *(_DWORD *)v314;
    *(_DWORD *)(a5 + 436) = *(_DWORD *)&v314[3];
    char v119 = v313;
    *(_DWORD *)(a5 + 457) = *(_DWORD *)v312;
    *(_DWORD *)(a5 + 460) = *(_DWORD *)&v312[3];
    *(_DWORD *)(a5 + 553) = *(_DWORD *)v311;
    *(_DWORD *)(a5 + 556) = *(_DWORD *)&v311[3];
    char v120 = v310;
    *(_DWORD *)(a5 + 572) = *(_DWORD *)&v309[3];
    *(_DWORD *)(a5 + 569) = *(_DWORD *)v309;
    *(void *)(a5 + 264) = 256;
    *(void *)(a5 + 272) = 1000;
    *(_OWORD *)(a5 + 280) = 0u;
    *(_OWORD *)(a5 + 296) = 0u;
    *(_OWORD *)(a5 + 312) = 0u;
    *(unsigned char *)(a5 + 328) = v115;
    *(void *)(a5 + 336) = 0;
    *(void *)(a5 + 344) = 0;
    *(unsigned char *)(a5 + 352) = v116;
    *(_OWORD *)(a5 + 360) = 0u;
    *(_OWORD *)(a5 + 376) = 0u;
    *(unsigned char *)(a5 + 392) = v117;
    *(_OWORD *)(a5 + 400) = 0u;
    *(_OWORD *)(a5 + 416) = 0u;
    *(unsigned char *)(a5 + 432) = v118;
    *(void *)(a5 + 440) = 0;
    *(void *)(a5 + 448) = 0;
    *(unsigned char *)(a5 + 456) = v119;
    *(void *)(a5 + 544) = 0;
    *(_OWORD *)(a5 + 512) = 0u;
    *(_OWORD *)(a5 + 528) = 0u;
    *(_OWORD *)(a5 + 480) = 0u;
    *(_OWORD *)(a5 + 496) = 0u;
    *(_OWORD *)(a5 + 464) = 0u;
    *(unsigned char *)(a5 + 552) = (_BYTE)v26;
    *(void *)(a5 + 560) = v290;
    *(unsigned char *)(a5 + 568) = v120;
    *(double *)(a5 + 576) = v13;
    *(double *)(a5 + 584) = v20;
    *(void *)(a5 + 592) = v293;
    *(void *)(a5 + 600) = v292;
    *(void *)(a5 + 608) = v291;
    *(void *)(a5 + 616) = v288;
    *(void *)(a5 + 632) = 0;
    *(void *)(a5 + 624) = 0;
    *(unsigned char *)(a5 + 640) = 0;
    *(unsigned char *)(a5 + 641) = v99;
    return result;
  }
LABEL_279:
  swift_release();
  __break(1u);
LABEL_280:
  swift_unexpectedError();
  __break(1u);
LABEL_281:
  uint64_t result = sub_1B5373288();
  __break(1u);
  return result;
}

uint64_t sub_1B527C358(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  int v4 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v6 = *(v3 - 1);
    uint64_t v5 = *v3;
    uint64_t v7 = qword_1E9D47690;
    swift_bridgeObjectRetain();
    if (v7 != -1) {
      swift_once();
    }
    char v8 = off_1E9D48320;
    uint64_t v9 = sub_1B5263AAC(v6, v5, (uint64_t)off_1E9D48320);
    if (v9 < 0
      || (unint64_t v10 = v9, v9 >= v8[2])
      || ((v11 = (char *)&v8[2 * v9], uint64_t result = *((void *)v11 + 4), result == v6)
        ? (BOOL v13 = *((void *)v11 + 5) == v5)
        : (BOOL v13 = 0),
          !v13 && (uint64_t result = sub_1B5373228(), (result & 1) == 0)))
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (qword_1E9D47698 != -1) {
      uint64_t result = swift_once();
    }
    if (v10 >= *((void *)off_1E9D48328 + 2)) {
      break;
    }
    int v14 = *((unsigned __int16 *)off_1E9D48328 + v10 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v2 >> 16) {
      goto LABEL_27;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v4 = sub_1B51E9AD0(0, *((void *)v4 + 2) + 1, 1, v4);
    }
    unint64_t v16 = *((void *)v4 + 2);
    unint64_t v15 = *((void *)v4 + 3);
    if (v16 >= v15 >> 1) {
      int v4 = sub_1B51E9AD0((char *)(v15 > 1), v16 + 1, 1, v4);
    }
    *((void *)v4 + 2) = v16 + 1;
    unint64_t v17 = &v4[8 * v16];
    *((_DWORD *)v17 + 8) = v14;
    *((_WORD *)v17 + 18) = v2;
LABEL_4:
    ++v2;
    v3 += 2;
    if (v1 == v2)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v4;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B527C55C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  unint64_t v11 = v8;
  char v12 = a3;
  uint64_t v13 = a1;
  uint64_t v14 = a8 >> 1;
  if (a8 >> 1 != a7)
  {
    if ((uint64_t)(a8 >> 1) > a7)
    {
      uint64_t v10 = a6;
      uint64_t v17 = *(void *)(a6 + 8 * a7);
      if (v17 != (int)v17) {
        return 4;
      }
      uint64_t v34 = a2;
      uint64_t v35 = a4;
      swift_unknownObjectRetain();
      uint64_t v13 = a7 + 1;
      unint64_t v18 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v9 = 1;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v18 = sub_1B51E85E8(0, *((void *)v18 + 2) + 1, 1, v18);
        }
        unint64_t v8 = *((void *)v18 + 2);
        unint64_t v19 = *((void *)v18 + 3);
        if (v8 >= v19 >> 1) {
          unint64_t v18 = sub_1B51E85E8((char *)(v19 > 1), v8 + 1, 1, v18);
        }
        *((void *)v18 + 2) = v8 + 1;
        double v20 = &v18[8 * v8];
        *((_WORD *)v20 + 18) = 0;
        *((_DWORD *)v20 + 8) = v17;
        v20[38] = 1;
        if (v14 == v13)
        {
          swift_unknownObjectRelease();
          a4 = v35;
          uint64_t v13 = a1;
          char v12 = a3;
          a2 = v34;
          goto LABEL_2;
        }
        if (v13 < a7 || v13 >= v14) {
          break;
        }
        uint64_t v17 = *(void *)(v10 + 8 * v13);
        if (v17 >= (uint64_t)0xFFFFFFFF80000000)
        {
          ++v13;
          if (v17 < 0x80000000) {
            continue;
          }
        }
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return 4;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_2:
  long long v40 = *(_OWORD *)(v11 + 32);
  long long v41 = *(_OWORD *)(v11 + 80);
  long long v38 = *(_OWORD *)v11;
  long long v39 = *(_OWORD *)(v11 + 16);
  unint64_t v15 = sub_1B522F32C(v13, a2, v12, a4);
  if ((~v15 & 0xFF000000000000) == 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  unint64_t v8 = v15;
  if (BYTE6(v15) == 7)
  {
    if ((unint64_t)v15 < *(void *)(v40 + 16))
    {
      unint64_t v9 = *(void *)(v40 + 8 * v15 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_23;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v14 = HIWORD(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47A20);
  unint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B538C0E0;
  *(_WORD *)(v9 + 36) = WORD2(v8);
  *(_DWORD *)(v9 + 32) = v8;
  *(unsigned char *)(v9 + 38) = v14;
LABEL_23:
  uint64_t v42 = *((void *)&v38 + 1);
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1B522F6C8(v22);
  sub_1B51DFEA8((uint64_t)&v42);
  *(void *)(v11 + 8) = v23;
  if (v12)
  {
    swift_bridgeObjectRelease();
    unint64_t v21 = sub_1B5277050(v9, 0);
    swift_bridgeObjectRelease();
    return v21;
  }
  uint64_t v10 = v13;
  uint64_t v13 = v39;
  unint64_t v8 = *(void *)(v39 + 16);
  if (v8)
  {
    LODWORD(v14) = *(_DWORD *)(v39 + 32);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_27;
    }
    goto LABEL_41;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t v13 = (uint64_t)sub_1B51E85A0(0, v8 + 1, 1, (char *)v13);
LABEL_27:
  unint64_t v25 = *(void *)(v13 + 16);
  unint64_t v24 = *(void *)(v13 + 24);
  if (v25 >= v24 >> 1) {
    uint64_t v13 = (uint64_t)sub_1B51E85A0((char *)(v24 > 1), v25 + 1, 1, (char *)v13);
  }
  *(void *)(v13 + 16) = v25 + 1;
  *(_DWORD *)(v13 + 4 * v25 + 32) = v14;
  if (*(void *)(v41 + 16))
  {
    unint64_t v26 = sub_1B5230728(v10 & 0xFFFFFFFFFFFFFFLL);
    if (v27)
    {
      int v28 = *(_DWORD *)(*(void *)(v41 + 56) + 4 * v26);
      swift_bridgeObjectRelease();
      unint64_t v30 = *(void *)(v13 + 16);
      unint64_t v29 = *(void *)(v13 + 24);
      if (v30 >= v29 >> 1) {
        uint64_t v13 = (uint64_t)sub_1B51E85A0((char *)(v29 > 1), v30 + 1, 1, (char *)v13);
      }
      *(void *)(v13 + 16) = v30 + 1;
      *(_DWORD *)(v13 + 4 * v30 + 32) = v28;
      *(void *)(v11 + 16) = v13;
      unint64_t v31 = v11 + 16;
      unint64_t v21 = sub_1B5277050(v9, 0);
      swift_bridgeObjectRelease();
      unint64_t v32 = *(void *)(*(void *)v31 + 16);
      if (v32 >= 2)
      {
        sub_1B5238FA4(v32 - 2, v32);
        return v21;
      }
      __break(1u);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

BOOL static Type1FontError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t Type1FontError.hash(into:)()
{
  return sub_1B5373308();
}

uint64_t Type1FontError.hashValue.getter()
{
  return sub_1B5373358();
}

uint64_t Type1Font.characterMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5216644(v1 + 168, a1);
}

uint64_t Type1Font.characterMap.setter(uint64_t a1)
{
  return sub_1B527C9C0(a1, v1 + 168);
}

uint64_t sub_1B527C9C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t (*Type1Font.characterMap.modify())()
{
  return nullsub_1;
}

uint64_t Type1Font.fontInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B527CA48(v1 + 264, a1);
}

uint64_t sub_1B527CA48(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Type1Font.fontInfo.setter(uint64_t a1)
{
  return sub_1B527CAAC(a1, v1 + 264);
}

uint64_t sub_1B527CAAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t (*Type1Font.fontInfo.modify())()
{
  return nullsub_1;
}

uint64_t Type1Font.dataResidence.getter()
{
  return *(unsigned __int8 *)(v0 + 641);
}

uint64_t Type1Font.dataResidence.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 641) = result;
  return result;
}

uint64_t (*Type1Font.dataResidence.modify())()
{
  return nullsub_1;
}

uint64_t Type1Font.encodingType.getter()
{
  return 1;
}

uint64_t Type1Font.containerType.getter()
{
  return 3;
}

uint64_t sub_1B527CB68@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  sub_1B51D4BB8(*a1, v5);
  sub_1B522551C(v4, v5, 4, (uint64_t)&v11);
  if (!v2)
  {
    if (v12 >> 60 != 11)
    {
      uint64_t v15 = v11;
      unint64_t v16 = v12;
      long long v17 = v13;
      __int16 v18 = v14;
      uint64_t v6 = sub_1B5222460();
      uint64_t v8 = v7;
      long long v9 = v17;
      sub_1B51FE548(v15, v16);
      uint64_t result = sub_1B51FE548(v9, *((unint64_t *)&v9 + 1));
      *a2 = v6;
      a2[1] = v8;
      return result;
    }
    __break(1u);
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t Type1Font.allNames.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1B527A73C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

double Type1Font.metadata.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t Type1Font.findCharacterMap(matchingQuery:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5216644(v1 + 168, a1);
}

uint64_t Type1Font.getHorizontalMetrics(glyphID:)(uint64_t a1)
{
  uint64_t result = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = *(void *)(v1 + 152);
    if (*(void *)(v4 + 16) > a1)
    {
      long long v5 = *(_OWORD *)(v1 + 80);
      long long v6 = *(_OWORD *)(v1 + 112);
      long long v52 = *(_OWORD *)(v1 + 96);
      v53[0] = v6;
      long long v7 = *(_OWORD *)(v1 + 16);
      long long v8 = *(_OWORD *)(v1 + 48);
      long long v48 = *(_OWORD *)(v1 + 32);
      long long v49 = v8;
      long long v9 = *(_OWORD *)(v1 + 48);
      long long v10 = *(_OWORD *)(v1 + 80);
      long long v50 = *(_OWORD *)(v1 + 64);
      long long v51 = v10;
      long long v11 = *(_OWORD *)(v1 + 16);
      v47[0] = *(_OWORD *)v1;
      v47[1] = v11;
      long long v12 = *(_OWORD *)(v1 + 112);
      long long v39 = v52;
      *(_OWORD *)long long v40 = v12;
      long long v35 = v48;
      long long v36 = v9;
      *(void *)((char *)v53 + 15) = *(void *)(v1 + 127);
      int v13 = *(_DWORD *)(v1 + 136);
      __int16 v14 = *(_WORD *)(v1 + 140);
      char v15 = *(unsigned char *)(v1 + 142);
      uint64_t v16 = *(void *)(v1 + 160);
      long long v37 = v50;
      long long v38 = v5;
      memset(&v44[8], 0, 32);
      char v45 = 1;
      *(void *)&v40[15] = *(void *)(v1 + 127);
      long long v33 = v47[0];
      long long v34 = v7;
      __int16 v42 = v14;
      int v41 = v13;
      char v43 = v15;
      *(void *)BOOL v44 = v16;
      uint64_t v17 = v4 + 16 * a1;
      memset(v46, 0, 40);
      unint64_t v18 = *(void *)(v17 + 40);
      *(void *)&v22[0] = *(void *)(v17 + 32);
      *((void *)&v22[0] + 1) = v18;
      sub_1B51D4BB8(*(uint64_t *)&v22[0], v18);
      sub_1B51D4BB8(*(uint64_t *)&v22[0], v18);
      sub_1B520212C((uint64_t)v47);
      sub_1B51D4C10();
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B53724D8();
      v32[0] = (char *)MEMORY[0x1E4FBC860];
      v32[1] = 0;
      sub_1B527E918(v19, v20, v21, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B51D4C64(*(uint64_t *)&v22[0], v18);
      v22[6] = v39;
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v40;
      *(void *)&v23[15] = *(void *)&v40[15];
      v22[2] = v35;
      v22[3] = v36;
      v22[4] = v37;
      v22[5] = v38;
      v22[0] = v33;
      v22[1] = v34;
      __int16 v25 = v42;
      int v24 = v41;
      char v26 = v43;
      long long v27 = *(_OWORD *)v44;
      long long v28 = *(_OWORD *)&v44[16];
      uint64_t v29 = *(void *)&v44[32];
      if (v45)
      {
        char v30 = 1;
        *(_OWORD *)unint64_t v31 = v46[0];
        *(_OWORD *)&v31[16] = v46[1];
        *(void *)&v31[32] = *(void *)&v46[2];
        sub_1B52813F4((uint64_t)v22);
        return 0;
      }
      else
      {
        char v30 = 0;
        *(void *)unint64_t v31 = *(void *)&v46[0];
        *(_OWORD *)&v31[8] = *(_OWORD *)((char *)v46 + 8);
        *(_OWORD *)&v31[24] = *(_OWORD *)((char *)&v46[1] + 8);
        sub_1B52813F4((uint64_t)v22);
        return a1;
      }
    }
  }
  return result;
}

uint64_t sub_1B527D038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  long long v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v3[7];
  long long v31 = v3[6];
  v32[0] = v9;
  *(void *)((char *)v32 + 15) = *(void *)((char *)v3 + 127);
  long long v10 = v3[3];
  long long v27 = v3[2];
  long long v28 = v10;
  long long v11 = v3[5];
  long long v29 = v3[4];
  long long v30 = v11;
  long long v12 = v3[1];
  long long v25 = *v3;
  long long v26 = v12;
  int v13 = *((_DWORD *)v3 + 34);
  __int16 v14 = *((_WORD *)v3 + 70);
  char v15 = *((unsigned char *)v3 + 142);
  uint64_t v16 = *((void *)v3 + 20);
  (*(void (**)(char *))(v6 + 16))(v8);
  long long v17 = v32[0];
  *(_OWORD *)(a3 + 96) = v31;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 127) = *(void *)((char *)v32 + 15);
  long long v18 = v28;
  *(_OWORD *)(a3 + 32) = v27;
  *(_OWORD *)(a3 + 48) = v18;
  long long v19 = v30;
  *(_OWORD *)(a3 + 64) = v29;
  *(_OWORD *)(a3 + 80) = v19;
  long long v20 = v26;
  *(_OWORD *)a3 = v25;
  *(_OWORD *)(a3 + 16) = v20;
  *(_WORD *)(a3 + 140) = v14;
  *(_DWORD *)(a3 + 136) = v13;
  *(unsigned char *)(a3 + 142) = v15;
  *(void *)(a3 + 144) = v16;
  uint64_t v21 = (int *)type metadata accessor for Type1CharStringRenderer();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3 + v21[11], v8, a2);
  *(void *)(a3 + v21[12]) = 0;
  uint64_t v22 = (void *)(a3 + v21[13]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (void *)(a3 + v21[14]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  sub_1B520212C((uint64_t)&v25);
  return swift_bridgeObjectRetain();
}

Swift::Int Type1Font.getVerticalMetrics(glyphID:)(Swift::Int a1)
{
  Type1Font.getBoundingBox(glyphID:)(&v3, a1);
  sub_1B5272B00((uint64_t)&v3, (uint64_t)v4);
  if (v4[32]) {
    return 0;
  }
  else {
    return a1;
  }
}

void __swiftcall Type1Font.getBoundingBox(glyphID:)(__C::CGRect_optional *__return_ptr retstr, Swift::Int glyphID)
{
  Swift::Bool v4 = 1;
  Swift::Double v5 = 0.0;
  if (glyphID < 0 || (uint64_t v6 = *(void *)(v2 + 152), *(void *)(v6 + 16) <= glyphID))
  {
    Swift::Double v24 = 0.0;
    double v25 = 0.0;
    double v26 = 0.0;
  }
  else
  {
    long long v7 = *(_OWORD *)(v2 + 80);
    long long v8 = *(_OWORD *)(v2 + 112);
    long long v61 = *(_OWORD *)(v2 + 96);
    v62[0] = v8;
    long long v9 = *(_OWORD *)(v2 + 16);
    long long v10 = *(_OWORD *)(v2 + 48);
    long long v57 = *(_OWORD *)(v2 + 32);
    long long v58 = v10;
    long long v11 = *(_OWORD *)(v2 + 48);
    long long v12 = *(_OWORD *)(v2 + 80);
    long long v59 = *(_OWORD *)(v2 + 64);
    long long v60 = v12;
    long long v13 = *(_OWORD *)(v2 + 16);
    v56[0] = *(_OWORD *)v2;
    v56[1] = v13;
    long long v14 = *(_OWORD *)(v2 + 112);
    long long v46 = v61;
    *(_OWORD *)uint64_t v47 = v14;
    long long v42 = v57;
    long long v43 = v11;
    *(void *)((char *)v62 + 15) = *(void *)(v2 + 127);
    int v15 = *(_DWORD *)(v2 + 136);
    __int16 v16 = *(_WORD *)(v2 + 140);
    char v17 = *(unsigned char *)(v2 + 142);
    uint64_t v18 = *(void *)(v2 + 160);
    long long v44 = v59;
    long long v45 = v7;
    memset(&v51[8], 0, 32);
    char v52 = 1;
    *(void *)&v47[15] = *(void *)(v2 + 127);
    long long v40 = v56[0];
    long long v41 = v9;
    __int16 v49 = v16;
    int v48 = v15;
    char v50 = v17;
    *(void *)long long v51 = v18;
    Swift::Int v19 = v6 + 16 * glyphID;
    long long v53 = 0u;
    long long v54 = 0u;
    uint64_t v55 = 0;
    unint64_t v20 = *(void *)(v19 + 40);
    *(void *)&v27[0] = *(void *)(v19 + 32);
    *((void *)&v27[0] + 1) = v20;
    sub_1B51D4BB8(*(uint64_t *)&v27[0], v20);
    sub_1B51D4BB8(*(uint64_t *)&v27[0], v20);
    sub_1B520212C((uint64_t)v56);
    sub_1B51D4C10();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1B53724D8();
    v39[0] = (char *)MEMORY[0x1E4FBC860];
    v39[1] = 0;
    sub_1B527E918(v21, v22, v23, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B51D4C64(*(uint64_t *)&v27[0], v20);
    Swift::Double v24 = 0.0;
    double v25 = 0.0;
    double v26 = 0.0;
    Swift::Bool v4 = v52;
    if ((v52 & 1) == 0)
    {
      double v25 = *(double *)&v51[24] - *(double *)&v51[8];
      double v26 = *(double *)&v51[32] - *(double *)&v51[16];
      Swift::Double v5 = *(double *)&v51[8];
      Swift::Double v24 = *(double *)&v51[16];
    }
    v27[6] = v46;
    *(_OWORD *)long long v28 = *(_OWORD *)v47;
    *(void *)&v28[15] = *(void *)&v47[15];
    void v27[2] = v42;
    void v27[3] = v43;
    v27[4] = v44;
    v27[5] = v45;
    v27[0] = v40;
    v27[1] = v41;
    __int16 v30 = v49;
    int v29 = v48;
    char v31 = v50;
    long long v32 = *(_OWORD *)v51;
    long long v33 = *(_OWORD *)&v51[16];
    uint64_t v34 = *(void *)&v51[32];
    char v35 = v52;
    long long v36 = v53;
    long long v37 = v54;
    uint64_t v38 = v55;
    sub_1B52813F4((uint64_t)v27);
  }
  retstr->value.origin.x = v5;
  retstr->value.origin.y = v24;
  retstr->value.size.width = v25;
  retstr->value.size.height = v26;
  retstr->is_nil = v4;
}

uint64_t Type1Font.recordGlyph<A>(glyphIndex:into:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for Type1CharStringRenderer();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v19 - v11;
  if ((a1 & 0x8000000000000000) != 0 || (uint64_t v13 = *(void *)(v4 + 152), *(void *)(v13 + 16) <= (int64_t)a1))
  {
    sub_1B520AB64();
    swift_allocError();
    *uint64_t v18 = 3;
    return swift_willThrow();
  }
  else
  {
    sub_1B527D038(a2, a3, (uint64_t)v12);
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, double, double, double, double))(a4 + 24))(a1, a3, a4, *(double *)(v4 + 592), *(double *)(v4 + 600), *(double *)(v4 + 608), *(double *)(v4 + 616));
    if (*(void *)(v13 + 16) <= a1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v15 = v13 + 16 * a1;
      uint64_t v16 = *(void *)(v15 + 32);
      unint64_t v17 = *(void *)(v15 + 40);
      sub_1B51D4BB8(v16, v17);
      sub_1B52BAFF4(v16, v17, v9, (uint64_t)&off_1F0DF8AA8);
      sub_1B51D4C64(v16, v17);
      sub_1B527D6F0((uint64_t)v12, a2, a3, a4);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  return result;
}

uint64_t sub_1B527D6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + *(int *)(type metadata accessor for Type1CharStringRenderer() + 44);
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 24);
  return v8(a2, v7, a3);
}

uint64_t sub_1B527D798()
{
  return *(unsigned __int8 *)(v0 + 641);
}

uint64_t sub_1B527D7A0()
{
  return 3;
}

uint64_t sub_1B527D7A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1B527CA48(v1 + 264, a1);
}

double sub_1B527D7B4@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1B527D7C8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1B527A73C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B527D820@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5216644(v1 + 168, a1);
}

Swift::Int sub_1B527D854(Swift::Int a1)
{
  Type1Font.getBoundingBox(glyphID:)(&v3, a1);
  sub_1B5272B00((uint64_t)&v3, (uint64_t)v4);
  if (v4[32]) {
    return 0;
  }
  else {
    return a1;
  }
}

uint64_t sub_1B527D8B0@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X8>)
{
  Type1Font.getBoundingBox(glyphID:)(&v4, a1);
  return sub_1B5272B00((uint64_t)&v4, a2);
}

uint64_t sub_1B527D8EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Type1Font.recordGlyph<A>(glyphIndex:into:)(a1, a2, a3, a4);
}

uint64_t sub_1B527D904(uint64_t result, uint64_t a2, uint64_t a3)
{
  __C::CGRect_optional v4 = (void *)(v3 + *(int *)(a3 + 56));
  *__C::CGRect_optional v4 = result;
  v4[1] = a2;
  return result;
}

uint64_t sub_1B527D914(double a1, double a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  Swift::Double v5 = *(uint64_t (**)(uint64_t, uint64_t, double, double))(AssociatedConformanceWitness + 32);
  uint64_t v6 = swift_checkMetadataState();
  return v5(v6, AssociatedConformanceWitness, a1, a2);
}

uint64_t sub_1B527D9E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  __C::CGRect_optional v4 = (void *)(v3 + *(int *)(a3 + 56));
  if (__OFADD__(*v4, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v4[1];
    BOOL v6 = __OFADD__(v5, a2);
    uint64_t v7 = v5 + a2;
    if (!v6)
    {
      *v4 += result;
      v4[1] = v7;
      double v8 = MEMORY[0x1F4188790](result);
      uint64_t v10 = *(void *)(v9 + 24);
      uint64_t v13 = *(void *)(v9 + 16);
      uint64_t v14 = v10;
      double v15 = v8;
      uint64_t v16 = v11;
      return (*(uint64_t (**)(uint64_t))(v10 + 40))(v12);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B527DA9C(double a1, double a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, double, double))(AssociatedConformanceWitness + 24);
  uint64_t v6 = swift_checkMetadataState();
  return v5(v6, AssociatedConformanceWitness, a1, a2);
}

uint64_t sub_1B527DB6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  double v8 = (void *)(v7 + *(int *)(a7 + 56));
  if (__OFADD__(*v8, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = v8[1];
  BOOL v10 = __OFADD__(v9, a2);
  uint64_t v11 = v9 + a2;
  if (v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *v8 += result;
  v8[1] = v11;
  uint64_t v12 = (void *)(v7 + *(int *)(a7 + 56));
  if (__OFADD__(*v12, a3))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v13 = v12[1];
  BOOL v10 = __OFADD__(v13, a4);
  uint64_t v14 = v13 + a4;
  if (v10)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *v12 += a3;
  v12[1] = v14;
  double v15 = (void *)(v7 + *(int *)(a7 + 56));
  if (__OFADD__(*v15, a5))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v16 = v15[1];
  BOOL v10 = __OFADD__(v16, a6);
  uint64_t v17 = v16 + a6;
  if (!v10)
  {
    *v15 += a5;
    v15[1] = v17;
    double v18 = MEMORY[0x1F4188790](result);
    uint64_t v20 = *(void *)(v19 + 24);
    uint64_t v26 = *(void *)(v19 + 16);
    uint64_t v27 = v20;
    uint64_t v28 = v21;
    uint64_t v29 = v22;
    uint64_t v30 = v24;
    uint64_t v31 = v23;
    uint64_t v32 = v25;
    double v33 = v18;
    return (*(uint64_t (**)(uint64_t (*)()))(v20 + 40))(sub_1B528359C);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1B527DC9C(double a1, double a2, double a3, double a4, double a5, double a6)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, double, double, double, double, double, double))(AssociatedConformanceWitness + 48);
  uint64_t v14 = swift_checkMetadataState();
  return v13(v14, AssociatedConformanceWitness, a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B527DD9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  v3[2] = *(void *)(a1 + 16);
  v3[3] = v1;
  return (*(uint64_t (**)(uint64_t (*)(), void *))(v1 + 40))(sub_1B5283580, v3);
}

uint64_t sub_1B527DE08()
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
  uint64_t v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

uint64_t sub_1B527DEC0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(unsigned __int16 *)(v5 + 140);
  uint64_t v7 = *(unsigned int *)(v5 + 136);
  uint64_t v8 = *(unsigned __int8 *)(v5 + 142);
  uint64_t v9 = sub_1B51EA130(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v11 = *((void *)v9 + 2);
  unint64_t v10 = *((void *)v9 + 3);
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_1B51EA130((char *)(v10 > 1), v11 + 1, 1, v9);
  }
  *((void *)v9 + 2) = v11 + 1;
  uint64_t v12 = &v9[24 * v11];
  *((_OWORD *)v12 + 2) = xmmword_1B538FB00;
  v12[48] = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = v9;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1B51EA130(0, *((void *)v9 + 2) + 1, 1, v9);
  }
  uint64_t v14 = v7 | (v6 << 32);
  unint64_t v16 = *((void *)v13 + 2);
  unint64_t v15 = *((void *)v13 + 3);
  if (v16 >= v15 >> 1) {
    uint64_t v13 = sub_1B51EA130((char *)(v15 > 1), v16 + 1, 1, v13);
  }
  uint64_t v17 = v14 | (v8 << 48);
  *((void *)v13 + 2) = v16 + 1;
  double v18 = &v13[24 * v16];
  *((_OWORD *)v18 + 2) = xmmword_1B538FB10;
  v18[48] = 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v19 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v19 = sub_1B51EA130(0, *((void *)v13 + 2) + 1, 1, v13);
  }
  unint64_t v21 = *((void *)v19 + 2);
  unint64_t v20 = *((void *)v19 + 3);
  if (v21 >= v20 >> 1) {
    uint64_t v19 = sub_1B51EA130((char *)(v20 > 1), v21 + 1, 1, v19);
  }
  *((void *)v19 + 2) = v21 + 1;
  uint64_t v22 = &v19[24 * v21];
  *((void *)v22 + 4) = a5;
  *((void *)v22 + 5) = 0;
  v22[48] = 2;
  swift_bridgeObjectRelease();
  char v23 = sub_1B527C55C(v17, 0, 0, (uint64_t)v19, a1, a2, a3, a4);
  uint64_t result = swift_bridgeObjectRelease();
  char v25 = 4;
  switch(v23)
  {
    case 1:
    case 2:
    case 4:
      goto LABEL_14;
    case 3:
      char v25 = 5;
LABEL_14:
      sub_1B520AB64();
      swift_allocError();
      *uint64_t v26 = v25;
      uint64_t result = swift_willThrow();
      break;
    default:
      *(void *)(v5 + 192) = 0;
      break;
  }
  return result;
}

uint64_t sub_1B527E140(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(unsigned __int16 *)(v6 + 140);
  uint64_t v8 = *(unsigned int *)(v6 + 136);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 142);
  unint64_t v10 = sub_1B51EA130(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v12 = *((void *)v10 + 2);
  unint64_t v11 = *((void *)v10 + 3);
  if (v12 >= v11 >> 1) {
    unint64_t v10 = sub_1B51EA130((char *)(v11 > 1), v12 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v12 + 1;
  uint64_t v13 = &v10[24 * v12];
  *((_OWORD *)v13 + 2) = xmmword_1B538FB00;
  v13[48] = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = v10;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v14 = sub_1B51EA130(0, *((void *)v10 + 2) + 1, 1, v10);
  }
  uint64_t v15 = v8 | (v7 << 32);
  unint64_t v17 = *((void *)v14 + 2);
  unint64_t v16 = *((void *)v14 + 3);
  if (v17 >= v16 >> 1) {
    uint64_t v14 = sub_1B51EA130((char *)(v16 > 1), v17 + 1, 1, v14);
  }
  uint64_t v18 = v15 | (v9 << 48);
  *((void *)v14 + 2) = v17 + 1;
  uint64_t v19 = &v14[24 * v17];
  *((_OWORD *)v19 + 2) = xmmword_1B538FB10;
  v19[48] = 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v20 = v14;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v20 = sub_1B51EA130(0, *((void *)v14 + 2) + 1, 1, v14);
  }
  unint64_t v22 = *((void *)v20 + 2);
  unint64_t v21 = *((void *)v20 + 3);
  if (v22 >= v21 >> 1) {
    unint64_t v20 = sub_1B51EA130((char *)(v21 > 1), v22 + 1, 1, v20);
  }
  *((void *)v20 + 2) = v22 + 1;
  char v23 = &v20[24 * v22];
  *((void *)v23 + 4) = a5;
  *((void *)v23 + 5) = 0;
  v23[48] = 2;
  swift_bridgeObjectRelease();
  char v24 = sub_1B527C55C(v18, 0, 0, (uint64_t)v20, a1, a2, a3, a4);
  uint64_t result = swift_bridgeObjectRelease();
  char v26 = 5;
  switch(v24)
  {
    case 1:
    case 2:
    case 4:
      char v26 = 4;
      goto LABEL_13;
    case 3:
LABEL_13:
      sub_1B520AB64();
      swift_allocError();
      *uint64_t v27 = v26;
      uint64_t result = swift_willThrow();
      break;
    default:
      *(void *)(v6 + *(int *)(a6 + 48)) = 0;
      break;
  }
  return result;
}

void sub_1B527E3C8()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = *(void *)(v2 + 16);
  if (v1 >= (uint64_t)v3)
  {
    sub_1B520AB64();
    swift_allocError();
    *unint64_t v10 = 6;
    swift_willThrow();
    return;
  }
  unint64_t v4 = v3 - 1 - v1;
  if (__OFSUB__(v3 - 1, v1))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v4 >= v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v5 = sub_1B522F83C(*(unsigned int *)(v2 + 8 * v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v2 + 8 * v4 + 36) << 32) | ((unint64_t)*(unsigned __int8 *)(v2 + 8 * v4 + 38) << 48));
  int v8 = v7 >> 4;
  if (v8 == 1)
  {
LABEL_9:
    *(void *)(v0 + 192) = v1 + 1;
    return;
  }
  if (v8 == 2)
  {
    double v9 = round(*(double *)&v5);
    if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1B51DFE20(v5, v6, v7);
  sub_1B520AB64();
  swift_allocError();
  *unint64_t v11 = 6;
  swift_willThrow();
  uint64_t v12 = *(void *)(v0 + 192);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v0 + 192) = v14;
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1B527E5B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v4 = *(void *)(v3 + 16);
  if (v2 >= (uint64_t)v4) {
    goto LABEL_9;
  }
  uint64_t v5 = v1;
  uint64_t result = *(unsigned __int8 *)(v1 + 134);
  BOOL v7 = __OFSUB__(v4 - 1, v2);
  unint64_t v8 = v4 - 1 - v2;
  if (v7)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v8 >= v4)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t result = sub_1B522F83C(*(unsigned int *)(v3 + 8 * v8 + 32) | ((unint64_t)*(unsigned __int16 *)(v3 + 8 * v8 + 36) << 32) | ((unint64_t)*(unsigned __int8 *)(v3 + 8 * v8 + 38) << 48));
  uint64_t v1 = result;
  int v11 = v10 >> 4;
  if (v11 == 2)
  {
    double v15 = round(*(double *)&result);
    if ((~*(void *)&v15 & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          uint64_t result = type metadata accessor for Type1CharStringRenderer();
          uint64_t v12 = (uint64_t *)(v5 + *(int *)(result + 48));
          uint64_t v13 = *v12 + 1;
          if (!__OFADD__(*v12, 1))
          {
            uint64_t v1 = (uint64_t)v15;
LABEL_15:
            *uint64_t v12 = v13;
            return v1;
          }
          goto LABEL_24;
        }
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v11 == 1)
  {
    uint64_t v12 = (uint64_t *)(v5 + *(int *)(type metadata accessor for Type1CharStringRenderer() + 48));
    uint64_t v13 = *v12 + 1;
    if (!__OFADD__(*v12, 1)) {
      goto LABEL_15;
    }
    __break(1u);
LABEL_9:
    sub_1B520AB64();
    swift_allocError();
    *uint64_t v14 = 6;
    swift_willThrow();
    return v1;
  }
  sub_1B51DFE20(result, v9, v10);
  sub_1B520AB64();
  swift_allocError();
  *unint64_t v16 = 6;
  swift_willThrow();
  uint64_t result = type metadata accessor for Type1CharStringRenderer();
  uint64_t v17 = *(int *)(result + 48);
  uint64_t v18 = *(void *)(v5 + v17);
  BOOL v7 = __OFADD__(v18, 1);
  uint64_t v19 = v18 + 1;
  if (!v7)
  {
    *(void *)(v5 + v17) = v19;
    return v1;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B527E808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B52834D4(a1, a3);
}

uint64_t sub_1B527E810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return nullsub_1(a6);
}

uint64_t sub_1B527E818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B52834F0(a1, a2, a5);
}

uint64_t sub_1B527E828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B527D9E4(a1, a2, a3);
}

uint64_t sub_1B527E854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B527D9E4(a1, a2, a3);
}

uint64_t sub_1B527E888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return nullsub_1(a3);
}

uint64_t sub_1B527E890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return nullsub_1(a7);
}

uint64_t sub_1B527E898(uint64_t a1)
{
  uint64_t v2 = sub_1B528350C(a1);
  uint64_t v4 = v2;
  if (!v1) {
    sub_1B51D4BB8(v2, v3);
  }
  return v4;
}

uint64_t sub_1B527E8E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B527E140(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B527E900(uint64_t a1)
{
  return sub_1B527E5B0(a1);
}

uint64_t sub_1B527E918(uint64_t result, int64_t a2, uint64_t a3, char **a4)
{
  if (result == a2) {
    return result;
  }
  int64_t v8 = a2;
  unint64_t v9 = result;
  uint64_t v196 = v5;
  uint64_t v193 = v4;
  swift_bridgeObjectRetain();
  uint64_t v194 = a4;
  while (1)
  {
    if (__OFSUB__(v8, v9))
    {
      __break(1u);
LABEL_244:
      __break(1u);
LABEL_245:
      __break(1u);
LABEL_246:
      __break(1u);
LABEL_247:
      __break(1u);
LABEL_248:
      __break(1u);
LABEL_249:
      __break(1u);
LABEL_250:
      __break(1u);
LABEL_251:
      __break(1u);
LABEL_252:
      __break(1u);
LABEL_253:
      __break(1u);
LABEL_254:
      __break(1u);
LABEL_255:
      __break(1u);
LABEL_256:
      __break(1u);
LABEL_257:
      __break(1u);
LABEL_258:
      __break(1u);
LABEL_259:
      __break(1u);
LABEL_260:
      __break(1u);
LABEL_261:
      __break(1u);
LABEL_262:
      __break(1u);
LABEL_263:
      __break(1u);
LABEL_264:
      __break(1u);
LABEL_265:
      __break(1u);
LABEL_266:
      __break(1u);
LABEL_267:
      __break(1u);
LABEL_268:
      __break(1u);
LABEL_269:
      __break(1u);
LABEL_270:
      __break(1u);
LABEL_271:
      __break(1u);
LABEL_272:
      __break(1u);
LABEL_273:
      __break(1u);
LABEL_274:
      __break(1u);
LABEL_275:
      __break(1u);
LABEL_276:
      __break(1u);
LABEL_277:
      __break(1u);
LABEL_278:
      __break(1u);
LABEL_279:
      __break(1u);
      goto LABEL_280;
    }
    if ((uint64_t)(v8 - v9) <= 0)
    {
      *(void *)&long long v202 = 0;
      *((void *)&v202 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1B5372F98();
      swift_bridgeObjectRelease();
      sub_1B51D4D34();
      swift_allocError();
      *uint64_t v177 = 0;
      v177[1] = v9;
      v177[2] = 0xD00000000000002ALL;
      v177[3] = 0x80000001B537BD00;
      v177[4] = 0;
      goto LABEL_233;
    }
    if (v9 == 0x7FFFFFFFFFFFFFFFLL) {
      goto LABEL_244;
    }
    unint64_t v10 = v9 + 1;
    if (v8 < (uint64_t)(v9 + 1)) {
      goto LABEL_244;
    }
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_245;
    }
    unint64_t v11 = *(void *)(a3 + 16);
    if (v11 < v9 || v11 < v10) {
      goto LABEL_246;
    }
    uint64_t v12 = *(unsigned __int8 *)(a3 + v9 + 32);
    swift_bridgeObjectRetain();
    if (v12 == 12)
    {
      sub_1B528374C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
      *(void *)&long long v202 = v9 + 1;
      *((void *)&v202 + 1) = v8;
      *(void *)&long long v203 = a3;
      swift_bridgeObjectRetain();
      sub_1B528374C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
      swift_bridgeObjectRetain();
      sub_1B528374C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
      unsigned __int8 v14 = sub_1B51FC9AC((unint64_t *)&v202, v13);
      double v15 = v196;
      if (v196)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B528374C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
        sub_1B528374C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
        sub_1B528379C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658);
        sub_1B528379C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658);
        goto LABEL_230;
      }
      unsigned __int8 v16 = v14;
      swift_bridgeObjectRelease();
      uint64_t v17 = v16;
      int64_t v8 = *((void *)&v202 + 1);
      unint64_t v9 = v202;
      uint64_t v18 = v203;
      uint64_t v205 = v17;
      sub_1B52BB090(&v205, (uint64_t)&v200);
      uint64_t v196 = 0;
      swift_bridgeObjectRelease();
      sub_1B528374C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
      sub_1B528374C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
      uint64_t v12 = (uint64_t)v200;
      char v19 = v201;
      sub_1B528379C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658);
      sub_1B528379C(1, (uint64_t)sub_1B52BB090, 0, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658);
      swift_bridgeObjectRelease();
      a3 = v18;
      a4 = v194;
      if (v19) {
        goto LABEL_23;
      }
    }
    else if (v12 >= 0x20)
    {
      if (v12 < 0xF7)
      {
        v12 -= 139;
        sub_1B528374C(v12, 1, 0, 0, 256, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
        sub_1B528374C(v12, 1, 0, 0, 256, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
        sub_1B528379C(v12, 1, 0, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658);
        swift_bridgeObjectRelease();
        ++v9;
        uint64_t v18 = a3;
LABEL_23:
        unint64_t v20 = *a4;
        unint64_t v21 = *((void *)*a4 + 2);
        if (v21 >= 0x30)
        {
          sub_1B5283604();
          swift_allocError();
          *unint64_t v178 = 4;
          swift_willThrow();
          return swift_bridgeObjectRelease();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v20 = sub_1B51E7F50(0, v21 + 1, 1, v20);
        }
        unint64_t v23 = *((void *)v20 + 2);
        unint64_t v22 = *((void *)v20 + 3);
        if (v23 >= v22 >> 1) {
          unint64_t v20 = sub_1B51E7F50((char *)(v22 > 1), v23 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v23 + 1;
        *(void *)&v20[8 * v23 + 32] = v12;
        *a4 = v20;
        a3 = v18;
        goto LABEL_4;
      }
      if (v12 >= 0xFB)
      {
        if (v12 == 255)
        {
          sub_1B528374C(1, (uint64_t)sub_1B52BD450, 0, 0, 1, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
          *(void *)&long long v202 = v9 + 1;
          *((void *)&v202 + 1) = v8;
          *(void *)&long long v203 = a3;
          swift_bridgeObjectRetain();
          sub_1B528374C(1, (uint64_t)sub_1B52BD450, 0, 0, 1, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
          swift_bridgeObjectRetain();
          sub_1B528374C(1, (uint64_t)sub_1B52BD450, 0, 0, 1, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
          unsigned int v27 = sub_1B51F3E3C((uint64_t *)&v202, v26, 1);
          double v15 = v196;
          if (v196)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B528374C(1, (uint64_t)sub_1B52BD450, 0, 0, 1, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
            sub_1B528374C(1, (uint64_t)sub_1B52BD450, 0, 0, 1, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
            sub_1B528369C((void *)1, (uint64_t)sub_1B52BD450, 0, 0, (void *)1, 0);
            sub_1B528369C((void *)1, (uint64_t)sub_1B52BD450, 0, 0, (void *)1, 0);
            goto LABEL_230;
          }
          signed int v28 = v27;
          swift_bridgeObjectRelease();
          uint64_t v29 = v28;
          int64_t v8 = *((void *)&v202 + 1);
          unint64_t v9 = v202;
          uint64_t v18 = v203;
          uint64_t v205 = v29;
          sub_1B52BD450(&v205, (uint64_t)&v200);
          uint64_t v196 = 0;
          swift_bridgeObjectRelease();
          sub_1B528374C(1, (uint64_t)sub_1B52BD450, 0, 0, 1, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
          sub_1B528374C(1, (uint64_t)sub_1B52BD450, 0, 0, 1, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
          uint64_t v12 = (uint64_t)v200;
          char v30 = v201;
          sub_1B528369C((void *)1, (uint64_t)sub_1B52BD450, 0, 0, (void *)1, 0);
          sub_1B528369C((void *)1, (uint64_t)sub_1B52BD450, 0, 0, (void *)1, 0);
          swift_bridgeObjectRelease();
          a3 = v18;
          a4 = v194;
          if (v30) {
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v31 = swift_allocObject();
          *(unsigned char *)(v31 + 16) = v12;
          *(void *)&long long v202 = v9 + 1;
          *((void *)&v202 + 1) = v8;
          *(void *)&long long v203 = a3;
          swift_bridgeObjectRetain();
          sub_1B528374C((uint64_t)sub_1B52838BC, v31, (uint64_t)sub_1B52BD450, 0, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
          swift_bridgeObjectRetain();
          sub_1B528374C((uint64_t)sub_1B52838BC, v31, (uint64_t)sub_1B52BD450, 0, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
          swift_retain();
          unsigned __int8 v32 = sub_1B52BD17C((unint64_t *)&v202);
          double v15 = v196;
          if (v196)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B528374C((uint64_t)sub_1B52838BC, v31, (uint64_t)sub_1B52BD450, 0, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
            sub_1B528374C((uint64_t)sub_1B52838BC, v31, (uint64_t)sub_1B52BD450, 0, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
            sub_1B528369C(sub_1B52838BC, v31, (uint64_t)sub_1B52BD450, 0, 0, 0);
LABEL_230:
            id v200 = v15;
            id v181 = v15;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47950);
            if (swift_dynamicCast())
            {

              long long v195 = v203;
              *(_OWORD *)unint64_t v197 = v202;
              uint64_t v182 = v204;
              sub_1B51D4D34();
              swift_allocError();
              *(_OWORD *)uint64_t v183 = *(_OWORD *)v197;
              *(_OWORD *)(v183 + 16) = v195;
              *(void *)(v183 + 32) = v182;
              swift_willThrow();

              return swift_bridgeObjectRelease_n();
            }

            sub_1B51D4D34();
            swift_allocError();
            *char v184 = v15;
            v184[1] = v10;
            v184[2] = 0x7272652072657355;
            v184[3] = 0xEA0000000000726FLL;
            v184[4] = v15;
            id v185 = v15;
LABEL_233:
            swift_willThrow();
            return swift_bridgeObjectRelease_n();
          }
          unsigned __int8 v198 = v32;
          sub_1B52838BC(&v198, &v199);
          swift_bridgeObjectRelease();
          int64_t v8 = *((void *)&v202 + 1);
          unint64_t v9 = v202;
          uint64_t v18 = v203;
          uint64_t v205 = v199;
          sub_1B52BD450(&v205, (uint64_t)&v200);
          uint64_t v196 = 0;
          swift_release();
          swift_bridgeObjectRelease();
          sub_1B528374C((uint64_t)sub_1B52838BC, v31, (uint64_t)sub_1B52BD450, 0, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
          uint64_t v12 = (uint64_t)v200;
          char v192 = v201;
          sub_1B528374C((uint64_t)sub_1B52838BC, v31, (uint64_t)sub_1B52BD450, 0, 0, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
          sub_1B528369C(sub_1B52838BC, v31, (uint64_t)sub_1B52BD450, 0, 0, 0);
          swift_bridgeObjectRelease();
          a3 = v18;
          a4 = v194;
          if (v192) {
            goto LABEL_23;
          }
        }
      }
      else
      {
        uint64_t v24 = swift_allocObject();
        *(unsigned char *)(v24 + 16) = v12;
        *(void *)&long long v202 = v9 + 1;
        *((void *)&v202 + 1) = v8;
        *(void *)&long long v203 = a3;
        swift_bridgeObjectRetain_n();
        sub_1B528374C((uint64_t)sub_1B52838E8, v24, (uint64_t)sub_1B52BB0CC, 0, 257, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B52837B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B52837FC);
        swift_retain();
        unsigned __int8 v25 = sub_1B52BD17C((unint64_t *)&v202);
        double v15 = v196;
        if (v196)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B528374C((uint64_t)sub_1B52838E8, v24, (uint64_t)sub_1B52BB0CC, 0, 257, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
          sub_1B528374C((uint64_t)sub_1B52838E8, v24, (uint64_t)sub_1B52BB0CC, 0, 257, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
          goto LABEL_230;
        }
        unsigned __int8 v198 = v25;
        sub_1B52838E8(&v198, &v199);
        swift_bridgeObjectRelease();
        int64_t v8 = *((void *)&v202 + 1);
        unint64_t v9 = v202;
        uint64_t v18 = v203;
        uint64_t v205 = v199;
        sub_1B52BB0CC(&v205, (uint64_t)&v200);
        uint64_t v196 = 0;
        swift_release();
        swift_bridgeObjectRelease();
        sub_1B528374C((uint64_t)sub_1B52838E8, v24, (uint64_t)sub_1B52BB0CC, 0, 257, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
        uint64_t v12 = (uint64_t)v200;
        char v191 = v201;
        sub_1B528374C((uint64_t)sub_1B52838E8, v24, (uint64_t)sub_1B52BB0CC, 0, 257, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
        swift_bridgeObjectRelease();
        a3 = v18;
        a4 = v194;
        if (v191) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_1B528374C(v12, 0, 0, 1, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
      sub_1B528374C(v12, 0, 0, 1, 0, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B528369C);
      sub_1B528379C(v12, 0, 0, 1, 0, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5200F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B5283658);
      swift_bridgeObjectRelease();
      ++v9;
    }
    switch(v12)
    {
      case 1:
      case 3:
        if (*((void *)*a4 + 2) <= 1uLL) {
          goto LABEL_223;
        }
        goto LABEL_3;
      case 2:
      case 12:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
LABEL_235:
        swift_bridgeObjectRelease();
        sub_1B5283604();
        swift_allocError();
        *BOOL v186 = 2;
        return swift_willThrow();
      case 4:
        double v33 = *a4;
        if (!*((void *)*a4 + 2)) {
          goto LABEL_223;
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v34 = *((void *)v33 + 4);
        swift_bridgeObjectRelease();
        uint64_t v35 = v193;
        uint64_t v36 = *(void *)(v193 + 224);
        BOOL v37 = __OFADD__(v36, v34);
        uint64_t v38 = v36 + v34;
        if (!v37) {
          goto LABEL_58;
        }
        goto LABEL_247;
      case 5:
        long long v39 = *a4;
        if (*((void *)*a4 + 2) <= 1uLL) {
          goto LABEL_223;
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v41 = *((void *)v39 + 4);
        uint64_t v40 = *((void *)v39 + 5);
        swift_bridgeObjectRelease();
        uint64_t v42 = v193;
        uint64_t v43 = *(void *)(v193 + 216);
        BOOL v37 = __OFADD__(v43, v41);
        uint64_t v44 = v43 + v41;
        if (v37) {
          goto LABEL_248;
        }
        uint64_t v45 = *(void *)(v193 + 224);
        BOOL v37 = __OFADD__(v45, v40);
        uint64_t v46 = v45 + v40;
        if (!v37) {
          goto LABEL_91;
        }
        goto LABEL_249;
      case 6:
        uint64_t v47 = *a4;
        if (!*((void *)*a4 + 2)) {
          goto LABEL_223;
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v48 = *((void *)v47 + 4);
        swift_bridgeObjectRelease();
        uint64_t v35 = v193;
        uint64_t v49 = *(void *)(v193 + 216);
        BOOL v37 = __OFADD__(v49, v48);
        uint64_t v50 = v49 + v48;
        if (!v37) {
          goto LABEL_95;
        }
        goto LABEL_250;
      case 7:
        long long v51 = *a4;
        if (!*((void *)*a4 + 2)) {
          goto LABEL_223;
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v52 = *((void *)v51 + 4);
        swift_bridgeObjectRelease();
        uint64_t v35 = v193;
        uint64_t v53 = *(void *)(v193 + 224);
        BOOL v37 = __OFADD__(v53, v52);
        uint64_t v38 = v53 + v52;
        if (v37) {
          goto LABEL_251;
        }
LABEL_58:
        *(void *)(v35 + 224) = v38;
        double v54 = (double)*(uint64_t *)(v35 + 216);
        double v55 = (double)v38;
        if ((*(unsigned char *)(v35 + 184) & 1) == 0) {
          goto LABEL_59;
        }
        goto LABEL_96;
      case 8:
        long long v60 = *a4;
        if (*((void *)*a4 + 2) <= 5uLL) {
          goto LABEL_223;
        }
        long long v61 = a4;
        uint64_t v62 = a3;
        *long long v61 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v64 = *((void *)v60 + 4);
        uint64_t v63 = *((void *)v60 + 5);
        uint64_t v66 = *((void *)v60 + 6);
        uint64_t v65 = *((void *)v60 + 7);
        uint64_t v68 = *((void *)v60 + 8);
        uint64_t v67 = *((void *)v60 + 9);
        swift_bridgeObjectRelease();
        uint64_t v69 = *(void *)(v193 + 216);
        BOOL v37 = __OFADD__(v69, v64);
        uint64_t v70 = v69 + v64;
        if (v37) {
          goto LABEL_252;
        }
        uint64_t v71 = *(void *)(v193 + 224);
        BOOL v37 = __OFADD__(v71, v63);
        uint64_t v72 = v71 + v63;
        if (v37) {
          goto LABEL_253;
        }
        *(void *)(v193 + 216) = v70;
        *(void *)(v193 + 224) = v72;
        uint64_t v73 = v70 + v66;
        if (__OFADD__(v70, v66)) {
          goto LABEL_254;
        }
        a3 = v62;
        uint64_t v74 = v72 + v65;
        a4 = v194;
        if (__OFADD__(v72, v65)) {
          goto LABEL_255;
        }
        *(void *)(v193 + 216) = v73;
        *(void *)(v193 + 224) = v74;
        uint64_t v75 = v73 + v68;
        if (__OFADD__(v73, v68)) {
          goto LABEL_256;
        }
        uint64_t v76 = v74 + v67;
        if (__OFADD__(v74, v67)) {
          goto LABEL_257;
        }
        *(void *)(v193 + 216) = v75;
        *(void *)(v193 + 224) = v76;
        sub_1B524EC04((double)v75, (double)v76, (double)v70, (double)v72, (double)v73, (double)v74);
        break;
      case 9:
      case 14:
LABEL_3:
        swift_bridgeObjectRelease();
        *a4 = (char *)MEMORY[0x1E4FBC860];
        break;
      case 10:
        unint64_t v77 = *a4;
        if (!*((void *)*a4 + 2)) {
          goto LABEL_224;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v77 = sub_1B529359C((uint64_t)v77);
        }
        uint64_t v78 = *((void *)v77 + 2);
        if (!v78) {
          goto LABEL_258;
        }
        uint64_t v79 = v78 - 1;
        uint64_t v80 = *(void *)&v77[8 * v78 + 24];
        *((void *)v77 + 2) = v79;
        *a4 = v77;
        if (v80 < 0 || (uint64_t v81 = *(void *)(v193 + 144), v80 >= *(void *)(v81 + 16)))
        {
          sub_1B520AB64();
          swift_allocError();
          char v180 = 3;
          goto LABEL_225;
        }
        uint64_t v82 = v81 + 16 * v80;
        uint64_t v84 = *(void *)(v82 + 32);
        unint64_t v83 = *(void *)(v82 + 40);
        uint64_t v85 = (uint64_t)a4[1];
        if (v85 >= 10)
        {
          sub_1B5283604();
          swift_allocError();
          *uint64_t v187 = 5;
          sub_1B51D4BB8(v84, v83);
          swift_willThrow();
          swift_bridgeObjectRelease();
          return sub_1B51D4C64(v84, v83);
        }
        a4[1] = (char *)(v85 + 1);
        *(void *)&long long v202 = v84;
        *((void *)&v202 + 1) = v83;
        sub_1B51D4BB8(v84, v83);
        sub_1B51D4BB8(v84, v83);
        sub_1B51D4C10();
        uint64_t v86 = sub_1B53724D8();
        sub_1B527E918(v86);
        if (v196)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = sub_1B51D4C64(v84, v83);
          char v189 = a4[1];
          BOOL v37 = __OFSUB__(v189, 1);
          unsigned __int8 v190 = v189 - 1;
          if (!v37)
          {
            a4[1] = v190;
            return result;
          }
LABEL_280:
          __break(1u);
          JUMPOUT(0x1B5280900);
        }
        swift_bridgeObjectRelease();
        sub_1B51D4C64(v84, v83);
        char v87 = a4[1];
        BOOL v37 = __OFSUB__(v87, 1);
        uint64_t v88 = v87 - 1;
        if (v37) {
          goto LABEL_276;
        }
        a4[1] = v88;
        break;
      case 11:
        return swift_bridgeObjectRelease();
      case 13:
        uint64_t v89 = *a4;
        if (*((void *)*a4 + 2) <= 1uLL) {
          goto LABEL_223;
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v90 = *((void *)v89 + 4);
        swift_bridgeObjectRelease();
        *(void *)(v193 + 216) = v90;
        *(void *)(v193 + 224) = 0;
        *(void *)(v193 + 200) = v90;
        *(void *)(v193 + 208) = 0;
        break;
      case 21:
        uint64_t v91 = *a4;
        if (*((void *)*a4 + 2) <= 1uLL) {
          goto LABEL_223;
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v93 = *((void *)v91 + 4);
        uint64_t v92 = *((void *)v91 + 5);
        swift_bridgeObjectRelease();
        uint64_t v42 = v193;
        uint64_t v94 = *(void *)(v193 + 216);
        BOOL v37 = __OFADD__(v94, v93);
        uint64_t v44 = v94 + v93;
        if (v37) {
          goto LABEL_259;
        }
        uint64_t v95 = *(void *)(v193 + 224);
        BOOL v37 = __OFADD__(v95, v92);
        uint64_t v46 = v95 + v92;
        if (v37) {
          goto LABEL_260;
        }
LABEL_91:
        *(void *)(v42 + 216) = v44;
        *(void *)(v42 + 224) = v46;
        double v96 = (double)v44;
        double v97 = (double)v46;
        if (*(unsigned char *)(v42 + 184))
        {
          double v98 = (double)v44;
          double v99 = (double)v46;
        }
        else
        {
          double v98 = *(double *)(v42 + 168);
          double v99 = *(double *)(v42 + 176);
          double v169 = *(double *)(v42 + 152);
          double v168 = *(double *)(v42 + 160);
          if (v169 >= v96) {
            double v169 = (double)v44;
          }
          if (v98 < v96) {
            double v98 = (double)v44;
          }
          if (v168 >= v97) {
            double v168 = (double)v46;
          }
          if (v99 < v97) {
            double v99 = (double)v46;
          }
          double v96 = v169;
          double v97 = v168;
        }
        *(double *)(v42 + 152) = v96;
        *(double *)(v42 + 160) = v97;
        *(double *)(v42 + 168) = v98;
        *(double *)(v42 + 176) = v99;
        *(unsigned char *)(v42 + 184) = 0;
        break;
      case 22:
        uint64_t v100 = *a4;
        if (!*((void *)*a4 + 2)) {
          goto LABEL_223;
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v101 = *((void *)v100 + 4);
        swift_bridgeObjectRelease();
        uint64_t v35 = v193;
        uint64_t v102 = *(void *)(v193 + 216);
        BOOL v37 = __OFADD__(v102, v101);
        uint64_t v50 = v102 + v101;
        if (v37) {
          goto LABEL_261;
        }
LABEL_95:
        *(void *)(v35 + 216) = v50;
        double v54 = (double)v50;
        double v55 = (double)*(uint64_t *)(v35 + 224);
        if (*(unsigned char *)(v35 + 184))
        {
LABEL_96:
          double v56 = v54;
          double v57 = v55;
        }
        else
        {
LABEL_59:
          double v56 = *(double *)(v35 + 168);
          double v57 = *(double *)(v35 + 176);
          double v59 = *(double *)(v35 + 152);
          double v58 = *(double *)(v35 + 160);
          if (v59 >= v54) {
            double v59 = v54;
          }
          if (v56 < v54) {
            double v56 = v54;
          }
          if (v58 >= v55) {
            double v58 = v55;
          }
          if (v57 < v55) {
            double v57 = v55;
          }
          double v54 = v59;
          double v55 = v58;
        }
        *(double *)(v35 + 152) = v54;
        *(double *)(v35 + 160) = v55;
        *(double *)(v35 + 168) = v56;
        *(double *)(v35 + 176) = v57;
        *(unsigned char *)(v35 + 184) = 0;
        break;
      case 30:
        uint64_t v103 = *a4;
        if (*((void *)*a4 + 2) <= 3uLL) {
          goto LABEL_223;
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v105 = *((void *)v103 + 4);
        uint64_t v104 = *((void *)v103 + 5);
        uint64_t v107 = *((void *)v103 + 6);
        uint64_t v106 = *((void *)v103 + 7);
        swift_bridgeObjectRelease();
        uint64_t v108 = *(void *)(v193 + 224);
        BOOL v37 = __OFADD__(v108, v105);
        uint64_t v109 = v108 + v105;
        if (v37) {
          goto LABEL_262;
        }
        uint64_t v110 = *(void *)(v193 + 216);
        *(void *)(v193 + 224) = v109;
        uint64_t v111 = v110 + v104;
        if (__OFADD__(v110, v104)) {
          goto LABEL_263;
        }
        uint64_t v112 = v109 + v107;
        if (__OFADD__(v109, v107)) {
          goto LABEL_264;
        }
        *(void *)(v193 + 216) = v111;
        *(void *)(v193 + 224) = v112;
        uint64_t v113 = v111 + v106;
        if (__OFADD__(v111, v106)) {
          goto LABEL_265;
        }
        double v114 = (double)v112;
        *(void *)(v193 + 216) = v113;
        *(void *)(v193 + 224) = v112;
        double v115 = (double)v113;
        if (*(unsigned char *)(v193 + 184))
        {
          double v116 = (double)v112;
          double v117 = (double)v113;
          double v118 = (double)v112;
        }
        else
        {
          double v118 = *(double *)(v193 + 176);
          if (*(double *)(v193 + 152) >= v115) {
            double v170 = (double)v113;
          }
          else {
            double v170 = *(double *)(v193 + 152);
          }
          if (*(double *)(v193 + 168) < v115) {
            double v117 = (double)v113;
          }
          else {
            double v117 = *(double *)(v193 + 168);
          }
          if (*(double *)(v193 + 160) >= v114) {
            double v116 = (double)v112;
          }
          else {
            double v116 = *(double *)(v193 + 160);
          }
          if (v118 < v114) {
            double v118 = (double)v112;
          }
          double v115 = v170;
        }
        double v171 = (double)v109;
        double v172 = (double)v111;
        if (v115 >= (double)v110) {
          double v115 = (double)v110;
        }
        if (v117 < (double)v110) {
          double v117 = (double)v110;
        }
        if (v116 >= v171) {
          double v116 = (double)v109;
        }
        if (v118 < v171) {
          double v118 = (double)v109;
        }
        if (v115 >= v172) {
          double v115 = (double)v111;
        }
        if (v117 < v172) {
          double v117 = (double)v111;
        }
        if (v116 >= v114) {
          double v116 = (double)v112;
        }
        *(double *)(v193 + 152) = v115;
        *(double *)(v193 + 160) = v116;
        if (v118 >= v114) {
          double v114 = v118;
        }
        *(double *)(v193 + 168) = v117;
        *(double *)(v193 + 176) = v114;
        *(unsigned char *)(v193 + 184) = 0;
        break;
      case 31:
        char v119 = *a4;
        if (*((void *)*a4 + 2) <= 3uLL)
        {
LABEL_223:
          sub_1B5283604();
          swift_allocError();
          char v180 = 4;
LABEL_225:
          *unint64_t v179 = v180;
          swift_willThrow();
          return swift_bridgeObjectRelease();
        }
        *a4 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v121 = *((void *)v119 + 4);
        uint64_t v120 = *((void *)v119 + 5);
        uint64_t v123 = *((void *)v119 + 6);
        uint64_t v122 = *((void *)v119 + 7);
        swift_bridgeObjectRelease();
        uint64_t v124 = *(void *)(v193 + 216);
        BOOL v37 = __OFADD__(v124, v121);
        uint64_t v125 = v124 + v121;
        if (v37) {
          goto LABEL_266;
        }
        uint64_t v126 = *(void *)(v193 + 224);
        *(void *)(v193 + 216) = v125;
        uint64_t v127 = v125 + v120;
        if (__OFADD__(v125, v120)) {
          goto LABEL_267;
        }
        uint64_t v128 = v126 + v123;
        if (__OFADD__(v126, v123)) {
          goto LABEL_268;
        }
        *(void *)(v193 + 216) = v127;
        *(void *)(v193 + 224) = v128;
        uint64_t v129 = v128 + v122;
        if (__OFADD__(v128, v122)) {
          goto LABEL_269;
        }
        double v130 = (double)v127;
        *(void *)(v193 + 224) = v129;
        double v131 = (double)v129;
        if (*(unsigned char *)(v193 + 184))
        {
          double v132 = (double)v127;
          double v133 = (double)v127;
          double v134 = (double)v129;
        }
        else
        {
          double v133 = *(double *)(v193 + 168);
          double v134 = *(double *)(v193 + 176);
          double v132 = *(double *)(v193 + 152);
          double v173 = *(double *)(v193 + 160);
          if (v132 >= v130) {
            double v132 = (double)v127;
          }
          if (v133 < v130) {
            double v133 = (double)v127;
          }
          if (v173 >= v131) {
            double v173 = (double)v129;
          }
          if (v134 < v131) {
            double v134 = (double)v129;
          }
          double v131 = v173;
        }
        double v174 = (double)v126;
        double v175 = (double)v128;
        if (v132 >= (double)v125) {
          double v132 = (double)v125;
        }
        if (v133 < (double)v125) {
          double v133 = (double)v125;
        }
        if (v131 >= v174) {
          double v131 = (double)v126;
        }
        if (v134 < v174) {
          double v134 = (double)v126;
        }
        if (v132 >= v130) {
          double v132 = (double)v127;
        }
        if (v133 >= v130) {
          double v130 = v133;
        }
        if (v131 >= v175) {
          double v131 = (double)v128;
        }
        *(double *)(v193 + 152) = v132;
        *(double *)(v193 + 160) = v131;
        if (v134 < v175) {
          double v176 = (double)v128;
        }
        else {
          double v176 = v134;
        }
        *(double *)(v193 + 168) = v130;
        *(double *)(v193 + 176) = v176;
        *(unsigned char *)(v193 + 184) = 0;
        break;
      default:
        switch(v12)
        {
          case 256:
            goto LABEL_4;
          case 257:
          case 258:
            if (*((void *)*a4 + 2) <= 5uLL) {
              goto LABEL_223;
            }
            goto LABEL_3;
          case 262:
            if (*((void *)*a4 + 2) <= 4uLL) {
              goto LABEL_223;
            }
            goto LABEL_3;
          case 263:
            uint64_t v135 = *a4;
            if (*((void *)*a4 + 2) <= 3uLL) {
              goto LABEL_223;
            }
            *a4 = (char *)MEMORY[0x1E4FBC860];
            uint64_t v136 = *((void *)v135 + 4);
            uint64_t v137 = *((void *)v135 + 5);
            swift_bridgeObjectRelease();
            *(void *)(v193 + 216) = v136;
            *(void *)(v193 + 224) = v137;
            *(void *)(v193 + 200) = v136;
            *(void *)(v193 + 208) = v137;
            goto LABEL_4;
          case 268:
            unint64_t v138 = *a4;
            if (!*((void *)*a4 + 2)) {
              goto LABEL_224;
            }
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              unint64_t v139 = *((void *)v138 + 2);
              if (!v139) {
                goto LABEL_270;
              }
            }
            else
            {
              unint64_t v138 = sub_1B529359C((uint64_t)v138);
              unint64_t v139 = *((void *)v138 + 2);
              if (!v139) {
                goto LABEL_270;
              }
            }
            unint64_t v140 = v139 - 1;
            uint64_t v141 = *(void *)&v138[8 * v139 + 24];
            *((void *)v138 + 2) = v139 - 1;
            *a4 = v138;
            if (v139 == 1) {
              goto LABEL_224;
            }
            uint64_t v142 = a3;
            unint64_t v143 = v139 - 2;
            uint64_t v144 = *(void *)&v138[8 * v139 + 16];
            *((void *)v138 + 2) = v139 - 2;
            *a4 = v138;
            if (!v141) {
              goto LABEL_272;
            }
            if (v144 == 0x8000000000000000 && v141 == -1) {
              goto LABEL_279;
            }
            if (v139 > 0x31)
            {
              sub_1B5283604();
              swift_allocError();
              *unint64_t v188 = 4;
              swift_willThrow();
              return swift_bridgeObjectRelease();
            }
            unint64_t v145 = *((void *)v138 + 3);
            if (v140 > v145 >> 1) {
              unint64_t v138 = sub_1B51E7F50((char *)(v145 > 1), v140, 1, v138);
            }
            *((void *)v138 + 2) = v140;
            *(void *)&v138[8 * v143 + 32] = v144 / v141;
            *a4 = v138;
            a3 = v142;
            goto LABEL_4;
          case 272:
            unint64_t v146 = *a4;
            if (!*((void *)*a4 + 2)) {
              goto LABEL_224;
            }
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              uint64_t v147 = *((void *)v146 + 2);
              if (!v147) {
                goto LABEL_271;
              }
            }
            else
            {
              unint64_t v146 = sub_1B529359C((uint64_t)v146);
              uint64_t v147 = *((void *)v146 + 2);
              if (!v147) {
                goto LABEL_271;
              }
            }
            uint64_t v148 = v147 - 1;
            uint64_t v149 = *(void *)&v146[8 * v148 + 32];
            *((void *)v146 + 2) = v148;
            *a4 = v146;
            uint64_t v150 = *((void *)v146 + 2);
            if (!v150)
            {
LABEL_224:
              sub_1B5283604();
              swift_allocError();
              char v180 = 1;
              goto LABEL_225;
            }
            uint64_t v151 = a3;
            uint64_t v152 = v150 - 1;
            unint64_t v153 = *(void *)&v146[8 * v152 + 32];
            *((void *)v146 + 2) = v152;
            *a4 = v146;
            uint64_t v154 = *((void *)v146 + 2);
            uint64_t v155 = v154 - v153;
            if (__OFSUB__(v154, v153)) {
              goto LABEL_273;
            }
            if (v154 < v155) {
              goto LABEL_274;
            }
            if (v155 < 0) {
              goto LABEL_275;
            }
            unint64_t v156 = (2 * v154) | 1;
            uint64_t v157 = swift_bridgeObjectRetain();
            sub_1B527DEC0(v157, (uint64_t)(v146 + 32), v155, v156, v149);
            if (!v196)
            {
              swift_bridgeObjectRelease();
              if (v153)
              {
                if ((v153 & 0x8000000000000000) != 0) {
                  goto LABEL_277;
                }
                unint64_t v158 = *((void *)v146 + 2);
                if (v158 < v153) {
                  goto LABEL_278;
                }
                sub_1B52398A8(v158 - v153, v158);
                a3 = v151;
              }
              else
              {
                a3 = v151;
              }
              goto LABEL_4;
            }
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          case 273:
            sub_1B527E3C8();
            if (v196) {
              return swift_bridgeObjectRelease();
            }
            unint64_t v160 = *a4;
            unint64_t v161 = *((void *)*a4 + 2);
            if (v161 >= 0x30) {
              goto LABEL_223;
            }
            uint64_t v162 = v159;
            uint64_t v196 = 0;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v160 = sub_1B51E7F50(0, v161 + 1, 1, v160);
            }
            unint64_t v164 = *((void *)v160 + 2);
            unint64_t v163 = *((void *)v160 + 3);
            if (v164 >= v163 >> 1) {
              unint64_t v160 = sub_1B51E7F50((char *)(v163 > 1), v164 + 1, 1, v160);
            }
            *((void *)v160 + 2) = v164 + 1;
            *(void *)&v160[8 * v164 + 32] = v162;
            *a4 = v160;
            goto LABEL_4;
          case 289:
            unint64_t v165 = *a4;
            if (*((void *)*a4 + 2) < 2uLL) {
              goto LABEL_223;
            }
            *a4 = (char *)MEMORY[0x1E4FBC860];
            uint64_t v166 = *((void *)v165 + 4);
            uint64_t v167 = *((void *)v165 + 5);
            swift_bridgeObjectRelease();
            *(void *)(v193 + 216) = v166;
            *(void *)(v193 + 224) = v167;
            goto LABEL_4;
          default:
            goto LABEL_235;
        }
    }
LABEL_4:
    if (v9 == v8) {
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1B5280A04(uint64_t result)
{
  double v1 = (double)result;
  if ((double)result >= 9.22337204e18)
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if ((uint64_t)v1 == result) {
    *(double *)&uint64_t result = (double)result;
  }
  else {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t sub_1B5280A64(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B53731D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_142;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v82 = *a1;
      uint64_t v83 = -1;
      uint64_t v84 = 1;
      uint64_t v85 = *a1;
      do
      {
        uint64_t v86 = v83;
        uint64_t v87 = v85;
        do
        {
          unsigned int v88 = *(_DWORD *)(v87 + 8);
          if (v88 >= *(_DWORD *)v87) {
            break;
          }
          if (!v82) {
            goto LABEL_146;
          }
          __int16 v89 = *(_WORD *)(v87 + 12);
          *(void *)(v87 + 8) = *(void *)v87;
          *(_DWORD *)uint64_t v87 = v88;
          *(_WORD *)(v87 + 4) = v89;
          v87 -= 8;
        }
        while (!__CFADD__(v86++, 1));
        ++v84;
        v85 += 8;
        --v83;
      }
      while (v84 != v3);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_141;
    }
    uint64_t v6 = result;
    double v98 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      uint64_t result = sub_1B5372A88();
      *(void *)(result + 16) = v7;
      uint64_t v100 = result;
      uint64_t v104 = (char *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v99 = *a1 + 16;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v101 = v6;
      uint64_t v102 = v3;
      uint64_t v103 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          unsigned int v14 = *(_DWORD *)(v10 + 8 * v9);
          uint64_t v15 = 8 * v13;
          unsigned int v16 = *(_DWORD *)(v10 + 8 * v13);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            uint64_t v17 = (_DWORD *)(v99 + 8 * v13);
            while (v14 < v16 != *v17 >= *(v17 - 2))
            {
              v17 += 2;
              if (v3 == ++v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v16)
          {
            if (v9 < v13) {
              goto LABEL_143;
            }
            if (v13 < v9)
            {
              uint64_t v18 = 8 * v9 - 8;
              uint64_t v19 = v9;
              uint64_t v20 = v13;
              do
              {
                if (v20 != --v19)
                {
                  if (!v10) {
                    goto LABEL_149;
                  }
                  unint64_t v22 = (void *)(v10 + v15);
                  unint64_t v23 = (void *)(v10 + v18);
                  int v24 = *(_DWORD *)(v10 + v15);
                  __int16 v25 = *(_WORD *)(v10 + v15 + 4);
                  if (v15 != v18 || v22 >= v23 + 1) {
                    *unint64_t v22 = *v23;
                  }
                  uint64_t v21 = v10 + v18;
                  *(_DWORD *)uint64_t v21 = v24;
                  *(_WORD *)(v21 + 4) = v25;
                }
                ++v20;
                v18 -= 8;
                v15 += 8;
              }
              while (v20 < v19);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_140;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v26 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_144;
            }
            if (v26 >= v3) {
              uint64_t v26 = v3;
            }
            if (v26 < v13)
            {
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
              return result;
            }
            if (v9 != v26)
            {
              unsigned int v27 = (int *)(v10 + 8 * v9);
              do
              {
                signed int v28 = v27;
                uint64_t v29 = v13;
                do
                {
                  int v30 = *v28;
                  if (*v28 >= *(v28 - 2)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_147;
                  }
                  __int16 v31 = *((_WORD *)v28 + 2);
                  *(void *)signed int v28 = *((void *)v28 - 1);
                  *(v28 - 2) = v30;
                  *((_WORD *)v28 - 2) = v31;
                  ++v29;
                  v28 -= 2;
                }
                while (v9 != v29);
                ++v9;
                v27 += 2;
              }
              while (v9 != v26);
              uint64_t v9 = v26;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_135;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1B51DA83C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v33 = *(void *)(v11 + 16);
        unint64_t v32 = *(void *)(v11 + 24);
        unint64_t v12 = v33 + 1;
        uint64_t v10 = v103;
        if (v33 >= v32 >> 1)
        {
          uint64_t result = (uint64_t)sub_1B51DA83C((char *)(v32 > 1), v33 + 1, 1, (char *)v11);
          uint64_t v10 = v103;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v34 = v11 + 32;
        uint64_t v35 = (uint64_t *)(v11 + 32 + 16 * v33);
        *uint64_t v35 = v13;
        v35[1] = v9;
        if (v33)
        {
          while (1)
          {
            unint64_t v36 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v41 = v34 + 16 * v12;
              uint64_t v42 = *(void *)(v41 - 64);
              uint64_t v43 = *(void *)(v41 - 56);
              BOOL v47 = __OFSUB__(v43, v42);
              uint64_t v44 = v43 - v42;
              if (v47) {
                goto LABEL_124;
              }
              uint64_t v46 = *(void *)(v41 - 48);
              uint64_t v45 = *(void *)(v41 - 40);
              BOOL v47 = __OFSUB__(v45, v46);
              uint64_t v39 = v45 - v46;
              char v40 = v47;
              if (v47) {
                goto LABEL_125;
              }
              unint64_t v48 = v12 - 2;
              uint64_t v49 = (uint64_t *)(v34 + 16 * (v12 - 2));
              uint64_t v51 = *v49;
              uint64_t v50 = v49[1];
              BOOL v47 = __OFSUB__(v50, v51);
              uint64_t v52 = v50 - v51;
              if (v47) {
                goto LABEL_126;
              }
              BOOL v47 = __OFADD__(v39, v52);
              uint64_t v53 = v39 + v52;
              if (v47) {
                goto LABEL_128;
              }
              if (v53 >= v44)
              {
                uint64_t v71 = (uint64_t *)(v34 + 16 * v36);
                uint64_t v73 = *v71;
                uint64_t v72 = v71[1];
                BOOL v47 = __OFSUB__(v72, v73);
                uint64_t v74 = v72 - v73;
                if (v47) {
                  goto LABEL_134;
                }
                BOOL v64 = v39 < v74;
                goto LABEL_87;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v65 = *(void *)(v11 + 32);
                uint64_t v66 = *(void *)(v11 + 40);
                BOOL v47 = __OFSUB__(v66, v65);
                uint64_t v58 = v66 - v65;
                char v59 = v47;
                goto LABEL_81;
              }
              uint64_t v38 = *(void *)(v11 + 32);
              uint64_t v37 = *(void *)(v11 + 40);
              BOOL v47 = __OFSUB__(v37, v38);
              uint64_t v39 = v37 - v38;
              char v40 = v47;
            }
            if (v40) {
              goto LABEL_127;
            }
            unint64_t v48 = v12 - 2;
            double v54 = (uint64_t *)(v34 + 16 * (v12 - 2));
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v57 = __OFSUB__(v55, v56);
            uint64_t v58 = v55 - v56;
            char v59 = v57;
            if (v57) {
              goto LABEL_129;
            }
            long long v60 = (uint64_t *)(v34 + 16 * v36);
            uint64_t v62 = *v60;
            uint64_t v61 = v60[1];
            BOOL v47 = __OFSUB__(v61, v62);
            uint64_t v63 = v61 - v62;
            if (v47) {
              goto LABEL_131;
            }
            if (__OFADD__(v58, v63)) {
              goto LABEL_133;
            }
            if (v58 + v63 >= v39)
            {
              BOOL v64 = v39 < v63;
LABEL_87:
              if (v64) {
                unint64_t v36 = v48;
              }
              goto LABEL_89;
            }
LABEL_81:
            if (v59) {
              goto LABEL_130;
            }
            uint64_t v67 = (uint64_t *)(v34 + 16 * v36);
            uint64_t v69 = *v67;
            uint64_t v68 = v67[1];
            BOOL v47 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            if (v47) {
              goto LABEL_132;
            }
            if (v70 < v58) {
              goto LABEL_15;
            }
LABEL_89:
            unint64_t v75 = v36 - 1;
            if (v36 - 1 >= v12)
            {
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
              goto LABEL_145;
            }
            if (!v10) {
              goto LABEL_148;
            }
            uint64_t v76 = v11;
            unint64_t v77 = (uint64_t *)(v34 + 16 * v75);
            uint64_t v78 = *v77;
            uint64_t v79 = (void *)(v34 + 16 * v36);
            uint64_t v80 = v79[1];
            uint64_t result = sub_1B5281108((char *)(v10 + 8 * *v77), (char *)(v10 + 8 * *v79), v10 + 8 * v80, v104);
            if (v1) {
              goto LABEL_97;
            }
            if (v80 < v78) {
              goto LABEL_121;
            }
            if (v36 > *(void *)(v76 + 16)) {
              goto LABEL_122;
            }
            *unint64_t v77 = v78;
            *(void *)(v34 + 16 * v75 + 8) = v80;
            unint64_t v81 = *(void *)(v76 + 16);
            if (v36 >= v81) {
              goto LABEL_123;
            }
            uint64_t v11 = v76;
            unint64_t v12 = v81 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v34 + 16 * v36), v79 + 2, 16 * (v81 - 1 - v36));
            *(void *)(v76 + 16) = v81 - 1;
            uint64_t v10 = v103;
            if (v81 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v101;
        uint64_t v3 = v102;
        if (v9 >= v102)
        {
          uint64_t v8 = v100;
          goto LABEL_107;
        }
      }
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v104 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v100 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_107:
    uint64_t result = v11;
    uint64_t v100 = v8;
    if (v12 >= 2)
    {
      uint64_t v91 = *v98;
      do
      {
        unint64_t v92 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_136;
        }
        if (!v91) {
          goto LABEL_150;
        }
        uint64_t v93 = result;
        uint64_t v94 = *(void *)(result + 32 + 16 * v92);
        uint64_t v95 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_1B5281108((char *)(v91 + 8 * v94), (char *)(v91 + 8 * *(void *)(result + 32 + 16 * (v12 - 1))), v91 + 8 * v95, v104);
        if (v1) {
          break;
        }
        if (v95 < v94) {
          goto LABEL_137;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1B51DA938(v93);
          uint64_t v93 = result;
        }
        if (v92 >= *(void *)(v93 + 16)) {
          goto LABEL_138;
        }
        double v96 = (void *)(v93 + 32 + 16 * v92);
        *double v96 = v94;
        v96[1] = v95;
        unint64_t v97 = *(void *)(v93 + 16);
        if (v12 > v97) {
          goto LABEL_139;
        }
        memmove((void *)(v93 + 32 + 16 * (v12 - 1)), (const void *)(v93 + 32 + 16 * v12), 16 * (v97 - v12));
        uint64_t result = v93;
        *(void *)(v93 + 16) = v97 - 1;
        unint64_t v12 = v97 - 1;
      }
      while (v97 > 2);
    }
LABEL_97:
    swift_bridgeObjectRelease();
    *(void *)(v100 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B5281108(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v13)
  {
    uint64_t v18 = 8 * v13;
    if (a4 != __src || &__src[v18] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    uint64_t v15 = &v4[v18];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_40;
    }
    uint64_t v19 = (char *)(a3 - 8);
    while (1)
    {
      uint64_t v20 = v19 + 8;
      uint64_t v21 = v6 - 8;
      if (*((_DWORD *)v15 - 2) >= *((_DWORD *)v6 - 2))
      {
        uint64_t v21 = v15 - 8;
        if (v20 != v15)
        {
          v15 -= 8;
          goto LABEL_37;
        }
        BOOL v22 = v19 >= v15;
        v15 -= 8;
        if (v22) {
          goto LABEL_37;
        }
      }
      else
      {
        if (v20 != v6)
        {
          v6 -= 8;
LABEL_37:
          *(void *)uint64_t v19 = *(void *)v21;
          goto LABEL_38;
        }
        BOOL v22 = v19 >= v6;
        v6 -= 8;
        if (v22) {
          goto LABEL_37;
        }
      }
LABEL_38:
      if (v6 > v7)
      {
        v19 -= 8;
        if (v15 > v4) {
          continue;
        }
      }
      goto LABEL_40;
    }
  }
  size_t v14 = 8 * v10;
  if (a4 != __dst || &__dst[v14] <= a4) {
    memmove(a4, __dst, v14);
  }
  uint64_t v15 = &v4[v14];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (*(_DWORD *)v6 < *(_DWORD *)v4)
    {
      unsigned int v16 = v6;
      BOOL v17 = v7 == v6;
      v6 += 8;
      if (!v17) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 8;
      if (v4 >= v15 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    unsigned int v16 = v4;
    BOOL v17 = v7 == v4;
    v4 += 8;
    if (v17) {
      goto LABEL_17;
    }
LABEL_16:
    *(void *)uint64_t v7 = *(void *)v16;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_40:
  size_t v23 = (v15 - v4 + (v15 - v4 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8;
  if (v6 != v4 || v6 >= &v4[v23]) {
    memmove(v6, v4, v23);
  }
  return 1;
}

uint64_t sub_1B5281314(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  int64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _s10FontParser05Type1A0V6string4name13matchingQuerySSSgAA20NameStringIdentifierV_AA04IntlG0VtF_0(unsigned __int16 a1)
{
  uint64_t v2 = *(void *)(v1 + 144);
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_1B5230870(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 16 * v3);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1B52813F4(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for Type1CharStringRenderer()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1B52814D8()
{
  unint64_t result = qword_1E9D489E8[0];
  if (!qword_1E9D489E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9D489E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Type1FontError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B52815F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Type1FontError()
{
  return &type metadata for Type1FontError;
}

uint64_t destroy for Type1Font(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 176);
  if (*(void *)(a1 + 240)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 216);
  }
  uint64_t result = *(void *)(a1 + 472);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Type1Font(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  LODWORD(v8) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 139) = *(_DWORD *)(a2 + 139);
  *(_DWORD *)(a1 + 136) = v8;
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  uint64_t v30 = a2 + 176;
  uint64_t v31 = a1 + 176;
  long long v11 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 200) = v11;
  uint64_t v12 = v11;
  uint64_t v29 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v31, v30, v12);
  uint64_t v13 = (_OWORD *)(a1 + 216);
  size_t v14 = (_OWORD *)(a2 + 216);
  uint64_t v15 = *(void *)(a2 + 240);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v15;
    *(void *)(a1 + 248) = v16;
    (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 232);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 232) = v17;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
  }
  long long v18 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v18;
  long long v19 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v19;
  *(_OWORD *)(a1 + 313) = *(_OWORD *)(a2 + 313);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  long long v20 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v20;
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  long long v21 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v21;
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  uint64_t v22 = *(void *)(a2 + 472);
  if (v22)
  {
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(void *)(a1 + 472) = v22;
    uint64_t v23 = *(void *)(a2 + 488);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = v23;
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v24 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v24;
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
  }
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  long long v25 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v25;
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  long long v26 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v26;
  long long v27 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v27;
  *(_WORD *)(a1 + 640) = *(_WORD *)(a2 + 640);
  return a1;
}

uint64_t assignWithCopy for Type1Font(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  int v4 = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 112) = v4;
  int v5 = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 120) = v5;
  int v6 = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  *(_DWORD *)(a1 + 128) = v6;
  int v7 = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 139) = *(_DWORD *)(a2 + 139);
  *(_DWORD *)(a1 + 136) = v7;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 176), (uint64_t *)(a2 + 176));
  uint64_t v8 = *(void *)(a2 + 240);
  if (*(void *)(a1 + 240))
  {
    if (v8)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 216);
  }
  else if (v8)
  {
    *(void *)(a1 + 240) = v8;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 216, a2 + 216);
    goto LABEL_8;
  }
  long long v9 = *(_OWORD *)(a2 + 216);
  long long v10 = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(_OWORD *)(a1 + 216) = v9;
  *(_OWORD *)(a1 + 232) = v10;
LABEL_8:
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  long long v11 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 313) = *(_OWORD *)(a2 + 313);
  *(_OWORD *)(a1 + 304) = v11;
  long long v12 = *(_OWORD *)(a2 + 336);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = v12;
  long long v13 = *(_OWORD *)(a2 + 360);
  long long v14 = *(_OWORD *)(a2 + 376);
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(_OWORD *)(a1 + 360) = v13;
  *(_OWORD *)(a1 + 376) = v14;
  long long v15 = *(_OWORD *)(a2 + 400);
  long long v16 = *(_OWORD *)(a2 + 416);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  *(_OWORD *)(a1 + 400) = v15;
  *(_OWORD *)(a1 + 416) = v16;
  long long v17 = *(_OWORD *)(a2 + 440);
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = v17;
  long long v18 = (_OWORD *)(a1 + 464);
  long long v19 = (_OWORD *)(a2 + 464);
  uint64_t v20 = *(void *)(a2 + 472);
  if (*(void *)(a1 + 472))
  {
    if (v20)
    {
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
    }
    else
    {
      sub_1B51FFB2C(a1 + 464);
      uint64_t v21 = *(void *)(a2 + 496);
      long long v22 = *(_OWORD *)(a2 + 480);
      *long long v18 = *v19;
      *(_OWORD *)(a1 + 480) = v22;
      *(void *)(a1 + 496) = v21;
    }
  }
  else if (v20)
  {
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *v19;
    long long v24 = *(_OWORD *)(a2 + 480);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *long long v18 = v23;
    *(_OWORD *)(a1 + 480) = v24;
  }
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  uint64_t v25 = *(void *)(a2 + 560);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  *(void *)(a1 + 560) = v25;
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(unsigned char *)(a1 + 641) = *(unsigned char *)(a2 + 641);
  return a1;
}

void *__swift_memcpy642_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x282uLL);
}

uint64_t assignWithTake for Type1Font(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  *(_DWORD *)(a1 + 139) = *(_DWORD *)(a2 + 139);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  __swift_destroy_boxed_opaque_existential_1(a1 + 176);
  long long v4 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v4;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  if (*(void *)(a1 + 240)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 216);
  }
  long long v5 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v5;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  long long v6 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v6;
  long long v7 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v7;
  *(_OWORD *)(a1 + 313) = *(_OWORD *)(a2 + 313);
  long long v8 = *(_OWORD *)(a2 + 336);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = v8;
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  long long v9 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v9;
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  long long v10 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v10;
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  if (!*(void *)(a1 + 472)) {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(a2 + 472);
  if (!v11)
  {
    sub_1B51FFB2C(a1 + 464);
LABEL_7:
    long long v13 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v13;
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    goto LABEL_8;
  }
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
LABEL_8:
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  long long v14 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v14;
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  long long v15 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v15;
  long long v16 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v16;
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(unsigned char *)(a1 + 641) = *(unsigned char *)(a2 + 641);
  return a1;
}

uint64_t getEnumTagSinglePayload for Type1Font(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 642)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Type1Font(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 632) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_WORD *)(result + 640) = 0;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 642) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 642) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Type1Font()
{
  return &type metadata for Type1Font;
}

uint64_t sub_1B5282288()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1B5282354(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((((v7 + ((v6 + 152) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    uint64_t v10 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v11 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v11;
    uint64_t v12 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v12;
    uint64_t v13 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v13;
    uint64_t v14 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v14;
    uint64_t v15 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v15;
    *(void *)(a1 + 88) = a2[11];
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_DWORD *)(a1 + 115) = *(_DWORD *)((char *)a2 + 115);
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    *(_DWORD *)(a1 + 123) = *(_DWORD *)((char *)a2 + 123);
    *(_DWORD *)(a1 + 120) = *((_DWORD *)a2 + 30);
    *(_DWORD *)(a1 + 131) = *(_DWORD *)((char *)a2 + 131);
    *(_DWORD *)(a1 + 128) = *((_DWORD *)a2 + 32);
    long long v16 = (_DWORD *)((a1 + 138) & 0xFFFFFFFFFFFFFFFCLL);
    long long v17 = (int *)(((unint64_t)a2 + 138) & 0xFFFFFFFFFFFFFFFCLL);
    int v18 = *v17;
    *(_DWORD *)((char *)v16 + 3) = *(int *)((char *)v17 + 3);
    *long long v16 = v18;
    long long v19 = (void *)(((unint64_t)v16 + 14) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)v17 + 14) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = ((unint64_t)v19 + v6 + 8) & ~v6;
    *long long v19 = *v20;
    uint64_t v22 = ((unint64_t)v20 + v6 + 8) & ~v6;
    long long v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v29 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v21, v22, v29);
    long long v24 = (void *)((v7 + v21) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (void *)((v7 + v22) & 0xFFFFFFFFFFFFFFF8);
    *long long v24 = *v25;
    long long v26 = (_OWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v27 = (_OWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v26 = *v27;
    *(_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  }
  return v3;
}

uint64_t sub_1B52825D8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((((a1 + 138) & 0xFFFFFFFFFFFFFFFCLL) + 14) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

uint64_t sub_1B52826B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  long long v9 = (_DWORD *)((a1 + 138) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v10 = (int *)((a2 + 138) & 0xFFFFFFFFFFFFFFFCLL);
  int v11 = *v10;
  *(_DWORD *)((char *)v9 + 3) = *(int *)((char *)v10 + 3);
  *long long v9 = v11;
  uint64_t v12 = (void *)(((unint64_t)v9 + 14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v10 + 14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  uint64_t v15 = *(void *)(v14 - 8) + 16;
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v17 = ((unint64_t)v12 + v16 + 8) & ~v16;
  uint64_t v18 = ((unint64_t)v13 + v16 + 8) & ~v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(v17, v18, v14);
  uint64_t v19 = *(void *)(v15 + 48) + 7;
  uint64_t v20 = (void *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  uint64_t v22 = (_OWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v23 = (_OWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v22 = *v23;
  *(_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B52828AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  int v6 = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 112) = v6;
  int v7 = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 120) = v7;
  int v8 = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  *(_DWORD *)(a1 + 128) = v8;
  long long v9 = (_DWORD *)((a1 + 138) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v10 = (int *)((a2 + 138) & 0xFFFFFFFFFFFFFFFCLL);
  int v11 = *v10;
  *(_DWORD *)((char *)v9 + 3) = *(int *)((char *)v10 + 3);
  *long long v9 = v11;
  uint64_t v12 = (void *)(((unint64_t)v9 + 14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v10 + 14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = ((unint64_t)v12 + v16 + 8) & ~v16;
  uint64_t v18 = ((unint64_t)v13 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v17, v18);
  uint64_t v19 = *(void *)(v15 + 40) + 7;
  unint64_t v20 = v19 + v17;
  uint64_t v21 = (void *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v20 = *v21;
  uint64_t v22 = (void *)((v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  long long v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *long long v24 = *v25;
  v24[1] = v25[1];
  return a1;
}

uint64_t sub_1B5282B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 127) = *(void *)(a2 + 127);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  int v8 = (_DWORD *)((a1 + 138) & 0xFFFFFFFFFFFFFFFCLL);
  long long v9 = (int *)((a2 + 138) & 0xFFFFFFFFFFFFFFFCLL);
  int v10 = *v9;
  *(_DWORD *)((char *)v8 + 3) = *(int *)((char *)v9 + 3);
  *int v8 = v10;
  int v11 = (void *)(((unint64_t)v8 + 14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v9 + 14) & 0xFFFFFFFFFFFFFFF8);
  *int v11 = *v12;
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = ((unint64_t)v11 + v15 + 8) & ~v15;
  uint64_t v17 = ((unint64_t)v12 + v15 + 8) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  uint64_t v18 = *(void *)(v14 + 32) + 7;
  uint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (void *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  uint64_t v21 = (_OWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (_OWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B5282C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 115) = *(_DWORD *)(a2 + 115);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 123) = *(_DWORD *)(a2 + 123);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 131) = *(_DWORD *)(a2 + 131);
  long long v6 = (_DWORD *)((a1 + 138) & 0xFFFFFFFFFFFFFFFCLL);
  long long v7 = (int *)((a2 + 138) & 0xFFFFFFFFFFFFFFFCLL);
  int v8 = *v7;
  *(_DWORD *)((char *)v6 + 3) = *(int *)((char *)v7 + 3);
  *long long v6 = v8;
  long long v9 = (void *)(((unint64_t)v6 + 14) & 0xFFFFFFFFFFFFFFF8);
  int v10 = (void *)(((unint64_t)v7 + 14) & 0xFFFFFFFFFFFFFFF8);
  *long long v9 = *v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 40;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = ((unint64_t)v9 + v13 + 8) & ~v13;
  uint64_t v15 = ((unint64_t)v10 + v13 + 8) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 24) + 7;
  unint64_t v17 = v16 + v14;
  uint64_t v18 = (void *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  v17 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v17 = *v18;
  uint64_t v19 = (void *)((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  uint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  return a1;
}

uint64_t sub_1B5282E3C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 152) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)(a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B5282FB4);
      case 4:
        int v14 = *(_DWORD *)(a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *(_DWORD *)a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((((((a1 + 138) & 0xFFFFFFFFFFFFFFFCLL) + 14) & 0xFFFFFFFFFFFFFFF8)
  }
                                                                  + v6
                                                                  + 8) & ~v6);
  unint64_t v17 = *(void *)(a1 + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_1B5282FC8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 152) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = (((((unint64_t)(a1 + 138) & 0xFFFFFFFFFFFFFFFCLL) + 14) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
              unint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *((void *)a1 + 15) = 0;
              double result = 0.0;
              *(_OWORD *)(a1 + 104) = 0u;
              *(_OWORD *)(a1 + 88) = 0u;
              *(_OWORD *)(a1 + 72) = 0u;
              *(_OWORD *)(a1 + 56) = 0u;
              *(_OWORD *)(a1 + 40) = 0u;
              *(_OWORD *)(a1 + 24) = 0u;
              *(_OWORD *)(a1 + 8) = 0u;
              a1[134] = 0;
              *((_WORD *)a1 + 66) = 0;
              *((_DWORD *)a1 + 32) = 0;
              *(void *)a1 = a2 ^ 0x80000000;
            }
            else
            {
              *((void *)a1 + 1) = a2 - 1;
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 152) & ~v9) + 7) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 152) & ~v9) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 152) & ~v9) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1B528320CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B5283234(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a2;
  unint64_t v29 = a3;
  uint64_t v27 = sub_1B5372788();
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  long long v26 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v30 = v3;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1B521CED0(0, v7, 0);
    uint64_t result = v34;
    uint64_t v25 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v9 = (unsigned __int8 *)(a1 + 48);
    do
    {
      uint64_t v11 = *((void *)v9 - 2);
      unint64_t v10 = *((void *)v9 - 1);
      unsigned int v12 = *v9;
      uint64_t v31 = result;
      if (v12 >> 4 == 6)
      {
        sub_1B51D4BB8(v11, v10);
        sub_1B51D4BB8(v11, v10);
        uint64_t v14 = v11;
        unint64_t v16 = v10;
      }
      else
      {
        if (v12 >> 4 != 5)
        {
          sub_1B51DFDC4(v11, v10, v12);
          uint64_t v14 = 0;
          unint64_t v16 = 0xF000000000000000;
LABEL_10:
          uint64_t v18 = v28;
          unint64_t v20 = v29;
          sub_1B51D4BB8(v28, v29);
          sub_1B51FE548(v14, v16);
          sub_1B51DFE20(v11, v10, v12);
          uint64_t v19 = v20;
          goto LABEL_11;
        }
        swift_bridgeObjectRetain();
        int v13 = v26;
        sub_1B5372758();
        uint64_t v14 = sub_1B53726F8();
        unint64_t v16 = v15;
        (*v25)(v13, v27);
        if (v16 >> 60 == 15) {
          goto LABEL_10;
        }
      }
      v33[0] = v14;
      v33[1] = v16;
      sub_1B51D4BB8(v14, v16);
      uint64_t v17 = v30;
      sub_1B527CB68(v33, v32);
      uint64_t v30 = v17;
      sub_1B51FE548(v14, v16);
      sub_1B51FE548(v14, v16);
      sub_1B51DFE20(v11, v10, v12);
      uint64_t v18 = v32[0];
      uint64_t v19 = v32[1];
LABEL_11:
      uint64_t result = v31;
      uint64_t v34 = v31;
      unint64_t v22 = *(void *)(v31 + 16);
      unint64_t v21 = *(void *)(v31 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1B521CED0((char *)(v21 > 1), v22 + 1, 1);
        uint64_t result = v34;
      }
      v9 += 24;
      *(void *)(result + 16) = v22 + 1;
      uint64_t v23 = result + 16 * v22;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v19;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1B52834D4(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a2 + 56));
  *uint64_t v3 = result;
  v3[1] = 0;
  uint64_t v4 = (void *)(v2 + *(int *)(a2 + 52));
  *uint64_t v4 = result;
  v4[1] = 0;
  return result;
}

uint64_t sub_1B52834F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(v3 + *(int *)(a3 + 56));
  *uint64_t v4 = result;
  v4[1] = a2;
  uint64_t v5 = (void *)(v3 + *(int *)(a3 + 52));
  *uint64_t v5 = result;
  v5[1] = a2;
  return result;
}

uint64_t sub_1B528350C(uint64_t a1)
{
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v2 = *(void *)(v1 + 144);
    if (*(void *)(v2 + 16) > a1) {
      return *(void *)(v2 + 16 * a1 + 32);
    }
  }
  sub_1B520AB64();
  swift_allocError();
  *uint64_t v4 = 3;
  return swift_willThrow();
}

uint64_t sub_1B5283580()
{
  return sub_1B527DE08();
}

uint64_t sub_1B528359C()
{
  return sub_1B527DC9C(v0[4], v0[5], v0[6], v0[7], v0[8], v0[9]);
}

uint64_t sub_1B52835C4()
{
  return sub_1B527DA9C(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1B52835E4()
{
  return sub_1B527D914(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

unint64_t sub_1B5283604()
{
  unint64_t result = qword_1E9D48A70[0];
  if (!qword_1E9D48A70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9D48A70);
  }
  return result;
}

uint64_t sub_1B5283658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1B528369C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6)
  {
    sub_1B5200310(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = a5 & 1;
    sub_1B5283708((uint64_t)a1, a2, a3, a4, v7);
  }
}

uint64_t sub_1B5283708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_release();
    uint64_t v5 = vars8;
  }
  return swift_release();
}

uint64_t sub_1B528374C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if ((a7 & 1) == 0) {
    return sub_1B528379C(a1, a2, a3, a4, a5, BYTE1(a5) & 1, a8, a9);
  }
  uint64_t v10 = a6 & 1;
  return a10(a1, a2, a3, a4, a5, v10);
}

uint64_t sub_1B528379C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, void))
{
  if (a6) {
    return a8(a1, a2, a3, a4, a5 & 1);
  }
  else {
    return a7(a1, a2, a3, a4 & 1);
  }
}

uint64_t sub_1B52837B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

id sub_1B52837FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6)
  {
    sub_1B52000A4(a1);
    swift_bridgeObjectRetain();
    return a5;
  }
  else
  {
    char v8 = a5 & 1;
    return (id)sub_1B5283868((uint64_t)a1, a2, a3, a4, v8);
  }
}

uint64_t sub_1B5283868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_retain();
    uint64_t v5 = vars8;
  }
  return swift_retain();
}

uint64_t sub_1B52838AC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unsigned __int8 *sub_1B52838BC@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  return sub_1B52BB0E0(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_1B52838D8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unsigned __int8 *sub_1B52838E8@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  return sub_1B52BB0A4(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_1B5283904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Data.subscript.read(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4))(uint64_t a1)
{
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)a3;
      BOOL v7 = __OFADD__((int)a3, a2);
      a2 += (int)a3;
      if (v7) {
        goto LABEL_11;
      }
      uint64_t v5 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v6 = *(void *)(a3 + 16);
      BOOL v7 = __OFADD__(v6, a2);
      a2 += v6;
      if (v7) {
        goto LABEL_12;
      }
      uint64_t v5 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v6 = 0;
      uint64_t v5 = BYTE6(a4);
      break;
  }
  if (v5 < v6 || a2 < v6)
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    JUMPOUT(0x1B5283A30);
  }
  *a1 = sub_1B5372398();
  a1[1] = v8;
  return sub_1B5283A40;
}

uint64_t sub_1B5283A40(uint64_t a1)
{
  return sub_1B51D4C64(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t (*Data.subscript.read(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4))(uint64_t)
{
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)a3;
      BOOL v7 = __OFADD__((int)a3, a2);
      a2 += (int)a3;
      if (v7) {
        goto LABEL_11;
      }
      uint64_t v5 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v6 = *(void *)(a3 + 16);
      BOOL v7 = __OFADD__(v6, a2);
      a2 += v6;
      if (v7) {
        goto LABEL_12;
      }
      uint64_t v5 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v6 = 0;
      uint64_t v5 = BYTE6(a4);
      break;
  }
  if (v5 < v6 || v5 < a2)
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    JUMPOUT(0x1B5283B14);
  }
  *a1 = sub_1B5372398();
  a1[1] = v8;
  return sub_1B5284574;
}

uint64_t (*Data.subscript.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v2;
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  uint64_t v6 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)v3;
      break;
    case 2uLL:
      uint64_t v6 = *(void *)(v3 + 16);
      break;
    default:
      break;
  }
  uint64_t v7 = v6 + a2;
  a1[3] = v6 + a2;
  if (__OFADD__(v6, a2))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (int)v3;
      uint64_t v8 = v3 >> 32;
      break;
    case 2uLL:
      uint64_t v9 = *(void *)(v3 + 16);
      uint64_t v8 = *(void *)(v3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v9 = 0;
      uint64_t v8 = BYTE6(v4);
      break;
  }
  if (v8 < v7 || v8 < v9)
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x1B5283C14);
  }
  *a1 = sub_1B5372398();
  a1[1] = v10;
  return sub_1B5283C34;
}

{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  a1[2] = (uint64_t)v2;
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  uint64_t v6 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)v3;
      break;
    case 2uLL:
      uint64_t v6 = *(void *)(v3 + 16);
      break;
    default:
      break;
  }
  uint64_t v7 = __OFADD__(v6, a2);
  uint64_t v8 = v6 + a2;
  a1[3] = v8;
  if (v7)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)v3;
      uint64_t v9 = v3 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(v3 + 16);
      uint64_t v9 = *(void *)(v3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(v4);
      break;
  }
  if (v9 < v10 || v8 < v10)
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x1B5283EF4);
  }
  *a1 = sub_1B5372398();
  a1[1] = v11;
  return sub_1B5283F14;
}

uint64_t sub_1B5283C34(uint64_t *a1, char a2)
{
  return sub_1B5283F2C(a1, a2, (void (*)(uint64_t, unint64_t, uint64_t))sub_1B528442C);
}

uint64_t Data.subscript.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned __int8 v3 = BYTE6(a3);
  unint64_t v4 = a3 >> 62;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(v4)
  {
    case 1uLL:
      uint64_t v7 = (int)a2;
      BOOL v8 = __OFADD__((int)a2, a1);
      a1 += (int)a2;
      if (v8) {
        goto LABEL_11;
      }
      uint64_t v6 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a2 + 16);
      BOOL v8 = __OFADD__(v7, a1);
      a1 += v7;
      if (v8) {
        goto LABEL_12;
      }
      uint64_t v6 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = v3;
      break;
  }
  if (v6 < v7 || v6 < a1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    JUMPOUT(0x1B5283CD0);
  }
  return sub_1B5372398();
}

{
  unsigned __int8 v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  unsigned __int8 v3 = BYTE6(a3);
  unint64_t v4 = a3 >> 62;
  uint64_t v7 = 0;
  BOOL v8 = 0;
  switch(v4)
  {
    case 1uLL:
      BOOL v8 = (int)a2;
      uint64_t v9 = __OFADD__((int)a2, a1);
      a1 += (int)a2;
      if (v9) {
        goto LABEL_11;
      }
      uint64_t v7 = a2 >> 32;
      break;
    case 2uLL:
      BOOL v8 = *(void *)(a2 + 16);
      uint64_t v9 = __OFADD__(v8, a1);
      a1 += v8;
      if (v9) {
        goto LABEL_12;
      }
      uint64_t v7 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      BOOL v8 = 0;
      uint64_t v7 = v3;
      break;
  }
  if (v7 < v8 || a1 < v8)
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    JUMPOUT(0x1B5284048);
  }
  return sub_1B5372398();
}

uint64_t Data.subscript.setter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  uint64_t v6 = a3;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)v4;
      uint64_t v6 = (int)v4 + a3;
      if (__OFADD__((int)v4, a3)) {
        goto LABEL_13;
      }
      uint64_t v9 = v4 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(v4 + 16);
      uint64_t v6 = v10 + a3;
      if (__OFADD__(v10, a3)) {
        goto LABEL_14;
      }
      uint64_t v9 = *(void *)(v4 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(v5);
      break;
  }
  if (v9 < v10 || v9 < v6)
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    JUMPOUT(0x1B5283DF4);
  }
  sub_1B51D4BB8(a1, a2);
  uint64_t v11 = sub_1B5372398();
  sub_1B51D4C64(v11, v12);
  sub_1B528442C(a1, a2, v6);
  sub_1B51D4C64(a1, a2);
  return sub_1B51D4C64(a1, a2);
}

{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t vars8;

  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  uint64_t v6 = a3;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)v4;
      uint64_t v6 = (int)v4 + a3;
      if (__OFADD__((int)v4, a3)) {
        goto LABEL_13;
      }
      uint64_t v9 = v4 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(v4 + 16);
      uint64_t v6 = v10 + a3;
      if (__OFADD__(v10, a3)) {
        goto LABEL_14;
      }
      uint64_t v9 = *(void *)(v4 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(v5);
      break;
  }
  if (v9 < v10 || v6 < v10)
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    JUMPOUT(0x1B528416CLL);
  }
  sub_1B51D4BB8(a1, a2);
  uint64_t v11 = sub_1B5372398();
  sub_1B51D4C64(v11, v12);
  sub_1B52844D0(a1, a2, v6);
  sub_1B51D4C64(a1, a2);
  return sub_1B51D4C64(a1, a2);
}

uint64_t sub_1B5283F14(uint64_t *a1, char a2)
{
  return sub_1B5283F2C(a1, a2, (void (*)(uint64_t, unint64_t, uint64_t))sub_1B52844D0);
}

uint64_t sub_1B5283F2C(uint64_t *a1, char a2, void (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = a1[3];
  uint64_t v7 = *a1;
  if (a2)
  {
    sub_1B51D4BB8(v7, v5);
    a3(v4, v5, v6);
    sub_1B51D4C64(v4, v5);
  }
  else
  {
    a3(v7, v5, v6);
  }
  return sub_1B51D4C64(v4, v5);
}

uint64_t sub_1B528417C(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_1B5284384((int)a1, a1 >> 32);
      uint64_t result = sub_1B51D4C64(a1, a2);
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_1B5284384(v5, v6);
      swift_release();
      uint64_t result = swift_release();
      break;
    default:
      uint64_t result = sub_1B5372368();
      break;
  }
  return result;
}

uint64_t sub_1B5284384(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B5372268();
  if (!result || (uint64_t result = sub_1B5372298(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1B5372288();
      return sub_1B5372368();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B528442C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)v4;
      uint64_t v6 = v4 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v4 + 16);
      uint64_t v6 = *(void *)(v4 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(v5);
      break;
  }
  if (v6 < a3 || v6 < v7)
  {
    __break(1u);
    JUMPOUT(0x1B52844C0);
  }
  return sub_1B528417C(a1, a2);
}

uint64_t sub_1B52844D0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)v4;
      uint64_t v6 = v4 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v4 + 16);
      uint64_t v6 = *(void *)(v4 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(v5);
      break;
  }
  if (v6 < v7 || v7 > a3)
  {
    __break(1u);
    JUMPOUT(0x1B5284564);
  }
  return sub_1B528417C(a1, a2);
}

uint64_t destroy for MetricsTable()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsTable(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MetricsTable(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsTable(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsTable(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsTable()
{
  return &type metadata for MetricsTable;
}

uint64_t sub_1B5284728(uint64_t a1)
{
  uint64_t v2 = *v1;
  if (*v1 > a1)
  {
    sub_1B5284860(a1);
    return v3;
  }
  BOOL v5 = __OFSUB__(a1, v2);
  uint64_t v6 = a1 - v2;
  if (v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v6 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v1[4];
    uint64_t v7 = v1[5];
    v13[0] = sub_1B53724C8();
    v13[1] = v9;
    v13[2] = v10;
    swift_bridgeObjectRetain();
    signed __int16 v12 = (unsigned __int16)sub_1B51F3F70(v13, v11, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7 >= v8) {
      return v12;
    }
    goto LABEL_8;
  }
LABEL_9:
  sub_1B51D4F28();
  swift_allocError();
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B5284860(uint64_t a1)
{
  if ((unint64_t)(a1 - 0x2000000000000000) >> 62 == 3)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    uint64_t v3 = *(void *)(v1 + 24);
    *(void *)&long long v9 = sub_1B53724C8();
    *((void *)&v9 + 1) = v4;
    uint64_t v10 = v5;
    uint64_t v6 = sub_1B51F6A68(&v8, &v9, v5, 257);
    swift_bridgeObjectRelease();
    if (v3 >= v2) {
      return v6;
    }
    __break(1u);
  }
  sub_1B51D4F28();
  swift_allocError();
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B5284968@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v7 = a5 - a4;
  if (__OFSUB__(a5, a4))
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    if ((unint64_t)(a4 - 0x2000000000000000) >> 62 == 3 && v7 + 0x4000000000000000 >= 0)
    {
      signed __int16 v12 = v6;
      *(void *)&long long v29 = result;
      *((void *)&v29 + 1) = a2;
      *(void *)&long long v30 = a3;
      swift_bridgeObjectRetain_n();
      unint64_t v15 = sub_1B5256BB4((uint64_t *)&v29, v14, 4 * a4);
      if (!v6)
      {
        uint64_t v17 = v15;
        uint64_t v18 = v16;
        uint64_t v28 = sub_1B5256BB4((uint64_t *)&v29, v16, 2 * v7);
        uint64_t v26 = v24;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        *a6 = a4;
        a6[1] = v7;
        a6[2] = v17;
        a6[3] = v18;
        a6[4] = v28;
        a6[5] = v26;
        a6[6] = v10;
        a6[7] = a2;
        a6[8] = a3;
        return result;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B51D4F28();
      signed __int16 v12 = (void *)swift_allocError();
      swift_bridgeObjectRetain_n();
      swift_willThrow();
    }
    id v32 = v12;
    id v19 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47950);
    if (swift_dynamicCast())
    {

      long long v25 = v30;
      long long v27 = v29;
      uint64_t v20 = v31;
      sub_1B51D4D34();
      swift_allocError();
      *(_OWORD *)uint64_t v21 = v27;
      *(_OWORD *)(v21 + 16) = v25;
      *(void *)(v21 + 32) = v20;
      swift_willThrow();
    }
    else
    {

      sub_1B51D4D34();
      swift_allocError();
      *unint64_t v22 = v12;
      v22[1] = v10;
      v22[2] = 0x7272652072657355;
      v22[3] = 0xEA0000000000726FLL;
      v22[4] = v12;
      id v23 = v12;
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B5284BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 7;
  if (a1 >= 0) {
    uint64_t v2 = a1;
  }
  if (a1 < -7 || (uint64_t v3 = v2 >> 3, v3 >= *(void *)(a2 + 16)))
  {
    sub_1B522161C();
    swift_allocError();
    swift_willThrow();
  }
  else if (a1 - 8 * v3 >= 0)
  {
    unsigned int v4 = ((*(unsigned __int8 *)(a2 + v3 + 32) << (a1 - 8 * v3)) >> 7) & 1;
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

_WORD *sub_1B5284C7C@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  if ((((unsigned __int16)*result + 253) & 0x10000) != 0)
  {
    __break(1u);
  }
  else if ((((unsigned __int16)(*result + 253) + 253) & 0x10000) == 0)
  {
    *a2 = *result + 506;
    return result;
  }
  __break(1u);
  return result;
}

unsigned __int16 *sub_1B5284CAC@<X0>(unsigned __int16 *result@<X0>, _WORD *a2@<X8>)
{
  int v2 = *result + 253;
  if ((v2 & 0x10000) != 0) {
    __break(1u);
  }
  else {
    *a2 = v2;
  }
  return result;
}

BOOL sub_1B5284CC8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1B5284CD8()
{
  return sub_1B5373308();
}

uint64_t sub_1B5284D00()
{
  return sub_1B5373358();
}

BOOL sub_1B5284D48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B5284CC8(*a1, *a2);
}

uint64_t sub_1B5284D54()
{
  return sub_1B5284D00();
}

uint64_t sub_1B5284D5C()
{
  return sub_1B5284CD8();
}

uint64_t sub_1B5284D64()
{
  return sub_1B5373358();
}

uint64_t sub_1B5284DA4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v6 = v5;
  v57[1] = a4;
  uint64_t v70 = a1;
  uint64_t v10 = *(void *)(a3 + 8);
  uint64_t v63 = *(void *)(*(void *)(v10 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v61 = (char *)v57 - v11;
  uint64_t v76 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v12);
  long long v60 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v72 = (char *)v57 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v57 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v57 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v57 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v71 = (char *)v57 - v26;
  sub_1B5373088();
  v57[0] = a3;
  sub_1B5373088();
  uint64_t v77 = 7;
  unint64_t v69 = sub_1B51D0074();
  sub_1B5372E38();
  uint64_t v27 = v76 + 8;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v76 + 8);
  uint64_t v68 = v18;
  v28(v18, a2);
  sub_1B5372E18();
  uint64_t v67 = v21;
  v28(v21, a2);
  unint64_t v75 = (void (*)(uint64_t, uint64_t))v28;
  v28(v24, a2);
  long long v29 = v24;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1B5373268();
  sub_1B5373218();
  uint64_t v58 = (void (**)(char *, char *, uint64_t))(v27 + 8);
  uint64_t v76 = v27;
  uint64_t v65 = a5;
  uint64_t v66 = (void (**)(uint64_t, char *, uint64_t))(v27 + 24);
  char v30 = 1;
  do
  {
    signed __int8 v39 = sub_1B52BD17C(v70);
    if (v6)
    {
      uint64_t v49 = v75;
      goto LABEL_24;
    }
    int v40 = v39;
    if ((v30 & (v39 == -128)) != 0)
    {
      char v54 = 0;
LABEL_22:
      uint64_t v49 = v75;
LABEL_23:
      type metadata accessor for ParseUleb128.Error();
      swift_getWitnessTable();
      swift_allocError();
      *uint64_t v55 = v54;
      swift_willThrow();
      a5 = v65;
LABEL_24:
      v49((uint64_t)a5, a2);
      return ((uint64_t (*)(char *, uint64_t))v49)(v71, a2);
    }
    unint64_t v41 = v72;
    sub_1B5372DF8();
    char v42 = sub_1B5372E78();
    uint64_t v74 = 0;
    int v73 = v40;
    if (v42)
    {
      if (sub_1B5372E68() >= 64)
      {
        uint64_t v77 = 0;
        uint64_t v31 = v10;
        sub_1B5372DE8();
        LODWORD(v64) = sub_1B5372698();
        uint64_t v52 = (void (*)(char *, uint64_t))v75;
        v75((uint64_t)v29, a2);
        v52(v41, a2);
        if ((v64 & 1) == 0) {
          goto LABEL_19;
        }
        goto LABEL_3;
      }
      uint64_t v43 = sub_1B5372E58();
      v75((uint64_t)v41, a2);
      goto LABEL_18;
    }
    char v44 = sub_1B5372E78();
    uint64_t v45 = sub_1B5372E68();
    if ((v44 & 1) == 0)
    {
      if (v45 >= 64)
      {
LABEL_2:
        uint64_t v77 = 0;
        uint64_t v31 = v10;
        sub_1B5372DE8();
        id v32 = v72;
        char v33 = sub_1B5372698();
        uint64_t v34 = (void (*)(char *, uint64_t))v75;
        v75((uint64_t)v29, a2);
        v34(v32, a2);
        a5 = v65;
        if ((v33 & 1) == 0) {
          goto LABEL_19;
        }
        goto LABEL_3;
      }
      uint64_t v53 = v72;
      uint64_t v43 = sub_1B5372E58();
      v75((uint64_t)v53, a2);
      a5 = v65;
LABEL_18:
      uint64_t v31 = v10;
      if (v43)
      {
LABEL_19:
        char v54 = 1;
        goto LABEL_22;
      }
      goto LABEL_3;
    }
    if (v45 > 64) {
      goto LABEL_2;
    }
    sub_1B5373268();
    sub_1B5373218();
    uint64_t v46 = v72;
    char v47 = sub_1B5372618();
    BOOL v64 = v29;
    unint64_t v48 = v29;
    uint64_t v49 = v75;
    v75((uint64_t)v48, a2);
    uint64_t v50 = v60;
    (*v58)(v60, v46, a2);
    a5 = v65;
    if ((v47 & 1) == 0)
    {
      v49((uint64_t)v50, a2);
      v49((uint64_t)v46, a2);
      char v54 = 1;
      goto LABEL_23;
    }
    uint64_t v51 = sub_1B5372E58();
    v49((uint64_t)v50, a2);
    v49((uint64_t)v46, a2);
    long long v29 = v64;
    uint64_t v31 = v10;
    if (v51) {
      goto LABEL_19;
    }
LABEL_3:
    uint64_t v77 = 7;
    uint64_t v35 = v67;
    sub_1B5372E48();
    int v36 = v73;
    LOBYTE(v77) = v73 & 0x7F;
    sub_1B5285D64();
    uint64_t v37 = v68;
    sub_1B5372E98();
    sub_1B5372E08();
    uint64_t v38 = (void (*)(char *, uint64_t))v75;
    v75((uint64_t)v37, a2);
    v38(v35, a2);
    v38(a5, a2);
    (*v66)((uint64_t)a5, v29, a2);
    char v30 = 0;
    uint64_t v6 = v74;
    uint64_t v10 = v31;
  }
  while (v36 < 0);
  return ((uint64_t (*)(char *, uint64_t))v75)(v71, a2);
}

uint64_t sub_1B52855EC@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X2>, char *a3@<X8>)
{
  return sub_1B5284DA4(a1, a2[2], a2[3], a2[4], a3);
}

void sub_1B5285610(uint64_t *a1)
{
  uint64_t v4 = sub_1B5372788();
  v6.n128_f64[0] = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = v10 - *a1;
  if (v10 < *a1)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v12 = a1[2];
  unint64_t v13 = *(void *)(v12 + 16);
  if (v13 < v9 || (uint64_t)v13 < v10) {
    goto LABEL_12;
  }
  v21[0] = v12 + v9 + 32;
  v21[1] = v21[0] + v11;
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))(v8, v1, v6);
  swift_bridgeObjectRetain();
  sub_1B5372718();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1B53724A8();
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    uint64_t v20 = v17;
    swift_bridgeObjectRelease();
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v20;
  }
}

void sub_1B52857AC(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1B5285610(a1);
  if (!v2)
  {
    *a2 = v4;
    a2[1] = v5;
  }
}

ValueMetadata *type metadata accessor for BitBuffer.BoundsError()
{
  return &type metadata for BitBuffer.BoundsError;
}

uint64_t type metadata accessor for ParseUleb128()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1B5285800(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B52858CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for ParseUleb128.Error()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B528590C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5372788();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1B5285978(uint64_t a1)
{
  uint64_t v2 = sub_1B5372788();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1B52859DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5372788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B5285A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5372788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B5285AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5372788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B5285B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5372788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B5285B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5285B80);
}

uint64_t sub_1B5285B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5372788();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1B5285BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5285C00);
}

uint64_t sub_1B5285C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B5372788();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ParseString()
{
  uint64_t result = qword_1E9D48B78;
  if (!qword_1E9D48B78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B5285CBC()
{
  uint64_t result = sub_1B5372788();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B5285D48()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B5285D64()
{
  unint64_t result = qword_1E9D48B88;
  if (!qword_1E9D48B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48B88);
  }
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for MetricsHeader(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MetricsHeader(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 96) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MetricsHeader()
{
  return &type metadata for MetricsHeader;
}

uint64_t Array.modify(atIndex:with:)(unint64_t a1, uint64_t (*a2)(unint64_t), uint64_t a3, uint64_t a4)
{
  sub_1B5372A68();
  uint64_t v8 = *v4;
  uint64_t v9 = *(void *)(a4 + 16);
  sub_1B5286040(a1, v8);
  if (_swift_isClassOrObjCExistentialType()) {
    uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
  }
  else {
    uint64_t v10 = v8;
  }
  return a2(v10+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80))+ *(void *)(*(void *)(v9 - 8) + 72) * a1);
}

uint64_t Array.subscript.getter(uint64_t a1, uint64_t (*a2)(void))
{
  if (sub_1B53729B8()) {
    return sub_1B5372AF8();
  }
  else {
    return a2();
  }
}

uint64_t sub_1B5286040(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1B5286094(char a1)
{
  uint64_t result = 7561825;
  switch(a1)
  {
    case 1:
      return 7370084;
    case 2:
      return 1751349349;
    case 3:
      return 7368560;
    case 4:
      return 1819045746;
    case 5:
      return 0x7865646E69;
    case 6:
      return 1802658157;
    case 7:
      return 0x7261656C63;
    case 8:
      return 0x746E756F63;
    case 9:
      uint64_t v3 = 0x74746E756F63;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6D6F000000000000;
    case 10:
      uint64_t v3 = 0x747261656C63;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6D6F000000000000;
    case 11:
      return 6579297;
    case 12:
      return 6452595;
    case 13:
      return 7107949;
    case 14:
      return 7760228;
    case 15:
      return 1986618473;
    case 16:
      uint64_t v4 = 2828;
      return v4 | 0x646461;
    case 17:
      return result;
    case 18:
      return 6776174;
    case 19:
      return 0x676E696C696563;
    case 20:
      return 0x726F6F6C66;
    case 21:
      return 0x646E756F72;
    case 22:
      return 0x657461636E757274;
    case 23:
      return 1953657203;
    case 24:
      return 7370853;
    case 25:
      return 28268;
    case 26:
      return 6778732;
    case 27:
      return 7235955;
    case 28:
      return 7565155;
    case 29:
      return 1851880545;
    case 30:
      return 1684955506;
    case 31:
      return 0x646E617273;
    case 32:
      return 0x646E617272;
    case 33:
      return 6911587;
    case 34:
      return 7501411;
    case 35:
      return 7894627;
    case 36:
      return 29029;
    case 37:
      return 25966;
    case 38:
      return 29799;
    case 39:
      return 25959;
    case 40:
      return 29804;
    case 41:
      return 25964;
    case 42:
      uint64_t v4 = 2560;
      return v4 | 0x646461;
    case 43:
      return 29295;
    case 44:
      return 7499640;
    case 45:
      return 7630702;
    case 46:
      return 0x7466696873746962;
    case 47:
      return 26217;
    case 48:
      return 0x65736C656669;
    case 49:
      return 1667594341;
    case 50:
      return 7499622;
    case 51:
      return 0x746165706572;
    case 52:
      return 1886351212;
    case 53:
      return 0x6C6C61726F66;
    case 54:
      return 1953069157;
    case 55:
      return 1886352499;
    case 56:
      return 0x646570706F7473;
    case 57:
      return 0x657865746E756F63;
    case 58:
      unsigned int v5 = 1667594341;
      goto LABEL_90;
    case 59:
      return 7628135;
    case 60:
      return 7632240;
    case 61:
      return 0x6874676E656CLL;
    case 62:
      unsigned __int16 v6 = 25959;
      return v6 | 0x7265746E69740000;
    case 63:
      unsigned __int16 v6 = 30064;
      return v6 | 0x7265746E69740000;
    case 64:
      return 0x7961727261;
    case 65:
      return 0x726164656B636170;
    case 66:
      return 1952672100;
    case 67:
      return 0x676E69727473;
    case 68:
      return 0x64616F6C61;
    case 69:
      return 0x65726F747361;
    case 70:
      return 93;
    case 71:
      return 0x696B636170746573;
    case 72:
      return 0x70746E6572727563;
    case 73:
      return 1684957538;
    case 74:
      return 0x78697274616DLL;
    case 75:
      return 0x6E69676562;
    case 76:
      return 0x64746E6572727563;
    case 77:
      uint64_t v4 = 2564;
      return v4 | 0x646461;
    case 78:
      return 6710628;
    case 79:
      return 0x65726F7473;
    case 80:
      return 1684107116;
    case 81:
      return 0x6572656877;
    case 82:
      uint64_t v7 = 0x64746E756F63;
      goto LABEL_88;
    case 83:
      uint64_t v7 = 0x647261656C63;
LABEL_88:
      uint64_t result = v7 & 0xFFFFFFFFFFFFLL | 0x6369000000000000;
      break;
    case 84:
      unsigned int v5 = 1952672100;
LABEL_90:
      uint64_t result = v5 | 0x6361747300000000;
      break;
    case 85:
      uint64_t result = 0x6E776F6E6BLL;
      break;
    case 86:
      uint64_t result = 0x74676E656C78616DLL;
      break;
    case 87:
      uint64_t result = 0x6665646E75;
      break;
    case 88:
      uint64_t result = 0x646E65766BLL;
      break;
    case 89:
      uint64_t result = 0x686372616573;
      break;
    case 90:
      uint64_t result = 0x6573726F68636E61;
      break;
    case 91:
      uint64_t result = 0x6E656B6F74;
      break;
    case 92:
      uint64_t result = 0x66746E6572727563;
      break;
    case 93:
      uint64_t result = 0x6C696665736F6C63;
      break;
    case 94:
      uint64_t result = 0x6972747364616572;
      break;
    case 95:
      uint64_t result = 0x6365786565;
      break;
    case 96:
      uint64_t result = 0x796C6E6F64616572;
      break;
    case 97:
      uint64_t result = 0x6F65747563657865;
      break;
    case 98:
      uint64_t result = 0x7373656363616F6ELL;
      break;
    case 99:
      uint64_t result = 0x6F66656E69666564;
      break;
    case 100:
      uint64_t result = 0x657369617240;
      break;
    default:
      uint64_t result = 2037411683;
      break;
  }
  return result;
}

BOOL sub_1B52869C4(char a1)
{
  return a1 != 2;
}

BOOL sub_1B52869D4(char a1)
{
  return a1 != 0;
}

BOOL sub_1B52869E0(char a1)
{
  return a1 == 2;
}

BOOL sub_1B52869F0(char a1)
{
  return a1 == 0;
}

void sub_1B52869FC()
{
  qword_1E9D53AB0 = (uint64_t)&unk_1F0DDCF10;
}

void sub_1B5286A10(void *a1@<X8>)
{
  *a1 = &unk_1F0DDCE88;
}

uint64_t sub_1B5286A20()
{
  return sub_1B5286094(*v0);
}

uint64_t sub_1B5286A28(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48B90);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_1B51D4BB8(a1, a2);
      sub_1B51D4BB8(a1, a2);
      break;
    default:
      break;
  }
  sub_1B51D4BB8(a3, a4);
  sub_1B5372428();
  unint64_t v27 = a2;
  sub_1B51D4C64(a1, a2);
  switch(a4 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_1B51D4BB8(a3, a4);
      break;
    default:
      break;
  }
  unint64_t v26 = a4 >> 62;
  sub_1B5372428();
  sub_1B51D4C64(a3, a4);
  uint64_t v11 = *(int *)(v8 + 56);
  v10[v11] = 0;
  sub_1B5372418();
  sub_1B5226A98();
  while (1)
  {
    sub_1B5372D88();
    if (v31) {
      break;
    }
    unsigned int v12 = v30;
    sub_1B5372D88();
    if (v29 == 1) {
      break;
    }
    unsigned int v13 = v28;
    if (v12 != v28)
    {
      sub_1B51D4C64(a3, a4);
      sub_1B51D4C64(a1, v27);
      sub_1B5286DDC((uint64_t)v10);
      return 2 * (v12 >= v13);
    }
  }
  v10[v11] = 1;
  sub_1B5286DDC((uint64_t)v10);
  uint64_t v15 = 0;
  unint64_t v16 = v27;
  switch((int)v25)
  {
    case 1:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_32;
      }
      uint64_t v15 = HIDWORD(a1) - (int)a1;
LABEL_15:
      switch((int)v26)
      {
        case 1:
          sub_1B51D4C64(a3, a4);
          sub_1B51D4C64(a1, v16);
          LODWORD(v19) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_34;
          }
          uint64_t v19 = (int)v19;
          break;
        case 2:
          uint64_t v21 = *(void *)(a3 + 16);
          uint64_t v20 = *(void *)(a3 + 24);
          sub_1B51D4C64(a3, a4);
          sub_1B51D4C64(a1, v16);
          uint64_t v19 = v20 - v21;
          if (!__OFSUB__(v20, v21)) {
            break;
          }
          __break(1u);
LABEL_22:
          sub_1B51D4C64(a3, a4);
          sub_1B51D4C64(a1, v16);
          uint64_t v19 = 0;
          break;
        case 3:
          goto LABEL_22;
        default:
          sub_1B51D4C64(a3, a4);
          sub_1B51D4C64(a1, v16);
          uint64_t v19 = BYTE6(a4);
          break;
      }
      BOOL v22 = __OFSUB__(v15, v19);
      uint64_t v23 = v15 - v19;
      if (v22)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B5286D9CLL);
      }
      if (v23) {
        unsigned int v24 = 2;
      }
      else {
        unsigned int v24 = 1;
      }
      if (v23 >= 0) {
        uint64_t result = v24;
      }
      else {
        uint64_t result = 0;
      }
      break;
    case 2:
      uint64_t v18 = *(void *)(a1 + 16);
      uint64_t v17 = *(void *)(a1 + 24);
      uint64_t v15 = v17 - v18;
      if (!__OFSUB__(v17, v18)) {
        goto LABEL_15;
      }
      goto LABEL_33;
    case 3:
      goto LABEL_15;
    default:
      uint64_t v15 = BYTE6(v27);
      goto LABEL_15;
  }
  return result;
}

uint64_t sub_1B5286DDC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48B90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ComparisonResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5286F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonResult()
{
  return &type metadata for ComparisonResult;
}

uint64_t getEnumTagSinglePayload for PSOperator(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x9C) {
    goto LABEL_17;
  }
  if (a2 + 100 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 100) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 100;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 100;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 100;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x65;
  int v8 = v6 - 101;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PSOperator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 100 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 100) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x9C) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x9B)
  {
    unsigned int v6 = ((a2 - 156) >> 8) + 1;
    *uint64_t result = a2 + 100;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B528709CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 100;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PSOperator()
{
  return &type metadata for PSOperator;
}

unint64_t sub_1B52870D8()
{
  unint64_t result = qword_1E9D48B98;
  if (!qword_1E9D48B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48B98);
  }
  return result;
}

unint64_t sub_1B5287130()
{
  unint64_t result = qword_1E9D48BA0;
  if (!qword_1E9D48BA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9D48BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BA0);
  }
  return result;
}

unint64_t sub_1B5287190()
{
  unint64_t result = qword_1E9D48BB0;
  if (!qword_1E9D48BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocaFormat()
{
  return &type metadata for LocaFormat;
}

unint64_t sub_1B52871F8()
{
  unint64_t result = qword_1E9D48BB8;
  if (!qword_1E9D48BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BB8);
  }
  return result;
}

BOOL sub_1B528724C(unsigned __int16 *a1)
{
  return *a1 < 2u;
}

BOOL sub_1B528725C(_WORD *a1)
{
  return *a1 == 0;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadTable(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadTable(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 58) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HeadTable()
{
  return &type metadata for HeadTable;
}

ValueMetadata *type metadata accessor for HeadTable.Flags()
{
  return &type metadata for HeadTable.Flags;
}

unint64_t sub_1B5287308()
{
  unint64_t result = qword_1E9D48BC0;
  if (!qword_1E9D48BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BC0);
  }
  return result;
}

unint64_t sub_1B5287360()
{
  unint64_t result = qword_1E9D48BC8;
  if (!qword_1E9D48BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BC8);
  }
  return result;
}

unint64_t sub_1B52873B8()
{
  unint64_t result = qword_1E9D48BD0;
  if (!qword_1E9D48BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BD0);
  }
  return result;
}

unint64_t sub_1B5287410()
{
  unint64_t result = qword_1E9D48BD8;
  if (!qword_1E9D48BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadTable.MacStyleFlags()
{
  return &type metadata for HeadTable.MacStyleFlags;
}

unint64_t sub_1B5287478()
{
  unint64_t result = qword_1E9D48BE0;
  if (!qword_1E9D48BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BE0);
  }
  return result;
}

unint64_t sub_1B52874D0()
{
  unint64_t result = qword_1E9D48BE8;
  if (!qword_1E9D48BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BE8);
  }
  return result;
}

unint64_t sub_1B5287528()
{
  unint64_t result = qword_1E9D48BF0;
  if (!qword_1E9D48BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BF0);
  }
  return result;
}

unint64_t sub_1B5287580()
{
  unint64_t result = qword_1E9D48BF8;
  if (!qword_1E9D48BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48BF8);
  }
  return result;
}

uint64_t sub_1B52875D4(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    unint64_t v6 = HIBYTE(a2);
    if (a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BB8);
      uint64_t v7 = sub_1B5372A88();
      uint64_t v8 = v7;
      *(void *)(v7 + 16) = a3;
      *(void *)(v7 + 32) = v5;
      *(unsigned char *)(v7 + 46) = BYTE6(a2);
      *(_WORD *)(v7 + 44) = WORD2(a2);
      *(_DWORD *)(v7 + 40) = a2;
      *(unsigned char *)(v7 + 47) = v6;
      if (a3 != 1)
      {
        *(void *)(v7 + 48) = v5;
        *(_DWORD *)(v7 + 56) = a2;
        *(unsigned char *)(v7 + 62) = BYTE6(a2);
        *(_WORD *)(v7 + 60) = WORD2(a2);
        *(unsigned char *)(v7 + 63) = v6;
        uint64_t v9 = a3 - 2;
        if (v9)
        {
          uint64_t v10 = (unsigned char *)(v7 + 79);
          do
          {
            sub_1B52010A0(v5, a2, v6);
            *(void *)(v10 - 15) = v5;
            *(_DWORD *)(v10 - 7) = a2;
            *(v10 - 1) = BYTE6(a2);
            *(_WORD *)(v10 - 3) = WORD2(a2);
            *uint64_t v10 = v6;
            v10 += 16;
            --v9;
          }
          while (v9);
        }
        sub_1B52010A0(v5, a2, v6);
      }
    }
    else
    {
      sub_1B52010B4(result, a2, SHIBYTE(a2));
      return MEMORY[0x1E4FBC860];
    }
    return v8;
  }
  return result;
}

uint64_t CharacterMap.query<A>(utf16:output:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, char *a6@<X8>)
{
  uint64_t v13 = *(void *)(v6 + 88);
  sub_1B51DFF98(v6 + 8, (uint64_t)v25);
  sub_1B5201384(v6 + 48, (uint64_t)v24, &qword_1E9D47940);
  v23[0] = a1;
  v23[1] = a2;
  v23[2] = a3;
  uint64_t v23[3] = a4;
  uint64_t v14 = a5[3];
  uint64_t v20 = *a5;
  long long v21 = *(_OWORD *)(a5 + 1);
  uint64_t v22 = v14;
  swift_retain();
  swift_retain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48C00);
  uint64_t v16 = type metadata accessor for CheckedBufferView();
  uint64_t v17 = sub_1B52010C8(&qword_1E9D48C08, &qword_1E9D48C00);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1B528B320();
  return CharacterMapQuery.init(mapWindowSize:cmap:uvsMap:inputCollection:outputCollection:inputToUVSWithRanges:)(v13, (uint64_t)v25, (uint64_t)v24, (uint64_t)v23, (uint64_t)&v20, (uint64_t)sub_1B528AAF4, 0, v15, a6, v16, (uint64_t)&type metadata for IndexedUTF16Sequence, v17, WitnessTable);
}

Swift::Void __swiftcall CharacterMapQuery.mapOrZero()()
{
  do
    int value = CharacterMapQuery.mapPartial()().value;
  while (value == 4);
  if (value)
  {
    do
    {
      if (!CharacterMapQuery.skipCharacter()()) {
        break;
      }
      do
        int v1 = CharacterMapQuery.mapPartial()().value;
      while (v1 == 4);
    }
    while (v1);
  }
}

void *CharacterMap.computeGlyphLookupTable()()
{
  int v1 = v0;
  uint64_t v106 = (void *)sub_1B52875D4(0, 0x400000000000000uLL, *v0);
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v89 = (uint64_t)(v0 + 1);
  __swift_project_boxed_opaque_existential_1(v0 + 1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
  uint64_t v86 = *(void *)(v4 + 16);
  if (!v86) {
    goto LABEL_47;
  }
  uint64_t v5 = 0;
  uint64_t v87 = (uint64_t)(v0 + 6);
  uint64_t v88 = v4 + 32;
  uint64_t v85 = v0;
LABEL_3:
  uint64_t v6 = (unsigned int *)(v88 + 8 * v5);
  uint64_t v7 = (uint64_t *)*v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = (v7 - v8);
  uint64_t v91 = v7;
  BOOL v10 = v8 >= v7;
  uint64_t v11 = (v8 - v7);
  if (v10) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = -v9;
  }
  if (v12 < -1) {
    goto LABEL_77;
  }
  uint64_t v104 = v8;
  uint64_t v13 = v12 + 1;
  if (v12 == -1)
  {
    uint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v14 = sub_1B5372A88();
    *(void *)(v14 + 16) = v13;
    *(_DWORD *)(v14 + 32) = 0;
    if (v12)
    {
      uint64_t v15 = v14;
      bzero((void *)(v14 + 36), 4 * v12);
      uint64_t v14 = v15;
    }
    else
    {
      uint64_t v13 = 1;
    }
  }
  uint64_t v102 = v14;
  uint64_t v16 = v14 + 32;
  type metadata accessor for RefcountCheck();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v1[11];
  sub_1B51DFF98(v89, (uint64_t)v113);
  sub_1B5201384(v87, (uint64_t)v112, &qword_1E9D47940);
  swift_retain();
  sub_1B528AD64(v18, (uint64_t)v113, (uint64_t)v112, (unint64_t)v91 | (v104 << 32), v17, v16, v13, 0, (uint64_t)v114, (uint64_t)sub_1B5216428, 0);
  if (swift_isUniquelyReferenced_nonNull_native()) {
    uint64_t v19 = v106;
  }
  else {
    uint64_t v19 = sub_1B52935D8(v106);
  }
  uint64_t v90 = v5 + 1;
  uint64_t v106 = v19;
  uint64_t v110 = v19 + 4;
  while (1)
  {
    uint64_t v20 = v117;
    do
      char v21 = sub_1B528E6B0();
    while (v21 == 4);
    if (__OFSUB__(v117, v20))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (__OFADD__(v20, v117 - v20)) {
      goto LABEL_74;
    }
    if (v117 < v20) {
      goto LABEL_75;
    }
    if (__OFADD__(v20, v117 - v20)) {
      goto LABEL_76;
    }
    char v22 = v21;
    uint64_t v108 = v117;
    swift_retain();
    unsigned int v24 = v106;
    uint64_t v25 = v108;
    int v1 = v91;
    int v26 = v91 << 16;
    uint64_t v28 = v102;
    int v27 = v104;
LABEL_22:
    if (v25 != v20)
    {
      unint64_t v29 = *(unsigned int *)(v28 + 4 * v20 + 32);
      if (v24[2] > v29)
      {
        if (v1 >> 24) {
          goto LABEL_46;
        }
        unsigned __int8 v30 = &v110[2 * v29];
        int v31 = *(_DWORD *)v30;
        char v32 = *((unsigned char *)v30 + 4);
        char v33 = *((unsigned char *)v30 + 5);
        char v34 = *((unsigned char *)v30 + 6);
        char v35 = *((unsigned char *)v30 + 7);
        int v36 = (char *)*v30;
        char v37 = *((unsigned char *)v30 + 8);
        char v38 = *((unsigned char *)v30 + 9);
        v23.i32[0] = *(_DWORD *)((char *)v30 + 10);
        uint16x8_t v23 = vmovl_u8(*(uint8x8_t *)v23.i8);
        char v39 = *((unsigned char *)v30 + 14);
        int v40 = *((unsigned __int8 *)v30 + 15);
        v113[0] = v38;
        switch(v40)
        {
          case 1:
            *(_DWORD *)unsigned __int8 v30 = v31;
            *((unsigned char *)v30 + 4) = v32 & 1;
            char v47 = v113[0];
            *((unsigned char *)v30 + 5) = v33;
            *((unsigned char *)v30 + 6) = v34;
            *((unsigned char *)v30 + 7) = v35;
            *((unsigned char *)v30 + 8) = v37;
            *((unsigned char *)v30 + 9) = v47;
            *((unsigned char *)v30 + 10) = BYTE2(v1);
            *((unsigned char *)v30 + 11) = BYTE1(v1);
            *((unsigned char *)v30 + 12) = (_BYTE)v1;
            char v41 = 2;
            *(_WORD *)((char *)v30 + 13) = 256;
            break;
          case 2:
            char v92 = v33;
            char v93 = v34;
            char v94 = v35;
            char v96 = v37;
            char v42 = v32;
            int16x8_t v98 = (int16x8_t)v23;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BA8);
            uint64_t v43 = swift_allocObject();
            uint64_t v25 = v108;
            int v27 = v104;
            *(_OWORD *)(v43 + 16) = xmmword_1B538C190;
            *(_DWORD *)(v43 + 32) = v31;
            *(unsigned char *)(v43 + 36) = v42 & 1;
            *(unsigned char *)(v43 + 37) = v92;
            *(unsigned char *)(v43 + 38) = v93;
            *(unsigned char *)(v43 + 39) = v94;
            *(unsigned char *)(v43 + 40) = v96;
            *(unsigned char *)(v43 + 41) = v38 & 1;
            *(int8x8_t *)v23.i8 = vmovn_s16(v98);
            *(_DWORD *)(v43 + 42) = v23.i32[0];
            *(unsigned char *)(v43 + 46) = v39 & 1;
            *(unsigned char *)(v43 + 47) = BYTE2(v1);
            *(unsigned char *)(v43 + 48) = BYTE1(v1);
            *(unsigned char *)(v43 + 49) = (_BYTE)v1;
            *(_WORD *)(v43 + 50) = 256;
            *unsigned __int8 v30 = v43;
            uint64_t v28 = v102;
            unsigned int v24 = v106;
            *((unsigned char *)v30 + 14) = 0;
            *((_WORD *)v30 + 6) = 0;
            char v41 = 3;
            *((_DWORD *)v30 + 2) = 0;
            break;
          case 3:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              int v36 = sub_1B51E9218(0, *((void *)v36 + 2) + 1, 1, v36);
            }
            unint64_t v45 = *((void *)v36 + 2);
            unint64_t v44 = *((void *)v36 + 3);
            if (v45 >= v44 >> 1) {
              int v36 = sub_1B51E9218((char *)(v44 > 1), v45 + 1, 1, v36);
            }
            *((void *)v36 + 2) = v45 + 1;
            uint64_t v46 = &v36[5 * v45];
            v46[32] = BYTE2(v1);
            v46[33] = BYTE1(v1);
            v46[34] = (char)v1;
            *(_WORD *)(v46 + 35) = 256;
            *unsigned __int8 v30 = v36;
            *((_DWORD *)v30 + 2) = 0;
            *((unsigned char *)v30 + 14) = 0;
            char v41 = 3;
            *((_WORD *)v30 + 6) = 0;
            int v27 = v104;
            unsigned int v24 = v106;
            uint64_t v28 = v102;
            uint64_t v25 = v108;
            break;
          case 4:
            char v41 = 0;
            *unsigned __int8 v30 = (unsigned __int16)v1 & 0xFF00 | v26 & 0xFF0000 | (v1 >> 16) | 0x100000000;
            *((unsigned char *)v30 + 14) = 0;
            *((_WORD *)v30 + 6) = 0;
            *((_DWORD *)v30 + 2) = 0;
            break;
          default:
            *(_WORD *)unsigned __int8 v30 = (_WORD)v36;
            *((unsigned char *)v30 + 2) = BYTE2(v36);
            *((unsigned char *)v30 + 3) = BYTE3(v36);
            *((unsigned char *)v30 + 4) = BYTE4(v36) & 1;
            *((unsigned char *)v30 + 5) = BYTE2(v1);
            *((unsigned char *)v30 + 6) = BYTE1(v1);
            *((unsigned char *)v30 + 7) = (_BYTE)v1;
            char v41 = 1;
            *((_WORD *)v30 + 4) = 256;
            break;
        }
        *((unsigned char *)v30 + 15) = v41;
      }
      if (v27 != v1) {
        break;
      }
    }
    swift_release();
    if (!v22 || (sub_1B5288EF4() & 1) == 0)
    {
      sub_1B51E0064((uint64_t)v114, &qword_1E9D47D70);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        swift_bridgeObjectRelease();
        swift_release();
        int v1 = v85;
        uint64_t v5 = v90;
        if (v90 == v86) {
          goto LABEL_47;
        }
        goto LABEL_3;
      }
LABEL_80:
      sub_1B53730C8();
      __break(1u);
      JUMPOUT(0x1B528831CLL);
    }
  }
  v26 += 0x10000;
  ++v20;
  BOOL v10 = __CFADD__(v1, 1);
  int v1 = (uint64_t *)(v1 + 1);
  if (!v10) {
    goto LABEL_22;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  swift_bridgeObjectRelease();
  sub_1B5201384((uint64_t)(v1 + 6), (uint64_t)v114, &qword_1E9D47940);
  uint64_t v48 = v115;
  if (v115)
  {
    uint64_t v49 = v116;
    __swift_project_boxed_opaque_existential_1(v114, v115);
    uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v48, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
    uint64_t v51 = *(void *)(v50 + 16);
    if (v51)
    {
      uint64_t v52 = (unsigned __int8 *)(v50 + 32);
      uint64_t v53 = v106;
      do
      {
        unint64_t v55 = *((void *)v52 + 1);
        if ((int64_t)v55 < v53[2])
        {
          uint64_t v56 = *v52;
          uint64_t v57 = v52[1];
          uint64_t v58 = v52[2];
          uint64_t v59 = v52[3];
          int v60 = v52[4];
          uint64_t v61 = v53;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v53 = v61;
            if ((v55 & 0x8000000000000000) != 0) {
              goto LABEL_78;
            }
          }
          else
          {
            uint64_t v53 = sub_1B52935D8(v61);
            if ((v55 & 0x8000000000000000) != 0) {
              goto LABEL_78;
            }
          }
          if (v55 >= v53[2]) {
            goto LABEL_79;
          }
          uint64_t v101 = v56;
          uint64_t v103 = v57;
          uint64_t v105 = v58;
          uint64_t v109 = v59;
          int v111 = v60;
          uint64_t v63 = &v53[2 * v55];
          uint64_t v66 = (char *)v63[4];
          BOOL v64 = v63 + 4;
          uint64_t v65 = v66;
          int v67 = *(_DWORD *)v64;
          char v68 = *((unsigned char *)v64 + 4);
          char v69 = *((unsigned char *)v64 + 5);
          char v70 = *((unsigned char *)v64 + 6);
          char v71 = *((unsigned char *)v64 + 7);
          char v72 = *((unsigned char *)v64 + 8);
          char v73 = *((unsigned char *)v64 + 9);
          v62.i32[0] = *(_DWORD *)((char *)v64 + 10);
          uint16x8_t v74 = vmovl_u8(v62);
          char v75 = *((unsigned char *)v64 + 14);
          uint64_t v77 = (char *)v64 + 15;
          uint64_t v76 = *((unsigned __int8 *)v64 + 15);
          LOBYTE(v114[0]) = v73;
          switch(v76)
          {
            case 1:
              *(_DWORD *)BOOL v64 = v67;
              *((unsigned char *)v64 + 4) = v68 & 1;
              char v83 = v114[0];
              *((unsigned char *)v64 + 5) = v69;
              *((unsigned char *)v64 + 6) = v70;
              *((unsigned char *)v64 + 7) = v71;
              *((unsigned char *)v64 + 8) = v72;
              *((unsigned char *)v64 + 9) = v83;
              *((unsigned char *)v64 + 10) = v101;
              *((unsigned char *)v64 + 11) = v103;
              *((unsigned char *)v64 + 12) = v105;
              *((unsigned char *)v64 + 13) = v109;
              *((unsigned char *)v64 + 14) = v111;
              *uint64_t v77 = 2;
              break;
            case 2:
              char v95 = v69;
              uint64_t v107 = v53;
              char v97 = v70;
              char v99 = v71;
              int16x8_t v100 = (int16x8_t)v74;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BA8);
              uint64_t v78 = swift_allocObject();
              *(_OWORD *)(v78 + 16) = xmmword_1B538C190;
              *(_DWORD *)(v78 + 32) = v67;
              *(unsigned char *)(v78 + 36) = v68 & 1;
              *(unsigned char *)(v78 + 37) = v95;
              *(unsigned char *)(v78 + 38) = v97;
              *(unsigned char *)(v78 + 39) = v99;
              *(unsigned char *)(v78 + 40) = v72;
              *(unsigned char *)(v78 + 41) = v73 & 1;
              *(_DWORD *)(v78 + 42) = vmovn_s16(v100).u32[0];
              *(unsigned char *)(v78 + 46) = v75 & 1;
              *(unsigned char *)(v78 + 47) = v101;
              *(unsigned char *)(v78 + 48) = v103;
              *(unsigned char *)(v78 + 49) = v105;
              *(unsigned char *)(v78 + 50) = v109;
              *(unsigned char *)(v78 + 51) = v111;
              *BOOL v64 = v78;
              uint64_t v53 = v107;
              *((unsigned char *)v64 + 14) = 0;
              *((_WORD *)v64 + 6) = 0;
              *((_DWORD *)v64 + 2) = 0;
              *uint64_t v77 = 3;
              break;
            case 3:
              uint64_t v79 = v53;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v65 = sub_1B51E9218(0, *((void *)v65 + 2) + 1, 1, v65);
              }
              unint64_t v81 = *((void *)v65 + 2);
              unint64_t v80 = *((void *)v65 + 3);
              if (v81 >= v80 >> 1) {
                uint64_t v65 = sub_1B51E9218((char *)(v80 > 1), v81 + 1, 1, v65);
              }
              *((void *)v65 + 2) = v81 + 1;
              uint64_t v82 = &v65[5 * v81];
              v82[32] = v101;
              v82[33] = v103;
              v82[34] = v105;
              v82[35] = v109;
              v82[36] = v111;
              *BOOL v64 = v65;
              *((unsigned char *)v64 + 14) = 0;
              *((_WORD *)v64 + 6) = 0;
              *((_DWORD *)v64 + 2) = 0;
              *uint64_t v77 = 3;
              uint64_t v53 = v79;
              break;
            case 4:
              uint64_t v54 = 0x100000000;
              if (!v111) {
                uint64_t v54 = 0;
              }
              *BOOL v64 = v101 | (v103 << 8) | (v105 << 16) | (v109 << 24) | v54;
              *((unsigned char *)v64 + 14) = 0;
              *((_WORD *)v64 + 6) = 0;
              *((_DWORD *)v64 + 2) = 0;
              *uint64_t v77 = 0;
              break;
            default:
              *(_WORD *)BOOL v64 = (_WORD)v65;
              *((unsigned char *)v64 + 2) = BYTE2(v65);
              *((unsigned char *)v64 + 3) = BYTE3(v65);
              *((unsigned char *)v64 + 4) = BYTE4(v65) & 1;
              *((unsigned char *)v64 + 5) = v101;
              *((unsigned char *)v64 + 6) = v103;
              *((unsigned char *)v64 + 7) = v105;
              *((unsigned char *)v64 + 8) = v109;
              *((unsigned char *)v64 + 9) = v111;
              *uint64_t v77 = 1;
              break;
          }
        }
        v52 += 16;
        --v51;
      }
      while (v51);
      uint64_t v106 = v53;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B51E0064((uint64_t)v114, &qword_1E9D47940);
  }
  return v106;
}

uint64_t UnicodeVariation.variationSelector.getter(unint64_t a1)
{
  uint64_t v1 = BYTE3(a1) | 0xFE00;
  if ((a1 & 0xF0000000) != 0) {
    uint64_t v1 = (BYTE3(a1) - 16) | 0xE0100;
  }
  if ((a1 & 0x100000000) != 0) {
    uint64_t v1 = 0;
  }
  return v1 | ((HIDWORD(a1) & 1) << 32);
}

uint64_t UnicodeVariation.codePoint.getter(int a1)
{
  return a1 & 0xFF00 | (a1 << 16) | BYTE2(a1);
}

uint64_t sub_1B5288398(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B52935B0((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1B5293664(v5);
  *a1 = v2;
  return result;
}

double UnicodeVariation.codePoints.getter(uint64_t a1)
{
  int v1 = a1;
  if ((a1 & 0x100000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47988);
    uint64_t v6 = swift_allocObject();
    *(void *)&double result = 1;
    *(_OWORD *)(v6 + 16) = xmmword_1B538C0E0;
    HIDWORD(v7) = v1;
    LODWORD(v7) = v1;
    *(_DWORD *)(v6 + 32) = (v7 >> 16) & 0xFF00FF | v1 & 0xFF00;
  }
  else
  {
    if (BYTE3(a1) <= 0xFu) {
      int v2 = BYTE3(a1) | 0xFE00;
    }
    else {
      int v2 = (BYTE3(a1) - 16) | 0xE0100;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47988);
    uint64_t v3 = swift_allocObject();
    *(void *)&double result = 2;
    *(_OWORD *)(v3 + 16) = xmmword_1B538C490;
    HIDWORD(v5) = v1;
    LODWORD(v5) = v1;
    *(_DWORD *)(v3 + 32) = (v5 >> 16) & 0xFF00FF | v1 & 0xFF00;
    *(_DWORD *)(v3 + 36) = v2;
  }
  return result;
}

uint64_t CharacterMap.getMappedRanges()()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2);
}

uint64_t CharacterMap.query<A, B>(codePoints:output:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v25 = a7;
  uint64_t v14 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v7 + 88);
  sub_1B51DFF98(v7 + 8, (uint64_t)v30);
  sub_1B5201384(v7 + 48, (uint64_t)v29, &qword_1E9D47940);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a3);
  uint64_t v18 = a2[3];
  uint64_t v26 = *a2;
  long long v27 = *(_OWORD *)(a2 + 1);
  uint64_t v28 = v18;
  uint64_t v19 = (void *)swift_allocObject();
  long long v19[2] = a3;
  void v19[3] = a4;
  v19[4] = a5;
  v19[5] = a6;
  uint64_t v20 = type metadata accessor for CheckedBufferView();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v21 = type metadata accessor for IndexRangedSequence();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  return CharacterMapQuery.init(mapWindowSize:cmap:uvsMap:inputCollection:outputCollection:inputToUVSWithRanges:)(v17, (uint64_t)v30, (uint64_t)v29, (uint64_t)v16, (uint64_t)&v26, (uint64_t)sub_1B5294100, (uint64_t)v19, a3, v25, v20, v21, a5, WitnessTable);
}

FontParser::CharacterMapQueryStatus __swiftcall CharacterMapQuery.map()()
{
  do
    FontParser::CharacterMapQueryStatus result = CharacterMapQuery.mapPartial()().value;
  while (result == FontParser_CharacterMapQueryStatus_unknownDefault);
  return result;
}

BOOL static CharacterMapQueryStatus.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void sub_1B5288794()
{
  void (*v10)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  long long v23;
  uint64_t v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;

  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v1 + v2;
  if (__OFADD__(v1, v2))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v4 = v0[9];
  BOOL v5 = __OFSUB__(v4, v1);
  uint64_t v6 = v4 - v1;
  if (v5)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v7 = v3 - v4;
  if (__OFSUB__(v3, v4))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  BOOL v5 = __OFADD__(v6, v7);
  uint64_t v8 = v6 + v7;
  if (v5)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v3 < v4 || v8 < v6) {
    goto LABEL_31;
  }
  BOOL v10 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[11];
  uint64_t v11 = v0[2];
  if (v11) {
    uint64_t v12 = v11 + 2 * v6;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v25 = v0[1];
  *(void *)&uint64_t v26 = v12;
  *((void *)&v26 + 1) = v8 - v6;
  long long v27 = v4;
  swift_retain();
  v10(&v22, &v25);
  swift_release();
  uint64_t v13 = v24;
  uint64_t v25 = v22;
  uint64_t v26 = v23;
  long long v27 = v24;
  uint64_t v28 = v24;
  sub_1B5274CD8();
  if ((v14 & 0x100000000) != 0) {
    goto LABEL_15;
  }
  uint64_t v15 = v28;
  if (v28 < v13) {
    goto LABEL_32;
  }
  if (v4 == v28)
  {
LABEL_15:
    swift_release();
    return;
  }
  uint64_t v17 = v0[7];
  uint64_t v16 = v0[8];
  BOOL v5 = __OFADD__(v16, v17);
  uint64_t v18 = v16 + v17;
  if (v5) {
    goto LABEL_33;
  }
  if (v18 < v16)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4 < v28)
  {
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[6];
    uint64_t v21 = v19;
    while (v19 >= v16 && v21 < v18)
    {
      if (__OFSUB__(v21, v16)) {
        goto LABEL_26;
      }
      *(void *)(v20 + 8 * (v21 - v16)) = 0;
      ++v21;
      if (v15 == ++v4)
      {
        swift_release();
        v0[9] = v15;
        v0[10] = v21;
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_35:
  __break(1u);
}

void sub_1B528891C()
{
  void (*v10)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  long long v23;
  uint64_t v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;

  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v1 + v2;
  if (__OFADD__(v1, v2))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v4 = v0[9];
  BOOL v5 = __OFSUB__(v4, v1);
  uint64_t v6 = v4 - v1;
  if (v5)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v7 = v3 - v4;
  if (__OFSUB__(v3, v4))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  BOOL v5 = __OFADD__(v6, v7);
  uint64_t v8 = v6 + v7;
  if (v5)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v3 < v4 || v8 < v6) {
    goto LABEL_31;
  }
  BOOL v10 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[11];
  uint64_t v11 = v0[2];
  if (v11) {
    uint64_t v12 = v11 + 2 * v6;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v25 = v0[1];
  *(void *)&uint64_t v26 = v12;
  *((void *)&v26 + 1) = v8 - v6;
  long long v27 = v4;
  swift_retain();
  v10(&v22, &v25);
  swift_release();
  uint64_t v13 = v24;
  uint64_t v25 = v22;
  uint64_t v26 = v23;
  long long v27 = v24;
  uint64_t v28 = v24;
  sub_1B5274CD8();
  if ((v14 & 0x100000000) != 0) {
    goto LABEL_15;
  }
  uint64_t v15 = v28;
  if (v28 < v13) {
    goto LABEL_32;
  }
  if (v4 == v28)
  {
LABEL_15:
    swift_release();
    return;
  }
  uint64_t v17 = v0[7];
  uint64_t v16 = v0[8];
  BOOL v5 = __OFADD__(v16, v17);
  uint64_t v18 = v16 + v17;
  if (v5) {
    goto LABEL_33;
  }
  if (v18 < v16)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4 < v28)
  {
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[6];
    uint64_t v21 = v19;
    while (v19 >= v16 && v21 < v18)
    {
      if (__OFSUB__(v21, v16)) {
        goto LABEL_26;
      }
      *(_DWORD *)(v20 + 4 * (v21 - v16)) = 0;
      ++v21;
      if (v15 == ++v4)
      {
        swift_release();
        v0[9] = v15;
        v0[10] = v21;
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1B5288AA4()
{
  void (*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void v22[6];
  uint64_t v23;
  uint64_t v24;

  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v2 + v1;
  if (__OFADD__(v2, v1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v4 = v0;
  uint64_t v5 = v0[9];
  if (v3 < v5 || v3 < v2) {
    goto LABEL_25;
  }
  if (v5 < v2)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = (void (*)(uint64_t *__return_ptr, void *))v0[11];
  uint64_t v9 = v0[1];
  uint64_t v8 = v0[2];
  v22[0] = v0[9];
  v22[1] = v2 + v1;
  v22[2] = v9;
  v22[3] = v8;
  v22[4] = v1;
  v22[5] = v2;
  swift_retain();
  v7(&v23, v22);
  FontParser::CharacterMapQueryStatus result = swift_release();
  uint64_t v11 = v23;
  uint64_t v12 = v24;
  if (v23 == v24) {
    goto LABEL_11;
  }
  uint64_t v13 = v23 + 1;
  if (__OFADD__(v23, 1)) {
    goto LABEL_27;
  }
  if (v13 < v23)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  FontParser::CharacterMapQueryStatus result = sub_1B5294084(v23);
  if (v5 != v13)
  {
    uint64_t v15 = v0[7];
    uint64_t v14 = v0[8];
    uint64_t v16 = __OFADD__(v14, v15);
    uint64_t v17 = v14 + v15;
    if (v16)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v17 < v14)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v5 >= v13)
    {
LABEL_31:
      __break(1u);
      return result;
    }
    uint64_t v18 = v0[10];
    uint64_t v19 = v0[6];
    uint64_t v20 = v11 - v5 + 1;
    uint64_t v21 = v18;
    while (v18 >= v14 && v21 < v17)
    {
      if (__OFSUB__(v21, v14)) {
        goto LABEL_23;
      }
      *(_WORD *)(v19 + 2 * (v21 - v14)) = 0;
      ++v21;
      if (!--v20)
      {
        sub_1B5268654((uint64_t)&v23);
        v4[9] = v13;
        v4[10] = v21;
        return v11 != v12;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_11:
  sub_1B5268654((uint64_t)&v23);
  return v11 != v12;
}

void sub_1B5288C04()
{
  void (*v10)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  long long v23;
  uint64_t v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;

  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v1 + v2;
  if (__OFADD__(v1, v2))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v4 = v0[9];
  BOOL v5 = __OFSUB__(v4, v1);
  uint64_t v6 = v4 - v1;
  if (v5)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v7 = v3 - v4;
  if (__OFSUB__(v3, v4))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  BOOL v5 = __OFADD__(v6, v7);
  uint64_t v8 = v6 + v7;
  if (v5)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v3 < v4 || v8 < v6) {
    goto LABEL_31;
  }
  BOOL v10 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[11];
  uint64_t v11 = v0[2];
  if (v11) {
    uint64_t v12 = v11 + 2 * v6;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v25 = v0[1];
  *(void *)&uint64_t v26 = v12;
  *((void *)&v26 + 1) = v8 - v6;
  long long v27 = v4;
  swift_retain();
  v10(&v22, &v25);
  swift_release();
  uint64_t v13 = v24;
  uint64_t v25 = v22;
  uint64_t v26 = v23;
  long long v27 = v24;
  uint64_t v28 = v24;
  sub_1B5274CD8();
  if ((v14 & 0x100000000) != 0) {
    goto LABEL_15;
  }
  uint64_t v15 = v28;
  if (v28 < v13) {
    goto LABEL_32;
  }
  if (v4 == v28)
  {
LABEL_15:
    swift_release();
    return;
  }
  uint64_t v17 = v0[7];
  uint64_t v16 = v0[8];
  BOOL v5 = __OFADD__(v16, v17);
  uint64_t v18 = v16 + v17;
  if (v5) {
    goto LABEL_33;
  }
  if (v18 < v16)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4 < v28)
  {
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[6];
    uint64_t v21 = v19;
    while (v19 >= v16 && v21 < v18)
    {
      if (__OFSUB__(v21, v16)) {
        goto LABEL_26;
      }
      *(_WORD *)(v20 + 2 * (v21 - v16)) = 0;
      ++v21;
      if (v15 == ++v4)
      {
        swift_release();
        v0[9] = v15;
        v0[10] = v21;
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1B5288D8C()
{
  void (*v1)(uint64_t *__return_ptr, int *);
  int v2;
  char v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  char v19;
  unint64_t v20;
  int v21;
  char v22;
  int v23;
  char v24;
  unint64_t v25;
  int v26;
  char v27;

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, int *))(v0 + 64);
  uint64_t v2 = *(_DWORD *)(v0 + 48);
  uint64_t v3 = *(unsigned char *)(v0 + 52);
  uint64_t v4 = *(_DWORD *)(v0 + 8);
  BOOL v5 = *(_DWORD *)(v0 + 12);
  uint64_t v21 = v2;
  char v22 = v3;
  uint16x8_t v23 = 0;
  uint64_t v24 = 1;
  uint64_t v25 = __PAIR64__(v5, v4);
  v1(&v17, &v21);
  uint64_t v21 = v17;
  char v22 = BYTE4(v17);
  uint16x8_t v23 = v18;
  uint64_t v24 = v19;
  uint64_t v25 = v20;
  uint64_t v26 = v17;
  long long v27 = BYTE4(v17);
  FontParser::CharacterMapQueryStatus result = sub_1B5215948();
  if ((v8 & 0x100000000) != 0) {
    return (v8 & 0x100000000) == 0;
  }
  if ((v3 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v9 = 1;
  if ((v7 & 0x100000000) != 0) {
    return (v8 & 0x100000000) == 0;
  }
  while (1)
  {
    uint64_t v11 = *(void *)(v0 + 32);
    BOOL v10 = *(void *)(v0 + 40);
    uint64_t v12 = v10 + v11;
    if (__OFADD__(v10, v11)) {
      break;
    }
    if (v12 < v10) {
      goto LABEL_19;
    }
    uint64_t v13 = *(void *)(v0 + 56);
    if (v13 < v10) {
      goto LABEL_20;
    }
    if (v13 >= v12) {
      goto LABEL_21;
    }
    uint64_t v14 = __OFSUB__(v13, v10);
    uint64_t v15 = v13 - v10;
    if (v14) {
      goto LABEL_22;
    }
    *(_WORD *)(*(void *)(v0 + 24) + 2 * v15) = 0;
    *(void *)(v0 + 56) = v13 + 1;
    if (v9) {
      goto LABEL_24;
    }
    if (v2 == v5)
    {
      uint64_t v2 = 0;
      *(_DWORD *)(v0 + 48) = 0;
      *(unsigned char *)(v0 + 52) = 1;
      uint64_t v9 = 1;
      if ((v7 & 0x100000000) != 0) {
        return (v8 & 0x100000000) == 0;
      }
    }
    else
    {
      if (__CFADD__(v2++, 1)) {
        goto LABEL_23;
      }
      *(_DWORD *)(v0 + 48) = v2;
      *(unsigned char *)(v0 + 52) = 0;
LABEL_5:
      uint64_t v9 = 0;
      if ((v7 & 0x100000000) == 0 && v2 == v7) {
        return (v8 & 0x100000000) == 0;
      }
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1B5288EF4()
{
  void (*v1)(uint64_t *__return_ptr, int *);
  int v2;
  char v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  char v19;
  unint64_t v20;
  int v21;
  char v22;
  int v23;
  char v24;
  unint64_t v25;
  int v26;
  char v27;

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, int *))(v0 + 64);
  uint64_t v2 = *(_DWORD *)(v0 + 48);
  uint64_t v3 = *(unsigned char *)(v0 + 52);
  uint64_t v4 = *(_DWORD *)(v0 + 8);
  BOOL v5 = *(_DWORD *)(v0 + 12);
  uint64_t v21 = v2;
  char v22 = v3;
  uint16x8_t v23 = 0;
  uint64_t v24 = 1;
  uint64_t v25 = __PAIR64__(v5, v4);
  v1(&v17, &v21);
  uint64_t v21 = v17;
  char v22 = BYTE4(v17);
  uint16x8_t v23 = v18;
  uint64_t v24 = v19;
  uint64_t v25 = v20;
  uint64_t v26 = v17;
  long long v27 = BYTE4(v17);
  FontParser::CharacterMapQueryStatus result = sub_1B5215948();
  if ((v8 & 0x100000000) != 0) {
    return (v8 & 0x100000000) == 0;
  }
  if ((v3 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v9 = 1;
  if ((v7 & 0x100000000) != 0) {
    return (v8 & 0x100000000) == 0;
  }
  while (1)
  {
    uint64_t v11 = *(void *)(v0 + 32);
    BOOL v10 = *(void *)(v0 + 40);
    uint64_t v12 = v10 + v11;
    if (__OFADD__(v10, v11)) {
      break;
    }
    if (v12 < v10) {
      goto LABEL_19;
    }
    uint64_t v13 = *(void *)(v0 + 56);
    if (v13 < v10) {
      goto LABEL_20;
    }
    if (v13 >= v12) {
      goto LABEL_21;
    }
    uint64_t v14 = __OFSUB__(v13, v10);
    uint64_t v15 = v13 - v10;
    if (v14) {
      goto LABEL_22;
    }
    *(_DWORD *)(*(void *)(v0 + 24) + 4 * v15) = 0;
    *(void *)(v0 + 56) = v13 + 1;
    if (v9) {
      goto LABEL_24;
    }
    if (v2 == v5)
    {
      uint64_t v2 = 0;
      *(_DWORD *)(v0 + 48) = 0;
      *(unsigned char *)(v0 + 52) = 1;
      uint64_t v9 = 1;
      if ((v7 & 0x100000000) != 0) {
        return (v8 & 0x100000000) == 0;
      }
    }
    else
    {
      if (__CFADD__(v2++, 1)) {
        goto LABEL_23;
      }
      *(_DWORD *)(v0 + 48) = v2;
      *(unsigned char *)(v0 + 52) = 0;
LABEL_5:
      uint64_t v9 = 0;
      if ((v7 & 0x100000000) == 0 && v2 == v7) {
        return (v8 & 0x100000000) == 0;
      }
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

Swift::Bool __swiftcall CharacterMapQuery.skipCharacter()()
{
  uint64_t v2 = v0;
  uint64_t v81 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v81 + 8);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v58 = (char *)&v53 - v6;
  uint64_t v77 = *(void *)(*(void *)(*(void *)(v2 + 64) + 24) + 16);
  uint64_t v59 = v7;
  uint64_t v79 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v53 - v8;
  uint64_t v80 = v3;
  uint64_t v76 = v4;
  uint64_t v89 = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v91 = (char *)&v53 - v9;
  uint64_t v10 = *(void *)(v2 + 40);
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v69 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v53 - v13;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = sub_1B5372CB8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v55 = sub_1B5372CD8();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint16x8_t v74 = (char *)&v53 - v16;
  uint64_t v68 = v15;
  uint64_t v67 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v66 = (char *)&v53 - v18;
  uint64_t v86 = v11;
  uint64_t v87 = v10;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v19 - 8);
  char v72 = (void (*)(char *, uint64_t))v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v53 - v20;
  uint64_t v22 = sub_1B5373038();
  uint64_t v64 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v53 - v23;
  MEMORY[0x1F4188790](v25);
  uint8x8_t v62 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = *(char **)(v2 + 56);
  char v70 = v27;
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(v28 - 8);
  double v29 = MEMORY[0x1F4188790](v28);
  int v31 = (char *)&v53 - v30;
  char v32 = (void (**)(char *))(v1 + *(int *)(v2 + 92));
  char v34 = *v32;
  char v33 = v32[1];
  uint64_t v61 = v34;
  int v60 = v33;
  uint64_t v35 = *(int *)(v2 + 76);
  uint64_t v90 = v2;
  uint64_t v36 = *(int *)(v2 + 84);
  uint64_t v37 = v1;
  char v38 = *(void (**)(char *))(v69 + 16);
  uint64_t v56 = v1 + v36;
  char v83 = v38;
  uint64_t v84 = v69 + 16;
  ((void (*)(char *, double))v38)(v24, v29);
  uint64_t v82 = *(void *)(AssociatedConformanceWitness + 8);
  Swift::Bool result = sub_1B5372698();
  if (result)
  {
    swift_getWitnessTable();
    uint64_t v75 = v1 + v35;
    sub_1B5372C78();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v24, v22);
    v61(v21);
    (*(void (**)(char *, void))(v71 + 8))(v21, v72);
    sub_1B5372958();
    swift_getAssociatedConformanceWitness();
    int v40 = v74;
    sub_1B5372D88();
    int v41 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v40, 1);
    int v42 = v41;
    if (v41 == 1)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v31, v28);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v74, v55);
    }
    else
    {
      LODWORD(v62) = v41;
      uint64_t v63 = v31;
      uint64_t v64 = v28;
      uint64_t v43 = v66;
      uint64_t v44 = v68;
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v74, v68);
      unint64_t v45 = &v43[*(int *)(v44 + 36)];
      uint64_t v46 = v57;
      uint64_t v47 = v56;
      v83(v57);
      uint16x8_t v74 = v45;
      LOBYTE(v45) = sub_1B5372698();
      uint64_t v48 = v69;
      char v72 = *(void (**)(char *, uint64_t))(v69 + 8);
      TupleTypeMetadata2 = v69 + 8;
      v72(v46, v12);
      uint64_t v49 = v85;
      uint64_t v50 = v91;
      if ((v45 & 1) == 0)
      {
        uint64_t v51 = v37;
        uint64_t v71 = *(void *)(v85 + 16);
        v85 += 16;
        char v70 = (void (**)(uint64_t, char *, uint64_t))(v49 + 40);
        uint64_t v69 = v48 + 40;
        uint64_t v88 = v37;
        do
        {
          uint64_t v52 = v51 + *(int *)(v90 + 88);
          ((void (*)(char *, uint64_t, uint64_t))v71)(v50, v52, v89);
          swift_getAssociatedConformanceWitness();
          sub_1B5373268();
          sub_1B5373218();
          sub_1B5372678();
          sub_1B5372BA8();
          (*v70)(v52, v91, v89);
          sub_1B5372BA8();
          (*(void (**)(uint64_t, char *, uint64_t))v69)(v47, v46, v12);
          ((void (*)(char *, uint64_t, uint64_t))v83)(v46, v47, v12);
          LOBYTE(v52) = sub_1B5372698();
          v72(v46, v12);
          uint64_t v50 = v91;
          uint64_t v51 = v88;
        }
        while ((v52 & 1) == 0);
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v64);
      int v42 = (int)v62;
    }
    return v42 != 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CharacterMap.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((a2 & 0x100000000) == 0)
  {
    sub_1B5201384((uint64_t)(v3 + 6), (uint64_t)v17, &qword_1E9D47940);
    uint64_t v6 = v18;
    if (v18)
    {
      uint64_t v7 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6, v7);
      __int16 v10 = v9;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      if ((v10 & 0x101) == 0) {
        return v8;
      }
    }
    else
    {
      sub_1B51E0064((uint64_t)v17, &qword_1E9D47940);
    }
  }
  uint64_t v11 = v3 + 1;
  uint64_t v13 = v3[4];
  uint64_t v12 = v3[5];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  unsigned int v14 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 0, 1, v13, v12);
  if (v15) {
    return 0;
  }
  else {
    return v14;
  }
}

{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  __int16 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  void v17[3];
  uint64_t v18;
  uint64_t v19;

  uint64_t v3 = v2;
  if ((a2 & 0x100000000) == 0)
  {
    sub_1B5201384((uint64_t)(v3 + 6), (uint64_t)v17, &qword_1E9D47940);
    uint64_t v6 = v18;
    if (v18)
    {
      uint64_t v7 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6, v7);
      __int16 v10 = v9;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      if ((v10 & 0x101) == 0) {
        return v8;
      }
    }
    else
    {
      sub_1B51E0064((uint64_t)v17, &qword_1E9D47940);
    }
  }
  uint64_t v11 = v3 + 1;
  uint64_t v13 = v3[4];
  uint64_t v12 = v3[5];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  unsigned int v14 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 0, 1, v13, v12);
  if (v15) {
    return 0;
  }
  else {
    return v14;
  }
}

uint64_t UnicodeVariation.description.getter(unint64_t a1)
{
  UnicodeVariation.codePoints.getter(a1 | ((HIDWORD(a1) & 1) << 32));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BD0);
  sub_1B52010C8((unint64_t *)&qword_1E9D47BD8, &qword_1E9D47BD0);
  sub_1B520110C();
  uint64_t result = sub_1B53727C8();
  if (v2)
  {
    uint64_t v3 = result;
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5289D08(long long *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  type metadata accessor for RefcountCheck();
  uint64_t v6 = swift_allocObject();
  long long v7 = *a1;
  uint64_t v8 = 0;
  a2(&v9, &v6);
  if (v2)
  {
    if (swift_isUniquelyReferenced_nonNull_native()) {
      return swift_release();
    }
    goto LABEL_7;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
LABEL_7:
    uint64_t result = sub_1B53730C8();
    __break(1u);
    return result;
  }
  swift_release();
  return v9;
}

uint64_t CharacterMap.init(glyphCount:characterMap:unicodeVariationMap:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)(a4 + 64) = 0u;
  *(void *)(a4 + 80) = 0;
  *(void *)(a4 + 88) = 2048;
  *(void *)a4 = a1;
  *(_OWORD *)(a4 + 48) = 0u;
  uint64_t v5 = a4 + 48;
  sub_1B51E0D0C(a2, a4 + 8);
  return sub_1B5283904(a3, v5);
}

uint64_t UnicodeVariation.variationSelector.setter(uint64_t result)
{
  if ((result & 0x100000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unsigned int v2 = result >> 4;
    char v3 = result + 16;
    if ((result - 917760) < 0xF0)
    {
      char v4 = 0;
    }
    else
    {
      char v3 = 0;
      char v4 = 1;
    }
    BOOL v5 = v2 == 4064;
    if (v2 == 4064) {
      char v6 = result;
    }
    else {
      char v6 = v3;
    }
    if (v5) {
      char v7 = 0;
    }
    else {
      char v7 = v4;
    }
    *(unsigned char *)(v1 + 3) = v6;
    *(unsigned char *)(v1 + 4) = v7;
  }
  return result;
}

uint64_t *(*UnicodeVariation.variationSelector.modify(uint64_t a1))(uint64_t *result, char a2)
{
  *(void *)a1 = v1;
  unsigned int v2 = *(unsigned __int8 *)(v1 + 3);
  char v3 = *(unsigned char *)(v1 + 4);
  if (v2 <= 0xF) {
    int v4 = v2 | 0xFE00;
  }
  else {
    int v4 = (v2 - 16) | 0xE0100;
  }
  if (*(unsigned char *)(v1 + 4)) {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 12) = v3;
  return sub_1B5289F08;
}

uint64_t *sub_1B5289F08(uint64_t *result, char a2)
{
  unsigned int v2 = *((_DWORD *)result + 2);
  if (a2)
  {
    if ((*((unsigned char *)result + 12) & 1) == 0)
    {
      char v3 = v2 + 16;
      if (v2 - 917760 <= 0xEF)
      {
        char v4 = 0;
      }
      else
      {
        char v3 = 0;
        char v4 = 1;
      }
      if (v2 >> 4 == 4064)
      {
        char v5 = 0;
      }
      else
      {
        LOBYTE(v2) = v3;
        char v5 = v4;
      }
LABEL_16:
      uint64_t v8 = *result;
      *(unsigned char *)(v8 + 3) = v2;
      *(unsigned char *)(v8 + 4) = v5;
      return result;
    }
    __break(1u);
  }
  else if ((*((unsigned char *)result + 12) & 1) == 0)
  {
    char v6 = v2 + 16;
    if (v2 - 917760 <= 0xEF)
    {
      char v7 = 0;
    }
    else
    {
      char v6 = 0;
      char v7 = 1;
    }
    if (v2 >> 4 == 4064)
    {
      char v5 = 0;
    }
    else
    {
      LOBYTE(v2) = v6;
      char v5 = v7;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t UnicodeVariation.codePoint.setter(uint64_t result)
{
  if (BYTE3(result))
  {
    __break(1u);
  }
  else
  {
    *uint64_t v1 = BYTE2(result);
    v1[1] = BYTE1(result);
    v1[2] = result;
  }
  return result;
}

uint64_t (*UnicodeVariation.codePoint.modify(uint64_t a1))(uint64_t result, char a2)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = (*v1 << 16) | (v1[1] << 8) | v1[2];
  return sub_1B528A000;
}

uint64_t sub_1B528A000(uint64_t result, char a2)
{
  unsigned int v2 = *(_DWORD *)(result + 8);
  unsigned int v3 = HIBYTE(v2);
  if (a2)
  {
    if (!v3)
    {
LABEL_5:
      char v4 = *(unsigned char **)result;
      *char v4 = BYTE2(v2);
      v4[1] = BYTE1(v2);
      v4[2] = v2;
      return result;
    }
    __break(1u);
  }
  if (!v3) {
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

unint64_t UnicodeVariation.init(codePoint:)(unint64_t result)
{
  if (!BYTE3(result)) {
    return (result << 16) | 0x100000000 | (unsigned __int16)result & 0xFF00 | (unint64_t)WORD1(result);
  }
  __break(1u);
  return result;
}

uint64_t UnicodeVariation.init(codePoint:variationSelector:)(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_1B52943D0(a1, a2 | ((HIDWORD(a2) & 1) << 32));
  return v2 & 0xFFFFFFFFFFLL | (((v2 >> 40) & 1) << 40);
}

uint64_t sub_1B528A0B0()
{
  UnicodeVariation.codePoints.getter(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BD0);
  sub_1B52010C8((unint64_t *)&qword_1E9D47BD8, &qword_1E9D47BD0);
  sub_1B520110C();
  uint64_t result = sub_1B53727C8();
  if (v2)
  {
    uint64_t v3 = result;
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::UInt32_optional __swiftcall CharacterMapRepresentation.findGlyphIndex(for:)(Swift::UInt32 a1)
{
  uint64_t v3 = (*(unsigned int (**)(void, void, uint64_t))(v1 + 48))(*(void *)&a1, 0, 1);
  if (v2) {
    uint64_t v3 = 0;
  }
  return (Swift::UInt32_optional)(v3 | ((unint64_t)(v2 & 1) << 32));
}

uint64_t CharacterMap.glyphCount.getter()
{
  return *(void *)v0;
}

uint64_t CharacterMap.format.getter()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t CharacterMap.platform.getter()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

FontParser::Encoding_optional CharacterMap.encoding.getter()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v3);
  Swift::UInt16 v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v7);
  int v8 = (*(unsigned __int16 (**)(uint64_t, uint64_t))(v6 + 32))(v7, v6);
  return Platform.interpret(encoding:language:)(v5, (Swift::UInt16_optional)v8);
}

uint64_t CharacterMap.language.getter()
{
  return sub_1B528A3A8((uint64_t (*)(uint64_t, uint64_t))Platform.interpret(language:));
}

uint64_t CharacterMap.region.getter()
{
  return sub_1B528A3A8((uint64_t (*)(uint64_t, uint64_t))Platform.interpret(region:));
}

uint64_t sub_1B528A3A8(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  __swift_project_boxed_opaque_existential_1(v1 + 1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  __swift_project_boxed_opaque_existential_1(v1 + 1, v6);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v6, v5);
  return a1(v7, v4);
}

uint64_t CharacterMap.subscript.getter(unint64_t a1, unint64_t a2)
{
  unint64_t v5 = sub_1B5293D34(a1, a2);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_1B5294358(v5, 0);
    uint64_t v8 = sub_1B529410C(&v20, (uint64_t)(v7 + 4), v6, a1, a2);
    swift_bridgeObjectRetain_n();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8 != v6)
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = v7[2];
  if (v10 != 2)
  {
    if (v10 == 1)
    {
      uint64_t v11 = *((unsigned int *)v7 + 8);
      swift_release();
      uint64_t v12 = v2[4];
      uint64_t v13 = v2[5];
      __swift_project_boxed_opaque_existential_1(v2 + 1, v12);
      LODWORD(result) = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 0, 1, v12, v13);
      if (v14) {
        return 0;
      }
      else {
        return result;
      }
    }
    swift_release();
    return 0;
  }
  unint64_t v15 = *((unsigned int *)v7 + 8);
  uint64_t v16 = *((unsigned int *)v7 + 9);
  swift_release();
  LOBYTE(v20) = 0;
  unint64_t v17 = sub_1B52943D0(v15, v16);
  if ((v17 & 0x10000000000) != 0) {
    return 0;
  }
  uint64_t v18 = BYTE3(v17) | 0xFE00;
  if ((v17 & 0xF0000000) != 0) {
    uint64_t v18 = (BYTE3(v17) - 16) | 0xE0100;
  }
  if ((v17 & 0x100000000) != 0) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v18;
  }
  return CharacterMap.subscript.getter(v17 & 0xFF00 | (v17 << 16) | BYTE2(v17), v19 | ((HIDWORD(v17) & 1) << 32));
}

uint64_t CharacterMap.createGlyphSubset<A>(utf16:includeGlyphZero:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a1;
  char v13 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47BD0);
  ContiguousArrayStorage.withCheckedBufferView<A>(action:)((uint64_t)sub_1B5294468, (uint64_t)v12, a3, v8, a4);
  sub_1B51D1088(v14);
  uint64_t v10 = v9;
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v10;
  return result;
}

unint64_t sub_1B528A7D0@<X0>(uint64_t a1@<X4>, char a2@<W6>, uint64_t a3@<X7>, uint64_t *a4@<X8>, uint64_t a5)
{
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a5 + 16))(a3);
  if (v7 < 0)
  {
    __break(1u);
LABEL_14:
    a1 = (uint64_t)sub_1B52935EC(a1);
    goto LABEL_6;
  }
  uint64_t v8 = v7;
  unint64_t v15 = a4;
  if (v7)
  {
    a1 = sub_1B5372A88();
    *(void *)(a1 + 16) = v8;
    bzero((void *)(a1 + 32), 4 * v8);
  }
  else
  {
    a1 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v7);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)&long long v17 = a1 + 32;
  *((void *)&v17 + 1) = v9;
  int64_t v10 = sub_1B5289D08(&v17, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B5298D38);
  uint64_t v18 = a1;
  int64_t v11 = *(void *)(a1 + 16);
  if (v11 < v10)
  {
    __break(1u);
LABEL_16:
    unint64_t result = (unint64_t)sub_1B51E943C(0, *(void *)(a1 + 16) + 1, 1, (char *)a1);
    a1 = result;
    goto LABEL_9;
  }
  unint64_t result = sub_1B52399B0(v10, v11);
  a1 = v18;
  if ((a2 & 1) == 0) {
    goto LABEL_12;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_16;
  }
LABEL_9:
  unint64_t v14 = *(void *)(a1 + 16);
  unint64_t v13 = *(void *)(a1 + 24);
  if (v14 >= v13 >> 1)
  {
    unint64_t result = (unint64_t)sub_1B51E943C((char *)(v13 > 1), v14 + 1, 1, (char *)a1);
    a1 = result;
  }
  *(void *)(a1 + 16) = v14 + 1;
  *(_DWORD *)(a1 + 4 * v14 + 32) = 0;
LABEL_12:
  *unint64_t v15 = a1;
  return result;
}

uint64_t sub_1B528A9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v14 = *(void *)(a2 + 88);
  sub_1B51DFF98(a2 + 8, (uint64_t)v23);
  sub_1B5201384(a2 + 48, (uint64_t)v22, &qword_1E9D47940);
  uint64_t v15 = *(void *)a1;
  long long v21 = *(_OWORD *)(a1 + 8);
  uint64_t v16 = *(void *)(a1 + 24);
  swift_retain();
  swift_retain();
  sub_1B528AB30(v14, (uint64_t)v23, (uint64_t)v22, a3, a4, a5, a6, v15, (uint64_t)v24, v21, *((uint64_t *)&v21 + 1), v16, (uint64_t)sub_1B528AAF4, 0);
  while (1)
  {
    do
      sub_1B528C478();
    while (v17 == 4);
    if (!v17) {
      break;
    }
    uint64_t v18 = v25;
    sub_1B528891C();
    if ((v19 & 1) == 0) {
      break;
    }
    uint64_t v25 = v18;
  }
  *a7 = v25;
  return sub_1B51E0064((uint64_t)v24, &qword_1E9D47C68);
}

uint64_t sub_1B528AAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = v2;
  return swift_retain();
}

uint64_t sub_1B528AB14@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_1B528AB30(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1B528AB30@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_OWORD *)(a9 + 144) = 0u;
  *(_OWORD *)(a9 + 160) = 0u;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  *(void *)(a9 + 176) = 0;
  *(void *)(a9 + 184) = v15;
  uint64_t v16 = a7 + a6;
  if (__OFADD__(a7, a6))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v16 < a7)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v19 = result;
  if (v16 == a7)
  {
    uint64_t v20 = 0;
  }
  else
  {
    if (v16 <= a7)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    uint64_t v21 = a6 - 1;
    if ((unint64_t)(a6 - 1) >= 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
    }
    if (a6 < 1) {
      goto LABEL_38;
    }
    uint64_t v20 = v21 + 1;
  }
  uint64_t v22 = a12 + a11;
  if (__OFADD__(a12, a11)) {
    goto LABEL_34;
  }
  if (v22 < a12)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v22 == a12)
  {
    uint64_t v23 = 0;
  }
  else
  {
    if (v22 <= a12)
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v24 = a11 - 1;
    if ((unint64_t)(a11 - 1) >= 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v24 = 0x7FFFFFFFFFFFFFFFLL;
    }
    if (a11 < 1) {
      goto LABEL_40;
    }
    uint64_t v23 = v24 + 1;
  }
  if (v23 < v20) {
    goto LABEL_36;
  }
  *(void *)a9 = 0;
  *(void *)(a9 + 8) = a4;
  *(void *)(a9 + 16) = a5;
  *(void *)(a9 + 24) = a6;
  *(void *)(a9 + 32) = a7;
  *(void *)(a9 + 40) = a8;
  *(void *)(a9 + 48) = a10;
  *(void *)(a9 + 56) = a11;
  *(void *)(a9 + 64) = a12;
  *(void *)(a9 + 72) = a7;
  *(void *)(a9 + 80) = a12;
  *(void *)(a9 + 88) = a13;
  *(void *)(a9 + 96) = a14;
  sub_1B51DFF98(a2, a9 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B52944B0(a3, a9 + 144);
  unint64_t result = swift_bridgeObjectRelease();
  *(void *)(a9 + 192) = a7;
  if (v16 != a7)
  {
    if (v16 > a7)
    {
      unint64_t v27 = a6 - 1;
      if (a6 >= 1)
      {
        if (v27 >= 0x7FFFFFFFFFFFFFFFLL) {
          unint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
        }
        if ((uint64_t)(v27 + 1) < v19) {
          uint64_t v26 = v27 + 1;
        }
        else {
          uint64_t v26 = v19;
        }
        goto LABEL_29;
      }
LABEL_42:
      __break(1u);
      return result;
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v26 = v19 & (v19 >> 63);
LABEL_29:
  uint64_t v28 = sub_1B51E8DB8(0, v26 & ~(v26 >> 63), 0, MEMORY[0x1E4FBC860]);
  swift_release();
  swift_release();
  swift_release();
  *(void *)(a9 + 184) = v28;
  sub_1B51E0064(a3, &qword_1E9D47940);
  return __swift_destroy_boxed_opaque_existential_1(a2);
}

uint64_t sub_1B528AD58@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  return sub_1B528AD64(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1B528AD64@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  unsigned int v11 = a4;
  unint64_t v13 = HIDWORD(a4);
  *(_OWORD *)(a9 + 120) = 0u;
  *(_OWORD *)(a9 + 136) = 0u;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)(a9 + 152) = 0;
  *(void *)(a9 + 160) = v14;
  uint64_t v15 = (HIDWORD(a4) - a4);
  if (HIDWORD(a4) < a4) {
    uint64_t v15 = -(uint64_t)(a4 - HIDWORD(a4));
  }
  uint64_t v16 = a8 + a7;
  if (__OFADD__(a8, a7))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 < a8)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v19 = result;
  if (v16 == a8)
  {
    uint64_t v20 = 0;
  }
  else
  {
    if (v16 <= a8)
    {
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      return result;
    }
    uint64_t v21 = a7 - 1;
    if ((unint64_t)(a7 - 1) >= 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
    }
    if (a7 < 1) {
      goto LABEL_26;
    }
    uint64_t v20 = v21 + 1;
  }
  if (v20 <= v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  *(void *)a9 = 0;
  *(void *)(a9 + 8) = a4;
  *(void *)(a9 + 16) = a5;
  *(void *)(a9 + 24) = a6;
  *(void *)(a9 + 32) = a7;
  *(void *)(a9 + 40) = a8;
  *(_DWORD *)(a9 + 48) = a4;
  *(unsigned char *)(a9 + 52) = 0;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  sub_1B51DFF98(a2, a9 + 80);
  swift_retain();
  swift_retain();
  sub_1B52944B0(a3, a9 + 120);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a9 + 168) = v11;
  *(unsigned char *)(a9 + 172) = 0;
  if (v13 < v11) {
    uint64_t v22 = -(uint64_t)(v11 - v13);
  }
  else {
    uint64_t v22 = v13 - v11;
  }
  if (v22 + 1 < v19) {
    uint64_t v23 = v22 + 1;
  }
  else {
    uint64_t v23 = v19;
  }
  uint64_t v24 = sub_1B51E8DB8(0, v23 & ~(v23 >> 63), 0, MEMORY[0x1E4FBC860]);
  swift_release();
  swift_release();
  *(void *)(a9 + 160) = v24;
  sub_1B51E0064(a3, &qword_1E9D47940);
  return __swift_destroy_boxed_opaque_existential_1(a2);
}

uint64_t CharacterMapQuery.init(mapWindowSize:cmap:uvsMap:inputCollection:outputCollection:inputToUVSWithRanges:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v59 = a1;
  uint64_t v60 = a7;
  uint64_t v57 = a6;
  uint64_t v63 = a3;
  uint64_t v67 = a2;
  uint64_t v17 = *(void *)(a10 - 8);
  uint64_t v68 = a12;
  uint64_t v65 = a13;
  MEMORY[0x1F4188790](a12);
  uint64_t v19 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v25;
  uint64_t v70 = a10;
  uint64_t v71 = v27;
  uint64_t v72 = v26;
  uint64_t v73 = v29;
  uint64_t v74 = v28;
  uint64_t v75 = v30;
  int v31 = (int *)type metadata accessor for CharacterMapQuery();
  uint64_t v32 = (uint64_t)&a9[v31[25]];
  *(void *)(v32 + 32) = 0;
  *(_OWORD *)uint64_t v32 = 0u;
  *(_OWORD *)(v32 + 16) = 0u;
  uint64_t v54 = v32;
  uint64_t v56 = v31[26];
  *(void *)&a9[v56] = MEMORY[0x1E4FBC860];
  char v33 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v62 = a4;
  uint64_t v52 = v33;
  v50[1] = v21 + 16;
  v33(v24, a4, a8);
  char v34 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v61 = a5;
  uint64_t v51 = v34;
  v34(v19, a5, a10);
  uint64_t v64 = (void (*)(uint64_t, uint64_t))sub_1B5372B98();
  uint64_t v53 = *(void *)(v65 + 8);
  uint64_t v35 = sub_1B5372B98();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  uint64_t v65 = v17 + 8;
  uint64_t v66 = a10;
  uint64_t v55 = v36;
  v36((uint64_t)v19, a10);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v21 + 8);
  char v38 = v24;
  uint64_t v39 = a8;
  uint64_t v58 = v21 + 8;
  uint64_t result = v37(v38, a8);
  if (v35 < (uint64_t)v64)
  {
    __break(1u);
  }
  else
  {
    *(void *)a9 = 0;
    uint64_t v41 = v62;
    v52(&a9[v31[19]], v62, a8);
    uint64_t v42 = v61;
    v51(&a9[v31[20]], v61, v66);
    uint64_t v64 = (void (*)(uint64_t, uint64_t))v37;
    sub_1B5372B88();
    sub_1B5372B88();
    uint64_t v43 = &a9[v31[23]];
    uint64_t v44 = v60;
    *(void *)uint64_t v43 = v57;
    *((void *)v43 + 1) = v44;
    sub_1B51DFF98(v67, (uint64_t)&a9[v31[24]]);
    swift_retain();
    uint64_t v45 = v63;
    sub_1B52944B0(v63, v54);
    uint64_t v46 = v56;
    swift_bridgeObjectRelease();
    sub_1B5372B88();
    uint64_t v47 = sub_1B5372B98();
    uint64_t v48 = v59;
    if (v47 < v59) {
      uint64_t v48 = v47;
    }
    uint64_t v49 = sub_1B51E8DB8(0, v48 & ~(v48 >> 63), 0, MEMORY[0x1E4FBC860]);
    swift_release();
    *(void *)&a9[v46] = v49;
    v55(v42, v66);
    v64(v41, v39);
    sub_1B51E0064(v45, &qword_1E9D47940);
    return __swift_destroy_boxed_opaque_existential_1(v67);
  }
  return result;
}

unint64_t sub_1B528B320()
{
  unint64_t result = qword_1E9D48C10;
  if (!qword_1E9D48C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48C10);
  }
  return result;
}

uint64_t sub_1B528B374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v10 - v6, a1, AssociatedTypeWitness, v5);
  swift_getAssociatedConformanceWitness();
  return sub_1B5266DD8((uint64_t)v7, AssociatedTypeWitness, a2);
}

uint64_t CharacterMapQueryStatus.hash(into:)()
{
  return sub_1B5373308();
}

uint64_t CharacterMapQueryStatus.hashValue.getter()
{
  return sub_1B5373358();
}

uint64_t CharacterMapQuery.errors.getter()
{
  return *(void *)v0;
}

uint64_t CharacterMapQuery.errors.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*CharacterMapQuery.errors.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.input.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 76));
}

uint64_t CharacterMapQuery.input.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 76), a1);
}

uint64_t (*CharacterMapQuery.input.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.output.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 80));
}

uint64_t CharacterMapQuery.output.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 80), a1);
}

uint64_t (*CharacterMapQuery.output.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.inputIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t CharacterMapQuery.inputIndex.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*CharacterMapQuery.inputIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.outputIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t CharacterMapQuery.outputIndex.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*CharacterMapQuery.outputIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.inputToUVSWithRanges.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 92));
  swift_retain();
  return v2;
}

uint64_t CharacterMapQuery.inputToUVSWithRanges.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 92));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*CharacterMapQuery.inputToUVSWithRanges.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.cmap.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B51DFF98(v2 + *(int *)(a1 + 96), a2);
}

uint64_t CharacterMapQuery.cmap.setter(long long *a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v4);
  return sub_1B51E0D0C(a1, v4);
}

uint64_t (*CharacterMapQuery.cmap.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.uvsMap.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5201384(v2 + *(int *)(a1 + 100), a2, &qword_1E9D47940);
}

uint64_t CharacterMapQuery.uvsMap.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B5283904(a1, v2 + *(int *)(a2 + 100));
}

uint64_t (*CharacterMapQuery.uvsMap.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.codePointMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacterMapQuery.codePointMap.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 104);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*CharacterMapQuery.codePointMap.modify())(void)
{
  return nullsub_1;
}

uint64_t CharacterMapQuery.codePointMapsUntil.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 108);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t CharacterMapQuery.codePointMapsUntil.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 108);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*CharacterMapQuery.codePointMapsUntil.modify())(void)
{
  return nullsub_1;
}

void sub_1B528BC08()
{
  void (*v15)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int16 v31;
  __int16 v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unsigned int v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  int v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  long long v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91[8];
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  unsigned __int8 v95;
  char v96;
  uint64_t v97;
  long long v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  char v104;
  uint64_t v105;
  long long v106;
  uint64_t v107;

  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  BOOL v3 = __OFADD__(v2, v1);
  uint64_t v4 = v2 + v1;
  if (v3) {
    goto LABEL_155;
  }
  double v5 = v0;
  uint64_t v6 = v0[9];
  if (v6 < v4)
  {
    uint64_t v7 = v0[24];
    if (v6 != v7 || (sub_1B5290928(), v6 = v0[9], uint64_t v7 = v0[24], v6 != v7))
    {
      if (v6 < v7)
      {
        uint64_t v9 = v0[3];
        uint64_t v8 = v0[4];
        BOOL v3 = __OFADD__(v8, v9);
        uint64_t v10 = v8 + v9;
        if (v3) {
          goto LABEL_168;
        }
        BOOL v3 = __OFSUB__(v6, v8);
        uint64_t v11 = v6 - v8;
        if (v3)
        {
LABEL_169:
          __break(1u);
        }
        else
        {
          uint64_t v12 = v10 - v6;
          if (!__OFSUB__(v10, v6))
          {
            BOOL v3 = __OFADD__(v11, v12);
            uint64_t v13 = v11 + v12;
            if (!v3)
            {
              if (v10 >= v6)
              {
                uint64_t v14 = v13 - v11;
                if (v13 >= v11)
                {
                  uint64_t v15 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[11];
                  uint64_t v16 = v0[2];
                  uint64_t v17 = v16 + 2 * v11;
                  if (!v16) {
                    uint64_t v17 = 0;
                  }
                  uint64_t v86 = v0[1];
                  *(void *)&uint64_t v87 = v17;
                  *((void *)&v87 + 1) = v14;
                  uint64_t v88 = v6;
                  swift_retain();
                  swift_retain();
                  v15(&v105, &v86);
                  swift_release();
                  swift_release();
                  uint64_t v18 = v107;
                  uint64_t v86 = v105;
                  uint64_t v87 = v106;
                  uint64_t v88 = v107;
                  uint64_t v89 = v107;
                  sub_1B5274CD8();
                  if ((v19 & 0x100000000) != 0)
                  {
                    uint64_t v18 = 0;
                    uint64_t v20 = 0;
                    uint64_t v21 = 0;
                  }
                  else
                  {
                    if (v89 < v18)
                    {
LABEL_177:
                      __break(1u);
LABEL_178:
                      __break(1u);
LABEL_179:
                      __break(1u);
LABEL_180:
                      __break(1u);
LABEL_181:
                      __break(1u);
LABEL_182:
                      __break(1u);
LABEL_183:
                      __break(1u);
LABEL_184:
                      __break(1u);
LABEL_185:
                      __break(1u);
LABEL_186:
                      __break(1u);
LABEL_187:
                      __break(1u);
LABEL_188:
                      __break(1u);
LABEL_189:
                      __break(1u);
                      return;
                    }
                    uint64_t v20 = v89;
                    uint64_t v21 = v19;
                  }
                  int16x8_t v98 = v87;
                  char v97 = v86;
                  char v99 = v88;
                  int16x8_t v100 = v89;
                  uint64_t v101 = v18;
                  uint64_t v102 = v20;
                  uint64_t v103 = v21;
                  uint64_t v104 = BYTE4(v19) & 1;
                  swift_retain_n();
                  sub_1B5291FE4((uint64_t)v91);
                  if (v96)
                  {
LABEL_20:
                    swift_release();
                    swift_release();
                    swift_release();
                    if (v6 >= v7) {
                      return;
                    }
LABEL_144:
                    if (!__OFADD__(*v5, 1))
                    {
                      ++*v5;
                      return;
                    }
                    goto LABEL_176;
                  }
                  uint64_t v23 = v92;
                  uint64_t v22 = v93;
                  uint64_t v85 = (uint64_t)(v0 + 18);
                  while (1)
                  {
                    uint64_t v6 = v22;
                    uint64_t v24 = v94 | ((unint64_t)v95 << 32);
                    if ((v24 & 0x100000000) != 0) {
                      break;
                    }
                    if (HIBYTE(v94) <= 0xFu) {
                      uint64_t v25 = HIBYTE(v94) | 0xFE00u;
                    }
                    else {
                      uint64_t v25 = (HIBYTE(v94) - 16) | 0xE0100u;
                    }
                    if (v5[21])
                    {
                      sub_1B51DFF98(v85, (uint64_t)&v86);
                      uint64_t v26 = v88;
                      uint64_t v27 = v89;
                      __swift_project_boxed_opaque_existential_1(&v86, v88);
                      HIDWORD(v28) = v24;
                      LODWORD(v28) = v24;
                      uint64_t v29 = (v28 >> 16) & 0xFF00FF | v24 & 0xFF00;
                      uint64_t v30 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, v25, v26, v27);
                      uint64_t v32 = v31;
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
                      if ((v32 & 0x100) == 0)
                      {
                        if (v32)
                        {
                          sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47948);
                          char v33 = *(void *)(v90 + 16);
                          if (!v33) {
                            goto LABEL_143;
                          }
                          char v34 = __clz(v33);
                          uint64_t v35 = v34 ^ 0x3F;
                          uint64_t v36 = 1 << (v34 ^ 0x3Fu);
                          if (v36 == v33)
                          {
                            uint64_t v37 = 0;
                            uint64_t v36 = *(void *)(v90 + 16);
                            if (v35) {
                              goto LABEL_130;
                            }
                          }
                          else
                          {
                            if (v36 >= v33) {
                              goto LABEL_184;
                            }
                            if (*(_DWORD *)(v90 + 8 * v36 + 32) >= v29)
                            {
                              uint64_t v37 = 0;
                              if (v35) {
                                goto LABEL_130;
                              }
                            }
                            else
                            {
                              uint64_t v79 = v33 + ~v36;
                              if (!v79) {
                                goto LABEL_143;
                              }
                              if ((v79 & 0x8000000000000000) != 0) {
                                goto LABEL_185;
                              }
                              if (v79 == 1)
                              {
                                uint64_t v37 = v33 - 1;
                              }
                              else
                              {
                                if (v79 - 0x4000000000000001 < 0xC000000000000001) {
                                  goto LABEL_186;
                                }
                                uint64_t v80 = __clz(v79 - 1);
                                uint64_t v81 = -v80;
                                uint64_t v36 = 1 << -(char)v80;
                                uint64_t v37 = v33 - v36;
                                if ((v81 & 0x3F) != 0)
                                {
LABEL_130:
                                  do
                                  {
                                    uint64_t v82 = v37 + (v36 >> 1);
                                    if (__OFADD__(v37, v36 >> 1)) {
                                      goto LABEL_156;
                                    }
                                    if (v82 >= v33) {
                                      goto LABEL_157;
                                    }
                                    if (*(_DWORD *)(v90 + 32 + 8 * v82) < v29) {
                                      v37 += v36 >> 1;
                                    }
                                    uint64_t v56 = v36 >= 4;
                                    v36 >>= 1;
                                  }
                                  while (v56);
                                }
                              }
                            }
                          }
                          if (v37 >= v33) {
                            goto LABEL_181;
                          }
                          char v83 = v90 + 32;
                          if (*(_DWORD *)(v90 + 32 + 8 * v37) >= v29) {
                            uint64_t v84 = v37;
                          }
                          else {
                            uint64_t v84 = v37 + 1;
                          }
                          if (v84 == v33) {
                            goto LABEL_143;
                          }
                          if (v84 >= v33) {
                            goto LABEL_189;
                          }
                          if (*(_DWORD *)(v83 + 8 * v84) != v29)
                          {
LABEL_143:
                            sub_1B51E0064((uint64_t)&v86, &qword_1E9D47948);
                            swift_release_n();
                            swift_release();
                            goto LABEL_144;
                          }
                          uint64_t v59 = v83 + 8 * v84;
                          goto LABEL_74;
                        }
                        goto LABEL_75;
                      }
                    }
                    else
                    {
                      HIDWORD(v46) = v94;
                      LODWORD(v46) = v94;
                      LODWORD(v29) = (v46 >> 16) & 0xFF00FF | v94 & 0xFF00;
                    }
                    sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47948);
                    uint64_t v47 = *(void *)(v90 + 16);
                    if (!v47) {
                      goto LABEL_143;
                    }
                    uint64_t v48 = __clz(v47);
                    uint64_t v49 = v48 ^ 0x3F;
                    uint64_t v50 = 1 << (v48 ^ 0x3Fu);
                    if (v50 == v47)
                    {
                      uint64_t v51 = 0;
                      uint64_t v50 = *(void *)(v90 + 16);
                      if (v49) {
                        goto LABEL_78;
                      }
                    }
                    else
                    {
                      if (v50 >= v47) {
                        goto LABEL_178;
                      }
                      if (*(_DWORD *)(v90 + 8 * v50 + 32) >= v29)
                      {
                        uint64_t v51 = 0;
                        if (v49) {
                          goto LABEL_78;
                        }
                      }
                      else
                      {
                        uint64_t v52 = v47 + ~v50;
                        if (!v52) {
                          goto LABEL_143;
                        }
                        if ((v52 & 0x8000000000000000) != 0) {
                          goto LABEL_180;
                        }
                        if (v52 == 1)
                        {
                          uint64_t v51 = v47 - 1;
                        }
                        else
                        {
                          if (v52 - 0x4000000000000001 < 0xC000000000000001) {
                            goto LABEL_183;
                          }
                          uint64_t v61 = __clz(v52 - 1);
                          uint64_t v62 = -v61;
                          uint64_t v50 = 1 << -(char)v61;
                          uint64_t v51 = v47 - v50;
                          if ((v62 & 0x3F) != 0)
                          {
LABEL_78:
                            while (1)
                            {
                              uint64_t v63 = v51 + (v50 >> 1);
                              if (__OFADD__(v51, v50 >> 1)) {
                                break;
                              }
                              if (v63 >= v47) {
                                goto LABEL_154;
                              }
                              if (*(_DWORD *)(v90 + 32 + 8 * v63) < v29) {
                                v51 += v50 >> 1;
                              }
                              uint64_t v56 = v50 >= 4;
                              v50 >>= 1;
                              if (!v56) {
                                goto LABEL_83;
                              }
                            }
LABEL_153:
                            __break(1u);
LABEL_154:
                            __break(1u);
LABEL_155:
                            __break(1u);
LABEL_156:
                            __break(1u);
LABEL_157:
                            __break(1u);
LABEL_158:
                            __break(1u);
LABEL_159:
                            __break(1u);
LABEL_160:
                            __break(1u);
LABEL_161:
                            __break(1u);
LABEL_162:
                            __break(1u);
LABEL_163:
                            __break(1u);
LABEL_164:
                            __break(1u);
LABEL_165:
                            __break(1u);
LABEL_166:
                            __break(1u);
LABEL_167:
                            __break(1u);
LABEL_168:
                            __break(1u);
                            goto LABEL_169;
                          }
                        }
                      }
                    }
LABEL_83:
                    if (v51 >= v47) {
                      goto LABEL_173;
                    }
                    uint64_t v64 = v90 + 32;
                    if (*(_DWORD *)(v90 + 32 + 8 * v51) >= v29) {
                      uint64_t v65 = v51;
                    }
                    else {
                      uint64_t v65 = v51 + 1;
                    }
                    if (v65 == v47) {
                      goto LABEL_143;
                    }
                    if (v65 >= v47) {
                      goto LABEL_188;
                    }
                    if (*(_DWORD *)(v64 + 8 * v65) != v29) {
                      goto LABEL_143;
                    }
                    uint64_t v30 = *(unsigned int *)(v64 + 8 * v65 + 4);
                    sub_1B51E0064((uint64_t)&v86, &qword_1E9D47948);
                    uint64_t v60 = 0;
LABEL_91:
                    uint64_t v67 = v5[7];
                    uint64_t v66 = v5[8];
                    BOOL v3 = __OFADD__(v66, v67);
                    uint64_t v68 = v66 + v67;
                    if (v3) {
                      goto LABEL_158;
                    }
                    if (v68 < v66) {
                      goto LABEL_159;
                    }
                    uint64_t v69 = v5[10];
                    if (v69 < v66) {
                      goto LABEL_160;
                    }
                    if (v69 >= v68) {
                      goto LABEL_161;
                    }
                    if (__OFSUB__(v69, v66)) {
                      goto LABEL_162;
                    }
                    uint64_t v70 = v5[6];
                    *(void *)(v70 + 8 * (v69 - v66)) = v30;
                    uint64_t v71 = v69 + 1;
                    v5[10] = v69 + 1;
                    uint64_t v72 = v5[9];
                    uint64_t v73 = v72 + 1;
                    if (__OFADD__(v72, 1)) {
                      goto LABEL_163;
                    }
                    v5[9] = v73;
                    uint64_t v74 = v71;
                    if (v73 != v23)
                    {
                      while (v71 >= v66 && v74 < v68)
                      {
                        if (__OFSUB__(v74, v66)) {
                          goto LABEL_147;
                        }
                        *(void *)(v70 + 8 * (v74 - v66)) = 0;
                        uint64_t v75 = v73 + 1;
                        if (__OFADD__(v73, 1)) {
                          goto LABEL_148;
                        }
                        ++v74;
                        ++v73;
                        if (v75 == v23)
                        {
                          v5[9] = v23;
                          v5[10] = v74;
                          goto LABEL_104;
                        }
                      }
                      __break(1u);
LABEL_147:
                      __break(1u);
LABEL_148:
                      __break(1u);
                      goto LABEL_149;
                    }
LABEL_104:
                    if (v23 != v6)
                    {
                      if (v74 < v66 || v74 >= v68) {
                        goto LABEL_165;
                      }
                      if (__OFSUB__(v74, v66)) {
                        goto LABEL_166;
                      }
                      *(void *)(v70 + 8 * (v74 - v66)) = v60;
                      uint64_t v76 = v74 + 1;
                      v5[10] = v74 + 1;
                      uint64_t v77 = v23 + 1;
                      if (__OFADD__(v23, 1)) {
                        goto LABEL_167;
                      }
                      v5[9] = v77;
                      if (v77 != v6)
                      {
                        if (v77 >= v6) {
                          goto LABEL_175;
                        }
                        uint64_t v78 = v76;
                        while (v76 >= v66 && v78 < v68)
                        {
                          if (__OFSUB__(v78, v66)) {
                            goto LABEL_152;
                          }
                          *(void *)(v70 + 8 * (v78 - v66)) = 0;
                          ++v78;
                          if (v6 == ++v77)
                          {
                            v5[9] = v6;
                            v5[10] = v78;
                            goto LABEL_117;
                          }
                        }
                        goto LABEL_151;
                      }
                    }
LABEL_117:
                    uint64_t v7 = v5[24];
                    if (v6 < v7)
                    {
                      sub_1B5291FE4((uint64_t)v91);
                      uint64_t v23 = v92;
                      uint64_t v22 = v93;
                      if ((v96 & 1) == 0) {
                        continue;
                      }
                    }
                    goto LABEL_20;
                  }
                  sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47948);
                  char v38 = *(void *)(v90 + 16);
                  if (!v38) {
                    goto LABEL_143;
                  }
                  HIDWORD(v39) = v24;
                  LODWORD(v39) = v24;
                  int v40 = (v39 >> 16) & 0xFF00FF | v24 & 0xFF00;
                  uint64_t v41 = __clz(v38);
                  uint64_t v42 = v41 ^ 0x3F;
                  uint64_t v43 = 1 << (v41 ^ 0x3Fu);
                  if (v43 == v38)
                  {
                    uint64_t v44 = 0;
                    uint64_t v43 = *(void *)(v90 + 16);
                    if (v42) {
                      goto LABEL_61;
                    }
                  }
                  else
                  {
                    if (v43 >= v38) {
                      goto LABEL_174;
                    }
                    if (*(_DWORD *)(v90 + 8 * v43 + 32) >= v40)
                    {
                      uint64_t v44 = 0;
                      if (v42) {
                        goto LABEL_61;
                      }
                    }
                    else
                    {
                      uint64_t v45 = v38 + ~v43;
                      if (!v45) {
                        goto LABEL_143;
                      }
                      if ((v45 & 0x8000000000000000) != 0) {
                        goto LABEL_179;
                      }
                      if (v45 == 1)
                      {
                        uint64_t v44 = v38 - 1;
                      }
                      else
                      {
                        if (v45 - 0x4000000000000001 < 0xC000000000000001) {
                          goto LABEL_182;
                        }
                        uint64_t v53 = __clz(v45 - 1);
                        uint64_t v54 = -v53;
                        uint64_t v43 = 1 << -(char)v53;
                        uint64_t v44 = v38 - v43;
                        if ((v54 & 0x3F) != 0)
                        {
LABEL_61:
                          while (1)
                          {
                            uint64_t v55 = v44 + (v43 >> 1);
                            if (__OFADD__(v44, v43 >> 1)) {
                              break;
                            }
                            if (v55 >= v38) {
                              goto LABEL_150;
                            }
                            if (*(_DWORD *)(v90 + 32 + 8 * v55) < v40) {
                              v44 += v43 >> 1;
                            }
                            uint64_t v56 = v43 >= 4;
                            v43 >>= 1;
                            if (!v56) {
                              goto LABEL_66;
                            }
                          }
LABEL_149:
                          __break(1u);
LABEL_150:
                          __break(1u);
LABEL_151:
                          __break(1u);
LABEL_152:
                          __break(1u);
                          goto LABEL_153;
                        }
                      }
                    }
                  }
LABEL_66:
                  if (v44 >= v38) {
                    goto LABEL_164;
                  }
                  uint64_t v57 = v90 + 32;
                  if (*(_DWORD *)(v90 + 32 + 8 * v44) >= v40) {
                    uint64_t v58 = v44;
                  }
                  else {
                    uint64_t v58 = v44 + 1;
                  }
                  if (v58 == v38) {
                    goto LABEL_143;
                  }
                  if (v58 >= v38) {
                    goto LABEL_187;
                  }
                  if (*(_DWORD *)(v57 + 8 * v58) != v40) {
                    goto LABEL_143;
                  }
                  uint64_t v59 = v57 + 8 * v58;
LABEL_74:
                  uint64_t v30 = *(unsigned int *)(v59 + 4);
                  sub_1B51E0064((uint64_t)&v86, &qword_1E9D47948);
LABEL_75:
                  uint64_t v60 = 0xFFFFFFLL;
                  goto LABEL_91;
                }
              }
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
              goto LABEL_177;
            }
LABEL_171:
            __break(1u);
            goto LABEL_172;
          }
        }
        __break(1u);
        goto LABEL_171;
      }
    }
  }
}

void sub_1B528C478()
{
  void (*v15)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int16 v31;
  __int16 v32;
  unint64_t v33;
  unint64_t v34;
  unsigned int v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  int v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  long long v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91[8];
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  unsigned __int8 v95;
  char v96;
  uint64_t v97;
  long long v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  char v104;
  uint64_t v105;
  long long v106;
  uint64_t v107;

  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  BOOL v3 = __OFADD__(v2, v1);
  uint64_t v4 = v2 + v1;
  if (v3)
  {
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
    goto LABEL_172;
  }
  double v5 = v0;
  uint64_t v6 = v0[9];
  if (v6 >= v4) {
    return;
  }
  uint64_t v7 = v0[24];
  if (v6 == v7)
  {
    sub_1B5290928();
    uint64_t v6 = v0[9];
    uint64_t v7 = v0[24];
    if (v6 == v7) {
      return;
    }
  }
  if (v6 >= v7) {
    return;
  }
  uint64_t v9 = v0[3];
  uint64_t v8 = v0[4];
  BOOL v3 = __OFADD__(v8, v9);
  uint64_t v10 = v8 + v9;
  if (v3) {
    goto LABEL_171;
  }
  BOOL v3 = __OFSUB__(v6, v8);
  uint64_t v11 = v6 - v8;
  if (v3)
  {
LABEL_172:
    __break(1u);
    goto LABEL_173;
  }
  uint64_t v12 = v10 - v6;
  if (__OFSUB__(v10, v6))
  {
LABEL_173:
    __break(1u);
    goto LABEL_174;
  }
  BOOL v3 = __OFADD__(v11, v12);
  uint64_t v13 = v11 + v12;
  if (v3)
  {
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
    goto LABEL_179;
  }
  if (v10 < v6) {
    goto LABEL_175;
  }
  uint64_t v14 = v13 - v11;
  if (v13 < v11) {
    goto LABEL_175;
  }
  uint64_t v15 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[11];
  uint64_t v16 = v0[2];
  uint64_t v17 = v16 + 2 * v11;
  if (!v16) {
    uint64_t v17 = 0;
  }
  uint64_t v86 = v0[1];
  *(void *)&uint64_t v87 = v17;
  *((void *)&v87 + 1) = v14;
  uint64_t v88 = v6;
  swift_retain();
  swift_retain();
  v15(&v105, &v86);
  swift_release();
  swift_release();
  uint64_t v18 = v107;
  uint64_t v86 = v105;
  uint64_t v87 = v106;
  uint64_t v88 = v107;
  uint64_t v89 = v107;
  sub_1B5274CD8();
  if ((v19 & 0x100000000) != 0)
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    if (v89 < v18) {
      goto LABEL_180;
    }
    uint64_t v20 = v89;
    uint64_t v21 = v19;
  }
  int16x8_t v98 = v87;
  char v97 = v86;
  char v99 = v88;
  int16x8_t v100 = v89;
  uint64_t v101 = v18;
  uint64_t v102 = v20;
  uint64_t v103 = v21;
  uint64_t v104 = BYTE4(v19) & 1;
  swift_retain_n();
  sub_1B5291FE4((uint64_t)v91);
  if (v96)
  {
LABEL_20:
    swift_release();
    swift_release();
    swift_release();
    if (v6 < v7) {
      goto LABEL_146;
    }
    return;
  }
  uint64_t v23 = v92;
  uint64_t v22 = v93;
  uint64_t v85 = (uint64_t)(v0 + 18);
  while (1)
  {
    uint64_t v6 = v22;
    uint64_t v24 = v94 | ((unint64_t)v95 << 32);
    if ((v24 & 0x100000000) != 0)
    {
      sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47C68);
      char v33 = *(void *)(v90 + 16);
      if (!v33) {
        goto LABEL_145;
      }
      HIDWORD(v34) = v24;
      LODWORD(v34) = v24;
      uint64_t v35 = (v34 >> 16) & 0xFF00FF | v24 & 0xFF00;
      uint64_t v36 = __clz(v33);
      uint64_t v37 = v36 ^ 0x3F;
      char v38 = 1 << (v36 ^ 0x3Fu);
      if (v38 == v33)
      {
        uint64_t v39 = 0;
        char v38 = *(void *)(v90 + 16);
        if (v37) {
          goto LABEL_63;
        }
      }
      else
      {
        if (v38 >= v33) {
          goto LABEL_177;
        }
        if (*(_DWORD *)(v90 + 8 * v38 + 32) >= v35)
        {
          uint64_t v39 = 0;
          if (v37) {
            goto LABEL_63;
          }
        }
        else
        {
          int v40 = v33 + ~v38;
          if (!v40) {
            goto LABEL_145;
          }
          if ((v40 & 0x8000000000000000) != 0) {
            goto LABEL_182;
          }
          if (v40 == 1)
          {
            uint64_t v39 = v33 - 1;
          }
          else
          {
            if (v40 - 0x4000000000000001 < 0xC000000000000001) {
              goto LABEL_185;
            }
            uint64_t v53 = __clz(v40 - 1);
            uint64_t v54 = -v53;
            char v38 = 1 << -(char)v53;
            uint64_t v39 = v33 - v38;
            if ((v54 & 0x3F) != 0)
            {
LABEL_63:
              while (1)
              {
                uint64_t v55 = v39 + (v38 >> 1);
                if (__OFADD__(v39, v38 >> 1)) {
                  break;
                }
                if (v55 >= v33) {
                  goto LABEL_152;
                }
                if (*(_DWORD *)(v90 + 32 + 8 * v55) < v35) {
                  v39 += v38 >> 1;
                }
                uint64_t v56 = v38 >= 4;
                v38 >>= 1;
                if (!v56) {
                  goto LABEL_68;
                }
              }
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
              goto LABEL_155;
            }
          }
        }
      }
LABEL_68:
      if (v39 >= v33) {
        goto LABEL_167;
      }
      uint64_t v57 = v90 + 32;
      if (*(_DWORD *)(v90 + 32 + 8 * v39) >= v35) {
        uint64_t v58 = v39;
      }
      else {
        uint64_t v58 = v39 + 1;
      }
      if (v58 == v33) {
        goto LABEL_145;
      }
      if (v58 >= v33) {
        goto LABEL_190;
      }
      if (*(_DWORD *)(v57 + 8 * v58) != v35) {
        goto LABEL_145;
      }
      uint64_t v59 = v57 + 8 * v58;
      goto LABEL_76;
    }
    if (HIBYTE(v94) <= 0xFu) {
      uint64_t v25 = HIBYTE(v94) | 0xFE00u;
    }
    else {
      uint64_t v25 = (HIBYTE(v94) - 16) | 0xE0100u;
    }
    if (v5[21])
    {
      sub_1B51DFF98(v85, (uint64_t)&v86);
      uint64_t v26 = v88;
      uint64_t v27 = v89;
      __swift_project_boxed_opaque_existential_1(&v86, v88);
      HIDWORD(v28) = v24;
      LODWORD(v28) = v24;
      uint64_t v29 = (v28 >> 16) & 0xFF00FF | v24 & 0xFF00;
      uint64_t v30 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, v25, v26, v27);
      uint64_t v32 = v31;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
      if ((v32 & 0x100) == 0)
      {
        if ((v32 & 1) == 0)
        {
          if (HIDWORD(v30)) {
            goto LABEL_157;
          }
          goto LABEL_77;
        }
        sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47C68);
        uint64_t v48 = *(void *)(v90 + 16);
        if (!v48) {
          goto LABEL_145;
        }
        uint64_t v49 = __clz(v48);
        uint64_t v50 = v49 ^ 0x3F;
        uint64_t v51 = 1 << (v49 ^ 0x3Fu);
        if (v51 == v48)
        {
          uint64_t v52 = 0;
          uint64_t v51 = *(void *)(v90 + 16);
          if (v50) {
            goto LABEL_132;
          }
        }
        else
        {
          if (v51 >= v48) {
            goto LABEL_187;
          }
          if (*(_DWORD *)(v90 + 8 * v51 + 32) >= v29)
          {
            uint64_t v52 = 0;
            if (v50) {
              goto LABEL_132;
            }
          }
          else
          {
            uint64_t v79 = v48 + ~v51;
            if (!v79) {
              goto LABEL_145;
            }
            if ((v79 & 0x8000000000000000) != 0) {
              goto LABEL_188;
            }
            if (v79 == 1)
            {
              uint64_t v52 = v48 - 1;
            }
            else
            {
              if (v79 - 0x4000000000000001 < 0xC000000000000001) {
                goto LABEL_189;
              }
              uint64_t v80 = __clz(v79 - 1);
              uint64_t v81 = -v80;
              uint64_t v51 = 1 << -(char)v80;
              uint64_t v52 = v48 - v51;
              if ((v81 & 0x3F) != 0)
              {
LABEL_132:
                do
                {
                  uint64_t v82 = v52 + (v51 >> 1);
                  if (__OFADD__(v52, v51 >> 1)) {
                    goto LABEL_159;
                  }
                  if (v82 >= v48) {
                    goto LABEL_160;
                  }
                  if (*(_DWORD *)(v90 + 32 + 8 * v82) < v29) {
                    v52 += v51 >> 1;
                  }
                  uint64_t v56 = v51 >= 4;
                  v51 >>= 1;
                }
                while (v56);
              }
            }
          }
        }
        if (v52 >= v48) {
          goto LABEL_184;
        }
        char v83 = v90 + 32;
        if (*(_DWORD *)(v90 + 32 + 8 * v52) >= v29) {
          uint64_t v84 = v52;
        }
        else {
          uint64_t v84 = v52 + 1;
        }
        if (v84 == v48) {
          goto LABEL_145;
        }
        if (v84 >= v48) {
          goto LABEL_192;
        }
        if (*(_DWORD *)(v83 + 8 * v84) != v29)
        {
LABEL_145:
          sub_1B51E0064((uint64_t)&v86, &qword_1E9D47C68);
          swift_release_n();
          swift_release();
          goto LABEL_146;
        }
        uint64_t v59 = v83 + 8 * v84;
LABEL_76:
        LODWORD(v30) = *(_DWORD *)(v59 + 4);
        sub_1B51E0064((uint64_t)&v86, &qword_1E9D47C68);
LABEL_77:
        uint64_t v60 = 0xFFFFFF;
        goto LABEL_93;
      }
    }
    else
    {
      HIDWORD(v41) = v94;
      LODWORD(v41) = v94;
      LODWORD(v29) = (v41 >> 16) & 0xFF00FF | v94 & 0xFF00;
    }
    sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47C68);
    uint64_t v42 = *(void *)(v90 + 16);
    if (!v42) {
      goto LABEL_145;
    }
    uint64_t v43 = __clz(v42);
    uint64_t v44 = v43 ^ 0x3F;
    uint64_t v45 = 1 << (v43 ^ 0x3Fu);
    if (v45 == v42)
    {
      uint64_t v46 = 0;
      uint64_t v45 = *(void *)(v90 + 16);
      if (v44) {
        break;
      }
      goto LABEL_85;
    }
    if (v45 >= v42) {
      goto LABEL_181;
    }
    if (*(_DWORD *)(v90 + 8 * v45 + 32) >= v29)
    {
      uint64_t v46 = 0;
      if (v44) {
        break;
      }
      goto LABEL_85;
    }
    uint64_t v47 = v42 + ~v45;
    if (!v47) {
      goto LABEL_145;
    }
    if ((v47 & 0x8000000000000000) != 0) {
      goto LABEL_183;
    }
    if (v47 == 1)
    {
      uint64_t v46 = v42 - 1;
      goto LABEL_85;
    }
    if (v47 - 0x4000000000000001 < 0xC000000000000001) {
      goto LABEL_186;
    }
    uint64_t v61 = __clz(v47 - 1);
    uint64_t v62 = -v61;
    uint64_t v45 = 1 << -(char)v61;
    uint64_t v46 = v42 - v45;
    if ((v62 & 0x3F) != 0) {
      break;
    }
LABEL_85:
    if (v46 >= v42) {
      goto LABEL_176;
    }
    uint64_t v64 = v90 + 32;
    if (*(_DWORD *)(v90 + 32 + 8 * v46) >= v29) {
      uint64_t v65 = v46;
    }
    else {
      uint64_t v65 = v46 + 1;
    }
    if (v65 == v42) {
      goto LABEL_145;
    }
    if (v65 >= v42) {
      goto LABEL_191;
    }
    if (*(_DWORD *)(v64 + 8 * v65) != v29) {
      goto LABEL_145;
    }
    LODWORD(v30) = *(_DWORD *)(v64 + 8 * v65 + 4);
    sub_1B51E0064((uint64_t)&v86, &qword_1E9D47C68);
    uint64_t v60 = 0;
LABEL_93:
    uint64_t v67 = v5[7];
    uint64_t v66 = v5[8];
    BOOL v3 = __OFADD__(v66, v67);
    uint64_t v68 = v66 + v67;
    if (v3) {
      goto LABEL_161;
    }
    if (v68 < v66) {
      goto LABEL_162;
    }
    uint64_t v69 = v5[10];
    if (v69 < v66) {
      goto LABEL_163;
    }
    if (v69 >= v68) {
      goto LABEL_164;
    }
    if (__OFSUB__(v69, v66)) {
      goto LABEL_165;
    }
    uint64_t v70 = v5[6];
    *(_DWORD *)(v70 + 4 * (v69 - v66)) = v30;
    uint64_t v71 = v69 + 1;
    v5[10] = v69 + 1;
    uint64_t v72 = v5[9];
    uint64_t v73 = v72 + 1;
    if (__OFADD__(v72, 1)) {
      goto LABEL_166;
    }
    v5[9] = v73;
    uint64_t v74 = v71;
    if (v73 != v23)
    {
      while (v71 >= v66 && v74 < v68)
      {
        if (__OFSUB__(v74, v66)) {
          goto LABEL_149;
        }
        *(_DWORD *)(v70 + 4 * (v74 - v66)) = 0;
        uint64_t v75 = v73 + 1;
        if (__OFADD__(v73, 1)) {
          goto LABEL_150;
        }
        ++v74;
        ++v73;
        if (v75 == v23)
        {
          v5[9] = v23;
          v5[10] = v74;
          goto LABEL_106;
        }
      }
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
LABEL_106:
    if (v23 != v6)
    {
      if (v74 < v66 || v74 >= v68) {
        goto LABEL_168;
      }
      if (__OFSUB__(v74, v66)) {
        goto LABEL_169;
      }
      *(_DWORD *)(v70 + 4 * (v74 - v66)) = v60;
      uint64_t v76 = v74 + 1;
      v5[10] = v74 + 1;
      uint64_t v77 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_170;
      }
      v5[9] = v77;
      if (v77 != v6)
      {
        if (v77 >= v6) {
          goto LABEL_178;
        }
        uint64_t v78 = v76;
        while (v76 >= v66 && v78 < v68)
        {
          if (__OFSUB__(v78, v66)) {
            goto LABEL_154;
          }
          *(_DWORD *)(v70 + 4 * (v78 - v66)) = 0;
          ++v78;
          if (v6 == ++v77)
          {
            v5[9] = v6;
            v5[10] = v78;
            goto LABEL_119;
          }
        }
        goto LABEL_153;
      }
    }
LABEL_119:
    uint64_t v7 = v5[24];
    if (v6 < v7)
    {
      sub_1B5291FE4((uint64_t)v91);
      uint64_t v23 = v92;
      uint64_t v22 = v93;
      if ((v96 & 1) == 0) {
        continue;
      }
    }
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v63 = v46 + (v45 >> 1);
    if (__OFADD__(v46, v45 >> 1)) {
      break;
    }
    if (v63 >= v42) {
      goto LABEL_156;
    }
    if (*(_DWORD *)(v90 + 32 + 8 * v63) < v29) {
      v46 += v45 >> 1;
    }
    uint64_t v56 = v45 >= 4;
    v45 >>= 1;
    if (!v56) {
      goto LABEL_85;
    }
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  swift_release_n();
  swift_release();
LABEL_146:
  if (!__OFADD__(*v5, 1))
  {
    ++*v5;
    return;
  }
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
}

void sub_1B528CD14()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int16 v33;
  __int16 v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int v55;
  int v56;
  unint64_t v57;
  BOOL v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  __int16 v62;
  int v63;
  int v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  int v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void v89[3];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94[8];
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  unsigned __int8 v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  BOOL v3 = __OFADD__(v2, v1);
  uint64_t v4 = v2 + v1;
  if (v3) {
    goto LABEL_155;
  }
  double v5 = v0;
  uint64_t v6 = v0[9];
  if (v6 < v4)
  {
    uint64_t v7 = v0[24];
    if (v6 != v7 || (sub_1B5290540(), v6 = v0[9], uint64_t v7 = v0[24], v6 != v7))
    {
      if (v6 < v7)
      {
        uint64_t v8 = v0[3];
        uint64_t v9 = v0[4];
        uint64_t v10 = v9 + v8;
        if (__OFADD__(v9, v8)) {
          goto LABEL_165;
        }
        if (v10 < v6 || v10 < v9)
        {
LABEL_166:
          __break(1u);
        }
        else if (v6 >= v9)
        {
          uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[11];
          uint64_t v13 = v0[1];
          uint64_t v12 = v0[2];
          v89[0] = v6;
          v89[1] = v9 + v8;
          v89[2] = v13;
          uint64_t v90 = v12;
          uint64_t v91 = v8;
          char v92 = v9;
          swift_retain();
          swift_retain();
          v11(&v111, v89);
          swift_release();
          swift_release();
          uint64_t v14 = v111;
          uint64_t v15 = v112;
          uint64_t v16 = v113;
          uint64_t v17 = v114;
          uint64_t v18 = v115;
          uint64_t v19 = v116;
          uint64_t v117 = v111;
          double v118 = v112;
          char v119 = v113;
          uint64_t v120 = v114;
          uint64_t v121 = v115;
          uint64_t v122 = v116;
          if (v111 == v112)
          {
            uint64_t v20 = 0;
            uint64_t v21 = 0;
            uint64_t v22 = 0;
            uint64_t v23 = v111;
          }
          else
          {
            uint64_t v21 = v111 + 1;
            if (__OFADD__(v111, 1))
            {
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
              return;
            }
            uint64_t v87 = v113;
            if (v21 < v111) {
              goto LABEL_175;
            }
            uint64_t v22 = sub_1B5294084(v111);
            uint64_t v20 = v14;
            uint64_t v23 = v14 + 1;
            uint64_t v16 = v87;
          }
          int16x8_t v100 = v14;
          uint64_t v101 = v15;
          uint64_t v102 = v16;
          uint64_t v103 = v17;
          uint64_t v104 = v18;
          uint64_t v105 = v19;
          uint64_t v106 = v23;
          uint64_t v107 = v20;
          uint64_t v108 = v21;
          uint64_t v109 = v22;
          uint64_t v110 = v14 == v15;
          swift_retain_n();
          sub_1B5292150((uint64_t)v94);
          if (v99)
          {
LABEL_17:
            swift_release();
            swift_release();
            swift_release();
            if (v6 >= v7) {
              return;
            }
LABEL_144:
            if (!__OFADD__(*v5, 1))
            {
              ++*v5;
              return;
            }
            goto LABEL_172;
          }
          uint64_t v25 = v95;
          uint64_t v24 = v96;
          uint64_t v88 = (uint64_t)(v0 + 18);
          while (1)
          {
            uint64_t v6 = v24;
            uint64_t v26 = v97 | ((unint64_t)v98 << 32);
            if ((v26 & 0x100000000) != 0) {
              break;
            }
            if (HIBYTE(v97) <= 0xFu) {
              uint64_t v27 = HIBYTE(v97) | 0xFE00u;
            }
            else {
              uint64_t v27 = (HIBYTE(v97) - 16) | 0xE0100u;
            }
            if (v5[21])
            {
              sub_1B51DFF98(v88, (uint64_t)v89);
              uint64_t v28 = v90;
              uint64_t v29 = v91;
              __swift_project_boxed_opaque_existential_1(v89, v90);
              HIDWORD(v30) = v26;
              LODWORD(v30) = v26;
              int v31 = (v30 >> 16) & 0xFF00FF | v26 & 0xFF00;
              uint64_t v32 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v29 + 16))(v31, v27, v28, v29);
              char v34 = v33;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
              if ((v34 & 0x100) == 0)
              {
                if (v34)
                {
                  sub_1B5201384((uint64_t)v5, (uint64_t)v89, &qword_1E9D47D88);
                  uint64_t v35 = *(void *)(v93 + 16);
                  if (!v35) {
                    goto LABEL_142;
                  }
                  uint64_t v36 = __clz(v35);
                  uint64_t v37 = v36 ^ 0x3F;
                  char v38 = 1 << (v36 ^ 0x3Fu);
                  if (v38 == v35)
                  {
                    uint64_t v39 = 0;
                    char v38 = *(void *)(v93 + 16);
                    if (v37) {
                      goto LABEL_129;
                    }
                  }
                  else
                  {
                    if (v38 >= v35) {
                      goto LABEL_183;
                    }
                    if (*(_DWORD *)(v93 + 8 * v38 + 32) >= v31)
                    {
                      uint64_t v39 = 0;
                      if (v37) {
                        goto LABEL_129;
                      }
                    }
                    else
                    {
                      uint64_t v81 = v35 + ~v38;
                      if (!v81) {
                        goto LABEL_142;
                      }
                      if ((v81 & 0x8000000000000000) != 0) {
                        goto LABEL_184;
                      }
                      if (v81 == 1)
                      {
                        uint64_t v39 = v35 - 1;
                      }
                      else
                      {
                        if (v81 - 0x4000000000000001 < 0xC000000000000001) {
                          goto LABEL_185;
                        }
                        uint64_t v82 = __clz(v81 - 1);
                        char v83 = -v82;
                        char v38 = 1 << -(char)v82;
                        uint64_t v39 = v35 - v38;
                        if ((v83 & 0x3F) != 0)
                        {
LABEL_129:
                          do
                          {
                            uint64_t v84 = v39 + (v38 >> 1);
                            if (__OFADD__(v39, v38 >> 1)) {
                              goto LABEL_156;
                            }
                            if (v84 >= v35) {
                              goto LABEL_157;
                            }
                            if (*(_DWORD *)(v93 + 32 + 8 * v84) < v31) {
                              v39 += v38 >> 1;
                            }
                            uint64_t v58 = v38 >= 4;
                            v38 >>= 1;
                          }
                          while (v58);
                        }
                      }
                    }
                  }
                  if (v39 >= v35) {
                    goto LABEL_180;
                  }
                  uint64_t v85 = v93 + 32;
                  if (*(_DWORD *)(v93 + 32 + 8 * v39) >= v31) {
                    uint64_t v86 = v39;
                  }
                  else {
                    uint64_t v86 = v39 + 1;
                  }
                  if (v86 == v35) {
                    goto LABEL_142;
                  }
                  if (v86 >= v35) {
                    goto LABEL_187;
                  }
                  if (*(_DWORD *)(v85 + 8 * v86) != v31)
                  {
LABEL_142:
                    sub_1B51E0064((uint64_t)v89, &qword_1E9D47D88);
                    swift_release_n();
                    swift_release();
                    goto LABEL_144;
                  }
                  uint64_t v61 = v85 + 8 * v86;
                  goto LABEL_71;
                }
                goto LABEL_72;
              }
            }
            else
            {
              HIDWORD(v48) = v97;
              LODWORD(v48) = v97;
              LODWORD(v31) = (v48 >> 16) & 0xFF00FF | v97 & 0xFF00;
            }
            sub_1B5201384((uint64_t)v5, (uint64_t)v89, &qword_1E9D47D88);
            uint64_t v49 = *(void *)(v93 + 16);
            if (!v49) {
              goto LABEL_142;
            }
            uint64_t v50 = __clz(v49);
            uint64_t v51 = v50 ^ 0x3F;
            uint64_t v52 = 1 << (v50 ^ 0x3Fu);
            if (v52 == v49)
            {
              uint64_t v53 = 0;
              uint64_t v52 = *(void *)(v93 + 16);
              if (v51) {
                goto LABEL_76;
              }
            }
            else
            {
              if (v52 >= v49) {
                goto LABEL_177;
              }
              if (*(_DWORD *)(v93 + 8 * v52 + 32) >= v31)
              {
                uint64_t v53 = 0;
                if (v51) {
                  goto LABEL_76;
                }
              }
              else
              {
                uint64_t v54 = v49 + ~v52;
                if (!v54) {
                  goto LABEL_142;
                }
                if ((v54 & 0x8000000000000000) != 0) {
                  goto LABEL_179;
                }
                if (v54 == 1)
                {
                  uint64_t v53 = v49 - 1;
                }
                else
                {
                  if (v54 - 0x4000000000000001 < 0xC000000000000001) {
                    goto LABEL_182;
                  }
                  uint64_t v63 = __clz(v54 - 1);
                  uint64_t v64 = -v63;
                  uint64_t v52 = 1 << -(char)v63;
                  uint64_t v53 = v49 - v52;
                  if ((v64 & 0x3F) != 0)
                  {
LABEL_76:
                    while (1)
                    {
                      uint64_t v65 = v53 + (v52 >> 1);
                      if (__OFADD__(v53, v52 >> 1)) {
                        break;
                      }
                      if (v65 >= v49) {
                        goto LABEL_154;
                      }
                      if (*(_DWORD *)(v93 + 32 + 8 * v65) < v31) {
                        v53 += v52 >> 1;
                      }
                      uint64_t v58 = v52 >= 4;
                      v52 >>= 1;
                      if (!v58) {
                        goto LABEL_81;
                      }
                    }
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
LABEL_160:
                    __break(1u);
LABEL_161:
                    __break(1u);
LABEL_162:
                    __break(1u);
LABEL_163:
                    __break(1u);
LABEL_164:
                    __break(1u);
LABEL_165:
                    __break(1u);
                    goto LABEL_166;
                  }
                }
              }
            }
LABEL_81:
            if (v53 >= v49) {
              goto LABEL_171;
            }
            uint64_t v66 = v93 + 32;
            if (*(_DWORD *)(v93 + 32 + 8 * v53) >= v31) {
              uint64_t v67 = v53;
            }
            else {
              uint64_t v67 = v53 + 1;
            }
            if (v67 == v49) {
              goto LABEL_142;
            }
            if (v67 >= v49) {
              goto LABEL_188;
            }
            if (*(_DWORD *)(v66 + 8 * v67) != v31) {
              goto LABEL_142;
            }
            LODWORD(v32) = *(_DWORD *)(v66 + 8 * v67 + 4);
            sub_1B51E0064((uint64_t)v89, &qword_1E9D47D88);
            if (WORD1(v32))
            {
LABEL_143:
              swift_release_n();
              swift_release();
              goto LABEL_144;
            }
            uint64_t v62 = 0;
LABEL_90:
            uint64_t v69 = v5[7];
            uint64_t v68 = v5[8];
            BOOL v3 = __OFADD__(v68, v69);
            uint64_t v70 = v68 + v69;
            if (v3) {
              goto LABEL_158;
            }
            if (v70 < v68) {
              goto LABEL_159;
            }
            uint64_t v71 = v5[10];
            if (v71 < v68) {
              goto LABEL_160;
            }
            if (v71 >= v70) {
              goto LABEL_161;
            }
            if (__OFSUB__(v71, v68)) {
              goto LABEL_162;
            }
            uint64_t v72 = v5[6];
            *(_WORD *)(v72 + 2 * (v71 - v68)) = v32;
            uint64_t v73 = v71 + 1;
            v5[10] = v71 + 1;
            uint64_t v74 = v5[9];
            uint64_t v75 = v74 + 1;
            if (__OFADD__(v74, 1)) {
              goto LABEL_163;
            }
            v5[9] = v75;
            uint64_t v76 = v73;
            if (v75 != v25)
            {
              while (v73 >= v68 && v76 < v70)
              {
                if (__OFSUB__(v76, v68)) {
                  goto LABEL_147;
                }
                *(_WORD *)(v72 + 2 * (v76 - v68)) = 0;
                uint64_t v77 = v75 + 1;
                if (__OFADD__(v75, 1)) {
                  goto LABEL_148;
                }
                ++v76;
                ++v75;
                if (v77 == v25)
                {
                  v5[9] = v25;
                  v5[10] = v76;
                  goto LABEL_103;
                }
              }
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
              goto LABEL_149;
            }
LABEL_103:
            if (v25 != v6)
            {
              if (v76 < v68 || v76 >= v70) {
                goto LABEL_168;
              }
              if (__OFSUB__(v76, v68)) {
                goto LABEL_169;
              }
              *(_WORD *)(v72 + 2 * (v76 - v68)) = v62;
              uint64_t v78 = v76 + 1;
              v5[10] = v76 + 1;
              uint64_t v79 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                goto LABEL_170;
              }
              v5[9] = v79;
              if (v79 != v6)
              {
                if (v79 >= v6) {
                  goto LABEL_176;
                }
                uint64_t v80 = v78;
                while (v78 >= v68 && v80 < v70)
                {
                  if (__OFSUB__(v80, v68)) {
                    goto LABEL_152;
                  }
                  *(_WORD *)(v72 + 2 * (v80 - v68)) = 0;
                  ++v80;
                  if (v6 == ++v79)
                  {
                    v5[9] = v6;
                    v5[10] = v80;
                    goto LABEL_116;
                  }
                }
                goto LABEL_151;
              }
            }
LABEL_116:
            uint64_t v7 = v5[24];
            if (v6 < v7)
            {
              sub_1B5292150((uint64_t)v94);
              uint64_t v25 = v95;
              uint64_t v24 = v96;
              if ((v99 & 1) == 0) {
                continue;
              }
            }
            goto LABEL_17;
          }
          sub_1B5201384((uint64_t)v5, (uint64_t)v89, &qword_1E9D47D88);
          int v40 = *(void *)(v93 + 16);
          if (!v40) {
            goto LABEL_142;
          }
          HIDWORD(v41) = v26;
          LODWORD(v41) = v26;
          uint64_t v42 = (v41 >> 16) & 0xFF00FF | v26 & 0xFF00;
          uint64_t v43 = __clz(v40);
          uint64_t v44 = v43 ^ 0x3F;
          uint64_t v45 = 1 << (v43 ^ 0x3Fu);
          if (v45 == v40)
          {
            uint64_t v46 = 0;
            uint64_t v45 = *(void *)(v93 + 16);
            if (v44) {
              goto LABEL_58;
            }
          }
          else
          {
            if (v45 >= v40) {
              goto LABEL_173;
            }
            if (*(_DWORD *)(v93 + 8 * v45 + 32) >= v42)
            {
              uint64_t v46 = 0;
              if (v44) {
                goto LABEL_58;
              }
            }
            else
            {
              uint64_t v47 = v40 + ~v45;
              if (!v47) {
                goto LABEL_142;
              }
              if ((v47 & 0x8000000000000000) != 0) {
                goto LABEL_178;
              }
              if (v47 == 1)
              {
                uint64_t v46 = v40 - 1;
              }
              else
              {
                if (v47 - 0x4000000000000001 < 0xC000000000000001) {
                  goto LABEL_181;
                }
                uint64_t v55 = __clz(v47 - 1);
                uint64_t v56 = -v55;
                uint64_t v45 = 1 << -(char)v55;
                uint64_t v46 = v40 - v45;
                if ((v56 & 0x3F) != 0)
                {
LABEL_58:
                  while (1)
                  {
                    uint64_t v57 = v46 + (v45 >> 1);
                    if (__OFADD__(v46, v45 >> 1)) {
                      break;
                    }
                    if (v57 >= v40) {
                      goto LABEL_150;
                    }
                    if (*(_DWORD *)(v93 + 32 + 8 * v57) < v42) {
                      v46 += v45 >> 1;
                    }
                    uint64_t v58 = v45 >= 4;
                    v45 >>= 1;
                    if (!v58) {
                      goto LABEL_63;
                    }
                  }
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
                  goto LABEL_153;
                }
              }
            }
          }
LABEL_63:
          if (v46 >= v40) {
            goto LABEL_164;
          }
          uint64_t v59 = v93 + 32;
          if (*(_DWORD *)(v93 + 32 + 8 * v46) >= v42) {
            uint64_t v60 = v46;
          }
          else {
            uint64_t v60 = v46 + 1;
          }
          if (v60 == v40) {
            goto LABEL_142;
          }
          if (v60 >= v40) {
            goto LABEL_186;
          }
          if (*(_DWORD *)(v59 + 8 * v60) != v42) {
            goto LABEL_142;
          }
          uint64_t v61 = v59 + 8 * v60;
LABEL_71:
          uint64_t v32 = *(unsigned int *)(v61 + 4);
          sub_1B51E0064((uint64_t)v89, &qword_1E9D47D88);
LABEL_72:
          if (v32 >> 16) {
            goto LABEL_143;
          }
          uint64_t v62 = -1;
          goto LABEL_90;
        }
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
        goto LABEL_174;
      }
    }
  }
}

void sub_1B528D5AC()
{
  void (*v15)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int16 v31;
  __int16 v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unsigned int v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  int v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __int16 v60;
  int v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  long long v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91[8];
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  unsigned __int8 v95;
  char v96;
  uint64_t v97;
  long long v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  char v104;
  uint64_t v105;
  long long v106;
  uint64_t v107;

  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  BOOL v3 = __OFADD__(v2, v1);
  uint64_t v4 = v2 + v1;
  if (v3) {
    goto LABEL_158;
  }
  double v5 = v0;
  uint64_t v6 = v0[9];
  if (v6 < v4)
  {
    uint64_t v7 = v0[24];
    if (v6 != v7 || (sub_1B5290928(), v6 = v0[9], uint64_t v7 = v0[24], v6 != v7))
    {
      if (v6 < v7)
      {
        uint64_t v9 = v0[3];
        uint64_t v8 = v0[4];
        BOOL v3 = __OFADD__(v8, v9);
        uint64_t v10 = v8 + v9;
        if (v3) {
          goto LABEL_168;
        }
        BOOL v3 = __OFSUB__(v6, v8);
        uint64_t v11 = v6 - v8;
        if (v3)
        {
LABEL_169:
          __break(1u);
        }
        else
        {
          uint64_t v12 = v10 - v6;
          if (!__OFSUB__(v10, v6))
          {
            BOOL v3 = __OFADD__(v11, v12);
            uint64_t v13 = v11 + v12;
            if (!v3)
            {
              if (v10 >= v6)
              {
                uint64_t v14 = v13 - v11;
                if (v13 >= v11)
                {
                  uint64_t v15 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[11];
                  uint64_t v16 = v0[2];
                  uint64_t v17 = v16 + 2 * v11;
                  if (!v16) {
                    uint64_t v17 = 0;
                  }
                  uint64_t v86 = v0[1];
                  *(void *)&uint64_t v87 = v17;
                  *((void *)&v87 + 1) = v14;
                  uint64_t v88 = v6;
                  swift_retain();
                  swift_retain();
                  v15(&v105, &v86);
                  swift_release();
                  swift_release();
                  uint64_t v18 = v107;
                  uint64_t v86 = v105;
                  uint64_t v87 = v106;
                  uint64_t v88 = v107;
                  uint64_t v89 = v107;
                  sub_1B5274CD8();
                  if ((v19 & 0x100000000) != 0)
                  {
                    uint64_t v18 = 0;
                    uint64_t v20 = 0;
                    uint64_t v21 = 0;
                  }
                  else
                  {
                    if (v89 < v18) {
                      goto LABEL_179;
                    }
                    uint64_t v20 = v89;
                    uint64_t v21 = v19;
                  }
                  int16x8_t v98 = v87;
                  char v97 = v86;
                  char v99 = v88;
                  int16x8_t v100 = v89;
                  uint64_t v101 = v18;
                  uint64_t v102 = v20;
                  uint64_t v103 = v21;
                  uint64_t v104 = BYTE4(v19) & 1;
                  swift_retain_n();
                  sub_1B5291FE4((uint64_t)v91);
                  if (v96)
                  {
LABEL_20:
                    swift_release();
                    swift_release();
                    swift_release();
                    if (v6 >= v7) {
                      return;
                    }
LABEL_147:
                    if (!__OFADD__(*v5, 1))
                    {
                      ++*v5;
                      return;
                    }
                    goto LABEL_177;
                  }
                  uint64_t v23 = v92;
                  uint64_t v22 = v93;
                  uint64_t v85 = (uint64_t)(v0 + 18);
                  while (1)
                  {
                    uint64_t v6 = v22;
                    uint64_t v24 = v94 | ((unint64_t)v95 << 32);
                    if ((v24 & 0x100000000) != 0) {
                      break;
                    }
                    if (HIBYTE(v94) <= 0xFu) {
                      uint64_t v25 = HIBYTE(v94) | 0xFE00u;
                    }
                    else {
                      uint64_t v25 = (HIBYTE(v94) - 16) | 0xE0100u;
                    }
                    if (v5[21])
                    {
                      sub_1B51DFF98(v85, (uint64_t)&v86);
                      uint64_t v26 = v88;
                      uint64_t v27 = v89;
                      __swift_project_boxed_opaque_existential_1(&v86, v88);
                      HIDWORD(v28) = v24;
                      LODWORD(v28) = v24;
                      uint64_t v29 = (v28 >> 16) & 0xFF00FF | v24 & 0xFF00;
                      uint64_t v30 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, v25, v26, v27);
                      uint64_t v32 = v31;
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
                      if ((v32 & 0x100) == 0)
                      {
                        if (v32)
                        {
                          sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47D80);
                          char v33 = *(void *)(v90 + 16);
                          if (!v33) {
                            goto LABEL_145;
                          }
                          char v34 = __clz(v33);
                          uint64_t v35 = v34 ^ 0x3F;
                          uint64_t v36 = 1 << (v34 ^ 0x3Fu);
                          if (v36 == v33)
                          {
                            uint64_t v37 = 0;
                            uint64_t v36 = *(void *)(v90 + 16);
                            if (v35) {
                              goto LABEL_132;
                            }
                          }
                          else
                          {
                            if (v36 >= v33) {
                              goto LABEL_187;
                            }
                            if (*(_DWORD *)(v90 + 8 * v36 + 32) >= v29)
                            {
                              uint64_t v37 = 0;
                              if (v35) {
                                goto LABEL_132;
                              }
                            }
                            else
                            {
                              uint64_t v79 = v33 + ~v36;
                              if (!v79) {
                                goto LABEL_145;
                              }
                              if ((v79 & 0x8000000000000000) != 0) {
                                goto LABEL_188;
                              }
                              if (v79 == 1)
                              {
                                uint64_t v37 = v33 - 1;
                              }
                              else
                              {
                                if (v79 - 0x4000000000000001 < 0xC000000000000001) {
                                  goto LABEL_189;
                                }
                                uint64_t v80 = __clz(v79 - 1);
                                uint64_t v81 = -v80;
                                uint64_t v36 = 1 << -(char)v80;
                                uint64_t v37 = v33 - v36;
                                if ((v81 & 0x3F) != 0)
                                {
LABEL_132:
                                  do
                                  {
                                    uint64_t v82 = v37 + (v36 >> 1);
                                    if (__OFADD__(v37, v36 >> 1)) {
                                      goto LABEL_159;
                                    }
                                    if (v82 >= v33) {
                                      goto LABEL_160;
                                    }
                                    if (*(_DWORD *)(v90 + 32 + 8 * v82) < v29) {
                                      v37 += v36 >> 1;
                                    }
                                    uint64_t v56 = v36 >= 4;
                                    v36 >>= 1;
                                  }
                                  while (v56);
                                }
                              }
                            }
                          }
                          if (v37 >= v33) {
                            goto LABEL_184;
                          }
                          char v83 = v90 + 32;
                          if (*(_DWORD *)(v90 + 32 + 8 * v37) >= v29) {
                            uint64_t v84 = v37;
                          }
                          else {
                            uint64_t v84 = v37 + 1;
                          }
                          if (v84 == v33) {
                            goto LABEL_145;
                          }
                          if (v84 >= v33) {
                            goto LABEL_192;
                          }
                          if (*(_DWORD *)(v83 + 8 * v84) != v29)
                          {
LABEL_145:
                            sub_1B51E0064((uint64_t)&v86, &qword_1E9D47D80);
                            swift_release_n();
                            swift_release();
                            goto LABEL_147;
                          }
                          uint64_t v59 = v83 + 8 * v84;
                          goto LABEL_74;
                        }
                        goto LABEL_75;
                      }
                    }
                    else
                    {
                      HIDWORD(v46) = v94;
                      LODWORD(v46) = v94;
                      LODWORD(v29) = (v46 >> 16) & 0xFF00FF | v94 & 0xFF00;
                    }
                    sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47D80);
                    uint64_t v47 = *(void *)(v90 + 16);
                    if (!v47) {
                      goto LABEL_145;
                    }
                    uint64_t v48 = __clz(v47);
                    uint64_t v49 = v48 ^ 0x3F;
                    uint64_t v50 = 1 << (v48 ^ 0x3Fu);
                    if (v50 == v47)
                    {
                      uint64_t v51 = 0;
                      uint64_t v50 = *(void *)(v90 + 16);
                      if (v49) {
                        goto LABEL_79;
                      }
                    }
                    else
                    {
                      if (v50 >= v47) {
                        goto LABEL_181;
                      }
                      if (*(_DWORD *)(v90 + 8 * v50 + 32) >= v29)
                      {
                        uint64_t v51 = 0;
                        if (v49) {
                          goto LABEL_79;
                        }
                      }
                      else
                      {
                        uint64_t v52 = v47 + ~v50;
                        if (!v52) {
                          goto LABEL_145;
                        }
                        if ((v52 & 0x8000000000000000) != 0) {
                          goto LABEL_183;
                        }
                        if (v52 == 1)
                        {
                          uint64_t v51 = v47 - 1;
                        }
                        else
                        {
                          if (v52 - 0x4000000000000001 < 0xC000000000000001) {
                            goto LABEL_186;
                          }
                          uint64_t v61 = __clz(v52 - 1);
                          uint64_t v62 = -v61;
                          uint64_t v50 = 1 << -(char)v61;
                          uint64_t v51 = v47 - v50;
                          if ((v62 & 0x3F) != 0)
                          {
LABEL_79:
                            while (1)
                            {
                              uint64_t v63 = v51 + (v50 >> 1);
                              if (__OFADD__(v51, v50 >> 1)) {
                                break;
                              }
                              if (v63 >= v47) {
                                goto LABEL_157;
                              }
                              if (*(_DWORD *)(v90 + 32 + 8 * v63) < v29) {
                                v51 += v50 >> 1;
                              }
                              uint64_t v56 = v50 >= 4;
                              v50 >>= 1;
                              if (!v56) {
                                goto LABEL_84;
                              }
                            }
LABEL_156:
                            __break(1u);
LABEL_157:
                            __break(1u);
LABEL_158:
                            __break(1u);
LABEL_159:
                            __break(1u);
LABEL_160:
                            __break(1u);
LABEL_161:
                            __break(1u);
LABEL_162:
                            __break(1u);
LABEL_163:
                            __break(1u);
LABEL_164:
                            __break(1u);
LABEL_165:
                            __break(1u);
LABEL_166:
                            __break(1u);
LABEL_167:
                            __break(1u);
LABEL_168:
                            __break(1u);
                            goto LABEL_169;
                          }
                        }
                      }
                    }
LABEL_84:
                    if (v51 >= v47) {
                      goto LABEL_176;
                    }
                    uint64_t v64 = v90 + 32;
                    if (*(_DWORD *)(v90 + 32 + 8 * v51) >= v29) {
                      uint64_t v65 = v51;
                    }
                    else {
                      uint64_t v65 = v51 + 1;
                    }
                    if (v65 == v47) {
                      goto LABEL_145;
                    }
                    if (v65 >= v47) {
                      goto LABEL_191;
                    }
                    if (*(_DWORD *)(v64 + 8 * v65) != v29) {
                      goto LABEL_145;
                    }
                    LODWORD(v30) = *(_DWORD *)(v64 + 8 * v65 + 4);
                    sub_1B51E0064((uint64_t)&v86, &qword_1E9D47D80);
                    if (WORD1(v30))
                    {
LABEL_146:
                      swift_release_n();
                      swift_release();
                      goto LABEL_147;
                    }
                    uint64_t v60 = 0;
LABEL_93:
                    uint64_t v67 = v5[7];
                    uint64_t v66 = v5[8];
                    BOOL v3 = __OFADD__(v66, v67);
                    uint64_t v68 = v66 + v67;
                    if (v3) {
                      goto LABEL_161;
                    }
                    if (v68 < v66) {
                      goto LABEL_162;
                    }
                    uint64_t v69 = v5[10];
                    if (v69 < v66) {
                      goto LABEL_163;
                    }
                    if (v69 >= v68) {
                      goto LABEL_164;
                    }
                    if (__OFSUB__(v69, v66)) {
                      goto LABEL_165;
                    }
                    uint64_t v70 = v5[6];
                    *(_WORD *)(v70 + 2 * (v69 - v66)) = v30;
                    uint64_t v71 = v69 + 1;
                    v5[10] = v69 + 1;
                    uint64_t v72 = v5[9];
                    uint64_t v73 = v72 + 1;
                    if (__OFADD__(v72, 1)) {
                      goto LABEL_166;
                    }
                    v5[9] = v73;
                    uint64_t v74 = v71;
                    if (v73 != v23)
                    {
                      while (v71 >= v66 && v74 < v68)
                      {
                        if (__OFSUB__(v74, v66)) {
                          goto LABEL_150;
                        }
                        *(_WORD *)(v70 + 2 * (v74 - v66)) = 0;
                        uint64_t v75 = v73 + 1;
                        if (__OFADD__(v73, 1)) {
                          goto LABEL_151;
                        }
                        ++v74;
                        ++v73;
                        if (v75 == v23)
                        {
                          v5[9] = v23;
                          v5[10] = v74;
                          goto LABEL_106;
                        }
                      }
                      __break(1u);
LABEL_150:
                      __break(1u);
LABEL_151:
                      __break(1u);
                      goto LABEL_152;
                    }
LABEL_106:
                    if (v23 != v6)
                    {
                      if (v74 < v66 || v74 >= v68) {
                        goto LABEL_173;
                      }
                      if (__OFSUB__(v74, v66)) {
                        goto LABEL_174;
                      }
                      *(_WORD *)(v70 + 2 * (v74 - v66)) = v60;
                      uint64_t v76 = v74 + 1;
                      v5[10] = v74 + 1;
                      uint64_t v77 = v23 + 1;
                      if (__OFADD__(v23, 1)) {
                        goto LABEL_175;
                      }
                      v5[9] = v77;
                      if (v77 != v6)
                      {
                        if (v77 >= v6) {
                          goto LABEL_180;
                        }
                        uint64_t v78 = v76;
                        while (v76 >= v66 && v78 < v68)
                        {
                          if (__OFSUB__(v78, v66)) {
                            goto LABEL_155;
                          }
                          *(_WORD *)(v70 + 2 * (v78 - v66)) = 0;
                          ++v78;
                          if (v6 == ++v77)
                          {
                            v5[9] = v6;
                            v5[10] = v78;
                            goto LABEL_119;
                          }
                        }
                        goto LABEL_154;
                      }
                    }
LABEL_119:
                    uint64_t v7 = v5[24];
                    if (v6 < v7)
                    {
                      sub_1B5291FE4((uint64_t)v91);
                      uint64_t v23 = v92;
                      uint64_t v22 = v93;
                      if ((v96 & 1) == 0) {
                        continue;
                      }
                    }
                    goto LABEL_20;
                  }
                  sub_1B5201384((uint64_t)v5, (uint64_t)&v86, &qword_1E9D47D80);
                  char v38 = *(void *)(v90 + 16);
                  if (!v38) {
                    goto LABEL_145;
                  }
                  HIDWORD(v39) = v24;
                  LODWORD(v39) = v24;
                  int v40 = (v39 >> 16) & 0xFF00FF | v24 & 0xFF00;
                  uint64_t v41 = __clz(v38);
                  uint64_t v42 = v41 ^ 0x3F;
                  uint64_t v43 = 1 << (v41 ^ 0x3Fu);
                  if (v43 == v38)
                  {
                    uint64_t v44 = 0;
                    uint64_t v43 = *(void *)(v90 + 16);
                    if (v42) {
                      goto LABEL_61;
                    }
                  }
                  else
                  {
                    if (v43 >= v38) {
                      goto LABEL_178;
                    }
                    if (*(_DWORD *)(v90 + 8 * v43 + 32) >= v40)
                    {
                      uint64_t v44 = 0;
                      if (v42) {
                        goto LABEL_61;
                      }
                    }
                    else
                    {
                      uint64_t v45 = v38 + ~v43;
                      if (!v45) {
                        goto LABEL_145;
                      }
                      if ((v45 & 0x8000000000000000) != 0) {
                        goto LABEL_182;
                      }
                      if (v45 == 1)
                      {
                        uint64_t v44 = v38 - 1;
                      }
                      else
                      {
                        if (v45 - 0x4000000000000001 < 0xC000000000000001) {
                          goto LABEL_185;
                        }
                        uint64_t v53 = __clz(v45 - 1);
                        uint64_t v54 = -v53;
                        uint64_t v43 = 1 << -(char)v53;
                        uint64_t v44 = v38 - v43;
                        if ((v54 & 0x3F) != 0)
                        {
LABEL_61:
                          while (1)
                          {
                            uint64_t v55 = v44 + (v43 >> 1);
                            if (__OFADD__(v44, v43 >> 1)) {
                              break;
                            }
                            if (v55 >= v38) {
                              goto LABEL_153;
                            }
                            if (*(_DWORD *)(v90 + 32 + 8 * v55) < v40) {
                              v44 += v43 >> 1;
                            }
                            uint64_t v56 = v43 >= 4;
                            v43 >>= 1;
                            if (!v56) {
                              goto LABEL_66;
                            }
                          }
LABEL_152:
                          __break(1u);
LABEL_153:
                          __break(1u);
LABEL_154:
                          __break(1u);
LABEL_155:
                          __break(1u);
                          goto LABEL_156;
                        }
                      }
                    }
                  }
LABEL_66:
                  if (v44 >= v38) {
                    goto LABEL_167;
                  }
                  uint64_t v57 = v90 + 32;
                  if (*(_DWORD *)(v90 + 32 + 8 * v44) >= v40) {
                    uint64_t v58 = v44;
                  }
                  else {
                    uint64_t v58 = v44 + 1;
                  }
                  if (v58 == v38) {
                    goto LABEL_145;
                  }
                  if (v58 >= v38) {
                    goto LABEL_190;
                  }
                  if (*(_DWORD *)(v57 + 8 * v58) != v40) {
                    goto LABEL_145;
                  }
                  uint64_t v59 = v57 + 8 * v58;
LABEL_74:
                  uint64_t v30 = *(unsigned int *)(v59 + 4);
                  sub_1B51E0064((uint64_t)&v86, &qword_1E9D47D80);
LABEL_75:
                  if (v30 >> 16) {
                    goto LABEL_146;
                  }
                  uint64_t v60 = -1;
                  goto LABEL_93;
                }
              }
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
              return;
            }
LABEL_171:
            __break(1u);
            goto LABEL_172;
          }
        }
        __break(1u);
        goto LABEL_171;
      }
    }
  }
}

uint64_t sub_1B528DE4C()
{
  void (*v6)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  __int16 v20;
  __int16 v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  unint64_t v45;
  __int16 v46;
  int v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  int v66;
  unint64_t v67;
  int v68;
  int v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned char v80[8];
  uint64_t v81;
  unint64_t v82;
  __int16 v83;
  char v84;
  char v85;
  unsigned char v86[56];
  uint64_t v87;
  unsigned int v88;
  unsigned __int8 v89;
  uint64_t v90;

  if (*(unsigned char *)(v0 + 52)) {
    return 0;
  }
  uint64_t v2 = v0;
  LODWORD(v3) = *(_DWORD *)(v0 + 48);
  unsigned int v4 = *(_DWORD *)(v0 + 168);
  if (*(unsigned char *)(v0 + 172)) {
    goto LABEL_4;
  }
  if (v3 == v4)
  {
    sub_1B5290EC8();
    if (*(unsigned char *)(v0 + 52))
    {
      if ((*(unsigned char *)(v0 + 172) & 1) == 0) {
        return 4;
      }
      return 0;
    }
    LODWORD(v3) = *(_DWORD *)(v0 + 48);
    unsigned int v4 = *(_DWORD *)(v0 + 168);
    if (*(unsigned char *)(v0 + 172))
    {
LABEL_4:
      char v5 = 1;
      goto LABEL_5;
    }
    if (v3 == v4) {
      return 0;
    }
  }
  if (v3 >= v4) {
    return 4;
  }
  char v5 = 0;
LABEL_5:
  uint64_t v6 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v0 + 64);
  LODWORD(v73) = v3;
  BYTE4(v73) = 0;
  uint64_t v74 = 0;
  uint64_t v75 = 1;
  uint64_t v76 = *(void *)(v0 + 8);
  swift_retain();
  v6(&v87, &v73);
  swift_release();
  LOBYTE(v73) = BYTE4(v87);
  v80[0] = v89;
  uint64_t v85 = BYTE4(v87);
  sub_1B5292D40(v87 | ((unint64_t)BYTE4(v87) << 32), v88 | ((unint64_t)v89 << 32), v90, v87 | ((unint64_t)BYTE4(v87) << 32), (uint64_t)v86);
  sub_1B5292340((uint64_t)v80);
  if (v84)
  {
LABEL_6:
    if (v5)
    {
LABEL_8:
      uint64_t result = 1;
      goto LABEL_9;
    }
LABEL_7:
    if (v3 < v4) {
      goto LABEL_8;
    }
    return 4;
  }
  uint64_t v7 = v0 + 120;
  while (2)
  {
    uint64_t v3 = v81;
    uint64_t v8 = v82;
    if ((v83 & 0x100) != 0)
    {
      uint64_t result = sub_1B5201384(v2, (uint64_t)&v73, &qword_1E9D47D78);
      uint64_t v27 = *(void *)(v79 + 16);
      if (!v27) {
        goto LABEL_159;
      }
      uint64_t v28 = HIBYTE(v8) | (unsigned __int16)(BYTE6(v8) << 8) | (BYTE5(v8) << 16);
      uint64_t v29 = __clz(v27);
      uint64_t v30 = v29 ^ 0x3F;
      int v31 = 1 << (v29 ^ 0x3Fu);
      if (v31 == v27)
      {
        uint64_t v32 = 0;
        int v31 = *(void *)(v79 + 16);
        if (v30) {
          goto LABEL_54;
        }
      }
      else
      {
        if (v31 >= v27)
        {
LABEL_183:
          __break(1u);
          goto LABEL_184;
        }
        if (*(_DWORD *)(v79 + 8 * v31 + 32) >= v28)
        {
          uint64_t v32 = 0;
          if (v30) {
            goto LABEL_54;
          }
        }
        else
        {
          char v33 = v27 + ~v31;
          if (!v33) {
            goto LABEL_159;
          }
          if ((v33 & 0x8000000000000000) != 0)
          {
LABEL_185:
            __break(1u);
            goto LABEL_186;
          }
          if (v33 == 1)
          {
            uint64_t v32 = v27 - 1;
          }
          else
          {
            if (v33 - 0x4000000000000001 < 0xC000000000000001)
            {
LABEL_188:
              __break(1u);
              goto LABEL_189;
            }
            int v40 = __clz(v33 - 1);
            uint64_t v41 = -v40;
            int v31 = 1 << -(char)v40;
            uint64_t v32 = v27 - v31;
            if ((v41 & 0x3F) != 0)
            {
LABEL_54:
              while (1)
              {
                uint64_t v42 = v32 + (v31 >> 1);
                if (__OFADD__(v32, v31 >> 1)) {
                  break;
                }
                if (v42 >= v27) {
                  goto LABEL_168;
                }
                if (*(_DWORD *)(v79 + 32 + 8 * v42) < v28) {
                  v32 += v31 >> 1;
                }
                uint64_t v43 = v31 >= 4;
                v31 >>= 1;
                if (!v43) {
                  goto LABEL_59;
                }
              }
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
              goto LABEL_169;
            }
          }
        }
      }
LABEL_59:
      if (v32 >= v27)
      {
LABEL_181:
        __break(1u);
        goto LABEL_182;
      }
      uint64_t v44 = v79 + 32;
      if (*(_DWORD *)(v79 + 32 + 8 * v32) >= v28) {
        uint64_t v45 = v32;
      }
      else {
        uint64_t v45 = v32 + 1;
      }
      if (v45 != v27)
      {
        if (v45 >= v27) {
          goto LABEL_195;
        }
        if (*(_DWORD *)(v44 + 8 * v45) == v28)
        {
          uint64_t v19 = *(unsigned int *)(v44 + 8 * v45 + 4);
LABEL_67:
          uint64_t result = sub_1B51E0064((uint64_t)&v73, &qword_1E9D47D78);
LABEL_68:
          if (!(v19 >> 16))
          {
            uint64_t v46 = -1;
            goto LABEL_86;
          }
          goto LABEL_160;
        }
      }
LABEL_159:
      sub_1B51E0064((uint64_t)&v73, &qword_1E9D47D78);
      uint64_t result = 2;
      goto LABEL_9;
    }
    if (v83 <= 0xFu) {
      uint64_t v9 = v83 | 0xFE00u;
    }
    else {
      uint64_t v9 = (v83 - 16) | 0xE0100u;
    }
    if (*(void *)(v2 + 144))
    {
      uint64_t v10 = HIBYTE(v82);
      uint64_t v11 = HIWORD(v82);
      uint64_t v12 = v82 >> 40;
      sub_1B51DFF98(v7, (uint64_t)&v73);
      uint64_t v13 = v7;
      uint64_t v14 = v77;
      uint64_t v15 = v78;
      __swift_project_boxed_opaque_existential_1(&v73, v77);
      uint64_t v16 = v10 & 0xFF0000FF | (unsigned __int16)(v11 << 8) | (v12 << 16);
      uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
      uint64_t v18 = v15;
      uint64_t v7 = v13;
      uint64_t v19 = v17(v16, v9, v14, v18);
      uint64_t v21 = v20;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
      if ((v21 & 0x100) == 0)
      {
        if ((v21 & 1) == 0) {
          goto LABEL_68;
        }
        uint64_t result = sub_1B5201384(v2, (uint64_t)&v73, &qword_1E9D47D78);
        uint64_t v22 = *(void *)(v79 + 16);
        if (!v22) {
          goto LABEL_159;
        }
        uint64_t v23 = __clz(v22);
        uint64_t v24 = v23 ^ 0x3F;
        uint64_t v25 = 1 << (v23 ^ 0x3Fu);
        if (v25 == v22)
        {
          uint64_t v26 = 0;
          uint64_t v25 = *(void *)(v79 + 16);
          if (v24) {
            goto LABEL_140;
          }
          goto LABEL_145;
        }
        if (v25 >= v22)
        {
LABEL_191:
          __break(1u);
          goto LABEL_192;
        }
        if (*(_DWORD *)(v79 + 8 * v25 + 32) >= v16)
        {
          uint64_t v26 = 0;
          if (v24) {
            goto LABEL_140;
          }
        }
        else
        {
          uint64_t v67 = v22 + ~v25;
          if (!v67) {
            goto LABEL_159;
          }
          if ((v67 & 0x8000000000000000) != 0) {
            goto LABEL_193;
          }
          if (v67 == 1)
          {
            uint64_t v26 = v22 - 1;
            goto LABEL_145;
          }
          if (v67 - 0x4000000000000001 < 0xC000000000000001) {
            goto LABEL_194;
          }
          uint64_t v68 = __clz(v67 - 1);
          uint64_t v69 = -v68;
          uint64_t v25 = 1 << -(char)v68;
          uint64_t v26 = v22 - v25;
          if ((v69 & 0x3F) != 0)
          {
LABEL_140:
            while (1)
            {
              uint64_t v70 = v26 + (v25 >> 1);
              if (__OFADD__(v26, v25 >> 1)) {
                break;
              }
              if (v70 >= v22) {
                goto LABEL_172;
              }
              if (*(_DWORD *)(v79 + 32 + 8 * v70) < v16) {
                v26 += v25 >> 1;
              }
              uint64_t v43 = v25 >= 4;
              v25 >>= 1;
              if (!v43) {
                goto LABEL_145;
              }
            }
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
            goto LABEL_173;
          }
        }
LABEL_145:
        if (v26 >= v22)
        {
LABEL_187:
          __break(1u);
          goto LABEL_188;
        }
        uint64_t v71 = v79 + 32;
        if (*(_DWORD *)(v79 + 32 + 8 * v26) >= v16) {
          uint64_t v72 = v26;
        }
        else {
          uint64_t v72 = v26 + 1;
        }
        if (v72 != v22)
        {
          if (v72 >= v22) {
            goto LABEL_197;
          }
          if (*(_DWORD *)(v71 + 8 * v72) == v16)
          {
            uint64_t v19 = *(unsigned int *)(v71 + 8 * v72 + 4);
            goto LABEL_67;
          }
        }
        goto LABEL_159;
      }
    }
    else
    {
      LODWORD(v16) = HIBYTE(v82) | (unsigned __int16)(BYTE6(v82) << 8) | (BYTE5(v82) << 16);
    }
    uint64_t result = sub_1B5201384(v2, (uint64_t)&v73, &qword_1E9D47D78);
    char v34 = *(void *)(v79 + 16);
    if (!v34) {
      goto LABEL_159;
    }
    uint64_t v35 = __clz(v34);
    uint64_t v36 = v35 ^ 0x3F;
    uint64_t v37 = 1 << (v35 ^ 0x3Fu);
    if (v37 == v34)
    {
      char v38 = 0;
      uint64_t v37 = *(void *)(v79 + 16);
      if (v36) {
        goto LABEL_72;
      }
      goto LABEL_77;
    }
    if (v37 >= v34)
    {
LABEL_184:
      __break(1u);
      goto LABEL_185;
    }
    if (*(_DWORD *)(v79 + 8 * v37 + 32) >= v16)
    {
      char v38 = 0;
      if (v36) {
        goto LABEL_72;
      }
    }
    else
    {
      uint64_t v39 = v34 + ~v37;
      if (!v39) {
        goto LABEL_159;
      }
      if ((v39 & 0x8000000000000000) != 0)
      {
LABEL_186:
        __break(1u);
        goto LABEL_187;
      }
      if (v39 == 1)
      {
        char v38 = v34 - 1;
        goto LABEL_77;
      }
      if (v39 - 0x4000000000000001 < 0xC000000000000001)
      {
LABEL_190:
        __break(1u);
        goto LABEL_191;
      }
      uint64_t v47 = __clz(v39 - 1);
      uint64_t v48 = -v47;
      uint64_t v37 = 1 << -(char)v47;
      char v38 = v34 - v37;
      if ((v48 & 0x3F) != 0)
      {
LABEL_72:
        while (1)
        {
          uint64_t v49 = v38 + (v37 >> 1);
          if (__OFADD__(v38, v37 >> 1)) {
            break;
          }
          if (v49 >= v34) {
            goto LABEL_170;
          }
          if (*(_DWORD *)(v79 + 32 + 8 * v49) < v16) {
            v38 += v37 >> 1;
          }
          uint64_t v43 = v37 >= 4;
          v37 >>= 1;
          if (!v43) {
            goto LABEL_77;
          }
        }
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
        goto LABEL_171;
      }
    }
LABEL_77:
    if (v38 >= v34)
    {
LABEL_182:
      __break(1u);
      goto LABEL_183;
    }
    uint64_t v50 = v79 + 32;
    if (*(_DWORD *)(v79 + 32 + 8 * v38) >= v16) {
      uint64_t v51 = v38;
    }
    else {
      uint64_t v51 = v38 + 1;
    }
    if (v51 == v34) {
      goto LABEL_159;
    }
    if (v51 >= v34) {
      goto LABEL_196;
    }
    if (*(_DWORD *)(v50 + 8 * v51) != v16) {
      goto LABEL_159;
    }
    LODWORD(v19) = *(_DWORD *)(v50 + 8 * v51 + 4);
    uint64_t result = sub_1B51E0064((uint64_t)&v73, &qword_1E9D47D78);
    if (WORD1(v19))
    {
LABEL_160:
      uint64_t result = 3;
LABEL_9:
      if (!__OFADD__(*(void *)v2, 1))
      {
        ++*(void *)v2;
        return result;
      }
LABEL_180:
      __break(1u);
      goto LABEL_181;
    }
    uint64_t v46 = 0;
LABEL_86:
    uint64_t v53 = *(void *)(v2 + 32);
    uint64_t v52 = *(void *)(v2 + 40);
    uint64_t v54 = __OFADD__(v52, v53);
    uint64_t v55 = v52 + v53;
    if (v54)
    {
LABEL_173:
      __break(1u);
      goto LABEL_174;
    }
    if (v55 < v52)
    {
LABEL_174:
      __break(1u);
      goto LABEL_175;
    }
    uint64_t v56 = *(void *)(v2 + 56);
    if (v56 < v52)
    {
LABEL_175:
      __break(1u);
      goto LABEL_176;
    }
    if (v56 >= v55)
    {
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      goto LABEL_180;
    }
    if (__OFSUB__(v56, v52)) {
      goto LABEL_177;
    }
    uint64_t v57 = *(void *)(v2 + 24);
    *(_WORD *)(v57 + 2 * (v56 - v52)) = v19;
    if (*(unsigned char *)(v2 + 52))
    {
LABEL_189:
      __break(1u);
      goto LABEL_190;
    }
    uint64_t v58 = *(_DWORD *)(v2 + 12);
    uint64_t v59 = *(_DWORD *)(v2 + 48);
    uint64_t v60 = v56 + 2;
    while (1)
    {
      uint64_t v61 = v60 - 1;
      if (v59 != v58) {
        break;
      }
      if ((v3 & 0x100000000) != 0)
      {
        LODWORD(v3) = 0;
        *(_DWORD *)(v2 + 48) = 0;
        *(unsigned char *)(v2 + 52) = 1;
        *(void *)(v2 + 56) = v61;
        if ((v8 & 0x100000000) != 0) {
          return 4;
        }
        goto LABEL_109;
      }
      uint64_t v62 = 0;
LABEL_99:
      if (v61 < v52 || v61 >= v55)
      {
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
        goto LABEL_167;
      }
      uint64_t v54 = __OFSUB__(v61, v52);
      uint64_t v63 = v61 - v52;
      if (v54) {
        goto LABEL_162;
      }
      *(_WORD *)(v57 + 2 * v63) = 0;
      ++v60;
      uint64_t v64 = v59 == v58;
      uint64_t v59 = v62;
      if (v64) {
        goto LABEL_189;
      }
    }
    uint64_t v62 = v59 + 1;
    if (v59 == -1) {
      goto LABEL_165;
    }
    if ((v3 & 0x100000000) != 0 || v62 != v3) {
      goto LABEL_99;
    }
    *(_DWORD *)(v2 + 48) = v3;
    *(unsigned char *)(v2 + 52) = 0;
    *(void *)(v2 + 56) = v61;
    if ((v8 & 0x100000000) == 0 && v3 == v8)
    {
LABEL_126:
      char v5 = *(unsigned char *)(v2 + 172);
      unsigned int v4 = *(_DWORD *)(v2 + 168);
      if ((v5 & 1) == 0 && v3 >= v4) {
        goto LABEL_7;
      }
      sub_1B5292340((uint64_t)v80);
      if ((v84 & 1) == 0) {
        continue;
      }
      goto LABEL_6;
    }
    break;
  }
LABEL_109:
  if (v61 < v52 || v61 >= v55) {
    goto LABEL_178;
  }
  uint64_t v54 = __OFSUB__(v61, v52);
  uint64_t v65 = v61 - v52;
  if (v54) {
    goto LABEL_179;
  }
  *(_WORD *)(v57 + 2 * v65) = v46;
  if (v59 != v58)
  {
    do
    {
      if (v3 == v58)
      {
        if ((v8 & 0x100000000) != 0)
        {
          *(_DWORD *)(v2 + 48) = 0;
          *(unsigned char *)(v2 + 52) = 1;
          *(void *)(v2 + 56) = v60;
          return 4;
        }
        uint64_t v66 = 0;
      }
      else
      {
        uint64_t v66 = v3 + 1;
        if (v3 == -1) {
          goto LABEL_166;
        }
        if ((v8 & 0x100000000) == 0 && v66 == v8)
        {
          *(_DWORD *)(v2 + 48) = v8;
          *(unsigned char *)(v2 + 52) = 0;
          LODWORD(v3) = v8;
          *(void *)(v2 + 56) = v60;
          goto LABEL_126;
        }
      }
      if (v60 < v52 || v60 >= v55) {
        goto LABEL_163;
      }
      if (__OFSUB__(v60, v52)) {
        goto LABEL_164;
      }
      *(_WORD *)(v57 + 2 * (v60 - v52)) = 0;
      ++v60;
      uint64_t v64 = v3 == v58;
      LODWORD(v3) = v66;
    }
    while (!v64);
  }
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
  return result;
}

uint64_t sub_1B528E6B0()
{
  void (*v6)(uint64_t *__return_ptr, uint64_t *);
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int16 v16;
  __int16 v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  unint64_t v64;
  int v65;
  int v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned char v78[8];
  uint64_t v79;
  unint64_t v80;
  __int16 v81;
  char v82;
  char v83;
  unsigned char v84[56];
  uint64_t v85;
  unsigned int v86;
  unsigned __int8 v87;
  uint64_t v88;

  if (*(unsigned char *)(v0 + 52)) {
    return 0;
  }
  uint64_t v2 = v0;
  LODWORD(v3) = *(_DWORD *)(v0 + 48);
  unsigned int v4 = *(_DWORD *)(v0 + 168);
  if (*(unsigned char *)(v0 + 172)) {
    goto LABEL_4;
  }
  if (v3 == v4)
  {
    sub_1B5290EC8();
    if (*(unsigned char *)(v0 + 52))
    {
      if ((*(unsigned char *)(v0 + 172) & 1) == 0) {
        return 4;
      }
      return 0;
    }
    LODWORD(v3) = *(_DWORD *)(v0 + 48);
    unsigned int v4 = *(_DWORD *)(v0 + 168);
    if (*(unsigned char *)(v0 + 172))
    {
LABEL_4:
      char v5 = 1;
      goto LABEL_5;
    }
    if (v3 == v4) {
      return 0;
    }
  }
  if (v3 >= v4) {
    return 4;
  }
  char v5 = 0;
LABEL_5:
  uint64_t v6 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v0 + 64);
  LODWORD(v71) = v3;
  BYTE4(v71) = 0;
  uint64_t v72 = 0;
  uint64_t v73 = 1;
  uint64_t v74 = *(void *)(v0 + 8);
  swift_retain();
  v6(&v85, &v71);
  swift_release();
  LOBYTE(v71) = BYTE4(v85);
  v78[0] = v87;
  char v83 = BYTE4(v85);
  sub_1B5292D40(v85 | ((unint64_t)BYTE4(v85) << 32), v86 | ((unint64_t)v87 << 32), v88, v85 | ((unint64_t)BYTE4(v85) << 32), (uint64_t)v84);
  sub_1B5292340((uint64_t)v78);
  if (v82)
  {
LABEL_6:
    if (v5)
    {
LABEL_8:
      uint64_t result = 1;
      goto LABEL_9;
    }
LABEL_7:
    if (v3 < v4) {
      goto LABEL_8;
    }
    return 4;
  }
  uint64_t v70 = v0 + 120;
  while (2)
  {
    uint64_t v3 = v79;
    uint64_t v7 = v80;
    if ((v81 & 0x100) != 0)
    {
      uint64_t result = sub_1B5201384(v2, (uint64_t)&v71, &qword_1E9D47D70);
      uint64_t v18 = *(void *)(v77 + 16);
      if (!v18) {
        goto LABEL_159;
      }
      uint64_t v19 = HIBYTE(v7) | (unsigned __int16)(BYTE6(v7) << 8) | (BYTE5(v7) << 16);
      uint64_t v20 = __clz(v18);
      uint64_t v21 = v20 ^ 0x3F;
      uint64_t v22 = 1 << (v20 ^ 0x3Fu);
      if (v22 == v18)
      {
        uint64_t v23 = 0;
        uint64_t v22 = *(void *)(v77 + 16);
        if (v21) {
          goto LABEL_56;
        }
      }
      else
      {
        if (v22 >= v18)
        {
LABEL_183:
          __break(1u);
          goto LABEL_184;
        }
        if (*(_DWORD *)(v77 + 8 * v22 + 32) >= v19)
        {
          uint64_t v23 = 0;
          if (v21) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v24 = v18 + ~v22;
          if (!v24) {
            goto LABEL_159;
          }
          if ((v24 & 0x8000000000000000) != 0)
          {
LABEL_185:
            __break(1u);
            goto LABEL_186;
          }
          if (v24 == 1)
          {
            uint64_t v23 = v18 - 1;
          }
          else
          {
            if (v24 - 0x4000000000000001 < 0xC000000000000001)
            {
LABEL_188:
              __break(1u);
              goto LABEL_189;
            }
            uint64_t v36 = __clz(v24 - 1);
            uint64_t v37 = -v36;
            uint64_t v22 = 1 << -(char)v36;
            uint64_t v23 = v18 - v22;
            if ((v37 & 0x3F) != 0)
            {
LABEL_56:
              while (1)
              {
                char v38 = v23 + (v22 >> 1);
                if (__OFADD__(v23, v22 >> 1)) {
                  break;
                }
                if (v38 >= v18) {
                  goto LABEL_167;
                }
                if (*(_DWORD *)(v77 + 32 + 8 * v38) < v19) {
                  v23 += v22 >> 1;
                }
                uint64_t v39 = v22 >= 4;
                v22 >>= 1;
                if (!v39) {
                  goto LABEL_61;
                }
              }
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
              goto LABEL_168;
            }
          }
        }
      }
LABEL_61:
      if (v23 >= v18)
      {
LABEL_181:
        __break(1u);
        goto LABEL_182;
      }
      int v40 = v77 + 32;
      if (*(_DWORD *)(v77 + 32 + 8 * v23) >= v19) {
        uint64_t v41 = v23;
      }
      else {
        uint64_t v41 = v23 + 1;
      }
      if (v41 != v18)
      {
        if (v41 >= v18) {
          goto LABEL_195;
        }
        if (*(_DWORD *)(v40 + 8 * v41) == v19)
        {
          uint64_t v42 = v40 + 8 * v41;
LABEL_69:
          LODWORD(v15) = *(_DWORD *)(v42 + 4);
          uint64_t result = sub_1B51E0064((uint64_t)&v71, &qword_1E9D47D70);
LABEL_70:
          uint64_t v43 = 0xFFFFFF;
          goto LABEL_86;
        }
      }
      goto LABEL_159;
    }
    if (v81 <= 0xFu) {
      uint64_t v8 = v81 | 0xFE00u;
    }
    else {
      uint64_t v8 = (v81 - 16) | 0xE0100u;
    }
    if (*(void *)(v2 + 144))
    {
      uint64_t v9 = HIBYTE(v80);
      uint64_t v10 = HIWORD(v80);
      uint64_t v11 = v80 >> 40;
      sub_1B51DFF98(v70, (uint64_t)&v71);
      uint64_t v12 = v75;
      uint64_t v13 = v76;
      __swift_project_boxed_opaque_existential_1(&v71, v75);
      uint64_t v14 = v9 & 0xFF0000FF | (unsigned __int16)(v10 << 8) | (v11 << 16);
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v8, v12, v13);
      uint64_t v17 = v16;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
      if ((v17 & 0x100) == 0)
      {
        if ((v17 & 1) == 0)
        {
          if (HIDWORD(v15))
          {
LABEL_170:
            uint64_t result = 3;
LABEL_9:
            if (!__OFADD__(*(void *)v2, 1))
            {
              ++*(void *)v2;
              return result;
            }
LABEL_180:
            __break(1u);
            goto LABEL_181;
          }
          goto LABEL_70;
        }
        uint64_t result = sub_1B5201384(v2, (uint64_t)&v71, &qword_1E9D47D70);
        int v31 = *(void *)(v77 + 16);
        if (v31)
        {
          uint64_t v32 = __clz(v31);
          char v33 = v32 ^ 0x3F;
          char v34 = 1 << (v32 ^ 0x3Fu);
          if (v34 == v31)
          {
            uint64_t v35 = 0;
            char v34 = *(void *)(v77 + 16);
            if (v33) {
              goto LABEL_140;
            }
          }
          else
          {
            if (v34 >= v31)
            {
LABEL_191:
              __break(1u);
              goto LABEL_192;
            }
            if (*(_DWORD *)(v77 + 8 * v34 + 32) >= v14)
            {
              uint64_t v35 = 0;
              if (v33) {
                goto LABEL_140;
              }
            }
            else
            {
              uint64_t v64 = v31 + ~v34;
              if (!v64) {
                goto LABEL_159;
              }
              if ((v64 & 0x8000000000000000) != 0) {
                goto LABEL_193;
              }
              if (v64 == 1)
              {
                uint64_t v35 = v31 - 1;
              }
              else
              {
                if (v64 - 0x4000000000000001 < 0xC000000000000001) {
                  goto LABEL_194;
                }
                uint64_t v65 = __clz(v64 - 1);
                uint64_t v66 = -v65;
                char v34 = 1 << -(char)v65;
                uint64_t v35 = v31 - v34;
                if ((v66 & 0x3F) != 0)
                {
LABEL_140:
                  while (1)
                  {
                    uint64_t v67 = v35 + (v34 >> 1);
                    if (__OFADD__(v35, v34 >> 1)) {
                      break;
                    }
                    if (v67 >= v31) {
                      goto LABEL_172;
                    }
                    if (*(_DWORD *)(v77 + 32 + 8 * v67) < v14) {
                      v35 += v34 >> 1;
                    }
                    uint64_t v39 = v34 >= 4;
                    v34 >>= 1;
                    if (!v39) {
                      goto LABEL_145;
                    }
                  }
                  __break(1u);
LABEL_172:
                  __break(1u);
                  goto LABEL_173;
                }
              }
            }
          }
LABEL_145:
          if (v35 >= v31)
          {
LABEL_187:
            __break(1u);
            goto LABEL_188;
          }
          uint64_t v68 = v77 + 32;
          if (*(_DWORD *)(v77 + 32 + 8 * v35) >= v14) {
            uint64_t v69 = v35;
          }
          else {
            uint64_t v69 = v35 + 1;
          }
          if (v69 != v31)
          {
            if (v69 >= v31) {
              goto LABEL_197;
            }
            if (*(_DWORD *)(v68 + 8 * v69) == v14)
            {
              uint64_t v42 = v68 + 8 * v69;
              goto LABEL_69;
            }
          }
        }
LABEL_159:
        sub_1B51E0064((uint64_t)&v71, &qword_1E9D47D70);
        uint64_t result = 2;
        goto LABEL_9;
      }
    }
    else
    {
      LODWORD(v14) = HIBYTE(v80) | (unsigned __int16)(BYTE6(v80) << 8) | (BYTE5(v80) << 16);
    }
    uint64_t result = sub_1B5201384(v2, (uint64_t)&v71, &qword_1E9D47D70);
    uint64_t v25 = *(void *)(v77 + 16);
    if (!v25) {
      goto LABEL_159;
    }
    uint64_t v26 = __clz(v25);
    uint64_t v27 = v26 ^ 0x3F;
    uint64_t v28 = 1 << (v26 ^ 0x3Fu);
    if (v28 == v25)
    {
      uint64_t v29 = 0;
      uint64_t v28 = *(void *)(v77 + 16);
      if (v27) {
        goto LABEL_73;
      }
      goto LABEL_78;
    }
    if (v28 >= v25)
    {
LABEL_184:
      __break(1u);
      goto LABEL_185;
    }
    if (*(_DWORD *)(v77 + 8 * v28 + 32) >= v14)
    {
      uint64_t v29 = 0;
      if (v27) {
        goto LABEL_73;
      }
    }
    else
    {
      uint64_t v30 = v25 + ~v28;
      if (!v30) {
        goto LABEL_159;
      }
      if ((v30 & 0x8000000000000000) != 0)
      {
LABEL_186:
        __break(1u);
        goto LABEL_187;
      }
      if (v30 == 1)
      {
        uint64_t v29 = v25 - 1;
        goto LABEL_78;
      }
      if (v30 - 0x4000000000000001 < 0xC000000000000001)
      {
LABEL_190:
        __break(1u);
        goto LABEL_191;
      }
      uint64_t v44 = __clz(v30 - 1);
      uint64_t v45 = -v44;
      uint64_t v28 = 1 << -(char)v44;
      uint64_t v29 = v25 - v28;
      if ((v45 & 0x3F) != 0)
      {
LABEL_73:
        while (1)
        {
          uint64_t v46 = v29 + (v28 >> 1);
          if (__OFADD__(v29, v28 >> 1)) {
            break;
          }
          if (v46 >= v25) {
            goto LABEL_169;
          }
          if (*(_DWORD *)(v77 + 32 + 8 * v46) < v14) {
            v29 += v28 >> 1;
          }
          uint64_t v39 = v28 >= 4;
          v28 >>= 1;
          if (!v39) {
            goto LABEL_78;
          }
        }
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
        goto LABEL_170;
      }
    }
LABEL_78:
    if (v29 >= v25)
    {
LABEL_182:
      __break(1u);
      goto LABEL_183;
    }
    uint64_t v47 = v77 + 32;
    if (*(_DWORD *)(v77 + 32 + 8 * v29) >= v14) {
      uint64_t v48 = v29;
    }
    else {
      uint64_t v48 = v29 + 1;
    }
    if (v48 == v25) {
      goto LABEL_159;
    }
    if (v48 >= v25) {
      goto LABEL_196;
    }
    if (*(_DWORD *)(v47 + 8 * v48) != v14) {
      goto LABEL_159;
    }
    LODWORD(v15) = *(_DWORD *)(v47 + 8 * v48 + 4);
    uint64_t result = sub_1B51E0064((uint64_t)&v71, &qword_1E9D47D70);
    uint64_t v43 = 0;
LABEL_86:
    uint64_t v50 = *(void *)(v2 + 32);
    uint64_t v49 = *(void *)(v2 + 40);
    uint64_t v51 = __OFADD__(v49, v50);
    uint64_t v52 = v49 + v50;
    if (v51)
    {
LABEL_173:
      __break(1u);
      goto LABEL_174;
    }
    if (v52 < v49)
    {
LABEL_174:
      __break(1u);
      goto LABEL_175;
    }
    uint64_t v53 = *(void *)(v2 + 56);
    if (v53 < v49)
    {
LABEL_175:
      __break(1u);
      goto LABEL_176;
    }
    if (v53 >= v52)
    {
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      goto LABEL_180;
    }
    if (__OFSUB__(v53, v49)) {
      goto LABEL_177;
    }
    uint64_t v54 = *(void *)(v2 + 24);
    *(_DWORD *)(v54 + 4 * (v53 - v49)) = v15;
    if (*(unsigned char *)(v2 + 52))
    {
LABEL_189:
      __break(1u);
      goto LABEL_190;
    }
    uint64_t v55 = *(_DWORD *)(v2 + 12);
    uint64_t v56 = *(_DWORD *)(v2 + 48);
    uint64_t v57 = v53 + 2;
    while (1)
    {
      uint64_t v58 = v57 - 1;
      if (v56 != v55) {
        break;
      }
      if ((v3 & 0x100000000) != 0)
      {
        LODWORD(v3) = 0;
        *(_DWORD *)(v2 + 48) = 0;
        *(unsigned char *)(v2 + 52) = 1;
        *(void *)(v2 + 56) = v58;
        if ((v7 & 0x100000000) != 0) {
          return 4;
        }
        goto LABEL_109;
      }
      uint64_t v59 = 0;
LABEL_99:
      if (v58 < v49 || v58 >= v52)
      {
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
        goto LABEL_166;
      }
      uint64_t v51 = __OFSUB__(v58, v49);
      uint64_t v60 = v58 - v49;
      if (v51) {
        goto LABEL_161;
      }
      *(_DWORD *)(v54 + 4 * v60) = 0;
      ++v57;
      uint64_t v61 = v56 == v55;
      uint64_t v56 = v59;
      if (v61) {
        goto LABEL_189;
      }
    }
    uint64_t v59 = v56 + 1;
    if (v56 == -1) {
      goto LABEL_164;
    }
    if ((v3 & 0x100000000) != 0 || v59 != v3) {
      goto LABEL_99;
    }
    *(_DWORD *)(v2 + 48) = v3;
    *(unsigned char *)(v2 + 52) = 0;
    *(void *)(v2 + 56) = v58;
    if ((v7 & 0x100000000) == 0 && v3 == v7)
    {
LABEL_126:
      char v5 = *(unsigned char *)(v2 + 172);
      unsigned int v4 = *(_DWORD *)(v2 + 168);
      if ((v5 & 1) == 0 && v3 >= v4) {
        goto LABEL_7;
      }
      sub_1B5292340((uint64_t)v78);
      if ((v82 & 1) == 0) {
        continue;
      }
      goto LABEL_6;
    }
    break;
  }
LABEL_109:
  if (v58 < v49 || v58 >= v52) {
    goto LABEL_178;
  }
  uint64_t v51 = __OFSUB__(v58, v49);
  uint64_t v62 = v58 - v49;
  if (v51) {
    goto LABEL_179;
  }
  *(_DWORD *)(v54 + 4 * v62) = v43;
  if (v56 != v55)
  {
    do
    {
      if (v3 == v55)
      {
        if ((v7 & 0x100000000) != 0)
        {
          *(_DWORD *)(v2 + 48) = 0;
          *(unsigned char *)(v2 + 52) = 1;
          *(void *)(v2 + 56) = v57;
          return 4;
        }
        uint64_t v63 = 0;
      }
      else
      {
        uint64_t v63 = v3 + 1;
        if (v3 == -1) {
          goto LABEL_165;
        }
        if ((v7 & 0x100000000) == 0 && v63 == v7)
        {
          *(_DWORD *)(v2 + 48) = v7;
          *(unsigned char *)(v2 + 52) = 0;
          LODWORD(v3) = v7;
          *(void *)(v2 + 56) = v57;
          goto LABEL_126;
        }
      }
      if (v57 < v49 || v57 >= v52) {
        goto LABEL_162;
      }
      if (__OFSUB__(v57, v49)) {
        goto LABEL_163;
      }
      *(_DWORD *)(v54 + 4 * (v57 - v49)) = 0;
      ++v57;
      uint64_t v61 = v3 == v55;
      LODWORD(v3) = v63;
    }
    while (!v61);
  }
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
  return result;
}

FontParser::CharacterMapQueryStatus_optional __swiftcall CharacterMapQuery.mapPartial()()
{
  uint64_t v120 = *((void *)v0 + 8);
  uint64_t v129 = *(void *)(v120 + 24);
  uint64_t v1 = *(void *)(v129 + 16);
  uint64_t v155 = *((void *)v0 + 6);
  uint64_t v2 = *(void *)(v155 + 8);
  uint64_t v3 = *((void *)v0 + 3);
  unsigned int v4 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v145 = v1;
  uint64_t v143 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v143);
  uint64_t v144 = (char *)&v98 - v6;
  uint64_t v154 = v2;
  uint64_t v153 = swift_getAssociatedTypeWitness();
  uint64_t v150 = *(void (***)(void))(v153 - 8);
  MEMORY[0x1F4188790](v153);
  char v119 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v148 = (char *)&v98 - v9;
  uint64_t v107 = sub_1B5372CD8();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  double v131 = (char *)&v98 - v10;
  uint64_t v149 = *(void (**)(void))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v11);
  double v118 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v147 = (char *)&v98 - v14;
  MEMORY[0x1F4188790](v15);
  unint64_t v139 = (char *)&v98 - v16;
  uint64_t v17 = *((void *)v4 + 5);
  uint64_t v18 = *((void *)v4 + 2);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = type metadata accessor for IndexedUnicode();
  uint64_t v142 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v141 = (char *)&v98 - v21;
  uint64_t v140 = v22;
  uint64_t v23 = sub_1B5372CD8();
  MEMORY[0x1F4188790](v23 - 8);
  double v132 = (char *)&v98 - v24;
  uint64_t v137 = v4;
  uint64_t v25 = *((void *)v4 + 7);
  uint64_t v26 = *((void *)v4 + 4);
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v158 = v18;
  uint64_t v159 = v17;
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  uint64_t v164 = v27;
  uint64_t v165 = v19;
  uint64_t v166 = AssociatedConformanceWitness;
  uint64_t v167 = v29;
  uint64_t v135 = type metadata accessor for UnicodeVariationIterator();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v136 = (uint64_t)&v98 - v30;
  uint64_t v164 = v26;
  uint64_t v165 = v19;
  uint64_t v166 = v25;
  uint64_t v167 = v29;
  uint64_t v115 = (void *)type metadata accessor for UnicodeVariationSequence();
  unint64_t v133 = *(v115 - 1);
  MEMORY[0x1F4188790](v115);
  double v114 = (char *)&v98 - v31;
  uint64_t v32 = v137;
  uint64_t v112 = swift_getAssociatedTypeWitness();
  uint64_t v128 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v112 - 8);
  MEMORY[0x1F4188790](v112);
  int v111 = (char *)&v98 - v33;
  uint64_t v110 = sub_1B5373038();
  uint64_t v127 = *(void (***)(char *, uint64_t, uint64_t))(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v117 = (char *)&v98 - v34;
  uint64_t v116 = v26;
  uint64_t v108 = *(void (***)(char *, uint64_t))(v26 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v109 = (char *)&v98 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v113 = (char *)&v98 - v38;
  uint64_t v39 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v98 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v98 - v44;
  uint64_t v46 = (char *)v138 + v32[21];
  uint64_t v157 = (char *)v138 + v32[19];
  sub_1B5372BC8();
  LOBYTE(AssociatedConformanceWitness) = sub_1B5372608();
  uint64_t v152 = v39;
  uint64_t v47 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v162 = v39 + 8;
  unint64_t v163 = v45;
  unint64_t v161 = v47;
  v47(v45, v19);
  if ((AssociatedConformanceWitness & 1) == 0) {
    return 0;
  }
  uint64_t v48 = (char *)v138 + v32[27];
  uint64_t v156 = *(void *)(v29 + 8);
  if (sub_1B5372698())
  {
    CharacterMapQuery.fillCodePointMap()();
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
    double v130 = v48;
    uint64_t v50 = v163;
    v49(v163, v46, v19);
    v49(v42, v130, v19);
    uint64_t v32 = v137;
    char v51 = sub_1B5372698();
    uint64_t v52 = v161;
    v161(v42, v19);
    uint64_t v53 = v50;
    uint64_t v48 = v130;
    v52(v53, v19);
    if (v51) {
      return 0;
    }
  }
  unint64_t v146 = v46;
  if ((sub_1B5372608() & 1) == 0) {
    return (FontParser::CharacterMapQueryStatus_optional)4;
  }
  double v130 = v48;
  uint64_t v55 = (void (**)(void))((char *)v138 + v32[23]);
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
  uint64_t v105 = (void (**)(char *, uint64_t))(v127 + 1);
  uint64_t v104 = (void (**)(char *, uint64_t))(v128 + 1);
  uint64_t v103 = (void (**)(char *, char *, uint64_t))(v108 + 2);
  uint64_t v102 = (void (**)(char *, char *, uint64_t))(v108 + 4);
  uint64_t v128 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
  uint64_t v127 = (void (**)(char *, uint64_t, uint64_t))(v142 + 32);
  uint64_t v125 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v149 + 48);
  uint64_t v123 = (void (**)(char *, char *, uint64_t))((char *)v149 + 32);
  v150 += 2;
  uint64_t v122 = (void (**)(char *, char *, uint64_t))((char *)v149 + 16);
  uint64_t v121 = (void (**)(char *, uint64_t))((char *)v149 + 8);
  uint64_t v126 = (void (**)(char *, uint64_t))(v142 + 8);
  int16x8_t v100 = (void (**)(uint64_t, uint64_t))(v134 + 8);
  uint64_t v101 = (void (**)(char *, void *))(v133 + 8);
  ++v108;
  uint64_t v142 = v3;
  uint64_t v57 = v140;
  uint64_t v58 = (uint64_t)v132;
  uint64_t v59 = v146;
  uint64_t v151 = AssociatedTypeWitness;
  uint64_t v124 = v29;
  v152 += 16;
  char v99 = v55;
  unint64_t v160 = v56;
  while (2)
  {
    uint64_t v149 = *v55;
    v56(v117, v59, v19);
    swift_retain();
    result.Swift::Int value = sub_1B5372698();
    if ((result.value & 1) == 0)
    {
      __break(1u);
LABEL_47:
      __break(1u);
      return result;
    }
    uint64_t v60 = v110;
    swift_getWitnessTable();
    uint64_t v61 = v111;
    sub_1B5372C78();
    (*v105)(v117, v60);
    uint64_t v62 = v113;
    v149(v61);
    swift_release();
    (*v104)(v61, v112);
    uint64_t v63 = v109;
    uint64_t v64 = v116;
    (*v103)(v109, v62, v116);
    (*v102)(v114, v63, v64);
    UnicodeVariationSequence.makeIterator()(v115, v136);
    uint64_t v65 = v137;
    do
    {
      UnicodeVariationIterator.next()(v135, v58);
      if ((*v128)(v58, 1, v57) == 1) {
        break;
      }
      uint64_t v67 = v141;
      (*v127)(v141, v58, v57);
      uint64_t v68 = *(int *)(v57 + 36);
      uint64_t v69 = (unsigned __int8 *)&v67[v68];
      char v70 = v67[v68 + 4];
      uint64_t v71 = v138;
      if (v70)
      {
        uint64_t v72 = 0;
      }
      else
      {
        uint64_t v73 = v69[3];
        if (v73 > 0xF) {
          uint64_t v72 = (v73 - 16) | 0xE0100;
        }
        else {
          uint64_t v72 = v73 | 0xFE00;
        }
      }
      uint64_t v74 = v131;
      LOBYTE(v164) = v70;
      if (v70)
      {
        Swift::UInt32 v84 = (*v69 << 16) | (v69[1] << 8) | v69[2];
        goto LABEL_22;
      }
      uint64_t v75 = (uint64_t)v138 + v65[25];
      if (!*(void *)(v75 + 24)) {
        goto LABEL_25;
      }
      uint64_t v76 = v65;
      sub_1B51DFF98(v75, (uint64_t)&v164);
      uint64_t v77 = v167;
      uint64_t v78 = v168;
      __swift_project_boxed_opaque_existential_1(&v164, v167);
      uint64_t v79 = v140;
      Swift::Int value = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v78 + 16))((v141[*(int *)(v140 + 36)] << 16) | (v141[*(int *)(v140 + 36) + 1] << 8) | v141[*(int *)(v140 + 36) + 2], v72, v77, v78);
      __int16 v82 = v81;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v164);
      if ((v82 & 0x100) != 0)
      {
        uint64_t v68 = *(int *)(v79 + 36);
        uint64_t v65 = v76;
LABEL_25:
        Swift::Int_optional v170 = CharacterMapQuery.mapCodePoint(_:)((v141[v68] << 16) | (v141[v68 + 1] << 8) | v141[v68 + 2]);
        Swift::Int value = v170.value;
        int v83 = 0;
        if (v170.is_nil)
        {
LABEL_42:
          (*v126)(v141, v140);
          (*v100)(v136, v135);
          (*v101)(v114, v115);
          (*v108)(v113, v116);
          result.Swift::Int value = FontParser_CharacterMapQueryStatus_unmappedCharacter;
          goto LABEL_43;
        }
        goto LABEL_26;
      }
      if (v82)
      {
        Swift::UInt32 v84 = (v141[*(int *)(v140 + 36)] << 16) | (v141[*(int *)(v140 + 36) + 1] << 8) | v141[*(int *)(v140 + 36) + 2];
        uint64_t v65 = v76;
LABEL_22:
        Swift::Int_optional v169 = CharacterMapQuery.mapCodePoint(_:)(v84);
        Swift::Int value = v169.value;
        int v83 = 1;
        if (v169.is_nil) {
          goto LABEL_42;
        }
        goto LABEL_26;
      }
      int v83 = 1;
      uint64_t v65 = v76;
LABEL_26:
      uint64_t v164 = value;
      unint64_t v85 = sub_1B51D0074();
      sub_1B5372B68();
      if ((*v125)(v74, 1, AssociatedTypeWitness) == 1)
      {
        (*v126)(v141, v140);
        (*v100)(v136, v135);
        (*v101)(v114, v115);
        (*v108)(v113, v116);
        (*(void (**)(char *, uint64_t))(v106 + 8))(v74, v107);
        result.Swift::Int value = FontParser_CharacterMapQueryStatus_glyphIndexTooLarge;
        goto LABEL_43;
      }
      unint64_t v133 = v85;
      LODWORD(v134) = v83;
      uint64_t v86 = v139;
      (*v123)(v139, v74, AssociatedTypeWitness);
      uint64_t v87 = (char *)v71 + v65[22];
      uint64_t v149 = *v150;
      ((void (*)(char *, char *, uint64_t))v149)(v148, v87, v153);
      (*v122)(v147, v86, AssociatedTypeWitness);
      sub_1B5372678();
      while (1)
      {
        sub_1B5372BD8();
        uint64_t v88 = v146;
        sub_1B5372BD8();
        uint64_t v89 = v163;
        v160(v163, v88, v19);
        char v90 = sub_1B5372698();
        v161(v89, v19);
        if (v90) {
          break;
        }
        ((void (*)(char *, char *, uint64_t))v149)(v148, v87, v153);
        swift_getAssociatedConformanceWitness();
        sub_1B5373268();
        sub_1B5373218();
        sub_1B5372678();
      }
      uint64_t v91 = v163;
      v160(v163, v88, v19);
      char v92 = sub_1B5372698();
      v161(v91, v19);
      if ((v92 & 1) == 0)
      {
        ((void (*)(char *, char *, uint64_t))v149)(v119, v87, v153);
        uint64_t v93 = 0xFFFFFFLL;
        if (!v134) {
          uint64_t v93 = 0;
        }
        uint64_t v164 = v93;
        sub_1B5372DE8();
        while (1)
        {
          sub_1B5372678();
          sub_1B5372BD8();
          sub_1B5372BD8();
          char v94 = v163;
          v160(v163, v88, v19);
          char v95 = sub_1B5372698();
          v161(v94, v19);
          if (v95) {
            break;
          }
          ((void (*)(char *, char *, uint64_t))v149)(v148, v87, v153);
          swift_getAssociatedConformanceWitness();
          sub_1B5373268();
          sub_1B5373218();
          uint64_t v88 = v146;
        }
      }
      char v66 = sub_1B5372608();
      uint64_t AssociatedTypeWitness = v151;
      (*v121)(v139, v151);
      uint64_t v57 = v140;
      (*v126)(v141, v140);
      uint64_t v65 = v137;
      uint64_t v58 = (uint64_t)v132;
    }
    while ((v66 & 1) != 0);
    (*v100)(v136, v135);
    uint64_t v59 = v146;
    char v96 = sub_1B5372608();
    (*v101)(v114, v115);
    (*v108)(v113, v116);
    if ((v96 & 1) == 0)
    {
      char v97 = sub_1B5372608();
      result.Swift::Int value = FontParser_CharacterMapQueryStatus_unknownDefault;
      uint64_t v55 = v99;
      uint64_t v56 = v160;
      if (v97) {
        continue;
      }
      return result;
    }
    break;
  }
  result.Swift::Int value = FontParser_CharacterMapQueryStatus_invalidUTFSequence;
  uint64_t v71 = v138;
LABEL_43:
  if (__OFADD__(*v71, 1)) {
    goto LABEL_47;
  }
  ++*v71;
  return result;
}

void sub_1B5290540()
{
  void (*v9)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  char *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char **v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  char *v44;
  char v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  void *v50;
  char v51;
  char v52[16];
  uint64_t v53;
  int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t vars8;

  if (v0[9] != v0[24])
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v1 = v0;
  uint64_t v2 = (char **)(v0 + 23);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = v0[23];
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B5238E9C(0, *(void *)(v4 + 16));
  }
  else
  {
    *uint64_t v2 = (char *)sub_1B5293CBC(0, *(void *)(v4 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v6 + v5;
  if (__OFADD__(v6, v5)) {
    goto LABEL_47;
  }
  uint64_t v8 = v1[9];
  if (v7 < v8 || v7 < v6) {
    goto LABEL_48;
  }
  if (v8 < v6)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v9 = (void (*)(uint64_t *__return_ptr, uint64_t *))v1[11];
  uint64_t v11 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v56 = v1[9];
  uint64_t v57 = v6 + v5;
  uint64_t v58 = v11;
  uint64_t v59 = v10;
  uint64_t v60 = v5;
  uint64_t v61 = v6;
  swift_retain();
  swift_retain();
  v9(&v67, &v56);
  swift_release();
  swift_release();
  uint64_t v13 = v67;
  uint64_t v12 = v68;
  uint64_t v15 = v69;
  uint64_t v14 = v70;
  uint64_t v16 = v71;
  uint64_t v17 = v72;
  uint64_t v73 = v67;
  uint64_t v74 = v68;
  uint64_t v75 = v69;
  uint64_t v76 = v70;
  uint64_t v77 = v71;
  uint64_t v78 = v72;
  if (v67 == v68)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = v67;
  }
  else
  {
    uint64_t v19 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v19 < v67)
    {
LABEL_51:
      __break(1u);
      return;
    }
    uint64_t v20 = sub_1B5294084(v67);
    uint64_t v18 = v13;
    uint64_t v21 = v13 + 1;
  }
  uint64_t v56 = v13;
  uint64_t v57 = v12;
  uint64_t v58 = v15;
  uint64_t v59 = v14;
  uint64_t v60 = v16;
  uint64_t v61 = v17;
  uint64_t v62 = v21;
  uint64_t v63 = v18;
  uint64_t v64 = v19;
  uint64_t v65 = v20;
  char v66 = v13 == v12;
  if (*((void *)*v2 + 2) >= *((void *)*v2 + 3) >> 1)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    do
    {
      sub_1B5292150((uint64_t)v52);
      if (v55) {
        break;
      }
      uint64_t v22 = v54;
      v1[24] = v53;
      uint64_t v23 = (char *)v1[23];
      uint64_t v24 = swift_isUniquelyReferenced_nonNull_native();
      v1[23] = v23;
      if ((v24 & 1) == 0)
      {
        uint64_t v23 = sub_1B51E8DB8(0, *((void *)v23 + 2) + 1, 1, v23);
        *uint64_t v2 = v23;
      }
      uint64_t v26 = *((void *)v23 + 2);
      uint64_t v25 = *((void *)v23 + 3);
      uint64_t v27 = v26 + 1;
      if (v26 >= v25 >> 1) {
        uint64_t v23 = sub_1B51E8DB8((char *)(v25 > 1), v26 + 1, 1, v23);
      }
      *((void *)v23 + 2) = v27;
      uint64_t v28 = &v23[8 * v26];
      *((_DWORD *)v28 + 8) = v22 & 0xFF00 | (v22 << 16) | BYTE2(v22);
      *((_DWORD *)v28 + 9) = 0;
      *uint64_t v2 = v23;
    }
    while (v27 < *((void *)v23 + 3) >> 1);
  }
  sub_1B5288398(v2);
  uint64_t v29 = *((void *)*v2 + 2);
  if (v29)
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v49 = v1 + 13;
    uint64_t v50 = v1;
    uint64_t v33 = 0xFFFFFFFFLL;
    char v51 = 1;
    uint64_t v34 = 32;
    while (v31 < *((void *)*v2 + 2))
    {
      uint64_t v35 = *(unsigned int *)&(*v2)[v34];
      if (v35 == v33)
      {
        uint64_t v35 = v33;
      }
      else
      {
        uint64_t v36 = v2;
        uint64_t v37 = v50[16];
        uint64_t v38 = v50[17];
        __swift_project_boxed_opaque_existential_1(v49, v37);
        uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v38 + 48))(v35, v30, v51 & 1, v37, v38);
        if (v41)
        {
          uint64_t v2 = v36;
        }
        else
        {
          uint64_t v42 = v39;
          uint64_t v43 = v40;
          uint64_t v2 = v36;
          uint64_t v44 = *v36;
          uint64_t v45 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v36 = v44;
          if (v45)
          {
            if ((v32 & 0x8000000000000000) != 0) {
              goto LABEL_37;
            }
          }
          else
          {
            uint64_t v44 = sub_1B52935B0((uint64_t)v44);
            if ((v32 & 0x8000000000000000) != 0)
            {
LABEL_37:
              __break(1u);
LABEL_38:
              uint64_t v47 = *((void *)*v2 + 2);
              uint64_t v48 = v47 - v32;
              if (!__OFSUB__(v47, v32)) {
                goto LABEL_39;
              }
              __break(1u);
              break;
            }
          }
          if (v32 >= *((void *)v44 + 2)) {
            goto LABEL_45;
          }
          char v51 = 0;
          uint64_t v46 = &v44[8 * v32];
          *((_DWORD *)v46 + 8) = v35;
          *((_DWORD *)v46 + 9) = v42;
          *uint64_t v36 = v44;
          ++v32;
          uint64_t v30 = v43;
        }
      }
      ++v31;
      v34 += 8;
      uint64_t v33 = v35;
      if (v29 == v31) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v48 = 0;
LABEL_39:
  sub_1B5292BF4(v48);
  swift_release();
  swift_release();
}

void sub_1B5290928()
{
  void (*v13)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  void *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  __int16 v37;
  char **v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char v51;
  int v52;
  uint64_t v53;
  char *v54;
  char v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  void *v62;
  void *v63;
  char **v64;
  uint64_t v65;
  long long v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  long long v70;
  uint64_t v71;
  uint64_t vars8;

  if (v0[9] != v0[24])
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  uint64_t v63 = v0;
  uint64_t v1 = (char **)(v0 + 23);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = v0[23];
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B5238E9C(0, *(void *)(v3 + 16));
  }
  else
  {
    *uint64_t v1 = (char *)sub_1B5293CBC(0, *(void *)(v3 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = v63[3];
  uint64_t v5 = v63[4];
  uint64_t v6 = v5 + v4;
  if (__OFADD__(v5, v4)) {
    goto LABEL_89;
  }
  uint64_t v7 = v63[9];
  BOOL v8 = __OFSUB__(v7, v5);
  uint64_t v9 = v7 - v5;
  if (v8)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  uint64_t v10 = v6 - v7;
  if (__OFSUB__(v6, v7))
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  BOOL v8 = __OFADD__(v9, v10);
  uint64_t v11 = v9 + v10;
  if (v8)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  if (v6 < v7 || (uint64_t v12 = v11 - v9, v11 < v9))
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  uint64_t v13 = (void (*)(uint64_t *__return_ptr, uint64_t *))v63[11];
  uint64_t v14 = v63[2];
  uint64_t v15 = v14 + 2 * v9;
  if (!v14) {
    uint64_t v15 = 0;
  }
  uint64_t v65 = v63[1];
  *(void *)&char v66 = v15;
  *((void *)&v66 + 1) = v12;
  uint64_t v67 = v7;
  swift_retain();
  swift_retain();
  v13(&v69, &v65);
  swift_release();
  swift_release();
  uint64_t v16 = v71;
  uint64_t v65 = v69;
  char v66 = v70;
  uint64_t v67 = v71;
  uint64_t v68 = v71;
  sub_1B5274CD8();
  uint64_t v18 = v68;
  if ((v17 & 0x100000000) != 0)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
LABEL_17:
    uint64_t v64 = v1;
    uint64_t v21 = *v1;
    if (*((void *)*v1 + 2) < *((void *)*v1 + 3) >> 1)
    {
      uint64_t v22 = HIDWORD(v17) & 1;
      uint64_t v59 = v66;
      uint64_t v23 = v67;
      uint64_t v24 = v67 + *((void *)&v66 + 1);
      uint64_t v25 = __OFADD__(v67, *((void *)&v66 + 1));
      uint64_t v61 = v25;
      swift_retain();
      uint64_t v26 = v63;
      uint64_t v60 = v24;
      while (1)
      {
        if (v22) {
          goto LABEL_61;
        }
        if (v61) {
          goto LABEL_83;
        }
        if (v24 < v23) {
          goto LABEL_84;
        }
        if (v18 < v23 || v18 >= v24) {
          goto LABEL_34;
        }
        if (__OFSUB__(v18, v23)) {
          goto LABEL_86;
        }
        uint64_t v27 = *(unsigned __int16 *)(v59 + 2 * (v18 - v23));
        if ((v27 & 0xFC00) == 0xDC00)
        {
LABEL_34:
          if (HIBYTE(v20)) {
            goto LABEL_82;
          }
          uint64_t v27 = 0;
          LOBYTE(v22) = 1;
          uint64_t v31 = v19;
          uint64_t v19 = 0;
          goto LABEL_36;
        }
        uint64_t v28 = v18 + 1;
        if ((v27 & 0xFC00) == 0xD800)
        {
          if (v28 >= v24) {
            goto LABEL_34;
          }
          BOOL v8 = __OFSUB__(v28, v23);
          uint64_t v29 = v28 - v23;
          if (v8) {
            goto LABEL_94;
          }
          uint64_t v30 = *(_WORD *)(v59 + 2 * v29);
          if ((v30 & 0xFC00) != 0xDC00) {
            goto LABEL_34;
          }
          v18 += 2;
          uint64_t v27 = (v30 & 0x3FF | ((v27 & 0x3FF) << 10)) + 0x10000;
        }
        else
        {
          ++v18;
        }
        if (HIBYTE(v20)) {
          goto LABEL_87;
        }
        if (v27 >> 4 == 4064 || v27 - 917760 <= 0xEF)
        {
          uint64_t v27 = 0;
          uint64_t v19 = 0;
          LOBYTE(v22) = 1;
          if (v18 >= v23 && v18 < v24)
          {
            if (__OFSUB__(v18, v23)) {
              goto LABEL_96;
            }
            uint64_t v27 = *(unsigned __int16 *)(v59 + 2 * (v18 - v23));
            if ((v27 & 0xFC00) != 0xDC00)
            {
              uint64_t v19 = v18 + 1;
              if ((v27 & 0xFC00) != 0xD800)
              {
                LOBYTE(v22) = 0;
                goto LABEL_59;
              }
              if (v19 < v24)
              {
                if (__OFSUB__(v19, v23)) {
                  goto LABEL_97;
                }
                uint64_t v37 = *(_WORD *)(v59 + 2 * (v19 - v23));
                if ((v37 & 0xFC00) == 0xDC00)
                {
                  LOBYTE(v22) = 0;
                  uint64_t v19 = v18 + 2;
                  uint64_t v27 = (v37 & 0x3FF | ((v27 & 0x3FF) << 10)) + 0x10000;
LABEL_59:
                  uint64_t v31 = v18;
                  uint64_t v18 = v19;
                  goto LABEL_36;
                }
              }
            }
            uint64_t v19 = 0;
            uint64_t v27 = 0;
            LOBYTE(v22) = 1;
          }
          uint64_t v31 = v18;
        }
        else
        {
          LOBYTE(v22) = 0;
          uint64_t v31 = v19;
          uint64_t v19 = v18;
        }
LABEL_36:
        v63[24] = v31;
        uint64_t v32 = swift_isUniquelyReferenced_nonNull_native();
        v63[23] = v21;
        if ((v32 & 1) == 0)
        {
          uint64_t v21 = sub_1B51E8DB8(0, *((void *)v21 + 2) + 1, 1, v21);
          *uint64_t v64 = v21;
        }
        uint64_t v34 = *((void *)v21 + 2);
        uint64_t v33 = *((void *)v21 + 3);
        uint64_t v35 = v34 + 1;
        if (v34 >= v33 >> 1) {
          uint64_t v21 = sub_1B51E8DB8((char *)(v33 > 1), v34 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v35;
        uint64_t v36 = &v21[8 * v34];
        *((_DWORD *)v36 + 8) = v20 & 0xFFFFFF;
        *((_DWORD *)v36 + 9) = 0;
        *uint64_t v64 = v21;
        uint64_t v20 = v27;
        uint64_t v24 = v60;
        if (v35 >= *((void *)v21 + 3) >> 1) {
          goto LABEL_61;
        }
      }
    }
    swift_retain();
    uint64_t v26 = v63;
LABEL_61:
    uint64_t v38 = v64;
    sub_1B5288398(v64);
    uint64_t v39 = *((void *)*v64 + 2);
    if (!v39)
    {
      uint64_t v58 = 0;
LABEL_76:
      sub_1B5292BF4(v58);
      swift_release();
      swift_release();
      return;
    }
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v62 = v26 + 13;
    uint64_t v43 = 0xFFFFFFFFLL;
    uint64_t v44 = 1;
    uint64_t v45 = 32;
    while (v41 < *((void *)*v38 + 2))
    {
      uint64_t v46 = *(unsigned int *)&(*v38)[v45];
      if (v46 == v43)
      {
        uint64_t v46 = v43;
      }
      else
      {
        uint64_t v47 = v63[16];
        uint64_t v48 = v63[17];
        __swift_project_boxed_opaque_existential_1(v62, v47);
        uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v48 + 48))(v46, v40, v44 & 1, v47, v48);
        if (v51)
        {
          uint64_t v38 = v64;
        }
        else
        {
          uint64_t v52 = v49;
          uint64_t v53 = v50;
          uint64_t v38 = v64;
          uint64_t v54 = *v64;
          uint64_t v55 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v64 = v54;
          if (v55)
          {
            if ((v42 & 0x8000000000000000) != 0) {
              goto LABEL_74;
            }
          }
          else
          {
            uint64_t v54 = sub_1B52935B0((uint64_t)v54);
            if ((v42 & 0x8000000000000000) != 0)
            {
LABEL_74:
              __break(1u);
LABEL_75:
              uint64_t v57 = *((void *)*v38 + 2);
              uint64_t v58 = v57 - v42;
              if (!__OFSUB__(v57, v42)) {
                goto LABEL_76;
              }
              __break(1u);
              break;
            }
          }
          if (v42 >= *((void *)v54 + 2)) {
            goto LABEL_85;
          }
          uint64_t v44 = 0;
          uint64_t v56 = &v54[8 * v42];
          *((_DWORD *)v56 + 8) = v46;
          *((_DWORD *)v56 + 9) = v52;
          *uint64_t v64 = v54;
          ++v42;
          uint64_t v40 = v53;
        }
      }
      ++v41;
      v45 += 8;
      uint64_t v43 = v46;
      if (v39 == v41) {
        goto LABEL_75;
      }
    }
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  if (v68 >= v16)
  {
    uint64_t v19 = v68;
    uint64_t v20 = v17;
    goto LABEL_17;
  }
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
}

void sub_1B5290EC8()
{
  void (*v2)(uint64_t *__return_ptr, unsigned int *);
  char v3;
  char *v4;
  char **v5;
  unsigned int v6;
  char v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  char v11;
  unsigned int v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  unsigned int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char v37;
  int v38;
  uint64_t v39;
  char *v40;
  char v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  char **v47;
  char v48;
  unsigned int v49;
  char v50;
  unsigned int v51;
  unsigned __int8 v52;
  uint64_t v53;
  unsigned int v54;
  BOOL v55;
  uint64_t v56;
  unint64_t v57;
  unsigned int v58;
  char v59;
  uint64_t v60;
  unsigned int v61;
  unsigned __int8 v62;
  uint64_t v63;

  uint64_t v1 = v0;
  if (*(unsigned char *)(v0 + 52))
  {
    if (*(unsigned char *)(v0 + 172))
    {
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_4:
        sub_1B5238E9C(0, *(void *)(*(void *)(v0 + 160) + 16));
LABEL_9:
        uint64_t v2 = *(void (**)(uint64_t *__return_ptr, unsigned int *))(v0 + 64);
        uint64_t v3 = *(unsigned char *)(v0 + 52);
        uint64_t v49 = *(_DWORD *)(v0 + 48);
        uint64_t v50 = v3;
        char v51 = 0;
        uint64_t v52 = 1;
        uint64_t v53 = *(void *)(v0 + 8);
        swift_retain();
        v2(&v60, &v49);
        swift_release();
        LOBYTE(v49) = BYTE4(v60);
        sub_1B5292D40(v60 | ((unint64_t)BYTE4(v60) << 32), v61 | ((unint64_t)v62 << 32), v63, v60 | ((unint64_t)BYTE4(v60) << 32), (uint64_t)&v49);
        uint64_t v5 = (char **)(v0 + 160);
        uint64_t v4 = *(char **)(v0 + 160);
        uint64_t v47 = (char **)(v1 + 160);
        if (*((void *)v4 + 2) < *((void *)v4 + 3) >> 1)
        {
          while (1)
          {
            if (v59) {
              goto LABEL_56;
            }
            uint64_t v6 = v57;
            uint64_t v7 = BYTE4(v57);
            BOOL v8 = v58;
            uint64_t v9 = v52;
            if (v55)
            {
              if ((v52 & 1) == 0) {
                goto LABEL_85;
              }
LABEL_20:
              uint64_t v56 = 0;
              uint64_t v57 = 0;
              uint64_t v58 = 0;
              uint64_t v59 = 1;
              uint64_t v12 = v6;
              uint64_t v48 = v7 & 1;
              if (HIBYTE(v8)) {
                goto LABEL_75;
              }
              goto LABEL_21;
            }
            uint64_t v10 = v54;
            if (v54 == v51) {
              uint64_t v11 = v52;
            }
            else {
              uint64_t v11 = 1;
            }
            if ((v11 & 1) == 0) {
              goto LABEL_20;
            }
            if (v54 == HIDWORD(v53))
            {
              uint64_t v12 = 0;
              uint64_t v54 = 0;
              uint64_t v55 = 1;
            }
            else
            {
              uint64_t v12 = v54 + 1;
              if (v54 == -1) {
                goto LABEL_79;
              }
              ++v54;
              uint64_t v55 = 0;
            }
            if (v50) {
              goto LABEL_86;
            }
            if (v10 < v49) {
              goto LABEL_77;
            }
            if (v10 < v51) {
              uint64_t v18 = 1;
            }
            else {
              uint64_t v18 = v52;
            }
            if (v18 != 1) {
              goto LABEL_80;
            }
            uint64_t v19 = v12;
            uint64_t v56 = v10;
            uint64_t v57 = v12 | ((unint64_t)(v10 == HIDWORD(v53)) << 32);
            uint64_t v58 = v10;
            uint64_t v59 = 0;
            if (HIBYTE(v8)) {
              goto LABEL_78;
            }
            if (v10 >> 4 == 4064 || (v10 - 917760) < 0xF0) {
              break;
            }
            uint64_t v48 = v7 & 1;
            uint64_t v12 = v6;
LABEL_21:
            *(_DWORD *)(v1 + 168) = v12;
            *(unsigned char *)(v1 + 172) = v48 & 1;
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v1 + 160) = v4;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v4 = sub_1B51E8DB8(0, *((void *)v4 + 2) + 1, 1, v4);
              *uint64_t v47 = v4;
            }
            uint64_t v15 = *((void *)v4 + 2);
            uint64_t v14 = *((void *)v4 + 3);
            uint64_t v16 = v15 + 1;
            if (v15 >= v14 >> 1) {
              uint64_t v4 = sub_1B51E8DB8((char *)(v14 > 1), v15 + 1, 1, v4);
            }
            *((void *)v4 + 2) = v16;
            uint64_t v17 = &v4[8 * v15];
            *((_DWORD *)v17 + 8) = v8;
            *((_DWORD *)v17 + 9) = 0;
            uint64_t v5 = (char **)(v1 + 160);
            *uint64_t v47 = v4;
            if (v16 >= *((void *)v4 + 3) >> 1) {
              goto LABEL_56;
            }
          }
          if (v10 == HIDWORD(v53))
          {
            if (!v52) {
              goto LABEL_88;
            }
          }
          else
          {
            if (v12 == v51) {
              uint64_t v20 = v52;
            }
            else {
              uint64_t v20 = 1;
            }
            if (v20)
            {
              if (v12 == HIDWORD(v53))
              {
                uint64_t v21 = 0;
              }
              else
              {
                uint64_t v21 = v12 + 1;
                if (v12 == -1) {
                  goto LABEL_83;
                }
              }
              uint64_t v54 = v21;
              uint64_t v55 = v12 == HIDWORD(v53);
              if (v12 < v49) {
                goto LABEL_82;
              }
              if (v12 < v51) {
                uint64_t v9 = 1;
              }
              if (v9 != 1) {
                goto LABEL_84;
              }
              uint64_t v24 = 0;
              uint64_t v22 = v21 | ((unint64_t)(v12 == HIDWORD(v53)) << 32);
              uint64_t v23 = v12;
              goto LABEL_55;
            }
          }
          uint64_t v19 = 0;
          uint64_t v22 = 0;
          uint64_t v23 = 0;
          uint64_t v24 = 1;
LABEL_55:
          uint64_t v56 = v19;
          uint64_t v57 = v22;
          uint64_t v58 = v23;
          uint64_t v59 = v24;
          uint64_t v48 = v10 == HIDWORD(v53);
          goto LABEL_21;
        }
LABEL_56:
        sub_1B5288398(v5);
        uint64_t v25 = *((void *)*v5 + 2);
        if (!v25)
        {
          uint64_t v44 = 0;
LABEL_71:
          sub_1B5292BF4(v44);
          return;
        }
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        uint64_t v45 = (void *)(v1 + 80);
        uint64_t v46 = v1;
        uint64_t v29 = 0xFFFFFFFFLL;
        uint64_t v30 = 1;
        uint64_t v31 = 32;
        while (v27 < *((void *)*v5 + 2))
        {
          uint64_t v32 = *(unsigned int *)&(*v5)[v31];
          if (v32 == v29)
          {
            uint64_t v32 = v29;
          }
          else
          {
            uint64_t v33 = *(void *)(v46 + 104);
            uint64_t v34 = *(void *)(v46 + 112);
            __swift_project_boxed_opaque_existential_1(v45, v33);
            uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v34 + 48))(v32, v26, v30 & 1, v33, v34);
            if (v37)
            {
              uint64_t v5 = v47;
            }
            else
            {
              uint64_t v38 = v35;
              uint64_t v39 = v36;
              uint64_t v5 = v47;
              uint64_t v40 = *v47;
              uint64_t v41 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v47 = v40;
              if (v41)
              {
                if ((v28 & 0x8000000000000000) != 0) {
                  goto LABEL_69;
                }
              }
              else
              {
                uint64_t v40 = sub_1B52935B0((uint64_t)v40);
                if ((v28 & 0x8000000000000000) != 0)
                {
LABEL_69:
                  __break(1u);
LABEL_70:
                  uint64_t v43 = *((void *)*v5 + 2);
                  uint64_t v44 = v43 - v28;
                  if (!__OFSUB__(v43, v28)) {
                    goto LABEL_71;
                  }
                  __break(1u);
                  break;
                }
              }
              if (v28 >= *((void *)v40 + 2)) {
                goto LABEL_76;
              }
              uint64_t v30 = 0;
              uint64_t v42 = &v40[8 * v28];
              *((_DWORD *)v42 + 8) = v32;
              *((_DWORD *)v42 + 9) = v38;
              *uint64_t v47 = v40;
              ++v28;
              uint64_t v26 = v39;
            }
          }
          ++v27;
          v31 += 8;
          uint64_t v29 = v32;
          if (v25 == v27) {
            goto LABEL_70;
          }
        }
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
LABEL_8:
      *(void *)(v0 + 160) = sub_1B5293CBC(0, *(void *)(*(void *)(v0 + 160) + 24) >> 1);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(v0 + 172) & 1) == 0)
  {
    if (*(_DWORD *)(v0 + 48) != *(_DWORD *)(v0 + 168))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
}

Swift::Void __swiftcall CharacterMapQuery.fillCodePointMap()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = *(void (***)(char *, uint64_t, uint64_t))(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = type metadata accessor for IndexedUnicode();
  uint64_t v86 = sub_1B5372CD8();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v104 = (uint64_t)&v84 - v8;
  uint64_t v105 = v7;
  uint64_t v88 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v9);
  int v111 = (char *)&v84 - v10;
  uint64_t v11 = *(void *)(v3 + 32);
  uint64_t v12 = *(void *)(v3 + 56);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v112 = v11;
  uint64_t v113 = AssociatedTypeWitness;
  uint64_t v114 = v12;
  uint64_t v115 = AssociatedConformanceWitness;
  uint64_t v14 = (void *)type metadata accessor for UnicodeVariationSequence();
  uint64_t v96 = *(v14 - 1);
  char v97 = v14;
  MEMORY[0x1F4188790](v14);
  char v95 = (char *)&v84 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v112 = v16;
  uint64_t v113 = AssociatedTypeWitness;
  uint64_t v114 = v17;
  uint64_t v115 = AssociatedConformanceWitness;
  uint64_t v107 = type metadata accessor for UnicodeVariationIterator();
  uint64_t v18 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v110 = (uint64_t)&v84 - v19;
  uint64_t v102 = v4;
  uint64_t v98 = v5;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  char v94 = (char *)&v84 - v22;
  uint64_t v93 = sub_1B5373038();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v24 = (char *)&v84 - v23;
  uint64_t v101 = v11;
  uint64_t v100 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  char v99 = (char *)&v84 - v29;
  uint64_t v30 = v2 + *(int *)(v3 + 84);
  uint64_t v103 = v2 + *(int *)(v3 + 108);
  uint64_t v106 = AssociatedTypeWitness;
  if ((sub_1B5372698() & 1) == 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  uint64_t v91 = v27;
  uint64_t v90 = v20;
  uint64_t v89 = v18;
  uint64_t v31 = (char **)(v2 + *(int *)(v3 + 104));
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = *v31;
  uint64_t v34 = v21;
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B5238E9C(0, *((void *)v33 + 2));
  }
  else
  {
    *uint64_t v31 = (char *)sub_1B5293CBC(0, *((void *)v33 + 3) >> 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = (void (**)(char *))(v2 + *(int *)(v3 + 92));
  uint64_t v36 = v3;
  uint64_t v37 = v2;
  uint64_t v38 = *v35;
  uint64_t v109 = v36;
  uint64_t v87 = *(void *)(v106 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v24, v30, v106);
  swift_retain();
  if ((sub_1B5372698() & 1) == 0) {
    goto LABEL_36;
  }
  uint64_t v108 = v37;
  uint64_t v39 = v93;
  swift_getWitnessTable();
  uint64_t v40 = v94;
  sub_1B5372C78();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v24, v39);
  uint64_t v41 = v99;
  v38(v40);
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v90);
  uint64_t v42 = v100;
  uint64_t v43 = v91;
  uint64_t v44 = v41;
  uint64_t v45 = v101;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v91, v44, v101);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v47 = v95;
  v46(v95, v43, v45);
  uint64_t v48 = v97;
  UnicodeVariationSequence.makeIterator()(v97, v110);
  (*(void (**)(char *, void *))(v96 + 8))(v47, v48);
  uint64_t v49 = v105;
  if (*((void *)*v31 + 2) < *((void *)*v31 + 3) >> 1)
  {
    uint64_t v50 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
    uint64_t v102 = (void (**)(char *, uint64_t, uint64_t))(v88 + 32);
    char v51 = (void (**)(uint64_t, char *, uint64_t))(v87 + 24);
    uint64_t v52 = (void (**)(char *, uint64_t))(v88 + 8);
    while (1)
    {
      uint64_t v53 = v104;
      UnicodeVariationIterator.next()(v107, v104);
      if ((*v50)(v53, 1, v49) == 1) {
        break;
      }
      uint64_t v54 = v111;
      (*v102)(v111, v53, v49);
      (*v51)(v103, &v54[*(int *)(v49 + 32)], v106);
      uint64_t v55 = &v54[*(int *)(v49 + 36)];
      int v56 = *v55;
      int v57 = v55[1];
      int v58 = v55[2];
      uint64_t v59 = *v31;
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v31 = v59;
      if ((v60 & 1) == 0)
      {
        uint64_t v59 = sub_1B51E8DB8(0, *((void *)v59 + 2) + 1, 1, v59);
        *uint64_t v31 = v59;
      }
      unint64_t v62 = *((void *)v59 + 2);
      unint64_t v61 = *((void *)v59 + 3);
      if (v62 >= v61 >> 1) {
        uint64_t v59 = sub_1B51E8DB8((char *)(v61 > 1), v62 + 1, 1, v59);
      }
      *((void *)v59 + 2) = v62 + 1;
      uint64_t v63 = &v59[8 * v62];
      *((_DWORD *)v63 + 8) = (v56 << 16) | (v57 << 8) | v58;
      *((_DWORD *)v63 + 9) = 0;
      *uint64_t v31 = v59;
      uint64_t v49 = v105;
      (*v52)(v111, v105);
      if (*((void *)*v31 + 2) >= *((void *)*v31 + 3) >> 1) {
        goto LABEL_16;
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v53, v86);
  }
LABEL_16:
  sub_1B5288398(v31);
  uint64_t v64 = *((void *)*v31 + 2);
  if (v64)
  {
    uint64_t v65 = 0;
    unint64_t v66 = 0;
    unint64_t v67 = 0;
    uint64_t v68 = 0xFFFFFFFFLL;
    LODWORD(v111) = 1;
    uint64_t v69 = 32;
    while (v66 < *((void *)*v31 + 2))
    {
      uint64_t v70 = *(unsigned int *)&(*v31)[v69];
      if (v70 == v68)
      {
        uint64_t v70 = v68;
      }
      else
      {
        uint64_t v71 = (void *)(v108 + *(int *)(v109 + 96));
        uint64_t v72 = v71[3];
        uint64_t v73 = v71[4];
        __swift_project_boxed_opaque_existential_1(v71, v72);
        int v74 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v73 + 48))(v70, v65, v111 & 1, v72, v73);
        if ((v76 & 1) == 0)
        {
          int v77 = v74;
          uint64_t v78 = v75;
          uint64_t v79 = *v31;
          char v80 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v31 = v79;
          if (v80)
          {
            if ((v67 & 0x8000000000000000) != 0) {
              goto LABEL_28;
            }
          }
          else
          {
            uint64_t v79 = sub_1B52935B0((uint64_t)v79);
            if ((v67 & 0x8000000000000000) != 0)
            {
LABEL_28:
              __break(1u);
LABEL_29:
              uint64_t v82 = *((void *)*v31 + 2);
              unint64_t v83 = v82 - v67;
              if (!__OFSUB__(v82, v67)) {
                goto LABEL_30;
              }
              __break(1u);
              break;
            }
          }
          if (v67 >= *((void *)v79 + 2)) {
            goto LABEL_34;
          }
          LODWORD(v111) = 0;
          __int16 v81 = &v79[8 * v67];
          *((_DWORD *)v81 + 8) = v70;
          *((_DWORD *)v81 + 9) = v77;
          *uint64_t v31 = v79;
          ++v67;
          uint64_t v65 = v78;
        }
      }
      ++v66;
      v69 += 8;
      uint64_t v68 = v70;
      if (v64 == v66) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v83 = 0;
LABEL_30:
  sub_1B5292BF4(v83);
  (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v110, v107);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
}

uint64_t UnicodeVariationSequence.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t UnicodeVariationSequence.makeIterator()@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[2];
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, v2, v5, v10);
  sub_1B5372958();
  uint64_t v13 = a1[3];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return UnicodeVariationIterator.init(_:)((uint64_t)v12, AssociatedTypeWitness, v13, AssociatedConformanceWitness, a1[5], a2);
}

void sub_1B5291FE4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 40);
  if (*(unsigned char *)(v1 + 60))
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 21) = 0;
    *(void *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 29) = 1;
    return;
  }
  uint64_t v4 = *(void *)(v1 + 48);
  unint64_t v5 = *(unsigned int *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 32);
  sub_1B5274CD8();
  if ((v7 & 0x100000000) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(_DWORD *)(v1 + 56) = 0;
    *(unsigned char *)(v1 + 60) = 1;
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(v1 + 32);
  if (v8 < v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(void *)(v1 + 40) = v6;
  *(void *)(v1 + 48) = v8;
  *(_DWORD *)(v1 + 56) = v7;
  *(unsigned char *)(v1 + 60) = 0;
  unint64_t v9 = sub_1B52943D0(v5, v7);
  if ((v9 & 0x10000000000) != 0)
  {
LABEL_9:
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v4;
    *(void *)a1 = v3;
    if (!BYTE3(v5))
    {
      *(unsigned char *)(a1 + 24) = BYTE2(v5);
      *(unsigned char *)(a1 + 25) = BYTE1(v5);
      *(unsigned char *)(a1 + 26) = v5;
      *(_WORD *)(a1 + 27) = 256;
LABEL_14:
      *(unsigned char *)(a1 + 29) = 0;
      return;
    }
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v10 = v9;
  uint64_t v11 = *(void *)(v1 + 32);
  sub_1B5274CD8();
  if ((v12 & 0x100000000) != 0)
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
    int v14 = 0;
LABEL_13:
    *(void *)(v1 + 40) = v11;
    *(void *)(v1 + 48) = v13;
    *(_DWORD *)(v1 + 56) = v14;
    *(unsigned char *)(v1 + 60) = BYTE4(v12) & 1;
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v8;
    *(_WORD *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 26) = BYTE2(v10);
    *(unsigned char *)(a1 + 27) = BYTE3(v10);
    *(unsigned char *)(a1 + 28) = BYTE4(v10) & 1;
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)(v1 + 32);
  if (v13 >= v11)
  {
    int v14 = v12;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

void sub_1B5292150(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 56);
  if (*(unsigned char *)(v1 + 76))
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 21) = 0;
    *(void *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 29) = 1;
    return;
  }
  uint64_t v4 = *(void *)(v1 + 64);
  unint64_t v5 = *(unsigned int *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 8);
  if (v6 == v7)
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
    *(_DWORD *)(v1 + 72) = 0;
    *(unsigned char *)(v1 + 76) = 1;
  }
  else
  {
    uint64_t v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    *(void *)(v1 + 48) = v8;
    if (v8 < v6)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    unsigned int v9 = sub_1B5294084(v6);
    *(void *)(v1 + 56) = v6;
    *(void *)(v1 + 64) = v8;
    *(_DWORD *)(v1 + 72) = v9;
    *(unsigned char *)(v1 + 76) = 0;
    unint64_t v10 = sub_1B52943D0(v5, v9);
    if ((v10 & 0x10000000000) == 0)
    {
      unint64_t v11 = v10;
      if (v8 == v7)
      {
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        int v14 = 0;
      }
      else
      {
        uint64_t v13 = v6 + 2;
        if (__OFADD__(v8, 1))
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
        *(void *)(v1 + 48) = v13;
        if (v13 < v8)
        {
LABEL_22:
          __break(1u);
          return;
        }
        int v14 = sub_1B5294084(v6 + 1);
        uint64_t v12 = v6 + 1;
      }
      *(void *)(v1 + 56) = v12;
      *(void *)(v1 + 64) = v13;
      *(_DWORD *)(v1 + 72) = v14;
      *(unsigned char *)(v1 + 76) = v8 == v7;
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v8;
      *(_WORD *)(a1 + 24) = v11;
      *(unsigned char *)(a1 + 26) = BYTE2(v11);
      *(unsigned char *)(a1 + 27) = BYTE3(v11);
      *(unsigned char *)(a1 + 28) = BYTE4(v11) & 1;
      goto LABEL_16;
    }
  }
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v4;
  *(void *)a1 = v3;
  if (BYTE3(v5))
  {
    __break(1u);
    goto LABEL_19;
  }
  *(unsigned char *)(a1 + 24) = BYTE2(v5);
  *(unsigned char *)(a1 + 25) = BYTE1(v5);
  *(unsigned char *)(a1 + 26) = v5;
  *(_WORD *)(a1 + 27) = 256;
LABEL_16:
  *(unsigned char *)(a1 + 29) = 0;
}

void sub_1B5292340(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 52))
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(_WORD *)(a1 + 24) = 0;
    *(void *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 26) = 1;
    return;
  }
  int v3 = *(_DWORD *)(v1 + 32);
  char v4 = *(unsigned char *)(v1 + 36);
  int v5 = *(_DWORD *)(v1 + 40);
  char v6 = *(unsigned char *)(v1 + 44);
  unint64_t v7 = *(unsigned int *)(v1 + 48);
  uint64_t v8 = sub_1B5215948();
  *(void *)(v1 + 32) = v8;
  *(void *)(v1 + 40) = v9;
  *(_DWORD *)(v1 + 48) = v10;
  *(unsigned char *)(v1 + 52) = BYTE4(v10) & 1;
  if ((v10 & 0x100000000) == 0)
  {
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    unint64_t v13 = sub_1B52943D0(v7, v10);
    if ((v13 & 0x10000000000) == 0)
    {
      unint64_t v14 = v13;
      unint64_t v15 = v13 >> 8;
      unint64_t v16 = v13 >> 16;
      unint64_t v17 = v13 >> 24;
      *(void *)(v1 + 32) = sub_1B5215948();
      *(void *)(v1 + 40) = v18;
      *(_DWORD *)(v1 + 48) = v19;
      *(unsigned char *)(v1 + 52) = v20 & 1;
      *(_DWORD *)a1 = v3;
      *(unsigned char *)(a1 + 4) = v4 & 1;
      *(_DWORD *)(a1 + 8) = v11;
      *(unsigned char *)(a1 + 12) = BYTE4(v11) & 1;
      *(_DWORD *)(a1 + 16) = v12;
      *(unsigned char *)(a1 + 20) = BYTE4(v12) & 1;
      *(unsigned char *)(a1 + 21) = v14;
      *(unsigned char *)(a1 + 22) = v15;
      *(unsigned char *)(a1 + 23) = v16;
      *(unsigned char *)(a1 + 24) = v17;
      *(unsigned char *)(a1 + 25) = BYTE4(v14) & 1;
LABEL_8:
      *(unsigned char *)(a1 + 26) = 0;
      return;
    }
  }
  *(_DWORD *)a1 = v3;
  *(unsigned char *)(a1 + 4) = v4 & 1;
  *(_DWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 20) = v6 & 1;
  *(_DWORD *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 12) = v6 & 1;
  if (!BYTE3(v7))
  {
    *(unsigned char *)(a1 + 21) = BYTE2(v7);
    *(unsigned char *)(a1 + 22) = BYTE1(v7);
    *(unsigned char *)(a1 + 23) = v7;
    *(_WORD *)(a1 + 24) = 256;
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t UnicodeVariationIterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v83 = a2;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v80 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v71 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v79 = (char *)&v62 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v78 = (char *)&v62 - v10;
  uint64_t v11 = sub_1B5372CB8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_1B5372CD8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v76 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v75 = (char *)&v62 - v17;
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v62 - v19;
  uint64_t v82 = v11;
  uint64_t v21 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v72 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v62 - v26;
  uint64_t v77 = a1;
  uint64_t v28 = *(int *)(a1 + 52);
  uint64_t v81 = v3;
  uint64_t v29 = v3 + v28;
  int v74 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v74(v20, v3 + v28, v13, v25);
  uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48);
  if (v73(v20, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    uint64_t v30 = type metadata accessor for IndexedUnicode();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v83, 1, 1, v30);
  }
  uint64_t v69 = v27;
  uint64_t v70 = v5;
  unsigned int v68 = *(_DWORD *)&v20[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v67 = v21;
  unint64_t v66 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v66(v27, v20, v82);
  uint64_t v32 = *(void *)(v77 + 16);
  uint64_t v33 = v75;
  uint64_t v64 = *(void *)(v77 + 32);
  uint64_t v65 = v32;
  sub_1B5372D88();
  uint64_t v63 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 40);
  v63(v29, v33, v13);
  uint64_t v34 = v76;
  uint64_t v77 = v29;
  ((void (*)(char *, uint64_t, uint64_t))v74)(v76, v29, v13);
  if (v73(v34, 1, TupleTypeMetadata2) == 1)
  {
    unsigned int v35 = v68;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v13);
    uint64_t v37 = v82;
    uint64_t v36 = v83;
LABEL_8:
    uint64_t v56 = v70;
    int v57 = v69;
    int v58 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
    uint64_t v59 = (uint64_t)v78;
    v58(v78, v69, v70);
    char v60 = &v57[*(int *)(v37 + 36)];
    uint64_t v61 = (uint64_t)v79;
    v58(v79, v60, v56);
    sub_1B52932A8(v59, v61, v35, v56, v36);
    uint64_t v53 = type metadata accessor for IndexedUnicode();
    uint64_t v54 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56);
    uint64_t v55 = v36;
    return v54(v55, 0, 1, v53);
  }
  uint64_t v38 = *(unsigned int *)&v34[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v39 = v72;
  uint64_t v37 = v82;
  v66(v72, v34, v82);
  char v84 = 0;
  uint64_t v40 = v38;
  unsigned int v41 = v68;
  unint64_t v42 = sub_1B52943D0(v68, v40);
  if ((v42 & 0x10000000000) != 0)
  {
    unsigned int v35 = v41;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v37);
    uint64_t v36 = v83;
    goto LABEL_8;
  }
  unint64_t v43 = v42;
  sub_1B5372D88();
  v63(v77, v33, v13);
  uint64_t v44 = v80;
  uint64_t v45 = (uint64_t)v78;
  uint64_t v46 = v69;
  uint64_t v47 = v70;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v78, v69, v70);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v37);
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  uint64_t v49 = (uint64_t)v79;
  v48(v79, v39, v47);
  uint64_t v50 = &v39[*(int *)(v37 + 36)];
  uint64_t v51 = (uint64_t)v71;
  v48(v71, v50, v47);
  uint64_t v52 = v83;
  sub_1B52933C8(v45, v49, v51, v43 | ((HIDWORD(v43) & 1) << 32), v47, v83);
  uint64_t v53 = type metadata accessor for IndexedUnicode();
  uint64_t v54 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56);
  uint64_t v55 = v52;
  return v54(v55, 0, 1, v53);
}

unint64_t IndexedUnicode.variationSelector.getter(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 36);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 3);
  unsigned __int8 v4 = *(unsigned char *)(v2 + 4);
  if (v3 <= 0xF) {
    uint64_t v5 = v3 | 0xFE00;
  }
  else {
    uint64_t v5 = (v3 - 16) | 0xE0100;
  }
  if (v4) {
    uint64_t v5 = 0;
  }
  return v5 | ((unint64_t)v4 << 32);
}

uint64_t IndexedUnicode.codePoint.getter(uint64_t a1)
{
  return (*(unsigned __int8 *)(v1 + *(int *)(a1 + 36)) << 16) | (*(unsigned __int8 *)(v1 + *(int *)(a1 + 36) + 1) << 8) | *(unsigned __int8 *)(v1 + *(int *)(a1 + 36) + 2);
}

Swift::Int_optional __swiftcall CharacterMapQuery.mapCodePoint(_:)(Swift::UInt32 a1)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(v1 + 104));
  unint64_t v5 = sub_1B5263C68(a1, v4);
  unint64_t v7 = *(void *)(v4 + 16);
  if (v5 == v7) {
    goto LABEL_5;
  }
  if (v5 >= v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_DWORD *)(v4 + 32 + 8 * v5) != a1)
  {
LABEL_5:
    unint64_t v5 = 0;
    Swift::Bool v6 = 1;
  }
  else
  {
    Swift::Bool v6 = 0;
    unint64_t v5 = *(unsigned int *)(v4 + 32 + 8 * v5 + 4);
  }
LABEL_7:
  result.Swift::Int value = v5;
  result.is_nil = v6;
  return result;
}

unint64_t sub_1B5292BF4(unint64_t result)
{
  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v2 = *(void *)(*(void *)v1 + 16);
      BOOL v3 = v2 >= result;
      Swift::Int_optional result = v2 - result;
      if (v3) {
        return sub_1B5238E9C(result, v2);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t IndexedUTF16Sequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  a5[4] = a4;
  return swift_retain();
}

uint64_t sub_1B5292C2C()
{
  uint64_t v1 = sub_1B5274DE4(*v0, v0[1], v0[2], v0[3]);
  swift_release();
  return v1;
}

void *sub_1B5292C68(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B527637C(a1, a2, a3, *v3, v3[1], v3[2], v3[3]);
}

void IndexedUTF16Iterator.next()()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1B5274CD8();
  if ((v2 & 0x100000000) == 0 && *(void *)(v0 + 32) < v1) {
    __break(1u);
  }
}

void sub_1B5292CD8(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  sub_1B5274CD8();
  if ((v4 & 0x100000000) != 0)
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
    int v6 = 0;
LABEL_5:
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 20) = BYTE4(v4) & 1;
    return;
  }
  uint64_t v5 = *(void *)(v1 + 32);
  if (v5 >= v3)
  {
    int v6 = v4;
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_1B5292D40@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if ((a4 & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) != 0)
    {
      uint64_t v5 = 0;
      unint64_t v6 = 0;
      int v7 = 0;
      char v9 = 1;
      unsigned int v10 = a4;
      BOOL v8 = 1;
      goto LABEL_15;
    }
    goto LABEL_19;
  }
  if ((a2 & 0x100000000) == 0 && a4 == a2)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    int v7 = 0;
    BOOL v8 = 0;
    char v9 = 1;
    unsigned int v10 = a2;
LABEL_15:
    *(_DWORD *)a5 = result;
    *(unsigned char *)(a5 + 4) = BYTE4(result) & 1;
    *(_DWORD *)(a5 + 8) = a2;
    *(unsigned char *)(a5 + 12) = BYTE4(a2) & 1;
    *(void *)(a5 + 16) = a3;
    *(_DWORD *)(a5 + 24) = v10;
    *(unsigned char *)(a5 + 28) = v8;
    *(void *)(a5 + 32) = v5;
    *(void *)(a5 + 40) = v6;
    *(_DWORD *)(a5 + 48) = v7;
    *(unsigned char *)(a5 + 52) = v9;
    return result;
  }
  BOOL v8 = a4 == HIDWORD(a3);
  if (a4 == HIDWORD(a3))
  {
    unsigned int v10 = 0;
  }
  else
  {
    unsigned int v10 = a4 + 1;
    if (a4 == -1) {
      goto LABEL_17;
    }
  }
  if ((result & 0x100000000) == 0)
  {
    if (a4 >= result)
    {
      if ((a2 & 0x100000000) != 0 || a4 < a2)
      {
        char v9 = 0;
        uint64_t v5 = a4;
        unint64_t v6 = v10 | ((unint64_t)(a4 == HIDWORD(a3)) << 32);
        int v7 = a4;
        goto LABEL_15;
      }
      goto LABEL_18;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t UnicodeVariationIterator.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1B5372CB8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_1B5372CD8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v20 - v15;
  v20[0] = a2;
  v20[1] = a3;
  void v20[2] = a4;
  v20[3] = a5;
  uint64_t v17 = a6 + *(int *)(type metadata accessor for UnicodeVariationIterator() + 52);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v17, 1, 1, TupleTypeMetadata2);
  uint64_t v18 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a6, a1, a2);
  sub_1B5372D88();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 40))(v17, v16, v13);
}

uint64_t sub_1B5293010@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  UnicodeVariationSequence.makeIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void *))(*(a1 - 1) + 8);
  return v4(v2, a1);
}

uint64_t IndexedUnicode.startIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t IndexedUnicode.startIndex.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*IndexedUnicode.startIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexedUnicode.uvsIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t IndexedUnicode.uvsIndex.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

uint64_t (*IndexedUnicode.uvsIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexedUnicode.endIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 32));
}

uint64_t IndexedUnicode.endIndex.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 32), a1);
}

uint64_t (*IndexedUnicode.endIndex.modify())(void)
{
  return nullsub_1;
}

unint64_t IndexedUnicode.variation.getter(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 36)) | ((unint64_t)*(unsigned __int8 *)(v1 + *(int *)(a1 + 36) + 4) << 32);
}

uint64_t IndexedUnicode.variation.setter(uint64_t result, uint64_t a2)
{
  uint64_t v3 = v2 + *(int *)(a2 + 36);
  *(_WORD *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 2) = BYTE2(result);
  *(unsigned char *)(v3 + 3) = BYTE3(result);
  *(unsigned char *)(v3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*IndexedUnicode.variation.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1B52932A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a4 - 8);
  unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  v10(a5, a1, a4);
  uint64_t v11 = (int *)type metadata accessor for IndexedUnicode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a5 + v11[7], a2, a4);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(a5 + v11[8], a2, a4);
  if (HIBYTE(a3))
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = a5 + v11[9];
    *(unsigned char *)uint64_t v13 = BYTE2(a3);
    *(unsigned char *)(v13 + 1) = BYTE1(a3);
    *(unsigned char *)(v13 + 2) = a3;
    *(_WORD *)(v13 + 3) = 256;
  }
  return result;
}

uint64_t sub_1B52933C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v11 = a4 >> 8;
  unint64_t v12 = a4 >> 16;
  unint64_t v17 = a4 >> 24;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32);
  v13(a6, a1, a5);
  uint64_t v14 = (int *)type metadata accessor for IndexedUnicode();
  v13(a6 + v14[7], a2, a5);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(a6 + v14[8], a3, a5);
  uint64_t v16 = (unsigned char *)(a6 + v14[9]);
  *uint64_t v16 = a4;
  v16[1] = v11;
  void v16[2] = v12;
  _OWORD v16[3] = v17;
  v16[4] = BYTE4(a4) & 1;
  return result;
}

char *sub_1B52934D4(uint64_t a1)
{
  return sub_1B51E8060(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B52934E8(uint64_t a1)
{
  return sub_1B51E8280(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1B52934FC(void *a1)
{
  return sub_1B51E85D4(0, a1[2], 0, a1);
}

char *sub_1B5293510(uint64_t a1)
{
  return sub_1B51E85E8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1B5293524(void *a1)
{
  return sub_1B51E85AC(0, a1[2], 0, a1);
}

void *sub_1B5293538(void *a1)
{
  return sub_1B51E85C0(0, a1[2], 0, a1);
}

char *sub_1B529354C(uint64_t a1)
{
  return sub_1B51E85A0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B5293560(uint64_t a1)
{
  return sub_1B51E849C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B5293574(uint64_t a1)
{
  return sub_1B51E85F4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B5293588(uint64_t a1)
{
  return sub_1B51E8918(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B529359C(uint64_t a1)
{
  return sub_1B51E7F50(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B52935B0(uint64_t a1)
{
  return sub_1B51E8DB8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B52935C4(uint64_t a1)
{
  return sub_1B51E9110(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1B52935D8(void *a1)
{
  return sub_1B51E9318(0, a1[2], 0, a1);
}

char *sub_1B52935EC(uint64_t a1)
{
  return sub_1B51E943C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1B5293600(void *a1)
{
  return sub_1B51E9674(0, a1[2], 0, a1);
}

char *sub_1B5293614(uint64_t a1)
{
  return sub_1B51E9798(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B5293628(uint64_t a1)
{
  return sub_1B51E9894(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B529363C(uint64_t a1)
{
  return sub_1B51E99AC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B5293650(uint64_t a1)
{
  return sub_1B51E99B8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1B5293664(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B53731D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if (v3) {
      return sub_1B51EB6CC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_137;
  }
  uint64_t v6 = result;
  char v95 = a1;
  if (v3 > 1)
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48E28);
    uint64_t result = sub_1B5372A88();
    *(void *)(result + 16) = v7;
    uint64_t v98 = result;
    uint64_t v102 = (char *)(result + 32);
LABEL_13:
    uint64_t v9 = 0;
    uint64_t v10 = *a1;
    uint64_t v96 = *a1 - 8;
    uint64_t v97 = *a1 + 20;
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t v99 = v6;
    uint64_t v100 = v3;
    uint64_t v101 = v10;
    while (1)
    {
      uint64_t v13 = v9++;
      if (v9 < v3)
      {
        uint64_t v14 = (unsigned int *)(v10 + 8 * v9);
        unsigned int v15 = *v14;
        unsigned int v16 = v14[1];
        unint64_t v17 = (unsigned int *)(v10 + 8 * v13);
        unsigned int v18 = *v17;
        int v19 = v16 < v17[1];
        BOOL v20 = v15 == v18;
        BOOL v21 = v15 < v18;
        if (!v20) {
          int v19 = v21;
        }
        uint64_t v9 = v13 + 2;
        if (v13 + 2 < v3)
        {
          uint64_t v22 = (unsigned int *)(v97 + 8 * v13);
          while (1)
          {
            unsigned int v23 = *(v22 - 1);
            unsigned int v24 = *v22;
            BOOL v25 = *v22 < v16;
            BOOL v20 = v23 == v15;
            int v26 = v23 < v15;
            if (v20) {
              int v26 = v25;
            }
            if (v19 != v26) {
              break;
            }
            v22 += 2;
            ++v9;
            unsigned int v16 = v24;
            unsigned int v15 = v23;
            if (v3 == v9)
            {
              uint64_t v9 = v3;
              break;
            }
          }
        }
        if (v19)
        {
          if (v9 < v13) {
            goto LABEL_139;
          }
          if (v13 < v9)
          {
            uint64_t v27 = (uint64_t *)(v96 + 8 * v9);
            uint64_t v28 = v9;
            uint64_t v29 = v13;
            uint64_t v30 = (uint64_t *)(v10 + 8 * v13);
            do
            {
              if (v29 != --v28)
              {
                if (!v10) {
                  goto LABEL_144;
                }
                uint64_t v31 = *v30;
                *uint64_t v30 = *v27;
                *uint64_t v27 = v31;
              }
              ++v29;
              --v27;
              ++v30;
            }
            while (v29 < v28);
          }
        }
      }
      if (v9 < v3)
      {
        if (__OFSUB__(v9, v13)) {
          goto LABEL_136;
        }
        if (v9 - v13 < v6)
        {
          uint64_t v32 = v13 + v6;
          if (__OFADD__(v13, v6)) {
            goto LABEL_140;
          }
          if (v32 >= v3) {
            uint64_t v32 = v3;
          }
          if (v32 < v13)
          {
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
            return result;
          }
          if (v9 != v32)
          {
            uint64_t v33 = (uint32x2_t *)(v96 + 8 * v9);
            do
            {
              int32x2_t v34 = *(int32x2_t *)(v10 + 8 * v9);
              uint64_t v35 = v13;
              uint64_t v36 = v33;
              do
              {
                uint32x2_t v37 = vcgt_u32(*v36, (uint32x2_t)v34);
                if (vceq_s32(v34, (int32x2_t)*v36).u8[0]) {
                  __int8 v38 = v37.i8[4];
                }
                else {
                  __int8 v38 = v37.i8[0];
                }
                if ((v38 & 1) == 0) {
                  break;
                }
                if (!v10) {
                  goto LABEL_142;
                }
                v36[1] = *v36;
                *v36-- = (uint32x2_t)v34;
                ++v35;
              }
              while (v9 != v35);
              ++v9;
              ++v33;
            }
            while (v9 != v32);
            uint64_t v9 = v32;
          }
        }
      }
      if (v9 < v13) {
        goto LABEL_131;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B51DA83C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
        uint64_t v11 = result;
      }
      unint64_t v40 = *(void *)(v11 + 16);
      unint64_t v39 = *(void *)(v11 + 24);
      unint64_t v12 = v40 + 1;
      uint64_t v10 = v101;
      if (v40 >= v39 >> 1)
      {
        uint64_t result = (uint64_t)sub_1B51DA83C((char *)(v39 > 1), v40 + 1, 1, (char *)v11);
        uint64_t v10 = v101;
        uint64_t v11 = result;
      }
      *(void *)(v11 + 16) = v12;
      uint64_t v41 = v11 + 32;
      unint64_t v42 = (uint64_t *)(v11 + 32 + 16 * v40);
      *unint64_t v42 = v13;
      v42[1] = v9;
      if (v40)
      {
        while (1)
        {
          unint64_t v43 = v12 - 1;
          if (v12 >= 4)
          {
            unint64_t v48 = v41 + 16 * v12;
            uint64_t v49 = *(void *)(v48 - 64);
            uint64_t v50 = *(void *)(v48 - 56);
            BOOL v54 = __OFSUB__(v50, v49);
            uint64_t v51 = v50 - v49;
            if (v54) {
              goto LABEL_120;
            }
            uint64_t v53 = *(void *)(v48 - 48);
            uint64_t v52 = *(void *)(v48 - 40);
            BOOL v54 = __OFSUB__(v52, v53);
            uint64_t v46 = v52 - v53;
            char v47 = v54;
            if (v54) {
              goto LABEL_121;
            }
            unint64_t v55 = v12 - 2;
            uint64_t v56 = (uint64_t *)(v41 + 16 * (v12 - 2));
            uint64_t v58 = *v56;
            uint64_t v57 = v56[1];
            BOOL v54 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v54) {
              goto LABEL_122;
            }
            BOOL v54 = __OFADD__(v46, v59);
            uint64_t v60 = v46 + v59;
            if (v54) {
              goto LABEL_124;
            }
            if (v60 >= v51)
            {
              uint64_t v78 = (uint64_t *)(v41 + 16 * v43);
              uint64_t v80 = *v78;
              uint64_t v79 = v78[1];
              BOOL v54 = __OFSUB__(v79, v80);
              uint64_t v81 = v79 - v80;
              if (v54) {
                goto LABEL_130;
              }
              BOOL v71 = v46 < v81;
              goto LABEL_90;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v72 = *(void *)(v11 + 32);
              uint64_t v73 = *(void *)(v11 + 40);
              BOOL v54 = __OFSUB__(v73, v72);
              uint64_t v65 = v73 - v72;
              char v66 = v54;
              goto LABEL_84;
            }
            uint64_t v45 = *(void *)(v11 + 32);
            uint64_t v44 = *(void *)(v11 + 40);
            BOOL v54 = __OFSUB__(v44, v45);
            uint64_t v46 = v44 - v45;
            char v47 = v54;
          }
          if (v47) {
            goto LABEL_123;
          }
          unint64_t v55 = v12 - 2;
          uint64_t v61 = (uint64_t *)(v41 + 16 * (v12 - 2));
          uint64_t v63 = *v61;
          uint64_t v62 = v61[1];
          BOOL v64 = __OFSUB__(v62, v63);
          uint64_t v65 = v62 - v63;
          char v66 = v64;
          if (v64) {
            goto LABEL_125;
          }
          uint64_t v67 = (uint64_t *)(v41 + 16 * v43);
          uint64_t v69 = *v67;
          uint64_t v68 = v67[1];
          BOOL v54 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v54) {
            goto LABEL_127;
          }
          if (__OFADD__(v65, v70)) {
            goto LABEL_129;
          }
          if (v65 + v70 >= v46)
          {
            BOOL v71 = v46 < v70;
LABEL_90:
            if (v71) {
              unint64_t v43 = v55;
            }
            goto LABEL_92;
          }
LABEL_84:
          if (v66) {
            goto LABEL_126;
          }
          int v74 = (uint64_t *)(v41 + 16 * v43);
          uint64_t v76 = *v74;
          uint64_t v75 = v74[1];
          BOOL v54 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          if (v54) {
            goto LABEL_128;
          }
          if (v77 < v65) {
            goto LABEL_15;
          }
LABEL_92:
          unint64_t v82 = v43 - 1;
          if (v43 - 1 >= v12)
          {
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
            goto LABEL_141;
          }
          if (!v10) {
            goto LABEL_143;
          }
          uint64_t v83 = (uint64_t *)(v41 + 16 * v82);
          uint64_t v84 = *v83;
          uint64_t v85 = (void *)(v41 + 16 * v43);
          uint64_t v86 = v85[1];
          uint64_t result = sub_1B51EB7EC((char *)(v10 + 8 * *v83), (char *)(v10 + 8 * *v85), v10 + 8 * v86, v102);
          if (v1) {
            goto LABEL_100;
          }
          if (v86 < v84) {
            goto LABEL_117;
          }
          if (v43 > *(void *)(v11 + 16)) {
            goto LABEL_118;
          }
          *uint64_t v83 = v84;
          *(void *)(v41 + 16 * v82 + 8) = v86;
          unint64_t v87 = *(void *)(v11 + 16);
          if (v43 >= v87) {
            goto LABEL_119;
          }
          unint64_t v12 = v87 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v41 + 16 * v43), v85 + 2, 16 * (v87 - 1 - v43));
          *(void *)(v11 + 16) = v87 - 1;
          uint64_t v10 = v101;
          if (v87 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_15:
      uint64_t v6 = v99;
      uint64_t v3 = v100;
      if (v9 >= v100)
      {
        uint64_t v8 = v98;
        goto LABEL_103;
      }
    }
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v102 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if (v3 == 1)
  {
    uint64_t v98 = MEMORY[0x1E4FBC860];
    goto LABEL_13;
  }
  unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_103:
  uint64_t result = v11;
  uint64_t v98 = v8;
  if (v12 >= 2)
  {
    uint64_t v88 = *v95;
    do
    {
      unint64_t v89 = v12 - 2;
      if (v12 < 2) {
        goto LABEL_132;
      }
      if (!v88) {
        goto LABEL_145;
      }
      uint64_t v90 = result;
      uint64_t v91 = *(void *)(result + 32 + 16 * v89);
      uint64_t v92 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
      uint64_t result = sub_1B51EB7EC((char *)(v88 + 8 * v91), (char *)(v88 + 8 * *(void *)(result + 32 + 16 * (v12 - 1))), v88 + 8 * v92, v102);
      if (v1) {
        break;
      }
      if (v92 < v91) {
        goto LABEL_133;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B51DA938(v90);
        uint64_t v90 = result;
      }
      if (v89 >= *(void *)(v90 + 16)) {
        goto LABEL_134;
      }
      uint64_t v93 = (void *)(v90 + 32 + 16 * v89);
      *uint64_t v93 = v91;
      v93[1] = v92;
      unint64_t v94 = *(void *)(v90 + 16);
      if (v12 > v94) {
        goto LABEL_135;
      }
      memmove((void *)(v90 + 32 + 16 * (v12 - 1)), (const void *)(v90 + 32 + 16 * v12), 16 * (v94 - v12));
      uint64_t result = v90;
      *(void *)(v90 + 16) = v94 - 1;
      unint64_t v12 = v94 - 1;
    }
    while (v94 > 2);
  }
LABEL_100:
  swift_bridgeObjectRelease();
  *(void *)(v98 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void *sub_1B5293CBC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47A08);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 25;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 3);
  return v4;
}

unint64_t sub_1B5293D34(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1;
  }
  uint64_t v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  unint64_t v6 = v5 | (v4 << 16);
  unint64_t v7 = sub_1B5293F74(0xFuLL, a1, a2);
  unint64_t result = sub_1B5293F74(v6, a1, a2);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1B53727E8();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1B5372FB8();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1B53727F8();
        unint64_t v7 = result;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1B5372FB8();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_40;
  }
  return 0;
}

unint64_t sub_1B5293F74(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_1B5294014(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1B51DAAC0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1B5294014(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_1B51D93B4(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5294084(uint64_t result)
{
  if (*v1 > result || v1[1] <= result)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  BOOL v5 = __OFADD__(v3, v4);
  uint64_t v6 = v3 + v4;
  if (v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v6 < v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v3 > result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v6 <= result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v5 = __OFSUB__(result, v3);
  uint64_t v7 = result - v3;
  if (v5)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  int v8 = *(char *)(v1[3] + v7);
  if ((v8 & 0x80000000) == 0) {
    return v8;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1B52940F0()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B5294100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B528B374(a1, a2);
}

uint64_t sub_1B529410C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a5) & 0xF;
  }
  else {
    uint64_t v8 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (a2)
  {
    uint64_t v9 = a3;
    if (a3)
    {
      if (a3 < 0)
      {
        __break(1u);
        JUMPOUT(0x1B5294338);
      }
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      while (1)
      {
        if (v12 >= v8)
        {
          uint64_t v9 = v11;
          goto LABEL_31;
        }
        if ((a5 & 0x1000000000000000) != 0)
        {
          int v21 = a1;
          int v13 = sub_1B5372F88();
          a1 = v21;
        }
        else
        {
          if ((a5 & 0x2000000000000000) != 0)
          {
            v23[0] = a4;
            v23[1] = a5 & 0xFFFFFFFFFFFFFFLL;
            int v13 = *((unsigned __int8 *)v23 + v12);
            if (*((char *)v23 + v12) < 0)
            {
              switch(__clz(v13 ^ 0xFF))
              {
                case 0x1Au:
                  unsigned int v16 = (char *)v23 + v12;
LABEL_21:
                  int v13 = v16[1] & 0x3F | ((v13 & 0x1F) << 6);
                  uint64_t v14 = 2;
                  break;
                case 0x1Bu:
                  uint64_t v17 = (char *)v23 + v12;
LABEL_25:
                  int v13 = ((v13 & 0xF) << 12) | ((v17[1] & 0x3F) << 6) | v17[2] & 0x3F;
                  uint64_t v14 = 3;
                  break;
                case 0x1Cu:
                  int v18 = (char *)v23 + v12;
LABEL_27:
                  int v13 = ((v13 & 0xF) << 18) | ((v18[1] & 0x3F) << 12) | ((v18[2] & 0x3F) << 6) | v18[3] & 0x3F;
                  uint64_t v14 = 4;
                  break;
                default:
                  goto LABEL_9;
              }
              goto LABEL_10;
            }
          }
          else
          {
            uint64_t v15 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
            if ((a4 & 0x1000000000000000) == 0)
            {
              unint64_t v22 = a1;
              uint64_t v19 = sub_1B5372FB8();
              a1 = v22;
              uint64_t v15 = v19;
            }
            int v13 = *(unsigned __int8 *)(v15 + v12);
            if (*(char *)(v15 + v12) < 0)
            {
              switch(__clz(v13 ^ 0xFF))
              {
                case 0x1Au:
                  unsigned int v16 = (char *)(v12 + v15);
                  goto LABEL_21;
                case 0x1Bu:
                  uint64_t v17 = (char *)(v12 + v15);
                  goto LABEL_25;
                case 0x1Cu:
                  int v18 = (char *)(v12 + v15);
                  goto LABEL_27;
                default:
                  break;
              }
            }
          }
LABEL_9:
          uint64_t v14 = 1;
        }
LABEL_10:
        *(_DWORD *)(a2 + 4 * v11) = v13;
        v12 += v14;
        if (v9 == ++v11) {
          goto LABEL_31;
        }
      }
    }
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v9 = 0;
  }
LABEL_31:
  *a1 = a4;
  a1[1] = a5;
  a1[2] = v12;
  a1[3] = v8;
  return v9;
}

void *sub_1B5294358(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D48E30);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 29;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 2);
  return v4;
}

unint64_t sub_1B52943D0(unint64_t result, uint64_t a2)
{
  if (!BYTE3(result))
  {
    if ((a2 & 0x100000000) != 0)
    {
      int v3 = 0;
      uint64_t v2 = 0x100000000;
    }
    else if (a2 >> 4 == 4064)
    {
      uint64_t v2 = 0;
      int v3 = a2 - 65024;
    }
    else
    {
      if ((a2 - 917760) > 0xEF)
      {
        unint64_t v5 = 0;
        unsigned __int8 v4 = 1;
        return v5 | ((unint64_t)v4 << 40);
      }
      uint64_t v2 = 0;
      int v3 = a2 - 917744;
    }
    unsigned __int8 v4 = 0;
    unint64_t v5 = v2 | result & 0xFF00 | WORD1(result) & 0xFF00FFFF | (result << 16) | (v3 << 24);
    return v5 | ((unint64_t)v4 << 40);
  }
  __break(1u);
  return result;
}

unint64_t sub_1B5294468@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B528A7D0(*(void *)(v1 + 32), *(unsigned char *)(v1 + 48), *(void *)(v1 + 16), a1, *(void *)(v1 + 24));
}

uint64_t type metadata accessor for CharacterMapQuery()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B52944B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9D47940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for IndexedUnicode()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for UnicodeVariationIterator()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for UnicodeVariationSequence()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1B5294564()
{
  unint64_t result = qword_1E9D48C18;
  if (!qword_1E9D48C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9D48C18);
  }
  return result;
}

unint64_t sub_1B52945BC()
{
  unint64_t result = qword_1E9D48C20[0];
  if (!qword_1E9D48C20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9D48C20);
  }
  return result;
}

uint64_t sub_1B5294610()
{
  return swift_getWitnessTable();
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for UnicodeVariation()
{
  return &type metadata for UnicodeVariation;
}

uint64_t getEnumTagSinglePayload for VariationLookupResult(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VariationLookupResult(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1B52946A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B52946BC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for VariationLookupResult()
{
  return &type metadata for VariationLookupResult;
}

uint64_t destroy for CharacterMap(uint64_t a1)
{
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  if (*(void *)(a1 + 72))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  return result;
}

uint64_t initializeWithCopy for CharacterMap(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  unint64_t v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 64);
    *unint64_t v5 = *v6;
    *(_OWORD *)(a1 + 64) = v9;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for CharacterMap(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v4)
    {
      *(void *)(a1 + 72) = v4;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 48, a2 + 48);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 48);
    long long v6 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 64) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
LABEL_8:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for CharacterMap(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacterMap(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacterMap(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterMap()
{
  return &type metadata for CharacterMap;
}

unsigned char *storeEnumTagSinglePayload for CharacterMapQueryStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5294ABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterMapQueryStatus()
{
  return &type metadata for CharacterMapQueryStatus;
}

uint64_t sub_1B5294AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 96);
}

uint64_t sub_1B5294AFC()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      if (v4 <= 0x3F)
      {
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        if (v5 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_1B5294CE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v60 = *(void *)(v4 - 8);
  int v65 = *(_DWORD *)(v60 + 80);
  uint64_t v5 = v65;
  uint64_t v6 = *(void *)(v60 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  int v8 = *(_DWORD *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = v8;
  uint64_t v58 = v6 + v8;
  uint64_t v59 = *(void *)(v7 - 8);
  unint64_t v10 = (v6 + v9 + ((v65 + 8) & ~(unint64_t)v65)) & ~v9;
  uint64_t v11 = *(void *)(v59 + 64);
  uint64_t v62 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v64 = AssociatedTypeWitness;
  int v13 = *(_DWORD *)(v63 + 80);
  uint64_t v14 = v13;
  uint64_t v57 = v11 + v13;
  unint64_t v15 = (v11 + v14 + v10) & ~v14;
  uint64_t v16 = *(void *)(v63 + 64);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = v16 + v19;
  unint64_t v21 = (v16 + v19 + v15) & ~v19;
  uint64_t v22 = *(void *)(v18 + 64) + 7;
  unint64_t v23 = ((v14
        + 8
        + ((((((((v22 + v21) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
      + v16;
  unint64_t v24 = v8 | (unint64_t)v65 | v13 | v19;
  if (v24 > 7 || ((v8 | v65 | v13 | *(_DWORD *)(v18 + 80)) & 0x100000) != 0 || v23 > 0x18)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    uint64_t v28 = v27 + ((v24 & 0xF8 ^ 0x1F8) & (v24 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v66 = v13 + 8;
    unint64_t v29 = ~(unint64_t)v8;
    unint64_t v30 = ~(unint64_t)v13;
    uint64_t v31 = ~v19;
    *a1 = *a2;
    uint64_t v32 = *(void (**)(unint64_t, unint64_t, uint64_t))(v60 + 16);
    uint64_t v61 = v17;
    v32(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5, v62);
    uint64_t v33 = ((((unint64_t)a1 + v5 + 8) & ~v5) + v58) & ~v9;
    uint64_t v34 = ((((unint64_t)a2 + v5 + 8) & ~v5) + v58) & v29;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v33, v34, v7);
    unint64_t v35 = (v33 + v57) & v30;
    unint64_t v68 = v30;
    unint64_t v36 = (v34 + v57) & v30;
    uint32x2_t v37 = *(void (**)(unint64_t, unint64_t, uint64_t))(v63 + 16);
    v37(v35, v36, v64);
    unint64_t v38 = (v35 + v20) & v31;
    unint64_t v39 = (v36 + v20) & v31;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 16))(v38, v39, v61);
    unint64_t v40 = (void *)((v22 + v38) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v41 = (void *)((v22 + v39) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v42 = v41[1];
    *unint64_t v40 = *v41;
    v40[1] = v42;
    unint64_t v43 = ((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v44 = ((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = *(void *)(v44 + 24);
    *(void *)(v43 + 24) = v45;
    *(void *)(v43 + 32) = *(void *)(v44 + 32);
    uint64_t v46 = **(void (***)(unint64_t, unint64_t, uint64_t))(v45 - 8);
    swift_retain();
    v46(v43, v44, v45);
    unint64_t v47 = (v43 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = (v44 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = *(void *)(v48 + 24);
    if (v49 < 0xFFFFFFFF)
    {
      long long v50 = *(_OWORD *)v48;
      long long v51 = *(_OWORD *)(v48 + 16);
      *(void *)(v47 + 32) = *(void *)(v48 + 32);
      *(_OWORD *)unint64_t v47 = v50;
      *(_OWORD *)(v47 + 16) = v51;
    }
    else
    {
      *(void *)(v47 + 24) = v49;
      *(void *)(v47 + 32) = *(void *)(v48 + 32);
      (**(void (***)(unint64_t, unint64_t))(v49 - 8))(v47, v48);
    }
    uint64_t v52 = (void *)((v47 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v53 = (void *)((v48 + 47) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v52 = *v53;
    unint64_t v54 = ((unint64_t)v52 + v66) & v68;
    unint64_t v55 = ((unint64_t)v53 + v66) & v68;
    swift_bridgeObjectRetain();
    v37(v54, v55, v64);
    return a1;
  }
  return (uint64_t *)v28;
}

uint64_t sub_1B52951BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t, void))(v3 + 8))(v5, *(void *)(a2 + 16));
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(void *)(v4 + 56) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, void))(v6 + 8))(v8, *(void *)(a2 + 24));
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v23 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  uint64_t v24 = v11 + 8;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (v8 + v9 + v12) & ~v12;
  v23(v13, AssociatedTypeWitness);
  uint64_t v14 = *(void *)(v24 + 56);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16 + 8;
  unint64_t v18 = (v13 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v18, v15);
  unint64_t v19 = (*(void *)(v17 + 56) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  unint64_t v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v20);
  unint64_t v21 = (v20 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v21 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(v21);
  }
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(unint64_t, uint64_t))v23)((v12 + ((v21 + 47) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v12, AssociatedTypeWitness);
}

void *sub_1B52953F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t, void))(v4 + 16))(v7, v8, *(void *)(a3 + 16));
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = (v13 + v7) & ~v12;
  uint64_t v15 = (v13 + v8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, void))(v10 + 16))(v14, v15, *(void *)(a3 + 24));
  uint64_t v16 = *(void *)(v11 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = v18 + 16;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v48 = ~v20;
  unint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  uint64_t v21 = (v16 + v20 + v14) & ~v20;
  uint64_t v22 = (v16 + v20 + v15) & ~v20;
  v49(v21, v22, AssociatedTypeWitness);
  uint64_t v23 = *(void *)(v19 + 48);
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25 + 16;
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = (v23 + v27 + v21) & ~v27;
  uint64_t v29 = (v23 + v27 + v22) & ~v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v28, v29, v24);
  uint64_t v30 = *(void *)(v26 + 48) + 7;
  uint64_t v31 = (void *)((v30 + v28) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)((v30 + v29) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  unint64_t v34 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = *(void *)(v35 + 24);
  *(void *)(v34 + 24) = v36;
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  uint32x2_t v37 = **(void (***)(unint64_t, unint64_t, uint64_t))(v36 - 8);
  swift_retain();
  v37(v34, v35, v36);
  unint64_t v38 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = *(void *)(v39 + 24);
  if (v40 < 0xFFFFFFFF)
  {
    long long v41 = *(_OWORD *)v39;
    long long v42 = *(_OWORD *)(v39 + 16);
    *(void *)(v38 + 32) = *(void *)(v39 + 32);
    *(_OWORD *)unint64_t v38 = v41;
    *(_OWORD *)(v38 + 16) = v42;
  }
  else
  {
    *(void *)(v38 + 24) = v40;
    *(void *)(v38 + 32) = *(void *)(v39 + 32);
    (**(void (***)(unint64_t, unint64_t))(v40 - 8))(v38, v39);
  }
  unint64_t v43 = (void *)((v38 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v44 = (void *)((v39 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v43 = *v44;
  uint64_t v45 = ((unint64_t)v43 + v20 + 8) & v48;
  uint64_t v46 = ((unint64_t)v44 + v20 + 8) & v48;
  swift_bridgeObjectRetain();
  v49(v45, v46, AssociatedTypeWitness);
  return a1;
}

void *sub_1B5295728(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t, void))(v4 + 24))(v7, v8, *(void *)(a3 + 16));
  uint64_t v9 = *(void *)(v5 + 40);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = (v13 + v7) & ~v12;
  uint64_t v15 = (v13 + v8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, void))(v10 + 24))(v14, v15, *(void *)(a3 + 24));
  uint64_t v16 = *(void *)(v11 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = v18 + 24;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  unint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24);
  uint64_t v21 = (v16 + v20 + v14) & ~v20;
  uint64_t v22 = (v16 + v20 + v15) & ~v20;
  v44(v21, v22, AssociatedTypeWitness);
  uint64_t v23 = *(void *)(v19 + 40);
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25 + 24;
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = (v23 + v27 + v21) & ~v27;
  uint64_t v29 = (v23 + v27 + v22) & ~v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 24))(v28, v29, v24);
  uint64_t v30 = *(void *)(v26 + 40) + 7;
  uint64_t v31 = (void *)((v30 + v28) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)((v30 + v29) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  swift_retain();
  swift_release();
  unint64_t v34 = (uint64_t *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8), v34);
  unint64_t v35 = ((((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = ((unint64_t)v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = *(void *)(v36 + 24);
  if (*(void *)(v35 + 24) < 0xFFFFFFFFuLL)
  {
    if (v37 >= 0xFFFFFFFF)
    {
      *(void *)(v35 + 24) = v37;
      *(void *)(v35 + 32) = *(void *)(v36 + 32);
      (**(void (***)(unint64_t, unint64_t))(v37 - 8))(((((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8, v36);
      goto LABEL_8;
    }
LABEL_7:
    long long v39 = *(_OWORD *)v36;
    long long v40 = *(_OWORD *)(v36 + 16);
    *(void *)(v35 + 32) = *(void *)(v36 + 32);
    *(_OWORD *)unint64_t v35 = v39;
    *(_OWORD *)(v35 + 16) = v40;
    goto LABEL_8;
  }
  unint64_t v38 = (uint64_t *)(((((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  if (v37 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1(v38, (uint64_t *)v36);
LABEL_8:
  long long v41 = (void *)((v35 + 47) & 0xFFFFFFFFFFFFFFF8);
  long long v42 = (void *)((v36 + 47) & 0xFFFFFFFFFFFFFFF8);
  *long long v41 = *v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44(((unint64_t)v41 + v20 + 8) & ~v20, ((unint64_t)v42 + v20 + 8) & ~v20, AssociatedTypeWitness);
  return a1;
}

void *sub_1B5295A54(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t, void))(v4 + 32))(v7, v8, *(void *)(a3 + 16));
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = (v13 + v7) & ~v12;
  uint64_t v15 = (v13 + v8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, void))(v10 + 32))(v14, v15, *(void *)(a3 + 24));
  uint64_t v16 = *(void *)(v11 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
  uint64_t v20 = v18 + 32;
  uint64_t v21 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v22 = (v16 + v21 + v14) & ~v21;
  uint64_t v23 = (v16 + v21 + v15) & ~v21;
  v19(v22, v23, AssociatedTypeWitness);
  uint64_t v24 = *(void *)(v20 + 32);
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = v26 + 32;
  uint64_t v28 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v29 = (v24 + v28 + v22) & ~v28;
  uint64_t v30 = (v24 + v28 + v23) & ~v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v29, v30, v25);
  uint64_t v31 = *(void *)(v27 + 32) + 7;
  uint64_t v32 = (_OWORD *)((v31 + v29) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (_OWORD *)((v31 + v30) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v32 = *v33;
  unint64_t v34 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v37 = *(_OWORD *)v35;
  long long v36 = *(_OWORD *)(v35 + 16);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(_OWORD *)unint64_t v34 = v37;
  *(_OWORD *)(v34 + 16) = v36;
  unint64_t v38 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  long long v41 = *(_OWORD *)v39;
  long long v40 = *(_OWORD *)(v39 + 16);
  *(void *)(v38 + 32) = *(void *)(v39 + 32);
  *(_OWORD *)unint64_t v38 = v41;
  *(_OWORD *)(v38 + 16) = v40;
  long long v42 = (void *)((v38 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v43 = (void *)((v39 + 47) & 0xFFFFFFFFFFFFFFF8);
  *long long v42 = *v43;
  v19(((unint64_t)v42 + v21 + 8) & ~v21, ((unint64_t)v43 + v21 + 8) & ~v21, AssociatedTypeWitness);
  return a1;
}

void *sub_1B5295CCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t, void))(v4 + 40))(v7, v8, *(void *)(a3 + 16));
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = (v13 + v7) & ~v12;
  uint64_t v15 = (v13 + v8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, void))(v10 + 40))(v14, v15, *(void *)(a3 + 24));
  uint64_t v16 = *(void *)(v11 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = v18 + 40;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  uint64_t v21 = (v16 + v20 + v14) & ~v20;
  uint64_t v22 = (v16 + v20 + v15) & ~v20;
  v45(v21, v22, AssociatedTypeWitness);
  uint64_t v23 = *(void *)(v19 + 24);
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25 + 40;
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = (v23 + v27 + v21) & ~v27;
  uint64_t v29 = (v23 + v27 + v22) & ~v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 40))(v28, v29, v24);
  uint64_t v30 = *(void *)(v26 + 24) + 7;
  uint64_t v31 = (_OWORD *)((v30 + v28) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = v30 + v29;
  unint64_t v33 = (v32 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v31 = *(_OWORD *)(v32 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v34 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v34);
  long long v36 = *(_OWORD *)v35;
  long long v37 = *(_OWORD *)(v35 + 16);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(_OWORD *)unint64_t v34 = v36;
  *(_OWORD *)(v34 + 16) = v37;
  unint64_t v38 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v38 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(v38);
  }
  unint64_t v39 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  long long v40 = *(_OWORD *)v39;
  long long v41 = *(_OWORD *)(v39 + 16);
  *(void *)(v38 + 32) = *(void *)(v39 + 32);
  *(_OWORD *)unint64_t v38 = v40;
  *(_OWORD *)(v38 + 16) = v41;
  long long v42 = (void *)((v38 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v43 = (void *)((v39 + 47) & 0xFFFFFFFFFFFFFFF8);
  *long long v42 = *v43;
  swift_bridgeObjectRelease();
  v45(((unint64_t)v42 + v20 + 8) & ~v20, ((unint64_t)v43 + v20 + 8) & ~v20, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B5295F88(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v42 = *(_DWORD *)(v7 + 84);
  unsigned int v44 = *(_DWORD *)(v5 + 84);
  if (v42 <= v44) {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v43 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 > v8) {
    unsigned int v8 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= v8) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = *(void *)(v5 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = *(void *)(v9 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v21 = *(void *)(v11 + 64);
  if (v14 <= v10) {
    unsigned int v22 = v10;
  }
  else {
    unsigned int v22 = v14;
  }
  if (v22 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = *(void *)(v7 + 64) + v18;
  uint64_t v24 = v19 + v20;
  uint64_t v25 = v21 + 7;
  if (a2 <= v22) {
    goto LABEL_35;
  }
  uint64_t v26 = ((v18
        + ((((((((v25 + ((v24 + ((v23 + ((v16 + v17 + ((v15 + 8) & ~v15)) & ~v17)) & ~v18)) & ~v20)) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 8) & ~v18)
      + v19;
  char v27 = 8 * v26;
  if (v26 > 3) {
    goto LABEL_17;
  }
  unsigned int v30 = ((a2 - v22 + ~(-1 << v27)) >> v27) + 1;
  if (HIWORD(v30))
  {
    int v28 = *(_DWORD *)((char *)a1 + v26);
    if (v28) {
      goto LABEL_25;
    }
  }
  else
  {
    if (v30 <= 0xFF)
    {
      if (v30 < 2) {
        goto LABEL_35;
      }
LABEL_17:
      int v28 = *((unsigned __int8 *)a1 + v26);
      if (!*((unsigned char *)a1 + v26)) {
        goto LABEL_35;
      }
LABEL_25:
      int v31 = (v28 - 1) << v27;
      if (v26 > 3) {
        int v31 = 0;
      }
      if (v26)
      {
        if (v26 <= 3) {
          int v32 = v26;
        }
        else {
          int v32 = 4;
        }
        switch(v32)
        {
          case 2:
            int v33 = *a1;
            break;
          case 3:
            int v33 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v33 = *(_DWORD *)a1;
            break;
          default:
            int v33 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v33 = 0;
      }
      return v22 + (v33 | v31) + 1;
    }
    int v28 = *(unsigned __int16 *)((char *)a1 + v26);
    if (*(unsigned __int16 *)((char *)a1 + v26)) {
      goto LABEL_25;
    }
  }
LABEL_35:
  uint64_t v34 = ((unint64_t)a1 + v15 + 8) & ~v15;
  if (v44 == v22)
  {
    unint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v36 = v44;
    uint64_t v37 = v43;
    goto LABEL_37;
  }
  uint64_t v34 = (v34 + v16 + v17) & ~v17;
  if (v42 == v22)
  {
    unint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v36 = v42;
    uint64_t v37 = v6;
    return v35(v34, v36, v37);
  }
  uint64_t v34 = (v23 + v34) & ~v18;
  if (v10 == v22)
  {
    unint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v36 = v10;
    uint64_t v37 = AssociatedTypeWitness;
LABEL_37:
    return v35(v34, v36, v37);
  }
  uint64_t v38 = (v24 + v34) & ~v20;
  if (v13 == v22)
  {
    unint64_t v39 = *(uint64_t (**)(uint64_t))(v12 + 48);
    return v39(v38);
  }
  else
  {
    unint64_t v40 = *(void *)((v25 + v38) & 0xFFFFFFFFFFFFFFF8);
    if (v40 >= 0xFFFFFFFF) {
      LODWORD(v40) = -1;
    }
    return (v40 + 1);
  }
}

void sub_1B5296458(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v46 = v4;
  uint64_t v5 = *(void *)(*(void *)(a4 + 24) - 8);
  uint64_t v45 = v5;
  unsigned int v41 = *(_DWORD *)(v4 + 84);
  unsigned int v40 = *(_DWORD *)(v5 + 84);
  if (v40 <= v41) {
    unsigned int v6 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v6 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v7 + 84) > v6) {
    unsigned int v6 = *(_DWORD *)(v7 + 84);
  }
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= v6) {
    unsigned int v12 = v6;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = *(void *)(v4 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = *(void *)(v7 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = *(void *)(v9 + 64);
  if (v12 <= v8) {
    unsigned int v20 = v8;
  }
  else {
    unsigned int v20 = v12;
  }
  if (v20 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  uint64_t v21 = *(void *)(v5 + 64) + v16;
  uint64_t v22 = v17 + v18;
  uint64_t v23 = v19 + 7;
  size_t v24 = ((v16
        + ((((((((v23 + ((v17 + v18 + ((v21 + ((v14 + v15 + ((v13 + 8) & ~v13)) & ~v15)) & ~v16)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 8) & ~v16)
      + v17;
  if (a3 <= v20)
  {
    int v27 = 0;
    uint64_t v25 = a1;
    unsigned int v26 = a2;
  }
  else
  {
    uint64_t v25 = a1;
    unsigned int v26 = a2;
    if (v24 <= 3)
    {
      unsigned int v32 = ((a3 - v20 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
      if (HIWORD(v32))
      {
        int v27 = 4;
      }
      else if (v32 >= 0x100)
      {
        int v27 = 2;
      }
      else
      {
        int v27 = v32 > 1;
      }
    }
    else
    {
      int v27 = 1;
    }
  }
  if (v20 < v26)
  {
    unsigned int v28 = ~v20 + v26;
    if (v24 < 4)
    {
      int v29 = (v28 >> (8 * v24)) + 1;
      if (v24)
      {
        int v33 = v28 & ~(-1 << (8 * v24));
        bzero(v25, v24);
        if (v24 == 3)
        {
          *(_WORD *)uint64_t v25 = v33;
          v25[2] = BYTE2(v33);
        }
        else if (v24 == 2)
        {
          *(_WORD *)uint64_t v25 = v33;
        }
        else
        {
          *uint64_t v25 = v33;
        }
      }
    }
    else
    {
      bzero(v25, v24);
      *(_DWORD *)uint64_t v25 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        v25[v24] = v29;
        return;
      case 2:
        *(_WORD *)&v25[v24] = v29;
        return;
      case 3:
        goto LABEL_61;
      case 4:
        *(_DWORD *)&v25[v24] = v29;
        return;
      default:
        return;
    }
  }
  uint64_t v30 = ~v16;
  uint64_t v31 = ~v18;
  switch(v27)
  {
    case 1:
      v25[v24] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&v25[v24] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_61:
      __break(1u);
      JUMPOUT(0x1B5296978);
    case 4:
      *(_DWORD *)&v25[v24] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (!v26) {
        return;
      }
LABEL_34:
      uint64_t v34 = (unint64_t)&v25[v13 + 8] & ~v13;
      if (v41 == v20)
      {
        unint64_t v35 = *(void (**)(uint64_t))(v46 + 56);
LABEL_43:
        v35(v34);
        return;
      }
      uint64_t v34 = (v34 + v14 + v15) & ~v15;
      if (v40 == v20)
      {
        unint64_t v35 = *(void (**)(uint64_t))(v45 + 56);
        goto LABEL_43;
      }
      uint64_t v34 = (v21 + v34) & v30;
      if (v8 == v20)
      {
        unint64_t v35 = *(void (**)(uint64_t))(v7 + 56);
        goto LABEL_43;
      }
      uint64_t v36 = (v22 + v34) & v31;
      if (v11 == v20)
      {
        uint64_t v37 = *(void (**)(uint64_t))(v10 + 56);
        v37(v36);
      }
      else
      {
        uint64_t v38 = (void *)((v23 + v36) & 0xFFFFFFFFFFFFFFF8);
        if ((v26 & 0x80000000) != 0)
        {
          uint64_t v39 = v26 ^ 0x80000000;
          v38[1] = 0;
        }
        else
        {
          uint64_t v39 = v26 - 1;
        }
        *uint64_t v38 = v39;
      }
      return;
  }
}

ValueMetadata *type metadata accessor for IndexedUTF16Sequence()
{
  return &type metadata for IndexedUTF16Sequence;
}

ValueMetadata *type metadata accessor for IndexedUTF16Iterator()
{
  return &type metadata for IndexedUTF16Iterator;
}

uint64_t sub_1B52969C0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1B5296B1C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B5296D34);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_1B5296D5C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B5296DF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  if (v8 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || v7 + ((v7 + v8 + ((v7 + v8) & ~v8)) & (unint64_t)~v8) + 5 > 0x18)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    unsigned int v14 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v14(a1, a2, v5);
    unint64_t v15 = ((unint64_t)a2 + v10) & v9;
    v14((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)v15, v5);
    unint64_t v16 = (v10 + v15) & v9;
    v14((uint64_t *)((v10 + (((unint64_t)v4 + v10) & v9)) & v9), (uint64_t *)v16, v5);
    uint64_t v17 = ((v10 + (((unint64_t)v4 + v10) & v9)) & v9) + v7;
    char v18 = *(unsigned char *)(v16 + v7 + 4);
    *(_DWORD *)uint64_t v17 = *(_DWORD *)(v16 + v7);
    *(unsigned char *)(v17 + 4) = v18;
  }
  return v4;
}

uint64_t sub_1B5296F60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(a1, v3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + v5;
  uint64_t v7 = (v6 + a1) & ~v5;
  v9(v7, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)((v6 + v7) & ~v5, v3);
}

uint64_t sub_1B5297024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  uint64_t v11 = (v8 + v9 + v10) & ~v9;
  v7((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9, v11, v5);
  uint64_t v12 = ((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9) + v8;
  char v13 = *(unsigned char *)(v11 + v8 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)(v11 + v8);
  *(unsigned char *)(v12 + 4) = v13;
  return a1;
}

uint64_t sub_1B5297110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  uint64_t v11 = (v8 + v9 + v10) & ~v9;
  v7((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9, v11, v5);
  uint64_t v12 = ((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9) + v8;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(v11 + v8);
  *(unsigned char *)(v12 + 1) = *(unsigned char *)(v11 + v8 + 1);
  *(unsigned char *)(v12 + 2) = *(unsigned char *)(v11 + v8 + 2);
  *(_WORD *)(v12 + 3) = *(_WORD *)(v11 + v8 + 3);
  return a1;
}

uint64_t sub_1B529720C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  uint64_t v11 = (v8 + v9 + v10) & ~v9;
  v7((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9, v11, v5);
  uint64_t v12 = ((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9) + v8;
  char v13 = *(unsigned char *)(v11 + v8 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)(v11 + v8);
  *(unsigned char *)(v12 + 4) = v13;
  return a1;
}

uint64_t sub_1B52972F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  uint64_t v11 = (v8 + v9 + v10) & ~v9;
  v7((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9, v11, v5);
  uint64_t v12 = ((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9) + v8;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(v11 + v8);
  *(unsigned char *)(v12 + 1) = *(unsigned char *)(v11 + v8 + 1);
  *(unsigned char *)(v12 + 2) = *(unsigned char *)(v11 + v8 + 2);
  *(_WORD *)(v12 + 3) = *(_WORD *)(v11 + v8 + 3);
  return a1;
}

uint64_t sub_1B52973F4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v8 = v6
     + ((v6
       + *(unsigned __int8 *)(v4 + 80)
       + ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + 5;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1B529756C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64)
     + ((*(void *)(v6 + 64)
       + *(unsigned __int8 *)(v6 + 80)
       + ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + 5;
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (*(_DWORD *)(v6 + 64)
         + ((*(_DWORD *)(v6 + 64)
           + *(unsigned __int8 *)(v6 + 80)
           + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v6 + 80)) != -5)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B52977A0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_1B52977C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    sub_1B5372CB8();
    swift_getTupleTypeMetadata2();
    uint64_t result = sub_1B5372CD8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B52978C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8 | 3;
  uint64_t v10 = (v8 | 3) + *(void *)(v5 + 64);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = v11 + v8;
  uint64_t v13 = ((v11 + v8) & ~v8) + v11;
  unint64_t v14 = (v13 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  size_t v15 = v14 + 4;
  size_t v16 = v14 + 5;
  if (v7) {
    size_t v17 = v15;
  }
  else {
    size_t v17 = v16;
  }
  unint64_t v18 = v9 | *(_DWORD *)(v5 + 80);
  if (v18 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0 || v17 + (v10 & ~(v8 | 3)) > 0x18)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v18 + 16) & ~v18));
    swift_retain();
    return v4;
  }
  size_t v32 = v15;
  uint64_t v33 = *(void *)(a3 + 24);
  uint64_t v31 = v13;
  uint64_t v22 = ~v9;
  (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
  unint64_t v23 = ((unint64_t)v4 + v10) & v22;
  unint64_t v24 = ((unint64_t)a2 + v10) & v22;
  if (!v7)
  {
    size_t v25 = v32;
    unint64_t v26 = v23;
    if (!*(unsigned char *)(v24 + v32)) {
      goto LABEL_21;
    }
    int v27 = *(unsigned __int8 *)(v24 + v32) - 1;
    int v28 = v32 & 0xFFFFFFFC;
    if ((v32 & 0xFFFFFFFC) != 0)
    {
      int v27 = 0;
      int v28 = *(_DWORD *)v24;
    }
    if ((v28 | v27) == 0xFFFFFFFF) {
      goto LABEL_21;
    }
LABEL_20:
    memcpy((void *)v26, (const void *)v24, v17);
    return v4;
  }
  size_t v25 = v32;
  unint64_t v26 = v23;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v24, v7, v33)) {
    goto LABEL_20;
  }
LABEL_21:
  int v29 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v29(v26, v24, v33);
  v29((v12 + v26) & ~v8, (v12 + v24) & ~v8, v33);
  *(_DWORD *)(((v26 | 3) + v31) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((v24 | 3) + v31) & 0xFFFFFFFFFFFFFFFCLL);
  if (!v7) {
    *(unsigned char *)(v26 + v25) = 0;
  }
  return v4;
}

uint64_t sub_1B5297B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(unsigned int *)(v7 + 84);
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = (_DWORD *)((v5 + a1 + (v8 | 3)) & ~(v8 | 3));
  uint64_t v12 = v10 + v8;
  if (v9)
  {
    uint64_t v20 = *(void *)(v6 - 8);
    uint64_t result = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(v11, v9, v6);
    uint64_t v7 = v20;
    if (result) {
      return result;
    }
    goto LABEL_13;
  }
  unint64_t v14 = ((v10 + (v12 & ~v8) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (!*((unsigned char *)v11 + v14)
    || ((uint64_t v15 = v14 & 0xFFFFFFFC, (v14 & 0xFFFFFFFC) != 0)
      ? (int v16 = 0)
      : (int v16 = *((unsigned __int8 *)v11 + v14) - 1),
        !v15 ? (int v17 = 0) : (int v17 = *v11),
        int v18 = v17 | v16,
        uint64_t result = (v18 + 1),
        v18 == -1))
  {
LABEL_13:
    uint64_t v19 = *(uint64_t (**)(unint64_t, uint64_t))(v7 + 8);
    v19((unint64_t)v11, v6);
    return v19(((unint64_t)v11 + v12) & ~v8, v6);
  }
  return result;
}

uint64_t sub_1B5297CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v10 | 3) + v7;
  uint64_t v12 = (unsigned char *)((v11 + a1) & ~(v10 | 3));
  uint64_t v13 = (_DWORD *)((v11 + a2) & ~(v10 | 3));
  unsigned int v14 = *(_DWORD *)(v9 + 84);
  uint64_t v15 = *(void *)(v9 + 64);
  uint64_t v16 = v15 + v10;
  uint64_t v17 = ((v15 + v10) & ~v10) + v15 + 3;
  unint64_t v18 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v14)
  {
    uint64_t v20 = v13;
    uint64_t v21 = v8;
    unsigned int v37 = *(_DWORD *)(v9 + 84);
    uint64_t v22 = v15 + v10;
    uint64_t v23 = v8;
    uint64_t v24 = ((v15 + v10) & ~v10) + v15 + 3;
    uint64_t v25 = a1;
    uint64_t v26 = (v11 + a1) & ~(v10 | 3);
    unint64_t v27 = v18 + 4;
    int v28 = v13;
    unint64_t v29 = v18;
    int v30 = (*(uint64_t (**)(_DWORD *, void, uint64_t))(v9 + 48))(v20, v37, v21);
    unint64_t v18 = v29;
    uint64_t v13 = v28;
    unint64_t v19 = v27;
    uint64_t v12 = (unsigned char *)v26;
    a1 = v25;
    uint64_t v17 = v24;
    uint64_t v8 = v23;
    uint64_t v16 = v22;
    unsigned int v14 = v37;
    if (!v30)
    {
LABEL_12:
      unint64_t v36 = v19;
      uint64_t v34 = *(void (**)(unsigned char *, _DWORD *, uint64_t))(v9 + 16);
      v34(v12, v13, v8);
      v34((unsigned char *)((unint64_t)&v12[v16] & ~v10), (_DWORD *)(((unint64_t)v13 + v16) & ~v10), v8);
      *(_DWORD *)((unint64_t)&v12[v17] & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v13 + v17) & 0xFFFFFFFFFFFFFFFCLL);
      if (!v14) {
        v12[v36] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)v13 + v19)) {
      goto LABEL_12;
    }
    int v31 = *((unsigned __int8 *)v13 + v19) - 1;
    int v32 = v19 & 0xFFFFFFFC;
    if ((v19 & 0xFFFFFFFC) != 0)
    {
      int v31 = 0;
      int v32 = *v13;
    }
    if ((v32 | v31) == 0xFFFFFFFF) {
      goto LABEL_12;
    }
  }
  if (v14) {
    size_t v33 = v19;
  }
  else {
    size_t v33 = v18 + 5;
  }
  memcpy(v12, v13, v33);
  return a1;
}

uint64_t sub_1B5297F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 3) + *(void *)(v6 + 40);
  uint64_t v11 = (_DWORD *)((v10 + a1) & ~(v9 | 3));
  uint64_t v12 = (_DWORD *)((v10 + a2) & ~(v9 | 3));
  uint64_t v13 = *(unsigned int *)(v8 + 84);
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = ~v9;
  uint64_t v16 = ((v14 + v9) & ~v9) + v14 + 3;
  unint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  uint64_t v33 = v14 + v9;
  if (!v13)
  {
    if (*((unsigned char *)v11 + v17))
    {
      int v21 = *((unsigned __int8 *)v11 + v17) - 1;
      if ((v16 & 0xFFFFFFFC) == 0xFFFFFFFC)
      {
        int v22 = 0;
      }
      else
      {
        int v21 = 0;
        int v22 = *v11;
      }
      if ((v22 | v21) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v12 + v17)) {
          goto LABEL_29;
        }
        int v23 = *((unsigned __int8 *)v12 + v17) - 1;
        if ((v16 & 0xFFFFFFFC) == 0xFFFFFFFC)
        {
          int v24 = 0;
        }
        else
        {
          int v23 = 0;
          int v24 = *v12;
        }
        if ((v24 | v23) == 0xFFFFFFFF) {
          goto LABEL_29;
        }
        goto LABEL_25;
      }
    }
    if (!*((unsigned char *)v12 + v17))
    {
LABEL_22:
      int v28 = *(void (**)(_DWORD *, _DWORD *, uint64_t))(v8 + 24);
      v28(v11, v12, v7);
      v28((_DWORD *)(((unint64_t)v11 + v33) & v15), (_DWORD *)(((unint64_t)v12 + v33) & v15), v7);
      *(_DWORD *)(((unint64_t)v11 + v16) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v12 + v16) & 0xFFFFFFFFFFFFFFFCLL);
      return a1;
    }
    int v25 = *((unsigned __int8 *)v12 + v17) - 1;
    if ((v16 & 0xFFFFFFFC) != 0xFFFFFFFC) {
      int v25 = 0;
    }
    __dst = v11;
    if ((v16 & 0xFFFFFFFC) == 0xFFFFFFFC) {
      int v26 = 0;
    }
    else {
      int v26 = *v12;
    }
    int v20 = (v26 | v25) + 1;
LABEL_20:
    uint64_t v11 = __dst;
    if (v20)
    {
      unint64_t v27 = *(void (**)(_DWORD *, uint64_t))(v8 + 8);
      v27(__dst, v7);
      v27((_DWORD *)(((unint64_t)__dst + v33) & v15), v7);
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  uint64_t v32 = ~v9;
  unint64_t v18 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v8 + 48);
  __dst = (_DWORD *)((v10 + a1) & ~(v9 | 3));
  int v19 = v18(v11, v13, v7);
  int v20 = v18(v12, v13, v7);
  unint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  uint64_t v15 = v32;
  if (!v19) {
    goto LABEL_20;
  }
  uint64_t v11 = __dst;
  if (!v20)
  {
LABEL_29:
    int v30 = *(void (**)(_DWORD *, _DWORD *, uint64_t))(v8 + 16);
    v30(v11, v12, v7);
    v30((_DWORD *)(((unint64_t)v11 + v33) & v15), (_DWORD *)(((unint64_t)v12 + v33) & v15), v7);
    *(_DWORD *)(((unint64_t)v11 + v16) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v12 + v16) & 0xFFFFFFFFFFFFFFFCLL);
    if (!v13) {
      *((unsigned char *)v11 + v17) = 0;
    }
    return a1;
  }
LABEL_25:
  if (v13) {
    size_t v29 = v17;
  }
  else {
    size_t v29 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 5;
  }
  memcpy(v11, v12, v29);
  return a1;
}

uint64_t sub_1B5298240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v10 | 3) + v7;
  uint64_t v12 = (unsigned char *)((v11 + a1) & ~(v10 | 3));
  uint64_t v13 = (_DWORD *)((v11 + a2) & ~(v10 | 3));
  unsigned int v14 = *(_DWORD *)(v9 + 84);
  uint64_t v15 = *(void *)(v9 + 64);
  uint64_t v16 = v15 + v10;
  uint64_t v17 = ((v15 + v10) & ~v10) + v15 + 3;
  unint64_t v18 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v14)
  {
    int v20 = v13;
    uint64_t v21 = v8;
    unsigned int v37 = *(_DWORD *)(v9 + 84);
    uint64_t v22 = v15 + v10;
    uint64_t v23 = v8;
    uint64_t v24 = ((v15 + v10) & ~v10) + v15 + 3;
    uint64_t v25 = a1;
    uint64_t v26 = (v11 + a1) & ~(v10 | 3);
    unint64_t v27 = v18 + 4;
    int v28 = v13;
    unint64_t v29 = v18;
    int v30 = (*(uint64_t (**)(_DWORD *, void, uint64_t))(v9 + 48))(v20, v37, v21);
    unint64_t v18 = v29;
    uint64_t v13 = v28;
    unint64_t v19 = v27;
    uint64_t v12 = (unsigned char *)v26;
    a1 = v25;
    uint64_t v17 = v24;
    uint64_t v8 = v23;
    uint64_t v16 = v22;
    unsigned int v14 = v37;
    if (!v30)
    {
LABEL_12:
      unint64_t v36 = v19;
      uint64_t v34 = *(void (**)(unsigned char *, _DWORD *, uint64_t))(v9 + 32);
      v34(v12, v13, v8);
      v34((unsigned char *)((unint64_t)&v12[v16] & ~v10), (_DWORD *)(((unint64_t)v13 + v16) & ~v10), v8);
      *(_DWORD *)((unint64_t)&v12[v17] & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v13 + v17) & 0xFFFFFFFFFFFFFFFCLL);
      if (!v14) {
        v12[v36] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)v13 + v19)) {
      goto LABEL_12;
    }
    int v31 = *((unsigned __int8 *)v13 + v19) - 1;
    int v32 = v19 & 0xFFFFFFFC;
    if ((v19 & 0xFFFFFFFC) != 0)
    {
      int v31 = 0;
      int v32 = *v13;
    }
    if ((v32 | v31) == 0xFFFFFFFF) {
      goto LABEL_12;
    }
  }
  if (v14) {
    size_t v33 = v19;
  }
  else {
    size_t v33 = v18 + 5;
  }
  memcpy(v12, v13, v33);
  return a1;
}

uint64_t sub_1B5298464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 3) + *(void *)(v6 + 24);
  uint64_t v11 = (_DWORD *)((v10 + a1) & ~(v9 | 3));
  uint64_t v12 = (_DWORD *)((v10 + a2) & ~(v9 | 3));
  uint64_t v13 = *(unsigned int *)(v8 + 84);
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = ~v9;
  uint64_t v16 = ((v14 + v9) & ~v9) + v14 + 3;
  unint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  uint64_t v33 = v14 + v9;
  if (!v13)
  {
    if (*((unsigned char *)v11 + v17))
    {
      int v21 = *((unsigned __int8 *)v11 + v17) - 1;
      if ((v16 & 0xFFFFFFFC) == 0xFFFFFFFC)
      {
        int v22 = 0;
      }
      else
      {
        int v21 = 0;
        int v22 = *v11;
      }
      if ((v22 | v21) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v12 + v17)) {
          goto LABEL_29;
        }
        int v23 = *((unsigned __int8 *)v12 + v17) - 1;
        if ((v16 & 0xFFFFFFFC) == 0xFFFFFFFC)
        {
          int v24 = 0;
        }
        else
        {
          int v23 = 0;
          int v24 = *v12;
        }
        if ((v24 | v23) == 0xFFFFFFFF) {
          goto LABEL_29;
        }
        goto LABEL_25;
      }
    }
    if (!*((unsigned char *)v12 + v17))
    {
LABEL_22:
      int v28 = *(void (**)(_DWORD *, _DWORD *, uint64_t))(v8 + 40);
      v28(v11, v12, v7);
      v28((_DWORD *)(((unint64_t)v11 + v33) & v15), (_DWORD *)(((unint64_t)v12 + v33) & v15), v7);
      *(_DWORD *)(((unint64_t)v11 + v16) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v12 + v16) & 0xFFFFFFFFFFFFFFFCLL);
      return a1;
    }
    int v25 = *((unsigned __int8 *)v12 + v17) - 1;
    if ((v16 & 0xFFFFFFFC) != 0xFFFFFFFC) {
      int v25 = 0;
    }
    __dst = v11;
    if ((v16 & 0xFFFFFFFC) == 0xFFFFFFFC) {
      int v26 = 0;
    }
    else {
      int v26 = *v12;
    }
    int v20 = (v26 | v25) + 1;
LABEL_20:
    uint64_t v11 = __dst;
    if (v20)
    {
      unint64_t v27 = *(void (**)(_DWORD *, uint64_t))(v8 + 8);
      v27(__dst, v7);
      v27((_DWORD *)(((unint64_t)__dst + v33) & v15), v7);
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  uint64_t v32 = ~v9;
  unint64_t v18 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v8 + 48);
  __dst = (_DWORD *)((v10 + a1) & ~(v9 | 3));
  int v19 = v18(v11, v13, v7);
  int v20 = v18(v12, v13, v7);
  unint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  uint64_t v15 = v32;
  if (!v19) {
    goto LABEL_20;
  }
  uint64_t v11 = __dst;
  if (!v20)
  {
LABEL_29:
    int v30 = *(void (**)(_DWORD *, _DWORD *, uint64_t))(v8 + 32);
    v30(v11, v12, v7);
    v30((_DWORD *)(((unint64_t)v11 + v33) & v15), (_DWORD *)(((unint64_t)v12 + v33) & v15), v7);
    *(_DWORD *)(((unint64_t)v11 + v16) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v12 + v16) & 0xFFFFFFFFFFFFFFFCLL);
    if (!v13) {
      *((unsigned char *)v11 + v17) = 0;
    }
    return a1;
  }
LABEL_25:
  if (v13) {
    size_t v29 = v17;
  }
  else {
    size_t v29 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 5;
  }
  memcpy(v11, v12, v29);
  return a1;
}

uint64_t sub_1B52987A4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned int *)(v7 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v5) {
    unsigned int v11 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
  if (v9) {
    uint64_t v13 = 4;
  }
  else {
    uint64_t v13 = 5;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v12 | 3;
  uint64_t v15 = (v12 | 3) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v16 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_27;
  }
  unint64_t v17 = (v15 & ~v14)
      + v13
      + ((*(void *)(*(void *)(v6 - 8) + 64) + ((*(void *)(*(void *)(v6 - 8) + 64) + v12) & ~v12) + 3) & 0xFFFFFFFFFFFFFFFCLL);
  char v18 = 8 * v17;
  if (v17 > 3)
  {
LABEL_16:
    int v20 = *((unsigned __int8 *)a1 + v17);
    if (!*((unsigned char *)a1 + v17)) {
      goto LABEL_27;
    }
LABEL_19:
    int v21 = (v20 - 1) << v18;
    if (v17 >= 4) {
      int v21 = 0;
    }
    if (v17)
    {
      if (v17 == 1) {
        LODWORD(v17) = *(unsigned __int8 *)a1;
      }
      else {
        LODWORD(v17) = *a1;
      }
    }
    return v11 + (v17 | v21) + 1;
  }
  unsigned int v19 = ((v16 + ~(-1 << v18)) >> v18) + 1;
  if (HIWORD(v19))
  {
    int v20 = *(_DWORD *)((char *)a1 + v17);
    if (v20) {
      goto LABEL_19;
    }
  }
  else if (v19 > 0xFF)
  {
    int v20 = *(unsigned __int16 *)((char *)a1 + v17);
    if (*(_WORD *)((char *)a1 + v17)) {
      goto LABEL_19;
    }
  }
  else if (v19 >= 2)
  {
    goto LABEL_16;
  }
LABEL_27:
  if (!v11) {
    return 0;
  }
  if (v5 >= v10)
  {
    int v25 = *(uint64_t (**)(void))(v4 + 48);
    return v25();
  }
  else
  {
    if (!v9) {
      return 0;
    }
    int v23 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)a1 + v15) & ~v14, v9, v6, v4);
    BOOL v24 = v23 != 0;
    uint64_t result = (v23 - 1);
    if (result == 0 || !v24) {
      return 0;
    }
  }
  return result;
}

void sub_1B52989A4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  unsigned int v13 = v11 - 1;
  if (!v11) {
    unsigned int v13 = 0;
  }
  if (v13 <= v9) {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = (v12 | 3) + *(void *)(*(void *)(v7 - 8) + 64);
  unint64_t v16 = (*(void *)(v10 + 64) + ((*(void *)(v10 + 64) + v12) & ~v12) + 3) & 0xFFFFFFFFFFFFFFFCLL;
  size_t v17 = v16 + 4;
  size_t v18 = v16 + 5;
  if (v11) {
    size_t v19 = v17;
  }
  else {
    size_t v19 = v18;
  }
  size_t v20 = v19 + (v15 & ~(v12 | 3));
  BOOL v21 = a3 >= v14;
  unsigned int v22 = a3 - v14;
  if (v22 == 0 || !v21)
  {
LABEL_18:
    if (v14 < a2) {
      goto LABEL_19;
    }
    goto LABEL_28;
  }
  if (v20 <= 3)
  {
    unsigned int v23 = ((v22 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v23))
    {
      int v6 = 4;
      if (v14 < a2)
      {
LABEL_19:
        unsigned int v24 = ~v14 + a2;
        if (v20 >= 4)
        {
          bzero(a1, v20);
          int v25 = 1;
LABEL_24:
          *(_DWORD *)a1 = v24;
          goto LABEL_25;
        }
        int v25 = (v24 >> (8 * v20)) + 1;
        if (v20)
        {
          v24 &= ~(-1 << (8 * v20));
          bzero(a1, v20);
          if (v20 != 1) {
            goto LABEL_24;
          }
          *a1 = v24;
        }
LABEL_25:
        switch(v6)
        {
          case 1:
            a1[v20] = v25;
            return;
          case 2:
            *(_WORD *)&a1[v20] = v25;
            return;
          case 3:
            goto LABEL_57;
          case 4:
            *(_DWORD *)&a1[v20] = v25;
            return;
          default:
            return;
        }
      }
      goto LABEL_28;
    }
    if (v23 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v23 > 1;
    }
    goto LABEL_18;
  }
  int v6 = 1;
  if (v14 < a2) {
    goto LABEL_19;
  }
LABEL_28:
  switch(v6)
  {
    case 1:
      a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x1B5298D04);
    case 4:
      *(_DWORD *)&a1[v20] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      if (v9 >= v13)
      {
        size_t v29 = *(void (**)(char *))(v8 + 56);
        v29(a1);
      }
      else
      {
        int v26 = (unsigned char *)((unint64_t)&a1[v15] & ~(v12 | 3));
        if (v13 >= a2)
        {
          if (a2 + 1 > v11)
          {
            if (!v17) {
              return;
            }
            int v28 = a2 - v11;
            bzero(v26, v17);
            goto LABEL_51;
          }
          if (a2 != -1)
          {
            int v30 = *(void (**)(unsigned char *, uint64_t))(v10 + 56);
            uint64_t v31 = a2 + 1;
            v30(v26, v31);
          }
        }
        else
        {
          if (v19 < 4) {
            int v27 = ~(-1 << (8 * v19));
          }
          else {
            int v27 = -1;
          }
          if (v19)
          {
            int v28 = v27 & (~v13 + a2);
            bzero(v26, v19);
            if (v19 == 1)
            {
              *int v26 = v28;
              return;
            }
LABEL_51:
            *(_DWORD *)int v26 = v28;
          }
        }
      }
      return;
  }
}

_UNKNOWN **sub_1B5298D2C()
{
  return &protocol witness table for CollectionGlyphSubset<A>;
}

uint64_t sub_1B5298D38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B528A9B8(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

ValueMetadata *type metadata accessor for IntegerNotRepresentableError()
{
  return &type metadata for IntegerNotRepresentableError;
}

void sub_1B5298D6C()
{
  off_1E9D48E38 = &unk_1F0DDBC78;
}

ValueMetadata *type metadata accessor for RangeError()
{
  return &type metadata for RangeError;
}

uint64_t sub_1B5298D90(uint64_t a1)
{
  void (*v11)(void *__return_ptr, void *);
  uint64_t v12;
  unsigned __int16 v13;
  uint64_t v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  long long v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  long long v29;
  void (*v31)(long long *__return_ptr, void *);
  uint64_t v32;
  long long v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void v37[2];
  void v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void v42[3];
  long long v43;
  long long v44;
  long long v45;
  char v46;
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;

  long long v2 = *(_OWORD *)(a1 + 16);
  v47[0] = *(_OWORD *)a1;
  v47[1] = v2;
  uint64_t v48 = *(void *)(a1 + 32);
  uint64_t v3 = *((void *)&v47[0] + 1);
  if ((*((void *)&v47[0] + 1) & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    sub_1B51D4F28();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!*((void *)&v47[0] + 1)) {
      return v4;
    }
    unint64_t v49 = MEMORY[0x1E4FBC860];
    sub_1B521D050(0, *((int64_t *)&v47[0] + 1), 0);
    uint64_t v5 = 0;
    uint64_t v4 = v49;
    size_t v29 = v47[0];
    while (1)
    {
      if (v3 == v5)
      {
        __break(1u);
        goto LABEL_12;
      }
      if ((unsigned __int128)(v5 * (__int128)(uint64_t)v29) >> 64 != (v5 * (uint64_t)v29) >> 63) {
        goto LABEL_13;
      }
      uint64_t v31 = *(void (**)(long long *__return_ptr, void *))(a1 + 80);
      long long v6 = *(_OWORD *)(a1 + 56);
      unsigned int v44 = *(_OWORD *)(a1 + 40);
      uint64_t v45 = v6;
      uint64_t v46 = *(unsigned char *)(a1 + 72);
      sub_1B52685FC((uint64_t)&v44);
      swift_retain();
      sub_1B5268628((uint64_t)v47);
      uint64_t v7 = sub_1B53724C8();
      if (v1) {
        break;
      }
      uint64_t v32 = v4;
      unsigned int v11 = (void (*)(void *__return_ptr, void *))*((void *)&v44 + 1);
      __int16 v10 = v44;
      uint64_t v39 = v7;
      unsigned int v40 = v8;
      unsigned int v41 = v9;
      uint64_t v34 = v7;
      unint64_t v35 = v8;
      unint64_t v36 = v9;
      swift_bridgeObjectRetain_n();
      unsigned int v13 = (unsigned __int16)sub_1B51F3E0C(&v34, v12, v10 & 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v15 = (unsigned __int16)sub_1B51F3E0C(&v34, v14, HIBYTE(v10) & 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v16 = v13;
      size_t v17 = v15;
      size_t v18 = v34;
      size_t v19 = v35;
      size_t v20 = v36;
      v37[0] = v16;
      v37[1] = v17;
      v11(v38, v37);
      swift_bridgeObjectRelease();
      BOOL v21 = v38[0];
      unsigned int v22 = v38[1];
      uint64_t v39 = v18;
      unsigned int v40 = v19;
      unsigned int v41 = v20;
      unsigned int v24 = sub_1B51FA4D0(&v39, v23, *((uint64_t *)&v45 + 1), v46);
      swift_bridgeObjectRelease();
      v42[0] = v21;
      v42[1] = v22;
      void v42[2] = v24;
      v31(&v43, v42);
      uint64_t v4 = v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B51E00CC((uint64_t)v47);
      sub_1B5268654((uint64_t)&v44);
      swift_release();
      int v25 = v43;
      unint64_t v49 = v32;
      int v27 = *(void *)(v32 + 16);
      int v26 = *(void *)(v32 + 24);
      uint64_t v3 = *((void *)&v29 + 1);
      if (v27 >= v26 >> 1)
      {
        uint64_t v33 = v43;
        sub_1B521D050((char *)(v26 > 1), v27 + 1, 1);
        int v25 = v33;
        uint64_t v4 = v49;
      }
      ++v5;
      *(void *)(v4 + 16) = v27 + 1;
      *(_OWORD *)(v4 + 16 * v27 + 32) = v25;
      if (*((void *)&v29 + 1) == v5) {
        return v4;
      }
    }
    sub_1B51E00CC((uint64_t)v47);
    sub_1B5268654((uint64_t)&v44);
    swift_release();
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1B5299224(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v35[0] = *(_OWORD *)a1;
  v35[1] = v2;
  uint64_t v36 = *(void *)(a1 + 32);
  uint64_t v3 = *((void *)&v35[0] + 1);
  if ((*((void *)&v35[0] + 1) & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    sub_1B51D4F28();
    swift_allocError();
    swift_willThrow();
LABEL_19:
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  uint64_t v4 = v1;
  uint64_t result = MEMORY[0x1E4FBC860];
  if (*((void *)&v35[0] + 1))
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1B521D050(0, *((int64_t *)&v35[0] + 1), 0);
    uint64_t v7 = 0;
    uint64_t result = v31;
    uint64_t v23 = *(void *)&v35[0];
    while (1)
    {
      if (v3 == v7)
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      uint64_t v24 = result;
      if ((unsigned __int128)(v7 * (__int128)v23) >> 64 != (v7 * v23) >> 63) {
        goto LABEL_17;
      }
      long long v8 = *(_OWORD *)(a1 + 56);
      long long v32 = *(_OWORD *)(a1 + 40);
      long long v33 = v8;
      uint64_t v34 = *(void *)(a1 + 72);
      sub_1B5268680((uint64_t)&v32);
      sub_1B5268628((uint64_t)v35);
      uint64_t v9 = sub_1B53724C8();
      if (v4) {
        break;
      }
      uint64_t v12 = *((void *)&v32 + 1);
      char v37 = v33;
      char v13 = v32 & 1;
      *(void *)&long long v27 = v9;
      *((void *)&v27 + 1) = v10;
      uint64_t v28 = v11;
      *(void *)&long long v25 = v9;
      *((void *)&v25 + 1) = v10;
      uint64_t v26 = v11;
      swift_bridgeObjectRetain_n();
      unsigned __int16 v15 = (unsigned __int16)sub_1B51F3E0C((uint64_t *)&v25, v14, v13);
      swift_bridgeObjectRelease();
      long long v27 = v25;
      uint64_t v28 = v26;
      size_t v17 = sub_1B51FA4D0((uint64_t *)&v27, v16, v12, v37);
      swift_bridgeObjectRelease();
      v29[0] = v15;
      v29[1] = v17;
      (*((void (**)(uint64_t *__return_ptr, void *))&v33 + 1))(&v30, v29);
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B51E00CC((uint64_t)v35);
      sub_1B52686AC((uint64_t)&v32);
      uint64_t v18 = v30;
      uint64_t v19 = v30 + 1;
      if (__OFADD__(v30, 1)) {
        goto LABEL_14;
      }
      if (v19 < v30) {
        goto LABEL_15;
      }
      uint64_t result = v24;
      uint64_t v31 = v24;
      unint64_t v21 = *(void *)(v24 + 16);
      unint64_t v20 = *(void *)(v24 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1B521D050((char *)(v20 > 1), v21 + 1, 1);
        uint64_t result = v31;
      }
      ++v7;
      *(void *)(result + 16) = v21 + 1;
      uint64_t v22 = result + 16 * v21;
      *(void *)(v22 + 32) = v18;
      *(void *)(v22 + 40) = v19;
      if (v3 == v7) {
        return result;
      }
    }
    sub_1B51E00CC((uint64_t)v35);
    sub_1B52686AC((uint64_t)&v32);
    goto LABEL_19;
  }
  return result;
}

uint64_t GlyphMetadataTable.subscript.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)v2;
  long long v5 = *(_OWORD *)(v2 + 72);
  long long v6 = *(_OWORD *)(v2 + 104);
  long long v52 = *(_OWORD *)(v2 + 88);
  long long v53 = v6;
  char v54 = *(unsigned char *)(v2 + 120);
  long long v50 = *(_OWORD *)(v2 + 56);
  long long v51 = v5;
  uint64_t result = (uint64_t)sub_1B5299C40(a1);
  uint64_t v8 = 0;
  if (v9)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    if ((result & 0x8000000000000000) == 0)
    {
      uint64_t v16 = *v3;
      char v55 = 1;
      uint64_t v56 = sub_1B529AA34;
      uint64_t v57 = 0;
      uint64_t v58 = sub_1B529AA50;
      uint64_t v59 = 0;
      char v60 = 1;
      uint64_t v61 = sub_1B529AA34;
      uint64_t v62 = 0;
      uint64_t v63 = sub_1B529AA50;
      uint64_t v64 = 0;
      uint64_t v65 = v16;
      char v66 = 1;
      uint64_t v67 = sub_1B529AA6C;
      uint64_t v68 = 0;
      v31[0] = 1;
      long long v32 = sub_1B529AA34;
      uint64_t v33 = 0;
      uint64_t v34 = sub_1B529AA50;
      uint64_t v35 = 0;
      char v36 = 1;
      char v37 = sub_1B529AA34;
      uint64_t v38 = 0;
      uint64_t v39 = sub_1B529AA50;
      uint64_t v40 = 0;
      uint64_t v41 = v16;
      char v42 = 1;
      uint64_t v43 = sub_1B529AA6C;
      uint64_t v44 = 0;
      char v45 = 1;
      uint64_t v46 = sub_1B529AB84;
      uint64_t v47 = 0;
      uint64_t v48 = sub_1B529ABAC;
      uint64_t v49 = 0;
      swift_bridgeObjectRetain();
      *(void *)&long long v29 = sub_1B53724C8();
      *((void *)&v29 + 1) = v17;
      uint64_t v30 = v18;
      swift_bridgeObjectRetain_n();
      sub_1B51F82EC(&v28, (uint64_t)&v29, v19, (uint64_t)&v23);
      uint64_t v8 = v23;
      uint64_t v10 = BYTE8(v23);
      uint64_t v11 = v24;
      uint64_t v22 = v25;
      uint64_t v21 = v26;
      uint64_t v13 = v27;
      uint64_t v14 = v28;
      long long v23 = v29;
      uint64_t v24 = v30;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1B52B3500(&v23, 1, (void (*)(long long *__return_ptr, uint64_t *))sub_1B529AB84, 0, v20);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B52166D0((uint64_t)v31);
      uint64_t v12 = v22 | (v21 << 8);
    }
  }
  *a2 = v8;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  a2[6] = v15;
  return result;
}