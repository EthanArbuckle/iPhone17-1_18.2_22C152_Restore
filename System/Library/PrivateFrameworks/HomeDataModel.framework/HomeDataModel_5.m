uint64_t assignWithCopy for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(const void *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  void (*v85)(char *, void, uint64_t, int *);
  uint64_t v86;
  void *v87;
  const void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int16 *v94;
  __int16 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void (*v108)(char *, void, uint64_t, int *);
  uint64_t v109;
  void *v110;
  const void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  uint64_t v118;
  void *v119;
  void *v120;
  uint64_t v121;
  void *v122;
  const void *v123;
  unsigned int (*v124)(const void *, uint64_t, uint64_t);
  unsigned int (*v125)(const void *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  uint64_t v134;
  const void *v135;
  unsigned int (*v136)(const void *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  void *v139;
  const void *v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  void *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  unsigned int (*v150)(char *, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  void *v153;
  void *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int (*v159)(char *, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  void (*v162)(void *, const void *, uint64_t);
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  int v167;
  int *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char v175;
  uint64_t v176;
  char *v177;
  char *v178;
  int EnumCaseMultiPayload;
  char *v180;
  int *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t updated;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  const void *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  __int16 *v222;
  __int16 v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  void *v229;
  void *v230;
  uint64_t v231;
  unsigned char *v232;
  unsigned char *v233;
  int *v234;
  uint64_t v235;
  uint64_t (*v236)(unsigned char *, uint64_t, int *);
  int v237;
  int v238;
  uint64_t v239;
  void (*v240)(char *, char *, uint64_t);
  uint64_t v241;
  void *v242;
  void *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  void (*v247)(unsigned char *, void, uint64_t, int *);
  uint64_t v248;
  uint64_t v249;
  void *v250;
  void *v251;
  uint64_t v253;
  void (*v254)(unsigned char *, unsigned char *, uint64_t);
  uint64_t v255;
  void *v256;
  void *v257;
  int *v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unsigned int (*v265)(const void *, uint64_t, uint64_t);
  uint64_t v266;
  unsigned int (*v267)(const void *, uint64_t, uint64_t);
  uint64_t v268;
  char *v269;
  void *v270;
  void *v271;
  void (*v272)(char *, char *, uint64_t);
  uint64_t v273;
  void (*v274)(void *, const void *, uint64_t);
  char *v275;
  void *__dst;
  void *__dsta;
  int *__dstb;
  int *v279;
  int *v280;
  int *v281;
  void (*v282)(uint64_t, uint64_t, uint64_t);
  uint64_t v283;
  uint64_t v284;

  v4 = a2;
  v5 = a1;
  if (a1 != a2)
  {
    sub_251CF2CAC(a1, type metadata accessor for AccessoryDetails.Payload);
    type metadata accessor for AccessoryDetails.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v280 = a3;
        v16 = sub_251F34DA0();
        __dst = *(void **)(v16 - 8);
        v17 = (void (*)(uint64_t, uint64_t, uint64_t))__dst[2];
        v17(v5, v4, v16);
        v18 = (int *)type metadata accessor for StaticService();
        v19 = v18[5];
        v20 = (void *)(v5 + v19);
        v21 = (void *)(v4 + v19);
        *v20 = *v21;
        v20[1] = v21[1];
        *(unsigned char *)(v5 + v18[6]) = *(unsigned char *)(v4 + v18[6]);
        *(unsigned char *)(v5 + v18[7]) = *(unsigned char *)(v4 + v18[7]);
        *(unsigned char *)(v5 + v18[8]) = *(unsigned char *)(v4 + v18[8]);
        *(unsigned char *)(v5 + v18[9]) = *(unsigned char *)(v4 + v18[9]);
        *(unsigned char *)(v5 + v18[10]) = *(unsigned char *)(v4 + v18[10]);
        v22 = v18[11];
        v23 = v5 + v22;
        v24 = v4 + v22;
        swift_bridgeObjectRetain();
        v17(v23, v24, v16);
        v25 = v18[12];
        v26 = v5 + v25;
        v27 = (uint64_t *)(v4 + v25);
        v28 = *v27;
        *(unsigned char *)(v26 + 8) = *((unsigned char *)v27 + 8);
        *(void *)v26 = v28;
        v29 = v18[13];
        v30 = (char *)(v5 + v29);
        v31 = (char *)(v4 + v29);
        v32 = (int *)type metadata accessor for StaticDeviceMetadata();
        v33 = *((void *)v32 - 1);
        v270 = (void *)v16;
        v274 = (void (*)(void *, const void *, uint64_t))v17;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
        {
          v34 = __dst;
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          v17((uint64_t)v30, (uint64_t)v31, v16);
          v73 = v32[5];
          v74 = &v30[v73];
          v75 = &v31[v73];
          *(void *)v74 = *(void *)v75;
          *((void *)v74 + 1) = *((void *)v75 + 1);
          v76 = v32[6];
          v77 = &v30[v76];
          v78 = &v31[v76];
          *(void *)v77 = *(void *)v78;
          *((void *)v77 + 1) = *((void *)v78 + 1);
          v79 = v32[7];
          v80 = &v30[v79];
          v81 = &v31[v79];
          *(void *)v80 = *(void *)v81;
          *((void *)v80 + 1) = *((void *)v81 + 1);
          v82 = v32[8];
          v83 = &v30[v82];
          v84 = &v31[v82];
          *(void *)v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          v30[v32[9]] = v31[v32[9]];
          v30[v32[10]] = v31[v32[10]];
          v30[v32[11]] = v31[v32[11]];
          v30[v32[12]] = v31[v32[12]];
          v85 = *(void (**)(char *, void, uint64_t, int *))(v33 + 56);
          swift_bridgeObjectRetain();
          v4 = a2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v85(v30, 0, 1, v32);
          v34 = __dst;
        }
        v86 = v18[14];
        v87 = (void *)(v5 + v86);
        v88 = (const void *)(v4 + v86);
        v89 = sub_251F34D20();
        v90 = *(void *)(v89 - 8);
        v265 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v90 + 48);
        v264 = v90;
        if (v265(v88, 1, v89))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v90 + 16))(v87, v88, v89);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
        }
        *(void *)(v5 + v18[15]) = *(void *)(v4 + v18[15]);
        v115 = v18[16];
        v116 = (void *)(v5 + v115);
        v117 = (void *)(v4 + v115);
        *v116 = *v117;
        v116[1] = v117[1];
        *(unsigned char *)(v5 + v18[17]) = *(unsigned char *)(v4 + v18[17]);
        *(unsigned char *)(v5 + v18[18]) = *(unsigned char *)(v4 + v18[18]);
        *(unsigned char *)(v5 + v18[19]) = *(unsigned char *)(v4 + v18[19]);
        *(unsigned char *)(v5 + v18[20]) = *(unsigned char *)(v4 + v18[20]);
        v118 = v18[21];
        v119 = (void *)(v5 + v118);
        v120 = (void *)(v4 + v118);
        *v119 = *v120;
        v119[1] = v120[1];
        *(unsigned char *)(v5 + v18[22]) = *(unsigned char *)(v4 + v18[22]);
        *(unsigned char *)(v5 + v18[23]) = *(unsigned char *)(v4 + v18[23]);
        *(unsigned char *)(v5 + v18[24]) = *(unsigned char *)(v4 + v18[24]);
        v121 = v18[25];
        v122 = (void *)(v5 + v121);
        v123 = (const void *)(v4 + v121);
        v124 = (unsigned int (*)(const void *, uint64_t, uint64_t))v34[6];
        swift_bridgeObjectRetain();
        v125 = v124;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v124(v123, 1, v16))
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v122, v123, *(void *)(*(void *)(v126 - 8) + 64));
        }
        else
        {
          v274(v122, v123, v16);
          ((void (*)(void *, void, uint64_t, uint64_t))v34[7])(v122, 0, 1, v16);
        }
        v138 = v18[26];
        v139 = (void *)(v5 + v138);
        v140 = (const void *)(a2 + v138);
        if (v124((const void *)(a2 + v138), 1, v16))
        {
          v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          v274(v139, v140, v16);
          ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v139, 0, 1, v16);
        }
        *(void *)(v5 + v18[27]) = *(void *)(a2 + v18[27]);
        *(void *)(v5 + v18[28]) = *(void *)(a2 + v18[28]);
        v152 = v18[29];
        v153 = (void *)(v5 + v152);
        v154 = (void *)(a2 + v152);
        *v153 = *v154;
        v153[1] = v154[1];
        v155 = v18[30];
        v284 = v5;
        v269 = (char *)(v5 + v155);
        v156 = (char *)(a2 + v155);
        v157 = type metadata accessor for StaticSoftwareUpdate(0);
        v158 = *(void *)(v157 - 8);
        v159 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v159(v156, 1, v157))
        {
          v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(v269, v156, *(void *)(*(void *)(v160 - 8) + 64));
          a3 = v280;
          v161 = v16;
          v162 = v274;
LABEL_64:
          v4 = a2;
          *(unsigned char *)(v5 + v18[31]) = *(unsigned char *)(a2 + v18[31]);
          *(void *)(v5 + v18[32]) = *(void *)(a2 + v18[32]);
          v216 = v18[33];
          v217 = (void *)(v5 + v216);
          v218 = (const void *)(a2 + v216);
          swift_bridgeObjectRetain();
          if (v125(v218, 1, v161))
          {
            v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
          }
          else
          {
            v162(v217, v218, v161);
            ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v217, 0, 1, v161);
          }
          v220 = v18[34];
          v221 = v5 + v220;
          v222 = (__int16 *)(a2 + v220);
          v223 = *v222;
          *(unsigned char *)(v221 + 2) = *((unsigned char *)v222 + 2);
          *(_WORD *)v221 = v223;
          v224 = v18[35];
          v225 = v5 + v224;
          v226 = (uint64_t *)(a2 + v224);
          v227 = *v226;
          *(_DWORD *)(v225 + 7) = *(_DWORD *)((char *)v226 + 7);
          *(void *)v225 = v227;
          goto LABEL_68;
        }
        v262 = v158;
        v161 = v16;
        v162 = v274;
        v274(v269, v156, (uint64_t)v270);
        v263 = v157;
        v176 = *(int *)(v157 + 20);
        v177 = &v269[v176];
        v178 = &v156[v176];
        v261 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        a3 = v280;
        v180 = v269;
        if (EnumCaseMultiPayload == 2)
        {
          *(void *)v177 = *(void *)v178;
          *((void *)v177 + 1) = *((void *)v178 + 1);
          updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
          v196 = *(int *)(updated + 20);
          v258 = (int *)updated;
          v259 = &v177[v196];
          v197 = &v178[v196];
          swift_bridgeObjectRetain();
          if (v265(v197, 1, v89))
          {
            v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v259, v197, *(void *)(*(void *)(v198 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v264 + 16))(v259, v197, v89);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v264 + 56))(v259, 0, 1, v89);
            v180 = v269;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v177, v178, *(void *)(*(void *)(v261 - 8) + 64));
LABEL_63:
              v5 = v284;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v262 + 56))(v180, 0, 1, v263);
              goto LABEL_64;
            }
            v274(v177, v178, (uint64_t)v270);
            v181 = (int *)type metadata accessor for StaticHH2Update(0);
            v177[v181[5]] = v178[v181[5]];
            v182 = v181[6];
            v183 = &v177[v182];
            v184 = &v178[v182];
            *(void *)v183 = *(void *)v184;
            *((void *)v183 + 1) = *((void *)v184 + 1);
            v185 = v181[7];
            v186 = &v177[v185];
            v187 = &v178[v185];
            v188 = v187[8];
            *(void *)v186 = *(void *)v187;
            v186[8] = v188;
            swift_bridgeObjectRetain();
LABEL_62:
            swift_storeEnumTagMultiPayload();
            goto LABEL_63;
          }
          *(void *)v177 = *(void *)v178;
          *((void *)v177 + 1) = *((void *)v178 + 1);
          v258 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          v199 = v258[5];
          v260 = &v177[v199];
          v200 = &v178[v199];
          swift_bridgeObjectRetain();
          if (v265(v200, 1, v89))
          {
            v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v260, v200, *(void *)(*(void *)(v201 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v264 + 16))(v260, v200, v89);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v264 + 56))(v260, 0, 1, v89);
            v180 = v269;
          }
        }
        v209 = v258[6];
        v210 = &v177[v209];
        v211 = &v178[v209];
        *(void *)v210 = *(void *)v211;
        *((void *)v210 + 1) = *((void *)v211 + 1);
        v212 = v258[7];
        v213 = &v177[v212];
        v214 = &v178[v212];
        *(void *)v213 = *(void *)v214;
        *((void *)v213 + 1) = *((void *)v214 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v177[*(int *)(v215 + 48)] = v178[*(int *)(v215 + 48)];
        goto LABEL_62;
      case 2u:
        v36 = sub_251F34DA0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v5, v4, v36);
        v37 = (int *)type metadata accessor for StaticServiceGroup();
        v38 = v37[5];
        v39 = (void *)(v5 + v38);
        v40 = (void *)(v4 + v38);
        *v39 = *v40;
        v39[1] = v40[1];
        *(unsigned char *)(v5 + v37[6]) = *(unsigned char *)(v4 + v37[6]);
        *(unsigned char *)(v5 + v37[7]) = *(unsigned char *)(v4 + v37[7]);
        *(void *)(v5 + v37[8]) = *(void *)(v4 + v37[8]);
        v41 = v37[9];
        v42 = (void *)(v5 + v41);
        v43 = (void *)(v4 + v41);
        *v42 = *v43;
        v42[1] = v43[1];
        *(unsigned char *)(v5 + v37[10]) = *(unsigned char *)(v4 + v37[10]);
        *(void *)(v5 + v37[11]) = *(void *)(v4 + v37[11]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 3u:
        v44 = sub_251F34DA0();
        v282 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
        v282(v5, v4, v44);
        v45 = (int *)type metadata accessor for StaticEndpoint();
        v46 = v45[5];
        v47 = v5 + v46;
        v48 = v4 + v46;
        v49 = *(_WORD *)(v48 + 8);
        *(void *)v47 = *(void *)v48;
        *(_WORD *)(v47 + 8) = v49;
        v50 = v45[6];
        v51 = (void *)(v5 + v50);
        v52 = (void *)(v4 + v50);
        *v51 = *v52;
        v51[1] = v52[1];
        *(void *)(v5 + v45[7]) = *(void *)(v4 + v45[7]);
        *(void *)(v5 + v45[8]) = *(void *)(v4 + v45[8]);
        *(void *)(v5 + v45[9]) = *(void *)(v4 + v45[9]);
        *(void *)(v5 + v45[10]) = *(void *)(v4 + v45[10]);
        v53 = v45[11];
        v54 = v5 + v53;
        v55 = v5;
        v56 = v4 + v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v282(v54, v56, v44);
        *(void *)(v55 + v45[12]) = *(void *)(v4 + v45[12]);
        v57 = v45[13];
        v58 = v55 + v57;
        v59 = v4 + v57;
        *(void *)v58 = *(void *)(v4 + v57);
        *(void *)(v58 + 8) = *(void *)(v4 + v57 + 8);
        *(void *)(v58 + 16) = *(void *)(v4 + v57 + 16);
        *(void *)(v58 + 24) = *(void *)(v4 + v57 + 24);
        *(void *)(v58 + 32) = *(void *)(v4 + v57 + 32);
        *(void *)(v58 + 40) = *(void *)(v4 + v57 + 40);
        *(unsigned char *)(v58 + 48) = *(unsigned char *)(v4 + v57 + 48);
        *(unsigned char *)(v58 + 49) = *(unsigned char *)(v4 + v57 + 49);
        *(unsigned char *)(v58 + 50) = *(unsigned char *)(v4 + v57 + 50);
        *(unsigned char *)(v58 + 51) = *(unsigned char *)(v4 + v57 + 51);
        v60 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
        __dsta = (void *)(v58 + v60);
        v61 = (const void *)(v59 + v60);
        v62 = sub_251F34D20();
        v63 = *(void *)(v62 - 8);
        v64 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v64(v61, 1, v62))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dsta, v61, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(__dsta, v61, v62);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v62);
        }
        v5 = v55;
        v92 = v45[14];
        v93 = v55 + v92;
        v4 = a2;
        v94 = (__int16 *)(a2 + v92);
        v95 = *v94;
        *(unsigned char *)(v93 + 2) = *((unsigned char *)v94 + 2);
        *(_WORD *)v93 = v95;
        *(unsigned char *)(v55 + v45[15]) = *(unsigned char *)(a2 + v45[15]);
        goto LABEL_68;
      default:
        v279 = a3;
        v6 = sub_251F34DA0();
        v7 = *(void *)(v6 - 8);
        v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
        v8(v5, v4, v6);
        v9 = (int *)type metadata accessor for StaticAccessory(0);
        v10 = v9[5];
        v11 = (void *)(v5 + v10);
        v12 = (void *)(v4 + v10);
        *v11 = *v12;
        v11[1] = v12[1];
        v13 = v9[6];
        v14 = (void *)(v5 + v13);
        v15 = (void *)(v4 + v13);
        type metadata accessor for StaticAccessory.DeviceIdentifier(0);
        swift_bridgeObjectRetain();
        v273 = v7;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v8((uint64_t)v14, (uint64_t)v15, v6);
        }
        else
        {
          *v14 = *v15;
          v14[1] = v15[1];
          swift_bridgeObjectRetain();
        }
        v66 = a2;
        swift_storeEnumTagMultiPayload();
        v67 = v9[7];
        v68 = (char *)(v5 + v67);
        v69 = (char *)(a2 + v67);
        v70 = (int *)type metadata accessor for StaticDeviceMetadata();
        v71 = *((void *)v70 - 1);
        v272 = (void (*)(char *, char *, uint64_t))v8;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v71 + 48))(v69, 1, v70))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          v8((uint64_t)v68, (uint64_t)v69, v6);
          v96 = v70[5];
          v97 = &v68[v96];
          v98 = &v69[v96];
          *(void *)v97 = *(void *)v98;
          *((void *)v97 + 1) = *((void *)v98 + 1);
          v99 = v70[6];
          v100 = &v68[v99];
          v101 = &v69[v99];
          *(void *)v100 = *(void *)v101;
          *((void *)v100 + 1) = *((void *)v101 + 1);
          v102 = v70[7];
          v103 = &v68[v102];
          v104 = &v69[v102];
          *(void *)v103 = *(void *)v104;
          *((void *)v103 + 1) = *((void *)v104 + 1);
          v105 = v70[8];
          v106 = &v68[v105];
          v107 = &v69[v105];
          *(void *)v106 = *(void *)v107;
          *((void *)v106 + 1) = *((void *)v107 + 1);
          v68[v70[9]] = v69[v70[9]];
          v68[v70[10]] = v69[v70[10]];
          v68[v70[11]] = v69[v70[11]];
          v68[v70[12]] = v69[v70[12]];
          v108 = *(void (**)(char *, void, uint64_t, int *))(v71 + 56);
          swift_bridgeObjectRetain();
          v66 = a2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v108(v68, 0, 1, v70);
        }
        v109 = v9[8];
        v110 = (void *)(v5 + v109);
        v111 = (const void *)(v66 + v109);
        v112 = sub_251F34D20();
        v113 = *(void *)(v112 - 8);
        v267 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        v268 = v112;
        v266 = v113;
        if (v267(v111, 1, v112))
        {
          v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v110, v111, v112);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
        }
        v127 = v9[9];
        v128 = v5 + v127;
        v129 = (uint64_t *)(v66 + v127);
        v130 = *v129;
        *(unsigned char *)(v128 + 8) = *((unsigned char *)v129 + 8);
        *(void *)v128 = v130;
        *(unsigned char *)(v5 + v9[10]) = *(unsigned char *)(v66 + v9[10]);
        v8(v5 + v9[11], v66 + v9[11], v6);
        *(void *)(v5 + v9[12]) = *(void *)(v66 + v9[12]);
        v131 = v9[13];
        v132 = (void *)(v5 + v131);
        v133 = (void *)(v66 + v131);
        *v132 = *v133;
        v132[1] = v133[1];
        *(unsigned char *)(v5 + v9[14]) = *(unsigned char *)(v66 + v9[14]);
        *(unsigned char *)(v5 + v9[15]) = *(unsigned char *)(v66 + v9[15]);
        *(unsigned char *)(v5 + v9[16]) = *(unsigned char *)(v66 + v9[16]);
        *(unsigned char *)(v5 + v9[17]) = *(unsigned char *)(v66 + v9[17]);
        *(unsigned char *)(v5 + v9[18]) = *(unsigned char *)(v66 + v9[18]);
        *(void *)(v5 + v9[19]) = *(void *)(v66 + v9[19]);
        *(void *)(v5 + v9[20]) = *(void *)(v66 + v9[20]);
        v134 = v9[21];
        v283 = v5;
        v271 = (void *)(v5 + v134);
        v135 = (const void *)(v66 + v134);
        v136 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v136(v135, 1, v6))
        {
          v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v271, v135, *(void *)(*(void *)(v137 - 8) + 64));
        }
        else
        {
          v8((uint64_t)v271, (uint64_t)v135, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v271, 0, 1, v6);
        }
        *(_WORD *)(v5 + v9[22]) = *(_WORD *)(a2 + v9[22]);
        v142 = v9[23];
        v143 = (void *)(v5 + v142);
        v144 = (void *)(a2 + v142);
        *v143 = *v144;
        v143[1] = v144[1];
        *(void *)(v5 + v9[24]) = *(void *)(a2 + v9[24]);
        *(unsigned char *)(v5 + v9[25]) = *(unsigned char *)(a2 + v9[25]);
        *(unsigned char *)(v5 + v9[26]) = *(unsigned char *)(a2 + v9[26]);
        *(unsigned char *)(v5 + v9[27]) = *(unsigned char *)(a2 + v9[27]);
        v145 = v9[28];
        v146 = (char *)(v5 + v145);
        v147 = (char *)(a2 + v145);
        v148 = type metadata accessor for StaticSoftwareUpdate(0);
        v149 = *(void *)(v148 - 8);
        v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v150(v147, 1, v148))
        {
          v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
          a3 = v279;
LABEL_58:
          v4 = a2;
          *(unsigned char *)(v5 + v9[29]) = *(unsigned char *)(a2 + v9[29]);
          *(unsigned char *)(v5 + v9[30]) = *(unsigned char *)(a2 + v9[30]);
          *(void *)(v5 + v9[31]) = *(void *)(a2 + v9[31]);
          swift_bridgeObjectRetain();
LABEL_68:
          swift_storeEnumTagMultiPayload();
          break;
        }
        v272(v146, v147, v6);
        v163 = *(int *)(v148 + 20);
        v275 = v146;
        v164 = &v146[v163];
        v165 = &v147[v163];
        v166 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        v167 = swift_getEnumCaseMultiPayload();
        a3 = v279;
        if (v167 == 2)
        {
          *(void *)v164 = *(void *)v165;
          *((void *)v164 + 1) = *((void *)v165 + 1);
          __dstb = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          v189 = __dstb[5];
          v190 = &v164[v189];
          v191 = &v165[v189];
          swift_bridgeObjectRetain();
          if (v267(v191, 1, v268))
          {
LABEL_47:
            v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
LABEL_56:
            v194 = v275;
            v202 = __dstb[6];
            v203 = &v164[v202];
            v204 = &v165[v202];
            *(void *)v203 = *(void *)v204;
            *((void *)v203 + 1) = *((void *)v204 + 1);
            v205 = __dstb[7];
            v206 = &v164[v205];
            v207 = &v165[v205];
            *(void *)v206 = *(void *)v207;
            *((void *)v206 + 1) = *((void *)v207 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v164[*(int *)(v208 + 48)] = v165[*(int *)(v208 + 48)];
            swift_storeEnumTagMultiPayload();
            v5 = v283;
LABEL_57:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v194, 0, 1, v148);
            goto LABEL_58;
          }
        }
        else
        {
          if (v167 != 1)
          {
            if (v167)
            {
              memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
            }
            else
            {
              v272(v164, v165, v6);
              v168 = (int *)type metadata accessor for StaticHH2Update(0);
              v164[v168[5]] = v165[v168[5]];
              v169 = v168[6];
              v170 = &v164[v169];
              v171 = &v165[v169];
              *(void *)v170 = *(void *)v171;
              *((void *)v170 + 1) = *((void *)v171 + 1);
              v172 = v168[7];
              v173 = &v164[v172];
              v174 = &v165[v172];
              v175 = v174[8];
              *(void *)v173 = *(void *)v174;
              v173[8] = v175;
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            v5 = v283;
            v194 = v275;
            goto LABEL_57;
          }
          *(void *)v164 = *(void *)v165;
          *((void *)v164 + 1) = *((void *)v165 + 1);
          __dstb = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          v192 = __dstb[5];
          v190 = &v164[v192];
          v191 = &v165[v192];
          swift_bridgeObjectRetain();
          if (v267(v191, 1, v268)) {
            goto LABEL_47;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v266 + 16))(v190, v191, v268);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v266 + 56))(v190, 0, 1, v268);
        goto LABEL_56;
    }
  }
  v228 = a3[5];
  v229 = (void *)(v5 + v228);
  v230 = (void *)(v4 + v228);
  *v229 = *v230;
  v229[1] = v230[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v231 = a3[6];
  v232 = (unsigned char *)(v5 + v231);
  v233 = (unsigned char *)(v4 + v231);
  v234 = (int *)type metadata accessor for StaticRoom(0);
  v235 = *((void *)v234 - 1);
  v236 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v235 + 48);
  v237 = v236(v232, 1, v234);
  v238 = v236(v233, 1, v234);
  if (!v237)
  {
    if (!v238)
    {
      v253 = sub_251F34DA0();
      v254 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v253 - 8) + 24);
      v254(v232, v233, v253);
      v255 = v234[5];
      v256 = &v232[v255];
      v257 = &v233[v255];
      *v256 = *v257;
      v256[1] = v257[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v232[v234[6]] = v233[v234[6]];
      *(void *)&v232[v234[7]] = *(void *)&v233[v234[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v254(&v232[v234[8]], &v233[v234[8]], v253);
      *(void *)&v232[v234[9]] = *(void *)&v233[v234[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[10]] = *(void *)&v233[v234[10]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[11]] = *(void *)&v233[v234[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[12]] = *(void *)&v233[v234[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[13]] = *(void *)&v233[v234[13]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[14]] = *(void *)&v233[v234[14]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[15]] = *(void *)&v233[v234[15]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[16]] = *(void *)&v233[v234[16]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[17]] = *(void *)&v233[v234[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v232[v234[18]] = *(void *)&v233[v234[18]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_251CF2CAC((uint64_t)v232, type metadata accessor for StaticRoom);
    goto LABEL_74;
  }
  if (v238)
  {
LABEL_74:
    v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
    memcpy(v232, v233, *(void *)(*(void *)(v248 - 8) + 64));
    goto LABEL_75;
  }
  v239 = sub_251F34DA0();
  v240 = *(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16);
  v240(v232, v233, v239);
  v241 = v234[5];
  v242 = &v232[v241];
  v243 = &v233[v241];
  *v242 = *v243;
  v242[1] = v243[1];
  v232[v234[6]] = v233[v234[6]];
  *(void *)&v232[v234[7]] = *(void *)&v233[v234[7]];
  v244 = v234[8];
  v281 = a3;
  v245 = &v232[v244];
  v246 = &v233[v244];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v240(v245, v246, v239);
  *(void *)&v232[v234[9]] = *(void *)&v233[v234[9]];
  *(void *)&v232[v234[10]] = *(void *)&v233[v234[10]];
  *(void *)&v232[v234[11]] = *(void *)&v233[v234[11]];
  *(void *)&v232[v234[12]] = *(void *)&v233[v234[12]];
  *(void *)&v232[v234[13]] = *(void *)&v233[v234[13]];
  *(void *)&v232[v234[14]] = *(void *)&v233[v234[14]];
  *(void *)&v232[v234[15]] = *(void *)&v233[v234[15]];
  *(void *)&v232[v234[16]] = *(void *)&v233[v234[16]];
  *(void *)&v232[v234[17]] = *(void *)&v233[v234[17]];
  *(void *)&v232[v234[18]] = *(void *)&v233[v234[18]];
  v247 = *(void (**)(unsigned char *, void, uint64_t, int *))(v235 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3 = v281;
  swift_bridgeObjectRetain();
  v4 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v247(v232, 0, 1, v234);
LABEL_75:
  v249 = a3[7];
  v250 = (void *)(v5 + v249);
  v251 = (void *)(v4 + v249);
  *v250 = *v251;
  v250[1] = v251[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v5 + a3[8]) = *(unsigned char *)(v4 + a3[8]);
  *(unsigned char *)(v5 + a3[9]) = *(unsigned char *)(v4 + a3[9]);
  *(unsigned char *)(v5 + a3[10]) = *(unsigned char *)(v4 + a3[10]);
  return v5;
}

uint64_t initializeWithTake for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v161 = a3;
      uint64_t v13 = sub_251F34DA0();
      uint64_t v154 = *(void *)(v13 - 8);
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 32);
      v14(a1, a2, v13);
      v15 = (int *)type metadata accessor for StaticService();
      *(_OWORD *)(a1 + v15[5]) = *(_OWORD *)(a2 + v15[5]);
      *(unsigned char *)(a1 + v15[6]) = *(unsigned char *)(a2 + v15[6]);
      *(unsigned char *)(a1 + v15[7]) = *(unsigned char *)(a2 + v15[7]);
      *(unsigned char *)(a1 + v15[8]) = *(unsigned char *)(a2 + v15[8]);
      *(unsigned char *)(a1 + v15[9]) = *(unsigned char *)(a2 + v15[9]);
      *(unsigned char *)(a1 + v15[10]) = *(unsigned char *)(a2 + v15[10]);
      v14(a1 + v15[11], a2 + v15[11], v13);
      uint64_t v16 = v15[12];
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      *(void *)uint64_t v17 = *(void *)v18;
      *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
      uint64_t v19 = v15[13];
      v20 = (char *)(a1 + v19);
      v21 = (char *)(a2 + v19);
      v22 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v23 = *((void *)v22 - 1);
      uint64_t v153 = v13;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v14((uint64_t)v20, (uint64_t)v21, v13);
        *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
        *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
        *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
        *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
        v20[v22[9]] = v21[v22[9]];
        v20[v22[10]] = v21[v22[10]];
        v20[v22[11]] = v21[v22[11]];
        v20[v22[12]] = v21[v22[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v50 = v15[14];
      v51 = (void *)(a1 + v50);
      v52 = (const void *)(a2 + v50);
      uint64_t v53 = sub_251F34D20();
      uint64_t v54 = *(void *)(v53 - 8);
      v151 = *(unsigned int (**)(void))(v54 + 48);
      a3 = v161;
      if (((unsigned int (*)(const void *, uint64_t, uint64_t))v151)(v52, 1, v53))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *(void *)(a1 + v15[15]) = *(void *)(a2 + v15[15]);
      *(_OWORD *)(a1 + v15[16]) = *(_OWORD *)(a2 + v15[16]);
      *(unsigned char *)(a1 + v15[17]) = *(unsigned char *)(a2 + v15[17]);
      *(unsigned char *)(a1 + v15[18]) = *(unsigned char *)(a2 + v15[18]);
      *(unsigned char *)(a1 + v15[19]) = *(unsigned char *)(a2 + v15[19]);
      *(unsigned char *)(a1 + v15[20]) = *(unsigned char *)(a2 + v15[20]);
      *(_OWORD *)(a1 + v15[21]) = *(_OWORD *)(a2 + v15[21]);
      *(unsigned char *)(a1 + v15[22]) = *(unsigned char *)(a2 + v15[22]);
      *(unsigned char *)(a1 + v15[23]) = *(unsigned char *)(a2 + v15[23]);
      *(unsigned char *)(a1 + v15[24]) = *(unsigned char *)(a2 + v15[24]);
      uint64_t v65 = v15[25];
      v66 = (void *)(a1 + v65);
      v67 = (const void *)(a2 + v65);
      __dsta = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48);
      if (__dsta(a2 + v65, 1, v153))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        v14((uint64_t)v66, (uint64_t)v67, v153);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v66, 0, 1, v153);
      }
      uint64_t v76 = v15[26];
      v77 = (void *)(a1 + v76);
      v78 = (const void *)(a2 + v76);
      uint64_t v150 = v53;
      if (__dsta(a2 + v76, 1, v153))
      {
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        v14((uint64_t)v77, (uint64_t)v78, v153);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v77, 0, 1, v153);
      }
      *(void *)(a1 + v15[27]) = *(void *)(a2 + v15[27]);
      *(void *)(a1 + v15[28]) = *(void *)(a2 + v15[28]);
      *(_OWORD *)(a1 + v15[29]) = *(_OWORD *)(a2 + v15[29]);
      uint64_t v85 = v15[30];
      v86 = (char *)(a1 + v85);
      v87 = (char *)(a2 + v85);
      uint64_t v88 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v89 = *(void *)(v88 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
      {
        uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
        goto LABEL_62;
      }
      uint64_t v146 = v89;
      v14((uint64_t)v86, (uint64_t)v87, v153);
      uint64_t v99 = *(int *)(v88 + 20);
      v147 = v86;
      v100 = &v86[v99];
      v101 = &v87[v99];
      uint64_t v145 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)v100 = *(_OWORD *)v101;
        uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v114 = *(int *)(updated + 20);
        v144 = v100;
        uint64_t v142 = updated;
        v143 = &v100[v114];
        v115 = &v101[v114];
        if (v151())
        {
LABEL_51:
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v143, v115, *(void *)(*(void *)(v118 - 8) + 64));
LABEL_59:
          *(_OWORD *)((char *)v144 + *(int *)(v142 + 24)) = *(_OWORD *)&v101[*(int *)(v142 + 24)];
          *(_OWORD *)((char *)v144 + *(int *)(v142 + 28)) = *(_OWORD *)&v101[*(int *)(v142 + 28)];
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v144 + *(int *)(v120 + 48)) = v101[*(int *)(v120 + 48)];
          goto LABEL_60;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v100, v101, *(void *)(*(void *)(v145 - 8) + 64));
            goto LABEL_61;
          }
          v14((uint64_t)v100, (uint64_t)v101, v153);
          v103 = (int *)type metadata accessor for StaticHH2Update(0);
          v100[v103[5]] = v101[v103[5]];
          *(_OWORD *)&v100[v103[6]] = *(_OWORD *)&v101[v103[6]];
          uint64_t v104 = v103[7];
          v105 = &v100[v104];
          v106 = &v101[v104];
          v105[8] = v106[8];
          *(void *)v105 = *(void *)v106;
LABEL_60:
          swift_storeEnumTagMultiPayload();
LABEL_61:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v146 + 56))(v147, 0, 1, v88);
LABEL_62:
          *(unsigned char *)(a1 + v15[31]) = *(unsigned char *)(a2 + v15[31]);
          *(void *)(a1 + v15[32]) = *(void *)(a2 + v15[32]);
          uint64_t v121 = v15[33];
          v122 = (void *)(a1 + v121);
          v123 = (const void *)(a2 + v121);
          if (__dsta(a2 + v121, 1, v153))
          {
            uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            v14((uint64_t)v122, (uint64_t)v123, v153);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v122, 0, 1, v153);
          }
          uint64_t v125 = v15[34];
          uint64_t v126 = a1 + v125;
          uint64_t v127 = a2 + v125;
          *(_WORD *)uint64_t v126 = *(_WORD *)v127;
          *(unsigned char *)(v126 + 2) = *(unsigned char *)(v127 + 2);
          uint64_t v128 = v15[35];
          uint64_t v129 = a1 + v128;
          uint64_t v130 = a2 + v128;
          *(_DWORD *)(v129 + 7) = *(_DWORD *)(v130 + 7);
          *(void *)uint64_t v129 = *(void *)v130;
          goto LABEL_66;
        }
        *(_OWORD *)v100 = *(_OWORD *)v101;
        uint64_t v116 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v117 = *(int *)(v116 + 20);
        v144 = v100;
        uint64_t v142 = v116;
        v143 = &v100[v117];
        v115 = &v101[v117];
        if (v151()) {
          goto LABEL_51;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v143, v115, v150);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v143, 0, 1, v150);
      goto LABEL_59;
    case 2u:
      uint64_t v25 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      v26 = (int *)type metadata accessor for StaticServiceGroup();
      *(_OWORD *)(a1 + v26[5]) = *(_OWORD *)(a2 + v26[5]);
      *(unsigned char *)(a1 + v26[6]) = *(unsigned char *)(a2 + v26[6]);
      *(unsigned char *)(a1 + v26[7]) = *(unsigned char *)(a2 + v26[7]);
      *(void *)(a1 + v26[8]) = *(void *)(a2 + v26[8]);
      *(_OWORD *)(a1 + v26[9]) = *(_OWORD *)(a2 + v26[9]);
      *(unsigned char *)(a1 + v26[10]) = *(unsigned char *)(a2 + v26[10]);
      *(void *)(a1 + v26[11]) = *(void *)(a2 + v26[11]);
      goto LABEL_66;
    case 3u:
      uint64_t v27 = sub_251F34DA0();
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);
      v28(a1, a2, v27);
      v29 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v30 = v29[5];
      uint64_t v31 = a1 + v30;
      uint64_t v32 = a2 + v30;
      *(void *)uint64_t v31 = *(void *)v32;
      *(_WORD *)(v31 + 8) = *(_WORD *)(v32 + 8);
      *(_OWORD *)(a1 + v29[6]) = *(_OWORD *)(a2 + v29[6]);
      *(void *)(a1 + v29[7]) = *(void *)(a2 + v29[7]);
      *(void *)(a1 + v29[8]) = *(void *)(a2 + v29[8]);
      *(void *)(a1 + v29[9]) = *(void *)(a2 + v29[9]);
      *(void *)(a1 + v29[10]) = *(void *)(a2 + v29[10]);
      v28(a1 + v29[11], a2 + v29[11], v27);
      *(void *)(a1 + v29[12]) = *(void *)(a2 + v29[12]);
      uint64_t v33 = v29[13];
      uint64_t v34 = a1 + v33;
      uint64_t v35 = a2 + v33;
      long long v36 = *(_OWORD *)(a2 + v33 + 16);
      *(_OWORD *)uint64_t v34 = *(_OWORD *)(a2 + v33);
      *(_OWORD *)(v34 + 16) = v36;
      *(_OWORD *)(v34 + 32) = *(_OWORD *)(a2 + v33 + 32);
      *(_DWORD *)(v34 + 48) = *(_DWORD *)(a2 + v33 + 48);
      uint64_t v37 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v38 = (void *)(v34 + v37);
      v39 = (const void *)(v35 + v37);
      uint64_t v40 = sub_251F34D20();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v56 = v29[14];
      uint64_t v57 = a1 + v56;
      uint64_t v58 = a2 + v56;
      *(_WORD *)uint64_t v57 = *(_WORD *)v58;
      *(unsigned char *)(v57 + 2) = *(unsigned char *)(v58 + 2);
      *(unsigned char *)(a1 + v29[15]) = *(unsigned char *)(a2 + v29[15]);
      goto LABEL_66;
    default:
      v160 = a3;
      uint64_t v6 = sub_251F34DA0();
      __dst = *(void **)(v6 - 8);
      v7 = (void (*)(uint64_t, uint64_t, uint64_t))__dst[4];
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for StaticAccessory(0);
      *(_OWORD *)(a1 + v8[5]) = *(_OWORD *)(a2 + v8[5]);
      uint64_t v9 = v8[6];
      v10 = (void *)(a1 + v9);
      v11 = (const void *)(a2 + v9);
      uint64_t v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      v159 = (void (*)(char *, char *, uint64_t))v7;
      uint64_t v158 = v6;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v7((uint64_t)v10, (uint64_t)v11, v6);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      a3 = v160;
      uint64_t v43 = v8[7];
      v44 = (char *)(a1 + v43);
      v45 = (char *)(a2 + v43);
      v46 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v47 = *((void *)v46 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v49 = v158;
      }
      else
      {
        uint64_t v49 = v158;
        v7((uint64_t)v44, (uint64_t)v45, v158);
        *(_OWORD *)&v44[v46[5]] = *(_OWORD *)&v45[v46[5]];
        *(_OWORD *)&v44[v46[6]] = *(_OWORD *)&v45[v46[6]];
        *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
        *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
        v44[v46[9]] = v45[v46[9]];
        v44[v46[10]] = v45[v46[10]];
        v44[v46[11]] = v45[v46[11]];
        v44[v46[12]] = v45[v46[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
      }
      uint64_t v59 = v8[8];
      v60 = (void *)(a1 + v59);
      v61 = (const void *)(a2 + v59);
      uint64_t v62 = sub_251F34D20();
      uint64_t v63 = *(void *)(v62 - 8);
      v152 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48);
      uint64_t v149 = v63;
      if (v152(v61, 1, v62))
      {
        uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v63 + 32))(v60, v61, v62);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      uint64_t v69 = v8[9];
      uint64_t v70 = a1 + v69;
      uint64_t v71 = a2 + v69;
      *(void *)uint64_t v70 = *(void *)v71;
      *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
      *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
      v7(a1 + v8[11], a2 + v8[11], v49);
      *(void *)(a1 + v8[12]) = *(void *)(a2 + v8[12]);
      *(_OWORD *)(a1 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
      *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
      *(unsigned char *)(a1 + v8[15]) = *(unsigned char *)(a2 + v8[15]);
      *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
      *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
      *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
      *(void *)(a1 + v8[19]) = *(void *)(a2 + v8[19]);
      *(void *)(a1 + v8[20]) = *(void *)(a2 + v8[20]);
      uint64_t v72 = v8[21];
      v73 = (void *)(a1 + v72);
      v74 = (const void *)(a2 + v72);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))__dst[6])(a2 + v72, 1, v49))
      {
        uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v73, (uint64_t)v74, v49);
        ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v73, 0, 1, v49);
      }
      *(_WORD *)(a1 + v8[22]) = *(_WORD *)(a2 + v8[22]);
      *(_OWORD *)(a1 + v8[23]) = *(_OWORD *)(a2 + v8[23]);
      *(void *)(a1 + v8[24]) = *(void *)(a2 + v8[24]);
      *(unsigned char *)(a1 + v8[25]) = *(unsigned char *)(a2 + v8[25]);
      *(unsigned char *)(a1 + v8[26]) = *(unsigned char *)(a2 + v8[26]);
      *(unsigned char *)(a1 + v8[27]) = *(unsigned char *)(a2 + v8[27]);
      uint64_t v80 = v8[28];
      v162 = (char *)(a1 + v80);
      v81 = (char *)(a2 + v80);
      uint64_t v82 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v83 = *(void *)(v82 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
      {
        uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v162, v81, *(void *)(*(void *)(v84 - 8) + 64));
        goto LABEL_57;
      }
      v7((uint64_t)v162, (uint64_t)v81, v49);
      uint64_t v91 = *(int *)(v82 + 20);
      __dstb = &v162[v91];
      v92 = &v81[v91];
      uint64_t v93 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      __src = v92;
      int v94 = swift_getEnumCaseMultiPayload();
      if (v94 == 2)
      {
        *(_OWORD *)__dstb = *(_OWORD *)v92;
        v107 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v108 = v107[5];
        v109 = &__dstb[v108];
        v110 = &__src[v108];
        if (v152(&__src[v108], 1, v62)) {
          goto LABEL_46;
        }
        goto LABEL_53;
      }
      if (v94 == 1)
      {
        *(_OWORD *)__dstb = *(_OWORD *)v92;
        v107 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v111 = v107[5];
        v109 = &__dstb[v111];
        v110 = &__src[v111];
        if (v152(&__src[v111], 1, v62))
        {
LABEL_46:
          uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
LABEL_54:
          *(_OWORD *)&__dstb[v107[6]] = *(_OWORD *)&__src[v107[6]];
          *(_OWORD *)&__dstb[v107[7]] = *(_OWORD *)&__src[v107[7]];
          uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          __dstb[*(int *)(v119 + 48)] = __src[*(int *)(v119 + 48)];
          goto LABEL_55;
        }
LABEL_53:
        (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v109, v110, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v109, 0, 1, v62);
        goto LABEL_54;
      }
      if (v94)
      {
        memcpy(__dstb, v92, *(void *)(*(void *)(v93 - 8) + 64));
        goto LABEL_56;
      }
      v159(__dstb, v92, v49);
      v95 = (int *)type metadata accessor for StaticHH2Update(0);
      __dstb[v95[5]] = v92[v95[5]];
      *(_OWORD *)&__dstb[v95[6]] = *(_OWORD *)&v92[v95[6]];
      uint64_t v96 = v95[7];
      v97 = &__dstb[v96];
      v98 = &v92[v96];
      v97[8] = v98[8];
      *(void *)v97 = *(void *)v98;
LABEL_55:
      swift_storeEnumTagMultiPayload();
LABEL_56:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v162, 0, 1, v82);
LABEL_57:
      *(unsigned char *)(a1 + v8[29]) = *(unsigned char *)(a2 + v8[29]);
      *(unsigned char *)(a1 + v8[30]) = *(unsigned char *)(a2 + v8[30]);
      *(void *)(a1 + v8[31]) = *(void *)(a2 + v8[31]);
LABEL_66:
      swift_storeEnumTagMultiPayload();
      uint64_t v131 = a3[6];
      *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
      v132 = (char *)(a1 + v131);
      v133 = (char *)(a2 + v131);
      v134 = (int *)type metadata accessor for StaticRoom(0);
      uint64_t v135 = *((void *)v134 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v135 + 48))(v133, 1, v134))
      {
        uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
        memcpy(v132, v133, *(void *)(*(void *)(v136 - 8) + 64));
      }
      else
      {
        uint64_t v137 = sub_251F34DA0();
        v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32);
        v138(v132, v133, v137);
        *(_OWORD *)&v132[v134[5]] = *(_OWORD *)&v133[v134[5]];
        v132[v134[6]] = v133[v134[6]];
        *(void *)&v132[v134[7]] = *(void *)&v133[v134[7]];
        v138(&v132[v134[8]], &v133[v134[8]], v137);
        *(void *)&v132[v134[9]] = *(void *)&v133[v134[9]];
        *(void *)&v132[v134[10]] = *(void *)&v133[v134[10]];
        *(void *)&v132[v134[11]] = *(void *)&v133[v134[11]];
        *(void *)&v132[v134[12]] = *(void *)&v133[v134[12]];
        *(void *)&v132[v134[13]] = *(void *)&v133[v134[13]];
        *(void *)&v132[v134[14]] = *(void *)&v133[v134[14]];
        *(void *)&v132[v134[15]] = *(void *)&v133[v134[15]];
        *(void *)&v132[v134[16]] = *(void *)&v133[v134[16]];
        *(void *)&v132[v134[17]] = *(void *)&v133[v134[17]];
        *(void *)&v132[v134[18]] = *(void *)&v133[v134[18]];
        (*(void (**)(char *, void, uint64_t, int *))(v135 + 56))(v132, 0, 1, v134);
      }
      uint64_t v139 = a3[8];
      *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
      *(unsigned char *)(a1 + v139) = *(unsigned char *)(a2 + v139);
      uint64_t v140 = a3[10];
      *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
      *(unsigned char *)(a1 + v140) = *(unsigned char *)(a2 + v140);
      return a1;
  }
}

uint64_t assignWithTake for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_251CF2CAC(a1, type metadata accessor for AccessoryDetails.Payload);
    type metadata accessor for AccessoryDetails.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v180 = a3;
        uint64_t v13 = sub_251F34DA0();
        uint64_t v173 = *(void *)(v13 - 8);
        v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v173 + 32);
        v14(a1, a2, v13);
        v15 = (int *)type metadata accessor for StaticService();
        *(_OWORD *)(a1 + v15[5]) = *(_OWORD *)(a2 + v15[5]);
        *(unsigned char *)(a1 + v15[6]) = *(unsigned char *)(a2 + v15[6]);
        *(unsigned char *)(a1 + v15[7]) = *(unsigned char *)(a2 + v15[7]);
        *(unsigned char *)(a1 + v15[8]) = *(unsigned char *)(a2 + v15[8]);
        *(unsigned char *)(a1 + v15[9]) = *(unsigned char *)(a2 + v15[9]);
        *(unsigned char *)(a1 + v15[10]) = *(unsigned char *)(a2 + v15[10]);
        v14(a1 + v15[11], a2 + v15[11], v13);
        uint64_t v16 = v15[12];
        uint64_t v17 = a1 + v16;
        uint64_t v18 = a2 + v16;
        *(void *)uint64_t v17 = *(void *)v18;
        *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
        uint64_t v19 = v15[13];
        v20 = (char *)(a1 + v19);
        v21 = (char *)(a2 + v19);
        v22 = (int *)type metadata accessor for StaticDeviceMetadata();
        uint64_t v23 = *((void *)v22 - 1);
        uint64_t v172 = v13;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          v14((uint64_t)v20, (uint64_t)v21, v13);
          *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
          *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
          *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
          *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
          v20[v22[9]] = v21[v22[9]];
          v20[v22[10]] = v21[v22[10]];
          v20[v22[11]] = v21[v22[11]];
          v20[v22[12]] = v21[v22[12]];
          (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
        }
        uint64_t v50 = v15[14];
        v51 = (void *)(a1 + v50);
        v52 = (const void *)(a2 + v50);
        uint64_t v53 = sub_251F34D20();
        uint64_t v54 = *(void *)(v53 - 8);
        v170 = *(unsigned int (**)(void))(v54 + 48);
        a3 = v180;
        if (((unsigned int (*)(const void *, uint64_t, uint64_t))v170)(v52, 1, v53))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v54 + 32))(v51, v52, v53);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        }
        *(void *)(a1 + v15[15]) = *(void *)(a2 + v15[15]);
        *(_OWORD *)(a1 + v15[16]) = *(_OWORD *)(a2 + v15[16]);
        *(unsigned char *)(a1 + v15[17]) = *(unsigned char *)(a2 + v15[17]);
        *(unsigned char *)(a1 + v15[18]) = *(unsigned char *)(a2 + v15[18]);
        *(unsigned char *)(a1 + v15[19]) = *(unsigned char *)(a2 + v15[19]);
        *(unsigned char *)(a1 + v15[20]) = *(unsigned char *)(a2 + v15[20]);
        *(_OWORD *)(a1 + v15[21]) = *(_OWORD *)(a2 + v15[21]);
        *(unsigned char *)(a1 + v15[22]) = *(unsigned char *)(a2 + v15[22]);
        *(unsigned char *)(a1 + v15[23]) = *(unsigned char *)(a2 + v15[23]);
        *(unsigned char *)(a1 + v15[24]) = *(unsigned char *)(a2 + v15[24]);
        uint64_t v65 = v15[25];
        v66 = (void *)(a1 + v65);
        v67 = (const void *)(a2 + v65);
        __dsta = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48);
        if (__dsta(a2 + v65, 1, v172))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v14((uint64_t)v66, (uint64_t)v67, v172);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v66, 0, 1, v172);
        }
        uint64_t v76 = v15[26];
        v77 = (void *)(a1 + v76);
        v78 = (const void *)(a2 + v76);
        uint64_t v169 = v53;
        if (__dsta(a2 + v76, 1, v172))
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          v14((uint64_t)v77, (uint64_t)v78, v172);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v77, 0, 1, v172);
        }
        *(void *)(a1 + v15[27]) = *(void *)(a2 + v15[27]);
        *(void *)(a1 + v15[28]) = *(void *)(a2 + v15[28]);
        *(_OWORD *)(a1 + v15[29]) = *(_OWORD *)(a2 + v15[29]);
        uint64_t v85 = v15[30];
        v86 = (char *)(a1 + v85);
        v87 = (char *)(a2 + v85);
        uint64_t v88 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v89 = *(void *)(v88 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
        {
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
LABEL_63:
          *(unsigned char *)(a1 + v15[31]) = *(unsigned char *)(a2 + v15[31]);
          *(void *)(a1 + v15[32]) = *(void *)(a2 + v15[32]);
          uint64_t v121 = v15[33];
          v122 = (void *)(a1 + v121);
          v123 = (const void *)(a2 + v121);
          if (__dsta(a2 + v121, 1, v172))
          {
            uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            v14((uint64_t)v122, (uint64_t)v123, v172);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v122, 0, 1, v172);
          }
          uint64_t v125 = v15[34];
          uint64_t v126 = a1 + v125;
          uint64_t v127 = a2 + v125;
          *(_WORD *)uint64_t v126 = *(_WORD *)v127;
          *(unsigned char *)(v126 + 2) = *(unsigned char *)(v127 + 2);
          uint64_t v128 = v15[35];
          uint64_t v129 = a1 + v128;
          uint64_t v130 = a2 + v128;
          *(_DWORD *)(v129 + 7) = *(_DWORD *)(v130 + 7);
          *(void *)uint64_t v129 = *(void *)v130;
          goto LABEL_67;
        }
        uint64_t v165 = v89;
        v14((uint64_t)v86, (uint64_t)v87, v172);
        uint64_t v99 = *(int *)(v88 + 20);
        v166 = v86;
        v100 = &v86[v99];
        v101 = &v87[v99];
        uint64_t v164 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_OWORD *)v100 = *(_OWORD *)v101;
          uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v114 = *(int *)(updated + 20);
          v163 = v100;
          uint64_t v161 = updated;
          v162 = &v100[v114];
          v115 = &v101[v114];
          if (v170())
          {
LABEL_52:
            uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v162, v115, *(void *)(*(void *)(v118 - 8) + 64));
LABEL_60:
            *(_OWORD *)((char *)v163 + *(int *)(v161 + 24)) = *(_OWORD *)&v101[*(int *)(v161 + 24)];
            *(_OWORD *)((char *)v163 + *(int *)(v161 + 28)) = *(_OWORD *)&v101[*(int *)(v161 + 28)];
            uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            *((unsigned char *)v163 + *(int *)(v120 + 48)) = v101[*(int *)(v120 + 48)];
            goto LABEL_61;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v100, v101, *(void *)(*(void *)(v164 - 8) + 64));
LABEL_62:
              (*(void (**)(char *, void, uint64_t, uint64_t))(v165 + 56))(v166, 0, 1, v88);
              goto LABEL_63;
            }
            v14((uint64_t)v100, (uint64_t)v101, v172);
            v103 = (int *)type metadata accessor for StaticHH2Update(0);
            v100[v103[5]] = v101[v103[5]];
            *(_OWORD *)&v100[v103[6]] = *(_OWORD *)&v101[v103[6]];
            uint64_t v104 = v103[7];
            v105 = &v100[v104];
            v106 = &v101[v104];
            v105[8] = v106[8];
            *(void *)v105 = *(void *)v106;
LABEL_61:
            swift_storeEnumTagMultiPayload();
            goto LABEL_62;
          }
          *(_OWORD *)v100 = *(_OWORD *)v101;
          uint64_t v116 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v117 = *(int *)(v116 + 20);
          v163 = v100;
          uint64_t v161 = v116;
          v162 = &v100[v117];
          v115 = &v101[v117];
          if (v170()) {
            goto LABEL_52;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v162, v115, v169);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v162, 0, 1, v169);
        goto LABEL_60;
      case 2u:
        uint64_t v25 = sub_251F34DA0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
        v26 = (int *)type metadata accessor for StaticServiceGroup();
        *(_OWORD *)(a1 + v26[5]) = *(_OWORD *)(a2 + v26[5]);
        *(unsigned char *)(a1 + v26[6]) = *(unsigned char *)(a2 + v26[6]);
        *(unsigned char *)(a1 + v26[7]) = *(unsigned char *)(a2 + v26[7]);
        *(void *)(a1 + v26[8]) = *(void *)(a2 + v26[8]);
        *(_OWORD *)(a1 + v26[9]) = *(_OWORD *)(a2 + v26[9]);
        *(unsigned char *)(a1 + v26[10]) = *(unsigned char *)(a2 + v26[10]);
        *(void *)(a1 + v26[11]) = *(void *)(a2 + v26[11]);
        goto LABEL_67;
      case 3u:
        uint64_t v27 = sub_251F34DA0();
        v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);
        v28(a1, a2, v27);
        v29 = (int *)type metadata accessor for StaticEndpoint();
        uint64_t v30 = v29[5];
        uint64_t v31 = a1 + v30;
        uint64_t v32 = a2 + v30;
        *(void *)uint64_t v31 = *(void *)v32;
        *(_WORD *)(v31 + 8) = *(_WORD *)(v32 + 8);
        *(_OWORD *)(a1 + v29[6]) = *(_OWORD *)(a2 + v29[6]);
        *(void *)(a1 + v29[7]) = *(void *)(a2 + v29[7]);
        *(void *)(a1 + v29[8]) = *(void *)(a2 + v29[8]);
        *(void *)(a1 + v29[9]) = *(void *)(a2 + v29[9]);
        *(void *)(a1 + v29[10]) = *(void *)(a2 + v29[10]);
        v28(a1 + v29[11], a2 + v29[11], v27);
        *(void *)(a1 + v29[12]) = *(void *)(a2 + v29[12]);
        uint64_t v33 = v29[13];
        uint64_t v34 = a1 + v33;
        uint64_t v35 = a2 + v33;
        long long v36 = *(_OWORD *)(a2 + v33 + 16);
        *(_OWORD *)uint64_t v34 = *(_OWORD *)(a2 + v33);
        *(_OWORD *)(v34 + 16) = v36;
        *(_OWORD *)(v34 + 32) = *(_OWORD *)(a2 + v33 + 32);
        *(_DWORD *)(v34 + 48) = *(_DWORD *)(a2 + v33 + 48);
        uint64_t v37 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
        v38 = (void *)(v34 + v37);
        v39 = (const void *)(v35 + v37);
        uint64_t v40 = sub_251F34D20();
        uint64_t v41 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        uint64_t v56 = v29[14];
        uint64_t v57 = a1 + v56;
        uint64_t v58 = a2 + v56;
        *(_WORD *)uint64_t v57 = *(_WORD *)v58;
        *(unsigned char *)(v57 + 2) = *(unsigned char *)(v58 + 2);
        *(unsigned char *)(a1 + v29[15]) = *(unsigned char *)(a2 + v29[15]);
        goto LABEL_67;
      default:
        v179 = a3;
        uint64_t v6 = sub_251F34DA0();
        __dst = *(void **)(v6 - 8);
        v7 = (void (*)(uint64_t, uint64_t, uint64_t))__dst[4];
        v7(a1, a2, v6);
        v8 = (int *)type metadata accessor for StaticAccessory(0);
        *(_OWORD *)(a1 + v8[5]) = *(_OWORD *)(a2 + v8[5]);
        uint64_t v9 = v8[6];
        v10 = (void *)(a1 + v9);
        v11 = (const void *)(a2 + v9);
        uint64_t v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
        v178 = (void (*)(char *, char *, uint64_t))v7;
        uint64_t v177 = v6;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v7((uint64_t)v10, (uint64_t)v11, v6);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        a3 = v179;
        uint64_t v43 = v8[7];
        v44 = (char *)(a1 + v43);
        v45 = (char *)(a2 + v43);
        v46 = (int *)type metadata accessor for StaticDeviceMetadata();
        uint64_t v47 = *((void *)v46 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
          uint64_t v49 = v177;
        }
        else
        {
          uint64_t v49 = v177;
          v7((uint64_t)v44, (uint64_t)v45, v177);
          *(_OWORD *)&v44[v46[5]] = *(_OWORD *)&v45[v46[5]];
          *(_OWORD *)&v44[v46[6]] = *(_OWORD *)&v45[v46[6]];
          *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
          *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
          v44[v46[9]] = v45[v46[9]];
          v44[v46[10]] = v45[v46[10]];
          v44[v46[11]] = v45[v46[11]];
          v44[v46[12]] = v45[v46[12]];
          (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
        }
        uint64_t v59 = v8[8];
        v60 = (void *)(a1 + v59);
        v61 = (const void *)(a2 + v59);
        uint64_t v62 = sub_251F34D20();
        uint64_t v63 = *(void *)(v62 - 8);
        v171 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48);
        uint64_t v168 = v63;
        if (v171(v61, 1, v62))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v63 + 32))(v60, v61, v62);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        uint64_t v69 = v8[9];
        uint64_t v70 = a1 + v69;
        uint64_t v71 = a2 + v69;
        *(void *)uint64_t v70 = *(void *)v71;
        *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
        *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
        v7(a1 + v8[11], a2 + v8[11], v49);
        *(void *)(a1 + v8[12]) = *(void *)(a2 + v8[12]);
        *(_OWORD *)(a1 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
        *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
        *(unsigned char *)(a1 + v8[15]) = *(unsigned char *)(a2 + v8[15]);
        *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
        *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
        *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
        *(void *)(a1 + v8[19]) = *(void *)(a2 + v8[19]);
        *(void *)(a1 + v8[20]) = *(void *)(a2 + v8[20]);
        uint64_t v72 = v8[21];
        v73 = (void *)(a1 + v72);
        v74 = (const void *)(a2 + v72);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))__dst[6])(a2 + v72, 1, v49))
        {
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          v7((uint64_t)v73, (uint64_t)v74, v49);
          ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v73, 0, 1, v49);
        }
        *(_WORD *)(a1 + v8[22]) = *(_WORD *)(a2 + v8[22]);
        *(_OWORD *)(a1 + v8[23]) = *(_OWORD *)(a2 + v8[23]);
        *(void *)(a1 + v8[24]) = *(void *)(a2 + v8[24]);
        *(unsigned char *)(a1 + v8[25]) = *(unsigned char *)(a2 + v8[25]);
        *(unsigned char *)(a1 + v8[26]) = *(unsigned char *)(a2 + v8[26]);
        *(unsigned char *)(a1 + v8[27]) = *(unsigned char *)(a2 + v8[27]);
        uint64_t v80 = v8[28];
        v181 = (char *)(a1 + v80);
        v81 = (char *)(a2 + v80);
        uint64_t v82 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v83 = *(void *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
        {
          uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(v181, v81, *(void *)(*(void *)(v84 - 8) + 64));
LABEL_58:
          *(unsigned char *)(a1 + v8[29]) = *(unsigned char *)(a2 + v8[29]);
          *(unsigned char *)(a1 + v8[30]) = *(unsigned char *)(a2 + v8[30]);
          *(void *)(a1 + v8[31]) = *(void *)(a2 + v8[31]);
LABEL_67:
          swift_storeEnumTagMultiPayload();
          break;
        }
        v7((uint64_t)v181, (uint64_t)v81, v49);
        uint64_t v91 = *(int *)(v82 + 20);
        __dstb = &v181[v91];
        v92 = &v81[v91];
        uint64_t v93 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        __src = v92;
        int v94 = swift_getEnumCaseMultiPayload();
        if (v94 == 2)
        {
          *(_OWORD *)__dstb = *(_OWORD *)v92;
          v107 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v108 = v107[5];
          v109 = &__dstb[v108];
          v110 = &__src[v108];
          if (v171(&__src[v108], 1, v62))
          {
LABEL_47:
            uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
LABEL_55:
            *(_OWORD *)&__dstb[v107[6]] = *(_OWORD *)&__src[v107[6]];
            *(_OWORD *)&__dstb[v107[7]] = *(_OWORD *)&__src[v107[7]];
            uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            __dstb[*(int *)(v119 + 48)] = __src[*(int *)(v119 + 48)];
            goto LABEL_56;
          }
        }
        else
        {
          if (v94 != 1)
          {
            if (v94)
            {
              memcpy(__dstb, v92, *(void *)(*(void *)(v93 - 8) + 64));
LABEL_57:
              (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v181, 0, 1, v82);
              goto LABEL_58;
            }
            v178(__dstb, v92, v49);
            v95 = (int *)type metadata accessor for StaticHH2Update(0);
            __dstb[v95[5]] = v92[v95[5]];
            *(_OWORD *)&__dstb[v95[6]] = *(_OWORD *)&v92[v95[6]];
            uint64_t v96 = v95[7];
            v97 = &__dstb[v96];
            v98 = &v92[v96];
            v97[8] = v98[8];
            *(void *)v97 = *(void *)v98;
LABEL_56:
            swift_storeEnumTagMultiPayload();
            goto LABEL_57;
          }
          *(_OWORD *)__dstb = *(_OWORD *)v92;
          v107 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v111 = v107[5];
          v109 = &__dstb[v111];
          v110 = &__src[v111];
          if (v171(&__src[v111], 1, v62)) {
            goto LABEL_47;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v109, v110, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v109, 0, 1, v62);
        goto LABEL_55;
    }
  }
  uint64_t v131 = a3[5];
  v132 = (void *)(a1 + v131);
  v133 = (uint64_t *)(a2 + v131);
  uint64_t v135 = *v133;
  uint64_t v134 = v133[1];
  void *v132 = v135;
  v132[1] = v134;
  swift_bridgeObjectRelease();
  uint64_t v136 = a3[6];
  uint64_t v137 = (unsigned char *)(a1 + v136);
  v138 = (unsigned char *)(a2 + v136);
  uint64_t v139 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v140 = *((void *)v139 - 1);
  v141 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v140 + 48);
  int v142 = v141(v137, 1, v139);
  int v143 = v141(v138, 1, v139);
  if (!v142)
  {
    if (!v143)
    {
      uint64_t v154 = sub_251F34DA0();
      v155 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v154 - 8) + 40);
      v155(v137, v138, v154);
      uint64_t v156 = v139[5];
      v157 = &v137[v156];
      uint64_t v158 = (uint64_t *)&v138[v156];
      uint64_t v160 = *v158;
      uint64_t v159 = v158[1];
      void *v157 = v160;
      v157[1] = v159;
      swift_bridgeObjectRelease();
      v137[v139[6]] = v138[v139[6]];
      *(void *)&v137[v139[7]] = *(void *)&v138[v139[7]];
      swift_bridgeObjectRelease();
      v155(&v137[v139[8]], &v138[v139[8]], v154);
      *(void *)&v137[v139[9]] = *(void *)&v138[v139[9]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[10]] = *(void *)&v138[v139[10]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[11]] = *(void *)&v138[v139[11]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[12]] = *(void *)&v138[v139[12]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[13]] = *(void *)&v138[v139[13]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[14]] = *(void *)&v138[v139[14]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[15]] = *(void *)&v138[v139[15]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[16]] = *(void *)&v138[v139[16]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[17]] = *(void *)&v138[v139[17]];
      swift_bridgeObjectRelease();
      *(void *)&v137[v139[18]] = *(void *)&v138[v139[18]];
      swift_bridgeObjectRelease();
      goto LABEL_74;
    }
    sub_251CF2CAC((uint64_t)v137, type metadata accessor for StaticRoom);
    goto LABEL_73;
  }
  if (v143)
  {
LABEL_73:
    uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
    memcpy(v137, v138, *(void *)(*(void *)(v146 - 8) + 64));
    goto LABEL_74;
  }
  uint64_t v144 = sub_251F34DA0();
  uint64_t v145 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v144 - 8) + 32);
  v145(v137, v138, v144);
  *(_OWORD *)&v137[v139[5]] = *(_OWORD *)&v138[v139[5]];
  v137[v139[6]] = v138[v139[6]];
  *(void *)&v137[v139[7]] = *(void *)&v138[v139[7]];
  v145(&v137[v139[8]], &v138[v139[8]], v144);
  *(void *)&v137[v139[9]] = *(void *)&v138[v139[9]];
  *(void *)&v137[v139[10]] = *(void *)&v138[v139[10]];
  *(void *)&v137[v139[11]] = *(void *)&v138[v139[11]];
  *(void *)&v137[v139[12]] = *(void *)&v138[v139[12]];
  *(void *)&v137[v139[13]] = *(void *)&v138[v139[13]];
  *(void *)&v137[v139[14]] = *(void *)&v138[v139[14]];
  *(void *)&v137[v139[15]] = *(void *)&v138[v139[15]];
  *(void *)&v137[v139[16]] = *(void *)&v138[v139[16]];
  *(void *)&v137[v139[17]] = *(void *)&v138[v139[17]];
  *(void *)&v137[v139[18]] = *(void *)&v138[v139[18]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v140 + 56))(v137, 0, 1, v139);
LABEL_74:
  uint64_t v147 = a3[7];
  v148 = (void *)(a1 + v147);
  uint64_t v149 = (uint64_t *)(a2 + v147);
  uint64_t v151 = *v149;
  uint64_t v150 = v149[1];
  void *v148 = v151;
  v148[1] = v150;
  swift_bridgeObjectRelease();
  uint64_t v152 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v152) = *(unsigned char *)(a2 + v152);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251CF2654);
}

uint64_t sub_251CF2654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251CF27A8);
}

uint64_t sub_251CF27A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_251CF28DC()
{
  type metadata accessor for AccessoryDetails.Payload(319);
  if (v0 <= 0x3F)
  {
    sub_251CF29C4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_251CF29C4()
{
  if (!qword_269BA2470)
  {
    type metadata accessor for StaticRoom(255);
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269BA2470);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AccessoryDetailsBasicInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251CF2AE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryDetailsBasicInfo.CodingKeys()
{
  return &type metadata for AccessoryDetailsBasicInfo.CodingKeys;
}

unint64_t sub_251CF2B24()
{
  unint64_t result = qword_269BA2478;
  if (!qword_269BA2478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2478);
  }
  return result;
}

unint64_t sub_251CF2B7C()
{
  unint64_t result = qword_269BA2480;
  if (!qword_269BA2480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2480);
  }
  return result;
}

unint64_t sub_251CF2BD4()
{
  unint64_t result = qword_269BA2488;
  if (!qword_269BA2488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2488);
  }
  return result;
}

uint64_t sub_251CF2C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251CDD044(a1, a2);
}

uint64_t sub_251CF2C44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251CF2CAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251CF2D0C()
{
  uint64_t v1 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v5 = v0 + v3;
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v59 = v4;
      uint64_t v6 = sub_251F34DA0();
      uint64_t v7 = *(void *)(v6 - 8);
      v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v8(v5, v6);
      uint64_t v9 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + v9[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      uint64_t v57 = v8;
      if (swift_getEnumCaseMultiPayload() == 1) {
        v8(v10, v6);
      }
      else {
        swift_bridgeObjectRelease();
      }
      uint64_t v34 = v5 + v9[7];
      uint64_t v35 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
      {
        v8(v34, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = v5 + v9[8];
      uint64_t v37 = sub_251F34D20();
      uint64_t v56 = *(void *)(v37 - 8);
      uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
      if (!v54(v36, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v36, v37);
      }
      v57(v5 + v9[11], v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v5 + v9[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v38, 1, v6)) {
        v57(v38, v6);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v5 + v9[28];
      uint64_t v40 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40)) {
        goto LABEL_42;
      }
      v57(v39, v6);
      uint64_t v41 = v39 + *(int *)(v40 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = v41 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v54(v45, 1, v37)) {
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v45, v37);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_42;
        }
        v57(v41, v6);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v4 = v59;
      uint64_t v3 = (v2 + 24) & ~v2;
      goto LABEL_43;
    case 1u:
      uint64_t v11 = sub_251F34DA0();
      uint64_t v58 = *(void *)(v11 - 8);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v12(v0 + v3, v11);
      uint64_t v13 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      uint64_t v55 = v12;
      v12(v5 + v13[11], v11);
      uint64_t v14 = v5 + v13[13];
      uint64_t v15 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
      {
        v55(v14, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v16 = v5 + v13[14];
      uint64_t v17 = sub_251F34D20();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v53 = *(unsigned int (**)(void))(v18 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v53)(v16, 1, v17)) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      }
      uint64_t v52 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v5 + v13[25];
      v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
      if (!v20(v19, 1, v11)) {
        v55(v19, v11);
      }
      uint64_t v60 = v4;
      uint64_t v21 = v5 + v13[26];
      if (!v20(v21, 1, v11)) {
        v55(v21, v11);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v5 + v13[30];
      uint64_t v23 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23)) {
        goto LABEL_36;
      }
      v55(v22, v11);
      uint64_t v24 = v22 + *(int *)(v23 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 2 || v25 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v51 = v24 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v53()) {
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v17);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v25) {
          goto LABEL_36;
        }
        v55(v24, v11);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v43 = v5 + v13[33];
      unsigned int v44 = v20(v43, 1, v11);
      uint64_t v4 = v60;
      uint64_t v3 = (v2 + 24) & ~v2;
      if (!v44) {
        v55(v43, v11);
      }
LABEL_43:
      swift_bridgeObjectRelease();
      uint64_t v46 = v5 + *(int *)(v1 + 24);
      uint64_t v47 = type metadata accessor for StaticRoom(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v46, 1, v47))
      {
        uint64_t v48 = sub_251F34DA0();
        uint64_t v49 = *(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8);
        v49(v46, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49(v46 + *(int *)(v47 + 32), v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
    case 2u:
      uint64_t v26 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v0 + v3, v26);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_43;
    case 3u:
      uint64_t v27 = sub_251F34DA0();
      v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
      v28(v0 + v3, v27);
      uint64_t v29 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28(v5 + *(int *)(v29 + 44), v27);
      swift_bridgeObjectRelease();
      uint64_t v30 = v5 + *(int *)(v29 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v30 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v32 = sub_251F34D20();
      uint64_t v33 = *(void *)(v32 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
      goto LABEL_43;
    default:
      goto LABEL_43;
  }
}

uint64_t sub_251CF39E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251CF3A4C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  return sub_251CE0DA4(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_251CF3B00()
{
  uint64_t v1 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();

  uint64_t v5 = v0 + v3;
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v59 = v4;
      uint64_t v6 = sub_251F34DA0();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v8(v5, v6);
      uint64_t v9 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + v9[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      uint64_t v57 = v8;
      if (swift_getEnumCaseMultiPayload() == 1) {
        v8(v10, v6);
      }
      else {
        swift_bridgeObjectRelease();
      }
      uint64_t v34 = v5 + v9[7];
      uint64_t v35 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
      {
        v8(v34, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = v5 + v9[8];
      uint64_t v37 = sub_251F34D20();
      uint64_t v56 = *(void *)(v37 - 8);
      uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
      if (!v54(v36, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v36, v37);
      }
      v57(v5 + v9[11], v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v5 + v9[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v38, 1, v6)) {
        v57(v38, v6);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v5 + v9[28];
      uint64_t v40 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40)) {
        goto LABEL_42;
      }
      v57(v39, v6);
      uint64_t v41 = v39 + *(int *)(v40 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = v41 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v54(v45, 1, v37)) {
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v45, v37);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_42;
        }
        v57(v41, v6);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v4 = v59;
      uint64_t v3 = (v2 + 48) & ~v2;
      goto LABEL_43;
    case 1u:
      uint64_t v11 = sub_251F34DA0();
      uint64_t v58 = *(void *)(v11 - 8);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v12(v0 + v3, v11);
      uint64_t v13 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      uint64_t v55 = v12;
      v12(v5 + v13[11], v11);
      uint64_t v14 = v5 + v13[13];
      uint64_t v15 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
      {
        v55(v14, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v16 = v5 + v13[14];
      uint64_t v17 = sub_251F34D20();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v53 = *(unsigned int (**)(void))(v18 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v53)(v16, 1, v17)) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      }
      uint64_t v52 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v5 + v13[25];
      v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
      if (!v20(v19, 1, v11)) {
        v55(v19, v11);
      }
      uint64_t v60 = v4;
      uint64_t v21 = v5 + v13[26];
      if (!v20(v21, 1, v11)) {
        v55(v21, v11);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v5 + v13[30];
      uint64_t v23 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23)) {
        goto LABEL_36;
      }
      v55(v22, v11);
      uint64_t v24 = v22 + *(int *)(v23 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 2 || v25 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v51 = v24 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v53()) {
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v17);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v25) {
          goto LABEL_36;
        }
        v55(v24, v11);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v43 = v5 + v13[33];
      unsigned int v44 = v20(v43, 1, v11);
      uint64_t v4 = v60;
      uint64_t v3 = (v2 + 48) & ~v2;
      if (!v44) {
        v55(v43, v11);
      }
LABEL_43:
      swift_bridgeObjectRelease();
      uint64_t v46 = v5 + *(int *)(v1 + 24);
      uint64_t v47 = type metadata accessor for StaticRoom(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v46, 1, v47))
      {
        uint64_t v48 = sub_251F34DA0();
        uint64_t v49 = *(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8);
        v49(v46, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49(v46 + *(int *)(v47 + 32), v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
    case 2u:
      uint64_t v26 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v0 + v3, v26);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_43;
    case 3u:
      uint64_t v27 = sub_251F34DA0();
      v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
      v28(v0 + v3, v27);
      uint64_t v29 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28(v5 + *(int *)(v29 + 44), v27);
      swift_bridgeObjectRelease();
      uint64_t v30 = v5 + *(int *)(v29 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v30 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v32 = sub_251F34D20();
      uint64_t v33 = *(void *)(v32 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
      goto LABEL_43;
    default:
      goto LABEL_43;
  }
}

uint64_t sub_251CF47E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_251AB3A34;
  return sub_251CE0FA8(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_251CF4928(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_251AB3A34;
  return sub_251DD94D8(a1, a2, v7, v6);
}

uint64_t sub_251CF49E0()
{
  type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitName()();
}

uint64_t sub_251CF4AF0()
{
  type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitRoom()();
}

uint64_t sub_251CF4C00()
{
  type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitShouldShowInDashboard()();
}

uint64_t sub_251CF4D10()
{
  type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitIsFavorite()();
}

uint64_t objectdestroy_70Tm()
{
  uint64_t v1 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v59 = v4;
      uint64_t v6 = sub_251F34DA0();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v8(v5, v6);
      uint64_t v9 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + v9[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      uint64_t v57 = v8;
      if (swift_getEnumCaseMultiPayload() == 1) {
        v8(v10, v6);
      }
      else {
        swift_bridgeObjectRelease();
      }
      uint64_t v34 = v5 + v9[7];
      uint64_t v35 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
      {
        v8(v34, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = v5 + v9[8];
      uint64_t v37 = sub_251F34D20();
      uint64_t v56 = *(void *)(v37 - 8);
      uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
      if (!v54(v36, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v36, v37);
      }
      v57(v5 + v9[11], v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v5 + v9[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v38, 1, v6)) {
        v57(v38, v6);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v5 + v9[28];
      uint64_t v40 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40)) {
        goto LABEL_42;
      }
      v57(v39, v6);
      uint64_t v41 = v39 + *(int *)(v40 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = v41 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v54(v45, 1, v37)) {
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v45, v37);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_42;
        }
        v57(v41, v6);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v4 = v59;
      uint64_t v3 = (v2 + 32) & ~v2;
      goto LABEL_43;
    case 1u:
      uint64_t v11 = sub_251F34DA0();
      uint64_t v58 = *(void *)(v11 - 8);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v12(v0 + v3, v11);
      uint64_t v13 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      uint64_t v55 = v12;
      v12(v5 + v13[11], v11);
      uint64_t v14 = v5 + v13[13];
      uint64_t v15 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
      {
        v55(v14, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v16 = v5 + v13[14];
      uint64_t v17 = sub_251F34D20();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v53 = *(unsigned int (**)(void))(v18 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v53)(v16, 1, v17)) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      }
      uint64_t v52 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v5 + v13[25];
      v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
      if (!v20(v19, 1, v11)) {
        v55(v19, v11);
      }
      uint64_t v60 = v4;
      uint64_t v21 = v5 + v13[26];
      if (!v20(v21, 1, v11)) {
        v55(v21, v11);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v5 + v13[30];
      uint64_t v23 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23)) {
        goto LABEL_36;
      }
      v55(v22, v11);
      uint64_t v24 = v22 + *(int *)(v23 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 2 || v25 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v51 = v24 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v53()) {
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v17);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v25) {
          goto LABEL_36;
        }
        v55(v24, v11);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v43 = v5 + v13[33];
      unsigned int v44 = v20(v43, 1, v11);
      uint64_t v4 = v60;
      uint64_t v3 = (v2 + 32) & ~v2;
      if (!v44) {
        v55(v43, v11);
      }
LABEL_43:
      swift_bridgeObjectRelease();
      uint64_t v46 = v5 + *(int *)(v1 + 24);
      uint64_t v47 = type metadata accessor for StaticRoom(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v46, 1, v47))
      {
        uint64_t v48 = sub_251F34DA0();
        uint64_t v49 = *(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8);
        v49(v46, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49(v46 + *(int *)(v47 + 32), v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
    case 2u:
      uint64_t v26 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v0 + v3, v26);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_43;
    case 3u:
      uint64_t v27 = sub_251F34DA0();
      v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
      v28(v0 + v3, v27);
      uint64_t v29 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28(v5 + *(int *)(v29 + 44), v27);
      swift_bridgeObjectRelease();
      uint64_t v30 = v5 + *(int *)(v29 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v30 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v32 = sub_251F34D20();
      uint64_t v33 = *(void *)(v32 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
      goto LABEL_43;
    default:
      goto LABEL_43;
  }
}

uint64_t sub_251CF5AE0()
{
  type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitIconSymbol()();
}

uint64_t sub_251CF5BEC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t CameraClip.init(id:eventID:date:creationDate:isComplete:duration:significantEvents:posterFrameURL:timelapseID:timelapseOffset:timelapseQualityAssetURL:highQualityAssetURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13)
{
  uint64_t v17 = (int *)type metadata accessor for CameraClip();
  uint64_t v18 = a9 + v17[11];
  uint64_t v19 = sub_251F34B70();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  uint64_t v21 = a9 + v17[12];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = a9 + v17[14];
  v20(v23, 1, 1, v19);
  uint64_t v24 = a9 + v17[15];
  v20(v24, 1, 1, v19);
  uint64_t v25 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(a9, a1, v25);
  sub_251A4ECF0(a2, a9 + v17[5], &qword_269B9DB88);
  uint64_t v26 = a9 + v17[6];
  uint64_t v27 = sub_251F34D20();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);
  v28(v26, a3, v27);
  v28(a9 + v17[7], a4, v27);
  *(unsigned char *)(a9 + v17[8]) = a5;
  *(double *)(a9 + v17[9]) = a10;
  *(void *)(a9 + v17[10]) = a6;
  sub_251AE14A8(a7, v18, &qword_269B9DB68);
  sub_251AE14A8(a8, v21, &qword_269B9DB88);
  *(double *)(a9 + v17[13]) = a11;
  sub_251AE14A8(a12, v23, &qword_269B9DB68);
  return sub_251AE14A8(a13, v24, &qword_269B9DB68);
}

uint64_t type metadata accessor for CameraClip()
{
  uint64_t result = qword_269BA2520;
  if (!qword_269BA2520) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CameraClip.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CameraClip.eventID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CameraClip();
  return sub_251A1B128(v1 + *(int *)(v3 + 20), a1, &qword_269B9DB88);
}

uint64_t CameraClip.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CameraClip() + 24);
  uint64_t v4 = sub_251F34D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CameraClip.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CameraClip() + 28);
  uint64_t v4 = sub_251F34D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CameraClip.isComplete.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CameraClip() + 32));
}

double CameraClip.duration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CameraClip() + 36));
}

uint64_t CameraClip.significantEvents.getter()
{
  type metadata accessor for CameraClip();
  return swift_bridgeObjectRetain();
}

uint64_t CameraClip.posterFrameURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CameraClip();
  return sub_251A1B128(v1 + *(int *)(v3 + 44), a1, &qword_269B9DB68);
}

uint64_t CameraClip.timelapseID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CameraClip();
  return sub_251A1B128(v1 + *(int *)(v3 + 48), a1, &qword_269B9DB88);
}

double CameraClip.timelapseOffset.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for CameraClip() + 52));
}

uint64_t CameraClip.timelapseQualityAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CameraClip();
  return sub_251A1B128(v1 + *(int *)(v3 + 56), a1, &qword_269B9DB68);
}

uint64_t CameraClip.highQualityAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CameraClip();
  return sub_251A1B128(v1 + *(int *)(v3 + 60), a1, &qword_269B9DB68);
}

uint64_t CameraClip.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_251F34DA0();
  uint64_t v55 = sub_251CFB314((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9400]);
  sub_251F35610();
  uint64_t v5 = (int *)type metadata accessor for CameraClip();
  uint64_t v6 = v1 + v5[5];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v59 = v8;
  uint64_t v9 = (char *)&v52 - (((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v6, (uint64_t)v9, &qword_269B9DB88);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v57 = *(uint64_t **)(v11 + 48);
  uint64_t v58 = (uint64_t *)v10;
  uint64_t v12 = ((uint64_t (*)(char *, uint64_t))v57)(v9, 1);
  uint64_t v56 = v4;
  uint64_t v54 = v11;
  if (v12 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    v61 = &v52;
    uint64_t v13 = *(void *)(v11 + 64);
    MEMORY[0x270FA5388](v12);
    uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A4ECF0((uint64_t)v9, (uint64_t)v14, &qword_26B21FF90);
    uint64_t v15 = sub_251F36CC0();
    uint64_t v60 = &v52;
    MEMORY[0x270FA5388](v15);
    sub_251A1B128((uint64_t)v14, (uint64_t)v14, &qword_26B21FF90);
    uint64_t v16 = *(void *)(v4 - 8);
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v4);
    if (v17 == 1)
    {
      sub_251F36CC0();
    }
    else
    {
      MEMORY[0x270FA5388](v17);
      uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v4);
      sub_251F36CC0();
      sub_251F35610();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v4);
    }
    sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
  }
  sub_251F34D20();
  sub_251CFB314(&qword_269B9CF80, MEMORY[0x270FA9258]);
  sub_251F35610();
  sub_251F35610();
  sub_251F36CC0();
  sub_251F36CF0();
  uint64_t v20 = *(void *)(v2 + v5[10]);
  swift_bridgeObjectRetain();
  sub_251A425D8(a1, v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = v2 + v5[11];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
  uint64_t v23 = *(void *)(*(void *)(v22 - 8) + 64);
  MEMORY[0x270FA5388](v22 - 8);
  sub_251A1B128(v21, (uint64_t)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9DB68);
  uint64_t v24 = sub_251F34B70();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v60 = *(uint64_t **)(v25 + 48);
  v61 = (uint64_t *)(v25 + 48);
  uint64_t v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v60)((char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v24);
  if (v26 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v53 = &v52;
    MEMORY[0x270FA5388](v26);
    v28 = (char *)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v28, (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
    sub_251F36CC0();
    sub_251CFB314(&qword_269BA2510, MEMORY[0x270FA8E90]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  }
  uint64_t v29 = MEMORY[0x270FA5388](v2 + v5[12]);
  uint64_t v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v29, (uint64_t)v31, &qword_269B9DB88);
  uint64_t v32 = ((uint64_t (*)(char *, uint64_t, uint64_t *))v57)(v31, 1, v58);
  if (v32 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v58 = &v52;
    uint64_t v59 = &v52;
    uint64_t v33 = *(void *)(v54 + 64);
    MEMORY[0x270FA5388](v32);
    uint64_t v34 = (char *)&v52 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A4ECF0((uint64_t)v31, (uint64_t)v34, &qword_26B21FF90);
    uint64_t v35 = sub_251F36CC0();
    uint64_t v57 = &v52;
    MEMORY[0x270FA5388](v35);
    sub_251A1B128((uint64_t)v34, (uint64_t)v34, &qword_26B21FF90);
    uint64_t v36 = v56;
    uint64_t v37 = *(void *)(v56 - 8);
    uint64_t v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v56);
    if (v38 == 1)
    {
      sub_251F36CC0();
    }
    else
    {
      uint64_t v53 = &v52;
      MEMORY[0x270FA5388](v38);
      uint64_t v54 = v25;
      uint64_t v40 = v36;
      uint64_t v41 = (char *)&v52 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v41, v34, v40);
      sub_251F36CC0();
      sub_251F35610();
      uint64_t v42 = v40;
      uint64_t v25 = v54;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v41, v42);
    }
    sub_251A1B064((uint64_t)v34, &qword_26B21FF90);
  }
  sub_251F36CF0();
  uint64_t v43 = MEMORY[0x270FA5388](v2 + v5[14]);
  sub_251A1B128(v43, (uint64_t)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9DB68);
  uint64_t v44 = ((uint64_t (*)(char *, uint64_t, uint64_t))v60)((char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v24);
  if (v44 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v44);
    uint64_t v46 = (char *)&v52 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v46, (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
    sub_251F36CC0();
    sub_251CFB314(&qword_269BA2510, MEMORY[0x270FA8E90]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v46, v24);
  }
  uint64_t v47 = MEMORY[0x270FA5388](v2 + v5[15]);
  sub_251A1B128(v47, (uint64_t)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9DB68);
  uint64_t v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v60)((char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v24);
  if (v48 == 1) {
    return sub_251F36CC0();
  }
  MEMORY[0x270FA5388](v48);
  uint64_t v51 = (char *)&v52 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v51, (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  sub_251F36CC0();
  sub_251CFB314(&qword_269BA2510, MEMORY[0x270FA8E90]);
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v51, v24);
}

uint64_t CameraClip.hashValue.getter()
{
  sub_251F36CA0();
  CameraClip.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251CF6C68()
{
  sub_251F36CA0();
  CameraClip.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251CF6CAC()
{
  sub_251F36CA0();
  CameraClip.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

BOOL _s13HomeDataModel10CameraClipV2eeoiySbAC_ACtFZ_0(void *a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for CameraClip();
  uint64_t v5 = *(int *)(v4 + 20);
  v174 = a1;
  uint64_t v6 = (uint64_t)a1 + v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
  uint64_t v177 = (char *)v154;
  uint64_t v8 = *(char **)(*(void *)(v7 - 8) + 64);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (unint64_t)(v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251A1B128(v6, (uint64_t)v154 - v9, &qword_269B9DB88);
  v176 = v154;
  uint64_t v172 = (int *)v4;
  uint64_t v173 = a2;
  uint64_t v10 = MEMORY[0x270FA5388](a2 + *(int *)(v4 + 20));
  uint64_t v11 = (char *)v154 - v9;
  sub_251A1B128(v10, (uint64_t)v154 - v9, &qword_269B9DB88);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2540);
  v175 = v154;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v169 = v14;
  v170 = (void *)v13;
  uint64_t v15 = (char *)v154 - ((unint64_t)(v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_251A1B128((uint64_t)v154 - v9, (uint64_t)v15, &qword_269B9DB88);
  sub_251A1B128((uint64_t)v154 - v9, v16, &qword_269B9DB88);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v171 = *(void **)(v17 - 8);
  uint64_t v19 = v171 + 6;
  uint64_t v18 = (uint64_t (*)(char *, uint64_t, uint64_t))v171[6];
  uint64_t v20 = v18(v15, 1, v17);
  if (v20 == 1)
  {
    sub_251A1B064((uint64_t)v154 - v9, &qword_269B9DB88);
    sub_251A1B064((uint64_t)v154 - v9, &qword_269B9DB88);
    if (v18((char *)v16, 1, v17) == 1)
    {
      uint64_t v21 = v19;
      sub_251A1B064((uint64_t)v15, &qword_269B9DB88);
      uint64_t v22 = v174;
      uint64_t v24 = v172;
      uint64_t v23 = v173;
      goto LABEL_22;
    }
LABEL_7:
    uint64_t v26 = &qword_269BA2540;
    uint64_t v27 = (uint64_t)v15;
LABEL_8:
    sub_251A1B064(v27, v26);
    return 0;
  }
  uint64_t v168 = (void *)((char *)v154 - v9);
  MEMORY[0x270FA5388](v20);
  sub_251A1B128((uint64_t)v15, (uint64_t)v154 - v9, &qword_269B9DB88);
  uint64_t v25 = v18((char *)v16, 1, v17);
  if (v25 == 1)
  {
    sub_251A1B064((uint64_t)v154 - v9, &qword_269B9DB88);
    sub_251A1B064((uint64_t)v168, &qword_269B9DB88);
    sub_251A1B064((uint64_t)v154 - v9, &qword_26B21FF90);
    goto LABEL_7;
  }
  v162 = v154;
  v163 = v18;
  uint64_t v164 = v19;
  uint64_t v165 = (void *)v17;
  v166 = v8;
  uint64_t v28 = v171[8];
  MEMORY[0x270FA5388](v25);
  uint64_t v160 = (char *)((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = (char *)((char *)v154 - v160);
  sub_251A4ECF0(v16, (char *)v154 - v160, &qword_26B21FF90);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v161 = v154;
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v33 = (char *)v154 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (uint64_t)&v33[*(int *)(v31 + 56)];
  sub_251A4ECF0((uint64_t)v154 - v9, (uint64_t)v33, &qword_26B21FF90);
  uint64_t v167 = v34;
  sub_251A1B128((uint64_t)v29, v34, &qword_26B21FF90);
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  uint64_t v38 = v37(v33, 1, v35);
  if (v38 == 1)
  {
    sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v11, &qword_269B9DB88);
    sub_251A1B064((uint64_t)v168, &qword_269B9DB88);
    int v39 = v37((char *)v167, 1, v35);
    if (v39 == 1) {
      uint64_t v40 = &qword_26B21FF90;
    }
    else {
      uint64_t v40 = &qword_26B21E6B8;
    }
    if (v39 == 1) {
      char v41 = -1;
    }
    else {
      char v41 = 0;
    }
    uint64_t v22 = v174;
  }
  else
  {
    uint64_t v158 = v154;
    uint64_t v159 = (uint64_t (*)(char *, uint64_t, uint64_t))v154;
    MEMORY[0x270FA5388](v38);
    uint64_t v42 = (char *)((char *)v154 - v160);
    sub_251A1B128((uint64_t)v33, (char *)v154 - v160, &qword_26B21FF90);
    uint64_t v43 = v37((char *)v167, 1, v35);
    uint64_t v44 = (uint64_t)v168;
    if (v43 == 1)
    {
      sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v11, &qword_269B9DB88);
      sub_251A1B064(v44, &qword_269B9DB88);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v35);
      uint64_t v40 = &qword_26B21E6B8;
      char v41 = 0;
    }
    else
    {
      uint64_t v160 = (char *)v154;
      MEMORY[0x270FA5388](v43);
      v157 = v42;
      uint64_t v46 = (char *)v154 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v46, v167, v35);
      sub_251CFB314((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA9400]);
      char v41 = sub_251F35650();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v36 + 8);
      v47(v46, v35);
      uint64_t v40 = &qword_26B21FF90;
      sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v11, &qword_269B9DB88);
      sub_251A1B064(v44, &qword_269B9DB88);
      v47(v157, v35);
    }
    uint64_t v22 = v174;
  }
  sub_251A1B064((uint64_t)v33, v40);
  sub_251A1B064((uint64_t)v15, &qword_269B9DB88);
  uint64_t v24 = v172;
  uint64_t v23 = v173;
  uint64_t v17 = (uint64_t)v165;
  uint64_t v8 = v166;
  uint64_t v18 = v163;
  uint64_t v21 = v164;
  if ((v41 & 1) == 0) {
    return 0;
  }
LABEL_22:
  if ((sub_251F34CD0() & 1) == 0
    || (sub_251F34CD0() & 1) == 0
    || *((unsigned __int8 *)v22 + v24[8]) != *(unsigned __int8 *)(v23 + v24[8])
    || *(double *)((char *)v22 + v24[9]) != *(double *)(v23 + v24[9])
    || (sub_251AB77B0(*(void *)((char *)v22 + v24[10]), *(void *)(v23 + v24[10])) & 1) == 0)
  {
    return 0;
  }
  v163 = v18;
  uint64_t v164 = v21;
  uint64_t v165 = (void *)v17;
  v166 = v8;
  uint64_t v48 = (uint64_t)v22 + v24[11];
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
  v176 = v154;
  uint64_t v50 = *(void **)(*(void *)(v49 - 8) + 64);
  MEMORY[0x270FA5388](v49 - 8);
  unint64_t v51 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251A1B128(v48, (uint64_t)v154 - v51, &qword_269B9DB68);
  v175 = v154;
  uint64_t v52 = v24;
  uint64_t v53 = MEMORY[0x270FA5388](v23 + v24[11]);
  uint64_t v54 = (char *)v154 - v51;
  sub_251A1B128(v53, (uint64_t)v154 - v51, &qword_269B9DB68);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2548);
  uint64_t v168 = v154;
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  v162 = v57;
  uint64_t v58 = (char *)v154 - (((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = v56;
  uint64_t v59 = (uint64_t)&v58[*(int *)(v56 + 48)];
  sub_251A1B128((uint64_t)v154 - v51, (uint64_t)v58, &qword_269B9DB68);
  uint64_t v177 = (char *)v59;
  sub_251A1B128((uint64_t)v154 - v51, v59, &qword_269B9DB68);
  uint64_t v60 = sub_251F34B70();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  uint64_t v63 = v62(v58, 1, v60);
  uint64_t v161 = v50;
  if (v63 == 1)
  {
    uint64_t v158 = (void *)v61;
    sub_251A1B064((uint64_t)v54, &qword_269B9DB68);
    sub_251A1B064((uint64_t)v154 - v51, &qword_269B9DB68);
    if (v62(v177, 1, v60) == 1)
    {
      uint64_t v64 = v61 + 48;
      uint64_t v159 = v62;
      sub_251A1B064((uint64_t)v58, &qword_269B9DB68);
      uint64_t v65 = v174;
      uint64_t v66 = v173;
      goto LABEL_34;
    }
LABEL_32:
    sub_251A1B064((uint64_t)v58, &qword_269BA2548);
    return 0;
  }
  uint64_t v160 = (char *)v154 - v51;
  MEMORY[0x270FA5388](v63);
  v67 = (char *)v154 - v51;
  sub_251A1B128((uint64_t)v58, (uint64_t)v67, &qword_269B9DB68);
  uint64_t v159 = v62;
  uint64_t v68 = v62(v177, 1, v60);
  if (v68 == 1)
  {
    sub_251A1B064((uint64_t)v54, &qword_269B9DB68);
    sub_251A1B064((uint64_t)v160, &qword_269B9DB68);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v67, v60);
    goto LABEL_32;
  }
  v157 = (char *)v154;
  MEMORY[0x270FA5388](v68);
  uint64_t v70 = (char *)v154 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v70, v177, v60);
  sub_251CFB314(&qword_269BA2550, MEMORY[0x270FA8E90]);
  LODWORD(v177) = sub_251F35650();
  uint64_t v158 = (void *)v61;
  uint64_t v156 = v154;
  uint64_t v71 = v60;
  uint64_t v72 = *(void (**)(char *, uint64_t))(v61 + 8);
  v73 = v70;
  uint64_t v52 = v172;
  v72(v73, v71);
  sub_251A1B064((uint64_t)v54, &qword_269B9DB68);
  sub_251A1B064((uint64_t)v160, &qword_269B9DB68);
  v72(v67, v71);
  uint64_t v66 = v173;
  uint64_t v65 = v174;
  uint64_t v60 = v71;
  uint64_t v64 = v61 + 48;
  sub_251A1B064((uint64_t)v58, &qword_269B9DB68);
  if ((v177 & 1) == 0) {
    return 0;
  }
LABEL_34:
  v154[1] = v64;
  uint64_t v155 = v60;
  uint64_t v177 = (char *)v154;
  v74 = v166;
  uint64_t v75 = MEMORY[0x270FA5388]((char *)v65 + v52[12]);
  unint64_t v76 = (unint64_t)(v74 + 15) & 0xFFFFFFFFFFFFFFF0;
  v77 = (char *)v154 - v76;
  sub_251A1B128(v75, (uint64_t)v154 - v76, &qword_269B9DB88);
  v176 = v154;
  uint64_t v78 = MEMORY[0x270FA5388](v66 + v52[12]);
  uint64_t v79 = (char *)v154 - v76;
  uint64_t v80 = sub_251A1B128(v78, (uint64_t)v154 - v76, &qword_269B9DB88);
  v175 = v154;
  MEMORY[0x270FA5388](v80);
  uint64_t v82 = (char *)v154 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = (uint64_t)&v82[*((int *)v170 + 12)];
  sub_251A1B128((uint64_t)v154 - v76, (uint64_t)v82, &qword_269B9DB88);
  sub_251A1B128((uint64_t)v154 - v76, v83, &qword_269B9DB88);
  uint64_t v84 = v165;
  uint64_t v85 = v163;
  uint64_t v86 = v163(v82, 1, (uint64_t)v165);
  if (v86 == 1)
  {
    sub_251A1B064((uint64_t)v154 - v76, &qword_269B9DB88);
    sub_251A1B064((uint64_t)v154 - v76, &qword_269B9DB88);
    if (v85((char *)v83, 1, (uint64_t)v84) == 1)
    {
      sub_251A1B064((uint64_t)v82, &qword_269B9DB88);
      v87 = v174;
      uint64_t v89 = v172;
      uint64_t v88 = v173;
      goto LABEL_51;
    }
    goto LABEL_39;
  }
  v170 = v154;
  MEMORY[0x270FA5388](v86);
  uint64_t v90 = (char *)v154 - v76;
  sub_251A1B128((uint64_t)v82, (uint64_t)v154 - v76, &qword_269B9DB88);
  uint64_t v91 = v85((char *)v83, 1, (uint64_t)v84);
  if (v91 == 1)
  {
    sub_251A1B064((uint64_t)v154 - v76, &qword_269B9DB88);
    sub_251A1B064((uint64_t)v154 - v76, &qword_269B9DB88);
    sub_251A1B064((uint64_t)v154 - v76, &qword_26B21FF90);
LABEL_39:
    uint64_t v26 = &qword_269BA2540;
    uint64_t v27 = (uint64_t)v82;
    goto LABEL_8;
  }
  uint64_t v169 = (char *)v154;
  uint64_t v92 = v171[8];
  MEMORY[0x270FA5388](v91);
  v166 = (char *)((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = (char *)((char *)v154 - v166);
  sub_251A4ECF0(v83, (char *)v154 - v166, &qword_26B21FF90);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v168 = v154;
  uint64_t v95 = MEMORY[0x270FA5388](v94 - 8);
  v97 = (char *)v154 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = (uint64_t)&v97[*(int *)(v95 + 56)];
  sub_251A4ECF0((uint64_t)v90, (uint64_t)v97, &qword_26B21FF90);
  v171 = (void *)v98;
  sub_251A1B128((uint64_t)v93, v98, &qword_26B21FF90);
  uint64_t v99 = sub_251F34DA0();
  uint64_t v100 = *(void *)(v99 - 8);
  v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
  uint64_t v102 = v101(v97, 1, v99);
  if (v102 == 1)
  {
    sub_251A1B064((uint64_t)v93, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v79, &qword_269B9DB88);
    sub_251A1B064((uint64_t)v77, &qword_269B9DB88);
    int v103 = v101((char *)v171, 1, v99);
    if (v103 == 1) {
      uint64_t v104 = &qword_26B21FF90;
    }
    else {
      uint64_t v104 = &qword_26B21E6B8;
    }
    if (v103 == 1) {
      char v105 = -1;
    }
    else {
      char v105 = 0;
    }
  }
  else
  {
    uint64_t v165 = v154;
    MEMORY[0x270FA5388](v102);
    v106 = (char *)((char *)v154 - v166);
    sub_251A1B128((uint64_t)v97, (char *)v154 - v166, &qword_26B21FF90);
    uint64_t v107 = v101((char *)v171, 1, v99);
    if (v107 == 1)
    {
      sub_251A1B064((uint64_t)v93, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v79, &qword_269B9DB88);
      sub_251A1B064((uint64_t)v77, &qword_269B9DB88);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v106, v99);
      uint64_t v104 = &qword_26B21E6B8;
      char v105 = 0;
    }
    else
    {
      v166 = (char *)v154;
      MEMORY[0x270FA5388](v107);
      v109 = (char *)v154 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, void *, uint64_t))(v100 + 32))(v109, v171, v99);
      sub_251CFB314((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA9400]);
      char v110 = sub_251F35650();
      v171 = v106;
      char v105 = v110;
      uint64_t v111 = *(void (**)(char *, uint64_t))(v100 + 8);
      v111(v109, v99);
      uint64_t v104 = &qword_26B21FF90;
      sub_251A1B064((uint64_t)v93, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v79, &qword_269B9DB88);
      sub_251A1B064((uint64_t)v77, &qword_269B9DB88);
      v111((char *)v171, v99);
    }
  }
  sub_251A1B064((uint64_t)v97, v104);
  sub_251A1B064((uint64_t)v82, &qword_269B9DB88);
  uint64_t v89 = v172;
  uint64_t v88 = v173;
  v87 = v174;
  if ((v105 & 1) == 0) {
    return 0;
  }
LABEL_51:
  if (*(double *)((char *)v87 + v89[13]) != *(double *)(v88 + v89[13])) {
    return 0;
  }
  uint64_t v177 = (char *)v154;
  uint64_t v112 = v161;
  uint64_t v113 = MEMORY[0x270FA5388]((char *)v87 + v89[14]);
  unint64_t v114 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF0;
  v115 = (char *)v154 - v114;
  sub_251A1B128(v113, (uint64_t)v154 - v114, &qword_269B9DB68);
  v176 = v154;
  uint64_t v116 = v88;
  uint64_t v117 = MEMORY[0x270FA5388](v88 + v89[14]);
  uint64_t v118 = (char *)v154 - v114;
  uint64_t v119 = sub_251A1B128(v117, (uint64_t)v154 - v114, &qword_269B9DB68);
  v175 = v154;
  MEMORY[0x270FA5388](v119);
  uint64_t v121 = (char *)v154 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = (uint64_t)&v121[*(int *)(v167 + 48)];
  sub_251A1B128((uint64_t)v154 - v114, (uint64_t)v121, &qword_269B9DB68);
  sub_251A1B128((uint64_t)v154 - v114, v122, &qword_269B9DB68);
  uint64_t v123 = v155;
  uint64_t v124 = v159;
  uint64_t v125 = v159(v121, 1, v155);
  if (v125 == 1)
  {
    sub_251A1B064((uint64_t)v118, &qword_269B9DB68);
    sub_251A1B064((uint64_t)v115, &qword_269B9DB68);
    if (v124((char *)v122, 1, v123) == 1)
    {
      uint64_t v159 = v124;
      sub_251A1B064((uint64_t)v121, &qword_269B9DB68);
      uint64_t v126 = v172;
      goto LABEL_59;
    }
    goto LABEL_57;
  }
  v171 = v154;
  MEMORY[0x270FA5388](v125);
  uint64_t v127 = (char *)v154 - v114;
  sub_251A1B128((uint64_t)v121, (uint64_t)v127, &qword_269B9DB68);
  uint64_t v128 = v124((char *)v122, 1, v123);
  if (v128 == 1)
  {
    sub_251A1B064((uint64_t)v118, &qword_269B9DB68);
    sub_251A1B064((uint64_t)v115, &qword_269B9DB68);
    ((void (*)(char *, uint64_t))v158[1])(v127, v123);
LABEL_57:
    uint64_t v26 = &qword_269BA2548;
    uint64_t v27 = (uint64_t)v121;
    goto LABEL_8;
  }
  uint64_t v159 = v124;
  v170 = v154;
  uint64_t v129 = v158;
  MEMORY[0x270FA5388](v128);
  uint64_t v169 = v127;
  uint64_t v131 = (char *)v154 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *, uint64_t, uint64_t))v129[4])(v131, v122, v123);
  sub_251CFB314(&qword_269BA2550, MEMORY[0x270FA8E90]);
  char v132 = sub_251F35650();
  v133 = (void (*)(char *, uint64_t))v129[1];
  v133(v131, v123);
  sub_251A1B064((uint64_t)v118, &qword_269B9DB68);
  sub_251A1B064((uint64_t)v115, &qword_269B9DB68);
  v133(v169, v123);
  uint64_t v112 = v161;
  uint64_t v126 = v172;
  sub_251A1B064((uint64_t)v121, &qword_269B9DB68);
  if ((v132 & 1) == 0) {
    return 0;
  }
LABEL_59:
  uint64_t v177 = (char *)v154;
  uint64_t v134 = MEMORY[0x270FA5388]((char *)v174 + v126[15]);
  unint64_t v135 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v136 = (char *)v154 - v135;
  sub_251A1B128(v134, (uint64_t)v154 - v135, &qword_269B9DB68);
  v176 = v154;
  uint64_t v137 = MEMORY[0x270FA5388](v116 + v126[15]);
  v138 = (char *)v154 - v135;
  uint64_t v139 = sub_251A1B128(v137, (uint64_t)v154 - v135, &qword_269B9DB68);
  v175 = v154;
  MEMORY[0x270FA5388](v139);
  v141 = (char *)v154 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = (uint64_t)&v141[*(int *)(v167 + 48)];
  sub_251A1B128((uint64_t)v154 - v135, (uint64_t)v141, &qword_269B9DB68);
  sub_251A1B128((uint64_t)v154 - v135, v142, &qword_269B9DB68);
  uint64_t v143 = v155;
  uint64_t v144 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v159;
  uint64_t v145 = v159(v141, 1, v155);
  if (v145 == 1)
  {
    sub_251A1B064((uint64_t)v154 - v135, &qword_269B9DB68);
    sub_251A1B064((uint64_t)v154 - v135, &qword_269B9DB68);
    if (v144(v142, 1, v143) == 1)
    {
      sub_251A1B064((uint64_t)v141, &qword_269B9DB68);
      return 1;
    }
    goto LABEL_64;
  }
  v174 = v154;
  MEMORY[0x270FA5388](v145);
  uint64_t v147 = (char *)v154 - v135;
  sub_251A1B128((uint64_t)v141, (uint64_t)v154 - v135, &qword_269B9DB68);
  uint64_t v148 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v144)(v142, 1, v143);
  if (v148 == 1)
  {
    sub_251A1B064((uint64_t)v154 - v135, &qword_269B9DB68);
    sub_251A1B064((uint64_t)v154 - v135, &qword_269B9DB68);
    ((void (*)(char *, uint64_t))v158[1])((char *)v154 - v135, v143);
LABEL_64:
    uint64_t v26 = &qword_269BA2548;
    uint64_t v27 = (uint64_t)v141;
    goto LABEL_8;
  }
  uint64_t v149 = v158;
  MEMORY[0x270FA5388](v148);
  uint64_t v151 = (char *)v154 - ((v150 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *, uint64_t, uint64_t))v149[4])(v151, v142, v143);
  sub_251CFB314(&qword_269BA2550, MEMORY[0x270FA8E90]);
  char v152 = sub_251F35650();
  uint64_t v153 = (void (*)(char *, uint64_t))v149[1];
  v153(v151, v143);
  sub_251A1B064((uint64_t)v138, &qword_269B9DB68);
  sub_251A1B064((uint64_t)v136, &qword_269B9DB68);
  v153(v147, v143);
  sub_251A1B064((uint64_t)v141, &qword_269B9DB68);
  return (v152 & 1) != 0;
}

unint64_t sub_251CF8508()
{
  unint64_t result = qword_269BA2518;
  if (!qword_269BA2518)
  {
    type metadata accessor for CameraClip();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2518);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for CameraClip(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v43(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v45 = v8;
    uint64_t v46 = v7;
    uint64_t v44 = v13;
    uint64_t v48 = v12;
    if (v47(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
      {
        memcpy(v10, v11, *(void *)(v13 + 64));
      }
      else
      {
        v43(v10, v11, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = sub_251F34D20();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v20(&a1[a3[7]], &a2[a3[7]], v19);
    uint64_t v21 = a3[9];
    a1[a3[8]] = a2[a3[8]];
    *(void *)&a1[v21] = *(void *)&a2[v21];
    uint64_t v22 = a3[11];
    *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = sub_251F34B70();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    uint64_t v49 = v27;
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v29 = a3[12];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    if (v47(&a2[v29], 1, v48))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v31, 1, v46))
      {
        uint64_t v33 = v44;
        memcpy(v30, v31, *(void *)(v44 + 64));
      }
      else
      {
        v43(v30, v31, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v30, 0, 1, v46);
        uint64_t v33 = v44;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v48);
    }
    uint64_t v34 = a3[14];
    *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    if (v49(&a2[v34], 1, v25))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v35, v36, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v35, 0, 1, v25);
    }
    uint64_t v38 = a3[15];
    int v39 = &a1[v38];
    uint64_t v40 = &a2[v38];
    if (v49(v40, 1, v25))
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v39, v40, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v39, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t destroy for CameraClip(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v21 = v6;
  uint64_t v22 = v5;
  uint64_t v10 = a1 + a2[6];
  uint64_t v11 = sub_251F34D20();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(a1 + a2[7], v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + a2[11];
  uint64_t v14 = sub_251F34B70();
  uint64_t v23 = *(void *)(v14 - 8);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (!v15(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v14);
  }
  uint64_t v16 = a1 + a2[12];
  if (!v9(v16, 1, v8) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v4)) {
    v21(v16, v4);
  }
  uint64_t v17 = a1 + a2[14];
  if (!v15(v17, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v14);
  }
  uint64_t v18 = a1 + a2[15];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v18, 1, v14);
  if (!result)
  {
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    return v20(v18, v14);
  }
  return result;
}

uint64_t initializeWithCopy for CameraClip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v41(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v45 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v43 = v7;
  uint64_t v44 = v6;
  uint64_t v42 = v12;
  uint64_t v46 = v11;
  if (v45(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
    {
      memcpy(v9, v10, *(void *)(v12 + 64));
    }
    else
    {
      v41((uint64_t)v9, (uint64_t)v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_251F34D20();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v18(a1 + a3[7], a2 + a3[7], v17);
  uint64_t v19 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_251F34B70();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  uint64_t v47 = v25;
  if (v25((uint64_t)v22, 1, v23))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  if (v45((const void *)(a2 + v27), 1, v46))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v29, 1, v44))
    {
      uint64_t v31 = v42;
      memcpy(v28, v29, *(void *)(v42 + 64));
    }
    else
    {
      v41((uint64_t)v28, (uint64_t)v29, v44);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v28, 0, 1, v44);
      uint64_t v31 = v42;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v46);
  }
  uint64_t v32 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v47(a2 + v32, 1, v23))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v33, v34, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v33, 0, 1, v23);
  }
  uint64_t v36 = a3[15];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  if (v47((uint64_t)v38, 1, v23))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v37, v38, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v37, 0, 1, v23);
  }
  return a1;
}

uint64_t assignWithCopy for CameraClip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v60(a1, a2, v6);
  v67 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  int v13 = v12(v9, 1, v11);
  uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v12;
  int v14 = v12(v10, 1, v11);
  uint64_t v61 = v7;
  uint64_t v62 = v6;
  uint64_t v64 = v11;
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
      int v19 = v18(v9, 1, v6);
      int v20 = v18(v10, 1, v6);
      if (v19)
      {
        uint64_t v15 = v67;
        if (!v20)
        {
          (*(void (**)(void *, void *, uint64_t))(v61 + 16))(v9, v10, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v9, 0, 1, v6);
          goto LABEL_18;
        }
        size_t v21 = *(void *)(v63 + 64);
      }
      else
      {
        uint64_t v15 = v67;
        if (!v20)
        {
          v60((uint64_t)v9, (uint64_t)v10, v6);
          goto LABEL_18;
        }
        (*(void (**)(void *, uint64_t))(v61 + 8))(v9, v6);
        size_t v21 = *(void *)(v63 + 64);
      }
      memcpy(v9, v10, v21);
      goto LABEL_18;
    }
    sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
LABEL_7:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
    uint64_t v15 = v67;
    goto LABEL_18;
  }
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = v67;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    uint64_t v16 = v63;
    memcpy(v9, v10, *(void *)(v63 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    uint64_t v16 = v63;
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v11);
LABEL_18:
  uint64_t v22 = v15[6];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_251F34D20();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(a1 + v15[7], a2 + v15[7], v25);
  *(unsigned char *)(a1 + v15[8]) = *(unsigned char *)(a2 + v15[8]);
  *(void *)(a1 + v15[9]) = *(void *)(a2 + v15[9]);
  *(void *)(a1 + v15[10]) = *(void *)(a2 + v15[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v15[11];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = sub_251F34B70();
  uint64_t v66 = *(void *)(v30 - 8);
  uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
  LODWORD(v26) = v31(v28, 1, v30);
  int v32 = v31(v29, 1, v30);
  if (v26)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v66 + 16))(v28, v29, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v28, 0, 1, v30);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v66 + 8))(v28, v30);
LABEL_23:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v66 + 24))(v28, v29, v30);
LABEL_24:
  uint64_t v34 = v15[12];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  int v37 = v65(a1 + v34, 1, v64);
  int v38 = v65((uint64_t)v36, 1, v64);
  if (v37)
  {
    if (!v38)
    {
      uint64_t v39 = v67;
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v61 + 48))(v36, 1, v62))
      {
        uint64_t v40 = v63;
        memcpy(v35, v36, *(void *)(v63 + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v61 + 16))(v35, v36, v62);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v35, 0, 1, v62);
        uint64_t v40 = v63;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v64);
      goto LABEL_42;
    }
LABEL_30:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
    uint64_t v39 = v67;
    goto LABEL_43;
  }
  if (v38)
  {
    sub_251A1B064((uint64_t)v35, &qword_26B21FF90);
    goto LABEL_30;
  }
  uint64_t v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  int v44 = v43(v35, 1, v62);
  int v45 = v43(v36, 1, v62);
  if (v44)
  {
    uint64_t v39 = v67;
    if (!v45)
    {
      (*(void (**)(void *, void *, uint64_t))(v61 + 16))(v35, v36, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v35, 0, 1, v62);
      goto LABEL_42;
    }
    size_t v46 = *(void *)(v63 + 64);
  }
  else
  {
    uint64_t v39 = v67;
    if (!v45)
    {
      v60((uint64_t)v35, (uint64_t)v36, v62);
      goto LABEL_42;
    }
    (*(void (**)(void *, uint64_t))(v61 + 8))(v35, v62);
    size_t v46 = *(void *)(v63 + 64);
  }
  memcpy(v35, v36, v46);
LABEL_42:
  uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
LABEL_43:
  *(void *)(a1 + v39[13]) = *(void *)(a2 + v39[13]);
  uint64_t v47 = v39[14];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  int v50 = v42(a1 + v47, 1, v30);
  int v51 = v42((uint64_t)v49, 1, v30);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v66 + 16))(v48, v49, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v48, 0, 1, v30);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v66 + 8))(v48, v30);
LABEL_48:
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(void *, const void *, uint64_t))(v66 + 24))(v48, v49, v30);
LABEL_49:
  uint64_t v53 = v39[15];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  int v56 = v42(a1 + v53, 1, v30);
  int v57 = v42((uint64_t)v55, 1, v30);
  if (!v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, const void *, uint64_t))(v66 + 24))(v54, v55, v30);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v66 + 8))(v54, v30);
    goto LABEL_54;
  }
  if (v57)
  {
LABEL_54:
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v66 + 16))(v54, v55, v30);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v54, 0, 1, v30);
  return a1;
}

uint64_t initializeWithTake for CameraClip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v40(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v43 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v45 = v11;
  uint64_t v41 = v12;
  uint64_t v42 = v6;
  if (v43(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
    {
      memcpy(v9, v10, *(void *)(v12 + 64));
    }
    else
    {
      v40((uint64_t)v9, (uint64_t)v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_251F34D20();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  v18(a1 + a3[7], a2 + a3[7], v17);
  uint64_t v19 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  size_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_251F34B70();
  uint64_t v24 = *(void *)(v23 - 8);
  int v44 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  if (v44(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  if (v43((const void *)(a2 + v26), 1, v45))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v28, 1, v42))
    {
      uint64_t v30 = v41;
      memcpy(v27, v28, *(void *)(v41 + 64));
    }
    else
    {
      v40((uint64_t)v27, (uint64_t)v28, v42);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v42);
      uint64_t v30 = v41;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v45);
  }
  uint64_t v31 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  int v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  if (v44((const void *)(a2 + v31), 1, v23))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v32, v33, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v32, 0, 1, v23);
  }
  uint64_t v35 = a3[15];
  uint64_t v36 = (void *)(a1 + v35);
  int v37 = (const void *)(a2 + v35);
  if (v44(v37, 1, v23))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v36, v37, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v36, 0, 1, v23);
  }
  return a1;
}

uint64_t assignWithTake for CameraClip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v61(a1, a2, v6);
  uint64_t v68 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v64 + 48);
  int v13 = v12(v9, 1, v11);
  uint64_t v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v12;
  int v14 = v12(v10, 1, v11);
  uint64_t v62 = v7;
  uint64_t v63 = v6;
  uint64_t v65 = v11;
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
      int v19 = v18(v9, 1, v6);
      int v20 = v18(v10, 1, v6);
      if (v19)
      {
        uint64_t v15 = v68;
        if (!v20)
        {
          (*(void (**)(void *, void *, uint64_t))(v62 + 32))(v9, v10, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v9, 0, 1, v6);
          goto LABEL_18;
        }
        size_t v21 = *(void *)(v64 + 64);
      }
      else
      {
        uint64_t v15 = v68;
        if (!v20)
        {
          v61((uint64_t)v9, (uint64_t)v10, v6);
          goto LABEL_18;
        }
        (*(void (**)(void *, uint64_t))(v62 + 8))(v9, v6);
        size_t v21 = *(void *)(v64 + 64);
      }
      memcpy(v9, v10, v21);
      goto LABEL_18;
    }
    sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
LABEL_7:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
    uint64_t v15 = v68;
    goto LABEL_18;
  }
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = v68;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    uint64_t v16 = v64;
    memcpy(v9, v10, *(void *)(v64 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    uint64_t v16 = v64;
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v11);
LABEL_18:
  uint64_t v22 = v15[6];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_251F34D20();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40);
  v26(v23, v24, v25);
  v26(a1 + v15[7], a2 + v15[7], v25);
  uint64_t v27 = v15[9];
  *(unsigned char *)(a1 + v15[8]) = *(unsigned char *)(a2 + v15[8]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  *(void *)(a1 + v15[10]) = *(void *)(a2 + v15[10]);
  swift_bridgeObjectRelease();
  uint64_t v28 = v15[11];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = sub_251F34B70();
  uint64_t v67 = *(void *)(v31 - 8);
  int v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v67 + 48);
  LODWORD(v26) = v32(v29, 1, v31);
  int v33 = v32(v30, 1, v31);
  if (v26)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v67 + 32))(v29, v30, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v29, 0, 1, v31);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v67 + 8))(v29, v31);
LABEL_23:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v67 + 40))(v29, v30, v31);
LABEL_24:
  uint64_t v35 = v15[12];
  uint64_t v36 = (void *)(a1 + v35);
  int v37 = (void *)(a2 + v35);
  int v38 = v66(a1 + v35, 1, v65);
  int v39 = v66((uint64_t)v37, 1, v65);
  if (v38)
  {
    if (!v39)
    {
      uint64_t v40 = v68;
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v62 + 48))(v37, 1, v63))
      {
        uint64_t v41 = v64;
        memcpy(v36, v37, *(void *)(v64 + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v62 + 32))(v36, v37, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v36, 0, 1, v63);
        uint64_t v41 = v64;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v36, 0, 1, v65);
      goto LABEL_42;
    }
LABEL_30:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
    uint64_t v40 = v68;
    goto LABEL_43;
  }
  if (v39)
  {
    sub_251A1B064((uint64_t)v36, &qword_26B21FF90);
    goto LABEL_30;
  }
  int v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  int v45 = v44(v36, 1, v63);
  int v46 = v44(v37, 1, v63);
  if (v45)
  {
    uint64_t v40 = v68;
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 32))(v36, v37, v63);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v36, 0, 1, v63);
      goto LABEL_42;
    }
    size_t v47 = *(void *)(v64 + 64);
  }
  else
  {
    uint64_t v40 = v68;
    if (!v46)
    {
      v61((uint64_t)v36, (uint64_t)v37, v63);
      goto LABEL_42;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v36, v63);
    size_t v47 = *(void *)(v64 + 64);
  }
  memcpy(v36, v37, v47);
LABEL_42:
  uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
LABEL_43:
  uint64_t v48 = v40[14];
  *(void *)(a1 + v40[13]) = *(void *)(a2 + v40[13]);
  uint64_t v49 = (void *)(a1 + v48);
  int v50 = (const void *)(a2 + v48);
  int v51 = v43(a1 + v48, 1, v31);
  int v52 = v43((uint64_t)v50, 1, v31);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, const void *, uint64_t))(v67 + 32))(v49, v50, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v49, 0, 1, v31);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v67 + 8))(v49, v31);
LABEL_48:
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(void *, const void *, uint64_t))(v67 + 40))(v49, v50, v31);
LABEL_49:
  uint64_t v54 = v40[15];
  uint64_t v55 = (void *)(a1 + v54);
  int v56 = (const void *)(a2 + v54);
  int v57 = v43(a1 + v54, 1, v31);
  int v58 = v43((uint64_t)v56, 1, v31);
  if (!v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, const void *, uint64_t))(v67 + 40))(v55, v56, v31);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v67 + 8))(v55, v31);
    goto LABEL_54;
  }
  if (v58)
  {
LABEL_54:
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v67 + 32))(v55, v56, v31);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v55, 0, 1, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraClip(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251CFAD2C);
}

uint64_t sub_251CFAD2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_251F34D20();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(a1 + a3[10]);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[11];
    return v18(v20, a2, v19);
  }
}

uint64_t storeEnumTagSinglePayload for CameraClip(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251CFAF14);
}

uint64_t sub_251CFAF14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t result = sub_251F34D20();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[10]) = (a2 - 1);
  }
  else
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a4[11];
    return v18(v20, a2, a2, v19);
  }
  return result;
}

void sub_251CFB0E8()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251CFB260();
    if (v1 <= 0x3F)
    {
      sub_251F34D20();
      if (v2 <= 0x3F)
      {
        sub_251CFB2BC();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_251CFB260()
{
  if (!qword_269BA2530)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21FF90);
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269BA2530);
    }
  }
}

void sub_251CFB2BC()
{
  if (!qword_269BA2538)
  {
    sub_251F34B70();
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269BA2538);
    }
  }
}

uint64_t sub_251CFB314(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251CFB35C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessory(0);
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  if (v11) {
    goto LABEL_28;
  }
LABEL_6:
  int64_t v15 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v15 < v25)
    {
      unint64_t v16 = *(void *)(v24 + 8 * v15);
      ++v13;
      if (v16) {
        goto LABEL_21;
      }
      int64_t v13 = v15 + 1;
      if (v15 + 1 >= v25) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v13);
      if (v16) {
        goto LABEL_21;
      }
      int64_t v13 = v15 + 2;
      if (v15 + 2 >= v25) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v13);
      if (v16) {
        goto LABEL_21;
      }
      int64_t v13 = v15 + 3;
      if (v15 + 3 >= v25) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v13);
      if (v16)
      {
LABEL_21:
        unint64_t v11 = (v16 - 1) & v16;
        for (unint64_t i = __clz(__rbit64(v16)) + (v13 << 6); ; unint64_t i = v22 | (v13 << 6))
        {
          sub_251D06E64(*(void *)(a1 + 48) + *(void *)(v30 + 72) * i, (uint64_t)v7, type metadata accessor for StaticAccessory);
          sub_251D06ECC((uint64_t)v7, (uint64_t)v5, type metadata accessor for StaticAccessory);
          uint64_t v27 = v2;
          uint64_t v28 = sub_251D06B90(&qword_269B9E288, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
          sub_251D06E64((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
          sub_251D06F34((uint64_t)v5, type metadata accessor for StaticAccessory);
          if (v27)
          {
            sub_251A1A444(&v26, (uint64_t)v29);
            sub_251A1A444(v29, (uint64_t)&v26);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v14 = sub_251F102B0(0, v14[2] + 1, 1, v14);
            }
            unint64_t v21 = v14[2];
            unint64_t v20 = v14[3];
            if (v21 >= v20 >> 1) {
              uint64_t v14 = sub_251F102B0((void *)(v20 > 1), v21 + 1, 1, v14);
            }
            v14[2] = v21 + 1;
            uint64_t result = sub_251A1A444(&v26, (uint64_t)&v14[5 * v21 + 4]);
            if (!v11) {
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t result = sub_251A1B064((uint64_t)&v26, &qword_269B9D150);
            if (!v11) {
              goto LABEL_6;
            }
          }
LABEL_28:
          unint64_t v22 = __clz(__rbit64(v11));
          v11 &= v11 - 1;
        }
      }
      int64_t v17 = v15 + 4;
      if (v17 < v25)
      {
        unint64_t v16 = *(void *)(v24 + 8 * v17);
        if (v16)
        {
          int64_t v13 = v17;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v13 = v17 + 1;
          if (__OFADD__(v17, 1)) {
            goto LABEL_31;
          }
          if (v13 >= v25) {
            break;
          }
          unint64_t v16 = *(void *)(v24 + 8 * v13);
          ++v17;
          if (v16) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_29:
    swift_release();
    return (uint64_t)v14;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251CFB704(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  if (v11) {
    goto LABEL_28;
  }
LABEL_6:
  int64_t v15 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v15 < v25)
    {
      unint64_t v16 = *(void *)(v24 + 8 * v15);
      ++v13;
      if (v16) {
        goto LABEL_21;
      }
      int64_t v13 = v15 + 1;
      if (v15 + 1 >= v25) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v13);
      if (v16) {
        goto LABEL_21;
      }
      int64_t v13 = v15 + 2;
      if (v15 + 2 >= v25) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v13);
      if (v16) {
        goto LABEL_21;
      }
      int64_t v13 = v15 + 3;
      if (v15 + 3 >= v25) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v13);
      if (v16)
      {
LABEL_21:
        unint64_t v11 = (v16 - 1) & v16;
        for (unint64_t i = __clz(__rbit64(v16)) + (v13 << 6); ; unint64_t i = v22 | (v13 << 6))
        {
          sub_251D06E64(*(void *)(a1 + 48) + *(void *)(v30 + 72) * i, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
          sub_251D06ECC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v27 = v2;
          uint64_t v28 = sub_251D06B90(&qword_269B9E270, (void (*)(uint64_t))type metadata accessor for StaticService);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
          sub_251D06E64((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticService);
          sub_251D06F34((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v27)
          {
            sub_251A1A444(&v26, (uint64_t)v29);
            sub_251A1A444(v29, (uint64_t)&v26);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v14 = sub_251F102B0(0, v14[2] + 1, 1, v14);
            }
            unint64_t v21 = v14[2];
            unint64_t v20 = v14[3];
            if (v21 >= v20 >> 1) {
              uint64_t v14 = sub_251F102B0((void *)(v20 > 1), v21 + 1, 1, v14);
            }
            v14[2] = v21 + 1;
            uint64_t result = sub_251A1A444(&v26, (uint64_t)&v14[5 * v21 + 4]);
            if (!v11) {
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t result = sub_251A1B064((uint64_t)&v26, &qword_269B9D150);
            if (!v11) {
              goto LABEL_6;
            }
          }
LABEL_28:
          unint64_t v22 = __clz(__rbit64(v11));
          v11 &= v11 - 1;
        }
      }
      int64_t v17 = v15 + 4;
      if (v17 < v25)
      {
        unint64_t v16 = *(void *)(v24 + 8 * v17);
        if (v16)
        {
          int64_t v13 = v17;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v13 = v17 + 1;
          if (__OFADD__(v17, 1)) {
            goto LABEL_31;
          }
          if (v13 >= v25) {
            break;
          }
          unint64_t v16 = *(void *)(v24 + 8 * v13);
          ++v17;
          if (v16) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_29:
    swift_release();
    return (uint64_t)v14;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251CFBAAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMediaSystem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v22 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v23 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v22 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v23) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v22 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v23) {
          goto LABEL_23;
        }
        unint64_t v19 = *(void *)(v22 + 8 * v14);
        if (!v19)
        {
          int64_t v14 = v18 + 3;
          if (v18 + 3 >= v23) {
            goto LABEL_23;
          }
          unint64_t v19 = *(void *)(v22 + 8 * v14);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_5:
    sub_251D06E64(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251D06ECC((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v17 = *(void *)&v6[*(int *)(v2 + 96)];
    swift_bridgeObjectRetain();
    sub_251D06F34((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t result = sub_251ED7FC8(v17);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v23)
  {
LABEL_23:
    swift_release();
    return v24;
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v23) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v22 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t StaticRoom.staticAccessories.getter()
{
  type metadata accessor for StaticRoom(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDCBC8(v0);
}

unint64_t RoomType.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoomType(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251D06E64(v1, (uint64_t)v8, type metadata accessor for RoomType);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 4, v2);
  unint64_t v10 = 0x655373656E656373;
  switch(v9)
  {
    case 1:
      return v10;
    case 2:
      unint64_t v10 = 0x53736172656D6163;
      break;
    case 3:
      unint64_t v10 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v10 = 0x526E776F6E6B6E75;
      break;
    default:
      sub_251D06ECC((uint64_t)v8, (uint64_t)v5, type metadata accessor for StaticRoom);
      unint64_t v10 = *(void *)&v5[*(int *)(v2 + 20)];
      swift_bridgeObjectRetain();
      sub_251D06F34((uint64_t)v5, type metadata accessor for StaticRoom);
      break;
  }
  return v10;
}

uint64_t sub_251CFBFE0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a1;
  uint64_t v5 = *(void *)(a3 + 56);
  uint64_t v33 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v32[1] = v32;
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v34 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v36 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v8));
  uint64_t v15 = (v8 - 1) & v8;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = *(void *)(v36 + 48);
    uint64_t v21 = sub_251F34DA0();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v11, v20 + *(void *)(v22 + 72) * i, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v21);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v11, 1, v21);
    if (v23 == 1)
    {
      swift_release();
      LOBYTE(v24) = 1;
      return v24 & 1;
    }
    unint64_t v24 = v15;
    int64_t v25 = v13;
    int v37 = v32;
    MEMORY[0x270FA5388](v23);
    uint64_t v27 = (char *)v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = v11;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v11, v21);
    char v29 = v35(v27);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
      swift_release();
      return v24 & 1;
    }
    char v30 = v29;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    if ((v30 & 1) == 0)
    {
      swift_release();
      LOBYTE(v24) = 0;
      return v24 & 1;
    }
    uint64_t v11 = v28;
    int64_t v13 = v25;
    unint64_t v8 = v24;
    if (v24) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1)) {
      break;
    }
    if (v13 >= v34) {
      goto LABEL_30;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v13);
    if (!v18)
    {
      int64_t v19 = v13 + 1;
      if (v13 + 1 >= v34) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v33 + 8 * v19);
      if (v18) {
        goto LABEL_16;
      }
      int64_t v19 = v13 + 2;
      if (v13 + 2 >= v34) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v33 + 8 * v19);
      if (v18) {
        goto LABEL_16;
      }
      int64_t v19 = v13 + 3;
      if (v13 + 3 >= v34) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v33 + 8 * v19);
      if (v18)
      {
LABEL_16:
        int64_t v13 = v19;
        goto LABEL_17;
      }
      int64_t v19 = v13 + 4;
      if (v13 + 4 < v34)
      {
        unint64_t v18 = *(void *)(v33 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            int64_t v13 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_33;
            }
            if (v13 >= v34) {
              goto LABEL_30;
            }
            unint64_t v18 = *(void *)(v33 + 8 * v13);
            ++v19;
            if (v18) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_30:
      uint64_t v31 = sub_251F34DA0();
      LOBYTE(v24) = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 1, 1, v31);
      swift_release();
      return v24 & 1;
    }
LABEL_17:
    uint64_t v15 = (v18 - 1) & v18;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void sub_251CFC418(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  id v17 = objc_msgSend(a1, sel_zones);
  sub_251A1A568(0, &qword_26B21ECF0);
  unint64_t v18 = sub_251F35AC0();

  id v19 = a2;
  unint64_t v20 = sub_251D06FB8(v18, (uint64_t)v19);
  swift_bridgeObjectRelease();

  uint64_t v49 = sub_251EE036C(v20);
  swift_bridgeObjectRelease();
  id v21 = v19;
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_251D07B94(a3, v21, a6);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v22 = v21;
  uint64_t v47 = sub_251D0A2FC(a4, v22, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_251D07D9C);
  swift_bridgeObjectRelease();

  id v23 = v22;
  uint64_t v46 = sub_251D0A2FC(a5, v23, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_251D08478);
  swift_bridgeObjectRelease();

  id v24 = v23;
  uint64_t v45 = sub_251D0A2FC(a6, v24, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_251D08B54);
  swift_bridgeObjectRelease();

  id v25 = v24;
  uint64_t v44 = sub_251D0A2FC(a7, v25, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_251D0904C);
  swift_bridgeObjectRelease();

  id v26 = v25;
  uint64_t v41 = sub_251D0A2FC(a8, v26, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_251D09544);
  swift_bridgeObjectRelease();

  id v27 = v26;
  uint64_t v43 = sub_251D0A2FC(a10, v27, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_251D09C20);
  swift_bridgeObjectRelease();

  id v28 = objc_msgSend(v27, sel_uniqueIdentifier);
  sub_251F34D80();

  id v29 = objc_msgSend(v27, sel_name);
  uint64_t v30 = sub_251F356F0();
  uint64_t v32 = v31;

  sub_251A1A568(0, (unint64_t *)&qword_26B21ECF8);
  id v33 = objc_msgSend(a1, sel_roomForEntireHome);
  LOBYTE(a5) = sub_251F36120();

  id v34 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v35 = (int *)type metadata accessor for StaticRoom(0);
  sub_251F34D80();

  uint64_t v36 = sub_251B1D3D4(0xD000000000000028, 0x8000000251F6F680);
  uint64_t v37 = sub_251B1D3D4(0xD000000000000026, 0x8000000251F6EBD0);
  unint64_t v38 = sub_251C37600();

  int v39 = (uint64_t *)(a9 + v35[5]);
  uint64_t *v39 = v30;
  v39[1] = v32;
  *(unsigned char *)(a9 + v35[6]) = a5 & 1;
  *(void *)(a9 + v35[7]) = v49;
  *(void *)(a9 + v35[9]) = v48;
  *(void *)(a9 + v35[10]) = v47;
  *(void *)(a9 + v35[11]) = v46;
  *(void *)(a9 + v35[12]) = v45;
  *(void *)(a9 + v35[13]) = v44;
  *(void *)(a9 + v35[14]) = v41;
  *(void *)(a9 + v35[15]) = v43;
  *(void *)(a9 + v35[16]) = v36;
  *(void *)(a9 + v35[17]) = v37;
  *(void *)(a9 + v35[18]) = v38;
}

uint64_t StaticRoom.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticRoom.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticRoom(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticRoom.isDefaultRoom.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticRoom(0) + 24));
}

uint64_t StaticRoom.staticZones.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticRoom(0) + 32);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticRoom.staticAccessoriesDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for StaticRoom(uint64_t a1)
{
  return sub_251A1C6FC(a1, qword_26B220100);
}

uint64_t type metadata accessor for RoomType(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA2620);
}

uint64_t StaticRoom.staticActionSetsDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticCameraProfilesDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticMediaSystemsDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticMediaProfilesDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticServiceGroupsDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticServicesDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.actionSetsSortOrder.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.servicesSortOrder.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.roomServicesSortOrderGroupedByCategory.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = (int *)type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  uint64_t v5 = *(void *)(v1 + v4[7]);
  sub_251F36CC0();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_251A56A28(a1, v5);
    swift_bridgeObjectRelease();
  }
  sub_251F35610();
  uint64_t v6 = *(void *)(v1 + v4[9]);
  swift_bridgeObjectRetain();
  sub_251A45A18((uint64_t)a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + v4[10]);
  swift_bridgeObjectRetain();
  sub_251A4ACC8((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v2 + v4[11]);
  swift_bridgeObjectRetain();
  sub_251A4A75C((uint64_t)a1, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_251A4A1F0((uint64_t)a1, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v2 + v4[13]);
  swift_bridgeObjectRetain();
  sub_251A49C84((uint64_t)a1, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v2 + v4[14]);
  swift_bridgeObjectRetain();
  sub_251A44E40((uint64_t)a1, v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v2 + v4[15]);
  swift_bridgeObjectRetain();
  sub_251A454AC((uint64_t)a1, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v2 + v4[16]);
  swift_bridgeObjectRetain();
  sub_251A41A94((uint64_t)a1, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v2 + v4[17]);
  swift_bridgeObjectRetain();
  sub_251A41A94((uint64_t)a1, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v2 + v4[18]);
  swift_bridgeObjectRetain();
  sub_251A4C8C8(a1, v15);
  return swift_bridgeObjectRelease();
}

unint64_t sub_251CFCEA4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6C75616665447369;
      break;
    case 3:
      unint64_t result = 0x6F5A636974617473;
      break;
    case 4:
      unint64_t result = 0x6449656D6F68;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 9:
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000018;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 14:
      unint64_t result = 0xD000000000000026;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251CFD068()
{
  return sub_251CFCEA4(*v0);
}

uint64_t sub_251CFD070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D0AFC0(a1, a2);
  *a3 = result;
  return result;
}

void sub_251CFD098(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_251CFD0A4(uint64_t a1)
{
  unint64_t v2 = sub_251D06B3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CFD0E0(uint64_t a1)
{
  unint64_t v2 = sub_251D06B3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRoom.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2588);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D06B3C();
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticRoom(0);
    LOBYTE(v13) = 1;
    sub_251F369D0();
    LOBYTE(v13) = 2;
    sub_251F369E0();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2598);
    sub_251D06CD4(&qword_269BA25A0, &qword_269B9E010);
    sub_251F36970();
    LOBYTE(v13) = 4;
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[9]);
    char v12 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E018);
    sub_251B248A4();
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[10]);
    char v12 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E030);
    sub_251B24960();
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[11]);
    char v12 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E048);
    sub_251B24A1C();
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[12]);
    char v12 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E060);
    sub_251B24AD8();
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[13]);
    char v12 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E078);
    sub_251B24B94();
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[14]);
    char v12 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0A0);
    sub_251B24D0C();
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[15]);
    char v12 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
    sub_251B24DC8();
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[16]);
    char v12 = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
    sub_251AB8C90(&qword_269B9D7E8, &qword_26B21E348);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[17]);
    char v12 = 13;
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[18]);
    char v12 = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA25A8);
    sub_251D06BD8();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticRoom.hashValue.getter()
{
  sub_251F36CA0();
  StaticRoom.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticRoom.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA25C0);
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (int *)type metadata accessor for StaticRoom(0);
  MEMORY[0x270FA5388](v46);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  *(void *)&v45[4] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_251D06B3C();
  sub_251F36D90();
  if (v2)
  {
    uint64_t v47 = v2;
    LODWORD(v42) = 0;
    unsigned int v16 = 0;
  }
  else
  {
    uint64_t v41 = a2;
    uint64_t v42 = v5;
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void *)(v12 + 64);
    MEMORY[0x270FA5388](v11);
    LOBYTE(v49) = 0;
    uint64_t v14 = v7;
    uint64_t v15 = sub_251A1A8EC(&qword_269B9CC80);
    uint64_t v43 = v14;
    sub_251F36880();
    uint64_t v47 = v15;
    id v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v29(v9, (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    LOBYTE(v49) = 1;
    uint64_t v30 = sub_251F36830();
    uint64_t v31 = v46;
    uint64_t v32 = (uint64_t *)&v9[v46[5]];
    *uint64_t v32 = v30;
    v32[1] = v33;
    LOBYTE(v49) = 2;
    v9[v31[6]] = sub_251F36840() & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2598);
    char v48 = 3;
    sub_251D06CD4(&qword_269BA25C8, &qword_269B9E160);
    uint64_t v34 = sub_251F367D0();
    *(void *)&v9[v31[7]] = v49;
    MEMORY[0x270FA5388](v34);
    LOBYTE(v49) = 4;
    sub_251F36880();
    v29(&v9[v31[8]], (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E018);
    char v48 = 5;
    sub_251B25360();
    sub_251F36880();
    *(void *)&v9[v31[9]] = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E030);
    char v48 = 6;
    sub_251B2541C();
    sub_251F36880();
    *(void *)&v9[v31[10]] = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E048);
    char v48 = 7;
    sub_251B254D8();
    sub_251F36880();
    *(void *)&v9[v31[11]] = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E060);
    char v48 = 8;
    sub_251B25594();
    sub_251F36880();
    uint64_t v47 = 0;
    *(void *)&v9[v31[12]] = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E078);
    char v48 = 9;
    sub_251B25650();
    uint64_t v35 = v47;
    sub_251F36880();
    uint64_t v47 = v35;
    if (v35)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
      LODWORD(v42) = 0;
      unsigned int v16 = 507;
    }
    else
    {
      *(void *)&v9[v46[13]] = v49;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0A0);
      char v48 = 10;
      sub_251B257C8();
      uint64_t v36 = v47;
      sub_251F36880();
      uint64_t v47 = v36;
      if (!v36)
      {
        *(void *)&v9[v46[14]] = v49;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
        char v48 = 11;
        sub_251B25884();
        uint64_t v37 = v47;
        sub_251F36880();
        *(_DWORD *)uint64_t v45 = v37 == 0;
        uint64_t v47 = v37;
        if (v37
          || (*(void *)&v9[v46[15]] = v49,
              __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8),
              char v48 = 12,
              sub_251AB8C90(&qword_269B9D7F8, &qword_269B9CC80),
              uint64_t v38 = v47,
              sub_251F36880(),
              (uint64_t v47 = v38) != 0))
        {
          (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
          LODWORD(v43) = 0;
          LODWORD(v44) = 0;
        }
        else
        {
          *(void *)&v9[v46[16]] = v49;
          char v48 = 13;
          sub_251F36880();
          uint64_t v47 = 0;
          *(void *)&v9[v46[17]] = v49;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269BA25A8);
          char v48 = 14;
          sub_251D06D68();
          uint64_t v39 = v47;
          sub_251F36880();
          uint64_t v47 = v39;
          if (!v39)
          {
            (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
            *(void *)&v9[v46[18]] = v49;
            sub_251D06E64((uint64_t)v9, v41, type metadata accessor for StaticRoom);
            __swift_destroy_boxed_opaque_existential_0(*(uint64_t *)&v45[4]);
            return sub_251D06F34((uint64_t)v9, type metadata accessor for StaticRoom);
          }
          (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
          LODWORD(v43) = 1;
          LODWORD(v44) = 1;
        }
        __swift_destroy_boxed_opaque_existential_0(*(uint64_t *)&v45[4]);
        LOBYTE(v25) = 1;
        int v19 = 1;
        int v20 = 1;
        int v21 = 1;
        int v22 = 1;
        int v23 = 1;
        int v24 = 1;
        LODWORD(v42) = 1;
        *(_DWORD *)&v45[4] = 1;
        id v17 = v46;
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
      unsigned int v16 = 1019;
      LODWORD(v42) = 1;
    }
  }
  id v17 = v46;
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(*(uint64_t *)&v45[4]);
  int v19 = (v16 >> 3) & 1;
  int v20 = (v16 >> 4) & 1;
  int v21 = (v16 >> 5) & 1;
  int v22 = (v16 >> 6) & 1;
  int v23 = (v16 >> 7) & 1;
  int v24 = (v16 >> 8) & 1;
  if ((v16 & 1) == 0)
  {
    LODWORD(v44) = 0;
    LODWORD(v43) = 0;
    *(void *)uint64_t v45 = 0;
    if ((v16 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
  *(void *)uint64_t v45 = 0;
  LODWORD(v43) = 0;
  LODWORD(v44) = 0;
  int v25 = (v16 >> 1) & 1;
LABEL_19:
  uint64_t v26 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v9, v26);
  if ((v25 & 1) == 0)
  {
LABEL_6:
    if (v19) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  if (!v20)
  {
LABEL_8:
    if (v21) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  id v27 = &v9[v17[8]];
  uint64_t v28 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  if (v21)
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  if (!v22)
  {
LABEL_10:
    if (v23) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  if (!v24)
  {
LABEL_12:
    if (v42) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = swift_bridgeObjectRelease();
  if (v42)
  {
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v45[4] & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  if (!*(_DWORD *)&v45[4])
  {
LABEL_14:
    if (*(_DWORD *)v45) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = swift_bridgeObjectRelease();
  if (v45[0])
  {
LABEL_15:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v43 & 1) == 0) {
      goto LABEL_16;
    }
LABEL_30:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v44 & 1) == 0) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_29:
  if (v43) {
    goto LABEL_30;
  }
LABEL_16:
  if (!v44) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251CFE2C4()
{
  sub_251F36CA0();
  StaticRoom.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251CFE308()
{
  sub_251F36CA0();
  StaticRoom.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251CFE344@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticRoom.init(from:)(a1, a2);
}

uint64_t sub_251CFE35C(void *a1)
{
  return StaticRoom.encode(to:)(a1);
}

uint64_t StaticRoom.staticActionSets.getter()
{
  type metadata accessor for StaticRoom(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDDAA8(v0);
}

uint64_t StaticRoom.staticCameraProfiles.getter()
{
  type metadata accessor for StaticRoom(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDDD80(v0);
}

uint64_t StaticRoom.staticMediaSystems.getter()
{
  type metadata accessor for StaticRoom(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDC738(v0);
}

uint64_t StaticRoom.staticMediaProfiles.getter()
{
  type metadata accessor for StaticRoom(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDC460(v0);
}

uint64_t StaticRoom.staticServiceGroups.getter()
{
  type metadata accessor for StaticRoom(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDE330(v0);
}

uint64_t StaticRoom.staticServices.getter()
{
  type metadata accessor for StaticRoom(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDC188(v0);
}

void sub_251CFE4C4()
{
  qword_269BF3168 = (uint64_t)&unk_270263BD0;
}

uint64_t RoomType.id.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoomType(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251D06E64(v1, (uint64_t)v8, type metadata accessor for RoomType);
  uint64_t v9 = 0x65536E6F69746361;
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 4, v2))
  {
    case 1u:
      return v9;
    case 2u:
      uint64_t v9 = 0x52736172656D6163;
      break;
    case 3u:
      uint64_t v9 = 0x657469726F766166;
      break;
    case 4u:
      uint64_t v9 = 0x526E776F6E6B6E75;
      break;
    default:
      sub_251D06ECC((uint64_t)v8, (uint64_t)v5, type metadata accessor for StaticRoom);
      uint64_t v9 = sub_251F34D40();
      sub_251D06F34((uint64_t)v5, type metadata accessor for StaticRoom);
      break;
  }
  return v9;
}

uint64_t RoomType.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RoomType(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251D06E64(v2, (uint64_t)v10, type metadata accessor for RoomType);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 4, v4))
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      uint64_t result = sub_251F36CB0();
      break;
    default:
      sub_251D06ECC((uint64_t)v10, (uint64_t)v7, type metadata accessor for StaticRoom);
      sub_251F36CB0();
      StaticRoom.hash(into:)(a1);
      uint64_t result = sub_251D06F34((uint64_t)v7, type metadata accessor for StaticRoom);
      break;
  }
  return result;
}

uint64_t RoomType.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoomType(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F36CA0();
  sub_251D06E64(v1, (uint64_t)v8, type metadata accessor for RoomType);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 4, v2))
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      sub_251F36CB0();
      break;
    default:
      sub_251D06ECC((uint64_t)v8, (uint64_t)v5, type metadata accessor for StaticRoom);
      sub_251F36CB0();
      StaticRoom.hash(into:)(v11);
      sub_251D06F34((uint64_t)v5, type metadata accessor for StaticRoom);
      break;
  }
  return sub_251F36D00();
}

uint64_t sub_251CFEAF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F36CA0();
  sub_251D06E64(v1, (uint64_t)v8, type metadata accessor for RoomType);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 4, v2))
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      sub_251F36CB0();
      break;
    default:
      sub_251D06ECC((uint64_t)v8, (uint64_t)v6, type metadata accessor for StaticRoom);
      sub_251F36CB0();
      StaticRoom.hash(into:)(v11);
      sub_251D06F34((uint64_t)v6, type metadata accessor for StaticRoom);
      break;
  }
  return sub_251F36D00();
}

uint64_t sub_251CFECFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RoomType.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t StaticRoom.orderedStaticActionSets.getter()
{
  uint64_t v1 = type metadata accessor for StaticActionSet();
  uint64_t v32 = *(void *)(v1 - 8);
  uint64_t v33 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_251EDDAA8(v5);
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v29 = v4;
    uint64_t v30 = v0;
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_251A3E6EC(0, v7, 0);
    uint64_t v8 = v37;
    uint64_t result = sub_251A53EB8(v6);
    uint64_t v10 = result;
    uint64_t v12 = v11;
    char v14 = v13 & 1;
    uint64_t v31 = v6 + 56;
    while ((v14 & 1) == 0)
    {
      if (v10 < 0 || v10 >= 1 << *(unsigned char *)(v6 + 32))
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        break;
      }
      if (((*(void *)(v31 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(v6 + 36) != v12) {
        goto LABEL_16;
      }
      sub_251D06E64(*(void *)(v6 + 48) + *(void *)(v32 + 72) * v10, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v35 = v33;
      uint64_t v36 = sub_251D06B90(&qword_269B9E280, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
      sub_251D06ECC((uint64_t)v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v37 = v8;
      unint64_t v17 = *(void *)(v8 + 16);
      unint64_t v16 = *(void *)(v8 + 24);
      if (v17 >= v16 >> 1) {
        sub_251A3E6EC(v16 > 1, v17 + 1, 1);
      }
      uint64_t v19 = v35;
      uint64_t v18 = v36;
      uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x270FA5388](v20);
      int v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v22);
      sub_251D0655C(v17, (uint64_t)v22, &v37, v19, v18);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
      uint64_t v8 = v37;
      uint64_t result = sub_251A53F5C(v10, v12, 0, v6);
      uint64_t v10 = result;
      uint64_t v12 = v24;
      char v14 = v25 & 1;
      if (!--v7)
      {
        sub_251A4ECE4(result, v24, v14);
        swift_bridgeObjectRelease();
        uint64_t v4 = v29;
        uint64_t v0 = v30;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_13:
    uint64_t v26 = sub_251CFF0B0(*(void *)(v0 + *(int *)(v4 + 64)), v8);
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_251EECCF0(v26);
    swift_bridgeObjectRelease();
    return v27;
  }
  return result;
}

uint64_t sub_251CFF0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a1;
  int64_t v3 = *(void *)(a2 + 16);
  int v52 = (void *)MEMORY[0x263F8EE78];
  sub_251A3E868(0, v3, 0);
  uint64_t v4 = v52;
  uint64_t v48 = a2;
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)&unk_269BA5B80;
    int64_t v7 = v3;
    do
    {
      uint64_t v8 = v6;
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(v6);
      uint64_t v49 = &v45;
      uint64_t v10 = v9 - 8;
      uint64_t v11 = *(void *)(v9 - 8);
      MEMORY[0x270FA5388](v9);
      char v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1A4EC(v5, (uint64_t)&v50);
      uint64_t v14 = (uint64_t)&v13[*(int *)(v10 + 56)];
      __swift_project_boxed_opaque_existential_1(&v50, v51);
      sub_251F36420();
      sub_251A1A444(&v50, v14);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int v52 = v4;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A3E868(0, v4[2] + 1, 1);
        uint64_t v4 = v52;
      }
      unint64_t v17 = v4[2];
      unint64_t v16 = v4[3];
      if (v17 >= v16 >> 1)
      {
        sub_251A3E868(v16 > 1, v17 + 1, 1);
        uint64_t v4 = v52;
      }
      v4[2] = v17 + 1;
      uint64_t v6 = v8;
      sub_251A4ECF0((uint64_t)v13, (uint64_t)v4+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v17, v8);
      v5 += 40;
      --v7;
    }
    while (v7);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = v48;
  swift_bridgeObjectRelease();
  if (v4[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C928);
    uint64_t v19 = sub_251F36700();
  }
  else
  {
    uint64_t v19 = MEMORY[0x263F8EE80];
  }
  *(void *)&long long v50 = v19;
  sub_251F06934((uint64_t)v4, 1, (uint64_t *)&v50);
  uint64_t v45 = 0;
  swift_release();
  uint64_t v46 = v50;
  int v52 = (void *)MEMORY[0x263F8EE78];
  sub_251A3E084(0, v3, 0);
  if (v3)
  {
    uint64_t v20 = v18 + 32;
    uint64_t v49 = (uint64_t *)sub_251F34DA0();
    uint64_t v21 = *(v49 - 1);
    uint64_t v22 = *(void *)(v21 + 64);
    uint64_t v23 = swift_bridgeObjectRetain();
    do
    {
      MEMORY[0x270FA5388](v23);
      sub_251A1A4EC(v20, (uint64_t)&v50);
      __swift_project_boxed_opaque_existential_1(&v50, v51);
      sub_251F36420();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v50);
      uint64_t v24 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, v24[2] + 1, 1);
        uint64_t v24 = v52;
      }
      unint64_t v26 = v24[2];
      unint64_t v25 = v24[3];
      if (v26 >= v25 >> 1)
      {
        sub_251A3E084(v25 > 1, v26 + 1, 1);
        uint64_t v24 = v52;
      }
      v24[2] = v26 + 1;
      uint64_t v23 = (*(uint64_t (**)(unint64_t, char *, uint64_t *))(v21 + 32))((unint64_t)v24+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v26, (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v49);
      int v52 = v24;
      v20 += 40;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v24 = v52;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_251EE04F8((uint64_t)v24);
  swift_release();
  *(void *)&long long v50 = v27;
  uint64_t v28 = v47;
  if (*(void *)(v47 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = v45;
    sub_251F07164(v29, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v31 = swift_retain();
    uint64_t v32 = (void *)sub_251A91CF8(v31);
    swift_release();
    int v52 = v32;
    sub_251F08AE4(&v52, v28);
    if (v30)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v33 = v52;
  }
  else
  {
    uint64_t v33 = (void *)MEMORY[0x263F8EE78];
    uint64_t v30 = v45;
  }
  sub_251AADFB8((uint64_t)v33);
  uint64_t v34 = v46;
  swift_retain();
  uint64_t v35 = swift_bridgeObjectRetain();
  sub_251F08F58(v35, v34);
  swift_release();
  swift_retain();
  uint64_t v36 = swift_retain();
  uint64_t v37 = (void *)sub_251A91CF8(v36);
  swift_release();
  int v52 = v37;
  sub_251F0AE50(&v52, v34);
  if (!v30)
  {
    swift_release();
    swift_release();
    uint64_t v38 = v52;
    sub_251AADFB8((uint64_t)v52);
    uint64_t v39 = v50;
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v40 = (void *)sub_251A91CF8(v39);
    swift_bridgeObjectRelease();
    int v52 = v40;
    sub_251F0C334(&v52, v34);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v41 = v52;
    int v52 = v33;
    sub_251ED7700((uint64_t)v38);
    sub_251ED7700((uint64_t)v41);
    uint64_t v42 = v52;
    swift_retain();
    uint64_t v43 = sub_251F065B8((uint64_t)v42, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    return (uint64_t)v43;
  }
  swift_release();
LABEL_30:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t StaticRoom.orderedVisibleStaticActionSets(filterCategory:forDashboard:)(unsigned __int8 *a1, int a2)
{
  int v47 = a2;
  uint64_t v45 = type metadata accessor for StaticActionSet();
  uint64_t v3 = *(void *)(v45 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v45);
  uint64_t v43 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v42 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  char v13 = (char *)&v42 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v49 = (uint64_t)&v42 - v14;
  int v48 = *a1;
  uint64_t result = StaticRoom.orderedStaticActionSets.getter();
  uint64_t v16 = result;
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v50 = MEMORY[0x263F8EE78];
  uint64_t v46 = *(void *)(result + 16);
  if (v46)
  {
    unint64_t v18 = 0;
    uint64_t v19 = MEMORY[0x263F8EE78];
    while (1)
    {
      if (v18 >= *(void *)(v16 + 16))
      {
        __break(1u);
        goto LABEL_33;
      }
      unint64_t v20 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v21 = *(void *)(v3 + 72);
      uint64_t v22 = v49;
      sub_251D06E64(v16 + v20 + v21 * v18, v49, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      sub_251D06E64(v22, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if ((v47 & 1) == 0) {
        break;
      }
      int v23 = v13[*(int *)(v45 + 44)];
      sub_251D06F34((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if (v23 == 1) {
        goto LABEL_10;
      }
      uint64_t result = sub_251D06F34(v49, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
LABEL_4:
      if (v46 == ++v18)
      {
        uint64_t v31 = v50;
        uint64_t v33 = (uint64_t)v43;
        uint64_t v32 = (uint64_t)v44;
        uint64_t v17 = MEMORY[0x263F8EE78];
        goto LABEL_17;
      }
    }
    sub_251D06F34((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
LABEL_10:
    uint64_t v24 = v13;
    uint64_t v25 = v16;
    uint64_t v26 = v3;
    uint64_t v27 = (uint64_t)v10;
    sub_251D06ECC(v49, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_251A3E5F8(0, *(void *)(v19 + 16) + 1, 1);
    }
    uint64_t v19 = v50;
    unint64_t v29 = *(void *)(v50 + 16);
    unint64_t v28 = *(void *)(v50 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_251A3E5F8(v28 > 1, v29 + 1, 1);
      uint64_t v19 = v50;
    }
    *(void *)(v19 + 16) = v29 + 1;
    uint64_t v30 = v19 + v20 + v29 * v21;
    uint64_t v10 = (char *)v27;
    uint64_t result = sub_251D06ECC(v27, v30, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v3 = v26;
    uint64_t v16 = v25;
    char v13 = v24;
    goto LABEL_4;
  }
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v33 = (uint64_t)v43;
  uint64_t v32 = (uint64_t)v44;
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v50 = v17;
  uint64_t v34 = *(void *)(v31 + 16);
  if (v34)
  {
    unint64_t v35 = 0;
    while (v35 < *(void *)(v31 + 16))
    {
      unint64_t v36 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v37 = *(void *)(v3 + 72);
      sub_251D06E64(v31 + v36 + v37 * v35, v32, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if (v48 == 8 || (sub_251DB3F78(v48, *(void *)(v32 + *(int *)(v45 + 48))) & 1) != 0)
      {
        sub_251D06ECC(v32, v33, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
        uint64_t v38 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251A3E5F8(0, *(void *)(v38 + 16) + 1, 1);
          uint64_t v38 = v50;
        }
        unint64_t v40 = *(void *)(v38 + 16);
        unint64_t v39 = *(void *)(v38 + 24);
        if (v40 >= v39 >> 1)
        {
          sub_251A3E5F8(v39 > 1, v40 + 1, 1);
          uint64_t v38 = v50;
        }
        *(void *)(v38 + 16) = v40 + 1;
        uint64_t result = sub_251D06ECC(v33, v38 + v36 + v40 * v37, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
        uint64_t v32 = (uint64_t)v44;
      }
      else
      {
        uint64_t result = sub_251D06F34(v32, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      }
      if (v34 == ++v35)
      {
        uint64_t v41 = v50;
        goto LABEL_31;
      }
    }
LABEL_33:
    __break(1u);
  }
  else
  {
    uint64_t v41 = v17;
LABEL_31:
    swift_release();
    return v41;
  }
  return result;
}

uint64_t StaticRoom.orderedVisibleTileInfos(filterCategory:forDashboard:forStatus:)(unsigned __int8 *a1, int a2, int a3)
{
  int v151 = a3;
  int v157 = a2;
  uint64_t v5 = type metadata accessor for StaticMediaProfile();
  uint64_t v155 = *(void *)(v5 - 8);
  uint64_t v156 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v154 = (uint64_t)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for StaticMediaSystem();
  uint64_t v159 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v158 = (uint64_t)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticServiceGroup();
  uint64_t v161 = *(void *)(v8 - 8);
  uint64_t v162 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v150 = *a1;
  uint64_t v152 = type metadata accessor for StaticRoom(0);
  uint64_t v153 = v3;
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_251EDE330(v11);
  int64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (!v13)
  {
    swift_bridgeObjectRelease();
    uint64_t v160 = MEMORY[0x263F8EE78];
LABEL_13:
    uint64_t v33 = v153;
    uint64_t v161 = *(int *)(v152 + 48);
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_251EDC738(v34);
    MEMORY[0x270FA5388](v35);
    int v36 = v151 & 1;
    *((unsigned char *)&v147 - 16) = v151 & 1;
    *(&v147 - 1) = v33;
    uint64_t v37 = 0;
    uint64_t v39 = sub_251B1E5B0((uint64_t)sub_251D06F94, (uint64_t)(&v147 - 4), v38);
    int64_t v40 = *(void *)(v39 + 16);
    if (v40)
    {
      uint64_t v147 = 0;
      int v148 = v36;
      v163[0] = v14;
      sub_251A3E6EC(0, v40, 0);
      uint64_t v41 = v163[0];
      uint64_t v42 = sub_251A53EB8(v39);
      uint64_t v44 = v43;
      char v46 = v45 & 1;
      uint64_t v162 = v39 + 56;
      uint64_t v47 = v149;
      do
      {
        if (v46) {
          goto LABEL_77;
        }
        if (v42 < 0 || v42 >= 1 << *(unsigned char *)(v39 + 32)) {
          goto LABEL_69;
        }
        if (((*(void *)(v162 + (((unint64_t)v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
          goto LABEL_70;
        }
        if (*(_DWORD *)(v39 + 36) != v44) {
          goto LABEL_71;
        }
        uint64_t v48 = v158;
        sub_251D06E64(*(void *)(v39 + 48) + *(void *)(v159 + 72) * v42, v158, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
        uint64_t v168 = v47;
        uint64_t v169 = sub_251D06B90(&qword_269B9E260, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v167);
        sub_251D06ECC(v48, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
        v163[0] = v41;
        unint64_t v51 = *(void *)(v41 + 16);
        unint64_t v50 = *(void *)(v41 + 24);
        if (v51 >= v50 >> 1) {
          sub_251A3E6EC(v50 > 1, v51 + 1, 1);
        }
        uint64_t v52 = v168;
        uint64_t v53 = v169;
        uint64_t v54 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v167, v168);
        MEMORY[0x270FA5388](v54);
        int v56 = (char *)&v147 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v57 + 16))(v56);
        sub_251D0655C(v51, (uint64_t)v56, v163, v52, v53);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v167);
        uint64_t v41 = v163[0];
        uint64_t v58 = sub_251A53F5C(v42, v44, 0, v39);
        uint64_t v42 = v58;
        uint64_t v44 = v59;
        char v46 = v60 & 1;
        --v40;
      }
      while (v40);
      sub_251A4ECE4(v58, v59, v46);
      swift_release();
      uint64_t v14 = MEMORY[0x263F8EE78];
      LOBYTE(v36) = v148;
      uint64_t v37 = v147;
    }
    else
    {
      swift_release();
      uint64_t v41 = MEMORY[0x263F8EE78];
    }
    uint64_t v61 = v153;
    uint64_t v62 = swift_bridgeObjectRetain();
    uint64_t v63 = sub_251EDC738(v62);
    uint64_t v64 = sub_251CFBAAC(v63);
    swift_bridgeObjectRelease();
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v66 = sub_251EDC460(v65);
    uint64_t v67 = sub_251D04A8C(v66, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251D062EC);
    uint64_t v68 = sub_251D0D1FC(v67, v64, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251D0B564);
    uint64_t v69 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v69);
    *((unsigned char *)&v147 - 16) = v36;
    *(&v147 - 1) = v61;
    uint64_t v70 = sub_251B1E514((uint64_t)sub_251D0BDD0, (uint64_t)(&v147 - 4), v68);
    uint64_t v71 = sub_251D04A8C(v70, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251D06018);
    int64_t v72 = *(void *)(v71 + 16);
    if (v72)
    {
      uint64_t v161 = v37;
      v163[0] = v14;
      sub_251A3E6EC(0, v72, 0);
      uint64_t v73 = v163[0];
      uint64_t v74 = sub_251A53EB8(v71);
      uint64_t v76 = v75;
      char v78 = v77 & 1;
      uint64_t v162 = v71 + 56;
      do
      {
        if (v78) {
          goto LABEL_78;
        }
        if (v74 < 0 || v74 >= 1 << *(unsigned char *)(v71 + 32)) {
          goto LABEL_73;
        }
        if (((*(void *)(v162 + (((unint64_t)v74 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v74) & 1) == 0) {
          goto LABEL_74;
        }
        if (*(_DWORD *)(v71 + 36) != v76) {
          goto LABEL_75;
        }
        uint64_t v79 = v154;
        sub_251D06E64(*(void *)(v71 + 48) + *(void *)(v155 + 72) * v74, v154, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        uint64_t v168 = v156;
        uint64_t v169 = sub_251D06B90(&qword_269B9E258, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
        uint64_t v80 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v167);
        sub_251D06ECC(v79, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        v163[0] = v73;
        unint64_t v82 = *(void *)(v73 + 16);
        unint64_t v81 = *(void *)(v73 + 24);
        if (v82 >= v81 >> 1) {
          sub_251A3E6EC(v81 > 1, v82 + 1, 1);
        }
        uint64_t v83 = v168;
        uint64_t v84 = v169;
        uint64_t v85 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v167, v168);
        MEMORY[0x270FA5388](v85);
        v87 = (char *)&v147 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v88 + 16))(v87);
        sub_251D0655C(v82, (uint64_t)v87, v163, v83, v84);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v167);
        uint64_t v73 = v163[0];
        uint64_t v89 = sub_251A53F5C(v74, v76, 0, v71);
        uint64_t v74 = v89;
        uint64_t v76 = v90;
        char v78 = v91 & 1;
        --v72;
      }
      while (v72);
      sub_251A4ECE4(v89, v90, v78);
      swift_release();
      uint64_t v37 = v161;
    }
    else
    {
      swift_release();
      uint64_t v73 = MEMORY[0x263F8EE78];
    }
    uint64_t v92 = v153;
    uint64_t v93 = swift_bridgeObjectRetain();
    uint64_t v94 = sub_251EDCBC8(v93);
    uint64_t v95 = sub_251D04A8C(v94, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251D05398);
    uint64_t v96 = sub_251D04A8C(v95, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251D05128);
    uint64_t v97 = sub_251D04A8C(v96, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251D04EB0);
    char v98 = v151 & 1;
    uint64_t v99 = sub_251D048A8(v97, v151 & 1, (uint64_t (*)(char *, unint64_t, uint64_t, void))sub_251D04C04);
    uint64_t v100 = sub_251CFB35C(v99);
    swift_release();
    uint64_t v101 = swift_bridgeObjectRetain();
    uint64_t v102 = sub_251EDC188(v101);
    MEMORY[0x270FA5388](v102);
    *(&v147 - 2) = v92;
    uint64_t v104 = sub_251B1E2A4((uint64_t)sub_251D0BDF4, (uint64_t)(&v147 - 4), v103);
    uint64_t v105 = v160;
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_251D0D1FC(v104, v105, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251D0BE14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v107 = sub_251D0D1FC(v106, v100, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251D0C360);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v108 = sub_251D0D1FC(v107, v73, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251D0C8AC);
    swift_bridgeObjectRelease();
    uint64_t v109 = sub_251D04A8C(v108, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251D059A4);
    MEMORY[0x270FA5388](v109);
    *(&v147 - 2) = v92;
    uint64_t v111 = sub_251B1E2A4((uint64_t)sub_251D0D3D4, (uint64_t)(&v147 - 4), v110);
    uint64_t v112 = sub_251D048A8(v111, v98, (uint64_t (*)(char *, unint64_t, uint64_t, void))sub_251D056F8);
    uint64_t v113 = sub_251CFB704(v112);
    swift_release();
    *(void *)&long long v167 = v105;
    sub_251ED7E5C(v100);
    sub_251ED7E5C(v41);
    sub_251ED7E5C(v113);
    sub_251ED7E5C(v73);
    uint64_t v114 = v167;
    int64_t v115 = *(void *)(v167 + 16);
    if (v115)
    {
      v163[0] = MEMORY[0x263F8EE78];
      sub_251A3E6EC(0, v115, 0);
      uint64_t v116 = v163[0];
      uint64_t v117 = v114 + 32;
      do
      {
        sub_251A1A4EC(v117, (uint64_t)&v167);
        v163[0] = v116;
        unint64_t v119 = *(void *)(v116 + 16);
        unint64_t v118 = *(void *)(v116 + 24);
        if (v119 >= v118 >> 1) {
          sub_251A3E6EC(v118 > 1, v119 + 1, 1);
        }
        uint64_t v120 = v168;
        uint64_t v121 = v169;
        uint64_t v122 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v167, v168);
        MEMORY[0x270FA5388](v122);
        uint64_t v124 = (char *)&v147 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v125 + 16))(v124);
        sub_251D0655C(v119, (uint64_t)v124, v163, v120, v121);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v167);
        uint64_t v116 = v163[0];
        v117 += 40;
        --v115;
      }
      while (v115);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v116 = MEMORY[0x263F8EE78];
    }
    uint64_t v126 = MEMORY[0x263F8EE78];
    uint64_t v127 = v150;
    if (v150 != 8)
    {
      v163[0] = MEMORY[0x263F8EE78];
      uint64_t v128 = *(void *)(v116 + 16);
      if (v128)
      {
        uint64_t v129 = v116 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_251A1A4EC(v129, (uint64_t)&v167);
          sub_251D01588((uint64_t)&v167, v127, v166);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v167);
          if (v37) {
            goto LABEL_79;
          }
          sub_251ED7E5C(v166[0]);
          v129 += 40;
          --v128;
        }
        while (v128);
        swift_bridgeObjectRelease_n();
        uint64_t v116 = v163[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v116 = MEMORY[0x263F8EE78];
      }
    }
    v166[0] = v126;
    uint64_t v130 = *(void *)(v116 + 16);
    if (!v130)
    {
LABEL_65:
      swift_bridgeObjectRelease();
      uint64_t v145 = sub_251CFF0B0(*(void *)(v153 + *(int *)(v152 + 68)), v166[0]);
      swift_release();
      return v145;
    }
    unint64_t v131 = 0;
    uint64_t v132 = v116 + 32;
    while (1)
    {
      if (v131 >= *(void *)(v116 + 16)) {
        goto LABEL_72;
      }
      sub_251A1A4EC(v132, (uint64_t)&v167);
      sub_251A1A4EC((uint64_t)&v167, (uint64_t)v163);
      if ((v157 & 1) == 0) {
        break;
      }
      uint64_t v133 = v164;
      uint64_t v134 = v165;
      __swift_project_boxed_opaque_existential_1(v163, v164);
      char v135 = (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 128))(v133, v134);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v163);
      if (v135) {
        goto LABEL_60;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v167);
LABEL_54:
      ++v131;
      v132 += 40;
      if (v130 == v131) {
        goto LABEL_65;
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v163);
LABEL_60:
    sub_251A1A444(&v167, (uint64_t)v163);
    uint64_t v136 = v166[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_251A3E6EC(0, *(void *)(v136 + 16) + 1, 1);
      uint64_t v136 = v166[0];
    }
    unint64_t v138 = *(void *)(v136 + 16);
    unint64_t v137 = *(void *)(v136 + 24);
    if (v138 >= v137 >> 1) {
      sub_251A3E6EC(v137 > 1, v138 + 1, 1);
    }
    uint64_t v139 = v164;
    uint64_t v140 = v165;
    uint64_t v141 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v163, v164);
    MEMORY[0x270FA5388](v141);
    uint64_t v143 = (char *)&v147 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v144 + 16))(v143);
    sub_251D0655C(v138, (uint64_t)v143, v166, v139, v140);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v163);
    goto LABEL_54;
  }
  v163[0] = MEMORY[0x263F8EE78];
  sub_251A3E6EC(0, v13, 0);
  uint64_t v15 = v163[0];
  uint64_t v16 = sub_251A53EB8(v12);
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  uint64_t v160 = v12 + 56;
  while (1)
  {
    if (v20) {
      goto LABEL_76;
    }
    if (v16 < 0 || v16 >= 1 << *(unsigned char *)(v12 + 32)) {
      break;
    }
    if (((*(void *)(v160 + (((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
      goto LABEL_67;
    }
    if (*(_DWORD *)(v12 + 36) != v18) {
      goto LABEL_68;
    }
    sub_251D06E64(*(void *)(v12 + 48) + *(void *)(v161 + 72) * v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v168 = v162;
    uint64_t v169 = sub_251D06B90(&qword_269B9E278, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
    uint64_t v21 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v167);
    sub_251D06ECC((uint64_t)v10, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    v163[0] = v15;
    unint64_t v23 = *(void *)(v15 + 16);
    unint64_t v22 = *(void *)(v15 + 24);
    if (v23 >= v22 >> 1) {
      sub_251A3E6EC(v22 > 1, v23 + 1, 1);
    }
    uint64_t v24 = v168;
    uint64_t v25 = v169;
    uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v167, v168);
    MEMORY[0x270FA5388](v26);
    unint64_t v28 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v29 + 16))(v28);
    sub_251D0655C(v23, (uint64_t)v28, v163, v24, v25);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v167);
    uint64_t v15 = v163[0];
    uint64_t v30 = sub_251A53F5C(v16, v18, 0, v12);
    uint64_t v16 = v30;
    uint64_t v18 = v31;
    char v20 = v32 & 1;
    if (!--v13)
    {
      uint64_t v160 = v15;
      sub_251A4ECE4(v30, v31, v20);
      swift_bridgeObjectRelease();
      uint64_t v14 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_251D00CDC(uint64_t a1, char a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v5 = type metadata accessor for StaticMediaSystem();
    uint64_t v6 = *(void *)(a1 + *(int *)(v5 + 92));
    MEMORY[0x270FA5388](v5);
    v9[2] = a3;
    swift_bridgeObjectRetain();
    char v7 = sub_251CFBFE0((uint64_t (*)(char *))sub_251D0F640, (uint64_t)v9, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 1;
  }
  return v7 & 1;
}

uint64_t sub_251D00D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + *(int *)(type metadata accessor for StaticRoom(0) + 36));
  if (!*(void *)(v8 + 16)) {
    return 1;
  }
  unint64_t v9 = sub_2519FE584(a1);
  if ((v10 & 1) == 0) {
    return 1;
  }
  sub_251D06E64(*(void *)(v8 + 56) + *(void *)(v5 + 72) * v9, (uint64_t)v7, type metadata accessor for StaticAccessory);
  uint64_t v11 = v7[*(int *)(v4 + 68)];
  sub_251D06F34((uint64_t)v7, type metadata accessor for StaticAccessory);
  return v11;
}

uint64_t sub_251D00ED0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0) {
    return 1;
  }
  uint64_t v10 = *(void *)(a3 + *(int *)(type metadata accessor for StaticRoom(0) + 36));
  if (!*(void *)(v10 + 16)) {
    return 1;
  }
  uint64_t v11 = type metadata accessor for StaticMediaProfile();
  unint64_t v12 = sub_2519FE584(a1 + *(int *)(v11 + 56));
  if ((v13 & 1) == 0) {
    return 1;
  }
  sub_251D06E64(*(void *)(v10 + 56) + *(void *)(v7 + 72) * v12, (uint64_t)v9, type metadata accessor for StaticAccessory);
  uint64_t v14 = v9[*(int *)(v6 + 68)];
  sub_251D06F34((uint64_t)v9, type metadata accessor for StaticAccessory);
  return v14;
}

uint64_t sub_251D01020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v25 - v10;
  MEMORY[0x270FA5388](v9);
  char v13 = (char *)&v25 - v12;
  uint64_t v14 = *(void *)(a2 + *(int *)(type metadata accessor for StaticRoom(0) + 36));
  if (!*(void *)(v14 + 16)) {
    return 1;
  }
  uint64_t v15 = type metadata accessor for StaticService();
  unint64_t v16 = sub_2519FE584(a1 + *(int *)(v15 + 44));
  if ((v17 & 1) == 0) {
    return 1;
  }
  sub_251D06E64(*(void *)(v14 + 56) + *(void *)(v5 + 72) * v16, (uint64_t)v11, type metadata accessor for StaticAccessory);
  sub_251D06ECC((uint64_t)v11, (uint64_t)v13, type metadata accessor for StaticAccessory);
  char v18 = v13[*(int *)(v4 + 72)];
  sub_251D06E64((uint64_t)v13, (uint64_t)v8, type metadata accessor for StaticAccessory);
  if (v18)
  {
    BOOL v19 = 1;
  }
  else
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_251B83C30(v20);
    uint64_t v22 = sub_251EE10DC(v21);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(v22 + 16);
    swift_bridgeObjectRelease();
    BOOL v19 = v23 == 1;
  }
  sub_251D06F34((uint64_t)v8, type metadata accessor for StaticAccessory);
  sub_251D06F34((uint64_t)v13, type metadata accessor for StaticAccessory);
  return v19;
}

BOOL sub_251D01238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(a2 + *(int *)(type metadata accessor for StaticRoom(0) + 36));
  if (!*(void *)(v11 + 16)) {
    return 1;
  }
  unint64_t v12 = sub_2519FE584(a1 + v4[11]);
  if ((v13 & 1) == 0) {
    return 1;
  }
  sub_251D06E64(*(void *)(v11 + 56) + *(void *)(v8 + 72) * v12, (uint64_t)v10, type metadata accessor for StaticAccessory);
  unsigned int v14 = *(unsigned __int16 *)&v10[*(int *)(v7 + 88)];
  sub_251D06F34((uint64_t)v10, type metadata accessor for StaticAccessory);
  if ((~v14 & 0xFEFC) == 0) {
    return 1;
  }
  if (!(v14 >> 14)) {
    return 0;
  }
  if (v14 >> 14 == 1) {
    return (v14 & 0x100) == 0;
  }
  BOOL result = 1;
  switch(v14)
  {
    case 0x8001u:
      return 0;
    case 0x8003u:
      if (qword_269B9C410 != -1) {
        swift_once();
      }
      uint64_t v16 = qword_269BF3168;
      int v17 = *(unsigned __int8 *)(a1 + v4[24]);
      sub_251D06E64(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v17 == 53) {
        LOBYTE(v17) = v6[v4[22]];
      }
      swift_bridgeObjectRetain();
      sub_251D06F34((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v18 = *(void *)(v16 + 16);
      if (!v18)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = 0;
      break;
    default:
      return result;
  }
  while (1)
  {
    v26[15] = *(unsigned char *)(v16 + v19 + 32);
    v26[14] = v17;
    unint64_t v20 = ServiceKind.rawValue.getter();
    uint64_t v22 = v21;
    if (v20 == ServiceKind.rawValue.getter() && v22 == v23) {
      break;
    }
    char v25 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_25;
    }
    if (v18 == ++v19)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_25:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_251D01588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v128 = a2;
  uint64_t v124 = a3;
  uint64_t v112 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v112);
  uint64_t v113 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x270FA5388](v114);
  int64_t v115 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v117 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = (char *)type metadata accessor for StaticServiceGroup();
  uint64_t v8 = MEMORY[0x270FA5388](v121);
  unint64_t v118 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v122 = (char *)&v109 - v10;
  uint64_t v123 = (char *)type metadata accessor for StaticMediaSystem();
  MEMORY[0x270FA5388](v123);
  uint64_t v126 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x270FA5388](v129);
  unint64_t v132 = (unint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticActionSet();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for StaticService();
  uint64_t v131 = *(void *)(v134 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v134);
  uint64_t v111 = (uint64_t)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v119 = (char *)&v109 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v120 = (char *)&v109 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v109 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v116 = (char *)&v109 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v127 = (uint64_t)&v109 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v133 = (uint64_t)&v109 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v130 = (uint64_t)&v109 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v109 - v33;
  uint64_t v35 = type metadata accessor for StaticAccessory(0);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  int64_t v40 = (char *)&v109 - v39;
  sub_251A1A4EC(a1, (uint64_t)v139);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
  if (swift_dynamicCast())
  {
    sub_251A1A4EC(a1, (uint64_t)&v136);
    uint64_t v41 = swift_dynamicCast();
    uint64_t v42 = v134;
    if ((~*(unsigned __int16 *)&v38[*(int *)(v35 + 88)] & 0xFEFC) == 0)
    {
LABEL_3:
      int64_t v115 = v40;
      uint64_t v43 = *(void *)&v38[*(int *)(v35 + 80)];
      MEMORY[0x270FA5388](v41);
      *(&v109 - 2) = (uint64_t)v38;
      swift_bridgeObjectRetain();
      uint64_t v44 = v125;
      unint64_t v45 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)(&v109 - 4), v43);
      swift_bridgeObjectRelease();
      *(void *)&long long v136 = MEMORY[0x263F8EE78];
      uint64_t v129 = *(void *)(v45 + 16);
      uint64_t v125 = v44;
      uint64_t v110 = v38;
      if (v129)
      {
        unint64_t v46 = 0;
        uint64_t v126 = (char *)MEMORY[0x263F8EE78];
        unint64_t v132 = (unint64_t)"00-8000-0026BB765291";
        uint64_t v128 = v128;
        uint64_t v123 = "13-AA62-01754F256DD5";
        uint64_t v122 = "73-A058-C5E64BC487B2";
        uint64_t v121 = "CE-986D-63B28F62C9E3";
        uint64_t v120 = "60-AD68-D91053B75F44";
        unint64_t v119 = "7E-BE63-1D00B1500545";
        unint64_t v118 = "17-A590-755E1AAC02AE";
        uint64_t v117 = "73-8FBD-0E8978A33403";
        while (1)
        {
          if (v46 >= *(void *)(v45 + 16))
          {
            __break(1u);
            JUMPOUT(0x251D02998);
          }
          unint64_t v47 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
          uint64_t v48 = *(void *)(v131 + 72);
          unint64_t v49 = v45;
          sub_251D06E64(v45 + v47 + v48 * v46, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for StaticService);
          int v50 = v34[*(int *)(v42 + 96)];
          uint64_t v51 = v130;
          sub_251D06E64((uint64_t)v34, v130, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v50 == 53) {
            LOBYTE(v50) = *(unsigned char *)(v51 + *(int *)(v42 + 88));
          }
          ++v46;
          sub_251D06F34(v51, (uint64_t (*)(void))type metadata accessor for StaticService);
          v139[63] = v50;
          ServiceKind.umbrellaCategory.getter(&v135);
          unint64_t v52 = v132 | 0x8000000000000000;
          unint64_t v45 = v49;
          switch((char)v135)
          {
            case 1:
              uint64_t v53 = &v146;
              goto LABEL_19;
            case 2:
              uint64_t v53 = &v145;
              goto LABEL_19;
            case 3:
              uint64_t v53 = &v144;
              goto LABEL_19;
            case 4:
              uint64_t v53 = &v143;
              goto LABEL_19;
            case 5:
              uint64_t v53 = &v142;
              goto LABEL_19;
            case 6:
              uint64_t v53 = &v141;
              goto LABEL_19;
            case 7:
              uint64_t v53 = &v140;
LABEL_19:
              unint64_t v52 = *(v53 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          unint64_t v54 = v132 | 0x8000000000000000;
          switch(v128)
          {
            case 1:
              uint64_t v55 = &v146;
              goto LABEL_28;
            case 2:
              uint64_t v55 = &v145;
              goto LABEL_28;
            case 3:
              uint64_t v55 = &v144;
              goto LABEL_28;
            case 4:
              uint64_t v55 = &v143;
              goto LABEL_28;
            case 5:
              uint64_t v55 = &v142;
              goto LABEL_28;
            case 6:
              uint64_t v55 = &v141;
              goto LABEL_28;
            case 7:
              uint64_t v55 = &v140;
LABEL_28:
              unint64_t v54 = *(v55 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          if (v52 == v54)
          {
            swift_bridgeObjectRelease_n();
            sub_251D06E64((uint64_t)v34, v133, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v42 = v134;
          }
          else
          {
            char v56 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_251D06E64((uint64_t)v34, v133, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v42 = v134;
            if ((v56 & 1) == 0)
            {
              sub_251D06F34(v133, (uint64_t (*)(void))type metadata accessor for StaticService);
              goto LABEL_6;
            }
          }
          if (qword_269B9C488 != -1) {
            swift_once();
          }
          uint64_t v57 = v133;
          char v58 = sub_251DB3C0C(*(unsigned __int8 *)(v133 + *(int *)(v42 + 88)), qword_269BF31F0);
          sub_251D06F34(v57, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v58)
          {
            sub_251D06ECC((uint64_t)v34, v127, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v59 = v126;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_251A3E3E8(0, *((void *)v59 + 2) + 1, 1);
            }
            char v60 = (char *)v136;
            unint64_t v62 = *(void *)(v136 + 16);
            unint64_t v61 = *(void *)(v136 + 24);
            if (v62 >= v61 >> 1)
            {
              sub_251A3E3E8(v61 > 1, v62 + 1, 1);
              char v60 = (char *)v136;
            }
            *((void *)v60 + 2) = v62 + 1;
            uint64_t v126 = v60;
            sub_251D06ECC(v127, (uint64_t)&v60[v47 + v62 * v48], (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v42 = v134;
            goto LABEL_7;
          }
LABEL_6:
          sub_251D06F34((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_7:
          if (v129 == v46)
          {
            uint64_t v68 = v136;
            uint64_t v38 = v110;
            goto LABEL_53;
          }
        }
      }
      uint64_t v68 = MEMORY[0x263F8EE78];
LABEL_53:
      swift_bridgeObjectRelease();
      int64_t v70 = *(void *)(v68 + 16);
      uint64_t v71 = (uint64_t)v116;
      if (v70)
      {
        uint64_t v135 = MEMORY[0x263F8EE78];
        sub_251A3E6EC(0, v70, 0);
        uint64_t v72 = v135;
        uint64_t v73 = *(unsigned __int8 *)(v131 + 80);
        uint64_t v133 = v68;
        uint64_t v74 = v68 + ((v73 + 32) & ~v73);
        uint64_t v75 = *(void *)(v131 + 72);
        do
        {
          sub_251D06E64(v74, v71, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v135 = v72;
          unint64_t v77 = *(void *)(v72 + 16);
          unint64_t v76 = *(void *)(v72 + 24);
          if (v77 >= v76 >> 1)
          {
            sub_251A3E6EC(v76 > 1, v77 + 1, 1);
            uint64_t v72 = v135;
          }
          uint64_t v137 = v134;
          uint64_t v138 = sub_251D06B90(&qword_269B9E270, (void (*)(uint64_t))type metadata accessor for StaticService);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v136);
          sub_251D06E64(v71, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticService);
          *(void *)(v72 + 16) = v77 + 1;
          sub_251A1A444(&v136, v72 + 40 * v77 + 32);
          sub_251D06F34(v71, (uint64_t (*)(void))type metadata accessor for StaticService);
          v74 += v75;
          --v70;
        }
        while (v70);
        swift_release();
        uint64_t v38 = v110;
      }
      else
      {
        swift_release();
        uint64_t v72 = MEMORY[0x263F8EE78];
      }
      *uint64_t v124 = v72;
      uint64_t v79 = (uint64_t (*)())type metadata accessor for StaticAccessory;
      sub_251D06F34((uint64_t)v38, type metadata accessor for StaticAccessory);
      uint64_t v80 = (uint64_t)v115;
      goto LABEL_61;
    }
    switch((char)v128)
    {
      case 1:
        uint64_t v65 = "B92ACEEE-DFF5-4773-A058-C5E64BC487B2";
        goto LABEL_73;
      case 2:
        uint64_t v65 = "563F7D20-6AFC-44CE-986D-63B28F62C9E3";
        goto LABEL_73;
      case 3:
        goto LABEL_74;
      case 4:
        uint64_t v65 = "430C9F25-44E0-4F7E-BE63-1D00B1500545";
        goto LABEL_73;
      case 5:
        uint64_t v65 = "63489665-5E39-4C17-A590-755E1AAC02AE";
        goto LABEL_73;
      case 6:
        uint64_t v65 = "3E68745D-F0E1-4B73-8FBD-0E8978A33403";
        goto LABEL_73;
      case 7:
        uint64_t v65 = "7FADD792-61A4-4340-A849-215882E2F008";
        goto LABEL_73;
      default:
        uint64_t v65 = "0CA6536B-8EAD-4013-AA62-01754F256DD5";
LABEL_73:
        if (((unint64_t)(v65 - 32) | 0x8000000000000000) == 0x8000000251F647A0)
        {
LABEL_74:
          swift_bridgeObjectRelease();
        }
        else
        {
          char v88 = sub_251F36B10();
          uint64_t v41 = swift_bridgeObjectRelease();
          if ((v88 & 1) == 0) {
            goto LABEL_3;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF70);
        uint64_t v89 = v40;
        uint64_t v90 = swift_allocObject();
        *(_OWORD *)(v90 + 16) = xmmword_251F38650;
        sub_251A1A4EC(a1, v90 + 32);
        *uint64_t v124 = v90;
        sub_251D06F34((uint64_t)v38, type metadata accessor for StaticAccessory);
        uint64_t v64 = (uint64_t)v89;
        uint64_t v63 = type metadata accessor for StaticAccessory;
        break;
    }
LABEL_77:
    sub_251D06F34(v64, v63);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v139);
  }
  if (swift_dynamicCast())
  {
    *uint64_t v124 = MEMORY[0x263F8EE78];
    uint64_t v63 = (uint64_t (*)(void))type metadata accessor for StaticActionSet;
    uint64_t v64 = (uint64_t)v15;
    goto LABEL_77;
  }
  uint64_t v66 = (char *)v132;
  if (swift_dynamicCast())
  {
    switch((char)v128)
    {
      case 1:
        uint64_t v67 = "B92ACEEE-DFF5-4773-A058-C5E64BC487B2";
        goto LABEL_88;
      case 2:
        uint64_t v67 = "563F7D20-6AFC-44CE-986D-63B28F62C9E3";
        goto LABEL_88;
      case 3:
        goto LABEL_89;
      case 4:
        uint64_t v67 = "430C9F25-44E0-4F7E-BE63-1D00B1500545";
        goto LABEL_88;
      case 5:
        uint64_t v67 = "63489665-5E39-4C17-A590-755E1AAC02AE";
        goto LABEL_88;
      case 6:
        uint64_t v67 = "3E68745D-F0E1-4B73-8FBD-0E8978A33403";
        goto LABEL_88;
      case 7:
        uint64_t v67 = "7FADD792-61A4-4340-A849-215882E2F008";
        goto LABEL_88;
      default:
        uint64_t v67 = "0CA6536B-8EAD-4013-AA62-01754F256DD5";
LABEL_88:
        if (((unint64_t)(v67 - 32) | 0x8000000000000000) == 0x8000000251F647A0)
        {
LABEL_89:
          swift_bridgeObjectRelease();
LABEL_91:
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF70);
          uint64_t v98 = swift_allocObject();
          *(_OWORD *)(v98 + 16) = xmmword_251F38650;
          sub_251A1A4EC(a1, v98 + 32);
          goto LABEL_93;
        }
        char v97 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if (v97) {
          goto LABEL_91;
        }
        uint64_t v98 = MEMORY[0x263F8EE78];
LABEL_93:
        *uint64_t v124 = v98;
        uint64_t v99 = type metadata accessor for StaticMediaProfile;
        break;
    }
LABEL_110:
    unint64_t v81 = v99;
    uint64_t v80 = (uint64_t)v66;
    goto LABEL_111;
  }
  uint64_t v66 = v126;
  if (swift_dynamicCast())
  {
    switch((char)v128)
    {
      case 1:
        uint64_t v69 = "B92ACEEE-DFF5-4773-A058-C5E64BC487B2";
        goto LABEL_104;
      case 2:
        uint64_t v69 = "563F7D20-6AFC-44CE-986D-63B28F62C9E3";
        goto LABEL_104;
      case 3:
        goto LABEL_105;
      case 4:
        uint64_t v69 = "430C9F25-44E0-4F7E-BE63-1D00B1500545";
        goto LABEL_104;
      case 5:
        uint64_t v69 = "63489665-5E39-4C17-A590-755E1AAC02AE";
        goto LABEL_104;
      case 6:
        uint64_t v69 = "3E68745D-F0E1-4B73-8FBD-0E8978A33403";
        goto LABEL_104;
      case 7:
        uint64_t v69 = "7FADD792-61A4-4340-A849-215882E2F008";
        goto LABEL_104;
      default:
        uint64_t v69 = "0CA6536B-8EAD-4013-AA62-01754F256DD5";
LABEL_104:
        if (((unint64_t)(v69 - 32) | 0x8000000000000000) == 0x8000000251F647A0)
        {
LABEL_105:
          swift_bridgeObjectRelease();
        }
        else
        {
          char v102 = sub_251F36B10();
          swift_bridgeObjectRelease();
          if ((v102 & 1) == 0)
          {
            uint64_t v103 = MEMORY[0x263F8EE78];
LABEL_109:
            *uint64_t v124 = v103;
            uint64_t v99 = type metadata accessor for StaticMediaSystem;
            goto LABEL_110;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF70);
        uint64_t v103 = swift_allocObject();
        *(_OWORD *)(v103 + 16) = xmmword_251F38650;
        sub_251A1A4EC(a1, v103 + 32);
        goto LABEL_109;
    }
  }
  uint64_t v82 = v134;
  if (swift_dynamicCast())
  {
    uint64_t v83 = a1;
    sub_251A1A4EC(a1, (uint64_t)&v136);
    uint64_t v84 = (uint64_t)v120;
    swift_dynamicCast();
    int v85 = *(unsigned __int8 *)(v84 + *(int *)(v82 + 96));
    uint64_t v86 = v119;
    sub_251D06E64(v84, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v85 == 53) {
      LOBYTE(v85) = v86[*(int *)(v82 + 88)];
    }
    sub_251D06F34((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for StaticService);
    LOBYTE(v135) = v85;
    ServiceKind.umbrellaCategory.getter(&v136);
    if (sub_251DB1CC8(v136, v128))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF70);
      uint64_t v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = xmmword_251F38650;
      sub_251A1A4EC(v83, v87 + 32);
    }
    else
    {
      uint64_t v87 = MEMORY[0x263F8EE78];
    }
    *uint64_t v124 = v87;
    uint64_t v79 = type metadata accessor for StaticService;
    sub_251D06F34(v84, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v80 = (uint64_t)v24;
    goto LABEL_61;
  }
  char v91 = v122;
  if (!swift_dynamicCast())
  {
    uint64_t v100 = v115;
    if (swift_dynamicCast())
    {
      *uint64_t v124 = MEMORY[0x263F8EE78];
      uint64_t v101 = type metadata accessor for StaticMatterDevice;
    }
    else
    {
      uint64_t v100 = v113;
      int v108 = swift_dynamicCast();
      *uint64_t v124 = MEMORY[0x263F8EE78];
      if (!v108) {
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v139);
      }
      uint64_t v101 = type metadata accessor for StaticEndpoint;
    }
    uint64_t v63 = (uint64_t (*)(void))v101;
    uint64_t v64 = (uint64_t)v100;
    goto LABEL_77;
  }
  sub_251A1A4EC(a1, (uint64_t)&v136);
  uint64_t v92 = (uint64_t)v118;
  swift_dynamicCast();
  uint64_t v93 = swift_bridgeObjectRetain();
  uint64_t v94 = sub_251EDC188(v93);
  uint64_t v95 = v117;
  sub_251ABD970(v94, (uint64_t)v117);
  swift_bridgeObjectRelease();
  uint64_t v96 = v134;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v95, 1, v134) == 1)
  {
    sub_251A1B064((uint64_t)v95, qword_26B21EE20);
LABEL_117:
    uint64_t v107 = MEMORY[0x263F8EE78];
    goto LABEL_118;
  }
  int v105 = v95[*(int *)(v96 + 96)];
  uint64_t v106 = v111;
  sub_251D06E64((uint64_t)v95, v111, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v105 == 53) {
    LOBYTE(v105) = *(unsigned char *)(v106 + *(int *)(v96 + 88));
  }
  sub_251D06F34(v106, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251D06F34((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for StaticService);
  LOBYTE(v135) = v105;
  ServiceKind.umbrellaCategory.getter(&v136);
  if ((sub_251DB1CC8(v136, v128) & 1) == 0) {
    goto LABEL_117;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF70);
  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = xmmword_251F38650;
  sub_251A1A4EC(a1, v107 + 32);
LABEL_118:
  *uint64_t v124 = v107;
  uint64_t v79 = type metadata accessor for StaticServiceGroup;
  sub_251D06F34(v92, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v80 = (uint64_t)v91;
LABEL_61:
  unint64_t v81 = v79;
LABEL_111:
  sub_251D06F34(v80, (uint64_t (*)(void))v81);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v139);
}

uint64_t StaticRoom.orderedVisibleTileInfos(filter:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA25E0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - v6;
  sub_251A1B128(a1, (uint64_t)&v23 - v6, &qword_269BA25E0);
  uint64_t v8 = type metadata accessor for TilesFilter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
LABEL_2:
    LOBYTE(v24) = 8;
    int v9 = 1;
    int v10 = 0;
LABEL_3:
    uint64_t v11 = StaticRoom.orderedVisibleTileInfos(filterCategory:forDashboard:forStatus:)((unsigned __int8 *)&v24, v9, v10);
  }
  else
  {
    sub_251A1B128((uint64_t)v7, (uint64_t)v5, &qword_269BA25E0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        uint64_t v14 = *(void *)(v13 - 8);
        MEMORY[0x270FA5388](v13);
        uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, unsigned char *, uint64_t))(v14 + 32))(v16, v5, v13);
        LOBYTE(v24) = 8;
        uint64_t v24 = StaticRoom.orderedVisibleTileInfos(filterCategory:forDashboard:forStatus:)((unsigned __int8 *)&v24, 1, 0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269BA25E8);
        sub_251A1E590(&qword_269BA25F0, &qword_269BA25E8);
        uint64_t v11 = sub_251F358D0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
        break;
      case 2u:
        sub_251D06F34((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TilesFilter);
        goto LABEL_2;
      case 3u:
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        uint64_t v18 = *(void *)(v17 - 8);
        MEMORY[0x270FA5388](v17);
        uint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, unsigned char *, uint64_t))(v18 + 32))(v20, v5, v17);
        type metadata accessor for StaticRoom(0);
        uint64_t v21 = swift_bridgeObjectRetain();
        uint64_t v24 = sub_251EDC188(v21);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269BA25F8);
        sub_251A1E590(&qword_269BA2600, &qword_269BA25F8);
        uint64_t v22 = sub_251F358D0();
        swift_bridgeObjectRelease();
        uint64_t v11 = sub_251EECEA4(v22);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        break;
      default:
        LOBYTE(v24) = *v5;
        int v9 = 0;
        int v10 = 1;
        goto LABEL_3;
    }
  }
  sub_251A1B064((uint64_t)v7, &qword_269BA25E0);
  return v11;
}

Swift::Bool __swiftcall StaticRoom.hasContent(filterCategory:forDashboard:)(HomeDataModel::UmbrellaCategory_optional filterCategory, Swift::Bool forDashboard)
{
  unsigned __int8 v4 = *(unsigned char *)filterCategory.value;
  uint64_t v2 = *(void *)(StaticRoom.orderedVisibleTileInfos(filterCategory:forDashboard:forStatus:)(&v4, forDashboard, 0) + 16);
  swift_bridgeObjectRelease();
  return v2 != 0;
}

uint64_t StaticRoom.room.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251D02F28, 0, 0);
}

uint64_t sub_251D02F28()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D02FC0, v2, v1);
}

uint64_t sub_251D02FC0()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251D03058, 0, 0);
}

uint64_t sub_251D03058()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D030E4, v2, v1);
}

uint64_t sub_251D030E4()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251D03158, 0, 0);
}

uint64_t sub_251D03158()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D031EC, v2, v1);
}

uint64_t sub_251D031EC()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  id v3 = objc_msgSend(v2, sel_roomFor_, v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

uint64_t sub_251D03278@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  type metadata accessor for StaticMediaSystem();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_251EDD4F8(v4);
  v7[2] = a1;
  uint64_t result = sub_251B1E64C((uint64_t)sub_251D0F6E0, (uint64_t)v7, v5);
  *a2 = result;
  return result;
}

uint64_t StaticRoom.copyReplacing(id:name:isDefaultRoom:staticZones:homeId:staticAccessoriesDictionary:staticActionSetsDictionary:staticCameraProfilesDictionary:staticMediaSystemsDictionary:staticMediaProfilesDictionary:staticServiceGroupsDictionary:staticServicesDictionary:actionSetsSortOrder:servicesSortOrder:roomServicesSortOrderGroupedByCategory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, unsigned char *a6@<X5>, unsigned char *a7@<X6>, uint64_t (*a8)(unsigned char *, uint64_t, uint64_t)@<X7>, uint64_t a9@<X8>, unsigned char *a10, unsigned char *a11, unsigned char *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v100 = a8;
  uint64_t v99 = a7;
  int v108 = a6;
  uint64_t v102 = a5;
  int v97 = a4;
  uint64_t v119 = a3;
  uint64_t v120 = a2;
  uint64_t v111 = a1;
  uint64_t v116 = a9;
  uint64_t v17 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  unint64_t v118 = &v96[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v117 = &v96[-v21];
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  int64_t v115 = &v96[-v23];
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v113 = &v96[-v25];
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v112 = &v96[-v27];
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v103 = &v96[-v29];
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v101 = &v96[-v31];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v107 = &v96[-v33];
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v106 = &v96[-v35];
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v98 = &v96[-v37];
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  int v105 = &v96[-v39];
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v110 = &v96[-v41];
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v109 = &v96[-v43];
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  unint64_t v46 = &v96[-v45];
  MEMORY[0x270FA5388](v44);
  uint64_t v48 = &v96[-v47];
  uint64_t v49 = sub_251F34DA0();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = *(void *)(v50 + 64);
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v53 = *(void *)(*(void *)(v52 - 8) + 64);
  MEMORY[0x270FA5388](v52 - 8);
  sub_251A1B128(v111, (uint64_t)&v96[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_26B21FF90);
  sub_251D06E64(v122, (uint64_t)v48, type metadata accessor for StaticRoom);
  uint64_t v104 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v50 + 48);
  int v54 = v104(&v96[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, v49);
  uint64_t v121 = v50;
  uint64_t v114 = &v96[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v54 == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v50 + 16))(&v96[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)], v48, v49);
    sub_251D06F34((uint64_t)v48, type metadata accessor for StaticRoom);
    sub_251A1B064((uint64_t)&v96[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_26B21FF90);
  }
  else
  {
    sub_251D06F34((uint64_t)v48, type metadata accessor for StaticRoom);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v50 + 32))(&v96[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)], &v96[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)], v49);
  }
  uint64_t v55 = v49;
  uint64_t v56 = v122;
  uint64_t v57 = v102;
  int v58 = v97;
  sub_251D06E64(v122, (uint64_t)v46, type metadata accessor for StaticRoom);
  if (v119)
  {
    uint64_t v111 = v119;
  }
  else
  {
    uint64_t v59 = (uint64_t *)&v46[v17[5]];
    uint64_t v60 = v59[1];
    uint64_t v120 = *v59;
    uint64_t v111 = v60;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34((uint64_t)v46, type metadata accessor for StaticRoom);
  uint64_t v61 = (uint64_t)v109;
  sub_251D06E64(v56, (uint64_t)v109, type metadata accessor for StaticRoom);
  uint64_t v62 = v55;
  if (v58 == 2) {
    int v63 = *(unsigned __int8 *)(v61 + v17[6]);
  }
  else {
    int v63 = v58 & 1;
  }
  LODWORD(v102) = v63;
  uint64_t v64 = (uint64_t)v108;
  sub_251D06F34(v61, type metadata accessor for StaticRoom);
  uint64_t v65 = (uint64_t)v110;
  sub_251D06E64(v56, (uint64_t)v110, type metadata accessor for StaticRoom);
  uint64_t v119 = v57;
  if (!v57)
  {
    uint64_t v119 = *(void *)(v65 + v17[7]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  uint64_t v66 = sub_251D06F34(v65, type metadata accessor for StaticRoom);
  uint64_t v110 = v96;
  uint64_t v67 = MEMORY[0x270FA5388](v66);
  uint64_t v68 = &v96[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v109 = v96;
  MEMORY[0x270FA5388](v67);
  uint64_t v69 = &v96[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128(v64, (uint64_t)v69, &qword_26B21FF90);
  int64_t v70 = v105;
  sub_251D06E64(v56, (uint64_t)v105, type metadata accessor for StaticRoom);
  uint64_t v71 = v62;
  if (v104(v69, 1, v62) == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v121 + 16))(v68, &v70[v17[8]], v62);
    sub_251D06F34((uint64_t)v70, type metadata accessor for StaticRoom);
    sub_251A1B064((uint64_t)v69, &qword_26B21FF90);
  }
  else
  {
    sub_251D06F34((uint64_t)v70, type metadata accessor for StaticRoom);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v121 + 32))(v68, v69, v62);
  }
  uint64_t v72 = v100;
  uint64_t v73 = v99;
  uint64_t v74 = v98;
  uint64_t v75 = (uint64_t)v101;
  uint64_t v76 = (uint64_t)v103;
  sub_251D06E64(v56, (uint64_t)v98, type metadata accessor for StaticRoom);
  if (v73)
  {
    int v105 = v73;
  }
  else
  {
    int v105 = *(unsigned char **)&v74[v17[9]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34((uint64_t)v74, type metadata accessor for StaticRoom);
  unint64_t v77 = v106;
  sub_251D06E64(v56, (uint64_t)v106, type metadata accessor for StaticRoom);
  int v108 = v68;
  if (v72)
  {
    uint64_t v104 = v72;
  }
  else
  {
    uint64_t v104 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))&v77[v17[10]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34((uint64_t)v77, type metadata accessor for StaticRoom);
  char v78 = v107;
  sub_251D06E64(v56, (uint64_t)v107, type metadata accessor for StaticRoom);
  if (a10)
  {
    uint64_t v106 = a10;
  }
  else
  {
    uint64_t v106 = *(unsigned char **)&v78[v17[11]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34((uint64_t)v78, type metadata accessor for StaticRoom);
  sub_251D06E64(v56, v75, type metadata accessor for StaticRoom);
  if (a11)
  {
    uint64_t v107 = a11;
  }
  else
  {
    uint64_t v107 = *(unsigned char **)(v75 + v17[12]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34(v75, type metadata accessor for StaticRoom);
  sub_251D06E64(v56, v76, type metadata accessor for StaticRoom);
  if (a12)
  {
    uint64_t v103 = a12;
  }
  else
  {
    uint64_t v103 = *(unsigned char **)(v76 + v17[13]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34(v76, type metadata accessor for StaticRoom);
  uint64_t v79 = v112;
  sub_251D06E64(v56, (uint64_t)v112, type metadata accessor for StaticRoom);
  if (a13)
  {
    uint64_t v80 = a13;
  }
  else
  {
    uint64_t v80 = *(void *)&v79[v17[14]];
    swift_bridgeObjectRetain();
  }
  uint64_t v81 = (uint64_t)v113;
  swift_bridgeObjectRetain();
  sub_251D06F34((uint64_t)v79, type metadata accessor for StaticRoom);
  sub_251D06E64(v56, v81, type metadata accessor for StaticRoom);
  if (a14)
  {
    uint64_t v82 = a14;
  }
  else
  {
    uint64_t v82 = *(void *)(v81 + v17[15]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34(v81, type metadata accessor for StaticRoom);
  uint64_t v83 = v115;
  sub_251D06E64(v56, (uint64_t)v115, type metadata accessor for StaticRoom);
  uint64_t v84 = v71;
  if (a15)
  {
    uint64_t v85 = a15;
  }
  else
  {
    uint64_t v85 = *(void *)&v83[v17[16]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34((uint64_t)v83, type metadata accessor for StaticRoom);
  uint64_t v86 = v117;
  sub_251D06E64(v122, (uint64_t)v117, type metadata accessor for StaticRoom);
  if (a16)
  {
    uint64_t v87 = a16;
  }
  else
  {
    uint64_t v87 = *(void *)&v86[v17[17]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D06F34((uint64_t)v86, type metadata accessor for StaticRoom);
  char v88 = v118;
  sub_251D06E64(v122, (uint64_t)v118, type metadata accessor for StaticRoom);
  if (a17)
  {
    uint64_t v89 = a17;
  }
  else
  {
    uint64_t v89 = *(void *)&v88[v17[18]];
    swift_bridgeObjectRetain();
  }
  uint64_t v90 = v121;
  swift_bridgeObjectRetain();
  sub_251D06F34((uint64_t)v88, type metadata accessor for StaticRoom);
  char v91 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v90 + 32);
  uint64_t v92 = v116;
  v91(v116, v114, v84);
  uint64_t v93 = (void *)(v92 + v17[5]);
  uint64_t v94 = v111;
  *uint64_t v93 = v120;
  v93[1] = v94;
  *(unsigned char *)(v92 + v17[6]) = v102;
  *(void *)(v92 + v17[7]) = v119;
  uint64_t result = ((uint64_t (*)(uint64_t, unsigned char *, uint64_t))v91)(v92 + v17[8], v108, v84);
  *(void *)(v92 + v17[9]) = v105;
  *(void *)(v92 + v17[10]) = v104;
  *(void *)(v92 + v17[11]) = v106;
  *(void *)(v92 + v17[12]) = v107;
  *(void *)(v92 + v17[13]) = v103;
  *(void *)(v92 + v17[14]) = v80;
  *(void *)(v92 + v17[15]) = v82;
  *(void *)(v92 + v17[16]) = v85;
  *(void *)(v92 + v17[17]) = v87;
  *(void *)(v92 + v17[18]) = v89;
  return result;
}

uint64_t sub_251D03F04()
{
  uint64_t v0 = (int *)type metadata accessor for StaticRoom(0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_26B21FF58);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_26B21FF58);
  if (qword_26B21FD90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F34DA0();
  uint64_t v18 = __swift_project_value_buffer(v2, (uint64_t)qword_26B21FD78);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D90();
  uint64_t v6 = MEMORY[0x263F8EE78];
  unint64_t v17 = sub_2519F9A68(MEMORY[0x263F8EE78]);
  unint64_t v16 = sub_2519F9800(v6);
  unint64_t v15 = sub_2519F9AA4(v6);
  unint64_t v14 = sub_2519F9AE0(v6);
  unint64_t v7 = sub_2519F9B1C(v6);
  unint64_t v8 = sub_2519F9B58(v6);
  unint64_t v9 = sub_2519F9B94(v6);
  unint64_t v10 = sub_2519F9A5C(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v18, v2);
  uint64_t v11 = (void *)(v1 + v0[5]);
  void *v11 = 0x6F52207974706D45;
  v11[1] = 0xEA00000000006D6FLL;
  *(unsigned char *)(v1 + v0[6]) = 0;
  *(void *)(v1 + v0[7]) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(v1 + v0[8], v5, v2);
  *(void *)(v1 + v0[9]) = v17;
  *(void *)(v1 + v0[10]) = v16;
  *(void *)(v1 + v0[11]) = v15;
  *(void *)(v1 + v0[12]) = v14;
  *(void *)(v1 + v0[13]) = v7;
  *(void *)(v1 + v0[14]) = v8;
  *(void *)(v1 + v0[15]) = v9;
  *(void *)(v1 + v0[16]) = v6;
  *(void *)(v1 + v0[17]) = v6;
  *(void *)(v1 + v0[18]) = v10;
  return result;
}

uint64_t static StaticRoom.empty.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D04428(&qword_26B2200F8, (uint64_t)qword_26B21FF58, a1);
}

uint64_t sub_251D04194()
{
  uint64_t v0 = (int *)type metadata accessor for StaticRoom(0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_269BA2558);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_269BA2558);
  if (qword_269B9C420 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F34DA0();
  uint64_t v18 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA2570);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D90();
  uint64_t v6 = MEMORY[0x263F8EE78];
  unint64_t v17 = sub_2519F9A68(MEMORY[0x263F8EE78]);
  unint64_t v16 = sub_2519F9800(v6);
  unint64_t v15 = sub_2519F9AA4(v6);
  unint64_t v14 = sub_2519F9AE0(v6);
  unint64_t v7 = sub_2519F9B1C(v6);
  unint64_t v8 = sub_2519F9B58(v6);
  unint64_t v9 = sub_2519F9B94(v6);
  unint64_t v10 = sub_2519F9A5C(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v18, v2);
  uint64_t v11 = (void *)(v1 + v0[5]);
  void *v11 = 0x5220656C706D6153;
  v11[1] = 0xEB000000006D6F6FLL;
  *(unsigned char *)(v1 + v0[6]) = 0;
  *(void *)(v1 + v0[7]) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(v1 + v0[8], v5, v2);
  *(void *)(v1 + v0[9]) = v17;
  *(void *)(v1 + v0[10]) = v16;
  *(void *)(v1 + v0[11]) = v15;
  *(void *)(v1 + v0[12]) = v14;
  *(void *)(v1 + v0[13]) = v7;
  *(void *)(v1 + v0[14]) = v8;
  *(void *)(v1 + v0[15]) = v9;
  *(void *)(v1 + v0[16]) = v6;
  *(void *)(v1 + v0[17]) = v6;
  *(void *)(v1 + v0[18]) = v10;
  return result;
}

uint64_t static StaticRoom.sample.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D04428(&qword_269B9C418, (uint64_t)qword_269BA2558, a1);
}

uint64_t sub_251D04428@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for StaticRoom(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return sub_251D06E64(v6, a3, type metadata accessor for StaticRoom);
}

uint64_t sub_251D04490(uint64_t a1)
{
  return sub_251D044EC(a1, qword_26B21FD78);
}

uint64_t static StaticRoom.emptyRoomId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D04634(&qword_26B21FD90, (uint64_t)qword_26B21FD78, a1);
}

uint64_t sub_251D044D0(uint64_t a1)
{
  return sub_251D044EC(a1, qword_269BA2570);
}

uint64_t sub_251D044EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_251F34DA0();
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  uint64_t v8 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v4, v7, v3);
  }
  __break(1u);
  return result;
}

uint64_t static StaticRoom.sampleRoomId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D04634(&qword_269B9C420, (uint64_t)qword_269BA2570, a1);
}

uint64_t sub_251D04634@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t StaticRoom.description.getter()
{
  return 0x27206D6F6F52;
}

uint64_t sub_251D04848(uint64_t a1)
{
  return sub_251D04A8C(a1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251D05128);
}

uint64_t sub_251D048A8(uint64_t isStackAllocationSafe, char a2, uint64_t (*a3)(char *, unint64_t, uint64_t, void))
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = a3((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2 & 1);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    uint64_t v10 = a3((char *)v11, v8, v6, a2 & 1);
    swift_release();
    MEMORY[0x2533AC760](v11, -1, -1);
  }
  return v10;
}

uint64_t sub_251D04A2C(uint64_t a1)
{
  return sub_251D04A8C(a1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251D062EC);
}

uint64_t sub_251D04A8C(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    size_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_251D04C04(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v26 = 0;
  uint64_t v27 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v28 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_22:
    sub_251D06E64(*(void *)(a3 + 48) + *(void *)(v7 + 72) * v18, (uint64_t)v10, type metadata accessor for StaticAccessory);
    if (a4)
    {
      char v22 = v10[*(int *)(v6 + 68)];
      uint64_t result = sub_251D06F34((uint64_t)v10, type metadata accessor for StaticAccessory);
      if (v22) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t result = sub_251D06F34((uint64_t)v10, type metadata accessor for StaticAccessory);
LABEL_5:
      *(unint64_t *)((char *)v25 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v26++, 1)) {
        goto LABEL_28;
      }
    }
  }
  int64_t v19 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v19 >= v28) {
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v19);
  ++v11;
  if (v20) {
    goto LABEL_21;
  }
  int64_t v11 = v19 + 1;
  if (v19 + 1 >= v28) {
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v11);
  if (v20) {
    goto LABEL_21;
  }
  int64_t v11 = v19 + 2;
  if (v19 + 2 >= v28) {
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v11);
  if (v20)
  {
LABEL_21:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_22;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v28)
  {
LABEL_25:
    swift_retain();
    return sub_251F1BAE0(v25, v24, v26, a3);
  }
  unint64_t v20 = *(void *)(v27 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v28) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v27 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251D04EB0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251D06E64(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, type metadata accessor for StaticAccessory);
    int v17 = *(unsigned __int16 *)&v8[*(int *)(v4 + 88)];
    uint64_t result = sub_251D06F34((uint64_t)v8, type metadata accessor for StaticAccessory);
    if ((~v17 & 0xFEFC) == 0)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1BAE0(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251D05128(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251D06E64(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, type metadata accessor for StaticAccessory);
    char v17 = v8[*(int *)(v4 + 56)];
    uint64_t result = sub_251D06F34((uint64_t)v8, type metadata accessor for StaticAccessory);
    if ((v17 & 1) == 0)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1BAE0(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251D05398(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v41 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v36 = 0;
  uint64_t v37 = v5;
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v38 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v39 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v16 = (uint64_t)v41;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_18:
    uint64_t v22 = *(void *)(a3 + 48);
    uint64_t v23 = *(void *)(v5 + 72);
    unint64_t v40 = v18;
    sub_251D06E64(v22 + v23 * v18, (uint64_t)v10, type metadata accessor for StaticAccessory);
    char v24 = v10[*(int *)(v4 + 72)];
    sub_251D06E64((uint64_t)v10, v16, type metadata accessor for StaticAccessory);
    if (v24)
    {
      sub_251D06F34(v16, type metadata accessor for StaticAccessory);
      uint64_t result = sub_251D06F34((uint64_t)v10, type metadata accessor for StaticAccessory);
    }
    else
    {
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = v42;
      uint64_t v27 = sub_251B83C30(v25);
      uint64_t v42 = v26;
      uint64_t v28 = sub_251EE10DC(v27);
      swift_bridgeObjectRelease();
      uint64_t v29 = a3;
      unint64_t v30 = *(void *)(v28 + 16);
      swift_bridgeObjectRelease();
      sub_251D06F34(v16, type metadata accessor for StaticAccessory);
      uint64_t result = sub_251D06F34((uint64_t)v10, type metadata accessor for StaticAccessory);
      BOOL v31 = v30 >= 2;
      a3 = v29;
      uint64_t v5 = v37;
      if (v31)
      {
        *(unint64_t *)((char *)v35 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
        BOOL v19 = __OFADD__(v36++, 1);
        if (v19) {
          goto LABEL_31;
        }
      }
    }
  }
  BOOL v19 = __OFADD__(v11++, 1);
  if (v19)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v39) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v38 + 8 * v11);
  if (v20)
  {
LABEL_17:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_18;
  }
  int64_t v21 = v11 + 1;
  if (v11 + 1 >= v39) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v38 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v11 + 2;
  if (v11 + 2 >= v39) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v38 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v11 + 3;
  if (v11 + 3 >= v39)
  {
LABEL_28:
    uint64_t v32 = v34;
    uint64_t v33 = v36;
    swift_retain();
    return sub_251F1BAE0(v35, v32, v33, a3);
  }
  unint64_t v20 = *(void *)(v38 + 8 * v21);
  if (v20)
  {
LABEL_16:
    int64_t v11 = v21;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v39) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v38 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251D056F8(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v26 = 0;
  uint64_t v27 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v28 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_22:
    sub_251D06E64(*(void *)(a3 + 48) + *(void *)(v7 + 72) * v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (a4)
    {
      char v22 = v10[*(int *)(v6 + 80)];
      uint64_t result = sub_251D06F34((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v22) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t result = sub_251D06F34((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_5:
      *(unint64_t *)((char *)v25 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v26++, 1)) {
        goto LABEL_28;
      }
    }
  }
  int64_t v19 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v19 >= v28) {
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v19);
  ++v11;
  if (v20) {
    goto LABEL_21;
  }
  int64_t v11 = v19 + 1;
  if (v19 + 1 >= v28) {
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v11);
  if (v20) {
    goto LABEL_21;
  }
  int64_t v11 = v19 + 2;
  if (v19 + 2 >= v28) {
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v11);
  if (v20)
  {
LABEL_21:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_22;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v28)
  {
LABEL_25:
    swift_retain();
    return sub_251F1BD94(v25, v24, v26, a3);
  }
  unint64_t v20 = *(void *)(v27 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v28) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v27 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251D059A4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v53 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v63 = (uint64_t)&v50 - v8;
  uint64_t result = MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v50 - v10;
  uint64_t v52 = 0;
  int64_t v12 = 0;
  uint64_t v61 = a3;
  uint64_t v15 = *(void *)(a3 + 56);
  uint64_t v14 = a3 + 56;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 24);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v54 = v14;
  int64_t v55 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v59 = "00-8000-0026BB765291";
  unint64_t v56 = 0x8000000251F65130;
  uint64_t v57 = result;
  uint64_t v64 = v11;
  while (v18)
  {
    uint64_t v65 = (v18 - 1) & v18;
    int64_t v66 = v12;
    unint64_t v28 = __clz(__rbit64(v18)) | (v12 << 6);
LABEL_18:
    uint64_t v33 = *(void *)(v61 + 48);
    uint64_t v34 = *(void *)(v60 + 72);
    unint64_t v58 = v28;
    sub_251D06E64(v33 + v34 * v28, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v35 = *(int *)(v4 + 88);
    char v67 = v11[v35];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v36 == v56)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v37 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_25;
      }
    }
    uint64_t v62 = v35;
    uint64_t v38 = (uint64_t)&v11[*(int *)(v4 + 100)];
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v40 = *(void *)(*(void *)(v39 - 8) + 64);
    MEMORY[0x270FA5388](v39 - 8);
    unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_251A1B128(v38, (uint64_t)&v50 - v41, &qword_26B21FF90);
    uint64_t v42 = sub_251F34DA0();
    uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48);
    int v44 = v43((char *)&v50 - v41, 1, v42);
    sub_251A1B064((uint64_t)&v50 - v41, &qword_26B21FF90);
    uint64_t v45 = v63;
    int64_t v11 = v64;
    sub_251D06E64((uint64_t)v64, v63, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v27 = v44 == 1;
    uint64_t v4 = v57;
    if (v27)
    {
      uint64_t v46 = v63;
      uint64_t v47 = MEMORY[0x270FA5388](v63 + *(int *)(v57 + 132));
      sub_251A1B128(v47, (uint64_t)&v50 - v41, &qword_26B21FF90);
      sub_251D06F34(v46, (uint64_t (*)(void))type metadata accessor for StaticService);
      LODWORD(v46) = v43((char *)&v50 - v41, 1, v42);
      sub_251A1B064((uint64_t)&v50 - v41, &qword_26B21FF90);
      int64_t v11 = v64;
      uint64_t v35 = v62;
      if (v46 != 1) {
        goto LABEL_29;
      }
LABEL_25:
      if (qword_269B9C488 != -1) {
        swift_once();
      }
      char v48 = sub_251DB3C0C(v11[v35], qword_269BF31F0);
      uint64_t v45 = v53;
      sub_251D06E64((uint64_t)v11, v53, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((v48 & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t v19 = v53;
      uint64_t v20 = v53 + *(int *)(v4 + 100);
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v21 - 8);
      uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1B128(v20, (uint64_t)v23, &qword_26B21FF90);
      uint64_t v24 = v19;
      int64_t v11 = v64;
      sub_251D06F34(v24, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v25 = sub_251F34DA0();
      int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v23, 1, v25);
      sub_251A1B064((uint64_t)v23, &qword_26B21FF90);
      uint64_t result = sub_251D06F34((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      BOOL v27 = v26 == 1;
      uint64_t v4 = v57;
      unint64_t v18 = v65;
      int64_t v12 = v66;
      if (v27)
      {
        *(unint64_t *)((char *)v51 + ((v58 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v58;
        BOOL v29 = __OFADD__(v52++, 1);
        if (v29) {
          goto LABEL_40;
        }
      }
    }
    else
    {
LABEL_28:
      sub_251D06F34(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_29:
      uint64_t result = sub_251D06F34((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      unint64_t v18 = v65;
      int64_t v12 = v66;
    }
  }
  BOOL v29 = __OFADD__(v12, 1);
  int64_t v30 = v12 + 1;
  if (v29)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v30 >= v55) {
    goto LABEL_37;
  }
  unint64_t v31 = *(void *)(v54 + 8 * v30);
  if (v31)
  {
LABEL_17:
    uint64_t v65 = (v31 - 1) & v31;
    int64_t v66 = v30;
    unint64_t v28 = __clz(__rbit64(v31)) + (v30 << 6);
    goto LABEL_18;
  }
  int64_t v32 = v30 + 1;
  if (v30 + 1 >= v55) {
    goto LABEL_37;
  }
  unint64_t v31 = *(void *)(v54 + 8 * v32);
  if (v31) {
    goto LABEL_16;
  }
  int64_t v32 = v30 + 2;
  if (v30 + 2 >= v55) {
    goto LABEL_37;
  }
  unint64_t v31 = *(void *)(v54 + 8 * v32);
  if (v31) {
    goto LABEL_16;
  }
  int64_t v32 = v30 + 3;
  if (v30 + 3 >= v55)
  {
LABEL_37:
    uint64_t v49 = v61;
    swift_retain();
    return sub_251F1BD94(v51, v50, v52, v49);
  }
  unint64_t v31 = *(void *)(v54 + 8 * v32);
  if (v31)
  {
LABEL_16:
    int64_t v30 = v32;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v55) {
      goto LABEL_37;
    }
    unint64_t v31 = *(void *)(v54 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_17;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251D06018(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a3 + 56);
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    unint64_t v14 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v15 = v14 | (v9 << 6);
LABEL_21:
    sub_251D06E64(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    unsigned int v19 = *(unsigned __int16 *)&v8[*(int *)(v4 + 88)];
    if ((~v19 & 0xFEFC) == 0) {
      goto LABEL_28;
    }
    if (v19 >> 14 == 1)
    {
      uint64_t result = sub_251D06F34((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      if ((v19 & 0x100) != 0)
      {
LABEL_29:
        *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        if (__OFADD__(v24++, 1))
        {
          __break(1u);
LABEL_32:
          swift_retain();
          return sub_251F1CFC0(v23, v22, v24, a3);
        }
      }
    }
    else
    {
      if (v19 >> 14 != 2 || v19 == 32769)
      {
LABEL_28:
        uint64_t result = sub_251D06F34((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        goto LABEL_29;
      }
      uint64_t result = sub_251D06F34((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    }
  }
  int64_t v16 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v16 >= v25) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v10 + 8 * v16);
  ++v9;
  if (v17) {
    goto LABEL_20;
  }
  int64_t v9 = v16 + 1;
  if (v16 + 1 >= v25) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v10 + 8 * v9);
  if (v17) {
    goto LABEL_20;
  }
  int64_t v9 = v16 + 2;
  if (v16 + 2 >= v25) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v10 + 8 * v9);
  if (v17)
  {
LABEL_20:
    unint64_t v13 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
    goto LABEL_21;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v25) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v10 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v25) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v10 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251D062EC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251D06E64(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    char v17 = v8[*(int *)(v4 + 52)];
    uint64_t result = sub_251D06F34((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    if ((v17 & 1) == 0)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1CFC0(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251D0655C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_251A1A444(&v12, v10 + 40 * a1 + 32);
}

uint64_t _s13HomeDataModel8RoomTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RoomType(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E248);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_251D06E64(a1, (uint64_t)v14, type metadata accessor for RoomType);
  sub_251D06E64(a2, v15, type metadata accessor for RoomType);
  unint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  switch(v16((uint64_t)v14, 4, v4))
  {
    case 1u:
      if (v16(v15, 4, v4) != 1) {
        goto LABEL_11;
      }
      goto LABEL_5;
    case 2u:
      if (v16(v15, 4, v4) != 2) {
        goto LABEL_11;
      }
      goto LABEL_5;
    case 3u:
      if (v16(v15, 4, v4) != 3) {
        goto LABEL_11;
      }
      goto LABEL_5;
    case 4u:
      if (v16(v15, 4, v4) != 4) {
        goto LABEL_11;
      }
LABEL_5:
      sub_251D06F34((uint64_t)v14, type metadata accessor for RoomType);
      char v17 = 1;
      break;
    default:
      sub_251D06E64((uint64_t)v14, (uint64_t)v10, type metadata accessor for RoomType);
      if (v16(v15, 4, v4))
      {
        sub_251D06F34((uint64_t)v10, type metadata accessor for StaticRoom);
LABEL_11:
        sub_251A1B064((uint64_t)v14, &qword_269B9E248);
        char v17 = 0;
      }
      else
      {
        sub_251D06ECC(v15, (uint64_t)v7, type metadata accessor for StaticRoom);
        char v17 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v7);
        sub_251D06F34((uint64_t)v7, type metadata accessor for StaticRoom);
        sub_251D06F34((uint64_t)v10, type metadata accessor for StaticRoom);
        sub_251D06F34((uint64_t)v14, type metadata accessor for RoomType);
      }
      break;
  }
  return v17 & 1;
}

uint64_t _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_251F36B10() & 1) == 0 || *(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6])) {
    return 0;
  }
  uint64_t v11 = v4[7];
  uint64_t v12 = *(void *)(a2 + v11);
  if (*(void *)(a1 + v11))
  {
    if (!v12) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    char v14 = sub_251B09F88(v13, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  else if (v12)
  {
    return 0;
  }
  if ((sub_251F34D70() & 1) == 0
    || (sub_251AF9FA8(*(void *)(a1 + v4[9]), *(void *)(a2 + v4[9])) & 1) == 0
    || (sub_251AFECF0(*(void *)(a1 + v4[10]), *(void *)(a2 + v4[10])) & 1) == 0
    || (sub_251AFF55C(*(void *)(a1 + v4[11]), *(void *)(a2 + v4[11])) & 1) == 0
    || (sub_251AFFB5C(*(void *)(a1 + v4[12]), *(void *)(a2 + v4[12])) & 1) == 0
    || (sub_251B0015C(*(void *)(a1 + v4[13]), *(void *)(a2 + v4[13])) & 1) == 0
    || (sub_251AFA5A8(*(void *)(a1 + v4[14]), *(void *)(a2 + v4[14])) & 1) == 0
    || (sub_251AF99A8(*(void *)(a1 + v4[15]), *(void *)(a2 + v4[15])) & 1) == 0
    || (sub_251AB6424(*(void *)(a1 + v4[16]), *(void *)(a2 + v4[16])) & 1) == 0
    || (sub_251AB6424(*(void *)(a1 + v4[17]), *(void *)(a2 + v4[17])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v15 = v4[18];
  uint64_t v16 = *(void *)(a1 + v15);
  uint64_t v17 = *(void *)(a2 + v15);
  return sub_251B042A4(v16, v17);
}

unint64_t sub_251D06B3C()
{
  unint64_t result = qword_269BA2590;
  if (!qword_269BA2590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2590);
  }
  return result;
}

uint64_t sub_251D06B90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251D06BD8()
{
  unint64_t result = qword_269BA25B0;
  if (!qword_269BA25B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA25A8);
    sub_251D06C80();
    sub_251AB8C90(&qword_269B9D7E8, &qword_26B21E348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA25B0);
  }
  return result;
}

unint64_t sub_251D06C80()
{
  unint64_t result = qword_269BA25B8;
  if (!qword_269BA25B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA25B8);
  }
  return result;
}

uint64_t sub_251D06CD4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA2598);
    sub_251D06B90(a2, (void (*)(uint64_t))type metadata accessor for StaticZone);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251D06D68()
{
  unint64_t result = qword_269BA25D0;
  if (!qword_269BA25D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA25A8);
    sub_251D06E10();
    sub_251AB8C90(&qword_269B9D7F8, &qword_269B9CC80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA25D0);
  }
  return result;
}

unint64_t sub_251D06E10()
{
  unint64_t result = qword_269BA25D8;
  if (!qword_269BA25D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA25D8);
  }
  return result;
}

uint64_t sub_251D06E64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D06ECC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D06F34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D06F94(uint64_t a1)
{
  return sub_251D00CDC(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

unint64_t sub_251D06FB8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21EC70);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for StaticZone();
  uint64_t v33 = *(void *)(v41 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v41);
  uint64_t v40 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v32 = (uint64_t)v30 - v10;
  if (a1 >> 62) {
    goto LABEL_42;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v11)
  {
    while (1)
    {
      uint64_t v12 = 0;
      v30[1] = v3;
      unint64_t v31 = a1 + 32;
      uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      unint64_t v39 = a1 & 0xC000000000000001;
      char v37 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
      unint64_t v13 = MEMORY[0x263F8EE78];
      uint64_t v35 = v7;
      unint64_t v36 = a1;
      uint64_t v34 = v11;
      while (1)
      {
        if (v39) {
          id v14 = (id)MEMORY[0x2533AB3A0](v12, a1);
        }
        else {
          id v14 = *(id *)(v31 + 8 * v12);
        }
        uint64_t v15 = v14;
        if (__OFADD__(v12++, 1)) {
          goto LABEL_40;
        }
        id v17 = objc_msgSend(v14, sel_rooms);
        sub_251A1A568(0, &qword_26B21EB28);
        unint64_t v18 = sub_251F35AC0();

        if (v18 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v3 = sub_251F366C0();
          if (!v3)
          {
LABEL_29:
            swift_bridgeObjectRelease_n();
            uint64_t v22 = 1;
            goto LABEL_30;
          }
        }
        else
        {
          uint64_t v3 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v3) {
            goto LABEL_29;
          }
        }
        unint64_t v42 = v13;
        id v19 = (v18 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](0, v18) : *(id *)(v18 + 32);
        uint64_t v7 = (uint64_t)v19;
        char v20 = sub_251F36120();

        if ((v20 & 1) == 0) {
          break;
        }
LABEL_14:
        swift_bridgeObjectRelease_n();
        id v21 = v15;
        uint64_t v7 = v35;
        sub_251AB8770(v21, v35);
        uint64_t v22 = 0;
        a1 = v36;
LABEL_27:
        uint64_t v11 = v34;
        unint64_t v13 = v42;
LABEL_30:
        uint64_t v3 = v41;
        (*v38)(v7, v22, 1, v41);

        if ((*v37)(v7, 1, v3) == 1)
        {
          sub_251A1B064(v7, (uint64_t *)&unk_26B21EC70);
          if (v12 == v11) {
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t v26 = v32;
          sub_251D06ECC(v7, v32, (uint64_t (*)(void))type metadata accessor for StaticZone);
          sub_251D06ECC(v26, v40, (uint64_t (*)(void))type metadata accessor for StaticZone);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v13 = sub_251F0F52C(0, *(void *)(v13 + 16) + 1, 1, v13);
          }
          unint64_t v28 = *(void *)(v13 + 16);
          unint64_t v27 = *(void *)(v13 + 24);
          uint64_t v3 = v28 + 1;
          if (v28 >= v27 >> 1) {
            unint64_t v13 = sub_251F0F52C(v27 > 1, v28 + 1, 1, v13);
          }
          *(void *)(v13 + 16) = v3;
          sub_251D06ECC(v40, v13+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v28, (uint64_t (*)(void))type metadata accessor for StaticZone);
          if (v12 == v11)
          {
LABEL_38:
            swift_bridgeObjectRelease();
            return v13;
          }
        }
      }
      if (v3 == 1) {
        break;
      }
      if ((v18 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = 1;
        while (1)
        {
          MEMORY[0x2533AB3A0](v7, v18);
          a1 = v7 + 1;
          if (__OFADD__(v7, 1)) {
            break;
          }
          char v23 = sub_251F36120();
          swift_unknownObjectRelease();
          if (v23) {
            goto LABEL_14;
          }
          ++v7;
          if (a1 == v3) {
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      uint64_t v24 = 5;
      while (1)
      {
        a1 = v24 - 3;
        if (__OFADD__(v24 - 4, 1)) {
          break;
        }
        uint64_t v7 = (uint64_t)*(id *)(v18 + 8 * v24);
        char v25 = sub_251F36120();

        if (v25) {
          goto LABEL_14;
        }
        ++v24;
        if (a1 == v3) {
          goto LABEL_26;
        }
      }
LABEL_41:
      __break(1u);
LABEL_42:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_251F366C0();
      if (!v11) {
        goto LABEL_43;
      }
    }
LABEL_26:
    swift_bridgeObjectRelease_n();
    uint64_t v22 = 1;
    uint64_t v7 = v35;
    a1 = v36;
    goto LABEL_27;
  }
LABEL_43:
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251D074BC(unint64_t *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v54 = a5;
  id v62 = a4;
  uint64_t v51 = a2;
  uint64_t v52 = a1;
  uint64_t v65 = type metadata accessor for StaticAccessory(0);
  uint64_t v61 = *(void *)(v65 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v65);
  uint64_t v55 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v60 = (uint64_t)&v50 - v9;
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v53 = 0;
  int64_t v13 = 0;
  uint64_t v63 = a3;
  uint64_t v16 = a3[8];
  uint64_t v15 = a3 + 8;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *((unsigned char *)v15 - 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  uint64_t v57 = v15;
  int64_t v58 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v59 = (char *)&v50 - v11;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      uint64_t v22 = (v19 - 1) & v19;
      unint64_t v23 = v21 | (v13 << 6);
      goto LABEL_19;
    }
    BOOL v24 = __OFADD__(v13++, 1);
    if (v24)
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v13 >= v58) {
      return sub_251C64130(v52, v51, v53, v63);
    }
    unint64_t v25 = v57[v13];
    if (!v25) {
      break;
    }
LABEL_18:
    uint64_t v22 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_19:
    uint64_t v27 = v63[7];
    uint64_t v28 = *(void *)(v61 + 72);
    unint64_t v64 = v23;
    sub_251D06E64(v27 + v28 * v23, (uint64_t)v12, type metadata accessor for StaticAccessory);
    uint64_t v29 = *(void *)&v12[*(int *)(v65 + 48)];
    id v30 = objc_msgSend(v62, sel_uniqueIdentifier);
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void **)(v31 - 8);
    uint64_t v33 = v32[8];
    MEMORY[0x270FA5388](v31);
    sub_251F34D80();

    uint64_t v34 = *(void *)(v29 + 16);
    int64_t v67 = v13;
    uint64_t v68 = &v50;
    unint64_t v69 = v22;
    int64_t v66 = v32;
    uint64_t v75 = (char *)&v50 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v34
      && (sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
          uint64_t v35 = sub_251F35600(),
          uint64_t v36 = -1 << *(unsigned char *)(v29 + 32),
          unint64_t v37 = v35 & ~v36,
          uint64_t v74 = v29 + 56,
          ((*(void *)(v29 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) != 0))
    {
      uint64_t v70 = ~v36;
      uint64_t v72 = (void (*)(char *, unint64_t, uint64_t))v32[2];
      uint64_t v73 = v29;
      uint64_t v71 = v32[9];
      uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v32 + 1);
      while (1)
      {
        MEMORY[0x270FA5388](v35);
        v72((char *)&v50 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v73 + 48) + v71 * v37, v31);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v39 = sub_251F35650();
        uint64_t v40 = *v38;
        uint64_t v35 = (*v38)((char *)&v50 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), v31);
        if (v39) {
          break;
        }
        unint64_t v37 = (v37 + 1) & v70;
        if (((*(void *)(v74 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
          goto LABEL_5;
        }
      }
      v40(v75, v31);
      uint64_t v12 = v59;
      uint64_t v41 = v60;
      sub_251D06E64((uint64_t)v59, v60, type metadata accessor for StaticAccessory);
      int v42 = *(unsigned __int16 *)(v41 + *(int *)(v65 + 88));
      uint64_t v43 = v55;
      uint64_t v44 = sub_251D06E64(v41, v55, type metadata accessor for StaticAccessory);
      unint64_t v19 = v69;
      if ((~v42 & 0xFEFC) != 0)
      {
        MEMORY[0x270FA5388](v44);
        *(&v50 - 2) = v43;
        uint64_t v45 = v54;
        swift_bridgeObjectRetain();
        uint64_t v46 = v56;
        uint64_t v47 = sub_251B0AC28((void (*)(uint64_t *__return_ptr, char *))sub_251D0F6C4, (uint64_t)(&v50 - 4), v45);
        uint64_t v56 = v46;
        swift_bridgeObjectRelease();
        uint64_t v48 = *(void *)(v47 + 16);
        swift_bridgeObjectRelease();
        sub_251D06F34(v41, type metadata accessor for StaticAccessory);
        sub_251D06F34(v43, type metadata accessor for StaticAccessory);
        uint64_t result = sub_251D06F34((uint64_t)v12, type metadata accessor for StaticAccessory);
        int64_t v13 = v67;
        unint64_t v49 = v64;
        if (!v48) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_251D06F34(v41, type metadata accessor for StaticAccessory);
        sub_251D06F34(v43, type metadata accessor for StaticAccessory);
        uint64_t result = sub_251D06F34((uint64_t)v12, type metadata accessor for StaticAccessory);
        int64_t v13 = v67;
        unint64_t v49 = v64;
LABEL_33:
        *(unint64_t *)((char *)v52 + ((v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v49;
        BOOL v24 = __OFADD__(v53++, 1);
        if (v24)
        {
          __break(1u);
          return sub_251C64130(v52, v51, v53, v63);
        }
      }
    }
    else
    {
LABEL_5:
      ((void (*)(char *, uint64_t))v66[1])(v75, v31);
      uint64_t v12 = v59;
      uint64_t v20 = v60;
      sub_251D06E64((uint64_t)v59, v60, type metadata accessor for StaticAccessory);
      sub_251D06F34(v20, type metadata accessor for StaticAccessory);
      uint64_t result = sub_251D06F34((uint64_t)v12, type metadata accessor for StaticAccessory);
      int64_t v13 = v67;
      unint64_t v19 = v69;
    }
  }
  int64_t v26 = v13 + 1;
  if (v13 + 1 >= v58) {
    return sub_251C64130(v52, v51, v53, v63);
  }
  unint64_t v25 = v57[v26];
  if (v25) {
    goto LABEL_17;
  }
  int64_t v26 = v13 + 2;
  if (v13 + 2 >= v58) {
    return sub_251C64130(v52, v51, v53, v63);
  }
  unint64_t v25 = v57[v26];
  if (v25) {
    goto LABEL_17;
  }
  int64_t v26 = v13 + 3;
  if (v13 + 3 >= v58) {
    return sub_251C64130(v52, v51, v53, v63);
  }
  unint64_t v25 = v57[v26];
  if (v25)
  {
LABEL_17:
    int64_t v13 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v13 >= v58) {
      return sub_251C64130(v52, v51, v53, v63);
    }
    unint64_t v25 = v57[v13];
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_251D07B94(uint64_t a1, void *a2, uint64_t a3)
{
  v18[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  id v9 = a2;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = (uint64_t)v9;
  uint64_t v11 = (void *)isStackAllocationSafe;
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v12 = (char *)v18 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v12, 8 * v8);
    id v13 = v11;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_251D074BC((unint64_t *)v12, v8, (void *)a1, v13, a3);

    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, 8 * v8);
    id v16 = v11;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_251D074BC((unint64_t *)v15, v8, (void *)a1, v16, a3);

    swift_bridgeObjectRelease();
    MEMORY[0x2533AC760](v15, -1, -1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_251D07D9C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v63 = a4;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v5 = type metadata accessor for StaticActionSet();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t result = MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = 0;
  int64_t v9 = 0;
  uint64_t v65 = (void *)a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v58 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  int64_t v59 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v60 = v8;
  while (1)
  {
    if (v13)
    {
      uint64_t v73 = (v13 - 1) & v13;
      int64_t v74 = v9;
      unint64_t v16 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_23;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v59) {
      return sub_251C640E8(v56, v55, v57, v65);
    }
    unint64_t v18 = *(void *)(v58 + 8 * v17);
    int64_t v19 = v9 + 1;
    if (!v18)
    {
      int64_t v19 = v9 + 2;
      if (v9 + 2 >= v59) {
        return sub_251C640E8(v56, v55, v57, v65);
      }
      unint64_t v18 = *(void *)(v58 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v9 + 3;
        if (v9 + 3 >= v59) {
          return sub_251C640E8(v56, v55, v57, v65);
        }
        unint64_t v18 = *(void *)(v58 + 8 * v19);
        if (!v18) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v73 = (v18 - 1) & v18;
    int64_t v74 = v19;
    unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_23:
    uint64_t v21 = sub_251F34DA0();
    uint64_t v72 = &v54;
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v80 = *(void *)(v22 + 64);
    MEMORY[0x270FA5388](v21);
    unint64_t v78 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
    BOOL v24 = (char *)&v54 - v78;
    uint64_t v26 = v25;
    uint64_t v27 = v65;
    uint64_t v28 = v65[6];
    uint64_t v77 = *(void *)(v26 + 72);
    uint64_t v75 = v22;
    uint64_t v79 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v79((char *)&v54 - v78, v28 + v77 * v16, v21);
    uint64_t v29 = v27[7];
    uint64_t v30 = *(void *)(v61 + 72);
    unint64_t v64 = v16;
    int64_t v66 = type metadata accessor for StaticActionSet;
    sub_251D06E64(v29 + v30 * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E670);
    uint64_t v70 = &v54;
    uint64_t v32 = v31 - 8;
    uint64_t v33 = *(void *)(*(void *)(v31 - 8) + 64);
    MEMORY[0x270FA5388](v31);
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v35 = (char *)&v54 + *(int *)(v32 + 56) - v34;
    uint64_t v71 = v24;
    uint64_t v36 = v24;
    unint64_t v37 = (void (*)(char *, char *, uint64_t))v79;
    v79((char *)&v54 - v34, (unint64_t)v36, v21);
    uint64_t v38 = (uint64_t)v8;
    char v39 = v66;
    uint64_t v40 = sub_251D06E64(v38, (uint64_t)v35, (uint64_t (*)(void))v66);
    uint64_t v68 = &v54;
    MEMORY[0x270FA5388](v40);
    uint64_t v41 = (char *)&v54 + *(int *)(v32 + 56) - v34;
    uint64_t v69 = (uint64_t)&v54 - v34;
    uint64_t v76 = v22 + 16;
    v37((char *)&v54 - v34, (char *)&v54 - v34, v21);
    sub_251D06E64((uint64_t)v35, (uint64_t)v41, (uint64_t (*)(void))v39);
    uint64_t v42 = *(void *)&v41[*(int *)(v62 + 40)];
    swift_bridgeObjectRetain();
    sub_251D06F34((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    id v43 = objc_msgSend(v63, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v43);
    uint64_t v44 = (char *)&v54 - v78;
    sub_251F34D80();

    uint64_t v45 = *(void *)(v42 + 16);
    int64_t v66 = (uint64_t (*)())&v54;
    int64_t v67 = (char *)&v54 - v34;
    unint64_t v78 = (unint64_t)v44;
    if (v45
      && (sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
          uint64_t v46 = sub_251F35600(),
          uint64_t v47 = -1 << *(unsigned char *)(v42 + 32),
          unint64_t v48 = v46 & ~v47,
          ((*(void *)(v42 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0))
    {
      uint64_t v49 = ~v47;
      uint64_t v50 = (uint64_t (**)(char *, uint64_t))(v75 + 8);
      do
      {
        MEMORY[0x270FA5388](v46);
        uint64_t v52 = (char *)&v54 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
        v79(v52, *(void *)(v42 + 48) + v48 * v77, v21);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v14 = sub_251F35650();
        uint64_t v46 = (*v50)(v52, v21);
        if (v14) {
          break;
        }
        unint64_t v48 = (v48 + 1) & v49;
      }
      while (((*(void *)(v42 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0);
    }
    else
    {
      char v14 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(unint64_t, uint64_t))(v75 + 8);
    v15(v78, v21);
    sub_251A1B064(v69, &qword_26B21E670);
    v15((unint64_t)v67, v21);
    unint64_t v8 = v60;
    sub_251D06F34((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v71, v21);
    unint64_t v13 = v73;
    int64_t v9 = v74;
    if (v14)
    {
      *(unint64_t *)((char *)v56 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      if (__OFADD__(v57++, 1))
      {
        __break(1u);
        return sub_251C640E8(v56, v55, v57, v65);
      }
    }
  }
  uint64_t v20 = v9 + 4;
  if (v9 + 4 >= v59) {
    return sub_251C640E8(v56, v55, v57, v65);
  }
  unint64_t v18 = *(void *)(v58 + 8 * v20);
  if (v18)
  {
    int64_t v19 = v9 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v59) {
      return sub_251C640E8(v56, v55, v57, v65);
    }
    unint64_t v18 = *(void *)(v58 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251D08478(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v63 = a4;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v5 = type metadata accessor for StaticCameraProfile();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t result = MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = 0;
  int64_t v9 = 0;
  uint64_t v65 = (void *)a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v58 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  int64_t v59 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v60 = v8;
  while (1)
  {
    if (v13)
    {
      uint64_t v73 = (v13 - 1) & v13;
      int64_t v74 = v9;
      unint64_t v16 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_23;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v59) {
      return sub_251C640A0(v56, v55, v57, v65);
    }
    unint64_t v18 = *(void *)(v58 + 8 * v17);
    int64_t v19 = v9 + 1;
    if (!v18)
    {
      int64_t v19 = v9 + 2;
      if (v9 + 2 >= v59) {
        return sub_251C640A0(v56, v55, v57, v65);
      }
      unint64_t v18 = *(void *)(v58 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v9 + 3;
        if (v9 + 3 >= v59) {
          return sub_251C640A0(v56, v55, v57, v65);
        }
        unint64_t v18 = *(void *)(v58 + 8 * v19);
        if (!v18) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v73 = (v18 - 1) & v18;
    int64_t v74 = v19;
    unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_23:
    uint64_t v21 = sub_251F34DA0();
    uint64_t v72 = &v54;
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v80 = *(void *)(v22 + 64);
    MEMORY[0x270FA5388](v21);
    unint64_t v78 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
    BOOL v24 = (char *)&v54 - v78;
    uint64_t v26 = v25;
    uint64_t v27 = v65;
    uint64_t v28 = v65[6];
    uint64_t v77 = *(void *)(v26 + 72);
    uint64_t v75 = v22;
    uint64_t v79 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v79((char *)&v54 - v78, v28 + v77 * v16, v21);
    uint64_t v29 = v27[7];
    uint64_t v30 = *(void *)(v61 + 72);
    unint64_t v64 = v16;
    int64_t v66 = type metadata accessor for StaticCameraProfile;
    sub_251D06E64(v29 + v30 * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC30);
    uint64_t v70 = &v54;
    uint64_t v32 = v31 - 8;
    uint64_t v33 = *(void *)(*(void *)(v31 - 8) + 64);
    MEMORY[0x270FA5388](v31);
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v35 = (char *)&v54 + *(int *)(v32 + 56) - v34;
    uint64_t v71 = v24;
    uint64_t v36 = v24;
    unint64_t v37 = (void (*)(char *, char *, uint64_t))v79;
    v79((char *)&v54 - v34, (unint64_t)v36, v21);
    uint64_t v38 = (uint64_t)v8;
    char v39 = v66;
    uint64_t v40 = sub_251D06E64(v38, (uint64_t)v35, (uint64_t (*)(void))v66);
    uint64_t v68 = &v54;
    MEMORY[0x270FA5388](v40);
    uint64_t v41 = (char *)&v54 + *(int *)(v32 + 56) - v34;
    uint64_t v69 = (uint64_t)&v54 - v34;
    uint64_t v76 = v22 + 16;
    v37((char *)&v54 - v34, (char *)&v54 - v34, v21);
    sub_251D06E64((uint64_t)v35, (uint64_t)v41, (uint64_t (*)(void))v39);
    uint64_t v42 = *(void *)&v41[*(int *)(v62 + 24)];
    swift_bridgeObjectRetain();
    sub_251D06F34((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    id v43 = objc_msgSend(v63, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v43);
    uint64_t v44 = (char *)&v54 - v78;
    sub_251F34D80();

    uint64_t v45 = *(void *)(v42 + 16);
    int64_t v66 = (uint64_t (*)())&v54;
    int64_t v67 = (char *)&v54 - v34;
    unint64_t v78 = (unint64_t)v44;
    if (v45
      && (sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
          uint64_t v46 = sub_251F35600(),
          uint64_t v47 = -1 << *(unsigned char *)(v42 + 32),
          unint64_t v48 = v46 & ~v47,
          ((*(void *)(v42 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0))
    {
      uint64_t v49 = ~v47;
      uint64_t v50 = (uint64_t (**)(char *, uint64_t))(v75 + 8);
      do
      {
        MEMORY[0x270FA5388](v46);
        uint64_t v52 = (char *)&v54 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
        v79(v52, *(void *)(v42 + 48) + v48 * v77, v21);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v14 = sub_251F35650();
        uint64_t v46 = (*v50)(v52, v21);
        if (v14) {
          break;
        }
        unint64_t v48 = (v48 + 1) & v49;
      }
      while (((*(void *)(v42 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0);
    }
    else
    {
      char v14 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(unint64_t, uint64_t))(v75 + 8);
    v15(v78, v21);
    sub_251A1B064(v69, &qword_26B21EC30);
    v15((unint64_t)v67, v21);
    unint64_t v8 = v60;
    sub_251D06F34((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v71, v21);
    unint64_t v13 = v73;
    int64_t v9 = v74;
    if (v14)
    {
      *(unint64_t *)((char *)v56 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      if (__OFADD__(v57++, 1))
      {
        __break(1u);
        return sub_251C640A0(v56, v55, v57, v65);
      }
    }
  }
  uint64_t v20 = v9 + 4;
  if (v9 + 4 >= v59) {
    return sub_251C640A0(v56, v55, v57, v65);
  }
  unint64_t v18 = *(void *)(v58 + 8 * v20);
  if (v18)
  {
    int64_t v19 = v9 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v59) {
      return sub_251C640A0(v56, v55, v57, v65);
    }
    unint64_t v18 = *(void *)(v58 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251D08B54(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v34 = a2;
  id v42 = a4;
  uint64_t v35 = a1;
  uint64_t v5 = type metadata accessor for StaticMediaSystem();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  uint64_t result = MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  id v43 = (void *)a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v36 = 0;
  uint64_t v37 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  char v39 = v8;
  while (1)
  {
    if (v13)
    {
      uint64_t v46 = (v13 - 1) & v13;
      int64_t v47 = v9;
      unint64_t v14 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v15 >= v38) {
      return sub_251C64058(v35, v34, v36, v43);
    }
    unint64_t v16 = *(void *)(v37 + 8 * v15);
    int64_t v17 = v9 + 1;
    if (!v16)
    {
      int64_t v17 = v9 + 2;
      if (v9 + 2 >= v38) {
        return sub_251C64058(v35, v34, v36, v43);
      }
      unint64_t v16 = *(void *)(v37 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v9 + 3;
        if (v9 + 3 >= v38) {
          return sub_251C64058(v35, v34, v36, v43);
        }
        unint64_t v16 = *(void *)(v37 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v46 = (v16 - 1) & v16;
    int64_t v47 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_22:
    uint64_t v19 = v43[7];
    uint64_t v20 = *(void *)(v40 + 72);
    unint64_t v44 = v14;
    sub_251D06E64(v19 + v20 * v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v21 = *(void *)&v8[*(int *)(v41 + 84)];
    id v22 = objc_msgSend(v42, sel_uniqueIdentifier, v34);
    uint64_t v23 = sub_251F34DA0();
    uint64_t v45 = &v34;
    uint64_t v48 = *(void *)(v23 - 8);
    uint64_t v24 = *(void *)(v48 + 64);
    MEMORY[0x270FA5388](v23);
    uint64_t v54 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    uint64_t v53 = v21;
    if (*(void *)(v21 + 16)
      && (uint64_t v25 = v53,
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
          uint64_t v26 = sub_251F35600(),
          uint64_t v27 = -1 << *(unsigned char *)(v25 + 32),
          unint64_t v28 = v26 & ~v27,
          uint64_t v52 = v25 + 56,
          ((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) != 0))
    {
      uint64_t v49 = ~v27;
      uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v48 + 16);
      uint64_t v50 = *(void *)(v48 + 72);
      uint64_t v51 = v29;
      uint64_t v30 = (uint64_t (**)(char *, uint64_t))(v48 + 8);
      while (1)
      {
        MEMORY[0x270FA5388](v26);
        v51((char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v53 + 48) + v50 * v28, v23);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v31 = sub_251F35650();
        uint64_t v32 = *v30;
        uint64_t v26 = (*v30)((char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
        if (v31) {
          break;
        }
        unint64_t v28 = (v28 + 1) & v49;
        if (((*(void *)(v52 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
          goto LABEL_5;
        }
      }
      v32(v54, v23);
      unint64_t v8 = v39;
      uint64_t result = sub_251D06F34((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      *(unint64_t *)((char *)v35 + ((v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v44;
      BOOL v33 = __OFADD__(v36++, 1);
      unint64_t v13 = v46;
      int64_t v9 = v47;
      if (v33)
      {
        __break(1u);
        return sub_251C64058(v35, v34, v36, v43);
      }
    }
    else
    {
LABEL_5:
      (*(void (**)(char *, uint64_t))(v48 + 8))(v54, v23);
      unint64_t v8 = v39;
      uint64_t result = sub_251D06F34((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      unint64_t v13 = v46;
      int64_t v9 = v47;
    }
  }
  uint64_t v18 = v9 + 4;
  if (v9 + 4 >= v38) {
    return sub_251C64058(v35, v34, v36, v43);
  }
  unint64_t v16 = *(void *)(v37 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v9 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v38) {
      return sub_251C64058(v35, v34, v36, v43);
    }
    unint64_t v16 = *(void *)(v37 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_251D0904C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v34 = a2;
  id v42 = a4;
  uint64_t v35 = a1;
  uint64_t v5 = type metadata accessor for StaticMediaProfile();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  uint64_t result = MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  id v43 = (void *)a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v36 = 0;
  uint64_t v37 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  char v39 = v8;
  while (1)
  {
    if (v13)
    {
      uint64_t v46 = (v13 - 1) & v13;
      int64_t v47 = v9;
      unint64_t v14 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v15 >= v38) {
      return sub_251C64010(v35, v34, v36, v43);
    }
    unint64_t v16 = *(void *)(v37 + 8 * v15);
    int64_t v17 = v9 + 1;
    if (!v16)
    {
      int64_t v17 = v9 + 2;
      if (v9 + 2 >= v38) {
        return sub_251C64010(v35, v34, v36, v43);
      }
      unint64_t v16 = *(void *)(v37 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v9 + 3;
        if (v9 + 3 >= v38) {
          return sub_251C64010(v35, v34, v36, v43);
        }
        unint64_t v16 = *(void *)(v37 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v46 = (v16 - 1) & v16;
    int64_t v47 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_22:
    uint64_t v19 = v43[7];
    uint64_t v20 = *(void *)(v40 + 72);
    unint64_t v44 = v14;
    sub_251D06E64(v19 + v20 * v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v21 = *(void *)&v8[*(int *)(v41 + 24)];
    id v22 = objc_msgSend(v42, sel_uniqueIdentifier, v34);
    uint64_t v23 = sub_251F34DA0();
    uint64_t v45 = &v34;
    uint64_t v48 = *(void *)(v23 - 8);
    uint64_t v24 = *(void *)(v48 + 64);
    MEMORY[0x270FA5388](v23);
    uint64_t v54 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    uint64_t v53 = v21;
    if (*(void *)(v21 + 16)
      && (uint64_t v25 = v53,
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
          uint64_t v26 = sub_251F35600(),
          uint64_t v27 = -1 << *(unsigned char *)(v25 + 32),
          unint64_t v28 = v26 & ~v27,
          uint64_t v52 = v25 + 56,
          ((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) != 0))
    {
      uint64_t v49 = ~v27;
      uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v48 + 16);
      uint64_t v50 = *(void *)(v48 + 72);
      uint64_t v51 = v29;
      uint64_t v30 = (uint64_t (**)(char *, uint64_t))(v48 + 8);
      while (1)
      {
        MEMORY[0x270FA5388](v26);
        v51((char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v53 + 48) + v50 * v28, v23);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v31 = sub_251F35650();
        uint64_t v32 = *v30;
        uint64_t v26 = (*v30)((char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
        if (v31) {
          break;
        }
        unint64_t v28 = (v28 + 1) & v49;
        if (((*(void *)(v52 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
          goto LABEL_5;
        }
      }
      v32(v54, v23);
      unint64_t v8 = v39;
      uint64_t result = sub_251D06F34((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      *(unint64_t *)((char *)v35 + ((v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v44;
      BOOL v33 = __OFADD__(v36++, 1);
      unint64_t v13 = v46;
      int64_t v9 = v47;
      if (v33)
      {
        __break(1u);
        return sub_251C64010(v35, v34, v36, v43);
      }
    }
    else
    {
LABEL_5:
      (*(void (**)(char *, uint64_t))(v48 + 8))(v54, v23);
      unint64_t v8 = v39;
      uint64_t result = sub_251D06F34((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      unint64_t v13 = v46;
      int64_t v9 = v47;
    }
  }
  uint64_t v18 = v9 + 4;
  if (v9 + 4 >= v38) {
    return sub_251C64010(v35, v34, v36, v43);
  }
  unint64_t v16 = *(void *)(v37 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v9 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v38) {
      return sub_251C64010(v35, v34, v36, v43);
    }
    unint64_t v16 = *(void *)(v37 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_251D09544(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v63 = a4;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v5 = type metadata accessor for StaticServiceGroup();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t result = MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = 0;
  int64_t v9 = 0;
  uint64_t v65 = (void *)a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v58 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  int64_t v59 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v60 = v8;
  while (1)
  {
    if (v13)
    {
      uint64_t v73 = (v13 - 1) & v13;
      int64_t v74 = v9;
      unint64_t v16 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_23;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v59) {
      return sub_251C63B1C(v56, v55, v57, v65);
    }
    unint64_t v18 = *(void *)(v58 + 8 * v17);
    int64_t v19 = v9 + 1;
    if (!v18)
    {
      int64_t v19 = v9 + 2;
      if (v9 + 2 >= v59) {
        return sub_251C63B1C(v56, v55, v57, v65);
      }
      unint64_t v18 = *(void *)(v58 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v9 + 3;
        if (v9 + 3 >= v59) {
          return sub_251C63B1C(v56, v55, v57, v65);
        }
        unint64_t v18 = *(void *)(v58 + 8 * v19);
        if (!v18) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v73 = (v18 - 1) & v18;
    int64_t v74 = v19;
    unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_23:
    uint64_t v21 = sub_251F34DA0();
    uint64_t v72 = &v54;
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v80 = *(void *)(v22 + 64);
    MEMORY[0x270FA5388](v21);
    unint64_t v78 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v24 = (char *)&v54 - v78;
    uint64_t v26 = v25;
    uint64_t v27 = v65;
    uint64_t v28 = v65[6];
    uint64_t v77 = *(void *)(v26 + 72);
    uint64_t v75 = v22;
    uint64_t v79 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v79((char *)&v54 - v78, v28 + v77 * v16, v21);
    uint64_t v29 = v27[7];
    uint64_t v30 = *(void *)(v61 + 72);
    unint64_t v64 = v16;
    int64_t v66 = type metadata accessor for StaticServiceGroup;
    sub_251D06E64(v29 + v30 * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E698);
    uint64_t v70 = &v54;
    uint64_t v32 = v31 - 8;
    uint64_t v33 = *(void *)(*(void *)(v31 - 8) + 64);
    MEMORY[0x270FA5388](v31);
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v35 = (char *)&v54 + *(int *)(v32 + 56) - v34;
    uint64_t v71 = v24;
    uint64_t v36 = v24;
    uint64_t v37 = (void (*)(char *, char *, uint64_t))v79;
    v79((char *)&v54 - v34, (unint64_t)v36, v21);
    uint64_t v38 = (uint64_t)v8;
    char v39 = v66;
    uint64_t v40 = sub_251D06E64(v38, (uint64_t)v35, (uint64_t (*)(void))v66);
    uint64_t v68 = &v54;
    MEMORY[0x270FA5388](v40);
    uint64_t v41 = (char *)&v54 + *(int *)(v32 + 56) - v34;
    uint64_t v69 = (uint64_t)&v54 - v34;
    uint64_t v76 = v22 + 16;
    v37((char *)&v54 - v34, (char *)&v54 - v34, v21);
    sub_251D06E64((uint64_t)v35, (uint64_t)v41, (uint64_t (*)(void))v39);
    uint64_t v42 = *(void *)&v41[*(int *)(v62 + 32)];
    swift_bridgeObjectRetain();
    sub_251D06F34((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    id v43 = objc_msgSend(v63, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v43);
    unint64_t v44 = (char *)&v54 - v78;
    sub_251F34D80();

    uint64_t v45 = *(void *)(v42 + 16);
    int64_t v66 = (uint64_t (*)())&v54;
    int64_t v67 = (char *)&v54 - v34;
    unint64_t v78 = (unint64_t)v44;
    if (v45
      && (sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
          uint64_t v46 = sub_251F35600(),
          uint64_t v47 = -1 << *(unsigned char *)(v42 + 32),
          unint64_t v48 = v46 & ~v47,
          ((*(void *)(v42 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0))
    {
      uint64_t v49 = ~v47;
      uint64_t v50 = (uint64_t (**)(char *, uint64_t))(v75 + 8);
      do
      {
        MEMORY[0x270FA5388](v46);
        uint64_t v52 = (char *)&v54 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
        v79(v52, *(void *)(v42 + 48) + v48 * v77, v21);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v14 = sub_251F35650();
        uint64_t v46 = (*v50)(v52, v21);
        if (v14) {
          break;
        }
        unint64_t v48 = (v48 + 1) & v49;
      }
      while (((*(void *)(v42 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0);
    }
    else
    {
      char v14 = 0;
    }
    swift_bridgeObjectRelease();
    int64_t v15 = *(void (**)(unint64_t, uint64_t))(v75 + 8);
    v15(v78, v21);
    sub_251A1B064(v69, &qword_26B21E698);
    v15((unint64_t)v67, v21);
    unint64_t v8 = v60;
    sub_251D06F34((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v71, v21);
    unint64_t v13 = v73;
    int64_t v9 = v74;
    if (v14)
    {
      *(unint64_t *)((char *)v56 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      if (__OFADD__(v57++, 1))
      {
        __break(1u);
        return sub_251C63B1C(v56, v55, v57, v65);
      }
    }
  }
  uint64_t v20 = v9 + 4;
  if (v9 + 4 >= v59) {
    return sub_251C63B1C(v56, v55, v57, v65);
  }
  unint64_t v18 = *(void *)(v58 + 8 * v20);
  if (v18)
  {
    int64_t v19 = v9 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v59) {
      return sub_251C63B1C(v56, v55, v57, v65);
    }
    unint64_t v18 = *(void *)(v58 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251D09C20(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v63 = a4;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t result = MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = 0;
  int64_t v9 = 0;
  uint64_t v65 = (void *)a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v58 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  int64_t v59 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v60 = v8;
  while (1)
  {
    if (v13)
    {
      uint64_t v73 = (v13 - 1) & v13;
      int64_t v74 = v9;
      unint64_t v16 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_23;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v59) {
      return sub_251C63AD4(v56, v55, v57, v65);
    }
    unint64_t v18 = *(void *)(v58 + 8 * v17);
    int64_t v19 = v9 + 1;
    if (!v18)
    {
      int64_t v19 = v9 + 2;
      if (v9 + 2 >= v59) {
        return sub_251C63AD4(v56, v55, v57, v65);
      }
      unint64_t v18 = *(void *)(v58 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v9 + 3;
        if (v9 + 3 >= v59) {
          return sub_251C63AD4(v56, v55, v57, v65);
        }
        unint64_t v18 = *(void *)(v58 + 8 * v19);
        if (!v18) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v73 = (v18 - 1) & v18;
    int64_t v74 = v19;
    unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_23:
    uint64_t v21 = sub_251F34DA0();
    uint64_t v72 = &v54;
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v80 = *(void *)(v22 + 64);
    MEMORY[0x270FA5388](v21);
    unint64_t v78 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v24 = (char *)&v54 - v78;
    uint64_t v26 = v25;
    uint64_t v27 = v65;
    uint64_t v28 = v65[6];
    uint64_t v77 = *(void *)(v26 + 72);
    uint64_t v75 = v22;
    uint64_t v79 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v79((char *)&v54 - v78, v28 + v77 * v16, v21);
    uint64_t v29 = v27[7];
    uint64_t v30 = *(void *)(v61 + 72);
    unint64_t v64 = v16;
    int64_t v66 = type metadata accessor for StaticService;
    sub_251D06E64(v29 + v30 * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
    uint64_t v70 = &v54;
    uint64_t v32 = v31 - 8;
    uint64_t v33 = *(void *)(*(void *)(v31 - 8) + 64);
    MEMORY[0x270FA5388](v31);
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v35 = (char *)&v54 + *(int *)(v32 + 56) - v34;
    uint64_t v71 = v24;
    uint64_t v36 = v24;
    uint64_t v37 = (void (*)(char *, char *, uint64_t))v79;
    v79((char *)&v54 - v34, (unint64_t)v36, v21);
    uint64_t v38 = (uint64_t)v8;
    char v39 = v66;
    uint64_t v40 = sub_251D06E64(v38, (uint64_t)v35, (uint64_t (*)(void))v66);
    uint64_t v68 = &v54;
    MEMORY[0x270FA5388](v40);
    uint64_t v41 = (char *)&v54 + *(int *)(v32 + 56) - v34;
    uint64_t v69 = (uint64_t)&v54 - v34;
    uint64_t v76 = v22 + 16;
    v37((char *)&v54 - v34, (char *)&v54 - v34, v21);
    sub_251D06E64((uint64_t)v35, (uint64_t)v41, (uint64_t (*)(void))v39);
    uint64_t v42 = *(void *)&v41[*(int *)(v62 + 60)];
    swift_bridgeObjectRetain();
    sub_251D06F34((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StaticService);
    id v43 = objc_msgSend(v63, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v43);
    unint64_t v44 = (char *)&v54 - v78;
    sub_251F34D80();

    uint64_t v45 = *(void *)(v42 + 16);
    int64_t v66 = (uint64_t (*)())&v54;
    int64_t v67 = (char *)&v54 - v34;
    unint64_t v78 = (unint64_t)v44;
    if (v45
      && (sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
          uint64_t v46 = sub_251F35600(),
          uint64_t v47 = -1 << *(unsigned char *)(v42 + 32),
          unint64_t v48 = v46 & ~v47,
          ((*(void *)(v42 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0))
    {
      uint64_t v49 = ~v47;
      uint64_t v50 = (uint64_t (**)(char *, uint64_t))(v75 + 8);
      do
      {
        MEMORY[0x270FA5388](v46);
        uint64_t v52 = (char *)&v54 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
        v79(v52, *(void *)(v42 + 48) + v48 * v77, v21);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v14 = sub_251F35650();
        uint64_t v46 = (*v50)(v52, v21);
        if (v14) {
          break;
        }
        unint64_t v48 = (v48 + 1) & v49;
      }
      while (((*(void *)(v42 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) != 0);
    }
    else
    {
      char v14 = 0;
    }
    swift_bridgeObjectRelease();
    int64_t v15 = *(void (**)(unint64_t, uint64_t))(v75 + 8);
    v15(v78, v21);
    sub_251A1B064(v69, &qword_26B21E658);
    v15((unint64_t)v67, v21);
    unint64_t v8 = v60;
    sub_251D06F34((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v71, v21);
    unint64_t v13 = v73;
    int64_t v9 = v74;
    if (v14)
    {
      *(unint64_t *)((char *)v56 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      if (__OFADD__(v57++, 1))
      {
        __break(1u);
        return sub_251C63AD4(v56, v55, v57, v65);
      }
    }
  }
  uint64_t v20 = v9 + 4;
  if (v9 + 4 >= v59) {
    return sub_251C63AD4(v56, v55, v57, v65);
  }
  unint64_t v18 = *(void *)(v58 + 8 * v20);
  if (v18)
  {
    int64_t v19 = v9 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v59) {
      return sub_251C63AD4(v56, v55, v57, v65);
    }
    unint64_t v18 = *(void *)(v58 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251D0A2FC(uint64_t a1, void *a2, uint64_t (*a3)(char *, unint64_t, uint64_t, id))
{
  v17[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v10 = (void *)isStackAllocationSafe;
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v11 = (char *)v17 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v11, 8 * v8);
    id v12 = v10;
    uint64_t v13 = a3(v11, v8, a1, v12);

    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    char v14 = (void *)swift_slowAlloc();
    bzero(v14, 8 * v8);
    id v15 = v10;
    uint64_t v13 = a3((char *)v14, v8, a1, v15);

    MEMORY[0x2533AC760](v14, -1, -1);
  }
  return v13;
}

uint64_t sub_251D0A4AC(unint64_t a1, void *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v40 = a7;
  uint64_t v41 = a8;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  id v35 = a2;
  uint64_t v12 = type metadata accessor for StaticRoom(0);
  uint64_t v34 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    if (!v15) {
      return v16;
    }
    uint64_t v43 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3DFDC(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0) {
      break;
    }
    uint64_t v29 = v10;
    uint64_t v10 = 0;
    uint64_t v16 = v43;
    unint64_t v30 = a1 & 0xC000000000000001;
    uint64_t v31 = a9;
    uint64_t v32 = v15;
    unint64_t v33 = a1;
    uint64_t v42 = v14;
    char v14 = v37;
    uint64_t v19 = v39;
    uint64_t v18 = v40;
    while (v15 != v10)
    {
      if (v30) {
        id v20 = (id)MEMORY[0x2533AB3A0](v10, a1);
      }
      else {
        id v20 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v21 = v20;
      id v22 = v35;
      uint64_t v23 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = v41;
      swift_bridgeObjectRetain();
      uint64_t v26 = swift_bridgeObjectRetain();
      sub_251CFC418(v22, v21, v23, (uint64_t)v14, v24, v19, v18, v25, (uint64_t)v42, v26);
      uint64_t v43 = v16;
      unint64_t v28 = *(void *)(v16 + 16);
      unint64_t v27 = *(void *)(v16 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_251A3DFDC(v27 > 1, v28 + 1, 1);
        uint64_t v16 = v43;
      }
      ++v10;
      *(void *)(v16 + 16) = v28 + 1;
      sub_251D06ECC((uint64_t)v42, v16+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v28, type metadata accessor for StaticRoom);
      uint64_t v15 = v32;
      a1 = v33;
      if (v32 == v10) {
        return v16;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_251D0A74C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  unint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticRoom(0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFA0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  uint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  uint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFA0);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251D06ECC((uint64_t)v43, (uint64_t)v11, type metadata accessor for StaticRoom);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A122BC();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01D88(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251D06ECC((uint64_t)v42, v39, type metadata accessor for StaticRoom);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251D0F660(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    uint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251D06ECC((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, type metadata accessor for StaticRoom);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251D0AB74(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v39 = a7;
  uint64_t v40 = a8;
  id v14 = objc_msgSend(a1, sel_rooms);
  sub_251A1A568(0, &qword_26B21EB28);
  uint64_t v15 = sub_251F35AC0();

  id v16 = objc_msgSend(a1, sel_roomForEntireHome);
  unint64_t v41 = v15;
  swift_bridgeObjectRetain();
  id v17 = v16;
  MEMORY[0x2533AA9D0]();
  if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_251F35B10();
  }
  sub_251F35B70();
  sub_251F35AE0();
  swift_bridgeObjectRelease();

  id v18 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  uint64_t v38 = sub_251D0A4AC(v41, v18, a2, a3, a4, a5, a6, v39, v40);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v20 = *(void *)(v38 + 16);
  if (v20)
  {
    uint64_t v37 = 0;
    unint64_t v41 = MEMORY[0x263F8EE78];
    sub_251A3DFAC(0, v20, 0);
    uint64_t v21 = v41;
    uint64_t v22 = 0;
    uint64_t v23 = *(void *)(type metadata accessor for StaticRoom(0) - 8);
    unint64_t v39 = v38 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v40 = v23;
    do
    {
      int64_t v24 = v20;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFA0);
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = MEMORY[0x270FA5388](v25 - 8);
      BOOL v29 = (char *)&v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v30 = (uint64_t)&v29[*(int *)(v27 + 56)];
      sub_251D06E64(v39 + *(void *)(v40 + 72) * v22, v30, type metadata accessor for StaticRoom);
      uint64_t v31 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      unint64_t v41 = v21;
      unint64_t v33 = *(void *)(v21 + 16);
      unint64_t v32 = *(void *)(v21 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_251A3DFAC(v32 > 1, v33 + 1, 1);
        uint64_t v21 = v41;
      }
      ++v22;
      *(void *)(v21 + 16) = v33 + 1;
      sub_251A4ECF0((uint64_t)v29, v21+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v33, &qword_26B21FFA0);
      int64_t v20 = v24;
    }
    while (v24 != v22);
    swift_bridgeObjectRelease();
    uint64_t v19 = v37;
    if (*(void *)(v21 + 16)) {
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_9:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB58);
      uint64_t v34 = sub_251F36700();
      goto LABEL_12;
    }
  }
  uint64_t v34 = MEMORY[0x263F8EE80];
LABEL_12:
  unint64_t v41 = v34;
  sub_251D0A74C(v21, 1, (uint64_t *)&v41);
  swift_bridgeObjectRelease();
  if (!v19) {
    return v41;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251D0AFC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C75616665447369 && a2 == 0xED00006D6F6F5274 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F5A636974617473 && a2 == 0xEB0000000073656ELL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000251F6A4D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000251F6A4F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000251F6A510 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000251F6A530 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000251F6A550 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000251F6A590 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6A5B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F6F4F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6F510 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x8000000251F706B0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t sub_251D0B564(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v72 = a4;
  v61[0] = a2;
  uint64_t v62 = a1;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A0);
  MEMORY[0x270FA5388](v77);
  char v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v10 = *(void *)(v82 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v82);
  uint64_t v81 = (uint64_t)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v79 = (uint64_t *)((char *)v61 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v84 = (uint64_t)v61 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v85 = (uint64_t)v61 - v17;
  uint64_t v18 = type metadata accessor for StaticMediaProfile();
  uint64_t result = MEMORY[0x270FA5388](v18);
  uint64_t v76 = (uint64_t)v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v22 = 0;
  uint64_t v23 = *(void *)(a3 + 56);
  uint64_t v68 = 0;
  uint64_t v69 = a3 + 56;
  uint64_t v24 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  int64_t v70 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v64 = v10;
  uint64_t v65 = v9;
  uint64_t v73 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v27 = v20;
  uint64_t v66 = a3;
  uint64_t v67 = result;
  uint64_t v80 = v6;
  uint64_t v63 = v20;
  while (1)
  {
    if (v26)
    {
      int64_t v74 = v22;
      uint64_t v75 = (v26 - 1) & v26;
      unint64_t v28 = __clz(__rbit64(v26)) | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v29 >= v70) {
      goto LABEL_46;
    }
    unint64_t v30 = *(void *)(v69 + 8 * v29);
    int64_t v31 = v22 + 1;
    if (!v30)
    {
      int64_t v31 = v22 + 2;
      if (v22 + 2 >= v70) {
        goto LABEL_46;
      }
      unint64_t v30 = *(void *)(v69 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v22 + 3;
        if (v22 + 3 >= v70) {
          goto LABEL_46;
        }
        unint64_t v30 = *(void *)(v69 + 8 * v31);
        if (!v30) {
          break;
        }
      }
    }
LABEL_21:
    int64_t v74 = v31;
    uint64_t v75 = (v30 - 1) & v30;
    unint64_t v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_22:
    uint64_t v33 = a3;
    uint64_t v34 = *(void *)(a3 + 48) + *(void *)(v27 + 72) * v28;
    uint64_t v35 = v76;
    unint64_t v36 = v28;
    sub_251D06E64(v34, v76, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251A1B128(v35 + *(int *)(v18 + 72), (uint64_t)v9, &qword_26B21F090);
    if ((*v73)(v9, 1, v82) == 1)
    {
      sub_251A1B064((uint64_t)v9, &qword_26B21F090);
      int64_t v22 = v74;
      a3 = v33;
      goto LABEL_5;
    }
    unint64_t v71 = v36;
    sub_251D06ECC((uint64_t)v9, v85, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v37 = *(void *)(v72 + 16);
    a3 = v33;
    if (!v37)
    {
LABEL_41:
      sub_251D06F34(v85, type metadata accessor for StaticAccessory.DeviceIdentifier);
      uint64_t result = sub_251D06F34(v76, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      *(unint64_t *)((char *)v62 + ((v71 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v71;
      uint64_t v18 = v67;
      BOOL v60 = __OFADD__(v68++, 1);
      int64_t v22 = v74;
      unint64_t v26 = v75;
      if (!v60) {
        continue;
      }
      goto LABEL_48;
    }
    uint64_t v38 = v64;
    uint64_t v39 = v72 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    swift_bridgeObjectRetain();
    uint64_t v83 = *(void *)(v38 + 72);
    uint64_t v40 = v77;
    uint64_t v41 = v84;
    while (1)
    {
      sub_251D06E64(v39, v41, type metadata accessor for StaticAccessory.DeviceIdentifier);
      uint64_t v42 = &v6[*(int *)(v40 + 48)];
      sub_251D06E64(v41, (uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
      sub_251D06E64(v85, (uint64_t)v42, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      uint64_t v43 = (uint64_t)v6;
      uint64_t v44 = v81;
      sub_251D06E64(v43, v81, type metadata accessor for StaticAccessory.DeviceIdentifier);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v46 = sub_251F34DA0();
      uint64_t v47 = v46;
      uint64_t v48 = *(void *)(v46 - 8);
      if (EnumCaseMultiPayload == 1)
      {
        unint64_t v78 = v61;
        MEMORY[0x270FA5388](v46);
        uint64_t v50 = (char *)v61 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v50, v42, v47);
        char v51 = sub_251F34D70();
        uint64_t v52 = *(void (**)(char *, uint64_t))(v48 + 8);
        v52(v50, v47);
        v52((char *)v44, v47);
        uint64_t v40 = v77;
        char v6 = v80;
        if (v51) {
          goto LABEL_45;
        }
LABEL_38:
        sub_251D06F34((uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
        goto LABEL_27;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v44, v46);
      char v6 = v80;
LABEL_26:
      sub_251A1B064((uint64_t)v6, &qword_26B21F0A0);
LABEL_27:
      uint64_t v41 = v84;
      sub_251D06F34(v84, type metadata accessor for StaticAccessory.DeviceIdentifier);
      v39 += v83;
      if (!--v37)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v65;
        a3 = v66;
        uint64_t v27 = v63;
        goto LABEL_41;
      }
    }
    uint64_t v53 = v79;
    sub_251D06E64((uint64_t)v6, (uint64_t)v79, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v54 = *v53;
    uint64_t v55 = v53[1];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    uint64_t v56 = *(void *)v42;
    uint64_t v57 = *((void *)v42 + 1);
    if (v54 != v56 || v55 != v57)
    {
      char v59 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v59) {
        goto LABEL_45;
      }
      goto LABEL_38;
    }
    swift_bridgeObjectRelease_n();
LABEL_45:
    sub_251D06F34((uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251D06F34(v84, type metadata accessor for StaticAccessory.DeviceIdentifier);
    swift_bridgeObjectRelease();
    sub_251D06F34(v85, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v9 = v65;
    a3 = v66;
    uint64_t v18 = v67;
    uint64_t v27 = v63;
    int64_t v22 = v74;
LABEL_5:
    uint64_t result = sub_251D06F34(v76, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    unint64_t v26 = v75;
  }
  uint64_t v32 = v22 + 4;
  if (v22 + 4 >= v70)
  {
LABEL_46:
    swift_retain();
    return sub_251F1CFC0(v62, v61[0], v68, a3);
  }
  unint64_t v30 = *(void *)(v69 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v22 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v70) {
      goto LABEL_46;
    }
    unint64_t v30 = *(void *)(v69 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_21;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_251D0BDD0(uint64_t a1)
{
  return sub_251D00ED0(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_251D0BDF4(uint64_t a1)
{
  return sub_251D01020(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_251D0BE14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a2;
  uint64_t v44 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F460);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StaticService();
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v56 = (uint64_t)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a3;
  uint64_t v50 = 0;
  int64_t v16 = 0;
  uint64_t v17 = *(void *)(a3 + 56);
  uint64_t v43 = a3 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v45 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v46 = a4;
  uint64_t v47 = a4 + 32;
  uint64_t v48 = v14;
  uint64_t v21 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  int64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if ((v19 & v17) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  while (2)
  {
    int64_t v26 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v26 >= v45) {
      goto LABEL_34;
    }
    unint64_t v27 = *(void *)(v43 + 8 * v26);
    ++v16;
    if (!v27)
    {
      int64_t v16 = v26 + 1;
      if (v26 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v16);
      if (!v27)
      {
        int64_t v16 = v26 + 2;
        if (v26 + 2 >= v45) {
          goto LABEL_34;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v16);
        if (!v27)
        {
          int64_t v28 = v26 + 3;
          if (v28 < v45)
          {
            unint64_t v27 = *(void *)(v43 + 8 * v28);
            if (v27)
            {
              int64_t v16 = v28;
              goto LABEL_22;
            }
            while (1)
            {
              int64_t v16 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                goto LABEL_37;
              }
              if (v16 >= v45) {
                break;
              }
              unint64_t v27 = *(void *)(v43 + 8 * v16);
              ++v28;
              if (v27) {
                goto LABEL_22;
              }
            }
          }
LABEL_34:
          uint64_t v40 = v49;
          swift_retain();
          return sub_251F1BD94(v44, v42, v50, v40);
        }
      }
    }
LABEL_22:
    unint64_t v20 = (v27 - 1) & v27;
    for (unint64_t i = __clz(__rbit64(v27)) + (v16 << 6); ; unint64_t i = v24 | (v16 << 6))
    {
      uint64_t v29 = *(void *)(v49 + 48);
      uint64_t v30 = *(void *)(v48 + 72);
      unint64_t v51 = i;
      uint64_t v54 = v30;
      sub_251D06E64(v29 + v30 * i, v56, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v31 = *(void *)(a4 + 16);
      if (!v31) {
        break;
      }
      unint64_t v52 = v20;
      int64_t v53 = v16;
      swift_bridgeObjectRetain();
      uint64_t v32 = v47;
      while (1)
      {
        sub_251A1A4EC(v32, (uint64_t)v55);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
        uint64_t v33 = type metadata accessor for StaticServiceGroup();
        int v34 = swift_dynamicCast();
        uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
        if (v34) {
          break;
        }
        v35(v8, 1, 1, v33);
        sub_251A1B064((uint64_t)v8, &qword_269B9F460);
        (*v21)(v11, 1, 1, v12);
LABEL_26:
        sub_251A1B064((uint64_t)v11, qword_26B21EE20);
        v32 += 40;
        if (!--v31)
        {
          a4 = v46;
          swift_bridgeObjectRelease();
          unint64_t v20 = v52;
          int64_t v16 = v53;
          goto LABEL_6;
        }
      }
      uint64_t v36 = 1;
      v35(v8, 0, 1, v33);
      uint64_t v37 = *(void *)&v8[*(int *)(v33 + 44)];
      swift_bridgeObjectRetain();
      sub_251D06F34((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      if (*(void *)(v37 + 16))
      {
        unint64_t v38 = sub_2519FE584(v56);
        if (v39)
        {
          sub_251D06E64(*(void *)(v37 + 56) + v38 * v54, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v36 = 0;
        }
      }
      (*v21)(v11, v36, 1, v12);
      swift_bridgeObjectRelease();
      if ((*v22)(v11, 1, v12) == 1) {
        goto LABEL_26;
      }
      sub_251A1B064((uint64_t)v11, qword_26B21EE20);
      a4 = v46;
      swift_bridgeObjectRelease();
      uint64_t result = sub_251D06F34(v56, (uint64_t (*)(void))type metadata accessor for StaticService);
      unint64_t v20 = v52;
      int64_t v16 = v53;
      if (!v52) {
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v24 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
    }
LABEL_6:
    uint64_t result = sub_251D06F34(v56, (uint64_t (*)(void))type metadata accessor for StaticService);
    *(unint64_t *)((char *)v44 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
    if (!__OFADD__(v50++, 1))
    {
      if (!v20) {
        continue;
      }
      goto LABEL_8;
    }
    break;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251D0C360(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a2;
  uint64_t v44 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StaticService();
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v56 = (uint64_t)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a3;
  uint64_t v50 = 0;
  int64_t v16 = 0;
  uint64_t v17 = *(void *)(a3 + 56);
  uint64_t v43 = a3 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v45 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v46 = a4;
  uint64_t v47 = a4 + 32;
  uint64_t v48 = v14;
  uint64_t v21 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  int64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if ((v19 & v17) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  while (2)
  {
    int64_t v26 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v26 >= v45) {
      goto LABEL_34;
    }
    unint64_t v27 = *(void *)(v43 + 8 * v26);
    ++v16;
    if (!v27)
    {
      int64_t v16 = v26 + 1;
      if (v26 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v16);
      if (!v27)
      {
        int64_t v16 = v26 + 2;
        if (v26 + 2 >= v45) {
          goto LABEL_34;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v16);
        if (!v27)
        {
          int64_t v28 = v26 + 3;
          if (v28 < v45)
          {
            unint64_t v27 = *(void *)(v43 + 8 * v28);
            if (v27)
            {
              int64_t v16 = v28;
              goto LABEL_22;
            }
            while (1)
            {
              int64_t v16 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                goto LABEL_37;
              }
              if (v16 >= v45) {
                break;
              }
              unint64_t v27 = *(void *)(v43 + 8 * v16);
              ++v28;
              if (v27) {
                goto LABEL_22;
              }
            }
          }
LABEL_34:
          uint64_t v40 = v49;
          swift_retain();
          return sub_251F1BD94(v44, v42, v50, v40);
        }
      }
    }
LABEL_22:
    unint64_t v20 = (v27 - 1) & v27;
    for (unint64_t i = __clz(__rbit64(v27)) + (v16 << 6); ; unint64_t i = v24 | (v16 << 6))
    {
      uint64_t v29 = *(void *)(v49 + 48);
      uint64_t v30 = *(void *)(v48 + 72);
      unint64_t v51 = i;
      uint64_t v54 = v30;
      sub_251D06E64(v29 + v30 * i, v56, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v31 = *(void *)(a4 + 16);
      if (!v31) {
        break;
      }
      unint64_t v52 = v20;
      int64_t v53 = v16;
      swift_bridgeObjectRetain();
      uint64_t v32 = v47;
      while (1)
      {
        sub_251A1A4EC(v32, (uint64_t)v55);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
        uint64_t v33 = type metadata accessor for StaticAccessory(0);
        int v34 = swift_dynamicCast();
        uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
        if (v34) {
          break;
        }
        v35(v8, 1, 1, v33);
        sub_251A1B064((uint64_t)v8, &qword_26B21F240);
        (*v21)(v11, 1, 1, v12);
LABEL_26:
        sub_251A1B064((uint64_t)v11, qword_26B21EE20);
        v32 += 40;
        if (!--v31)
        {
          a4 = v46;
          swift_bridgeObjectRelease();
          unint64_t v20 = v52;
          int64_t v16 = v53;
          goto LABEL_6;
        }
      }
      uint64_t v36 = 1;
      v35(v8, 0, 1, v33);
      uint64_t v37 = *(void *)&v8[*(int *)(v33 + 76)];
      swift_bridgeObjectRetain();
      sub_251D06F34((uint64_t)v8, type metadata accessor for StaticAccessory);
      if (*(void *)(v37 + 16))
      {
        unint64_t v38 = sub_2519FE584(v56);
        if (v39)
        {
          sub_251D06E64(*(void *)(v37 + 56) + v38 * v54, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v36 = 0;
        }
      }
      (*v21)(v11, v36, 1, v12);
      swift_bridgeObjectRelease();
      if ((*v22)(v11, 1, v12) == 1) {
        goto LABEL_26;
      }
      sub_251A1B064((uint64_t)v11, qword_26B21EE20);
      a4 = v46;
      swift_bridgeObjectRelease();
      uint64_t result = sub_251D06F34(v56, (uint64_t (*)(void))type metadata accessor for StaticService);
      unint64_t v20 = v52;
      int64_t v16 = v53;
      if (!v52) {
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v24 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
    }
LABEL_6:
    uint64_t result = sub_251D06F34(v56, (uint64_t (*)(void))type metadata accessor for StaticService);
    *(unint64_t *)((char *)v44 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
    if (!__OFADD__(v50++, 1))
    {
      if (!v20) {
        continue;
      }
      goto LABEL_8;
    }
    break;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251D0C8AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = a2;
  uint64_t v54 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E850);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for StaticService();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t result = MEMORY[0x270FA5388](v60);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a3;
  uint64_t v63 = 0;
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v55 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v56 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v59 = a4 + 32;
  uint64_t v69 = v8;
  uint64_t v58 = a4;
  uint64_t v57 = v11;
LABEL_6:
  while (v16)
  {
    unint64_t v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v18 = v17 | (v12 << 6);
LABEL_22:
    sub_251D06E64(*(void *)(v62 + 48) + *(void *)(v61 + 72) * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v22 = *(void *)(a4 + 16);
    if (!v22) {
      goto LABEL_36;
    }
    unint64_t v64 = v18;
    unint64_t v65 = v16;
    int64_t v66 = v12;
    int64_t v70 = &v11[*(int *)(v60 + 44)];
    swift_bridgeObjectRetain();
    uint64_t v23 = v59;
    do
    {
      uint64_t v74 = v22;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      unint64_t v78 = &v52;
      int64_t v26 = *(uint64_t **)(*(void *)(v25 - 8) + 64);
      MEMORY[0x270FA5388](v25 - 8);
      unint64_t v27 = (char *)&v52 - (((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1A4EC(v23, (uint64_t)v77);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
      uint64_t v28 = type metadata accessor for StaticMediaProfile();
      int v29 = swift_dynamicCast();
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
      uint64_t v73 = v23;
      if (v29)
      {
        v30(v8, 0, 1, v28);
        uint64_t v31 = &v8[*(int *)(v28 + 56)];
        uint64_t v32 = sub_251F34DA0();
        uint64_t v33 = *(void *)(v32 - 8);
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))((char *)&v52 - (((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v32);
        sub_251D06F34((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        uint64_t v34 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v33 + 56))((char *)&v52 - (((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v32);
      }
      else
      {
        v30(v8, 1, 1, v28);
        sub_251A1B064((uint64_t)v8, &qword_26B21E850);
        uint64_t v32 = sub_251F34DA0();
        uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))((char *)&v52 - (((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v32);
      }
      uint64_t v76 = &v52;
      MEMORY[0x270FA5388](v34);
      unint64_t v71 = v26;
      unint64_t v72 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v35 = (char *)&v52 - v72;
      sub_251F34DA0();
      uint64_t v36 = *(void *)(v32 - 8);
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v35, v70, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v35, 0, 1, v32);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
      uint64_t v75 = &v52;
      uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
      uint64_t v40 = (char *)&v52 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v41 = (uint64_t)&v40[*(int *)(v38 + 56)];
      sub_251A1B128((uint64_t)v27, (uint64_t)v40, &qword_26B21FF90);
      sub_251A1B128((uint64_t)v35, v41, &qword_26B21FF90);
      uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
      uint64_t v43 = v42(v40, 1, v32);
      if (v43 == 1)
      {
        sub_251A1B064((uint64_t)v35, &qword_26B21FF90);
        sub_251A1B064((uint64_t)v27, &qword_26B21FF90);
        int v24 = v42((char *)v41, 1, v32);
        uint64_t v8 = v69;
        if (v24 == 1)
        {
          sub_251A1B064((uint64_t)v40, &qword_26B21FF90);
LABEL_5:
          a4 = v58;
          swift_bridgeObjectRelease();
          uint64_t v11 = v57;
          uint64_t result = sub_251D06F34((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for StaticService);
          unint64_t v16 = v65;
          int64_t v12 = v66;
          goto LABEL_6;
        }
        goto LABEL_25;
      }
      uint64_t v68 = v27;
      MEMORY[0x270FA5388](v43);
      unint64_t v72 = (unint64_t)&v52 - v72;
      sub_251A1B128((uint64_t)v40, v72, &qword_26B21FF90);
      uint64_t v44 = v42((char *)v41, 1, v32);
      if (v44 == 1)
      {
        sub_251A1B064((uint64_t)v35, &qword_26B21FF90);
        sub_251A1B064((uint64_t)v68, &qword_26B21FF90);
        (*(void (**)(unint64_t, uint64_t))(v36 + 8))(v72, v32);
        uint64_t v8 = v69;
LABEL_25:
        sub_251A1B064((uint64_t)v40, &qword_26B21E6B8);
        goto LABEL_26;
      }
      unint64_t v71 = &v52;
      MEMORY[0x270FA5388](v44);
      uint64_t v67 = &v52;
      uint64_t v46 = (char *)&v52 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v46, v41, v32);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      unint64_t v47 = v72;
      char v48 = sub_251F35650();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v36 + 8);
      v49(v46, v32);
      sub_251A1B064((uint64_t)v35, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v68, &qword_26B21FF90);
      v49((char *)v47, v32);
      sub_251A1B064((uint64_t)v40, &qword_26B21FF90);
      uint64_t v8 = v69;
      if (v48) {
        goto LABEL_5;
      }
LABEL_26:
      uint64_t v23 = v73 + 40;
      uint64_t v22 = v74 - 1;
    }
    while (v74 != 1);
    a4 = v58;
    swift_bridgeObjectRelease();
    uint64_t v11 = v57;
    unint64_t v16 = v65;
    int64_t v12 = v66;
    unint64_t v18 = v64;
LABEL_36:
    uint64_t result = sub_251D06F34((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    *(unint64_t *)((char *)v54 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    if (__OFADD__(v63++, 1))
    {
      __break(1u);
LABEL_39:
      uint64_t v51 = v62;
      swift_retain();
      return sub_251F1BD94(v54, v53, v63, v51);
    }
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v19 >= v56) {
    goto LABEL_39;
  }
  unint64_t v20 = *(void *)(v55 + 8 * v19);
  ++v12;
  if (v20) {
    goto LABEL_21;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 1 >= v56) {
    goto LABEL_39;
  }
  unint64_t v20 = *(void *)(v55 + 8 * v12);
  if (v20) {
    goto LABEL_21;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 2 >= v56) {
    goto LABEL_39;
  }
  unint64_t v20 = *(void *)(v55 + 8 * v12);
  if (v20)
  {
LABEL_21:
    unint64_t v16 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_22;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v56) {
    goto LABEL_39;
  }
  unint64_t v20 = *(void *)(v55 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v56) {
      goto LABEL_39;
    }
    unint64_t v20 = *(void *)(v55 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_21;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251D0D1FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  v15[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v13, v9, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x2533AC760](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

BOOL sub_251D0D3D4(uint64_t a1)
{
  return sub_251D01238(a1, *(void *)(v1 + 16));
}

uint64_t sub_251D0D3F4()
{
  return sub_251D06B90(&qword_269BA2610, (void (*)(uint64_t))type metadata accessor for StaticRoom);
}

uint64_t sub_251D0D43C()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251D0D464()
{
  return sub_251D06B90(&qword_269BA2618, (void (*)(uint64_t))type metadata accessor for RoomType);
}

char *initializeBufferWithCopyOfBuffer for StaticRoom(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    unsigned int v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    a1[v10] = a2[v10];
    uint64_t v14 = a3[8];
    *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
    uint64_t v15 = &a1[v14];
    unint64_t v16 = &a2[v14];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v15, v16, v7);
    uint64_t v17 = a3[10];
    *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
    *(void *)&a1[v17] = *(void *)&a2[v17];
    uint64_t v18 = a3[12];
    *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
    *(void *)&a1[v18] = *(void *)&a2[v18];
    uint64_t v19 = a3[14];
    *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
    *(void *)&a1[v19] = *(void *)&a2[v19];
    uint64_t v20 = a3[16];
    *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
    *(void *)&a1[v20] = *(void *)&a2[v20];
    uint64_t v21 = a3[18];
    *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
    *(void *)&a1[v21] = *(void *)&a2[v21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticRoom(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticRoom(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticRoom(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[8], a2 + a3[8], v6);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticRoom(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v10 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for StaticRoom(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRelease();
  v7(a1 + a3[8], a2 + a3[8], v6);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticRoom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D0DE14);
}

uint64_t sub_251D0DE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticRoom(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D0DEEC);
}

uint64_t sub_251D0DEEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251D0DFAC()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RoomType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = (int *)type metadata accessor for StaticRoom(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      v11((char *)a1, (char *)a2, v10);
      uint64_t v12 = v7[5];
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v15;
      *((unsigned char *)a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      uint64_t v16 = v7[8];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11(v17, v18, v10);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      *(uint64_t *)((char *)a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
      *(uint64_t *)((char *)a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *(uint64_t *)((char *)a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
      *(uint64_t *)((char *)a1 + v7[16]) = *(uint64_t *)((char *)a2 + v7[16]);
      *(uint64_t *)((char *)a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
      *(uint64_t *)((char *)a1 + v7[18]) = *(uint64_t *)((char *)a2 + v7[18]);
      uint64_t v20 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t destroy for RoomType(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 4, v2);
  if (!result)
  {
    uint64_t v4 = sub_251F34DA0();
    int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(a1 + *(int *)(v2 + 32), v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for RoomType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    uint64_t v10 = v6[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    a1[v6[6]] = a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    uint64_t v14 = v6[8];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9(v15, v16, v8);
    *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
    *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
    *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
    *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
    *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
    *(void *)&a1[v6[14]] = *(void *)&a2[v6[14]];
    *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
    *(void *)&a1[v6[16]] = *(void *)&a2[v6[16]];
    *(void *)&a1[v6[17]] = *(void *)&a2[v6[17]];
    *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
    uint64_t v18 = *(void (**)(char *, void, uint64_t, int *))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(a1, 0, 4, v6);
  }
  return a1;
}

unsigned char *assignWithCopy for RoomType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v20 = sub_251F34DA0();
      uint64_t v21 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 24);
      v21(a1, a2, v20);
      uint64_t v22 = v6[5];
      uint64_t v23 = &a1[v22];
      int v24 = &a2[v22];
      *uint64_t v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[v6[6]] = a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v21(&a1[v6[8]], &a2[v6[8]], v20);
      *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[14]] = *(void *)&a2[v6[14]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[16]] = *(void *)&a2[v6[16]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[17]] = *(void *)&a2[v6[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_251D06F34((uint64_t)a1, type metadata accessor for StaticRoom);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_251F34DA0();
  uint64_t v26 = v7;
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(a1, a2, v11);
  uint64_t v13 = v6[5];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  a1[v6[6]] = a2[v6[6]];
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  uint64_t v16 = v6[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v17, v18, v11);
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
  *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
  *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
  *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
  *(void *)&a1[v6[14]] = *(void *)&a2[v6[14]];
  *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
  *(void *)&a1[v6[16]] = *(void *)&a2[v6[16]];
  *(void *)&a1[v6[17]] = *(void *)&a2[v6[17]];
  *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
  uint64_t v25 = *(void (**)(unsigned char *, void, uint64_t, int *))(v26 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(a1, 0, 4, v6);
  return a1;
}

char *initializeWithTake for RoomType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_251F34DA0();
    int v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    v9(&a1[v6[8]], &a2[v6[8]], v8);
    *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
    *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
    *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
    *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
    *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
    *(void *)&a1[v6[14]] = *(void *)&a2[v6[14]];
    *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
    *(void *)&a1[v6[16]] = *(void *)&a2[v6[16]];
    *(void *)&a1[v6[17]] = *(void *)&a2[v6[17]];
    *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

unsigned char *assignWithTake for RoomType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v14 = sub_251F34DA0();
      uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 40);
      v15(a1, a2, v14);
      uint64_t v16 = v6[5];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = (uint64_t *)&a2[v16];
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      *uint64_t v17 = v20;
      v17[1] = v19;
      swift_bridgeObjectRelease();
      a1[v6[6]] = a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      swift_bridgeObjectRelease();
      v15(&a1[v6[8]], &a2[v6[8]], v14);
      *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[14]] = *(void *)&a2[v6[14]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[16]] = *(void *)&a2[v6[16]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[17]] = *(void *)&a2[v6[17]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_251D06F34((uint64_t)a1, type metadata accessor for StaticRoom);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(a1, a2, v11);
  *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
  a1[v6[6]] = a2[v6[6]];
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  v12(&a1[v6[8]], &a2[v6[8]], v11);
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
  *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
  *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
  *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
  *(void *)&a1[v6[14]] = *(void *)&a2[v6[14]];
  *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
  *(void *)&a1[v6[16]] = *(void *)&a2[v6[16]];
  *(void *)&a1[v6[17]] = *(void *)&a2[v6[17]];
  *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D0F150);
}

uint64_t sub_251D0F150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5) {
    return v5 - 4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RoomType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D0F1D0);
}

uint64_t sub_251D0F1D0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 4);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for StaticRoom(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_251D0F254(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 4, v2);
}

uint64_t sub_251D0F2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 4, v4);
}

uint64_t sub_251D0F32C()
{
  uint64_t result = type metadata accessor for StaticRoom(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticRoom.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StaticRoom.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D0F500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRoom.CodingKeys()
{
  return &type metadata for StaticRoom.CodingKeys;
}

unint64_t sub_251D0F53C()
{
  unint64_t result = qword_269BA2630;
  if (!qword_269BA2630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2630);
  }
  return result;
}

unint64_t sub_251D0F594()
{
  unint64_t result = qword_269BA2638;
  if (!qword_269BA2638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2638);
  }
  return result;
}

unint64_t sub_251D0F5EC()
{
  unint64_t result = qword_269BA2640;
  if (!qword_269BA2640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2640);
  }
  return result;
}

uint64_t sub_251D0F640(uint64_t a1)
{
  return sub_251D00D9C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_251D0F660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D0F6C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_251D03278(*(void *)(v1 + 16), a1);
}

uint64_t sub_251D0F6E0()
{
  return sub_251F34D70() & 1;
}

uint64_t StaticDeviceMetadata.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticDeviceMetadata.manufacturer.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for StaticDeviceMetadata()
{
  uint64_t result = qword_26B21FDD0;
  if (!qword_26B21FDD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticDeviceMetadata.model.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticDeviceMetadata.serialNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticDeviceMetadata.firmwareVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticDeviceMetadata.isMatter.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 36));
}

uint64_t StaticDeviceMetadata.isCertified.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 40));
}

uint64_t StaticDeviceMetadata.isMFICertifiedACWG.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 44));
}

uint64_t StaticDeviceMetadata.supportsUWBUnlock.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 48));
}

void sub_251D0F984(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_251F34D80();

  id v5 = objc_msgSend(a1, sel_manufacturer);
  if (v5)
  {
    unsigned int v6 = v5;
    uint64_t v7 = sub_251F356F0();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  int v10 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v11 = (uint64_t *)(a2 + v10[5]);
  uint64_t *v11 = v7;
  v11[1] = v9;
  id v12 = objc_msgSend(a1, sel_model);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_251F356F0();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  uint64_t v17 = (uint64_t *)(a2 + v10[6]);
  *uint64_t v17 = v14;
  v17[1] = v16;
  id v18 = objc_msgSend(a1, sel_serialNumber);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_251F356F0();
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v22 = 0;
  }
  uint64_t v23 = (uint64_t *)(a2 + v10[7]);
  *uint64_t v23 = v20;
  v23[1] = v22;
  id v24 = objc_msgSend(a1, sel_firmwareVersion);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = sub_251F356F0();
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v28 = 0;
  }
  int v29 = (uint64_t *)(a2 + v10[8]);
  uint64_t *v29 = v26;
  v29[1] = v28;
  *(unsigned char *)(a2 + v10[9]) = objc_msgSend(a1, sel_supportsCHIP);
  *(unsigned char *)(a2 + v10[10]) = objc_msgSend(a1, sel_certificationStatus) == (id)2;
  *(unsigned char *)(a2 + v10[11]) = objc_msgSend(a1, sel_mfiCertifiedACWG);
  unsigned __int8 v30 = objc_msgSend(a1, sel_supportsUWBUnlock);

  *(unsigned char *)(a2 + v10[12]) = v30;
}

uint64_t StaticDeviceMetadata.hash(into:)()
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v1 = (int *)type metadata accessor for StaticDeviceMetadata();
  if (*(void *)(v0 + v1[5] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if (*(void *)(v0 + v1[6] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if (*(void *)(v0 + v1[7] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if (*(void *)(v0 + v1[8] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  return sub_251F36CC0();
}

unint64_t sub_251D0FD60(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74636166756E616DLL;
      break;
    case 2:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 3:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 4:
      unint64_t result = 0x657261776D726966;
      break;
    case 5:
      unint64_t result = 0x72657474614D7369;
      break;
    case 6:
      unint64_t result = 0x6669747265437369;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251D0FEA0()
{
  return sub_251D0FD60(*v0);
}

uint64_t sub_251D0FEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D11C5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D0FED0(uint64_t a1)
{
  unint64_t v2 = sub_251D1103C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D0FF0C(uint64_t a1)
{
  unint64_t v2 = sub_251D1103C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticDeviceMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2648);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D1103C();
  sub_251F36DA0();
  v8[15] = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v1)
  {
    type metadata accessor for StaticDeviceMetadata();
    v8[14] = 1;
    sub_251F36910();
    v8[13] = 2;
    sub_251F36910();
    v8[12] = 3;
    sub_251F36910();
    v8[11] = 4;
    sub_251F36910();
    v8[10] = 5;
    sub_251F369E0();
    v8[9] = 6;
    sub_251F369E0();
    v8[8] = 7;
    sub_251F369E0();
    v8[7] = 8;
    sub_251F369E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticDeviceMetadata.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticDeviceMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2658);
  uint64_t v5 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for StaticDeviceMetadata();
  MEMORY[0x270FA5388](v35);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D1103C();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v31 = a2;
  uint64_t v32 = v5;
  uint64_t v33 = a1;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v44 = 0;
  sub_251A1A8EC(&qword_269B9CC80);
  sub_251F36880();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v13, v10);
  char v43 = 1;
  uint64_t v14 = sub_251F36790();
  uint64_t v16 = (int *)v35;
  uint64_t v17 = (uint64_t *)&v9[*(int *)(v35 + 20)];
  *uint64_t v17 = v14;
  v17[1] = v18;
  char v42 = 2;
  uint64_t v19 = sub_251F36790();
  uint64_t v20 = v32;
  uint64_t v21 = (uint64_t)v33;
  uint64_t v22 = (uint64_t *)&v9[v16[6]];
  uint64_t *v22 = v19;
  v22[1] = v23;
  char v41 = 3;
  uint64_t v24 = sub_251F36790();
  uint64_t v25 = (uint64_t *)&v9[v16[7]];
  *uint64_t v25 = v24;
  v25[1] = v26;
  char v40 = 4;
  uint64_t v27 = sub_251F36790();
  uint64_t v28 = (uint64_t *)&v9[v16[8]];
  uint64_t *v28 = v27;
  v28[1] = v29;
  char v39 = 5;
  v9[v16[9]] = sub_251F36840() & 1;
  char v38 = 6;
  v9[v16[10]] = sub_251F36840() & 1;
  char v37 = 7;
  v9[v16[11]] = sub_251F36840() & 1;
  char v36 = 8;
  char v30 = sub_251F36840();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v34);
  v9[v16[12]] = v30 & 1;
  sub_251D11090((uint64_t)v9, v31);
  __swift_destroy_boxed_opaque_existential_0(v21);
  return sub_251D110F4((uint64_t)v9);
}

uint64_t sub_251D10834()
{
  return sub_251F36D00();
}

uint64_t sub_251D10878()
{
  return sub_251F36D00();
}

uint64_t sub_251D108B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticDeviceMetadata.init(from:)(a1, a2);
}

uint64_t sub_251D108CC(void *a1)
{
  return StaticDeviceMetadata.encode(to:)(a1);
}

uint64_t StaticDeviceMetadata.copyReplacing(id:manufacturer:model:serialNumber:firmwareVersion:isMatter:isCertified:isMFICertifiedACWG:supportsUWBUnlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13, char a14)
{
  uint64_t v15 = v14;
  uint64_t v93 = a6;
  uint64_t v94 = a8;
  uint64_t v87 = a7;
  uint64_t v79 = a3;
  uint64_t v80 = a5;
  uint64_t v91 = a2;
  uint64_t v92 = a4;
  uint64_t v84 = a1;
  uint64_t v17 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v90 = (uint64_t)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v82 = (char *)&v79 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v83 = (char *)&v79 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v88 = (uint64_t)&v79 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v86 = (char *)&v79 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v85 = (uint64_t)&v79 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v79 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v35 = (char *)&v79 - v34;
  MEMORY[0x270FA5388](v33);
  char v37 = (char *)&v79 - v36;
  uint64_t v38 = sub_251F34DA0();
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  char v41 = (char *)&v79 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v42 - 8);
  char v44 = (char *)&v79 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v84, (uint64_t)v44);
  sub_251D11090(v15, (uint64_t)v37);
  int v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v44, 1, v38);
  uint64_t v81 = v38;
  uint64_t v89 = v41;
  if (v45 == 1)
  {
    uint64_t v46 = v41;
    uint64_t v47 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v46, v37, v38);
    sub_251D110F4((uint64_t)v37);
    sub_251B55B48((uint64_t)v44);
  }
  else
  {
    sub_251D110F4((uint64_t)v37);
    char v48 = v41;
    uint64_t v47 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v48, v44, v38);
  }
  uint64_t v49 = (uint64_t)v83;
  uint64_t v51 = v79;
  uint64_t v50 = v80;
  sub_251D11090(v15, (uint64_t)v35);
  uint64_t v52 = v51;
  if (!v51)
  {
    uint64_t v91 = *(void *)&v35[v17[5]];
    uint64_t v52 = swift_bridgeObjectRetain();
  }
  uint64_t v80 = v52;
  swift_bridgeObjectRetain();
  sub_251D110F4((uint64_t)v35);
  sub_251D11090(v15, (uint64_t)v32);
  uint64_t v53 = v50;
  uint64_t v54 = v47;
  if (!v50)
  {
    uint64_t v92 = *(void *)&v32[v17[6]];
    uint64_t v53 = swift_bridgeObjectRetain();
  }
  uint64_t v84 = v53;
  swift_bridgeObjectRetain();
  sub_251D110F4((uint64_t)v32);
  uint64_t v55 = v85;
  sub_251D11090(v15, v85);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v87;
  if (!v87)
  {
    uint64_t v93 = *(void *)(v55 + v17[7]);
    uint64_t v57 = swift_bridgeObjectRetain();
  }
  uint64_t v83 = (char *)v57;
  swift_bridgeObjectRetain();
  sub_251D110F4(v55);
  sub_251D11090(v15, v56);
  uint64_t v58 = a10;
  if (!a10)
  {
    uint64_t v59 = (uint64_t *)(v56 + v17[8]);
    uint64_t v58 = v59[1];
    uint64_t v94 = *v59;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D110F4(v56);
  uint64_t v60 = v88;
  sub_251D11090(v15, v88);
  if (a11 == 2) {
    int v61 = *(unsigned __int8 *)(v60 + v17[9]);
  }
  else {
    int v61 = a11 & 1;
  }
  LODWORD(v87) = v61;
  uint64_t v62 = v60;
  uint64_t v63 = v80;
  sub_251D110F4(v62);
  sub_251D11090(v15, v49);
  if (a12 == 2) {
    char v64 = *(unsigned char *)(v49 + v17[10]);
  }
  else {
    char v64 = a12 & 1;
  }
  uint64_t v65 = (uint64_t)v82;
  sub_251D110F4(v49);
  sub_251D11090(v15, v65);
  if (a13 == 2) {
    char v66 = *(unsigned char *)(v65 + v17[11]);
  }
  else {
    char v66 = a13 & 1;
  }
  sub_251D110F4(v65);
  uint64_t v67 = v90;
  sub_251D11090(v15, v90);
  if (a14 == 2) {
    char v68 = *(unsigned char *)(v67 + v17[12]);
  }
  else {
    char v68 = a14 & 1;
  }
  uint64_t v69 = v91;
  uint64_t v70 = v67;
  uint64_t v71 = v81;
  sub_251D110F4(v70);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v54 + 32))(a9, v89, v71);
  uint64_t v73 = (void *)(a9 + v17[5]);
  void *v73 = v69;
  v73[1] = v63;
  uint64_t v74 = (void *)(a9 + v17[6]);
  uint64_t v75 = v84;
  void *v74 = v92;
  v74[1] = v75;
  uint64_t v76 = (void *)(a9 + v17[7]);
  uint64_t v77 = v83;
  *uint64_t v76 = v93;
  v76[1] = v77;
  unint64_t v78 = (void *)(a9 + v17[8]);
  void *v78 = v94;
  v78[1] = v58;
  *(unsigned char *)(a9 + v17[9]) = v87;
  *(unsigned char *)(a9 + v17[10]) = v64;
  *(unsigned char *)(a9 + v17[11]) = v66;
  *(unsigned char *)(a9 + v17[12]) = v68;
  return result;
}

uint64_t _s13HomeDataModel20StaticDeviceMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    goto LABEL_39;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v5 = v4[5];
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  uint64_t v9 = v8[1];
  if (v7)
  {
    if (!v9) {
      goto LABEL_39;
    }
    if (*v6 != *v8 || v7 != v9)
    {
      char v11 = sub_251F36B10();
      char v12 = 0;
      if ((v11 & 1) == 0) {
        return v12 & 1;
      }
    }
  }
  else if (v9)
  {
    goto LABEL_39;
  }
  uint64_t v13 = v4[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = *(void *)(a1 + v13 + 8);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  if (v15)
  {
    if (!v17) {
      goto LABEL_39;
    }
    if (*v14 != *v16 || v15 != v17)
    {
      char v19 = sub_251F36B10();
      char v12 = 0;
      if ((v19 & 1) == 0) {
        return v12 & 1;
      }
    }
  }
  else if (v17)
  {
    goto LABEL_39;
  }
  uint64_t v20 = v4[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = *(void *)(a1 + v20 + 8);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  if (v22)
  {
    if (!v24) {
      goto LABEL_39;
    }
    if (*v21 != *v23 || v22 != v24)
    {
      char v26 = sub_251F36B10();
      char v12 = 0;
      if ((v26 & 1) == 0) {
        return v12 & 1;
      }
    }
  }
  else if (v24)
  {
    goto LABEL_39;
  }
  uint64_t v27 = v4[8];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = *(void *)(a1 + v27 + 8);
  uint64_t v30 = (void *)(a2 + v27);
  uint64_t v31 = v30[1];
  if (!v29)
  {
    if (!v31) {
      goto LABEL_36;
    }
LABEL_39:
    char v12 = 0;
    return v12 & 1;
  }
  if (!v31) {
    goto LABEL_39;
  }
  if (*v28 == *v30 && v29 == v31 || (v32 = sub_251F36B10(), char v12 = 0, (v32 & 1) != 0))
  {
LABEL_36:
    if (*(unsigned __int8 *)(a1 + v4[9]) == *(unsigned __int8 *)(a2 + v4[9])
      && *(unsigned __int8 *)(a1 + v4[10]) == *(unsigned __int8 *)(a2 + v4[10])
      && *(unsigned __int8 *)(a1 + v4[11]) == *(unsigned __int8 *)(a2 + v4[11]))
    {
      char v12 = *(unsigned char *)(a1 + v4[12]) ^ *(unsigned char *)(a2 + v4[12]) ^ 1;
      return v12 & 1;
    }
    goto LABEL_39;
  }
  return v12 & 1;
}

unint64_t sub_251D1103C()
{
  unint64_t result = qword_269BA2650;
  if (!qword_269BA2650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2650);
  }
  return result;
}

uint64_t sub_251D11090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D110F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_251D11154()
{
  unint64_t result = qword_269BA2660;
  if (!qword_269BA2660)
  {
    type metadata accessor for StaticDeviceMetadata();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2660);
  }
  return result;
}

uint64_t sub_251D111AC()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

void *initializeBufferWithCopyOfBuffer for StaticDeviceMetadata(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    char v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)((char *)a1 + v16);
    char v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (void *)((char *)a1 + v17);
    uint64_t v22 = (void *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
    uint64_t v25 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticDeviceMetadata(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticDeviceMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticDeviceMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for StaticDeviceMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  return a1;
}

uint64_t assignWithTake for StaticDeviceMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticDeviceMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D11800);
}

uint64_t sub_251D11800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticDeviceMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D118E4);
}

uint64_t sub_251D118E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_251D119A4()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticDeviceMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D11B1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticDeviceMetadata.CodingKeys()
{
  return &type metadata for StaticDeviceMetadata.CodingKeys;
}

unint64_t sub_251D11B58()
{
  unint64_t result = qword_269BA2668;
  if (!qword_269BA2668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2668);
  }
  return result;
}

unint64_t sub_251D11BB0()
{
  unint64_t result = qword_269BA2670;
  if (!qword_269BA2670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2670);
  }
  return result;
}

unint64_t sub_251D11C08()
{
  unint64_t result = qword_269BA2678;
  if (!qword_269BA2678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2678);
  }
  return result;
}

uint64_t sub_251D11C5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74636166756E616DLL && a2 == 0xEC00000072657275 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657261776D726966 && a2 == 0xEF6E6F6973726556 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x72657474614D7369 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6669747265437369 && a2 == 0xEB00000000646569 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F70740 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F70760)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_251D12054()
{
  id v1 = objc_msgSend(*v0, sel_name);
  uint64_t v2 = sub_251F356F0();

  return v2;
}

uint64_t Collection<>.sortedByName.getter()
{
  return sub_251F35970();
}

BOOL sub_251D12104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6 = *(void (**)(uint64_t, uint64_t))(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6(AssociatedTypeWitness, a5);
  v6(AssociatedTypeWitness, a5);
  sub_251AE13EC();
  uint64_t v8 = sub_251F36220();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 == -1;
}

BOOL sub_251D121F4(uint64_t a1, uint64_t a2)
{
  return sub_251D12104(a1, a2, v2[2], v2[3], v2[4]);
}

void HMHome.id.getter()
{
  id v1 = objc_msgSend(v0, sel_uniqueIdentifier);
  sub_251F34D80();
}

void sub_251D1227C()
{
  id v1 = objc_msgSend(*v0, sel_uniqueIdentifier);
  sub_251F34D80();
}

uint64_t Collection<>.sorted(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  v15[5] = a5;
  v15[6] = a6;
  v15[7] = a7;
  v15[8] = KeyPath;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v26 = sub_251D12548;
  uint64_t v27 = v15;
  uint64_t v16 = *(void *)(a3 + 8);
  swift_retain();
  uint64_t v17 = Sequence<>.sortedMatching<A>(ids:fallback:)(a1, (uint64_t)sub_251D12574, (uint64_t)v19, a2, MEMORY[0x263F8D310], v16, MEMORY[0x263F8D330], a6, a7);
  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_251D12408@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + a1 - 24);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = v5(AssociatedTypeWitness, v4);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_251D12480()
{
  return 48;
}

__n128 sub_251D1248C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_251D124A4@<X0>(uint64_t *a1@<X8>)
{
  sub_251AE13EC();
  uint64_t result = sub_251F36200();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_251D124F0()
{
  return 48;
}

__n128 sub_251D124FC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_251D12510()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_251D12548()
{
  swift_getAtKeyPath();
  return v1;
}

uint64_t sub_251D12574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 64))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t dispatch thunk of SortableByName.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SortableByIdentity.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t AnyTileInfoBearer.staticActionSet.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D1801C((uint64_t (*)(void))type metadata accessor for StaticActionSet, a1);
}

uint64_t AnyTileInfoBearer.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  v25[1] = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF10);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (uint64_t **)((char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v19 = (char *)a4 + *(int *)(v16 + 32);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a2);
  char v21 = swift_dynamicCast();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v21)
  {
    v22(v10, 0, 1, v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, a2);
    sub_251D18588((uint64_t)v10, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
    uint64_t v23 = *v18;
    swift_retain();
    uint64_t result = sub_251D1D464((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
    a2 = v14;
  }
  else
  {
    v22(v10, 1, 1, v14);
    sub_251A1B064((uint64_t)v10, &qword_269B9EF10);
    type metadata accessor for AnyTileInfoBearer.TileStorage();
    swift_allocObject();
    uint64_t v23 = sub_251D183D4(a1);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, a2);
  }
  *a4 = v23;
  a4[1] = (uint64_t *)a2;
  return result;
}

uint64_t AnyTileInfoBearer.id.getter()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_251F36420();
}

uint64_t AnyTileInfoBearer.name.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t AnyTileInfoBearer.staticAccessory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D1801C(type metadata accessor for StaticAccessory, a1);
}

uint64_t AnyTileInfoBearer.staticService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D1801C((uint64_t (*)(void))type metadata accessor for StaticService, a1);
}

uint64_t AnyTileInfoBearer.staticServiceGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D1801C((uint64_t (*)(void))type metadata accessor for StaticServiceGroup, a1);
}

uint64_t AnyTileInfoBearer.StorageBase.storage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251A1A4EC(v1 + 16, a1);
}

uint64_t _s13HomeDataModel17AnyTileInfoBearerV11StorageBaseCfd_0()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t _s13HomeDataModel17AnyTileInfoBearerV11StorageBaseCfD_0()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_251D12A44(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2870);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2878);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x270FA5388](v5);
  char v44 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2880);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v7);
  char v41 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2888);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v38 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2890);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2898);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA28A0);
  uint64_t v32 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA28A8);
  uint64_t v31 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  char v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA28B0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v51 = v22;
  uint64_t v52 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D21B30();
  sub_251F36DA0();
  switch((char)v50)
  {
    case 1:
      char v54 = 1;
      sub_251D21D7C();
      uint64_t v26 = v51;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 2:
      char v55 = 2;
      sub_251D21D28();
      uint64_t v26 = v51;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 3:
      char v56 = 3;
      sub_251D21CD4();
      uint64_t v27 = v35;
      uint64_t v26 = v51;
      sub_251F36900();
      uint64_t v29 = v36;
      uint64_t v28 = v37;
      goto LABEL_10;
    case 4:
      char v57 = 4;
      sub_251D21C80();
      uint64_t v27 = v38;
      uint64_t v26 = v51;
      sub_251F36900();
      uint64_t v29 = v39;
      uint64_t v28 = v40;
      goto LABEL_10;
    case 5:
      char v58 = 5;
      sub_251D21C2C();
      uint64_t v27 = v41;
      uint64_t v26 = v51;
      sub_251F36900();
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      goto LABEL_10;
    case 6:
      char v59 = 6;
      sub_251D21BD8();
      uint64_t v27 = v44;
      uint64_t v26 = v51;
      sub_251F36900();
      uint64_t v29 = v45;
      uint64_t v28 = v46;
      goto LABEL_10;
    case 7:
      char v60 = 7;
      sub_251D21B84();
      uint64_t v27 = v47;
      uint64_t v26 = v51;
      sub_251F36900();
      uint64_t v29 = v48;
      uint64_t v28 = v49;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      break;
    default:
      char v53 = 0;
      sub_251D21DD0();
      uint64_t v26 = v51;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v19);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
}

uint64_t sub_251D131B8(uint64_t a1)
{
  unint64_t v2 = sub_251D21DD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D131F4(uint64_t a1)
{
  unint64_t v2 = sub_251D21DD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D13230(uint64_t a1)
{
  unint64_t v2 = sub_251D21C80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D1326C(uint64_t a1)
{
  unint64_t v2 = sub_251D21C80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D132A8(uint64_t a1)
{
  unint64_t v2 = sub_251D21CD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D132E4(uint64_t a1)
{
  unint64_t v2 = sub_251D21CD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D13320()
{
  uint64_t result = 0x726F737365636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65636976726573;
      break;
    case 2:
      uint64_t result = 0x4765636976726573;
      break;
    case 3:
      uint64_t result = 0x72506172656D6163;
      break;
    case 4:
      uint64_t result = 0x65536E6F69746361;
      break;
    case 5:
      uint64_t result = 0x737953616964656DLL;
      break;
    case 6:
      uint64_t result = 0x6F7250616964656DLL;
      break;
    case 7:
      uint64_t result = 0x634172657474616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D1345C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D20D08(a1, a2);
  *a3 = result;
  return result;
}

void sub_251D13484(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_251D13490(uint64_t a1)
{
  unint64_t v2 = sub_251D21B30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D134CC(uint64_t a1)
{
  unint64_t v2 = sub_251D21B30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D13508(uint64_t a1)
{
  unint64_t v2 = sub_251D21B84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D13544(uint64_t a1)
{
  unint64_t v2 = sub_251D21B84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D13580(uint64_t a1)
{
  unint64_t v2 = sub_251D21BD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D135BC(uint64_t a1)
{
  unint64_t v2 = sub_251D21BD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D135F8(uint64_t a1)
{
  unint64_t v2 = sub_251D21C2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D13634(uint64_t a1)
{
  unint64_t v2 = sub_251D21C2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D13670(uint64_t a1)
{
  unint64_t v2 = sub_251D21D7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D136AC(uint64_t a1)
{
  unint64_t v2 = sub_251D21D7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D136E8(uint64_t a1)
{
  unint64_t v2 = sub_251D21D28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D13724(uint64_t a1)
{
  unint64_t v2 = sub_251D21D28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D13760@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_251D210F8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_251D1378C(void *a1)
{
  return sub_251D12A44(a1, *v1);
}

uint64_t sub_251D137A8()
{
  return 0x6F666E49656C6974;
}

uint64_t sub_251D137D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D21A2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D13800(uint64_t a1)
{
  unint64_t v2 = sub_251D184E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D1383C(uint64_t a1)
{
  unint64_t v2 = sub_251D184E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AnyTileInfoBearer.tileInfo.getter()
{
  return swift_retain();
}

uint64_t type metadata accessor for AnyTileInfoBearer()
{
  uint64_t result = qword_269BA2728;
  if (!qword_269BA2728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AnyTileInfoBearer.TileStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AnyTileInfoBearer.init<A>(erasing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  AnyTileInfoBearer.init<A>(_:)((uint64_t)v10, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
}

uint64_t AnyTileInfoBearer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v118 = type metadata accessor for StaticMatterDevice();
  uint64_t v3 = MEMORY[0x270FA5388](v118);
  uint64_t v104 = (uint64_t)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v117 = (char *)&v94 - v5;
  uint64_t v116 = type metadata accessor for StaticMediaProfile();
  uint64_t v6 = MEMORY[0x270FA5388](v116);
  uint64_t v103 = (uint64_t)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  int64_t v115 = (char *)&v94 - v8;
  uint64_t v114 = type metadata accessor for StaticMediaSystem();
  uint64_t v9 = MEMORY[0x270FA5388](v114);
  uint64_t v102 = (uint64_t)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v113 = (char *)&v94 - v11;
  uint64_t v112 = type metadata accessor for StaticActionSet();
  uint64_t v12 = MEMORY[0x270FA5388](v112);
  uint64_t v101 = (uint64_t)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v111 = (char *)&v94 - v14;
  uint64_t v110 = type metadata accessor for StaticCameraProfile();
  uint64_t v15 = MEMORY[0x270FA5388](v110);
  uint64_t v100 = (uint64_t)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v109 = (char *)&v94 - v17;
  uint64_t v108 = type metadata accessor for StaticServiceGroup();
  uint64_t v18 = MEMORY[0x270FA5388](v108);
  uint64_t v99 = (uint64_t)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v121 = (char *)&v94 - v20;
  uint64_t v106 = type metadata accessor for StaticService();
  uint64_t v21 = MEMORY[0x270FA5388](v106);
  uint64_t v98 = (uint64_t)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  int v105 = (char *)&v94 - v23;
  uint64_t v107 = type metadata accessor for StaticAccessory(0);
  uint64_t v24 = MEMORY[0x270FA5388](v107);
  uint64_t v97 = (uint64_t)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v94 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2680);
  uint64_t v120 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v34 = (uint64_t **)((char *)&v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v94 - v35;
  uint64_t v37 = a1[3];
  uint64_t v122 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v37);
  sub_251D184E0();
  uint64_t v38 = v123;
  sub_251F36D90();
  if (v38) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v122);
  }
  uint64_t v96 = v27;
  uint64_t v39 = v121;
  uint64_t v123 = v34;
  char v132 = 1;
  sub_251D18534();
  uint64_t v40 = v30;
  sub_251F36880();
  uint64_t v42 = (uint64_t)v36;
  uint64_t v43 = v31;
  switch(v133)
  {
    case 1:
      char v125 = 0;
      sub_251D18840(&qword_269B9E1D8, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v44 = (uint64_t)v105;
      uint64_t v45 = v106;
      sub_251F36880();
      uint64_t v94 = v40;
      uint64_t v95 = 0;
      uint64_t v46 = v123;
      v123[2] = 0;
      v46[3] = 0;
      char v53 = (char *)v46 + *(int *)(v31 + 32);
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 1, 1, v54);
      uint64_t v55 = v98;
      sub_251D21E24(v44, v98, (uint64_t (*)(void))type metadata accessor for StaticService);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF40);
      uint64_t v50 = (uint64_t *)swift_allocObject();
      v50[5] = v45;
      v50[6] = sub_251D18840(&qword_269B9E270, (void (*)(uint64_t))type metadata accessor for StaticService);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v50 + 2);
      sub_251D18588(v55, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v52 = type metadata accessor for StaticService;
      goto LABEL_14;
    case 2:
      char v126 = 0;
      sub_251D18840(&qword_269B9E1C8, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      uint64_t v57 = v108;
      sub_251F36880();
      uint64_t v94 = v40;
      uint64_t v95 = 0;
      uint64_t v46 = v123;
      v123[2] = 0;
      v46[3] = 0;
      uint64_t v58 = (uint64_t)v39;
      char v59 = (char *)v46 + *(int *)(v31 + 32);
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
      uint64_t v61 = (uint64_t)v39;
      uint64_t v62 = v99;
      sub_251D21E24(v61, v99, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF30);
      uint64_t v63 = (uint64_t *)swift_allocObject();
      v63[5] = v57;
      v63[6] = sub_251D18840(&qword_269B9E278, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      char v64 = __swift_allocate_boxed_opaque_existential_1(v63 + 2);
      sub_251D18588(v62, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      sub_251D1D464(v58, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      char *v46 = v63;
      uint64_t v45 = v57;
      goto LABEL_16;
    case 3:
      char v127 = 0;
      sub_251D18840(&qword_269B9E190, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
      uint64_t v65 = v109;
      uint64_t v45 = v110;
      sub_251F36880();
      uint64_t v94 = v40;
      uint64_t v95 = 0;
      uint64_t v46 = v123;
      v123[2] = 0;
      v46[3] = 0;
      uint64_t v66 = *(int *)(v43 + 32);
      uint64_t v67 = (uint64_t)v65;
      char v68 = (char *)v46 + v66;
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 1, 1, v69);
      uint64_t v70 = v100;
      sub_251D21E24(v67, v100, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA26B0);
      uint64_t v50 = (uint64_t *)swift_allocObject();
      v50[5] = v45;
      v50[6] = sub_251D18840(&qword_269B9E268, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
      uint64_t v71 = __swift_allocate_boxed_opaque_existential_1(v50 + 2);
      sub_251D18588(v70, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      unint64_t v72 = type metadata accessor for StaticCameraProfile;
      goto LABEL_10;
    case 4:
      char v128 = 0;
      sub_251D18840(&qword_269B9E180, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
      uint64_t v73 = v111;
      uint64_t v45 = v112;
      sub_251F36880();
      uint64_t v94 = v40;
      uint64_t v95 = 0;
      uint64_t v46 = v123;
      v123[2] = 0;
      v46[3] = 0;
      uint64_t v74 = *(int *)(v43 + 32);
      uint64_t v67 = (uint64_t)v73;
      uint64_t v75 = (char *)v46 + v74;
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 1, 1, v76);
      uint64_t v77 = v101;
      sub_251D21E24(v67, v101, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF20);
      uint64_t v50 = (uint64_t *)swift_allocObject();
      v50[5] = v45;
      v50[6] = sub_251D18840(&qword_269B9E280, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
      unint64_t v78 = __swift_allocate_boxed_opaque_existential_1(v50 + 2);
      sub_251D18588(v77, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      unint64_t v72 = type metadata accessor for StaticActionSet;
LABEL_10:
      uint64_t v79 = v72;
      uint64_t v80 = v67;
      goto LABEL_15;
    case 5:
      char v129 = 0;
      sub_251D18840(&qword_269B9E1A0, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
      uint64_t v44 = (uint64_t)v113;
      uint64_t v45 = v114;
      sub_251F36880();
      uint64_t v94 = v40;
      uint64_t v95 = 0;
      uint64_t v46 = v123;
      v123[2] = 0;
      v46[3] = 0;
      uint64_t v81 = (char *)v46 + *(int *)(v31 + 32);
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 1, 1, v82);
      uint64_t v83 = v102;
      sub_251D21E24(v44, v102, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA26A8);
      uint64_t v50 = (uint64_t *)swift_allocObject();
      v50[5] = v45;
      v50[6] = sub_251D18840(&qword_269B9E260, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
      uint64_t v84 = __swift_allocate_boxed_opaque_existential_1(v50 + 2);
      sub_251D18588(v83, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      uint64_t v52 = type metadata accessor for StaticMediaSystem;
      goto LABEL_14;
    case 6:
      char v130 = 0;
      sub_251D18840(&qword_269B9D388, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
      uint64_t v44 = (uint64_t)v115;
      uint64_t v45 = v116;
      sub_251F36880();
      uint64_t v94 = v40;
      uint64_t v95 = 0;
      uint64_t v46 = v123;
      v123[2] = 0;
      v46[3] = 0;
      uint64_t v85 = (char *)v46 + *(int *)(v31 + 32);
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 1, 1, v86);
      uint64_t v87 = v103;
      sub_251D21E24(v44, v103, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA26A0);
      uint64_t v50 = (uint64_t *)swift_allocObject();
      v50[5] = v45;
      v50[6] = sub_251D18840(&qword_269B9E258, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
      uint64_t v88 = __swift_allocate_boxed_opaque_existential_1(v50 + 2);
      sub_251D18588(v87, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      uint64_t v52 = type metadata accessor for StaticMediaProfile;
      goto LABEL_14;
    case 7:
      char v131 = 0;
      sub_251D18840(&qword_269B9CE30, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
      uint64_t v44 = (uint64_t)v117;
      uint64_t v45 = v118;
      sub_251F36880();
      uint64_t v94 = v40;
      uint64_t v95 = 0;
      uint64_t v46 = v123;
      v123[2] = 0;
      v46[3] = 0;
      uint64_t v89 = (char *)v46 + *(int *)(v31 + 32);
      uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 1, 1, v90);
      uint64_t v91 = v104;
      sub_251D21E24(v44, v104, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2698);
      uint64_t v50 = (uint64_t *)swift_allocObject();
      v50[5] = v45;
      v50[6] = sub_251D18840(&qword_269B9CE70, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
      uint64_t v92 = __swift_allocate_boxed_opaque_existential_1(v50 + 2);
      sub_251D18588(v91, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      uint64_t v52 = type metadata accessor for StaticMatterDevice;
      goto LABEL_14;
    default:
      char v124 = 0;
      sub_251D18840(&qword_269B9E170, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v44 = (uint64_t)v96;
      uint64_t v45 = v107;
      sub_251F36880();
      uint64_t v94 = v40;
      uint64_t v95 = 0;
      uint64_t v46 = v123;
      v123[2] = 0;
      v46[3] = 0;
      uint64_t v47 = (char *)v46 + *(int *)(v31 + 32);
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
      uint64_t v49 = v97;
      sub_251D21E24(v44, v97, type metadata accessor for StaticAccessory);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF38);
      uint64_t v50 = (uint64_t *)swift_allocObject();
      v50[5] = v45;
      v50[6] = sub_251D18840(&qword_269B9E288, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v51 = __swift_allocate_boxed_opaque_existential_1(v50 + 2);
      sub_251D18588(v49, (uint64_t)v51, type metadata accessor for StaticAccessory);
      uint64_t v52 = (uint64_t (*)())type metadata accessor for StaticAccessory;
LABEL_14:
      uint64_t v79 = v52;
      uint64_t v80 = v44;
LABEL_15:
      sub_251D1D464(v80, (uint64_t (*)(void))v79);
      char *v46 = v50;
LABEL_16:
      uint64_t v93 = v120;
      v46[1] = (uint64_t *)v45;
      sub_251D18588((uint64_t)v46, v42, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v28);
      sub_251D18588(v42, v119, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v122);
      break;
  }
  return result;
}

uint64_t AnyTileInfoBearer.encode(to:)(void *a1)
{
  uint64_t v76 = type metadata accessor for StaticMatterDevice();
  uint64_t v2 = MEMORY[0x270FA5388](v76);
  uint64_t v73 = (uint64_t)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v74 = (char *)&v72 - v4;
  uint64_t v79 = type metadata accessor for StaticMediaProfile();
  uint64_t v5 = MEMORY[0x270FA5388](v79);
  uint64_t v75 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v77 = (char *)&v72 - v7;
  uint64_t v82 = type metadata accessor for StaticMediaSystem();
  uint64_t v8 = MEMORY[0x270FA5388](v82);
  uint64_t v78 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v80 = (char *)&v72 - v10;
  uint64_t v85 = type metadata accessor for StaticActionSet();
  uint64_t v11 = MEMORY[0x270FA5388](v85);
  uint64_t v81 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v83 = (char *)&v72 - v13;
  uint64_t v88 = type metadata accessor for StaticCameraProfile();
  uint64_t v14 = MEMORY[0x270FA5388](v88);
  uint64_t v84 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v86 = (char *)&v72 - v16;
  uint64_t v91 = type metadata accessor for StaticServiceGroup();
  uint64_t v17 = MEMORY[0x270FA5388](v91);
  uint64_t v87 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v89 = (char *)&v72 - v19;
  uint64_t v20 = type metadata accessor for StaticService();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v90 = (uint64_t)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v72 - v23;
  uint64_t v25 = type metadata accessor for StaticAccessory(0);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v92 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v72 - v28;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA26B8);
  uint64_t v93 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v72 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v72 = sub_251D184E0();
  sub_251F36DA0();
  uint64_t v33 = v100;
  sub_251A1A4EC(*v100 + 16, (uint64_t)v99);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
  if (swift_dynamicCast())
  {
    uint64_t v34 = v92;
    sub_251D18588((uint64_t)v29, v92, type metadata accessor for StaticAccessory);
    LOBYTE(v97[0]) = 0;
    LOBYTE(v95) = 1;
    sub_251D185F0();
    uint64_t v35 = v94;
    sub_251F36A20();
    if (!v35)
    {
      LOBYTE(v97[0]) = 0;
      sub_251D18840(&qword_269B9E028, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      sub_251F36A20();
    }
    sub_251D1D464(v34, type metadata accessor for StaticAccessory);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v93 + 8);
    uint64_t v37 = v32;
    goto LABEL_14;
  }
  uint64_t v38 = v94;
  if (swift_dynamicCast())
  {
    uint64_t v39 = v90;
    sub_251D18588((uint64_t)v24, v90, (uint64_t (*)(void))type metadata accessor for StaticService);
    LOBYTE(v97[0]) = 1;
    LOBYTE(v95) = 1;
    sub_251D185F0();
    uint64_t v40 = v32;
    sub_251F36A20();
    if (!v38)
    {
      LOBYTE(v97[0]) = 0;
      sub_251D18840(&qword_269B9E0C8, (void (*)(uint64_t))type metadata accessor for StaticService);
      sub_251F36A20();
    }
    char v41 = type metadata accessor for StaticService;
    uint64_t v42 = v39;
LABEL_13:
    sub_251D1D464(v42, (uint64_t (*)(void))v41);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v93 + 8);
    uint64_t v37 = v40;
LABEL_14:
    v36(v37, v30);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
  }
  uint64_t v43 = (uint64_t)v89;
  uint64_t v40 = v32;
  if (swift_dynamicCast())
  {
    uint64_t v44 = v87;
    sub_251D18588(v43, v87, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    LOBYTE(v97[0]) = 2;
    LOBYTE(v95) = 1;
    sub_251D185F0();
    sub_251F36A20();
    if (!v38)
    {
      LOBYTE(v97[0]) = 0;
      sub_251D18840(&qword_269B9E0B0, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      sub_251F36A20();
    }
    char v41 = type metadata accessor for StaticServiceGroup;
    uint64_t v42 = v44;
    goto LABEL_13;
  }
  uint64_t v46 = (uint64_t)v86;
  uint64_t v47 = v30;
  if (swift_dynamicCast())
  {
    uint64_t v48 = v84;
    sub_251D18588(v46, v84, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    LOBYTE(v97[0]) = 3;
    LOBYTE(v95) = 1;
    sub_251D185F0();
    sub_251F36A20();
    if (!v38)
    {
      LOBYTE(v97[0]) = 0;
      sub_251D18840(&qword_269B9E058, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
      sub_251F36A20();
    }
    uint64_t v49 = type metadata accessor for StaticCameraProfile;
    uint64_t v50 = v48;
  }
  else
  {
    uint64_t v51 = v83;
    if (swift_dynamicCast())
    {
      uint64_t v52 = (uint64_t)v51;
      uint64_t v53 = v81;
      sub_251D18588(v52, v81, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      LOBYTE(v97[0]) = 4;
      LOBYTE(v95) = 1;
      sub_251D185F0();
      sub_251F36A20();
      if (!v38)
      {
        LOBYTE(v97[0]) = 0;
        sub_251D18840(&qword_269B9E040, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
        sub_251F36A20();
      }
      uint64_t v54 = type metadata accessor for StaticActionSet;
    }
    else
    {
      uint64_t v55 = v80;
      if (swift_dynamicCast())
      {
        uint64_t v56 = (uint64_t)v55;
        uint64_t v53 = v78;
        sub_251D18588(v56, v78, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
        LOBYTE(v97[0]) = 5;
        LOBYTE(v95) = 1;
        sub_251D185F0();
        sub_251F36A20();
        if (!v38)
        {
          LOBYTE(v97[0]) = 0;
          sub_251D18840(&qword_269B9E070, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
          sub_251F36A20();
        }
        uint64_t v54 = type metadata accessor for StaticMediaSystem;
      }
      else
      {
        uint64_t v57 = v77;
        if (swift_dynamicCast())
        {
          uint64_t v58 = (uint64_t)v57;
          uint64_t v53 = v75;
          sub_251D18588(v58, v75, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
          LOBYTE(v97[0]) = 6;
          LOBYTE(v95) = 1;
          sub_251D185F0();
          sub_251F36A20();
          if (!v38)
          {
            LOBYTE(v97[0]) = 0;
            sub_251D18840(&qword_269B9D370, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
            sub_251F36A20();
          }
          uint64_t v54 = type metadata accessor for StaticMediaProfile;
        }
        else
        {
          char v59 = v74;
          if (!swift_dynamicCast())
          {
            uint64_t v61 = sub_251F364B0();
            uint64_t v94 = v30;
            uint64_t v62 = v61;
            swift_allocError();
            char v64 = v63;
            uint64_t v92 = (uint64_t)v63 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA26C0) + 48);
            uint64_t v65 = *v33;
            uint64_t v66 = (void *)(*v33 + 16);
            sub_251A1A4EC((uint64_t)v66, (uint64_t)v97);
            uint64_t v67 = v98;
            char v68 = __swift_project_boxed_opaque_existential_1(v97, v98);
            v64[3] = v67;
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v64);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(boxed_opaque_existential_1, v68, v67);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269BA26C8);
            uint64_t v70 = swift_allocObject();
            *(_OWORD *)(v70 + 16) = xmmword_251F38650;
            unint64_t v71 = v72;
            *(void *)(v70 + 56) = &type metadata for AnyTileInfoBearer.TileKeys;
            *(void *)(v70 + 64) = v71;
            *(unsigned char *)(v70 + 32) = 0;
            uint64_t v95 = 0;
            unint64_t v96 = 0xE000000000000000;
            sub_251F36400();
            sub_251F35800();
            __swift_project_boxed_opaque_existential_1(v66, *(void *)(v65 + 40));
            sub_251F36AF0();
            sub_251F36480();
            (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v62 - 8) + 104))(v64, *MEMORY[0x263F8DCE0], v62);
            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v93 + 8))(v40, v94);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v97);
            return __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
          }
          uint64_t v60 = (uint64_t)v59;
          uint64_t v53 = v73;
          sub_251D18588(v60, v73, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
          LOBYTE(v97[0]) = 7;
          LOBYTE(v95) = 1;
          sub_251D185F0();
          sub_251F36A20();
          if (!v38)
          {
            LOBYTE(v97[0]) = 0;
            sub_251D18840(&qword_269B9CE00, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
            sub_251F36A20();
          }
          uint64_t v54 = type metadata accessor for StaticMatterDevice;
        }
      }
    }
    uint64_t v49 = v54;
    uint64_t v50 = v53;
  }
  sub_251D1D464(v50, (uint64_t (*)(void))v49);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v40, v47);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
}

uint64_t AnyTileInfoBearer.unwrap<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_251A1A4EC(*v2 + 16, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
  int v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v5 ^ 1u, 1, a1);
}

uint64_t AnyTileInfoBearer.dateAdded.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
}

uint64_t AnyTileInfoBearer.tileIcon.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
}

uint64_t AnyTileInfoBearer.foregroundColor.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

uint64_t AnyTileInfoBearer.isDoubleHigh.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.primaryServiceKind.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2);
}

uint64_t AnyTileInfoBearer.displayAsServiceKind.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 112))(v1, v2);
}

uint64_t AnyTileInfoBearer.isFavorite.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.shouldShowInDashboard.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.roomIds.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
}

uint64_t AnyTileInfoBearer.roomName.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 144))(v1, v2);
}

uint64_t AnyTileInfoBearer.isActivated.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.canBeToggled.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 160))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.isReachable.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 168))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.statusString.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 176))(v1, v2);
}

uint64_t AnyTileInfoBearer.tileStatusString.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 184))(v1, v2);
}

uint64_t AnyTileInfoBearer.toggle()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251D161C0, 0, 0);
}

uint64_t sub_251D161C0()
{
  uint64_t v1 = **(void ***)(v0 + 24);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 192) + **(int **)(v3 + 192));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251D162D0;
  uint64_t v5 = *(void *)(v0 + 16);
  return v7(v5, v2, v3);
}

uint64_t sub_251D162D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t AnyTileInfoBearer.hash(into:)()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_251F35610();
}

uint64_t AnyTileInfoBearer.serviceKinds.getter()
{
  if (v0[2])
  {
    uint64_t v1 = v0[2];
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void *)(*v0 + 40);
    uint64_t v4 = *(void *)(*v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(*v0 + 16), v3);
    uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 96))(v3, v4);
    v2[2] = v1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyTileInfoBearer.serviceKinds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*AnyTileInfoBearer.serviceKinds.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = AnyTileInfoBearer.serviceKinds.getter();
  return sub_251D16510;
}

uint64_t sub_251D16510(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 16) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 16) = v2;
  }
  return result;
}

unint64_t AnyTileInfoBearer.staticServices.getter()
{
  if (v0[3])
  {
    unint64_t v1 = v0[3];
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = (void *)(*v0 + 16);
    uint64_t v4 = *(void *)(*v0 + 40);
    __swift_project_boxed_opaque_existential_1(v3, v4);
    unint64_t v1 = TileInfoBearer.staticServices.getter(v4);
    v2[3] = v1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyTileInfoBearer.staticServices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*AnyTileInfoBearer.staticServices.modify(unint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = AnyTileInfoBearer.staticServices.getter();
  return sub_251D16670;
}

uint64_t sub_251D16670(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 24) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 24) = v2;
  }
  return result;
}

uint64_t AnyTileInfoBearer.primaryStaticService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA26E0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + *(int *)(type metadata accessor for AnyTileInfoBearer() + 32);
  sub_251A1B128(v6, (uint64_t)v5, (uint64_t *)&unk_269BA26E0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1) {
    return sub_251D18644((uint64_t)v5, a1);
  }
  sub_251A1B064((uint64_t)v5, (uint64_t *)&unk_269BA26E0);
  uint64_t v9 = (void *)(*(void *)v1 + 16);
  uint64_t v10 = *(void *)(*(void *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(v9, v10);
  TileInfoBearer.primaryStaticService.getter(v10, a1);
  sub_251A1B064(v6, (uint64_t *)&unk_269BA26E0);
  sub_251A1B128(a1, v6, qword_26B21EE20);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
}

uint64_t AnyTileInfoBearer.primaryStaticService.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnyTileInfoBearer() + 32);
  sub_251A1B064(v3, (uint64_t *)&unk_269BA26E0);
  sub_251D18644(a1, v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

void (*AnyTileInfoBearer.primaryStaticService.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  AnyTileInfoBearer.primaryStaticService.getter((uint64_t)v7);
  return sub_251D169E8;
}

void sub_251D169E8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[3];
  uint64_t v4 = (void *)(*a1)[4];
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v7 = **a1;
  if (a2)
  {
    sub_251A1B128((*a1)[4], (uint64_t)v3, qword_26B21EE20);
    uint64_t v8 = v7 + *(int *)(type metadata accessor for AnyTileInfoBearer() + 32);
    sub_251A1B064(v8, (uint64_t *)&unk_269BA26E0);
    sub_251D18644((uint64_t)v3, v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    sub_251A1B064((uint64_t)v4, qword_26B21EE20);
  }
  else
  {
    uint64_t v9 = v7 + *(int *)(type metadata accessor for AnyTileInfoBearer() + 32);
    sub_251A1B064(v9, (uint64_t *)&unk_269BA26E0);
    sub_251D18644((uint64_t)v4, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t AnyTileInfoBearer.hashValue.getter()
{
  sub_251F36CA0();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251D16B7C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t sub_251D16BD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
}

uint64_t sub_251D16C34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
}

uint64_t sub_251D16C94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

uint64_t sub_251D16CEC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2) & 1;
}

uint64_t sub_251D16D48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2);
}

uint64_t sub_251D16DA8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 112))(v1, v2);
}

uint64_t sub_251D16E08()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2) & 1;
}

uint64_t sub_251D16E64()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2) & 1;
}

uint64_t sub_251D16EC0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
}

uint64_t sub_251D16F18()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 144))(v1, v2);
}

uint64_t sub_251D16F70()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2) & 1;
}

uint64_t sub_251D16FCC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 160))(v1, v2) & 1;
}

uint64_t sub_251D17028()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 168))(v1, v2) & 1;
}

uint64_t sub_251D17084()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 176))(v1, v2);
}

uint64_t sub_251D170DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 184))(v1, v2);
}

uint64_t sub_251D17134(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251D161C0, 0, 0);
}

uint64_t sub_251D17154()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_251F36420();
}

uint64_t sub_251D171A8()
{
  sub_251F36CA0();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251D17210()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_251F35610();
}

uint64_t sub_251D17260()
{
  sub_251F36CA0();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251D172C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnyTileInfoBearer.init(from:)(a1, a2);
}

uint64_t sub_251D172DC(void *a1)
{
  return AnyTileInfoBearer.encode(to:)(a1);
}

uint64_t AnyTileInfoBearer.description.getter()
{
  sub_251F36400();
  swift_bridgeObjectRelease();
  v15[0] = 0xD000000000000018;
  v15[1] = 0x8000000251F707A0;
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  sub_251F36420();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_251F35800();
  uint64_t v5 = *(void *)(*(void *)v0 + 40);
  uint64_t v6 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 56))(v5, v6);
  uint64_t v7 = sub_251D18338(16);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  MEMORY[0x2533AA6E0](v7, v9, v11, v13);
  sub_251F35800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return v15[0];
}

uint64_t AnyTileInfoBearer.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v90 = 0;
  unint64_t v91 = 0xE000000000000000;
  sub_251F36400();
  uint64_t v102 = 0;
  unint64_t v103 = 0xE000000000000000;
  sub_251F35800();
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)(*v0 + 16);
  uint64_t v4 = *(void *)(*v0 + 40);
  uint64_t v5 = *(void *)(*v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v1 + 16), *(void *)(*v1 + 40));
  (*(void (**)(uint64_t, uint64_t))(v5 + 144))(v4, v5);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v77 = v8;
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3, *(void *)(v2 + 40));
  sub_251F36420();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v76 = v7;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v75 = v6;
  uint64_t v74 = v7 + 8;
  uint64_t v73 = v10;
  v10(v9, v6);
  sub_251F35800();
  uint64_t v11 = *v0;
  uint64_t v12 = (void *)(*v0 + 16);
  uint64_t v13 = *(void *)(*v0 + 40);
  uint64_t v14 = *(void *)(*v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v1 + 16), *(void *)(*v1 + 40));
  (*(void (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v15 = *(void *)(v11 + 40);
  uint64_t v16 = *(void *)(v11 + 48);
  __swift_project_boxed_opaque_existential_1(v12, v15);
  uint64_t v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 176))(v15, v16);
  unint64_t v91 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v66 = v0;
  AnyTileInfoBearer.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v18 = *(void *)(v11 + 40);
  uint64_t v19 = *(void *)(v11 + 48);
  __swift_project_boxed_opaque_existential_1(v12, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 72))(&v90, v18, v19);
  uint64_t v78 = v90;
  unint64_t v79 = v91;
  char v80 = v92;
  uint64_t v81 = v93;
  uint64_t v82 = v94;
  char v83 = v95;
  uint64_t v84 = v96;
  uint64_t v85 = v97;
  char v86 = v98;
  uint64_t v87 = v99;
  uint64_t v88 = v100;
  char v89 = v101;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v20 = *(void *)(v11 + 40);
  uint64_t v21 = *(void *)(v11 + 48);
  __swift_project_boxed_opaque_existential_1(v12, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 88))(v20, v21);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v22 = *(void *)(v11 + 40);
  uint64_t v23 = *(void *)(v11 + 48);
  __swift_project_boxed_opaque_existential_1(v12, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 168))(v22, v23);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v90 = MEMORY[0x263F8EE78];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  unint64_t v26 = sub_251BFC684();
  uint64_t v68 = v25;
  unint64_t v67 = v26;
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v27 = *(void *)(v11 + 40);
  uint64_t v28 = *(void *)(v11 + 48);
  __swift_project_boxed_opaque_existential_1(v12, v27);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 136))(v27, v28);
  int64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    uint64_t v90 = v24;
    sub_251A3DEDC(0, v30, 0);
    uint64_t v31 = sub_251A53EB8(v29);
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v72 = v29 + 56;
    uint64_t v35 = v76;
    uint64_t v70 = v76 + 16;
    uint64_t v69 = v76 + 32;
    uint64_t v71 = v29;
    uint64_t v36 = v75;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v31);
      uint64_t v39 = (char *)&v65 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v40) {
        break;
      }
      if (v32 < 0 || v32 >= 1 << *(unsigned char *)(v29 + 32))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        break;
      }
      if (((*(void *)(v72 + (((unint64_t)v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v32) & 1) == 0) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(v29 + 36) != v34) {
        goto LABEL_18;
      }
      uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))((char *)&v65 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v29 + 48) + *(void *)(v35 + 72) * v32, v36);
      MEMORY[0x270FA5388](v41);
      uint64_t v43 = (char *)&v65 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v43, v39, v36);
      uint64_t v44 = sub_251F34D40();
      uint64_t v46 = v45;
      v73(v43, v36);
      uint64_t v47 = v90;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v47 + 16) + 1, 1);
        uint64_t v47 = v90;
      }
      unint64_t v49 = *(void *)(v47 + 16);
      unint64_t v48 = *(void *)(v47 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_251A3DEDC(v48 > 1, v49 + 1, 1);
        uint64_t v47 = v90;
      }
      *(void *)(v47 + 16) = v49 + 1;
      unint64_t v50 = v47 + 16 * v49;
      *(void *)(v50 + 32) = v44;
      *(void *)(v50 + 40) = v46;
      uint64_t v29 = v71;
      uint64_t v31 = sub_251A53F5C(v32, v34, 0, v71);
      uint64_t v32 = v31;
      uint64_t v34 = v51;
      char v53 = v52 & 1;
      --v30;
      uint64_t v35 = v76;
      if (!v30)
      {
        sub_251A4ECE4(v31, v51, v53);
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x263F8EE78];
LABEL_15:
    uint64_t v54 = v66;
    uint64_t v90 = v47;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    uint64_t v55 = *v54;
    uint64_t v56 = (void *)(*v54 + 16);
    uint64_t v57 = *(void *)(*v54 + 40);
    uint64_t v58 = *(void *)(*v54 + 48);
    __swift_project_boxed_opaque_existential_1(v56, v57);
    (*(void (**)(uint64_t, uint64_t))(v58 + 120))(v57, v58);
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    uint64_t v59 = *(void *)(v55 + 40);
    uint64_t v60 = *(void *)(v55 + 48);
    __swift_project_boxed_opaque_existential_1(v56, v59);
    (*(void (**)(uint64_t, uint64_t))(v60 + 128))(v59, v60);
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    uint64_t v61 = *(void *)(v55 + 40);
    uint64_t v62 = *(void *)(v55 + 48);
    __swift_project_boxed_opaque_existential_1(v56, v61);
    (*(void (**)(uint64_t, uint64_t))(v62 + 160))(v61, v62);
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    uint64_t v63 = *(void *)(v55 + 40);
    uint64_t v64 = *(void *)(v55 + 48);
    __swift_project_boxed_opaque_existential_1(v56, v63);
    (*(void (**)(uint64_t, uint64_t))(v64 + 152))(v63, v64);
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v102;
  }
  return result;
}

uint64_t AnyTileInfoBearer.staticMediaProfile.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D1801C((uint64_t (*)(void))type metadata accessor for StaticMediaProfile, a1);
}

uint64_t AnyTileInfoBearer.staticMediaSystem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D1801C((uint64_t (*)(void))type metadata accessor for StaticMediaSystem, a1);
}

uint64_t AnyTileInfoBearer.staticMatterDevice.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D1801C((uint64_t (*)(void))type metadata accessor for StaticMatterDevice, a1);
}

uint64_t sub_251D1801C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  sub_251A1A4EC(*v2 + 16, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
  uint64_t v5 = a1(0);
  int v6 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, v6 ^ 1u, 1, v5);
}

uint64_t _s13HomeDataModel17AnyTileInfoBearerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v20 - v8;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a2 + 8);
  sub_251D21E24(a1, (uint64_t)v20 - v8, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  sub_251D21E24(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  if (v10 == v11)
  {
    __swift_project_boxed_opaque_existential_1((void *)(*(void *)v9 + 16), *(void *)(*(void *)v9 + 40));
    uint64_t v13 = sub_251F34DA0();
    v20[1] = v20;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void *)(v14 + 64);
    MEMORY[0x270FA5388](v13);
    unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_251F36420();
    unint64_t v17 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)v7 + 16), *(void *)(*(void *)v7 + 40));
    MEMORY[0x270FA5388](v17);
    sub_251F36420();
    char v12 = sub_251F34D70();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v14 + 8);
    v18((char *)v20 - v16, v13);
    v18((char *)v20 - v16, v13);
  }
  else
  {
    char v12 = 0;
  }
  sub_251D1D464((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  sub_251D1D464((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  return v12 & 1;
}

uint64_t sub_251D18338(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_251F357E0();
    return sub_251F358C0();
  }
  return result;
}

uint64_t *sub_251D183D4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v10 - v5;
  (*(void (**)(char *))(v4 + 16))((char *)&v10 - v5);
  uint64_t v7 = *(void *)(v2 + 104);
  v1[5] = v3;
  v1[6] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 32))(boxed_opaque_existential_1, v6, v3);
  return v1;
}

unint64_t sub_251D184E0()
{
  unint64_t result = qword_269BA2688;
  if (!qword_269BA2688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2688);
  }
  return result;
}

unint64_t sub_251D18534()
{
  unint64_t result = qword_269BA2690;
  if (!qword_269BA2690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2690);
  }
  return result;
}

uint64_t sub_251D18588(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_251D185F0()
{
  unint64_t result = qword_269BA26D0;
  if (!qword_269BA26D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA26D0);
  }
  return result;
}

uint64_t sub_251D18644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D186AC(void *a1)
{
  a1[1] = sub_251D18840(&qword_269BA26F0, (void (*)(uint64_t))type metadata accessor for AnyTileInfoBearer);
  a1[2] = sub_251D18840(&qword_269BA26F8, (void (*)(uint64_t))type metadata accessor for AnyTileInfoBearer);
  a1[3] = sub_251D18840(&qword_269BA2700, (void (*)(uint64_t))type metadata accessor for AnyTileInfoBearer);
  a1[4] = sub_251D18840(&qword_269BA2708, (void (*)(uint64_t))type metadata accessor for AnyTileInfoBearer);
  a1[5] = sub_251D18840(&qword_269BA2710, (void (*)(uint64_t))type metadata accessor for AnyTileInfoBearer);
  uint64_t result = sub_251D18840(&qword_269BA2718, (void (*)(uint64_t))type metadata accessor for AnyTileInfoBearer);
  a1[6] = result;
  return result;
}

uint64_t sub_251D187D0()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251D187F8()
{
  return sub_251D18840(&qword_269BA2720, (void (*)(uint64_t))type metadata accessor for AnyTileInfoBearer);
}

uint64_t sub_251D18840(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AnyTileInfoBearer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA26E0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = (int *)type metadata accessor for StaticService();
      uint64_t v14 = *((void *)v13 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v9, 1, v13))
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      else
      {
        uint64_t v150 = v11;
        uint64_t v151 = v10;
        uint64_t v149 = v14;
        uint64_t v15 = sub_251F34DA0();
        uint64_t v156 = *(void *)(v15 - 8);
        unint64_t v16 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
        v16(v8, v9, v15);
        uint64_t v17 = v13[5];
        uint64_t v18 = &v8[v17];
        uint64_t v19 = &v9[v17];
        uint64_t v20 = *((void *)v19 + 1);
        *(void *)uint64_t v18 = *(void *)v19;
        *((void *)v18 + 1) = v20;
        v8[v13[6]] = v9[v13[6]];
        v8[v13[7]] = v9[v13[7]];
        v8[v13[8]] = v9[v13[8]];
        v8[v13[9]] = v9[v13[9]];
        v8[v13[10]] = v9[v13[10]];
        uint64_t v21 = v13[11];
        uint64_t v22 = &v8[v21];
        uint64_t v23 = &v9[v21];
        swift_bridgeObjectRetain();
        v16(v22, v23, v15);
        uint64_t v24 = v13[12];
        uint64_t v25 = &v8[v24];
        unint64_t v26 = &v9[v24];
        *(void *)uint64_t v25 = *(void *)v26;
        v25[8] = v26[8];
        uint64_t v27 = v13[13];
        uint64_t v28 = &v8[v27];
        uint64_t v29 = &v9[v27];
        int64_t v30 = (int *)type metadata accessor for StaticDeviceMetadata();
        __dst = (void *)*((void *)v30 - 1);
        uint64_t v154 = v16;
        uint64_t v155 = v15;
        if (((unsigned int (*)(char *, uint64_t, int *))__dst[6])(v29, 1, v30))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          v16(v28, v29, v15);
          uint64_t v32 = v30[5];
          uint64_t v33 = &v28[v32];
          uint64_t v34 = &v29[v32];
          uint64_t v35 = *((void *)v34 + 1);
          *(void *)uint64_t v33 = *(void *)v34;
          *((void *)v33 + 1) = v35;
          uint64_t v36 = v30[6];
          uint64_t v37 = &v28[v36];
          uint64_t v38 = &v29[v36];
          uint64_t v39 = *((void *)v38 + 1);
          *(void *)uint64_t v37 = *(void *)v38;
          *((void *)v37 + 1) = v39;
          uint64_t v40 = v30[7];
          uint64_t v41 = &v28[v40];
          uint64_t v42 = &v29[v40];
          uint64_t v148 = *((void *)v42 + 1);
          *(void *)uint64_t v41 = *(void *)v42;
          *((void *)v41 + 1) = v148;
          uint64_t v43 = v30[8];
          uint64_t v44 = &v28[v43];
          uint64_t v45 = &v29[v43];
          uint64_t v46 = *((void *)v45 + 1);
          *(void *)uint64_t v44 = *(void *)v45;
          *((void *)v44 + 1) = v46;
          v28[v30[9]] = v29[v30[9]];
          v28[v30[10]] = v29[v30[10]];
          v28[v30[11]] = v29[v30[11]];
          v28[v30[12]] = v29[v30[12]];
          uint64_t v47 = (void (*)(char *, void, uint64_t, int *))__dst[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v47(v28, 0, 1, v30);
        }
        uint64_t v48 = v13[14];
        unint64_t v49 = &v8[v48];
        unint64_t v50 = &v9[v48];
        uint64_t v51 = sub_251F34D20();
        uint64_t v52 = *(void *)(v51 - 8);
        uint64_t v141 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
        uint64_t v142 = v51;
        uint64_t v140 = v52;
        if (v141(v50, 1, v51))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        *(void *)&v8[v13[15]] = *(void *)&v9[v13[15]];
        uint64_t v54 = v13[16];
        uint64_t v55 = &v8[v54];
        uint64_t v56 = &v9[v54];
        uint64_t v57 = *((void *)v56 + 1);
        *(void *)uint64_t v55 = *(void *)v56;
        *((void *)v55 + 1) = v57;
        v8[v13[17]] = v9[v13[17]];
        v8[v13[18]] = v9[v13[18]];
        v8[v13[19]] = v9[v13[19]];
        v8[v13[20]] = v9[v13[20]];
        uint64_t v58 = v13[21];
        uint64_t v59 = &v8[v58];
        uint64_t v60 = &v9[v58];
        uint64_t v61 = *((void *)v60 + 1);
        *(void *)uint64_t v59 = *(void *)v60;
        *((void *)v59 + 1) = v61;
        v8[v13[22]] = v9[v13[22]];
        v8[v13[23]] = v9[v13[23]];
        v8[v13[24]] = v9[v13[24]];
        uint64_t v62 = v13[25];
        uint64_t v63 = &v8[v62];
        uint64_t v64 = &v9[v62];
        uint64_t v65 = *(unsigned int (**)(void, void, void))(v156 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v66 = (unsigned int (*)(char *, uint64_t, uint64_t))v65;
        swift_bridgeObjectRetain();
        if (v65(v64, 1, v155))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
          uint64_t v68 = v156;
        }
        else
        {
          v154(v63, v64, v155);
          uint64_t v68 = v156;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v63, 0, 1, v155);
        }
        uint64_t v69 = v13[26];
        uint64_t v70 = &v8[v69];
        uint64_t v71 = &v9[v69];
        uint64_t v144 = v66;
        if (v66(&v9[v69], 1, v155))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          v154(v70, v71, v155);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v70, 0, 1, v155);
        }
        *(void *)&v8[v13[27]] = *(void *)&v9[v13[27]];
        *(void *)&v8[v13[28]] = *(void *)&v9[v13[28]];
        uint64_t v73 = v13[29];
        uint64_t v74 = &v8[v73];
        uint64_t v75 = &v9[v73];
        uint64_t v76 = *((void *)v75 + 1);
        *(void *)uint64_t v74 = *(void *)v75;
        *((void *)v74 + 1) = v76;
        uint64_t v147 = v13;
        uint64_t v77 = v13[30];
        __dsta = &v8[v77];
        uint64_t v78 = &v9[v77];
        uint64_t v79 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v143 = *(void *)(v79 - 8);
        uint64_t v145 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v145(v78, 1, v79))
        {
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(__dsta, v78, *(void *)(*(void *)(v80 - 8) + 64));
          uint64_t v10 = v151;
          uint64_t v82 = v154;
          uint64_t v81 = v155;
          char v83 = v144;
        }
        else
        {
          uint64_t v82 = v154;
          uint64_t v81 = v155;
          v154(__dsta, v78, v155);
          uint64_t v146 = v79;
          uint64_t v84 = *(int *)(v79 + 20);
          uint64_t v85 = &__dsta[v84];
          char v86 = &v78[v84];
          uint64_t v139 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v10 = v151;
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v97 = *((void *)v86 + 1);
            *(void *)uint64_t v85 = *(void *)v86;
            *((void *)v85 + 1) = v97;
            uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v98 = updated[5];
            uint64_t v99 = &v85[v98];
            uint64_t v100 = &v86[v98];
            swift_bridgeObjectRetain();
            if (v141(v100, 1, v142))
            {
              uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v99, v100, v142);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v140 + 56))(v99, 0, 1, v142);
            }
            uint64_t v116 = v143;
            uint64_t v117 = updated[6];
            uint64_t v118 = &v85[v117];
            uint64_t v119 = &v86[v117];
            uint64_t v120 = *((void *)v119 + 1);
            *(void *)uint64_t v118 = *(void *)v119;
            *((void *)v118 + 1) = v120;
            uint64_t v121 = updated[7];
            uint64_t v122 = &v85[v121];
            uint64_t v123 = &v86[v121];
            uint64_t v124 = *((void *)v123 + 1);
            *(void *)uint64_t v122 = *(void *)v123;
            *((void *)v122 + 1) = v124;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v85[*(int *)(v125 + 48)] = v86[*(int *)(v125 + 48)];
            swift_storeEnumTagMultiPayload();
            uint64_t v81 = v155;
            char v83 = v144;
          }
          else
          {
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v102 = *((void *)v86 + 1);
              *(void *)uint64_t v85 = *(void *)v86;
              *((void *)v85 + 1) = v102;
              unint64_t v103 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
              uint64_t v104 = v103[5];
              uint64_t v138 = &v85[v104];
              int v105 = &v86[v104];
              swift_bridgeObjectRetain();
              if (v141(v105, 1, v142))
              {
                uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
                memcpy(v138, v105, *(void *)(*(void *)(v106 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v138, v105, v142);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v140 + 56))(v138, 0, 1, v142);
              }
              uint64_t v107 = v103[6];
              uint64_t v108 = &v85[v107];
              uint64_t v109 = &v86[v107];
              uint64_t v110 = *((void *)v109 + 1);
              *(void *)uint64_t v108 = *(void *)v109;
              *((void *)v108 + 1) = v110;
              uint64_t v111 = v103[7];
              uint64_t v112 = &v85[v111];
              uint64_t v113 = &v86[v111];
              uint64_t v114 = *((void *)v113 + 1);
              *(void *)uint64_t v112 = *(void *)v113;
              *((void *)v112 + 1) = v114;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
              v85[*(int *)(v115 + 48)] = v86[*(int *)(v115 + 48)];
              swift_storeEnumTagMultiPayload();
              uint64_t v81 = v155;
            }
            else if (EnumCaseMultiPayload)
            {
              memcpy(v85, v86, *(void *)(*(void *)(v139 - 8) + 64));
            }
            else
            {
              v154(v85, v86, v155);
              uint64_t v88 = (int *)type metadata accessor for StaticHH2Update(0);
              v85[v88[5]] = v86[v88[5]];
              uint64_t v89 = v88[6];
              uint64_t v90 = &v85[v89];
              unint64_t v91 = &v86[v89];
              uint64_t v93 = *(void *)v91;
              uint64_t v92 = *((void *)v91 + 1);
              *(void *)uint64_t v90 = v93;
              *((void *)v90 + 1) = v92;
              uint64_t v94 = v88[7];
              char v95 = &v85[v94];
              uint64_t v96 = &v86[v94];
              v95[8] = v96[8];
              *(void *)char v95 = *(void *)v96;
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v116 = v143;
            char v83 = v144;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(__dsta, 0, 1, v146);
        }
        v8[v147[31]] = v9[v147[31]];
        *(void *)&v8[v147[32]] = *(void *)&v9[v147[32]];
        uint64_t v126 = v147[33];
        char v127 = &v8[v126];
        char v128 = &v9[v126];
        swift_bridgeObjectRetain();
        if (v83(v128, 1, v81))
        {
          uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          v82(v127, v128, v81);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v127, 0, 1, v81);
        }
        uint64_t v130 = v147[34];
        char v131 = &v8[v130];
        char v132 = &v9[v130];
        *(_WORD *)char v131 = *(_WORD *)v132;
        v131[2] = v132[2];
        uint64_t v133 = v147[35];
        uint64_t v134 = &v8[v133];
        uint64_t v135 = &v9[v133];
        *(_DWORD *)(v134 + 7) = *(_DWORD *)(v135 + 7);
        *(void *)uint64_t v134 = *(void *)v135;
        (*(void (**)(char *, void, uint64_t, int *))(v149 + 56))(v8, 0, 1, v147);
        uint64_t v11 = v150;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return a1;
}

uint64_t destroy for AnyTileInfoBearer(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (result) {
    return result;
  }
  uint64_t v7 = (int *)type metadata accessor for StaticService();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v4, 1, v7);
  if (result) {
    return result;
  }
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v26 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v26(v4, v8);
  swift_bridgeObjectRelease();
  v26(v4 + v7[11], v8);
  uint64_t v10 = v4 + v7[13];
  uint64_t v11 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v26(v10, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v4 + v7[14];
  uint64_t v13 = sub_251F34D20();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(void))(v14 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v15)(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v4 + v7[25];
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v17(v16, 1, v8)) {
    v26(v16, v8);
  }
  uint64_t v25 = v14;
  uint64_t v18 = v4 + v7[26];
  if (!v17(v18, 1, v8)) {
    v26(v18, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v4 + v7[30];
  uint64_t v20 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    v26(v19, v8);
    uint64_t v21 = v19 + *(int *)(v20 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = v21 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v15()) {
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v13);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_20;
      }
      v26(v21, v8);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v23 = v4 + v7[33];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v23, 1, v8);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v26)(v23, v8);
  }
  return result;
}

uint64_t initializeWithCopy for AnyTileInfoBearer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v11 = (int *)type metadata accessor for StaticService();
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v7, 1, v11))
    {
      memcpy(v6, v7, *(void *)(v9 + 64));
LABEL_38:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      return a1;
    }
    uint64_t v151 = v9;
    uint64_t v152 = v8;
    uint64_t v150 = v12;
    uint64_t v13 = sub_251F34DA0();
    uint64_t v157 = *(void *)(v13 - 8);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v157 + 16);
    v14(v6, v7, v13);
    uint64_t v15 = v11[5];
    uint64_t v16 = &v6[v15];
    uint64_t v17 = &v7[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    v6[v11[6]] = v7[v11[6]];
    v6[v11[7]] = v7[v11[7]];
    v6[v11[8]] = v7[v11[8]];
    v6[v11[9]] = v7[v11[9]];
    v6[v11[10]] = v7[v11[10]];
    uint64_t v19 = v11[11];
    uint64_t v20 = &v6[v19];
    uint64_t v21 = &v7[v19];
    swift_bridgeObjectRetain();
    v14(v20, v21, v13);
    uint64_t v22 = v11[12];
    uint64_t v23 = &v6[v22];
    uint64_t v24 = &v7[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = v11[13];
    unint64_t v26 = &v6[v25];
    uint64_t v27 = &v7[v25];
    uint64_t v28 = (int *)type metadata accessor for StaticDeviceMetadata();
    __dst = (void *)*((void *)v28 - 1);
    uint64_t v155 = v14;
    uint64_t v156 = v13;
    if (((unsigned int (*)(char *, uint64_t, int *))__dst[6])(v27, 1, v28))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v14(v26, v27, v13);
      uint64_t v30 = v28[5];
      uint64_t v31 = &v26[v30];
      uint64_t v32 = &v27[v30];
      uint64_t v33 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v33;
      uint64_t v34 = v28[6];
      uint64_t v35 = &v26[v34];
      uint64_t v36 = &v27[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      uint64_t v38 = v28[7];
      uint64_t v39 = &v26[v38];
      uint64_t v40 = &v27[v38];
      uint64_t v149 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = v149;
      uint64_t v41 = v28[8];
      uint64_t v42 = &v26[v41];
      uint64_t v43 = &v27[v41];
      uint64_t v44 = *((void *)v43 + 1);
      *(void *)uint64_t v42 = *(void *)v43;
      *((void *)v42 + 1) = v44;
      v26[v28[9]] = v27[v28[9]];
      v26[v28[10]] = v27[v28[10]];
      v26[v28[11]] = v27[v28[11]];
      v26[v28[12]] = v27[v28[12]];
      uint64_t v45 = (void (*)(char *, void, uint64_t, int *))__dst[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v26, 0, 1, v28);
    }
    uint64_t v46 = v11[14];
    uint64_t v47 = &v6[v46];
    uint64_t v48 = &v7[v46];
    uint64_t v49 = sub_251F34D20();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v143 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    uint64_t v144 = v49;
    uint64_t v142 = v50;
    if (v143(v48, 1, v49))
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    *(void *)&v6[v11[15]] = *(void *)&v7[v11[15]];
    uint64_t v52 = v11[16];
    uint64_t v53 = &v6[v52];
    uint64_t v54 = &v7[v52];
    uint64_t v55 = *((void *)v54 + 1);
    *(void *)uint64_t v53 = *(void *)v54;
    *((void *)v53 + 1) = v55;
    v6[v11[17]] = v7[v11[17]];
    v6[v11[18]] = v7[v11[18]];
    v6[v11[19]] = v7[v11[19]];
    v6[v11[20]] = v7[v11[20]];
    uint64_t v56 = v11[21];
    uint64_t v57 = &v6[v56];
    uint64_t v58 = &v7[v56];
    uint64_t v59 = *((void *)v58 + 1);
    *(void *)uint64_t v57 = *(void *)v58;
    *((void *)v57 + 1) = v59;
    v6[v11[22]] = v7[v11[22]];
    v6[v11[23]] = v7[v11[23]];
    v6[v11[24]] = v7[v11[24]];
    uint64_t v60 = v11[25];
    uint64_t v61 = &v6[v60];
    uint64_t v62 = &v7[v60];
    uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v64 = v63;
    swift_bridgeObjectRetain();
    if (v63(v62, 1, v156))
    {
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
      uint64_t v66 = v157;
    }
    else
    {
      v155(v61, v62, v156);
      uint64_t v66 = v157;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v61, 0, 1, v156);
    }
    uint64_t v67 = v11[26];
    uint64_t v68 = &v6[v67];
    uint64_t v69 = &v7[v67];
    uint64_t v146 = v64;
    if (v64(&v7[v67], 1, v156))
    {
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      v155(v68, v69, v156);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v68, 0, 1, v156);
    }
    *(void *)&v6[v11[27]] = *(void *)&v7[v11[27]];
    *(void *)&v6[v11[28]] = *(void *)&v7[v11[28]];
    uint64_t v71 = v11[29];
    uint64_t v72 = &v6[v71];
    uint64_t v73 = &v7[v71];
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v145 = v11;
    uint64_t v75 = v11[30];
    __dsta = &v6[v75];
    uint64_t v76 = &v7[v75];
    uint64_t v77 = type metadata accessor for StaticSoftwareUpdate(0);
    uint64_t v78 = *(void *)(v77 - 8);
    uint64_t v147 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v147(v76, 1, v77))
    {
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
      memcpy(__dsta, v76, *(void *)(*(void *)(v79 - 8) + 64));
      uint64_t v8 = v152;
      uint64_t v81 = v155;
      uint64_t v80 = v156;
      uint64_t v82 = v145;
      char v83 = v146;
LABEL_34:
      v6[v82[31]] = v7[v82[31]];
      *(void *)&v6[v82[32]] = *(void *)&v7[v82[32]];
      uint64_t v126 = v82[33];
      char v127 = &v6[v126];
      char v128 = &v7[v126];
      swift_bridgeObjectRetain();
      if (v83(v128, 1, v80))
      {
        uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
      }
      else
      {
        v81(v127, v128, v80);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v127, 0, 1, v80);
      }
      uint64_t v130 = v82[34];
      char v131 = &v6[v130];
      char v132 = &v7[v130];
      *(_WORD *)char v131 = *(_WORD *)v132;
      v131[2] = v132[2];
      uint64_t v133 = v82[35];
      uint64_t v134 = &v6[v133];
      uint64_t v135 = &v7[v133];
      *(_DWORD *)(v134 + 7) = *(_DWORD *)(v135 + 7);
      *(void *)uint64_t v134 = *(void *)v135;
      (*(void (**)(char *, void, uint64_t, int *))(v150 + 56))(v6, 0, 1, v82);
      uint64_t v9 = v151;
      goto LABEL_38;
    }
    uint64_t v141 = v78;
    uint64_t v81 = v155;
    uint64_t v80 = v156;
    v155(__dsta, v76, v156);
    uint64_t v148 = v77;
    uint64_t v84 = *(int *)(v77 + 20);
    uint64_t v85 = &__dsta[v84];
    char v86 = &v76[v84];
    uint64_t v140 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v8 = v152;
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v97 = *((void *)v86 + 1);
      *(void *)uint64_t v85 = *(void *)v86;
      *((void *)v85 + 1) = v97;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v99 = updated[5];
      uint64_t v138 = &v85[v99];
      uint64_t v100 = &v86[v99];
      swift_bridgeObjectRetain();
      if (v143(v100, 1, v144))
      {
        uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v138, v100, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v138, v100, v144);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v138, 0, 1, v144);
      }
      uint64_t v82 = v145;
      uint64_t v108 = updated[6];
      uint64_t v109 = &v85[v108];
      uint64_t v110 = &v86[v108];
      uint64_t v111 = *((void *)v110 + 1);
      *(void *)uint64_t v109 = *(void *)v110;
      *((void *)v109 + 1) = v111;
      uint64_t v112 = updated[7];
      uint64_t v113 = &v85[v112];
      uint64_t v114 = &v86[v112];
      uint64_t v115 = *((void *)v114 + 1);
      *(void *)uint64_t v113 = *(void *)v114;
      *((void *)v113 + 1) = v115;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v85[*(int *)(v116 + 48)] = v86[*(int *)(v116 + 48)];
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v82 = v145;
        if (EnumCaseMultiPayload)
        {
          memcpy(v85, v86, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          v155(v85, v86, v156);
          uint64_t v88 = (int *)type metadata accessor for StaticHH2Update(0);
          v85[v88[5]] = v86[v88[5]];
          uint64_t v89 = v88[6];
          uint64_t v90 = &v85[v89];
          unint64_t v91 = &v86[v89];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          *(void *)uint64_t v90 = v93;
          *((void *)v90 + 1) = v92;
          uint64_t v94 = v88[7];
          char v95 = &v85[v94];
          uint64_t v96 = &v86[v94];
          v95[8] = v96[8];
          *(void *)char v95 = *(void *)v96;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_33;
      }
      uint64_t v102 = *((void *)v86 + 1);
      *(void *)uint64_t v85 = *(void *)v86;
      *((void *)v85 + 1) = v102;
      unint64_t v103 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v104 = v103[5];
      uint64_t v139 = &v85[v104];
      int v105 = &v86[v104];
      swift_bridgeObjectRetain();
      uint64_t v137 = v105;
      unsigned int v106 = v143(v105, 1, v144);
      uint64_t v82 = v145;
      if (v106)
      {
        uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v139, v137, *(void *)(*(void *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v142 + 16))(v139, v137, v144);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v144);
      }
      uint64_t v117 = v103[6];
      uint64_t v118 = &v85[v117];
      uint64_t v119 = &v86[v117];
      uint64_t v120 = *((void *)v119 + 1);
      *(void *)uint64_t v118 = *(void *)v119;
      *((void *)v118 + 1) = v120;
      uint64_t v121 = v103[7];
      uint64_t v122 = &v85[v121];
      uint64_t v123 = &v86[v121];
      uint64_t v124 = *((void *)v123 + 1);
      *(void *)uint64_t v122 = *(void *)v123;
      *((void *)v122 + 1) = v124;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v85[*(int *)(v125 + 48)] = v86[*(int *)(v125 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v80 = v156;
LABEL_33:
    char v83 = v146;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(__dsta, 0, 1, v148);
    goto LABEL_34;
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA26E0);
  memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

void *assignWithCopy for AnyTileInfoBearer(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v5[1] = a2[1];
  v5[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = (int *)type metadata accessor for StaticService();
      uint64_t v15 = *((void *)v14 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v8, 1, v14))
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
LABEL_85:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
        return v5;
      }
      v397 = v5;
      uint64_t v400 = v15;
      uint64_t v410 = v10;
      uint64_t v40 = v7;
      uint64_t v41 = sub_251F34DA0();
      uint64_t v424 = *(void *)(v41 - 8);
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v424 + 16);
      v42(v40, v8, v41);
      uint64_t v43 = v14[5];
      uint64_t v44 = &v40[v43];
      uint64_t v45 = &v8[v43];
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = *((void *)v45 + 1);
      v40[v14[6]] = v8[v14[6]];
      v40[v14[7]] = v8[v14[7]];
      v40[v14[8]] = v8[v14[8]];
      v40[v14[9]] = v8[v14[9]];
      v40[v14[10]] = v8[v14[10]];
      uint64_t v46 = v14[11];
      uint64_t v47 = &v40[v46];
      uint64_t v48 = &v8[v46];
      swift_bridgeObjectRetain();
      v42(v47, v48, v41);
      uint64_t v49 = v14[12];
      uint64_t v50 = &v40[v49];
      uint64_t v51 = &v8[v49];
      uint64_t v52 = *(void *)v51;
      v50[8] = v51[8];
      *(void *)uint64_t v50 = v52;
      uint64_t v53 = v14[13];
      v432 = v40;
      uint64_t v54 = &v40[v53];
      uint64_t v55 = &v8[v53];
      uint64_t v56 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v57 = *((void *)v56 - 1);
      uint64_t v427 = v41;
      v430 = v8;
      __srca = v42;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        v42(v54, v55, v41);
        uint64_t v59 = v56[5];
        uint64_t v60 = &v54[v59];
        uint64_t v61 = &v55[v59];
        *(void *)uint64_t v60 = *(void *)v61;
        *((void *)v60 + 1) = *((void *)v61 + 1);
        uint64_t v62 = v56[6];
        uint64_t v63 = &v54[v62];
        uint64_t v64 = &v55[v62];
        *(void *)uint64_t v63 = *(void *)v64;
        *((void *)v63 + 1) = *((void *)v64 + 1);
        uint64_t v65 = v56[7];
        uint64_t v66 = &v54[v65];
        uint64_t v67 = &v55[v65];
        *(void *)uint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = *((void *)v67 + 1);
        uint64_t v68 = v56[8];
        uint64_t v69 = &v54[v68];
        uint64_t v70 = &v55[v68];
        *(void *)uint64_t v69 = *(void *)v70;
        *((void *)v69 + 1) = *((void *)v70 + 1);
        v54[v56[9]] = v55[v56[9]];
        v54[v56[10]] = v55[v56[10]];
        v54[v56[11]] = v55[v56[11]];
        v54[v56[12]] = v55[v56[12]];
        uint64_t v71 = *(void (**)(char *, void, uint64_t, int *))(v57 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v71(v54, 0, 1, v56);
      }
      uint64_t v72 = v14[14];
      uint64_t v73 = &v432[v72];
      uint64_t v74 = &v8[v72];
      uint64_t v75 = sub_251F34D20();
      uint64_t v76 = *(void *)(v75 - 8);
      v393 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
      uint64_t v10 = v410;
      uint64_t v396 = v75;
      uint64_t v391 = v76;
      if (v393(v74, 1, v75))
      {
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      *(void *)&v432[v14[15]] = *(void *)&v8[v14[15]];
      uint64_t v78 = v14[16];
      uint64_t v79 = &v432[v78];
      uint64_t v80 = &v8[v78];
      *(void *)uint64_t v79 = *(void *)v80;
      *((void *)v79 + 1) = *((void *)v80 + 1);
      v432[v14[17]] = v8[v14[17]];
      v432[v14[18]] = v8[v14[18]];
      v432[v14[19]] = v8[v14[19]];
      v432[v14[20]] = v8[v14[20]];
      uint64_t v81 = v14[21];
      uint64_t v82 = &v432[v81];
      char v83 = &v8[v81];
      *(void *)uint64_t v82 = *(void *)v83;
      *((void *)v82 + 1) = *((void *)v83 + 1);
      v432[v14[22]] = v8[v14[22]];
      v432[v14[23]] = v8[v14[23]];
      v432[v14[24]] = v8[v14[24]];
      uint64_t v84 = v14[25];
      uint64_t v85 = &v432[v84];
      char v86 = &v8[v84];
      uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v424 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v87(v86, 1, v427))
      {
        uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        __srca(v85, v86, v427);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v424 + 56))(v85, 0, 1, v427);
      }
      uint64_t v89 = v14[26];
      uint64_t v90 = &v432[v89];
      unint64_t v91 = &v8[v89];
      v406 = v87;
      if (v87(&v8[v89], 1, v427))
      {
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        __srca(v90, v91, v427);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v424 + 56))(v90, 0, 1, v427);
      }
      *(void *)&v432[v14[27]] = *(void *)&v8[v14[27]];
      *(void *)&v432[v14[28]] = *(void *)&v8[v14[28]];
      uint64_t v93 = v14[29];
      uint64_t v94 = &v432[v93];
      char v95 = &v8[v93];
      *(void *)uint64_t v94 = *(void *)v95;
      *((void *)v94 + 1) = *((void *)v95 + 1);
      uint64_t v96 = v14[30];
      __dst = &v432[v96];
      v402 = &v8[v96];
      uint64_t v97 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v98 = *(void *)(v97 - 8);
      uint64_t v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
      uint64_t v100 = v97;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v99(v402, 1, v100))
      {
        uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(__dst, v402, *(void *)(*(void *)(v101 - 8) + 64));
        uint64_t v5 = v397;
        uint64_t v102 = v400;
        unint64_t v103 = v8;
        uint64_t v104 = v432;
LABEL_81:
        v104[v14[31]] = v103[v14[31]];
        *(void *)&v104[v14[32]] = *(void *)&v103[v14[32]];
        uint64_t v243 = v14[33];
        v244 = v104;
        v245 = &v104[v243];
        v246 = &v103[v243];
        swift_bridgeObjectRetain();
        if (v406(v246, 1, v427))
        {
          uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v245, v246, *(void *)(*(void *)(v247 - 8) + 64));
        }
        else
        {
          __srca(v245, v246, v427);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v424 + 56))(v245, 0, 1, v427);
        }
        uint64_t v248 = v14[34];
        uint64_t v7 = v244;
        v249 = &v244[v248];
        v250 = &v103[v248];
        __int16 v251 = *(_WORD *)v250;
        v249[2] = v250[2];
        *(_WORD *)v249 = v251;
        uint64_t v252 = v14[35];
        v253 = &v244[v252];
        v254 = &v103[v252];
        uint64_t v255 = *(void *)v254;
        *(_DWORD *)(v253 + 7) = *(_DWORD *)(v254 + 7);
        *(void *)v253 = v255;
        (*(void (**)(char *, void, uint64_t, int *))(v102 + 56))(v244, 0, 1, v14);
        goto LABEL_85;
      }
      uint64_t v389 = v98;
      __srca(__dst, v402, v427);
      uint64_t v390 = v100;
      uint64_t v105 = *(int *)(v100 + 20);
      unsigned int v106 = &__dst[v105];
      uint64_t v107 = &v402[v105];
      uint64_t v403 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v102 = v400;
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)unsigned int v106 = *(void *)v107;
        *((void *)v106 + 1) = *((void *)v107 + 1);
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v205 = updated[5];
        v206 = &v106[v205];
        v207 = &v107[v205];
        swift_bridgeObjectRetain();
        if (v393(v207, 1, v396))
        {
          uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v391 + 16))(v206, v207, v396);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v391 + 56))(v206, 0, 1, v396);
        }
        uint64_t v5 = v397;
        uint64_t v104 = v432;
        uint64_t v229 = updated[6];
        v230 = &v106[v229];
        v231 = &v107[v229];
        *(void *)v230 = *(void *)v231;
        *((void *)v230 + 1) = *((void *)v231 + 1);
        uint64_t v232 = updated[7];
        v233 = &v106[v232];
        v234 = &v107[v232];
        *(void *)v233 = *(void *)v234;
        *((void *)v233 + 1) = *((void *)v234 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v106[*(int *)(v235 + 48)] = v107[*(int *)(v235 + 48)];
      }
      else
      {
        uint64_t v109 = __dst;
        uint64_t v104 = v432;
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v106, v107, *(void *)(*(void *)(v403 - 8) + 64));
          }
          else
          {
            __srca(v106, v107, v427);
            uint64_t v110 = (int *)type metadata accessor for StaticHH2Update(0);
            v106[v110[5]] = v107[v110[5]];
            uint64_t v111 = v110[6];
            uint64_t v112 = &v106[v111];
            uint64_t v113 = &v107[v111];
            *(void *)uint64_t v112 = *(void *)v113;
            *((void *)v112 + 1) = *((void *)v113 + 1);
            uint64_t v114 = v110[7];
            uint64_t v115 = &v106[v114];
            uint64_t v116 = &v107[v114];
            char v117 = v116[8];
            *(void *)uint64_t v115 = *(void *)v116;
            v115[8] = v117;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v5 = v397;
          goto LABEL_80;
        }
        *(void *)unsigned int v106 = *(void *)v107;
        *((void *)v106 + 1) = *((void *)v107 + 1);
        v209 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v210 = v209[5];
        v388 = &v106[v210];
        v211 = &v107[v210];
        swift_bridgeObjectRetain();
        if (v393(v211, 1, v396))
        {
          uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v388, v211, *(void *)(*(void *)(v212 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v391 + 16))(v388, v211, v396);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v391 + 56))(v388, 0, 1, v396);
        }
        uint64_t v5 = v397;
        uint64_t v236 = v209[6];
        v237 = &v106[v236];
        v238 = &v107[v236];
        *(void *)v237 = *(void *)v238;
        *((void *)v237 + 1) = *((void *)v238 + 1);
        uint64_t v239 = v209[7];
        v240 = &v106[v239];
        v241 = &v107[v239];
        *(void *)v240 = *(void *)v241;
        *((void *)v240 + 1) = *((void *)v241 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v106[*(int *)(v242 + 48)] = v107[*(int *)(v242 + 48)];
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v109 = __dst;
LABEL_80:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v389 + 56))(v109, 0, 1, v390);
      unint64_t v103 = v430;
      goto LABEL_81;
    }
    goto LABEL_7;
  }
  if (v13)
  {
    sub_251A1B064((uint64_t)v7, qword_26B21EE20);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA26E0) - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    return v5;
  }
  uint64_t v17 = (int *)type metadata accessor for StaticService();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, int *))(v18 + 48);
  int v20 = v19(v7, 1, v17);
  int v21 = v19(v8, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_251D1D464((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_17;
    }
    uint64_t v118 = sub_251F34DA0();
    uint64_t v425 = *(void *)(v118 - 8);
    uint64_t v119 = *(void (**)(char *, char *, uint64_t))(v425 + 24);
    v119(v7, v8, v118);
    uint64_t v120 = v17[5];
    uint64_t v121 = &v7[v120];
    uint64_t v122 = &v8[v120];
    *(void *)uint64_t v121 = *(void *)v122;
    *((void *)v121 + 1) = *((void *)v122 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[v17[6]] = v8[v17[6]];
    v7[v17[7]] = v8[v17[7]];
    v7[v17[8]] = v8[v17[8]];
    v7[v17[9]] = v8[v17[9]];
    v7[v17[10]] = v8[v17[10]];
    uint64_t v428 = v118;
    v411 = v119;
    v119(&v7[v17[11]], &v8[v17[11]], v118);
    uint64_t v123 = v17[12];
    uint64_t v124 = &v7[v123];
    uint64_t v125 = &v8[v123];
    uint64_t v126 = *(void *)v125;
    v124[8] = v125[8];
    *(void *)uint64_t v124 = v126;
    uint64_t v127 = v17[13];
    char v128 = &v7[v127];
    v431 = v8;
    uint64_t v129 = &v8[v127];
    uint64_t v130 = (int *)type metadata accessor for StaticDeviceMetadata();
    uint64_t v420 = *((void *)v130 - 1);
    char v131 = *(uint64_t (**)(char *, uint64_t, int *))(v420 + 48);
    int v132 = v131(v128, 1, v130);
    int v133 = v131(v129, 1, v130);
    if (v132)
    {
      if (!v133)
      {
        (*(void (**)(char *, char *, uint64_t))(v425 + 16))(v128, v129, v428);
        uint64_t v134 = v130[5];
        uint64_t v135 = &v128[v134];
        long long v136 = &v129[v134];
        *(void *)uint64_t v135 = *(void *)v136;
        *((void *)v135 + 1) = *((void *)v136 + 1);
        uint64_t v137 = v130[6];
        uint64_t v138 = &v128[v137];
        uint64_t v139 = &v129[v137];
        *(void *)uint64_t v138 = *(void *)v139;
        *((void *)v138 + 1) = *((void *)v139 + 1);
        uint64_t v140 = v130[7];
        uint64_t v141 = &v128[v140];
        uint64_t v142 = &v129[v140];
        *(void *)uint64_t v141 = *(void *)v142;
        *((void *)v141 + 1) = *((void *)v142 + 1);
        uint64_t v143 = v130[8];
        uint64_t v144 = &v128[v143];
        uint64_t v145 = &v129[v143];
        *(void *)uint64_t v144 = *(void *)v145;
        *((void *)v144 + 1) = *((void *)v145 + 1);
        v128[v130[9]] = v129[v130[9]];
        v128[v130[10]] = v129[v130[10]];
        v128[v130[11]] = v129[v130[11]];
        v128[v130[12]] = v129[v130[12]];
        uint64_t v146 = *(void (**)(char *, void, uint64_t, int *))(v420 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v146(v128, 0, 1, v130);
        goto LABEL_62;
      }
    }
    else
    {
      if (!v133)
      {
        v119(v128, v129, v428);
        uint64_t v257 = v130[5];
        v258 = &v128[v257];
        v259 = &v129[v257];
        *(void *)v258 = *(void *)v259;
        *((void *)v258 + 1) = *((void *)v259 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v260 = v130[6];
        v261 = &v128[v260];
        v262 = &v129[v260];
        *(void *)v261 = *(void *)v262;
        *((void *)v261 + 1) = *((void *)v262 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v263 = v130[7];
        v264 = &v128[v263];
        v265 = &v129[v263];
        *(void *)v264 = *(void *)v265;
        *((void *)v264 + 1) = *((void *)v265 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v266 = v130[8];
        v267 = &v128[v266];
        v268 = &v129[v266];
        *(void *)v267 = *(void *)v268;
        *((void *)v267 + 1) = *((void *)v268 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v128[v130[9]] = v129[v130[9]];
        v128[v130[10]] = v129[v130[10]];
        v128[v130[11]] = v129[v130[11]];
        v128[v130[12]] = v129[v130[12]];
LABEL_62:
        v433 = v17;
        uint64_t v214 = v17[14];
        v215 = &v7[v214];
        v216 = &v431[v214];
        uint64_t v217 = sub_251F34D20();
        uint64_t v218 = *(void *)(v217 - 8);
        v219 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48);
        v421 = v215;
        LODWORD(v215) = v219(v215, 1, v217);
        v404 = v219;
        unsigned int v220 = v219(v216, 1, v217);
        uint64_t v407 = v217;
        uint64_t v399 = v218;
        if (v215)
        {
          if (v220)
          {
            size_t v221 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
            v222 = v421;
LABEL_67:
            memcpy(v222, v216, v221);
            goto LABEL_89;
          }
          (*(void (**)(char *, char *, uint64_t))(v218 + 16))(v421, v216, v217);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v218 + 56))(v421, 0, 1, v217);
        }
        else
        {
          if (v220)
          {
            (*(void (**)(char *, uint64_t))(v218 + 8))(v421, v217);
            size_t v221 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
            v222 = v421;
            goto LABEL_67;
          }
          (*(void (**)(char *, char *, uint64_t))(v218 + 24))(v421, v216, v217);
        }
LABEL_89:
        *(void *)&v7[v433[15]] = *(void *)&v431[v433[15]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v269 = v433[16];
        v270 = &v7[v269];
        v271 = &v431[v269];
        *(void *)v270 = *(void *)v271;
        *((void *)v270 + 1) = *((void *)v271 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v7[v433[17]] = v431[v433[17]];
        v7[v433[18]] = v431[v433[18]];
        v7[v433[19]] = v431[v433[19]];
        v7[v433[20]] = v431[v433[20]];
        uint64_t v272 = v433[21];
        v273 = &v7[v272];
        v274 = &v431[v272];
        *(void *)v273 = *(void *)v274;
        *((void *)v273 + 1) = *((void *)v274 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v7[v433[22]] = v431[v433[22]];
        v7[v433[23]] = v431[v433[23]];
        v7[v433[24]] = v431[v433[24]];
        uint64_t v275 = v433[25];
        v276 = &v7[v275];
        v277 = &v431[v275];
        v278 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v425 + 48);
        int v279 = v278(&v7[v275], 1, v428);
        v422 = v278;
        int v280 = v278(v277, 1, v428);
        if (v279)
        {
          if (v280)
          {
            uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v276, v277, *(void *)(*(void *)(v281 - 8) + 64));
            uint64_t v282 = v428;
          }
          else
          {
            uint64_t v282 = v428;
            (*(void (**)(char *, char *, uint64_t))(v425 + 16))(v276, v277, v428);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v425 + 56))(v276, 0, 1, v428);
          }
        }
        else
        {
          uint64_t v282 = v428;
          if (v280)
          {
            (*(void (**)(char *, uint64_t))(v425 + 8))(v276, v428);
            uint64_t v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v276, v277, *(void *)(*(void *)(v283 - 8) + 64));
          }
          else
          {
            v411(v276, v277, v428);
          }
        }
        uint64_t v284 = v433[26];
        v285 = &v7[v284];
        v286 = &v431[v284];
        int v287 = v278(&v7[v284], 1, v282);
        int v288 = v278(v286, 1, v282);
        if (v287)
        {
          if (!v288)
          {
            (*(void (**)(char *, char *, uint64_t))(v425 + 16))(v285, v286, v428);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v425 + 56))(v285, 0, 1, v428);
            goto LABEL_102;
          }
        }
        else
        {
          if (!v288)
          {
            v411(v285, v286, v428);
LABEL_102:
            *(void *)&v7[v433[27]] = *(void *)&v431[v433[27]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)&v7[v433[28]] = *(void *)&v431[v433[28]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v290 = v433[29];
            v291 = &v7[v290];
            v292 = &v431[v290];
            *(void *)&v7[v290] = *(void *)&v431[v290];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((void *)v291 + 1) = *((void *)v292 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v293 = v433[30];
            uint64_t v294 = (uint64_t)&v7[v293];
            v295 = &v431[v293];
            uint64_t v296 = type metadata accessor for StaticSoftwareUpdate(0);
            __dstc = *(void **)(v296 - 8);
            v297 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__dstc[6];
            int v298 = v297(v294, 1, v296);
            int v299 = v297((uint64_t)v295, 1, v296);
            if (v298)
            {
              if (!v299)
              {
                v300 = *(void (**)(uint64_t, char *, uint64_t))(v425 + 16);
                v300(v294, v295, v428);
                uint64_t v301 = *(int *)(v296 + 20);
                v302 = (void *)(v294 + v301);
                v303 = &v295[v301];
                uint64_t v304 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
                int v305 = swift_getEnumCaseMultiPayload();
                if (v305 == 2)
                {
                  void *v302 = *(void *)v303;
                  v302[1] = *((void *)v303 + 1);
                  v395 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
                  uint64_t v349 = v395[5];
                  v350 = (char *)v302 + v349;
                  v351 = &v303[v349];
                  swift_bridgeObjectRetain();
                  if (v404(v351, 1, v407))
                  {
LABEL_128:
                    uint64_t v353 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
                    memcpy(v350, v351, *(void *)(*(void *)(v353 - 8) + 64));
LABEL_137:
                    v354 = __dstc;
                    uint64_t v360 = v395[6];
                    v361 = (void *)((char *)v302 + v360);
                    v362 = &v303[v360];
                    void *v361 = *(void *)v362;
                    v361[1] = *((void *)v362 + 1);
                    uint64_t v363 = v395[7];
                    v364 = (void *)((char *)v302 + v363);
                    v365 = &v303[v363];
                    void *v364 = *(void *)v365;
                    v364[1] = *((void *)v365 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    uint64_t v366 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
                    *((unsigned char *)v302 + *(int *)(v366 + 48)) = v303[*(int *)(v366 + 48)];
                    swift_storeEnumTagMultiPayload();
LABEL_138:
                    ((void (*)(uint64_t, void, uint64_t, uint64_t))v354[7])(v294, 0, 1, v296);
                    goto LABEL_139;
                  }
                }
                else
                {
                  if (v305 != 1)
                  {
                    if (v305)
                    {
                      memcpy(v302, v303, *(void *)(*(void *)(v304 - 8) + 64));
                    }
                    else
                    {
                      v300((uint64_t)v302, v303, v428);
                      v306 = (int *)type metadata accessor for StaticHH2Update(0);
                      *((unsigned char *)v302 + v306[5]) = v303[v306[5]];
                      uint64_t v307 = v306[6];
                      v308 = (void *)((char *)v302 + v307);
                      v309 = &v303[v307];
                      void *v308 = *(void *)v309;
                      v308[1] = *((void *)v309 + 1);
                      uint64_t v310 = v306[7];
                      v311 = (char *)v302 + v310;
                      v312 = &v303[v310];
                      char v313 = v312[8];
                      *(void *)v311 = *(void *)v312;
                      v311[8] = v313;
                      swift_bridgeObjectRetain();
                      swift_storeEnumTagMultiPayload();
                    }
                    v354 = __dstc;
                    goto LABEL_138;
                  }
                  void *v302 = *(void *)v303;
                  v302[1] = *((void *)v303 + 1);
                  v395 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
                  uint64_t v352 = v395[5];
                  v350 = (char *)v302 + v352;
                  v351 = &v303[v352];
                  swift_bridgeObjectRetain();
                  if (v404(v351, 1, v407)) {
                    goto LABEL_128;
                  }
                }
                (*(void (**)(char *, char *, uint64_t))(v399 + 16))(v350, v351, v407);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v399 + 56))(v350, 0, 1, v407);
                goto LABEL_137;
              }
              goto LABEL_110;
            }
            if (v299)
            {
              sub_251D1D464(v294, type metadata accessor for StaticSoftwareUpdate);
LABEL_110:
              size_t v314 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
              v315 = (void *)v294;
              v316 = v295;
              goto LABEL_111;
            }
            v411((char *)v294, v295, v428);
            if (v5 == a2) {
              goto LABEL_139;
            }
            uint64_t v317 = *(int *)(v296 + 20);
            v318 = (void *)(v294 + v317);
            v319 = &v295[v317];
            sub_251D1D464(v294 + v317, type metadata accessor for StaticSoftwareUpdate.Kind);
            uint64_t v320 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
            int v321 = swift_getEnumCaseMultiPayload();
            switch(v321)
            {
              case 2:
                void *v318 = *(void *)v319;
                v318[1] = *((void *)v319 + 1);
                v355 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
                uint64_t v356 = v355[5];
                __dstd = (char *)v318 + v356;
                v357 = &v319[v356];
                swift_bridgeObjectRetain();
                if (v404(v357, 1, v407))
                {
LABEL_132:
                  uint64_t v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
                  memcpy(__dstd, v357, *(void *)(*(void *)(v358 - 8) + 64));
LABEL_148:
                  uint64_t v381 = v355[6];
                  v382 = (void *)((char *)v318 + v381);
                  v383 = &v319[v381];
                  void *v382 = *(void *)v383;
                  v382[1] = *((void *)v383 + 1);
                  uint64_t v384 = v355[7];
                  v385 = (void *)((char *)v318 + v384);
                  v386 = &v319[v384];
                  void *v385 = *(void *)v386;
                  v385[1] = *((void *)v386 + 1);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v387 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
                  *((unsigned char *)v318 + *(int *)(v387 + 48)) = v319[*(int *)(v387 + 48)];
                  swift_storeEnumTagMultiPayload();
LABEL_139:
                  v7[v433[31]] = v431[v433[31]];
                  *(void *)&v7[v433[32]] = *(void *)&v431[v433[32]];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  uint64_t v367 = v433[33];
                  v368 = &v7[v367];
                  v369 = &v431[v367];
                  int v370 = v422(&v7[v367], 1, v428);
                  int v371 = v422(v369, 1, v428);
                  if (v370)
                  {
                    if (!v371)
                    {
                      (*(void (**)(char *, char *, uint64_t))(v425 + 16))(v368, v369, v428);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v425 + 56))(v368, 0, 1, v428);
LABEL_145:
                      uint64_t v373 = v433[34];
                      v374 = &v7[v373];
                      v375 = &v431[v373];
                      __int16 v376 = *(_WORD *)v375;
                      v374[2] = v375[2];
                      *(_WORD *)v374 = v376;
                      uint64_t v377 = v433[35];
                      v378 = &v7[v377];
                      v379 = &v431[v377];
                      uint64_t v380 = *(void *)v379;
                      *(_DWORD *)(v378 + 7) = *(_DWORD *)(v379 + 7);
                      *(void *)v378 = v380;
                      return v5;
                    }
                  }
                  else
                  {
                    if (!v371)
                    {
                      v411(v368, v369, v428);
                      goto LABEL_145;
                    }
                    (*(void (**)(char *, uint64_t))(v425 + 8))(v368, v428);
                  }
                  uint64_t v372 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
                  memcpy(v368, v369, *(void *)(*(void *)(v372 - 8) + 64));
                  goto LABEL_145;
                }
                break;
              case 1:
                void *v318 = *(void *)v319;
                v318[1] = *((void *)v319 + 1);
                v355 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
                uint64_t v359 = v355[5];
                __dstd = (char *)v318 + v359;
                v357 = &v319[v359];
                swift_bridgeObjectRetain();
                if (v404(v357, 1, v407)) {
                  goto LABEL_132;
                }
                break;
              case 0:
                (*(void (**)(void *, char *, uint64_t))(v425 + 16))(v318, v319, v428);
                v322 = (int *)type metadata accessor for StaticHH2Update(0);
                *((unsigned char *)v318 + v322[5]) = v319[v322[5]];
                uint64_t v323 = v322[6];
                v324 = (void *)((char *)v318 + v323);
                v325 = &v319[v323];
                void *v324 = *(void *)v325;
                v324[1] = *((void *)v325 + 1);
                uint64_t v326 = v322[7];
                v327 = (char *)v318 + v326;
                v328 = &v319[v326];
                char v329 = v328[8];
                *(void *)v327 = *(void *)v328;
                v327[8] = v329;
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload();
                goto LABEL_139;
              default:
                size_t v314 = *(void *)(*(void *)(v320 - 8) + 64);
                v315 = v318;
                v316 = v319;
LABEL_111:
                memcpy(v315, v316, v314);
                goto LABEL_139;
            }
            (*(void (**)(char *, char *, uint64_t))(v399 + 16))(__dstd, v357, v407);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v399 + 56))(__dstd, 0, 1, v407);
            goto LABEL_148;
          }
          (*(void (**)(char *, uint64_t))(v425 + 8))(v285, v428);
        }
        uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v285, v286, *(void *)(*(void *)(v289 - 8) + 64));
        goto LABEL_102;
      }
      sub_251D1D464((uint64_t)v128, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    }
    uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v128, v129, *(void *)(*(void *)(v213 - 8) + 64));
    goto LABEL_62;
  }
  if (v21)
  {
LABEL_17:
    size_t v16 = *(void *)(v10 + 64);
    goto LABEL_8;
  }
  uint64_t v405 = v18;
  uint64_t v22 = sub_251F34DA0();
  __src = *(void **)(v22 - 8);
  uint64_t v23 = (void (*)(char *, char *, uint64_t))__src[2];
  v23(v7, v8, v22);
  uint64_t v24 = v17[5];
  uint64_t v25 = &v7[v24];
  unint64_t v26 = &v8[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  v7[v17[6]] = v8[v17[6]];
  v7[v17[7]] = v8[v17[7]];
  v7[v17[8]] = v8[v17[8]];
  v7[v17[9]] = v8[v17[9]];
  v7[v17[10]] = v8[v17[10]];
  uint64_t v27 = v17[11];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  swift_bridgeObjectRetain();
  v23(v28, v29, v22);
  uint64_t v30 = v17[12];
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  uint64_t v33 = *(void *)v32;
  v31[8] = v32[8];
  *(void *)uint64_t v31 = v33;
  uint64_t v34 = v17[13];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  uint64_t v37 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v38 = *((void *)v37 - 1);
  uint64_t v426 = v22;
  v429 = v8;
  v423 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    v23(v35, v36, v22);
    uint64_t v147 = v37[5];
    uint64_t v148 = &v35[v147];
    uint64_t v149 = &v36[v147];
    *(void *)uint64_t v148 = *(void *)v149;
    *((void *)v148 + 1) = *((void *)v149 + 1);
    uint64_t v150 = v37[6];
    uint64_t v151 = &v35[v150];
    uint64_t v152 = &v36[v150];
    *(void *)uint64_t v151 = *(void *)v152;
    *((void *)v151 + 1) = *((void *)v152 + 1);
    uint64_t v153 = v37[7];
    uint64_t v154 = &v35[v153];
    uint64_t v155 = &v36[v153];
    *(void *)uint64_t v154 = *(void *)v155;
    *((void *)v154 + 1) = *((void *)v155 + 1);
    uint64_t v156 = v37[8];
    uint64_t v157 = &v35[v156];
    uint64_t v158 = &v36[v156];
    *(void *)uint64_t v157 = *(void *)v158;
    *((void *)v157 + 1) = *((void *)v158 + 1);
    v35[v37[9]] = v36[v37[9]];
    v35[v37[10]] = v36[v37[10]];
    v35[v37[11]] = v36[v37[11]];
    v35[v37[12]] = v36[v37[12]];
    uint64_t v159 = *(void (**)(char *, void, uint64_t, int *))(v38 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v159(v35, 0, 1, v37);
  }
  uint64_t v160 = v17[14];
  uint64_t v161 = &v7[v160];
  uint64_t v162 = &v8[v160];
  uint64_t v163 = sub_251F34D20();
  uint64_t v164 = *(void *)(v163 - 8);
  v398 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48);
  uint64_t v401 = v163;
  uint64_t v394 = v164;
  if (v398(v162, 1, v163))
  {
    uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v161, v162, *(void *)(*(void *)(v165 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v161, v162, v163);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
  }
  *(void *)&v7[v17[15]] = *(void *)&v8[v17[15]];
  uint64_t v166 = v17[16];
  long long v167 = &v7[v166];
  uint64_t v168 = &v8[v166];
  *(void *)long long v167 = *(void *)v168;
  *((void *)v167 + 1) = *((void *)v168 + 1);
  v7[v17[17]] = v8[v17[17]];
  v7[v17[18]] = v8[v17[18]];
  v7[v17[19]] = v8[v17[19]];
  v7[v17[20]] = v8[v17[20]];
  uint64_t v169 = v17[21];
  v170 = &v7[v169];
  v171 = &v8[v169];
  *(void *)v170 = *(void *)v171;
  *((void *)v170 + 1) = *((void *)v171 + 1);
  v7[v17[22]] = v8[v17[22]];
  v7[v17[23]] = v8[v17[23]];
  v7[v17[24]] = v8[v17[24]];
  uint64_t v172 = v17[25];
  __dsta = &v7[v172];
  uint64_t v173 = &v8[v172];
  v174 = (unsigned int (*)(char *, uint64_t, uint64_t))__src[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v174(v173, 1, v426))
  {
    uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(__dsta, v173, *(void *)(*(void *)(v175 - 8) + 64));
  }
  else
  {
    v23(__dsta, v173, v426);
    ((void (*)(char *, void, uint64_t, uint64_t))__src[7])(__dsta, 0, 1, v426);
  }
  uint64_t v176 = v17[26];
  uint64_t v177 = &v7[v176];
  v178 = &v8[v176];
  v412 = v174;
  if (v174(&v8[v176], 1, v426))
  {
    uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
  }
  else
  {
    v23(v177, v178, v426);
    ((void (*)(char *, void, uint64_t, uint64_t))__src[7])(v177, 0, 1, v426);
  }
  *(void *)&v7[v17[27]] = *(void *)&v8[v17[27]];
  *(void *)&v7[v17[28]] = *(void *)&v8[v17[28]];
  uint64_t v180 = v17[29];
  v181 = &v7[v180];
  v182 = &v8[v180];
  *(void *)v181 = *(void *)v182;
  *((void *)v181 + 1) = *((void *)v182 + 1);
  uint64_t v183 = v17[30];
  __dstb = &v7[v183];
  v408 = &v8[v183];
  uint64_t v184 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v185 = *(void *)(v184 - 8);
  v186 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v185 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v186(v408, 1, v184))
  {
    uint64_t v191 = v185;
    v23(__dstb, v408, v426);
    uint64_t v192 = *(int *)(v184 + 20);
    v193 = &__dstb[v192];
    v194 = &v408[v192];
    uint64_t v409 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v195 = swift_getEnumCaseMultiPayload();
    if (v195 == 2)
    {
      *(void *)v193 = *(void *)v194;
      *((void *)v193 + 1) = *((void *)v194 + 1);
      v392 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v223 = v392[5];
      v224 = &v193[v223];
      v225 = &v194[v223];
      swift_bridgeObjectRetain();
      if (v398(v225, 1, v401))
      {
LABEL_72:
        uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v224, v225, *(void *)(*(void *)(v227 - 8) + 64));
LABEL_119:
        v228 = __dstb;
        uint64_t v330 = v392[6];
        v331 = &v193[v330];
        v332 = &v194[v330];
        *(void *)v331 = *(void *)v332;
        *((void *)v331 + 1) = *((void *)v332 + 1);
        uint64_t v333 = v392[7];
        v334 = &v193[v333];
        v335 = &v194[v333];
        *(void *)v334 = *(void *)v335;
        *((void *)v334 + 1) = *((void *)v335 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v336 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v193[*(int *)(v336 + 48)] = v194[*(int *)(v336 + 48)];
        swift_storeEnumTagMultiPayload();
LABEL_120:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v191 + 56))(v228, 0, 1, v184);
        uint64_t v189 = v426;
        v188 = v429;
        uint64_t v190 = v405;
        goto LABEL_121;
      }
    }
    else
    {
      if (v195 != 1)
      {
        if (v195)
        {
          memcpy(v193, v194, *(void *)(*(void *)(v409 - 8) + 64));
        }
        else
        {
          v423(v193, v194, v426);
          v196 = (int *)type metadata accessor for StaticHH2Update(0);
          v193[v196[5]] = v194[v196[5]];
          uint64_t v197 = v196[6];
          v198 = &v193[v197];
          v199 = &v194[v197];
          *(void *)v198 = *(void *)v199;
          *((void *)v198 + 1) = *((void *)v199 + 1);
          uint64_t v200 = v196[7];
          v201 = &v193[v200];
          v202 = &v194[v200];
          char v203 = v202[8];
          *(void *)v201 = *(void *)v202;
          v201[8] = v203;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        v228 = __dstb;
        goto LABEL_120;
      }
      *(void *)v193 = *(void *)v194;
      *((void *)v193 + 1) = *((void *)v194 + 1);
      v392 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v226 = v392[5];
      v224 = &v193[v226];
      v225 = &v194[v226];
      swift_bridgeObjectRetain();
      if (v398(v225, 1, v401)) {
        goto LABEL_72;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v394 + 16))(v224, v225, v401);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v394 + 56))(v224, 0, 1, v401);
    goto LABEL_119;
  }
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(__dstb, v408, *(void *)(*(void *)(v187 - 8) + 64));
  uint64_t v189 = v426;
  v188 = v429;
  uint64_t v190 = v405;
LABEL_121:
  v7[v17[31]] = v188[v17[31]];
  *(void *)&v7[v17[32]] = *(void *)&v188[v17[32]];
  uint64_t v337 = v17[33];
  v338 = &v7[v337];
  v339 = &v188[v337];
  swift_bridgeObjectRetain();
  if (v412(v339, 1, v189))
  {
    uint64_t v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v338, v339, *(void *)(*(void *)(v340 - 8) + 64));
  }
  else
  {
    v423(v338, v339, v189);
    ((void (*)(char *, void, uint64_t, uint64_t))__src[7])(v338, 0, 1, v189);
  }
  uint64_t v341 = v17[34];
  v342 = &v7[v341];
  v343 = &v188[v341];
  __int16 v344 = *(_WORD *)v343;
  v342[2] = v343[2];
  *(_WORD *)v342 = v344;
  uint64_t v345 = v17[35];
  v346 = &v7[v345];
  v347 = &v188[v345];
  uint64_t v348 = *(void *)v347;
  *(_DWORD *)(v346 + 7) = *(_DWORD *)(v347 + 7);
  *(void *)v346 = v348;
  (*(void (**)(char *, void, uint64_t, int *))(v190 + 56))(v7, 0, 1, v17);
  return v5;
}

uint64_t sub_251D1D464(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for AnyTileInfoBearer(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v11 = (int *)type metadata accessor for StaticService();
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v7, 1, v11))
    {
      memcpy(v6, v7, *(void *)(v9 + 64));
LABEL_36:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      return a1;
    }
    uint64_t v79 = v8;
    uint64_t v80 = v9;
    uint64_t v78 = v12;
    uint64_t v13 = sub_251F34DA0();
    uint64_t v81 = *(void *)(v13 - 8);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
    v14(v6, v7, v13);
    *(_OWORD *)&v6[v11[5]] = *(_OWORD *)&v7[v11[5]];
    v6[v11[6]] = v7[v11[6]];
    v6[v11[7]] = v7[v11[7]];
    v6[v11[8]] = v7[v11[8]];
    v6[v11[9]] = v7[v11[9]];
    v6[v11[10]] = v7[v11[10]];
    v14(&v6[v11[11]], &v7[v11[11]], v13);
    uint64_t v15 = v11[12];
    size_t v16 = &v6[v15];
    uint64_t v17 = &v7[v15];
    *(void *)size_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = v11[13];
    uint64_t v19 = &v6[v18];
    int v20 = &v7[v18];
    int v21 = (int *)type metadata accessor for StaticDeviceMetadata();
    uint64_t v84 = *((void *)v21 - 1);
    uint64_t v85 = v13;
    uint64_t v82 = v14;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v84 + 48))(v20, 1, v21))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v14(v19, v20, v13);
      *(_OWORD *)&v19[v21[5]] = *(_OWORD *)&v20[v21[5]];
      *(_OWORD *)&v19[v21[6]] = *(_OWORD *)&v20[v21[6]];
      *(_OWORD *)&v19[v21[7]] = *(_OWORD *)&v20[v21[7]];
      *(_OWORD *)&v19[v21[8]] = *(_OWORD *)&v20[v21[8]];
      v19[v21[9]] = v20[v21[9]];
      v19[v21[10]] = v20[v21[10]];
      v19[v21[11]] = v20[v21[11]];
      v19[v21[12]] = v20[v21[12]];
      (*(void (**)(char *, void, uint64_t, int *))(v84 + 56))(v19, 0, 1, v21);
    }
    uint64_t v23 = v11[14];
    uint64_t v24 = &v6[v23];
    uint64_t v25 = &v7[v23];
    uint64_t v26 = sub_251F34D20();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    uint64_t v8 = v79;
    uint64_t v76 = v27;
    if (v77(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    *(void *)&v6[v11[15]] = *(void *)&v7[v11[15]];
    *(_OWORD *)&v6[v11[16]] = *(_OWORD *)&v7[v11[16]];
    v6[v11[17]] = v7[v11[17]];
    v6[v11[18]] = v7[v11[18]];
    v6[v11[19]] = v7[v11[19]];
    v6[v11[20]] = v7[v11[20]];
    *(_OWORD *)&v6[v11[21]] = *(_OWORD *)&v7[v11[21]];
    v6[v11[22]] = v7[v11[22]];
    v6[v11[23]] = v7[v11[23]];
    v6[v11[24]] = v7[v11[24]];
    uint64_t v29 = v11[25];
    uint64_t v30 = &v6[v29];
    uint64_t v31 = &v7[v29];
    char v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
    if (v83(&v7[v29], 1, v13))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v82(v30, v31, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v30, 0, 1, v13);
    }
    uint64_t v33 = v11[26];
    uint64_t v34 = &v6[v33];
    uint64_t v35 = &v7[v33];
    if (v83(&v7[v33], 1, v13))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v82(v34, v35, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v34, 0, 1, v13);
    }
    *(void *)&v6[v11[27]] = *(void *)&v7[v11[27]];
    *(void *)&v6[v11[28]] = *(void *)&v7[v11[28]];
    *(_OWORD *)&v6[v11[29]] = *(_OWORD *)&v7[v11[29]];
    uint64_t v37 = v11[30];
    uint64_t v38 = &v6[v37];
    uint64_t v39 = &v7[v37];
    uint64_t v40 = type metadata accessor for StaticSoftwareUpdate(0);
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      uint64_t v43 = v78;
LABEL_32:
      v6[v11[31]] = v7[v11[31]];
      *(void *)&v6[v11[32]] = *(void *)&v7[v11[32]];
      uint64_t v60 = v11[33];
      uint64_t v61 = &v6[v60];
      uint64_t v62 = &v7[v60];
      if (v83(&v7[v60], 1, v85))
      {
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        v82(v61, v62, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v61, 0, 1, v85);
      }
      uint64_t v9 = v80;
      uint64_t v64 = v11[34];
      uint64_t v65 = &v6[v64];
      uint64_t v66 = &v7[v64];
      *(_WORD *)uint64_t v65 = *(_WORD *)v66;
      v65[2] = v66[2];
      uint64_t v67 = v11[35];
      uint64_t v68 = &v6[v67];
      uint64_t v69 = &v7[v67];
      *(_DWORD *)(v68 + 7) = *(_DWORD *)(v69 + 7);
      *(void *)uint64_t v68 = *(void *)v69;
      (*(void (**)(char *, void, uint64_t, int *))(v43 + 56))(v6, 0, 1, v11);
      goto LABEL_36;
    }
    uint64_t v74 = v41;
    v82(v38, v39, v85);
    uint64_t v44 = *(int *)(v40 + 20);
    uint64_t v75 = v38;
    uint64_t v45 = &v38[v44];
    uint64_t v46 = &v39[v44];
    uint64_t v73 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v72 = v45;
      uint64_t v52 = updated[5];
      uint64_t v53 = &v45[v52];
      uint64_t v54 = &v46[v52];
      if (v77(&v46[v52], 1, v26))
      {
LABEL_26:
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
LABEL_30:
        uint64_t v58 = v74;
        *(_OWORD *)((char *)v72 + updated[6]) = *(_OWORD *)&v46[updated[6]];
        *(_OWORD *)((char *)v72 + updated[7]) = *(_OWORD *)&v46[updated[7]];
        uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)v72 + *(int *)(v59 + 48)) = v46[*(int *)(v59 + 48)];
        swift_storeEnumTagMultiPayload();
        uint64_t v43 = v78;
        uint64_t v57 = v75;
LABEL_31:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v57, 0, 1, v40);
        goto LABEL_32;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v45, v46, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          v82(v45, v46, v85);
          uint64_t v48 = (int *)type metadata accessor for StaticHH2Update(0);
          v45[v48[5]] = v46[v48[5]];
          *(_OWORD *)&v45[v48[6]] = *(_OWORD *)&v46[v48[6]];
          uint64_t v49 = v48[7];
          uint64_t v50 = &v45[v49];
          uint64_t v51 = &v46[v49];
          v50[8] = v51[8];
          *(void *)uint64_t v50 = *(void *)v51;
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v43 = v78;
        uint64_t v58 = v41;
        uint64_t v57 = v75;
        goto LABEL_31;
      }
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v72 = v45;
      uint64_t v55 = updated[5];
      uint64_t v53 = &v45[v55];
      uint64_t v54 = &v46[v55];
      if (v77(&v46[v55], 1, v26)) {
        goto LABEL_26;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v53, v54, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v53, 0, 1, v26);
    goto LABEL_30;
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA26E0);
  memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

uint64_t assignWithTake for AnyTileInfoBearer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = (int *)type metadata accessor for StaticService();
      uint64_t v15 = (unsigned int (**)(const void *, uint64_t, int *))*((void *)v14 - 1);
      if (v15[6](v8, 1, v14))
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
LABEL_83:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
        return a1;
      }
      v302 = v15;
      uint64_t v33 = v7;
      uint64_t v34 = sub_251F34DA0();
      uint64_t v318 = *(void *)(v34 - 8);
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v318 + 32);
      v35(v33, v8, v34);
      *(_OWORD *)&v33[v14[5]] = *(_OWORD *)&v8[v14[5]];
      v33[v14[6]] = v8[v14[6]];
      v33[v14[7]] = v8[v14[7]];
      v33[v14[8]] = v8[v14[8]];
      v33[v14[9]] = v8[v14[9]];
      v33[v14[10]] = v8[v14[10]];
      v35(&v33[v14[11]], &v8[v14[11]], v34);
      uint64_t v36 = v14[12];
      uint64_t v37 = &v33[v36];
      uint64_t v38 = &v8[v36];
      *(void *)uint64_t v37 = *(void *)v38;
      v37[8] = v38[8];
      uint64_t v39 = v14[13];
      int v299 = v33;
      uint64_t v40 = &v33[v39];
      uint64_t v320 = v8;
      uint64_t v41 = &v8[v39];
      uint64_t v42 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v43 = *((void *)v42 - 1);
      uint64_t v307 = v35;
      uint64_t v315 = v34;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        v35(v40, v41, v34);
        *(_OWORD *)&v40[v42[5]] = *(_OWORD *)&v41[v42[5]];
        *(_OWORD *)&v40[v42[6]] = *(_OWORD *)&v41[v42[6]];
        *(_OWORD *)&v40[v42[7]] = *(_OWORD *)&v41[v42[7]];
        *(_OWORD *)&v40[v42[8]] = *(_OWORD *)&v41[v42[8]];
        v40[v42[9]] = v41[v42[9]];
        v40[v42[10]] = v41[v42[10]];
        v40[v42[11]] = v41[v42[11]];
        v40[v42[12]] = v41[v42[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v43 + 56))(v40, 0, 1, v42);
      }
      uint64_t v45 = v14[14];
      uint64_t v7 = v299;
      uint64_t v46 = &v299[v45];
      uint64_t v47 = &v320[v45];
      uint64_t v48 = sub_251F34D20();
      uint64_t v49 = *(void *)(v48 - 8);
      uint64_t v294 = *(unsigned int (**)(void))(v49 + 48);
      uint64_t v297 = v48;
      int v287 = (void (**)(void *, const void *, void))v49;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v294)(v47, 1, v48))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      *(void *)&v299[v14[15]] = *(void *)&v320[v14[15]];
      *(_OWORD *)&v299[v14[16]] = *(_OWORD *)&v320[v14[16]];
      v299[v14[17]] = v320[v14[17]];
      v299[v14[18]] = v320[v14[18]];
      v299[v14[19]] = v320[v14[19]];
      v299[v14[20]] = v320[v14[20]];
      *(_OWORD *)&v299[v14[21]] = *(_OWORD *)&v320[v14[21]];
      v299[v14[22]] = v320[v14[22]];
      v299[v14[23]] = v320[v14[23]];
      v299[v14[24]] = v320[v14[24]];
      uint64_t v51 = v14[25];
      uint64_t v52 = &v299[v51];
      uint64_t v53 = &v320[v51];
      uint64_t v310 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v318 + 48);
      if (v310(&v320[v51], 1, v315))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        v307(v52, v53, v315);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v318 + 56))(v52, 0, 1, v315);
      }
      uint64_t v55 = v14[26];
      uint64_t v56 = &v299[v55];
      uint64_t v57 = &v320[v55];
      if (v310(&v320[v55], 1, v315))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
        uint64_t v59 = v307;
      }
      else
      {
        uint64_t v59 = v307;
        v307(v56, v57, v315);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v318 + 56))(v56, 0, 1, v315);
      }
      *(void *)&v299[v14[27]] = *(void *)&v320[v14[27]];
      *(void *)&v299[v14[28]] = *(void *)&v320[v14[28]];
      *(_OWORD *)&v299[v14[29]] = *(_OWORD *)&v320[v14[29]];
      uint64_t v60 = v14[30];
      uint64_t v61 = &v299[v60];
      uint64_t v62 = &v320[v60];
      uint64_t v63 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v64 = *(void *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
      {
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
        uint64_t v67 = v318;
        uint64_t v66 = v320;
        uint64_t v68 = v315;
LABEL_79:
        v299[v14[31]] = v66[v14[31]];
        *(void *)&v299[v14[32]] = *(void *)&v66[v14[32]];
        uint64_t v155 = v14[33];
        uint64_t v156 = &v299[v155];
        uint64_t v157 = &v66[v155];
        if (v310(&v66[v155], 1, v68))
        {
          uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          v307(v156, v157, v68);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v156, 0, 1, v68);
        }
        uint64_t v159 = v14[34];
        uint64_t v160 = &v299[v159];
        uint64_t v161 = &v66[v159];
        *(_WORD *)uint64_t v160 = *(_WORD *)v161;
        v160[2] = v161[2];
        uint64_t v162 = v14[35];
        uint64_t v163 = &v299[v162];
        uint64_t v164 = &v66[v162];
        *(_DWORD *)(v163 + 7) = *(_DWORD *)(v164 + 7);
        *(void *)uint64_t v163 = *(void *)v164;
        ((void (*)(char *, void, uint64_t, int *))v302[7])(v299, 0, 1, v14);
        goto LABEL_83;
      }
      v59(v61, v62, v315);
      uint64_t v283 = (void *)v63;
      uint64_t v69 = *(int *)(v63 + 20);
      uint64_t v281 = v61;
      uint64_t v70 = &v61[v69];
      uint64_t v71 = &v62[v69];
      uint64_t v282 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
        uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v128 = *(int *)(updated + 20);
        int v279 = v70;
        uint64_t v276 = updated;
        __dst = &v70[v128];
        uint64_t v129 = &v71[v128];
        uint64_t v73 = v64;
        if (v294())
        {
          uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dst, v129, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          v287[4](__dst, v129, v297);
          ((void (*)(char *, void, uint64_t, uint64_t))v287[7])(__dst, 0, 1, v297);
        }
        uint64_t v81 = v281;
        uint64_t v68 = v315;
        *(_OWORD *)((char *)v279 + *(int *)(v276 + 24)) = *(_OWORD *)&v71[*(int *)(v276 + 24)];
        *(_OWORD *)((char *)v279 + *(int *)(v276 + 28)) = *(_OWORD *)&v71[*(int *)(v276 + 28)];
        uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)v279 + *(int *)(v153 + 48)) = v71[*(int *)(v153 + 48)];
      }
      else
      {
        uint64_t v73 = v64;
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v74 = v283;
          if (EnumCaseMultiPayload)
          {
            memcpy(v70, v71, *(void *)(*(void *)(v282 - 8) + 64));
            uint64_t v81 = v281;
            uint64_t v68 = v315;
          }
          else
          {
            uint64_t v75 = v70;
            uint64_t v76 = v70;
            uint64_t v68 = v315;
            v59(v75, v71, v315);
            uint64_t v77 = (int *)type metadata accessor for StaticHH2Update(0);
            *((unsigned char *)v76 + v77[5]) = v71[v77[5]];
            *(_OWORD *)((char *)v76 + v77[6]) = *(_OWORD *)&v71[v77[6]];
            uint64_t v78 = v77[7];
            uint64_t v79 = (char *)v76 + v78;
            uint64_t v80 = &v71[v78];
            v79[8] = v80[8];
            *(void *)uint64_t v79 = *(void *)v80;
            uint64_t v74 = v283;
            swift_storeEnumTagMultiPayload();
            uint64_t v81 = v281;
          }
          goto LABEL_78;
        }
        *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
        __dsta = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        int v280 = v70;
        uint64_t v131 = __dsta[5];
        int v132 = &v70[v131];
        int v133 = &v71[v131];
        if (v294())
        {
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          v287[4](v132, v133, v297);
          ((void (*)(char *, void, uint64_t, uint64_t))v287[7])(v132, 0, 1, v297);
        }
        uint64_t v81 = v281;
        uint64_t v68 = v315;
        *(_OWORD *)((char *)v280 + __dsta[6]) = *(_OWORD *)&v71[__dsta[6]];
        *(_OWORD *)((char *)v280 + __dsta[7]) = *(_OWORD *)&v71[__dsta[7]];
        uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)v280 + *(int *)(v154 + 48)) = v71[*(int *)(v154 + 48)];
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v74 = v283;
LABEL_78:
      (*(void (**)(char *, void, uint64_t, void *))(v73 + 56))(v81, 0, 1, v74);
      uint64_t v67 = v318;
      uint64_t v66 = v320;
      goto LABEL_79;
    }
    goto LABEL_7;
  }
  if (v13)
  {
    sub_251A1B064((uint64_t)v7, qword_26B21EE20);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA26E0) - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    return a1;
  }
  uint64_t v17 = (int *)type metadata accessor for StaticService();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, int *))(v18 + 48);
  int v20 = v19(v7, 1, v17);
  int v21 = v19(v8, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_251D1D464((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_17;
    }
    uint64_t v82 = sub_251F34DA0();
    uint64_t v319 = *(void *)(v82 - 8);
    char v83 = *(void (**)(char *, char *, uint64_t))(v319 + 40);
    v83(v7, v8, v82);
    uint64_t v84 = v17[5];
    uint64_t v85 = &v7[v84];
    char v86 = &v8[v84];
    uint64_t v88 = *(void *)v86;
    uint64_t v87 = *((void *)v86 + 1);
    *(void *)uint64_t v85 = v88;
    *((void *)v85 + 1) = v87;
    swift_bridgeObjectRelease();
    v7[v17[6]] = v8[v17[6]];
    v7[v17[7]] = v8[v17[7]];
    v7[v17[8]] = v8[v17[8]];
    v7[v17[9]] = v8[v17[9]];
    v7[v17[10]] = v8[v17[10]];
    uint64_t v316 = v82;
    v308 = v83;
    v83(&v7[v17[11]], &v8[v17[11]], v82);
    uint64_t v89 = v17[12];
    uint64_t v90 = &v7[v89];
    unint64_t v91 = &v8[v89];
    *(void *)uint64_t v90 = *(void *)v91;
    v90[8] = v91[8];
    uint64_t v92 = v17[13];
    uint64_t v93 = &v7[v92];
    int v321 = v8;
    uint64_t v94 = &v8[v92];
    char v95 = (int *)type metadata accessor for StaticDeviceMetadata();
    uint64_t v312 = *((void *)v95 - 1);
    uint64_t v96 = *(uint64_t (**)(char *, uint64_t, int *))(v312 + 48);
    int v97 = v96(v93, 1, v95);
    int v98 = v96(v94, 1, v95);
    if (v97)
    {
      if (!v98)
      {
        (*(void (**)(char *, char *, uint64_t))(v319 + 32))(v93, v94, v316);
        *(_OWORD *)&v93[v95[5]] = *(_OWORD *)&v94[v95[5]];
        *(_OWORD *)&v93[v95[6]] = *(_OWORD *)&v94[v95[6]];
        *(_OWORD *)&v93[v95[7]] = *(_OWORD *)&v94[v95[7]];
        *(_OWORD *)&v93[v95[8]] = *(_OWORD *)&v94[v95[8]];
        v93[v95[9]] = v94[v95[9]];
        v93[v95[10]] = v94[v95[10]];
        v93[v95[11]] = v94[v95[11]];
        v93[v95[12]] = v94[v95[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v312 + 56))(v93, 0, 1, v95);
        goto LABEL_61;
      }
    }
    else
    {
      if (!v98)
      {
        v83(v93, v94, v316);
        uint64_t v166 = v95[5];
        long long v167 = &v93[v166];
        uint64_t v168 = &v94[v166];
        uint64_t v170 = *(void *)v168;
        uint64_t v169 = *((void *)v168 + 1);
        *(void *)long long v167 = v170;
        *((void *)v167 + 1) = v169;
        swift_bridgeObjectRelease();
        uint64_t v171 = v95[6];
        uint64_t v172 = &v93[v171];
        uint64_t v173 = &v94[v171];
        uint64_t v175 = *(void *)v173;
        uint64_t v174 = *((void *)v173 + 1);
        *(void *)uint64_t v172 = v175;
        *((void *)v172 + 1) = v174;
        swift_bridgeObjectRelease();
        uint64_t v176 = v95[7];
        uint64_t v177 = &v93[v176];
        v178 = &v94[v176];
        uint64_t v180 = *(void *)v178;
        uint64_t v179 = *((void *)v178 + 1);
        *(void *)uint64_t v177 = v180;
        *((void *)v177 + 1) = v179;
        swift_bridgeObjectRelease();
        uint64_t v181 = v95[8];
        v182 = &v93[v181];
        uint64_t v183 = &v94[v181];
        uint64_t v185 = *(void *)v183;
        uint64_t v184 = *((void *)v183 + 1);
        *(void *)v182 = v185;
        *((void *)v182 + 1) = v184;
        swift_bridgeObjectRelease();
        v93[v95[9]] = v94[v95[9]];
        v93[v95[10]] = v94[v95[10]];
        v93[v95[11]] = v94[v95[11]];
        v93[v95[12]] = v94[v95[12]];
LABEL_61:
        uint64_t v136 = v17[14];
        uint64_t v137 = &v7[v136];
        uint64_t v138 = &v321[v136];
        uint64_t v139 = sub_251F34D20();
        uint64_t v140 = *(void *)(v139 - 8);
        uint64_t v141 = *(unsigned int (**)(void))(v140 + 48);
        v311 = v137;
        LODWORD(v137) = ((uint64_t (*)(char *, uint64_t, uint64_t))v141)(v137, 1, v139);
        int v298 = v141;
        int v142 = ((uint64_t (*)(char *, uint64_t, uint64_t))v141)(v138, 1, v139);
        uint64_t v301 = v139;
        uint64_t v296 = v140;
        if (v137)
        {
          if (v142)
          {
            size_t v143 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
            uint64_t v144 = v311;
LABEL_66:
            memcpy(v144, v138, v143);
            goto LABEL_87;
          }
          (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v311, v138, v139);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v140 + 56))(v311, 0, 1, v139);
        }
        else
        {
          if (v142)
          {
            (*(void (**)(char *, uint64_t))(v140 + 8))(v311, v139);
            size_t v143 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
            uint64_t v144 = v311;
            goto LABEL_66;
          }
          (*(void (**)(char *, char *, uint64_t))(v140 + 40))(v311, v138, v139);
        }
LABEL_87:
        *(void *)&v7[v17[15]] = *(void *)&v321[v17[15]];
        swift_bridgeObjectRelease();
        uint64_t v186 = v17[16];
        uint64_t v187 = &v7[v186];
        v188 = &v321[v186];
        uint64_t v190 = *(void *)v188;
        uint64_t v189 = *((void *)v188 + 1);
        *(void *)uint64_t v187 = v190;
        *((void *)v187 + 1) = v189;
        swift_bridgeObjectRelease();
        v7[v17[17]] = v321[v17[17]];
        v7[v17[18]] = v321[v17[18]];
        v7[v17[19]] = v321[v17[19]];
        v7[v17[20]] = v321[v17[20]];
        uint64_t v191 = v17[21];
        uint64_t v192 = &v7[v191];
        v193 = &v321[v191];
        uint64_t v195 = *(void *)v193;
        uint64_t v194 = *((void *)v193 + 1);
        *(void *)uint64_t v192 = v195;
        *((void *)v192 + 1) = v194;
        swift_bridgeObjectRelease();
        v7[v17[22]] = v321[v17[22]];
        v7[v17[23]] = v321[v17[23]];
        v7[v17[24]] = v321[v17[24]];
        uint64_t v196 = v17[25];
        uint64_t v197 = &v7[v196];
        v198 = &v321[v196];
        v199 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v319 + 48);
        int v200 = v199(&v7[v196], 1, v316);
        int v201 = v199(v198, 1, v316);
        size_t v314 = v199;
        if (v200)
        {
          if (!v201)
          {
            (*(void (**)(char *, char *, uint64_t))(v319 + 32))(v197, v198, v316);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v319 + 56))(v197, 0, 1, v316);
            goto LABEL_93;
          }
        }
        else
        {
          if (!v201)
          {
            v308(v197, v198, v316);
LABEL_93:
            uint64_t v203 = v17[26];
            v204 = &v7[v203];
            uint64_t v205 = &v321[v203];
            int v206 = v199(&v7[v203], 1, v316);
            int v207 = v199(v205, 1, v316);
            if (v206)
            {
              if (!v207)
              {
                (*(void (**)(char *, char *, uint64_t))(v319 + 32))(v204, v205, v316);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v319 + 56))(v204, 0, 1, v316);
                goto LABEL_99;
              }
            }
            else
            {
              if (!v207)
              {
                v308(v204, v205, v316);
LABEL_99:
                *(void *)&v7[v17[27]] = *(void *)&v321[v17[27]];
                swift_bridgeObjectRelease();
                *(void *)&v7[v17[28]] = *(void *)&v321[v17[28]];
                swift_bridgeObjectRelease();
                uint64_t v209 = v17[29];
                uint64_t v210 = &v7[v209];
                v211 = &v321[v209];
                *(void *)&v7[v209] = *(void *)&v321[v209];
                swift_bridgeObjectRelease();
                *((void *)v210 + 1) = *((void *)v211 + 1);
                swift_bridgeObjectRelease();
                uint64_t v212 = v17[30];
                uint64_t v213 = (uint64_t)&v7[v212];
                uint64_t v214 = &v321[v212];
                uint64_t v215 = type metadata accessor for StaticSoftwareUpdate(0);
                v303 = *(void **)(v215 - 8);
                v216 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v303[6];
                LODWORD(v211) = v216(v213, 1, v215);
                int v217 = v216((uint64_t)v214, 1, v215);
                if (v211)
                {
                  uint64_t v218 = v316;
                  if (!v217)
                  {
                    v219 = *(void (**)(uint64_t, char *, uint64_t))(v319 + 32);
                    v219(v213, v214, v316);
                    uint64_t v220 = *(int *)(v215 + 20);
                    size_t v221 = (_OWORD *)(v213 + v220);
                    v222 = &v214[v220];
                    uint64_t v292 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
                    int v223 = swift_getEnumCaseMultiPayload();
                    if (v223 == 2)
                    {
                      *size_t v221 = *(_OWORD *)v222;
                      uint64_t v252 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
                      uint64_t v253 = v252[5];
                      v286 = (char *)v221 + v253;
                      uint64_t v290 = v221;
                      v254 = &v222[v253];
                      if (v298())
                      {
LABEL_129:
                        uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
                        memcpy(v286, v254, *(void *)(*(void *)(v256 - 8) + 64));
LABEL_138:
                        uint64_t v257 = v303;
                        *(_OWORD *)&v290[v252[6]] = *(_OWORD *)&v222[v252[6]];
                        *(_OWORD *)&v290[v252[7]] = *(_OWORD *)&v222[v252[7]];
                        uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
                        v290[*(int *)(v262 + 48)] = v222[*(int *)(v262 + 48)];
                        swift_storeEnumTagMultiPayload();
LABEL_139:
                        ((void (*)(uint64_t, void, uint64_t, uint64_t))v257[7])(v213, 0, 1, v215);
                        goto LABEL_140;
                      }
                    }
                    else
                    {
                      if (v223 != 1)
                      {
                        if (v223)
                        {
                          memcpy(v221, v222, *(void *)(*(void *)(v292 - 8) + 64));
                        }
                        else
                        {
                          v219((uint64_t)v221, v222, v316);
                          v224 = (int *)type metadata accessor for StaticHH2Update(0);
                          *((unsigned char *)v221 + v224[5]) = v222[v224[5]];
                          *(_OWORD *)((char *)v221 + v224[6]) = *(_OWORD *)&v222[v224[6]];
                          uint64_t v225 = v224[7];
                          uint64_t v226 = (char *)v221 + v225;
                          uint64_t v227 = &v222[v225];
                          v226[8] = v227[8];
                          *(void *)uint64_t v226 = *(void *)v227;
                          swift_storeEnumTagMultiPayload();
                        }
                        uint64_t v257 = v303;
                        goto LABEL_139;
                      }
                      *size_t v221 = *(_OWORD *)v222;
                      uint64_t v252 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
                      uint64_t v255 = v252[5];
                      v286 = (char *)v221 + v255;
                      uint64_t v290 = v221;
                      v254 = &v222[v255];
                      if (v298()) {
                        goto LABEL_129;
                      }
                    }
                    (*(void (**)(char *, char *, uint64_t))(v296 + 32))(v286, v254, v301);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v296 + 56))(v286, 0, 1, v301);
                    goto LABEL_138;
                  }
                  goto LABEL_107;
                }
                uint64_t v218 = v316;
                if (v217)
                {
                  sub_251D1D464(v213, type metadata accessor for StaticSoftwareUpdate);
LABEL_107:
                  size_t v228 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8)
                                   + 64);
                  uint64_t v229 = (void *)v213;
                  v230 = v214;
                  goto LABEL_108;
                }
                v308((char *)v213, v214, v316);
                if (a1 == a2) {
                  goto LABEL_140;
                }
                uint64_t v231 = *(int *)(v215 + 20);
                uint64_t v232 = (_OWORD *)(v213 + v231);
                v233 = &v214[v231];
                sub_251D1D464(v213 + v231, type metadata accessor for StaticSoftwareUpdate.Kind);
                uint64_t v234 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
                int v235 = swift_getEnumCaseMultiPayload();
                switch(v235)
                {
                  case 2:
                    *uint64_t v232 = *(_OWORD *)v233;
                    uint64_t v293 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
                    uint64_t v258 = v293[5];
                    uint64_t v304 = (char *)v232 + v258;
                    v259 = &v233[v258];
                    if (((unsigned int (*)(char *, uint64_t, uint64_t))v298)(&v233[v258], 1, v301))
                    {
LABEL_133:
                      uint64_t v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
                      memcpy(v304, v259, *(void *)(*(void *)(v260 - 8) + 64));
LABEL_149:
                      *(_OWORD *)((char *)v232 + v293[6]) = *(_OWORD *)&v233[v293[6]];
                      *(_OWORD *)((char *)v232 + v293[7]) = *(_OWORD *)&v233[v293[7]];
                      uint64_t v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
                      *((unsigned char *)v232 + *(int *)(v275 + 48)) = v233[*(int *)(v275 + 48)];
                      swift_storeEnumTagMultiPayload();
LABEL_140:
                      v7[v17[31]] = v321[v17[31]];
                      *(void *)&v7[v17[32]] = *(void *)&v321[v17[32]];
                      swift_bridgeObjectRelease();
                      uint64_t v263 = v17[33];
                      v264 = &v7[v263];
                      v265 = &v321[v263];
                      int v266 = v314(&v7[v263], 1, v218);
                      int v267 = v314(v265, 1, v218);
                      if (v266)
                      {
                        if (!v267)
                        {
                          (*(void (**)(char *, char *, uint64_t))(v319 + 32))(v264, v265, v218);
                          (*(void (**)(char *, void, uint64_t, uint64_t))(v319 + 56))(v264, 0, 1, v218);
LABEL_146:
                          uint64_t v269 = v17[34];
                          v270 = &v7[v269];
                          v271 = &v321[v269];
                          *(_WORD *)v270 = *(_WORD *)v271;
                          v270[2] = v271[2];
                          uint64_t v272 = v17[35];
                          v273 = &v7[v272];
                          v274 = &v321[v272];
                          *(_DWORD *)(v273 + 7) = *(_DWORD *)(v274 + 7);
                          *(void *)v273 = *(void *)v274;
                          return a1;
                        }
                      }
                      else
                      {
                        if (!v267)
                        {
                          v308(v264, v265, v218);
                          goto LABEL_146;
                        }
                        (*(void (**)(char *, uint64_t))(v319 + 8))(v264, v218);
                      }
                      uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
                      memcpy(v264, v265, *(void *)(*(void *)(v268 - 8) + 64));
                      goto LABEL_146;
                    }
                    break;
                  case 1:
                    *uint64_t v232 = *(_OWORD *)v233;
                    uint64_t v293 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
                    uint64_t v261 = v293[5];
                    uint64_t v304 = (char *)v232 + v261;
                    v259 = &v233[v261];
                    if (((unsigned int (*)(char *, uint64_t, uint64_t))v298)(&v233[v261], 1, v301)) {
                      goto LABEL_133;
                    }
                    break;
                  case 0:
                    (*(void (**)(_OWORD *, char *, uint64_t))(v319 + 32))(v232, v233, v316);
                    uint64_t v236 = (int *)type metadata accessor for StaticHH2Update(0);
                    *((unsigned char *)v232 + v236[5]) = v233[v236[5]];
                    *(_OWORD *)((char *)v232 + v236[6]) = *(_OWORD *)&v233[v236[6]];
                    uint64_t v237 = v236[7];
                    v238 = (char *)v232 + v237;
                    uint64_t v239 = &v233[v237];
                    v238[8] = v239[8];
                    *(void *)v238 = *(void *)v239;
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_140;
                  default:
                    size_t v228 = *(void *)(*(void *)(v234 - 8) + 64);
                    uint64_t v229 = v232;
                    v230 = v233;
LABEL_108:
                    memcpy(v229, v230, v228);
                    goto LABEL_140;
                }
                (*(void (**)(char *, char *, uint64_t))(v296 + 32))(v304, v259, v301);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v296 + 56))(v304, 0, 1, v301);
                goto LABEL_149;
              }
              (*(void (**)(char *, uint64_t))(v319 + 8))(v204, v316);
            }
            uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v204, v205, *(void *)(*(void *)(v208 - 8) + 64));
            goto LABEL_99;
          }
          (*(void (**)(char *, uint64_t))(v319 + 8))(v197, v316);
        }
        uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v197, v198, *(void *)(*(void *)(v202 - 8) + 64));
        goto LABEL_93;
      }
      sub_251D1D464((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    }
    uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v93, v94, *(void *)(*(void *)(v135 - 8) + 64));
    goto LABEL_61;
  }
  if (v21)
  {
LABEL_17:
    size_t v16 = *(void *)(v10 + 64);
    goto LABEL_8;
  }
  uint64_t v305 = v18;
  uint64_t v22 = sub_251F34DA0();
  uint64_t v309 = *(void *)(v22 - 8);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v309 + 32);
  v23(v7, v8, v22);
  *(_OWORD *)&v7[v17[5]] = *(_OWORD *)&v8[v17[5]];
  v7[v17[6]] = v8[v17[6]];
  v7[v17[7]] = v8[v17[7]];
  v7[v17[8]] = v8[v17[8]];
  v7[v17[9]] = v8[v17[9]];
  v7[v17[10]] = v8[v17[10]];
  v23(&v7[v17[11]], &v8[v17[11]], v22);
  uint64_t v24 = v17[12];
  uint64_t v25 = &v7[v24];
  uint64_t v26 = &v8[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v317 = v17;
  uint64_t v27 = v17[13];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  uint64_t v30 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v31 = *((void *)v30 - 1);
  v306 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    v23(v28, v29, v22);
    *(_OWORD *)&v28[v30[5]] = *(_OWORD *)&v29[v30[5]];
    *(_OWORD *)&v28[v30[6]] = *(_OWORD *)&v29[v30[6]];
    *(_OWORD *)&v28[v30[7]] = *(_OWORD *)&v29[v30[7]];
    *(_OWORD *)&v28[v30[8]] = *(_OWORD *)&v29[v30[8]];
    v28[v30[9]] = v29[v30[9]];
    v28[v30[10]] = v29[v30[10]];
    v28[v30[11]] = v29[v30[11]];
    v28[v30[12]] = v29[v30[12]];
    (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
  }
  uint64_t v99 = v17[14];
  uint64_t v100 = &v7[v99];
  uint64_t v101 = &v8[v99];
  uint64_t v102 = sub_251F34D20();
  uint64_t v103 = *(void *)(v102 - 8);
  v300 = *(unsigned int (**)(void))(v103 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v300)(v101, 1, v102))
  {
    uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v100, v101, *(void *)(*(void *)(v104 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v100, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  *(void *)&v7[v17[15]] = *(void *)&v8[v17[15]];
  *(_OWORD *)&v7[v17[16]] = *(_OWORD *)&v8[v17[16]];
  v7[v17[17]] = v8[v17[17]];
  v7[v17[18]] = v8[v17[18]];
  v7[v17[19]] = v8[v17[19]];
  v7[v17[20]] = v8[v17[20]];
  *(_OWORD *)&v7[v17[21]] = *(_OWORD *)&v8[v17[21]];
  v7[v17[22]] = v8[v17[22]];
  v7[v17[23]] = v8[v17[23]];
  v7[v17[24]] = v8[v17[24]];
  uint64_t v105 = v17[25];
  unsigned int v106 = &v7[v105];
  uint64_t v107 = &v8[v105];
  char v313 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v309 + 48);
  if (v313(&v8[v105], 1, v22))
  {
    uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
  }
  else
  {
    v306(v106, v107, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v309 + 56))(v106, 0, 1, v22);
  }
  uint64_t v109 = v17[26];
  uint64_t v110 = &v7[v109];
  uint64_t v111 = &v8[v109];
  if (v313(&v8[v109], 1, v22))
  {
    uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
    uint64_t v113 = v306;
  }
  else
  {
    uint64_t v113 = v306;
    v306(v110, v111, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v309 + 56))(v110, 0, 1, v22);
  }
  *(void *)&v7[v17[27]] = *(void *)&v8[v17[27]];
  *(void *)&v7[v17[28]] = *(void *)&v8[v17[28]];
  *(_OWORD *)&v7[v17[29]] = *(_OWORD *)&v8[v17[29]];
  uint64_t v114 = v17[30];
  uint64_t v115 = &v7[v114];
  v322 = v8;
  uint64_t v116 = &v8[v114];
  uint64_t v117 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v118 = *(void *)(v117 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
  {
    v113(v115, v116, v22);
    uint64_t v120 = *(int *)(v117 + 20);
    v295 = &v115[v120];
    uint64_t v121 = &v116[v120];
    uint64_t v291 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v122 = swift_getEnumCaseMultiPayload();
    if (v122 == 2)
    {
      *(_OWORD *)v295 = *(_OWORD *)v121;
      uint64_t v145 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v146 = *(int *)(v145 + 20);
      uint64_t v284 = (int *)v145;
      int v288 = &v295[v146];
      uint64_t v147 = &v121[v146];
      if (v300())
      {
        uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v288, v147, *(void *)(*(void *)(v148 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v288, v147, v102);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v288, 0, 1, v102);
      }
      *(_OWORD *)&v295[v284[6]] = *(_OWORD *)&v121[v284[6]];
      *(_OWORD *)&v295[v284[7]] = *(_OWORD *)&v121[v284[7]];
      uint64_t v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v295[*(int *)(v240 + 48)] = v121[*(int *)(v240 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v113 = v306;
      goto LABEL_121;
    }
    if (v122 == 1)
    {
      *(_OWORD *)v295 = *(_OWORD *)v121;
      uint64_t v149 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v150 = *(int *)(v149 + 20);
      v285 = (int *)v149;
      uint64_t v289 = &v295[v150];
      uint64_t v151 = &v121[v150];
      if (v300())
      {
        uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v289, v151, *(void *)(*(void *)(v152 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v289, v151, v102);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v289, 0, 1, v102);
      }
      uint64_t v113 = v306;
      *(_OWORD *)&v295[v285[6]] = *(_OWORD *)&v121[v285[6]];
      *(_OWORD *)&v295[v285[7]] = *(_OWORD *)&v121[v285[7]];
      uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v295[*(int *)(v241 + 48)] = v121[*(int *)(v241 + 48)];
    }
    else
    {
      if (v122)
      {
        memcpy(v295, v121, *(void *)(*(void *)(v291 - 8) + 64));
LABEL_121:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
        goto LABEL_122;
      }
      v113(v295, v121, v22);
      uint64_t v123 = (int *)type metadata accessor for StaticHH2Update(0);
      v295[v123[5]] = v121[v123[5]];
      *(_OWORD *)&v295[v123[6]] = *(_OWORD *)&v121[v123[6]];
      uint64_t v124 = v123[7];
      uint64_t v125 = &v295[v124];
      uint64_t v126 = &v121[v124];
      v125[8] = v126[8];
      *(void *)uint64_t v125 = *(void *)v126;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_121;
  }
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
LABEL_122:
  v7[v317[31]] = v322[v317[31]];
  *(void *)&v7[v317[32]] = *(void *)&v322[v317[32]];
  uint64_t v242 = v317[33];
  uint64_t v243 = &v7[v242];
  v244 = &v322[v242];
  if (v313(&v322[v242], 1, v22))
  {
    uint64_t v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
  }
  else
  {
    v113(v243, v244, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v309 + 56))(v243, 0, 1, v22);
  }
  uint64_t v246 = v317[34];
  uint64_t v247 = &v7[v246];
  uint64_t v248 = &v322[v246];
  *(_WORD *)uint64_t v247 = *(_WORD *)v248;
  v247[2] = v248[2];
  uint64_t v249 = v317[35];
  v250 = &v7[v249];
  __int16 v251 = &v322[v249];
  *(_DWORD *)(v250 + 7) = *(_DWORD *)(v251 + 7);
  *(void *)v250 = *(void *)v251;
  (*(void (**)(char *, void, uint64_t))(v305 + 56))(v7, 0, 1);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyTileInfoBearer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D20798);
}

uint64_t sub_251D20798(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA26E0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AnyTileInfoBearer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D20860);
}

void *sub_251D20860(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA26E0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_251D2090C()
{
  sub_251D209BC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_251D209BC()
{
  if (!qword_269BA2738[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B21EE20);
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, qword_269BA2738);
    }
  }
}

uint64_t type metadata accessor for AnyTileInfoBearer.StorageBase()
{
  return self;
}

uint64_t method lookup function for AnyTileInfoBearer.StorageBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AnyTileInfoBearer.StorageBase);
}

uint64_t sub_251D20A54()
{
  return swift_initClassMetadata2();
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes;
}

unsigned char *storeEnumTagSinglePayload for AnyTileInfoBearer.TileKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D20B70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileKeys()
{
  return &type metadata for AnyTileInfoBearer.TileKeys;
}

unint64_t sub_251D20BAC()
{
  unint64_t result = qword_269BA27C0;
  if (!qword_269BA27C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA27C0);
  }
  return result;
}

unint64_t sub_251D20C04()
{
  unint64_t result = qword_269BA27C8;
  if (!qword_269BA27C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA27C8);
  }
  return result;
}

unint64_t sub_251D20C5C()
{
  unint64_t result = qword_269BA27D0;
  if (!qword_269BA27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA27D0);
  }
  return result;
}

unint64_t sub_251D20CB4()
{
  unint64_t result = qword_269BA27D8;
  if (!qword_269BA27D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA27D8);
  }
  return result;
}

uint64_t sub_251D20D08(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x726F737365636361 && a2 == 0xE900000000000079 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636976726573 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4765636976726573 && a2 == 0xEC00000070756F72 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72506172656D6163 && a2 == 0xED0000656C69666FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xE900000000000074 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x737953616964656DLL && a2 == 0xEB000000006D6574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F7250616964656DLL && a2 == 0xEC000000656C6966 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x634172657474616DLL && a2 == 0xEF79726F73736563)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_251D210F8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA27E0);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v59 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA27E8);
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v62 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA27F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA27F8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2800);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v58 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2808);
  uint64_t v48 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v57 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2810);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2818);
  uint64_t v44 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  int v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2820);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (uint64_t)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_251D21B30();
  uint64_t v26 = v64;
  sub_251F36D90();
  if (v26) {
    goto LABEL_16;
  }
  uint64_t v41 = v20;
  uint64_t v40 = v18;
  uint64_t v28 = v60;
  uint64_t v27 = v61;
  uint64_t v29 = v62;
  uint64_t v64 = v22;
  uint64_t v30 = v24;
  uint64_t v31 = sub_251F368E0();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v24 = sub_251F36490();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v34 = &type metadata for AnyTileInfoBearer.TileInfoTypes;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
LABEL_16:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
    return v24;
  }
  uint64_t v24 = *(unsigned __int8 *)(v31 + 32);
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v66 = 1;
      sub_251D21D7C();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v47);
      break;
    case 2:
      char v67 = 2;
      sub_251D21D28();
      uint64_t v35 = v57;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v45);
      break;
    case 3:
      char v68 = 3;
      sub_251D21CD4();
      uint64_t v27 = v58;
      sub_251F36770();
      uint64_t v36 = v49;
      uint64_t v37 = v50;
      goto LABEL_11;
    case 4:
      char v69 = 4;
      sub_251D21C80();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v51);
      break;
    case 5:
      char v70 = 5;
      sub_251D21C2C();
      sub_251F36770();
      uint64_t v36 = v53;
      uint64_t v37 = v54;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v36);
      break;
    case 6:
      char v71 = 6;
      sub_251D21BD8();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
      break;
    case 7:
      char v72 = 7;
      sub_251D21B84();
      uint64_t v38 = v59;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
      break;
    default:
      char v65 = 0;
      sub_251D21DD0();
      uint64_t v32 = v41;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v40);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
  return v24;
}

uint64_t sub_251D21A2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F666E49656C6974 && a2 == 0xE800000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F666E49656C6974 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_251D21B30()
{
  unint64_t result = qword_269BA2828;
  if (!qword_269BA2828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2828);
  }
  return result;
}

unint64_t sub_251D21B84()
{
  unint64_t result = qword_269BA2830;
  if (!qword_269BA2830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2830);
  }
  return result;
}

unint64_t sub_251D21BD8()
{
  unint64_t result = qword_269BA2838;
  if (!qword_269BA2838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2838);
  }
  return result;
}

unint64_t sub_251D21C2C()
{
  unint64_t result = qword_269BA2840;
  if (!qword_269BA2840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2840);
  }
  return result;
}

unint64_t sub_251D21C80()
{
  unint64_t result = qword_269BA2848;
  if (!qword_269BA2848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2848);
  }
  return result;
}

unint64_t sub_251D21CD4()
{
  unint64_t result = qword_269BA2850;
  if (!qword_269BA2850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2850);
  }
  return result;
}

unint64_t sub_251D21D28()
{
  unint64_t result = qword_269BA2858;
  if (!qword_269BA2858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2858);
  }
  return result;
}

unint64_t sub_251D21D7C()
{
  unint64_t result = qword_269BA2860;
  if (!qword_269BA2860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2860);
  }
  return result;
}

unint64_t sub_251D21DD0()
{
  unint64_t result = qword_269BA2868;
  if (!qword_269BA2868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2868);
  }
  return result;
}

uint64_t sub_251D21E24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *_s13HomeDataModel17AnyTileInfoBearerV13TileInfoTypesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D21F58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.CodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.CodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.AccessoryCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.AccessoryCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.ServiceCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.ServiceGroupCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceGroupCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.CameraProfileCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.CameraProfileCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.ActionSetCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.ActionSetCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.MediaSystemCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaSystemCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.MediaProfileCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaProfileCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.MatterAccessoryCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.MatterAccessoryCodingKeys;
}

unint64_t sub_251D22014()
{
  unint64_t result = qword_269BA28B8;
  if (!qword_269BA28B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28B8);
  }
  return result;
}

unint64_t sub_251D2206C()
{
  unint64_t result = qword_269BA28C0;
  if (!qword_269BA28C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28C0);
  }
  return result;
}

unint64_t sub_251D220C4()
{
  unint64_t result = qword_269BA28C8;
  if (!qword_269BA28C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28C8);
  }
  return result;
}

unint64_t sub_251D2211C()
{
  unint64_t result = qword_269BA28D0;
  if (!qword_269BA28D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28D0);
  }
  return result;
}

unint64_t sub_251D22174()
{
  unint64_t result = qword_269BA28D8;
  if (!qword_269BA28D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28D8);
  }
  return result;
}

unint64_t sub_251D221CC()
{
  unint64_t result = qword_269BA28E0;
  if (!qword_269BA28E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28E0);
  }
  return result;
}

unint64_t sub_251D22224()
{
  unint64_t result = qword_269BA28E8;
  if (!qword_269BA28E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28E8);
  }
  return result;
}

unint64_t sub_251D2227C()
{
  unint64_t result = qword_269BA28F0;
  if (!qword_269BA28F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28F0);
  }
  return result;
}

unint64_t sub_251D222D4()
{
  unint64_t result = qword_269BA28F8;
  if (!qword_269BA28F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA28F8);
  }
  return result;
}

unint64_t sub_251D2232C()
{
  unint64_t result = qword_269BA2900;
  if (!qword_269BA2900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2900);
  }
  return result;
}

unint64_t sub_251D22384()
{
  unint64_t result = qword_269BA2908;
  if (!qword_269BA2908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2908);
  }
  return result;
}

unint64_t sub_251D223DC()
{
  unint64_t result = qword_269BA2910;
  if (!qword_269BA2910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2910);
  }
  return result;
}

unint64_t sub_251D22434()
{
  unint64_t result = qword_269BA2918;
  if (!qword_269BA2918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2918);
  }
  return result;
}

unint64_t sub_251D2248C()
{
  unint64_t result = qword_269BA2920;
  if (!qword_269BA2920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2920);
  }
  return result;
}

unint64_t sub_251D224E4()
{
  unint64_t result = qword_269BA2928;
  if (!qword_269BA2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2928);
  }
  return result;
}

unint64_t sub_251D2253C()
{
  unint64_t result = qword_269BA2930;
  if (!qword_269BA2930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2930);
  }
  return result;
}

unint64_t sub_251D22594()
{
  unint64_t result = qword_269BA2938;
  if (!qword_269BA2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2938);
  }
  return result;
}

unint64_t sub_251D225EC()
{
  unint64_t result = qword_269BA2940;
  if (!qword_269BA2940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2940);
  }
  return result;
}

unint64_t sub_251D22644()
{
  unint64_t result = qword_269BA2948;
  if (!qword_269BA2948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269BA2948);
  }
  return result;
}

uint64_t sub_251D226A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v3, sel_applicationData);
  uint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v40 = v9;
  uint64_t v41 = v3;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  id v36 = v10;
  uint64_t v37 = a1;
  if (v14)
  {
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = v16;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v44 = *(void *)(v16 + 72);
    uint64_t v47 = (void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
    uint64_t v20 = v16 + 16;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v45 = v20;
    uint64_t v46 = v19;
    uint64_t v42 = v17 + 8;
    uint64_t v43 = v17 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      v46(v13, v18, v15);
      (*v47)(v13, 0, 1, v15);
      uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v15);
      if (v21 == 1) {
        break;
      }
      MEMORY[0x270FA5388](v21);
      uint64_t v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v23, v13, v15);
      sub_251F34D40();
      sub_251F356C0();
      swift_bridgeObjectRelease();
      uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v23, v15);
      MEMORY[0x2533AA9D0](v24);
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      sub_251F35AE0();
      v18 += v44;
      if (!--v14) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v25 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 1, 1, v25);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  uint64_t v26 = (void *)sub_251F35AA0();
  uint64_t v27 = (void *)sub_251F356C0();
  id v28 = v36;
  objc_msgSend(v36, sel_setObject_forKeyedSubscript_, v26, v27);

  swift_bridgeObjectRelease();
  uint64_t v29 = sub_251F35CD0();
  uint64_t v30 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v40, 1, 1, v29);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = 0;
  v31[3] = 0;
  uint64_t v32 = v41;
  v31[4] = v41;
  id v33 = v32;
  sub_251E1F61C(v30, (uint64_t)&unk_269BA2958, (uint64_t)v31);
  return swift_release();
}

uint64_t HMHome.colorPickerFavorites.setter(uint64_t a1)
{
  sub_251D24748(a1);
  return swift_bridgeObjectRelease();
}

uint64_t HMHome.sidebarRoomsSortOrder.getter()
{
  return sub_251B1D3D4(0xD000000000000023, 0x8000000251F6F650);
}

uint64_t HMHome.sectionsSortOrder.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  BOOL v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0),
        swift_dynamicCast()))
  {
    return v5;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
}

uint64_t HMHome.actionSetsSortOrder.getter()
{
  return sub_251B1D3D4(0xD000000000000028, 0x8000000251F6F680);
}

uint64_t HMHome.servicesSortOrder.getter()
{
  return sub_251B1D3D4(0xD000000000000026, 0x8000000251F6F6B0);
}

uint64_t HMHome.camerasSortOrder.getter()
{
  return sub_251B1D3D4(0xD000000000000025, 0x8000000251F6F6E0);
}

unint64_t HMHome.colorPickerFavorites.getter()
{
  unint64_t result = sub_251D238A0();
  if (!result)
  {
    unint64_t result = sub_251D23FF4();
    if (!result) {
      return MEMORY[0x263F8EE78];
    }
  }
  return result;
}

unint64_t static HMHome.showPredictedScenesOnDashboard.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t static HMHome.userDetailsDictionaryKey.getter()
{
  return 0x6174654472657355;
}

unint64_t static HMHome.actionSetsSortedByKey.getter()
{
  return 0xD000000000000028;
}

unint64_t static HMHome.camerasSortedByKey.getter()
{
  return 0xD000000000000025;
}

unint64_t static HMHome.servicesSortedByKey.getter()
{
  return 0xD000000000000026;
}

unint64_t static HMHome.sectionsSortedByKey.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static HMHome.roomsSortedByKey.getter()
{
  return 0xD000000000000023;
}

unint64_t static HMHome.legacyRoomsSortedByKey.getter()
{
  return 0xD00000000000002ALL;
}

void HMHome.sectionsSortOrder.setter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  BOOL v2 = (void *)sub_251F35AA0();
  id v3 = (void *)sub_251F356C0();
  objc_msgSend(v1, sel_setObject_forKeyedSubscript_, v2, v3);

  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v0, sel_applicationData);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  v8[4] = sub_251D24F80;
  v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  v8[2] = sub_251C97A44;
  v8[3] = &block_descriptor_38;
  unsigned int v6 = _Block_copy(v8);
  id v7 = v0;
  swift_release();
  objc_msgSend(v7, sel_updateApplicationData_completionHandler_, v4, v6);
  _Block_release(v6);
}

void (*HMHome.sectionsSortOrder.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = HMHome.sectionsSortOrder.getter();
  return sub_251D22F44;
}

void sub_251D22F44(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    HMHome.sectionsSortOrder.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    HMHome.sectionsSortOrder.setter();
  }
}

uint64_t HMHome.showPredictedScenesOnDashboard.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  BOOL v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3 && (__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50), swift_dynamicCast())) {
    return v5;
  }
  else {
    return 1;
  }
}

void HMHome.showPredictedScenesOnDashboard.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  unsigned __int8 v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251D25EB4;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_6_1;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

uint64_t sub_251D231F0(uint64_t a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  unsigned __int8 v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21FF20);
  *unsigned __int8 v5 = a2;
  swift_storeEnumTagMultiPayload();
  id v11 = a2;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void (*HMHome.showPredictedScenesOnDashboard.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMHome.showPredictedScenesOnDashboard.getter() & 1;
  return sub_251D233D4;
}

void sub_251D233D4(uint64_t a1)
{
}

uint64_t HMHome.actionSetsSortOrder.setter(uint64_t a1)
{
  sub_251D226A0(a1, 0xD000000000000028, 0x8000000251F6F680);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.actionSetsSortOrder.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_251B1D3D4(0xD000000000000028, 0x8000000251F6F680);
  return sub_251D234AC;
}

uint64_t sub_251D234AC(uint64_t *a1, char a2)
{
  return sub_251D237E8(a1, a2, 0xD000000000000028, 0x8000000251F6F680);
}

uint64_t HMHome.camerasSortOrder.setter(uint64_t a1)
{
  sub_251D226A0(a1, 0xD000000000000025, 0x8000000251F6F6E0);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.camerasSortOrder.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_251B1D3D4(0xD000000000000025, 0x8000000251F6F6E0);
  return sub_251D23578;
}

uint64_t sub_251D23578(uint64_t *a1, char a2)
{
  return sub_251D237E8(a1, a2, 0xD000000000000025, 0x8000000251F6F6E0);
}

uint64_t HMHome.sidebarRoomsSortOrder.setter(uint64_t a1)
{
  sub_251D226A0(a1, 0xD000000000000023, 0x8000000251F6F650);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.sidebarRoomsSortOrder.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_251B1D3D4(0xD000000000000023, 0x8000000251F6F650);
  return sub_251D23644;
}

uint64_t sub_251D23644(uint64_t *a1, char a2)
{
  return sub_251D237E8(a1, a2, 0xD000000000000023, 0x8000000251F6F650);
}

uint64_t HMHome.servicesSortOrder.setter(uint64_t a1)
{
  sub_251D226A0(a1, 0xD000000000000026, 0x8000000251F6F6B0);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.servicesSortOrder.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_251B1D3D4(0xD000000000000026, 0x8000000251F6F6B0);
  return sub_251D23710;
}

uint64_t sub_251D23710(uint64_t *a1, char a2)
{
  return sub_251D237E8(a1, a2, 0xD000000000000026, 0x8000000251F6F6B0);
}

uint64_t sub_251D2372C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_251D226A0(v8, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.cameraProfilesSortOrder.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_251B1D3D4(0xD000000000000025, 0x8000000251F6F6E0);
  return sub_251D23578;
}

uint64_t sub_251D237E8(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  if (a2)
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_251D226A0(v7, a3, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251D226A0(v6, a3, a4);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_251D2385C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_251D238A0();
  if (!result)
  {
    unint64_t result = sub_251D23FF4();
    if (!result) {
      unint64_t result = MEMORY[0x263F8EE78];
    }
  }
  *a1 = result;
  return result;
}

unint64_t sub_251D238A0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E898);
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for ColorPickerFavorite();
  uint64_t v4 = *(void *)(v74 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v74);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v66 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v73 = (uint64_t)&v66 - v11;
  id v12 = objc_msgSend(v0, sel_applicationData);
  id v13 = objc_msgSend(v0, sel_currentUser);
  id v14 = objc_msgSend(v13, sel_uniqueIdentifier);

  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  uint64_t v19 = sub_251F34D40();
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v79 = v16 + 8;
  uint64_t v80 = v15;
  uint64_t v78 = v22;
  v22(v18, v15);
  uint64_t v23 = (void *)sub_251F356C0();
  id v24 = objc_msgSend(v12, sel_objectForKeyedSubscript_, v23);

  if (!v24) {
    goto LABEL_58;
  }
  id v82 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2968);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_58;
  }
  uint64_t v25 = v81;
  if (!*(void *)(v81 + 16) || (unint64_t v26 = sub_2519FE798(v19, v21), (v27 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_58:
    swift_bridgeObjectRelease();

    return 0;
  }
  uint64_t v28 = *(void *)(*(void *)(v25 + 56) + 8 * v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = *(void *)(v28 + 16);
  if (v77)
  {
    id v67 = v12;
    uint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v69 = v4;
    char v70 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    char v71 = v7;
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    unint64_t v72 = MEMORY[0x263F8EE78];
    uint64_t v30 = v74;
    uint64_t v76 = v28;
    while (1)
    {
      uint64_t v31 = *(void *)(v28 + 8 * v29 + 32);
      *((void *)v10 + 4) = 0x3FF0000000000000;
      uint64_t v32 = &v10[*(int *)(v30 + 24)];
      swift_bridgeObjectRetain();
      sub_251F34D90();
      if (!*(void *)(v31 + 16))
      {
LABEL_7:
        swift_bridgeObjectRelease();
        v78(v32, v80);
        (*v75)(v3, 1, 1, v30);
        goto LABEL_8;
      }
      swift_bridgeObjectRetain();
      unint64_t v33 = sub_2519FE798(114, 0xE100000000000000);
      if ((v34 & 1) != 0
        && *(void *)(v31 + 16)
        && (uint64_t v35 = *(void *)(*(void *)(v31 + 56) + 8 * v33),
            unint64_t v36 = sub_2519FE798(103, 0xE100000000000000),
            (v37 & 1) != 0)
        && *(void *)(v31 + 16)
        && (uint64_t v38 = *(void *)(*(void *)(v31 + 56) + 8 * v36),
            unint64_t v39 = sub_2519FE798(98, 0xE100000000000000),
            (v40 & 1) != 0))
      {
        uint64_t v41 = *(void *)(*(void *)(v31 + 56) + 8 * v39);
        swift_bridgeObjectRelease();
        uint64_t v42 = *(void *)(v31 + 16);
        if (!v42) {
          goto LABEL_41;
        }
        char v43 = 0;
      }
      else
      {
        swift_bridgeObjectRelease();
        if (!*(void *)(v31 + 16)) {
          goto LABEL_7;
        }
        uint64_t v41 = 0;
        uint64_t v38 = 0;
        uint64_t v35 = 0;
        char v43 = 1;
      }
      unint64_t v44 = sub_2519FE798(0x74617265706D6574, 0xEB00000000657275);
      char v46 = v45;
      double v47 = 0.0;
      if (v45) {
        double v47 = *(double *)(*(void *)(v31 + 56) + 8 * v44);
      }
      if (*(void *)(v31 + 16)
        && (unint64_t v48 = sub_2519FE798(6649192, 0xE300000000000000), (v49 & 1) != 0)
        && *(void *)(v31 + 16)
        && (uint64_t v68 = *(void *)(*(void *)(v31 + 56) + 8 * v48),
            unint64_t v50 = sub_2519FE798(0x6974617275746173, 0xEA00000000006E6FLL),
            (v51 & 1) != 0))
      {
        if (v46) {
          goto LABEL_29;
        }
        uint64_t v41 = 0;
        uint64_t v38 = *(void *)(*(void *)(v31 + 56) + 8 * v50);
        LOBYTE(v42) = 1;
        uint64_t v35 = v68;
        uint64_t v30 = v74;
      }
      else
      {
        if (v46)
        {
LABEL_29:
          uint64_t v38 = 0;
          uint64_t v41 = 0;
          double v52 = round(v47);
          HIDWORD(v53) = 1089470464;
          BOOL v55 = v52 >= 65536.0 || v52 <= -1.0;
          LODWORD(v53) = llround(v47);
          if (v55) {
            uint64_t v35 = 100;
          }
          else {
            uint64_t v35 = v53;
          }
          LOBYTE(v42) = 2;
          uint64_t v30 = v74;
          goto LABEL_41;
        }
        uint64_t v30 = v74;
        if (v43) {
          goto LABEL_7;
        }
        LOBYTE(v42) = 0;
      }
LABEL_41:
      *(void *)uint64_t v10 = v35;
      *((void *)v10 + 1) = v38;
      *((void *)v10 + 2) = v41;
      v10[24] = v42;
      if (*(void *)(v31 + 16) && (unint64_t v56 = sub_2519FE798(0x656E746867697262, 0xEA00000000007373), (v57 & 1) != 0))
      {
        double v58 = *(double *)(*(void *)(v31 + 56) + 8 * v56);
        swift_bridgeObjectRelease();
        if (v58 > 0.0) {
          double v59 = v58;
        }
        else {
          double v59 = 0.0;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        double v59 = 1.0;
      }
      if (v59 > 1.0) {
        double v59 = 1.0;
      }
      *((double *)v10 + 4) = v59;
      sub_251D25DEC((uint64_t)v10, (uint64_t)v3);
      (*v75)(v3, 0, 1, v30);
      sub_251D25E50((uint64_t)v10);
      if ((*v70)(v3, 1, v30) != 1)
      {
        uint64_t v60 = v73;
        sub_251D25D88((uint64_t)v3, v73);
        sub_251D25D88(v60, (uint64_t)v71);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v61 = v72;
        }
        else {
          unint64_t v61 = sub_251F0F560(0, *(void *)(v72 + 16) + 1, 1, v72);
        }
        unint64_t v63 = *(void *)(v61 + 16);
        unint64_t v62 = *(void *)(v61 + 24);
        if (v63 >= v62 >> 1) {
          unint64_t v61 = sub_251F0F560(v62 > 1, v63 + 1, 1, v61);
        }
        *(void *)(v61 + 16) = v63 + 1;
        unint64_t v64 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        unint64_t v72 = v61;
        sub_251D25D88((uint64_t)v71, v61 + v64 + *(void *)(v69 + 72) * v63);
        goto LABEL_9;
      }
LABEL_8:
      sub_251D25D28((uint64_t)v3);
LABEL_9:
      uint64_t v28 = v76;
      if (v77 == ++v29)
      {

        swift_bridgeObjectRelease_n();
        return v72;
      }
    }
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x263F8EE78];
}

unint64_t sub_251D23FF4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E898);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v62 - v5;
  uint64_t v7 = type metadata accessor for ColorPickerFavorite();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v64 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v66 = (uint64_t)&v62 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v69 = (uint64_t)&v62 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  char v65 = (char *)&v62 - v15;
  MEMORY[0x270FA5388](v14);
  id v67 = (uint64_t *)((char *)&v62 - v16);
  id v17 = objc_msgSend(v0, sel_applicationData);
  uint64_t v18 = (void *)sub_251F356C0();
  id v19 = objc_msgSend(v17, sel_objectForKeyedSubscript_, v18);

  if (v19)
  {
    id v71 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2960);
    if (swift_dynamicCast())
    {
      uint64_t v20 = v70;
      uint64_t v21 = *(void *)(v70 + 16);
      if (v21)
      {
        id v63 = v17;
        uint64_t v22 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
        swift_bridgeObjectRetain();
        uint64_t v24 = 0;
        unint64_t v25 = MEMORY[0x263F8EE78];
        do
        {
          uint64_t v26 = *(void *)(v20 + 8 * v24 + 32);
          uint64_t v27 = *(void *)(v26 + 16);
          swift_bridgeObjectRetain();
          if (v27
            && (unint64_t v28 = sub_2519FE798(114, 0xE100000000000000), (v29 & 1) != 0)
            && *(void *)(v26 + 16)
            && (uint64_t v30 = *(void *)(*(void *)(v26 + 56) + 8 * v28),
                unint64_t v31 = sub_2519FE798(103, 0xE100000000000000),
                (v32 & 1) != 0)
            && *(void *)(v26 + 16)
            && (uint64_t v66 = *(void *)(*(void *)(v26 + 56) + 8 * v31),
                unint64_t v33 = sub_2519FE798(98, 0xE100000000000000),
                (v34 & 1) != 0))
          {
            unint64_t v64 = *(char **)(*(void *)(v26 + 56) + 8 * v33);
            uint64_t v62 = v30;
            uint64_t v35 = (uint64_t)v65;
            sub_251F34D90();
            uint64_t v36 = v66;
            *(void *)uint64_t v35 = v62;
            *(void *)(v35 + 8) = v36;
            *(void *)(v35 + 16) = v64;
            *(unsigned char *)(v35 + 24) = 0;
            *(void *)(v35 + 32) = 0x3FF0000000000000;
            sub_251D25D88(v35, (uint64_t)v6);
            uint64_t v37 = 0;
          }
          else
          {
            uint64_t v37 = 1;
          }
          (*v22)(v6, v37, 1, v7);
          swift_bridgeObjectRelease();
          if ((*v23)(v6, 1, v7) == 1)
          {
            sub_251D25D28((uint64_t)v6);
          }
          else
          {
            uint64_t v38 = v67;
            sub_251D25D88((uint64_t)v6, (uint64_t)v67);
            sub_251D25D88((uint64_t)v38, v69);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v25 = sub_251F0F560(0, *(void *)(v25 + 16) + 1, 1, v25);
            }
            unint64_t v40 = *(void *)(v25 + 16);
            unint64_t v39 = *(void *)(v25 + 24);
            if (v40 >= v39 >> 1) {
              unint64_t v25 = sub_251F0F560(v39 > 1, v40 + 1, 1, v25);
            }
            *(void *)(v25 + 16) = v40 + 1;
            sub_251D25D88(v69, v25+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v40);
          }
          ++v24;
        }
        while (v21 != v24);
LABEL_46:

        swift_bridgeObjectRelease_n();
        return v25;
      }
      goto LABEL_47;
    }
  }
  uint64_t v41 = (void *)sub_251F356C0();
  id v42 = objc_msgSend(v17, sel_objectForKeyedSubscript_, v41);

  if (!v42
    || (id v71 = v42,
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50),
        __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2960),
        (swift_dynamicCast() & 1) == 0))
  {

    return 0;
  }
  uint64_t v43 = v70;
  uint64_t v69 = *(void *)(v70 + 16);
  if (!v69)
  {
LABEL_47:
    swift_bridgeObjectRelease();

    return MEMORY[0x263F8EE78];
  }
  id v63 = v17;
  id v67 = v65 + 8;
  unint64_t v44 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
  char v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
  swift_bridgeObjectRetain();
  uint64_t v46 = 0;
  unint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v47 = (uint64_t)v64;
  while (1)
  {
    uint64_t v48 = *(void *)(v43 + 8 * v46 + 32);
    uint64_t v49 = *(void *)(v48 + 16);
    swift_bridgeObjectRetain();
    if (!v49 || (unint64_t result = sub_2519FE798(1886217588, 0xE400000000000000), (v51 & 1) == 0))
    {
      uint64_t v58 = 1;
      goto LABEL_39;
    }
    double v52 = *(double *)(*(void *)(v48 + 56) + 8 * result);
    if ((~*(void *)&v52 & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v52 <= -9.22337204e18) {
      goto LABEL_50;
    }
    if (v52 >= 9.22337204e18) {
      goto LABEL_51;
    }
    unint64_t v53 = (uint64_t)v52;
    if ((uint64_t)v52 <= 1) {
      unint64_t v53 = 1;
    }
    if (v53 >= 0x10) {
      uint64_t v54 = (unsigned __int16)(0xF4240 / v53);
    }
    else {
      uint64_t v54 = 0xFFFFLL;
    }
    BOOL v55 = v65;
    sub_251F34D90();
    *(void *)BOOL v55 = v54;
    unint64_t v56 = v67;
    void *v67 = 0;
    v56[1] = 0;
    v55[24] = 2;
    *((void *)v55 + 4) = 0x3FF0000000000000;
    uint64_t v57 = (uint64_t)v55;
    uint64_t v47 = (uint64_t)v64;
    sub_251D25D88(v57, (uint64_t)v4);
    uint64_t v58 = 0;
LABEL_39:
    (*v44)(v4, v58, 1, v7);
    swift_bridgeObjectRelease();
    if ((*v45)(v4, 1, v7) == 1)
    {
      sub_251D25D28((uint64_t)v4);
    }
    else
    {
      uint64_t v59 = v66;
      sub_251D25D88((uint64_t)v4, v66);
      sub_251D25D88(v59, v47);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v25 = sub_251F0F560(0, *(void *)(v25 + 16) + 1, 1, v25);
      }
      unint64_t v61 = *(void *)(v25 + 16);
      unint64_t v60 = *(void *)(v25 + 24);
      if (v61 >= v60 >> 1) {
        unint64_t v25 = sub_251F0F560(v60 > 1, v61 + 1, 1, v25);
      }
      *(void *)(v25 + 16) = v61 + 1;
      sub_251D25D88(v47, v25+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v61);
    }
    if (v69 == ++v46) {
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

void sub_251D24748(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ColorPickerFavorite();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v1, sel_applicationData);
  id v63 = v1;
  id v8 = objc_msgSend(v1, sel_currentUser);
  id v9 = objc_msgSend(v8, sel_uniqueIdentifier);

  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  uint64_t v65 = sub_251F34D40();
  uint64_t v66 = v14;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  unint64_t v15 = sub_2519FBB48(MEMORY[0x263F8EE78]);
  uint64_t v62 = "cameraProfilesSortOrder";
  uint64_t v16 = (void *)sub_251F356C0();
  id v17 = objc_msgSend(v7, sel_objectForKeyedSubscript_, v16);

  if (!v17
    || (aBlock[0] = v17,
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50),
        __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2968),
        !swift_dynamicCast()))
  {
    unint64_t v64 = v15;
    uint64_t v19 = *(void *)(a1 + 16);
    if (!v19) {
      goto LABEL_4;
    }
LABEL_6:
    v60[1] = a1;
    id v61 = v7;
    uint64_t v21 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v22 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)MEMORY[0x263F8EE78];
    long long v69 = xmmword_251F3DAB0;
    long long v68 = xmmword_251F3A500;
    long long v67 = xmmword_251F38650;
    while (2)
    {
      sub_251D25DEC(v21, (uint64_t)v6);
      uint64_t v23 = *(void *)v6;
      uint64_t v24 = *((void *)v6 + 1);
      switch(v6[24])
      {
        case 1:
          __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2970);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v68;
          *(void *)(inited + 32) = 6649192;
          *(void *)(inited + 40) = 0xE300000000000000;
          *(void *)(inited + 48) = v23;
          *(void *)(inited + 56) = 0x6974617275746173;
          *(void *)(inited + 64) = 0xEA00000000006E6FLL;
          *(void *)(inited + 72) = v24;
          goto LABEL_13;
        case 2:
          __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2970);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v67;
          *(void *)(inited + 32) = 0x74617265706D6574;
          *(void *)(inited + 40) = 0xEB00000000657275;
          *(double *)(inited + 48) = (double)(unsigned __int16)v23;
          goto LABEL_13;
        case 3:
          sub_251D25E50((uint64_t)v6);
          goto LABEL_8;
        default:
          uint64_t v25 = *((void *)v6 + 2);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2970);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v69;
          *(void *)(inited + 32) = 114;
          *(void *)(inited + 40) = 0xE100000000000000;
          *(void *)(inited + 48) = v23;
          *(void *)(inited + 56) = 103;
          *(void *)(inited + 64) = 0xE100000000000000;
          *(void *)(inited + 72) = v24;
          *(void *)(inited + 80) = 98;
          *(void *)(inited + 88) = 0xE100000000000000;
          *(void *)(inited + 96) = v25;
LABEL_13:
          unint64_t v27 = sub_2519FBC6C(inited);
          uint64_t v28 = *((void *)v6 + 4);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v27;
          unint64_t v31 = sub_2519FE798(0x656E746867697262, 0xEA00000000007373);
          uint64_t v32 = *(void *)(v27 + 16);
          BOOL v33 = (v30 & 1) == 0;
          uint64_t v34 = v32 + v33;
          if (__OFADD__(v32, v33))
          {
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            sub_251F36BA0();
            __break(1u);
            JUMPOUT(0x251D24F38);
          }
          char v35 = v30;
          if (*(void *)(v27 + 24) >= v34)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v38 = (void *)aBlock[0];
              if (v30) {
                goto LABEL_20;
              }
            }
            else
            {
              sub_251A17188();
              uint64_t v38 = (void *)aBlock[0];
              if (v35) {
                goto LABEL_20;
              }
            }
          }
          else
          {
            sub_251A0A8A8(v34, isUniquelyReferenced_nonNull_native);
            unint64_t v36 = sub_2519FE798(0x656E746867697262, 0xEA00000000007373);
            if ((v35 & 1) != (v37 & 1)) {
              goto LABEL_39;
            }
            unint64_t v31 = v36;
            uint64_t v38 = (void *)aBlock[0];
            if (v35)
            {
LABEL_20:
              *(void *)(v38[7] + 8 * v31) = v28;
              goto LABEL_24;
            }
          }
          v38[(v31 >> 6) + 8] |= 1 << v31;
          unint64_t v39 = (void *)(v38[6] + 16 * v31);
          void *v39 = 0x656E746867697262;
          v39[1] = 0xEA00000000007373;
          *(void *)(v38[7] + 8 * v31) = v28;
          uint64_t v40 = v38[2];
          BOOL v41 = __OFADD__(v40, 1);
          uint64_t v42 = v40 + 1;
          if (v41) {
            goto LABEL_38;
          }
          v38[2] = v42;
LABEL_24:
          swift_bridgeObjectRelease();
          sub_251D25E50((uint64_t)v6);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_251F10DE4(0, v20[2] + 1, 1, v20);
          }
          unint64_t v44 = v20[2];
          unint64_t v43 = v20[3];
          if (v44 >= v43 >> 1) {
            uint64_t v20 = sub_251F10DE4((void *)(v43 > 1), v44 + 1, 1, v20);
          }
          void v20[2] = v44 + 1;
          v20[v44 + 4] = v38;
LABEL_8:
          v21 += v22;
          if (--v19) {
            continue;
          }
          swift_bridgeObjectRelease();
          id v7 = v61;
          break;
      }
      goto LABEL_30;
    }
  }
  unint64_t v18 = v70;
  swift_bridgeObjectRelease();
  unint64_t v64 = v18;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v20 = (void *)MEMORY[0x263F8EE78];
LABEL_30:
  unint64_t v45 = v64;
  uint64_t v46 = v65;
  uint64_t v47 = v66;
  if (!*(void *)(v64 + 16)) {
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  unint64_t v48 = sub_2519FE798(v46, v47);
  if ((v49 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  unint64_t v50 = *(void **)(*(void *)(v45 + 56) + 8 * v48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v51 = sub_251AB79C4(v50, v20);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if ((v51 & 1) == 0)
  {
LABEL_35:
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v45;
    sub_251A10200((uint64_t)v20, v46, v47, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2960);
    unint64_t v53 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
    uint64_t v54 = (void *)sub_251F356C0();
    objc_msgSend(v7, sel_setObject_forKeyedSubscript_, v53, v54);

    uint64_t v55 = swift_allocObject();
    unint64_t v56 = v63;
    *(void *)(v55 + 16) = v63;
    aBlock[4] = sub_251D25EAC;
    aBlock[5] = v55;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_251C97A44;
    aBlock[3] = &block_descriptor_37;
    uint64_t v57 = _Block_copy(aBlock);
    id v58 = v7;
    id v59 = v56;
    swift_release();
    objc_msgSend(v59, sel_updateApplicationData_completionHandler_, v58, v57);

    _Block_release(v57);
    goto LABEL_36;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_36:
  swift_bridgeObjectRelease();
}

uint64_t sub_251D24F48()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251D24F80(uint64_t a1)
{
  return sub_251D231F0(a1, *(void **)(v1 + 16));
}

uint64_t (*HMHome.colorPickerFavorites.modify(unint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  unint64_t v3 = sub_251D238A0();
  if (!v3)
  {
    unint64_t v3 = sub_251D23FF4();
    if (!v3) {
      unint64_t v3 = MEMORY[0x263F8EE78];
    }
  }
  *a1 = v3;
  return sub_251D24FFC;
}

uint64_t sub_251D24FFC(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_251D24748(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251D24748(v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D25050@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HMHome.sectionsSortOrder.getter();
  *a1 = result;
  return result;
}

void sub_251D2507C()
{
}

uint64_t sub_251D250A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMHome.showPredictedScenesOnDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_251D250D8(char *a1)
{
}

uint64_t sub_251D25100@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_251B1D3D4(0xD000000000000028, 0x8000000251F6F680);
  *a1 = result;
  return result;
}

uint64_t sub_251D25144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251D2372C(a1, a2, a3, a4, 0xD000000000000028, 0x8000000251F6F680);
}

uint64_t sub_251D25174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_251B1D3D4(0xD000000000000025, 0x8000000251F6F6E0);
  *a1 = result;
  return result;
}

uint64_t sub_251D251B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251D2372C(a1, a2, a3, a4, 0xD000000000000025, 0x8000000251F6F6E0);
}

uint64_t sub_251D251E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_251B1D3D4(0xD000000000000023, 0x8000000251F6F650);
  *a1 = result;
  return result;
}

uint64_t sub_251D2522C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251D2372C(a1, a2, a3, a4, 0xD000000000000023, 0x8000000251F6F650);
}

uint64_t sub_251D2525C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_251B1D3D4(0xD000000000000026, 0x8000000251F6F6B0);
  *a1 = result;
  return result;
}

uint64_t sub_251D252A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251D2372C(a1, a2, a3, a4, 0xD000000000000026, 0x8000000251F6F6B0);
}

uint64_t sub_251D252D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251D2372C(a1, a2, a3, a4, 0xD000000000000025, 0x8000000251F6F6E0);
}

uint64_t sub_251D25304()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_251D24748(v0);
  return swift_bridgeObjectRelease();
}

void sub_251D25348(void *a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = (id *)((char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v11 = a1;
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B21F290);
    id v13 = a1;
    id v14 = a1;
    v27[0] = (id)sub_251F35080();
    os_log_type_t v15 = sub_251F35FB0();
    if (os_log_type_enabled((os_log_t)v27[0], v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      id v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      id v18 = a1;
      uint64_t v19 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v27[1] = v19;
      sub_251F361D0();
      *id v17 = v19;

      _os_log_impl(&dword_2519F3000, (os_log_t)v27[0], v15, "Updating color picker favorites FAILED %@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v17, -1, -1);
      MEMORY[0x2533AC760](v16, -1, -1);
    }
    else
    {

      id v26 = v27[0];
    }
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_251F350A0();
    __swift_project_value_buffer(v20, (uint64_t)qword_26B21F290);
    uint64_t v21 = sub_251F35080();
    os_log_type_t v22 = sub_251F35FD0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_2519F3000, v21, v22, "Updated color picker favorites", v23, 2u);
      MEMORY[0x2533AC760](v23, -1, -1);
    }

    if (qword_26B2200D8 != -1) {
      swift_once();
    }
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
    __swift_project_value_buffer(v24, (uint64_t)qword_26B21FF20);
    *uint64_t v6 = a2;
    swift_storeEnumTagMultiPayload();
    id v25 = a2;
    sub_251F35CF0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_251D25760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  v4[16] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[17] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251D25854, 0, 0);
}

uint64_t sub_251D25854()
{
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = (void *)v0[15];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v5, (uint64_t)qword_26B21FF20);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  id v6 = objc_msgSend(v4, sel_applicationData);
  v0[21] = v6;
  v0[2] = v0;
  v0[3] = sub_251D25A1C;
  uint64_t v7 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_30;
  v0[14] = v7;
  objc_msgSend(v4, sel_updateApplicationData_completionHandler_, v6);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251D25A1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_251D25BA4;
  }
  else {
    uint64_t v2 = sub_251D25B2C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251D25B2C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251D25BA4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251D25C34()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_251D25C74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3A34;
  return sub_251D25760(a1, v4, v5, v6);
}

uint64_t sub_251D25D28(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E898);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251D25D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorPickerFavorite();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D25DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorPickerFavorite();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D25E50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorPickerFavorite();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_251D25EAC(void *a1)
{
  sub_251D25348(a1, *(void **)(v1 + 16));
}

void sub_251D25EDC(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v25 = MEMORY[0x263F8EE78];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251D2A754();
    sub_251A5E2A0();
    sub_251F35E90();
    uint64_t v1 = v20;
    uint64_t v18 = v21;
    uint64_t v2 = v22;
    int64_t v3 = v23;
    unint64_t v4 = v24;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_251F36340()) {
      goto LABEL_39;
    }
    sub_251D2A754();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v19;
    swift_unknownObjectRelease();
    int64_t v11 = v3;
    uint64_t v9 = v4;
    if (!v19) {
      goto LABEL_39;
    }
LABEL_28:
    self;
    os_log_type_t v15 = (void *)swift_dynamicCastObjCClass();
    if (!v15)
    {

      goto LABEL_9;
    }
    id v16 = objc_msgSend(v15, sel_characteristic);

    int64_t v3 = v11;
    unint64_t v4 = v9;
    if (v16)
    {
      MEMORY[0x2533AA9D0]();
      if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      sub_251F35AE0();
LABEL_9:
      int64_t v3 = v11;
      unint64_t v4 = v9;
    }
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    int64_t v11 = v3;
LABEL_27:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_39;
    }
    goto LABEL_28;
  }
  int64_t v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v18 + 8 * v11);
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13) {
        goto LABEL_25;
      }
      int64_t v14 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13) {
        goto LABEL_25;
      }
      int64_t v14 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_25:
        int64_t v11 = v14;
      }
      else
      {
        int64_t v11 = v3 + 5;
        if (v3 + 5 >= v8) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v18 + 8 * v11);
        if (!v13)
        {
          int64_t v17 = v3 + 6;
          while (v8 != v17)
          {
            unint64_t v13 = *(void *)(v18 + 8 * v17++);
            if (v13)
            {
              int64_t v11 = v17 - 1;
              goto LABEL_26;
            }
          }
LABEL_39:
          sub_251A1E630();
          return;
        }
      }
    }
LABEL_26:
    uint64_t v9 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

uint64_t sub_251D26204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B43100(a1, (uint64_t)v9);
  uint64_t v10 = sub_251F35CD0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_251A1B064((uint64_t)v9, &qword_26B220BB0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_251F35C00();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_251F35CC0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA60);
  id v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    id v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  void v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_251D263E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B43100(a1, (uint64_t)v9);
  uint64_t v10 = sub_251F35CD0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_251A1B064((uint64_t)v9, &qword_26B220BB0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_251F35C00();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_251F35CC0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  id v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    id v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  void v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_251D265B8()
{
  *(void *)(v1 + 112) = v0;
  return MEMORY[0x270FA2498](sub_251D265D8, 0, 0);
}

uint64_t sub_251D265D8()
{
  uint64_t v1 = *(void **)(v0 + 112);
  id v2 = objc_msgSend(v1, sel_valueUpdatedTime);
  uint64_t v3 = sub_251F34D20();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  sub_251F34CE0();

  id v6 = objc_msgSend(v1, sel_notificationEnabledTime);
  uint64_t v7 = swift_task_alloc();
  sub_251F34CE0();

  LOBYTE(v6) = sub_251F34C80();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v7, v3);
  v8(v5, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  if (v6)
  {
    if (objc_msgSend(*(id *)(v0 + 112), sel_value))
    {
      sub_251F36240();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 80) = 0u;
      *(_OWORD *)(v0 + 96) = 0u;
    }
    sub_251ABBD00(v0 + 80, v0 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
    if (swift_dynamicCast()) {
      uint64_t v11 = *(unsigned __int8 *)(v0 + 128);
    }
    else {
      uint64_t v11 = 2;
    }
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v12(v11);
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_251D26868;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
}

uint64_t sub_251D26868()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251D26964, 0, 0);
}

uint64_t sub_251D26964()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
  if (swift_dynamicCast()) {
    uint64_t v1 = *(unsigned __int8 *)(v0 + 128);
  }
  else {
    uint64_t v1 = 2;
  }
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251D269FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_251F365B0();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_251D26B00, 0, 0);
}

uint64_t sub_251D26B00()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_251F365D0();
  uint64_t v5 = sub_251D2A990(&qword_269BA29E0, MEMORY[0x263F8F710]);
  sub_251F36BB0();
  sub_251D2A990(&qword_269BA29E8, MEMORY[0x263F8F6D8]);
  sub_251F365E0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251D26CA0;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_251D26CA0()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_251D26E5C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_251D26E5C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251D26EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_251F365F0();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_251D26FCC, 0, 0);
}

uint64_t sub_251D26FCC()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_251F36610();
  uint64_t v5 = sub_251D2A990(&qword_269B9FF60, MEMORY[0x263F8F740]);
  sub_251F36BB0();
  sub_251D2A990(&qword_269B9FF68, MEMORY[0x263F8F728]);
  sub_251F365E0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251D2716C;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_251D2716C()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_251D2A9D8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t StaticActionSet.toggle()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251D27348, 0, 0);
}

uint64_t sub_251D27348()
{
  uint64_t v1 = v0[3];
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for StaticActionSet() + 52)))
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[5] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251D2760C;
    return StaticActionSet.turnPowerAndActiveActionsOff()();
  }
  else
  {
    uint64_t v4 = swift_task_alloc();
    v0[4] = v4;
    *(void *)uint64_t v4 = v0;
    *(void *)(v4 + 8) = sub_251D274BC;
    uint64_t v5 = v0[3];
    *(unsigned char *)(v4 + 88) = 1;
    *(void *)(v4 + 16) = 0;
    *(void *)(v4 + 24) = v5;
    uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v4 + 32) = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_251D27E4C;
    return v7();
  }
}

uint64_t sub_251D274BC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {

  }
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 48) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251D27748;
  return v6();
}

uint64_t sub_251D2760C()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v2;
  *uint64_t v2 = v5;
  v2[1] = sub_251D27748;
  return v4();
}

uint64_t sub_251D27748(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251D27848, 0, 0);
}

uint64_t sub_251D27848()
{
  Class isa = v0[7].super.isa;
  if (isa
    && (uint64_t v2 = (void *)StaticActionSet.get(from:)(v0[7]), isa, v2)
    && (uint64_t v3 = (objc_class *)objc_msgSend(v2, sel_home),
        v0[8].super.Class isa = v3,
        v2,
        v3))
  {
    v0[9].super.Class isa = (Class)sub_251F35C80();
    v0[10].super.Class isa = (Class)sub_251F35C70();
    uint64_t v5 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251D2799C, v5, v4);
  }
  else
  {
    Class v6 = v0[2].super.isa;
    uint64_t v7 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    uint64_t v8 = (uint64_t (*)(void))v0[1].super.isa;
    return v8();
  }
}

uint64_t sub_251D2799C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251D27A34, 0, 0);
}

uint64_t sub_251D27A34()
{
  *(void *)(v0 + 88) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D27AC0, v2, v1);
}

uint64_t sub_251D27AC0()
{
  swift_release();
  *(void *)(v0 + 96) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251D27B34, 0, 0);
}

uint64_t sub_251D27B34()
{
  if (qword_26B21F398 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B21F5E0;
  v0[13] = qword_26B21F5E0;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[14] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251D27C2C;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[2];
  return DataModel.rebuildSnapshot(for:includingMatterSnapshot:coverage:)(v4, v3, 0, v1);
}

uint64_t sub_251D27C2C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251D27D44, 0, 0);
}

uint64_t sub_251D27D44()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticActionSet.execute(timeout:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 88) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251D27E4C;
  return v6();
}

uint64_t sub_251D27E4C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251D27F4C, 0, 0);
}

uint64_t sub_251D27F4C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    uint64_t v2 = (void *)StaticActionSet.get(from:)(*(HMHomeManager *)(v0 + 40));
    *(void *)(v0 + 48) = v2;

    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_home);
      *(void *)(v0 + 56) = v3;
      if (v3)
      {
        id v4 = v3;
        char v5 = *(unsigned char *)(v0 + 88);
        uint64_t v6 = *(void *)(v0 + 16);
        uint64_t v7 = swift_task_alloc();
        *(void *)(v0 + 64) = v7;
        *(void *)(v7 + 16) = v4;
        *(void *)(v7 + 24) = v2;
        *(void *)(v7 + 32) = v6;
        *(unsigned char *)(v7 + 40) = v5 & 1;
        uint64_t v8 = (void *)swift_task_alloc();
        *(void *)(v0 + 72) = v8;
        void *v8 = v0;
        v8[1] = sub_251D280D8;
        uint64_t v9 = MEMORY[0x263F8EE60] + 8;
        uint64_t v10 = MEMORY[0x263F8EE60] + 8;
        uint64_t v11 = MEMORY[0x263F8EE60] + 8;
        return MEMORY[0x270FA22B8](v8, v9, v10, 0, 0, &unk_269BA2998, v7, v11);
      }
    }
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_251D280D8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251D2825C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_251D281F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251D281F4()
{
  uint64_t v1 = *(void **)(v0 + 48);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251D2825C()
{
  uint64_t v1 = *(void **)(v0 + 48);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t StaticActionSet.turnPowerAndActiveActionsOff()()
{
  v1[12] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v1[13] = swift_task_alloc();
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v2 = (void *)swift_task_alloc();
  v1[14] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251D283A4;
  return v4();
}

uint64_t sub_251D283A4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251D284A4, 0, 0);
}

uint64_t sub_251D284A4()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (!v1
    || (uint64_t v2 = (void *)StaticActionSet.get(from:)(*(HMHomeManager *)(v0 + 120)),
        *(void *)(v0 + 128) = v2,
        v1,
        !v2))
  {
LABEL_42:
    swift_task_dealloc();
    unint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  uint64_t v3 = (uint64_t)objc_msgSend(v2, sel_actions);
  sub_251D2A754();
  sub_251A5E2A0();
  uint64_t v4 = sub_251F35E40();

  sub_251D25EDC(v4);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v36 = MEMORY[0x263F8EE78];
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0) {
      uint64_t v3 = v6;
    }
    else {
      uint64_t v3 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_5;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
    goto LABEL_22;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_21;
  }
LABEL_5:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v34 = v2;
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x2533AB3A0](i, v6);
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_characteristicType);
    uint64_t v12 = sub_251F356F0();
    uint64_t v14 = v13;

    v15._countAndFlagsBits = v12;
    v15._object = v14;
    CharacteristicKind.init(rawValue:)(v15);
    if (v37 != 174 && (v37 == 3 || v37 == 105))
    {
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = v34;
  uint64_t v3 = v36;
LABEL_22:
  *(void *)(v0 + 136) = v3;
  uint64_t v16 = qword_270262910;
  unint64_t v17 = sub_2519F95BC(MEMORY[0x263F8EE78]);
  *(void *)(v0 + 48) = v17;
  *(unsigned char *)(v0 + 56) = v16 & 1;
  *(void *)(v0 + 64) = v16;
  if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
  {
    uint64_t v20 = *(void *)(v3 + 16);
    *(void *)(v0 + 144) = v20;
    if (v20) {
      goto LABEL_25;
    }
LABEL_51:
    swift_release();
    *(void *)(v0 + 184) = sub_251F35C80();
    *(void *)(v0 + 192) = sub_251F35C70();
    uint64_t v31 = sub_251F35C00();
    uint64_t v33 = v32;
    unint64_t v17 = (unint64_t)sub_251D28E1C;
    uint64_t v18 = v31;
    uint64_t v19 = v33;
    return MEMORY[0x270FA2498](v17, v18, v19);
  }
LABEL_50:
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_251F366C0();
  unint64_t v17 = swift_release();
  *(void *)(v0 + 144) = v30;
  if (!v30) {
    goto LABEL_51;
  }
LABEL_25:
  if ((v3 & 0xC000000000000001) == 0)
  {
    if (*(void *)(v3 + 16))
    {
      id v21 = *(id *)(v3 + 32);
      goto LABEL_28;
    }
    __break(1u);
    return MEMORY[0x270FA2498](v17, v18, v19);
  }
LABEL_55:
  id v21 = (id)MEMORY[0x2533AB3A0](0, v3);
LABEL_28:
  id v22 = v21;
  if (sub_251F35D80())
  {

    swift_release();
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v3 = 1;
  while (1)
  {
    *(void *)(v0 + 152) = v22;
    *(void *)(v0 + 160) = v3;
    id v23 = objc_msgSend(v22, sel_service);
    *(void *)(v0 + 168) = v23;
    if (v23) {
      break;
    }

    unint64_t v24 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 136);
    if (v24 == *(void *)(v0 + 144)) {
      goto LABEL_51;
    }
    if ((v3 & 0xC000000000000001) != 0)
    {
      id v22 = (id)MEMORY[0x2533AB3A0](*(void *)(v0 + 160), *(void *)(v0 + 136));
      uint64_t v25 = *(void *)(v0 + 160);
      uint64_t v3 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        goto LABEL_48;
      }
    }
    else
    {
      if (v24 >= *(void *)(v3 + 16)) {
        goto LABEL_49;
      }
      id v22 = *(id *)(v3 + 8 * v24 + 32);
      uint64_t v3 = v24 + 1;
      if (__OFADD__(v24, 1))
      {
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
    }
    if (sub_251F35D80())
    {
      id v26 = *(void **)(v0 + 128);

      swift_release();
      goto LABEL_41;
    }
  }
  char v35 = (uint64_t (__cdecl *)())((char *)&dword_269BA29A0 + dword_269BA29A0);
  char v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v29;
  void *v29 = v0;
  v29[1] = sub_251D28964;
  return v35();
}

uint64_t sub_251D28964(char a1)
{
  *(unsigned char *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251D28A64, 0, 0);
}

uint64_t sub_251D28A64()
{
  uint64_t v34 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 224);
  if (v1 == 2)
  {
    uint64_t v2 = *(void **)(v0 + 152);
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 168);
    uint64_t v6 = *(void **)(v0 + 152);
    if (v1)
    {
      *(void *)(v0 + 40) = MEMORY[0x263F8D4F8];
      *(unsigned char *)(v0 + 16) = 0;
      id v7 = objc_msgSend(v6, sel_characteristicType);
      uint64_t v8 = sub_251F356F0();
      uint64_t v10 = v9;

      v11._countAndFlagsBits = v8;
      v11._object = v10;
      CharacteristicKind.init(rawValue:)(v11);
      unsigned __int8 v12 = v32;
      if (v32 == 174) {
        unsigned __int8 v12 = 0;
      }
      unsigned __int8 v33 = v12;
      id v13 = objc_msgSend(v5, sel_uniqueIdentifier);
      uint64_t v14 = sub_251F34DA0();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = swift_task_alloc();
      sub_251F34D80();

      CharacteristicValueSet.add(value:for:on:)(v0 + 16, &v33, v16);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);

      swift_task_dealloc();
      id v3 = (id)__swift_destroy_boxed_opaque_existential_0(v0 + 16);
    }
    else
    {
    }
  }
  unint64_t v17 = *(void *)(v0 + 160);
  if (v17 == *(void *)(v0 + 144))
  {
LABEL_18:
    swift_release();
    *(void *)(v0 + 184) = sub_251F35C80();
    *(void *)(v0 + 192) = sub_251F35C70();
    uint64_t v24 = sub_251F35C00();
    uint64_t v26 = v25;
    id v3 = sub_251D28E1C;
    uint64_t v18 = v24;
    uint64_t v4 = v26;
    return MEMORY[0x270FA2498](v3, v18, v4);
  }
  else
  {
    while (1)
    {
      uint64_t v18 = *(void *)(v0 + 136);
      if ((v18 & 0xC000000000000001) != 0)
      {
        id v3 = (id)MEMORY[0x2533AB3A0](v17);
        uint64_t v19 = v3;
        uint64_t v20 = *(void *)(v0 + 160);
        BOOL v21 = __OFADD__(v20, 1);
        unint64_t v22 = v20 + 1;
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        if (v17 >= *(void *)(v18 + 16)) {
          goto LABEL_28;
        }
        id v3 = *(id *)(v18 + 8 * v17 + 32);
        uint64_t v19 = v3;
        BOOL v21 = __OFADD__(v17, 1);
        unint64_t v22 = v17 + 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          return MEMORY[0x270FA2498](v3, v18, v4);
        }
      }
      if (sub_251F35D80()) {
        break;
      }
      *(void *)(v0 + 152) = v19;
      *(void *)(v0 + 160) = v22;
      id v23 = objc_msgSend(v19, sel_service);
      *(void *)(v0 + 168) = v23;
      if (v23)
      {
        uint64_t v31 = (uint64_t (__cdecl *)())((char *)&dword_269BA29A0 + dword_269BA29A0);
        uint64_t v30 = (void *)swift_task_alloc();
        *(void *)(v0 + 176) = v30;
        *uint64_t v30 = v0;
        v30[1] = sub_251D28964;
        return v31();
      }

      unint64_t v17 = *(void *)(v0 + 160);
      if (v17 == *(void *)(v0 + 144)) {
        goto LABEL_18;
      }
    }
    unint64_t v27 = *(void **)(v0 + 128);

    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
}

uint64_t sub_251D28E1C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251D28EB4, 0, 0);
}

uint64_t sub_251D28EB4()
{
  *(void *)(v0 + 200) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D28F40, v2, v1);
}

uint64_t sub_251D28F40()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 48);
  *(void *)(v0 + 208) = v1;
  char v2 = *(unsigned char *)(v0 + 56);
  *(void *)(v0 + 72) = v1;
  uint64_t v3 = *(void *)(v0 + 64);
  *(unsigned char *)(v0 + 80) = v2;
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251D29010;
  uint64_t v5 = *(void *)(v0 + 104);
  return DataModel.write(characteristicValueSet:home:)(v5, (uint64_t *)(v0 + 72), 0);
}

uint64_t sub_251D29010()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_251A1B064(v1, &qword_26B2203A0);
  return MEMORY[0x270FA2498](sub_251D2914C, 0, 0);
}

uint64_t sub_251D2914C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251D291B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 81) = a6;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  *(void *)(v6 + 56) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251D29250, 0, 0);
}

uint64_t sub_251D29250()
{
  uint64_t v1 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 81);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v4 = *(void **)(v0 + 40);
  uint64_t v5 = sub_251F35CD0();
  uint64_t v6 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  BOOL v21 = *v6;
  (*v6)(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  void v7[4] = v3;
  v7[5] = v4;
  id v8 = v3;
  id v9 = v4;
  sub_251D263E0(v1, (uint64_t)&unk_269BA29B8, (uint64_t)v7);
  sub_251A1B064(v1, &qword_26B220BB0);
  if ((v2 & 1) == 0)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_251F350A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B21F290);
    Swift::String v11 = sub_251F35080();
    os_log_type_t v12 = sub_251F35FD0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = *(void *)(v0 + 48);
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      *(void *)(v0 + 16) = v13;
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v11, v12, "executing actionSet with timeout: %f", v14, 0xCu);
      MEMORY[0x2533AC760](v14, -1, -1);
    }

    uint64_t v16 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 56);
    v21(v15, 1, 1, v5);
    unint64_t v17 = (void *)swift_allocObject();
    void v17[2] = 0;
    v17[3] = 0;
    v17[4] = v16;
    sub_251D263E0(v15, (uint64_t)&unk_269BA29D0, (uint64_t)v17);
    sub_251A1B064(v15, &qword_26B220BB0);
  }
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA29C0);
  *uint64_t v18 = v0;
  v18[1] = sub_251D29534;
  return MEMORY[0x270FA2048](v0 + 80, 0, 0, v19);
}

uint64_t sub_251D29534()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_251AD5148;
  }
  else {
    char v2 = sub_251D29648;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251D29648()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
  sub_251F35DB0();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21F290);
  char v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "actionSet execution has completed, cancelling timeout", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }

  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251D297A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  v5[17] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[18] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v5[19] = v6;
  v5[20] = *(void *)(v6 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v7 = sub_251F35030();
  v5[22] = v7;
  v5[23] = *(void *)(v7 - 8);
  v5[24] = swift_task_alloc();
  uint64_t v8 = sub_251F34FE0();
  v5[25] = v8;
  v5[26] = *(void *)(v8 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251D29968, 0, 0);
}

uint64_t sub_251D29968()
{
  if (qword_26B21ED30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F35020();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ED40);
  sub_251F34FD0();
  char v2 = sub_251F35000();
  os_signpost_type_t v3 = sub_251F36060();
  if (sub_251F36170())
  {
    uint64_t v4 = v0[28];
    uint64_t v5 = v0[25];
    uint64_t v6 = v0[26];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    unint64_t v8 = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, v0[29], v5);
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    os_signpost_id_t v10 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v2, v3, v10, "actionSetExecution", "", v9, 2u);
    MEMORY[0x2533AC760](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v11 = v0[26];

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v12 = v0[28];
  uint64_t v13 = v0[29];
  uint64_t v15 = v0[25];
  uint64_t v14 = v0[26];
  uint64_t v16 = (void *)v0[15];
  uint64_t v20 = v0[16];
  v0[31] = v7;
  v0[32] = v8;
  v7(v12, v13, v15);
  sub_251F35060();
  swift_allocObject();
  v0[33] = sub_251F35050();
  unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[34] = v17;
  v0[35] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v17(v13, v15);
  v0[2] = v0;
  v0[3] = sub_251D29C14;
  uint64_t v18 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_11;
  v0[14] = v18;
  objc_msgSend(v16, sel_executeActionSet_completionHandler_, v20, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251D29C14()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 288) = v1;
  if (v1) {
    char v2 = sub_251D29FF4;
  }
  else {
    char v2 = sub_251D29D24;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251D29D24()
{
  uint64_t v1 = (void *)(v0 + 216);
  char v2 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v3 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v6 = *(void *)(v0 + 176);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x263F90238])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
      uint64_t v7 = "";
    }
    uint64_t v1 = (void *)(v0 + 224);
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 200);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 248))(*(void *)(v0 + 224), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v2, v3, v12, "actionSetExecution", v7, v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0 + 272))(*v1, *(void *)(v0 + 200));
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v14 = *(void *)(v0 + 160);
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v15 = *(void **)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 152);
  unint64_t v17 = *(void **)(v0 + 120);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v18, (uint64_t)qword_26B21FF20);
  void *v15 = v17;
  swift_storeEnumTagMultiPayload();
  id v19 = v17;
  sub_251F35CF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_251D29FF4()
{
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251D2A0C8(double a1)
{
  *(double *)(v1 + 32) = a1;
  uint64_t v2 = sub_251F365D0();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = *(void *)(v2 - 8);
  *(void *)(v1 + 56) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251D2A188, 0, 0);
}

uint64_t sub_251D2A188()
{
  uint64_t v1 = sub_251F36E30();
  uint64_t v3 = v2;
  sub_251F365C0();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269BA29D8 + dword_269BA29D8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251D2A264;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_251D2A264()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[6] + 8))(v2[7], v2[5]);
  if (v0) {
    uint64_t v3 = sub_251D2A578;
  }
  else {
    uint64_t v3 = sub_251D2A3CC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_251D2A3CC()
{
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21F290);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "actionSet execution timeout has been hit", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }

  type metadata accessor for HMError(0);
  *(void *)(v0 + 24) = 8;
  sub_251D97A44(MEMORY[0x263F8EE78]);
  sub_251D2A990(&qword_269B9C820, type metadata accessor for HMError);
  sub_251F34A10();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251D2A578()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251D2A5DC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_251AB3A34;
  return MEMORY[0x270FA2498](sub_251D27348, 0, 0);
}

uint64_t sub_251D2A688(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  void *v10 = v3;
  v10[1] = sub_251AB3A34;
  return sub_251D291B4(a1, a2, v6, v7, v8, v9);
}

unint64_t sub_251D2A754()
{
  unint64_t result = qword_26B21EB40;
  if (!qword_26B21EB40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21EB40);
  }
  return result;
}

uint64_t sub_251D2A794()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251D2A7DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251D297A0(a1, v4, v5, v7, v6);
}

uint64_t sub_251D2A89C()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_251D2A8D4()
{
  double v2 = *(double *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_251AB3DD4;
  return sub_251D2A0C8(v2);
}

uint64_t sub_251D2A990(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticAccessoryServiceCharacteristicTriplet() + 24);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for StaticAccessoryServiceCharacteristicTriplet()
{
  uint64_t result = qword_269BA2A18;
  if (!qword_269BA2A18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.staticAccessory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D2B844(v1, a1, type metadata accessor for StaticAccessory);
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.staticService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  return sub_251D2B844(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.staticCharacteristic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  return sub_251D2B844(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
}

BOOL static StaticAccessoryServiceCharacteristicTriplet.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  if ((_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  return _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0(a1 + v5, a2 + v5);
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.hash(into:)(long long *a1)
{
  return StaticCharacteristic.hash(into:)((uint64_t)a1);
}

uint64_t sub_251D2AC4C()
{
  unint64_t v1 = 0x6553636974617473;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6341636974617473;
  }
}

uint64_t sub_251D2ACC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D34A24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D2ACEC(uint64_t a1)
{
  unint64_t v2 = sub_251D2B788();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D2AD28(uint64_t a1)
{
  unint64_t v2 = sub_251D2B788();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA29F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D2B788();
  sub_251F36DA0();
  v8[15] = 0;
  type metadata accessor for StaticAccessory(0);
  sub_251D2B8F4(&qword_269B9E028, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  sub_251F36A20();
  if (!v1)
  {
    type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    v8[14] = 1;
    type metadata accessor for StaticService();
    sub_251D2B8F4(&qword_269B9E0C8, (void (*)(uint64_t))type metadata accessor for StaticService);
    sub_251F36A20();
    v8[13] = 2;
    type metadata accessor for StaticCharacteristic();
    sub_251D2B8F4(&qword_269B9E610, (void (*)(uint64_t))type metadata accessor for StaticCharacteristic);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.hashValue.getter()
{
  sub_251F36CA0();
  StaticAccessory.hash(into:)(v1);
  type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  StaticService.hash(into:)(v1);
  StaticCharacteristic.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = type metadata accessor for StaticCharacteristic();
  MEMORY[0x270FA5388](v24);
  id v23 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v26 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2A08);
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  char v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_251D2B788();
  unint64_t v27 = v10;
  uint64_t v15 = v30;
  sub_251F36D90();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  }
  uint64_t v16 = v25;
  uint64_t v17 = (uint64_t)v13;
  char v33 = 0;
  sub_251D2B8F4(&qword_269B9E170, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  uint64_t v18 = (uint64_t)v26;
  sub_251F36880();
  sub_251D2B7DC(v18, v17, type metadata accessor for StaticAccessory);
  char v32 = 1;
  sub_251D2B8F4(&qword_269B9E1D8, (void (*)(uint64_t))type metadata accessor for StaticService);
  sub_251F36880();
  sub_251D2B7DC((uint64_t)v6, v17 + *(int *)(v11 + 20), (uint64_t (*)(void))type metadata accessor for StaticService);
  char v31 = 2;
  sub_251D2B8F4(&qword_269B9E630, (void (*)(uint64_t))type metadata accessor for StaticCharacteristic);
  uint64_t v19 = (uint64_t)v23;
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v27, v28);
  sub_251D2B7DC(v19, v17 + *(int *)(v11 + 24), (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  sub_251D2B844(v17, v22, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  return sub_251D310C4(v17, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

BOOL sub_251D2B53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static StaticAccessory.== infix(_:_:)(a1, a2) & 1) == 0
    || (static StaticService.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);
  return _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0(a1 + v6, a2 + v6);
}

uint64_t sub_251D2B5B8()
{
  sub_251F36CA0();
  StaticAccessory.hash(into:)(v1);
  StaticService.hash(into:)(v1);
  StaticCharacteristic.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251D2B628(long long *a1)
{
  return StaticCharacteristic.hash(into:)((uint64_t)a1);
}

uint64_t sub_251D2B67C()
{
  sub_251F36CA0();
  StaticAccessory.hash(into:)(v1);
  StaticService.hash(into:)(v1);
  StaticCharacteristic.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251D2B6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_251D2B758@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAccessoryServiceCharacteristicTriplet.init(from:)(a1, a2);
}

uint64_t sub_251D2B770(void *a1)
{
  return StaticAccessoryServiceCharacteristicTriplet.encode(to:)(a1);
}

unint64_t sub_251D2B788()
{
  unint64_t result = qword_269BA2A00;
  if (!qword_269BA2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2A00);
  }
  return result;
}

uint64_t sub_251D2B7DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D2B844(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D2B8AC()
{
  return sub_251D2B8F4(&qword_269BA2A10, (void (*)(uint64_t))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

uint64_t sub_251D2B8F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticAccessoryServiceCharacteristicTriplet(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v17 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return (void *)v17;
  }
  uint64_t v6 = sub_251F34DA0();
  uint64_t v263 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(void *, void *, uint64_t))(v263 + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = v8[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7(v14, v15, v6);
  }
  else
  {
    uint64_t v18 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v18;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = v8[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v250 = *((void *)v22 - 1);
  uint64_t v252 = *(unsigned int (**)(char *, uint64_t, int *))(v250 + 48);
  uint64_t v266 = v6;
  int v267 = v7;
  __dst = v22;
  if (v252(v21, 1, v22))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v7(v20, v21, v6);
    uint64_t v24 = v22[5];
    uint64_t v25 = &v20[v24];
    uint64_t v26 = &v21[v24];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = v22[6];
    char v29 = &v20[v28];
    uint64_t v30 = &v21[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)char v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = v22[7];
    char v33 = &v20[v32];
    uint64_t v34 = &v21[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)char v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = v22[8];
    unsigned __int8 v37 = &v20[v36];
    uint64_t v38 = &v21[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)unsigned __int8 v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    v20[v22[9]] = v21[v22[9]];
    v20[v22[10]] = v21[v22[10]];
    v20[v22[11]] = v21[v22[11]];
    v20[v22[12]] = v21[v22[12]];
    uint64_t v40 = v22;
    BOOL v41 = *(void (**)(char *, void, uint64_t, int *))(v250 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = v267;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41(v20, 0, 1, v40);
  }
  uint64_t v42 = v8[8];
  unint64_t v43 = (char *)a1 + v42;
  unint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = sub_251F34D20();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v257 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  uint64_t v262 = v45;
  uint64_t v258 = v46;
  if (v257(v44, 1, v45))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  uint64_t v48 = v8[9];
  char v49 = (char *)a1 + v48;
  unint64_t v50 = (char *)a2 + v48;
  *(void *)char v49 = *(void *)v50;
  v49[8] = v50[8];
  *((unsigned char *)a1 + v8[10]) = *((unsigned char *)a2 + v8[10]);
  v7((void *)((char *)a1 + v8[11]), (void *)((char *)a2 + v8[11]), v266);
  *(void *)((char *)a1 + v8[12]) = *(void *)((char *)a2 + v8[12]);
  uint64_t v51 = v8[13];
  char v52 = (void *)((char *)a1 + v51);
  unint64_t v53 = (void *)((char *)a2 + v51);
  uint64_t v54 = v53[1];
  void *v52 = *v53;
  v52[1] = v54;
  *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
  *((unsigned char *)a1 + v8[15]) = *((unsigned char *)a2 + v8[15]);
  *((unsigned char *)a1 + v8[16]) = *((unsigned char *)a2 + v8[16]);
  *((unsigned char *)a1 + v8[17]) = *((unsigned char *)a2 + v8[17]);
  *((unsigned char *)a1 + v8[18]) = *((unsigned char *)a2 + v8[18]);
  *(void *)((char *)a1 + v8[19]) = *(void *)((char *)a2 + v8[19]);
  *(void *)((char *)a1 + v8[20]) = *(void *)((char *)a2 + v8[20]);
  uint64_t v55 = v8[21];
  v264 = a1;
  unint64_t v56 = (char *)a1 + v55;
  v265 = a2;
  uint64_t v57 = (char *)a2 + v55;
  id v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v263 + 48);
  uint64_t v261 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v58(v57, 1, v266))
  {
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    v267(v56, v57, v266);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v263 + 56))(v56, 0, 1, v266);
  }
  *(_WORD *)((char *)v264 + v8[22]) = *(_WORD *)((char *)a2 + v8[22]);
  uint64_t v60 = v8[23];
  id v61 = (void *)((char *)v264 + v60);
  uint64_t v62 = (void *)((char *)a2 + v60);
  uint64_t v63 = v62[1];
  void *v61 = *v62;
  v61[1] = v63;
  *(void *)((char *)v264 + v8[24]) = *(void *)((char *)a2 + v8[24]);
  *((unsigned char *)v264 + v8[25]) = *((unsigned char *)a2 + v8[25]);
  *((unsigned char *)v264 + v8[26]) = *((unsigned char *)a2 + v8[26]);
  *((unsigned char *)v264 + v8[27]) = *((unsigned char *)a2 + v8[27]);
  uint64_t v64 = v8[28];
  uint64_t v65 = (char *)v264 + v64;
  uint64_t v66 = (char *)v265 + v64;
  uint64_t v67 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v251 = *(void *)(v67 - 8);
  long long v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v251 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v253 = v68;
  uint64_t v259 = v67;
  if (v68(v66, 1, v67))
  {
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    uint64_t v70 = a3;
    goto LABEL_32;
  }
  v267(v65, v66, v266);
  uint64_t v71 = *(int *)(v67 + 20);
  unint64_t v72 = &v65[v71];
  uint64_t v73 = &v66[v71];
  uint64_t v74 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v85 = *((void *)v73 + 1);
      *(void *)unint64_t v72 = *(void *)v73;
      *((void *)v72 + 1) = v85;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v86 = updated[5];
      uint64_t v87 = &v72[v86];
      uint64_t v88 = &v73[v86];
      swift_bridgeObjectRetain();
      if (v257(v88, 1, v262))
      {
        uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v87, v88, v262);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v258 + 56))(v87, 0, 1, v262);
      }
      uint64_t v96 = updated[6];
      int v97 = &v72[v96];
      int v98 = &v73[v96];
      uint64_t v99 = *((void *)v98 + 1);
      *(void *)int v97 = *(void *)v98;
      *((void *)v97 + 1) = v99;
      uint64_t v100 = updated[7];
      uint64_t v101 = &v72[v100];
      uint64_t v102 = &v73[v100];
      uint64_t v103 = *((void *)v102 + 1);
      *(void *)uint64_t v101 = *(void *)v102;
      *((void *)v101 + 1) = v103;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v72[*(int *)(v104 + 48)] = v73[*(int *)(v104 + 48)];
      goto LABEL_30;
    case 1:
      uint64_t v90 = *((void *)v73 + 1);
      *(void *)unint64_t v72 = *(void *)v73;
      *((void *)v72 + 1) = v90;
      unint64_t v91 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v92 = v91[5];
      uint64_t v93 = &v72[v92];
      uint64_t v94 = &v73[v92];
      swift_bridgeObjectRetain();
      if (v257(v94, 1, v262))
      {
        uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v93, v94, v262);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v258 + 56))(v93, 0, 1, v262);
      }
      uint64_t v105 = v91[6];
      unsigned int v106 = &v72[v105];
      uint64_t v107 = &v73[v105];
      uint64_t v108 = *((void *)v107 + 1);
      *(void *)unsigned int v106 = *(void *)v107;
      *((void *)v106 + 1) = v108;
      uint64_t v109 = v91[7];
      uint64_t v110 = &v72[v109];
      uint64_t v111 = &v73[v109];
      uint64_t v112 = *((void *)v111 + 1);
      *(void *)uint64_t v110 = *(void *)v111;
      *((void *)v110 + 1) = v112;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v72[*(int *)(v113 + 48)] = v73[*(int *)(v113 + 48)];
      goto LABEL_30;
    case 0:
      v267(v72, v73, v266);
      uint64_t v76 = (int *)type metadata accessor for StaticHH2Update(0);
      v72[v76[5]] = v73[v76[5]];
      uint64_t v77 = v76[6];
      uint64_t v78 = &v72[v77];
      uint64_t v79 = &v73[v77];
      uint64_t v81 = *(void *)v79;
      uint64_t v80 = *((void *)v79 + 1);
      *(void *)uint64_t v78 = v81;
      *((void *)v78 + 1) = v80;
      uint64_t v82 = v76[7];
      char v83 = &v72[v82];
      uint64_t v84 = &v73[v82];
      v83[8] = v84[8];
      *(void *)char v83 = *(void *)v84;
      swift_bridgeObjectRetain();
LABEL_30:
      swift_storeEnumTagMultiPayload();
      goto LABEL_31;
  }
  memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
LABEL_31:
  uint64_t v70 = a3;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v251 + 56))(v65, 0, 1, v259);
LABEL_32:
  *((unsigned char *)v264 + v8[29]) = *((unsigned char *)v265 + v8[29]);
  *((unsigned char *)v264 + v8[30]) = *((unsigned char *)v265 + v8[30]);
  *(void *)((char *)v264 + v8[31]) = *(void *)((char *)v265 + v8[31]);
  uint64_t v114 = *(int *)(v70 + 20);
  uint64_t v115 = (char *)v264 + v114;
  uint64_t v116 = (char *)v265 + v114;
  swift_bridgeObjectRetain();
  uint64_t v117 = v266;
  v267(v115, v116, v266);
  uint64_t v118 = (int *)type metadata accessor for StaticService();
  uint64_t v119 = v118[5];
  uint64_t v120 = &v115[v119];
  uint64_t v121 = &v116[v119];
  uint64_t v122 = *((void *)v121 + 1);
  *(void *)uint64_t v120 = *(void *)v121;
  *((void *)v120 + 1) = v122;
  v115[v118[6]] = v116[v118[6]];
  v115[v118[7]] = v116[v118[7]];
  v115[v118[8]] = v116[v118[8]];
  v115[v118[9]] = v116[v118[9]];
  v115[v118[10]] = v116[v118[10]];
  uint64_t v123 = v118[11];
  uint64_t v124 = &v115[v123];
  uint64_t v125 = &v116[v123];
  swift_bridgeObjectRetain();
  v267(v124, v125, v266);
  uint64_t v126 = v118[12];
  uint64_t v127 = &v115[v126];
  uint64_t v128 = &v116[v126];
  *(void *)uint64_t v127 = *(void *)v128;
  v127[8] = v128[8];
  uint64_t v129 = v118[13];
  uint64_t v130 = &v115[v129];
  uint64_t v131 = &v116[v129];
  if (v252(&v116[v129], 1, __dst))
  {
    uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
  }
  else
  {
    v267(v130, v131, v266);
    uint64_t v133 = __dst[5];
    uint64_t v134 = &v130[v133];
    uint64_t v135 = &v131[v133];
    uint64_t v136 = *((void *)v135 + 1);
    *(void *)uint64_t v134 = *(void *)v135;
    *((void *)v134 + 1) = v136;
    uint64_t v137 = __dst[6];
    uint64_t v138 = &v130[v137];
    uint64_t v139 = &v131[v137];
    uint64_t v140 = *((void *)v139 + 1);
    *(void *)uint64_t v138 = *(void *)v139;
    *((void *)v138 + 1) = v140;
    uint64_t v141 = __dst[7];
    int v142 = &v130[v141];
    size_t v143 = &v131[v141];
    uint64_t v144 = *((void *)v143 + 1);
    *(void *)int v142 = *(void *)v143;
    *((void *)v142 + 1) = v144;
    uint64_t v145 = __dst[8];
    uint64_t v146 = &v130[v145];
    uint64_t v147 = &v131[v145];
    uint64_t v148 = *((void *)v147 + 1);
    *(void *)uint64_t v146 = *(void *)v147;
    *((void *)v146 + 1) = v148;
    v130[__dst[9]] = v131[__dst[9]];
    v130[__dst[10]] = v131[__dst[10]];
    v130[__dst[11]] = v131[__dst[11]];
    v130[__dst[12]] = v131[__dst[12]];
    uint64_t v149 = *(void (**)(char *, void, uint64_t, int *))(v250 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v117 = v266;
    swift_bridgeObjectRetain();
    v149(v130, 0, 1, __dst);
  }
  uint64_t v150 = v117;
  uint64_t v151 = v118[14];
  uint64_t v152 = &v115[v151];
  uint64_t v153 = &v116[v151];
  if (v257(&v116[v151], 1, v262))
  {
    uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v152, v153, *(void *)(*(void *)(v154 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v152, v153, v262);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v258 + 56))(v152, 0, 1, v262);
  }
  *(void *)&v115[v118[15]] = *(void *)&v116[v118[15]];
  uint64_t v155 = v118[16];
  uint64_t v156 = &v115[v155];
  uint64_t v157 = &v116[v155];
  uint64_t v158 = *((void *)v157 + 1);
  *(void *)uint64_t v156 = *(void *)v157;
  *((void *)v156 + 1) = v158;
  v115[v118[17]] = v116[v118[17]];
  v115[v118[18]] = v116[v118[18]];
  v115[v118[19]] = v116[v118[19]];
  v115[v118[20]] = v116[v118[20]];
  uint64_t v159 = v118[21];
  uint64_t v160 = &v115[v159];
  uint64_t v161 = &v116[v159];
  uint64_t v162 = *((void *)v161 + 1);
  *(void *)uint64_t v160 = *(void *)v161;
  *((void *)v160 + 1) = v162;
  v115[v118[22]] = v116[v118[22]];
  v115[v118[23]] = v116[v118[23]];
  v115[v118[24]] = v116[v118[24]];
  uint64_t v163 = v118[25];
  uint64_t v164 = &v115[v163];
  uint64_t v165 = &v116[v163];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v58(v165, 1, v150))
  {
    uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
    uint64_t v167 = v263;
  }
  else
  {
    v267(v164, v165, v150);
    uint64_t v167 = v263;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v263 + 56))(v164, 0, 1, v150);
  }
  uint64_t v168 = v118[26];
  uint64_t v169 = &v115[v168];
  uint64_t v170 = &v116[v168];
  if (v58(&v116[v168], 1, v150))
  {
    uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
  }
  else
  {
    v267(v169, v170, v150);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v169, 0, 1, v150);
  }
  *(void *)&v115[v118[27]] = *(void *)&v116[v118[27]];
  *(void *)&v115[v118[28]] = *(void *)&v116[v118[28]];
  uint64_t v172 = v118[29];
  uint64_t v173 = &v115[v172];
  uint64_t v174 = &v116[v172];
  uint64_t v175 = *((void *)v174 + 1);
  *(void *)uint64_t v173 = *(void *)v174;
  *((void *)v173 + 1) = v175;
  uint64_t v176 = v118[30];
  uint64_t v177 = &v115[v176];
  v178 = &v116[v176];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v179 = v259;
  if (!v253(v178, 1, v259))
  {
    v267(v177, v178, v266);
    uint64_t v181 = *(int *)(v259 + 20);
    v182 = &v177[v181];
    uint64_t v183 = &v178[v181];
    uint64_t v184 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v185 = swift_getEnumCaseMultiPayload();
    if (v185 == 2)
    {
      uint64_t v195 = *((void *)v183 + 1);
      *(void *)v182 = *(void *)v183;
      *((void *)v182 + 1) = v195;
      uint64_t v196 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v197 = *(int *)(v196 + 20);
      uint64_t v254 = v196;
      __dsta = &v182[v197];
      v198 = &v183[v197];
      swift_bridgeObjectRetain();
      if (v257(v198, 1, v262))
      {
LABEL_53:
        uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dsta, v198, *(void *)(*(void *)(v202 - 8) + 64));
LABEL_56:
        uint64_t v203 = *(int *)(v254 + 24);
        v204 = &v182[v203];
        uint64_t v205 = &v183[v203];
        uint64_t v206 = *((void *)v205 + 1);
        *(void *)v204 = *(void *)v205;
        *((void *)v204 + 1) = v206;
        uint64_t v207 = *(int *)(v254 + 28);
        uint64_t v208 = &v182[v207];
        uint64_t v209 = &v183[v207];
        uint64_t v210 = *((void *)v209 + 1);
        *(void *)uint64_t v208 = *(void *)v209;
        *((void *)v208 + 1) = v210;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v182[*(int *)(v211 + 48)] = v183[*(int *)(v211 + 48)];
        swift_storeEnumTagMultiPayload();
        uint64_t v179 = v259;
LABEL_57:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v251 + 56))(v177, 0, 1, v179);
        goto LABEL_58;
      }
    }
    else
    {
      if (v185 != 1)
      {
        if (v185)
        {
          memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
        }
        else
        {
          v267(v182, v183, v266);
          uint64_t v186 = (int *)type metadata accessor for StaticHH2Update(0);
          v182[v186[5]] = v183[v186[5]];
          uint64_t v187 = v186[6];
          v188 = &v182[v187];
          uint64_t v189 = &v183[v187];
          uint64_t v191 = *(void *)v189;
          uint64_t v190 = *((void *)v189 + 1);
          *(void *)v188 = v191;
          *((void *)v188 + 1) = v190;
          uint64_t v192 = v186[7];
          v193 = &v182[v192];
          uint64_t v194 = &v183[v192];
          v193[8] = v194[8];
          *(void *)v193 = *(void *)v194;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_57;
      }
      uint64_t v199 = *((void *)v183 + 1);
      *(void *)v182 = *(void *)v183;
      *((void *)v182 + 1) = v199;
      uint64_t v200 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v201 = *(int *)(v200 + 20);
      uint64_t v254 = v200;
      __dsta = &v182[v201];
      v198 = &v183[v201];
      swift_bridgeObjectRetain();
      if (v257(v198, 1, v262)) {
        goto LABEL_53;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v258 + 16))(__dsta, v198, v262);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v258 + 56))(__dsta, 0, 1, v262);
    goto LABEL_56;
  }
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(v177, v178, *(void *)(*(void *)(v180 - 8) + 64));
LABEL_58:
  v115[v118[31]] = v116[v118[31]];
  *(void *)&v115[v118[32]] = *(void *)&v116[v118[32]];
  uint64_t v212 = v118[33];
  uint64_t v213 = &v115[v212];
  uint64_t v214 = &v116[v212];
  swift_bridgeObjectRetain();
  if (v261(v214, 1, v266))
  {
    uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
    v216 = (void (*)(char *, char *, uint64_t))v267;
  }
  else
  {
    v216 = (void (*)(char *, char *, uint64_t))v267;
    v267(v213, v214, v266);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v263 + 56))(v213, 0, 1, v266);
  }
  uint64_t v217 = v118[34];
  uint64_t v218 = &v115[v217];
  v219 = &v116[v217];
  *(_WORD *)uint64_t v218 = *(_WORD *)v219;
  v218[2] = v219[2];
  uint64_t v220 = v118[35];
  size_t v221 = &v115[v220];
  v222 = &v116[v220];
  *(_DWORD *)(v221 + 7) = *(_DWORD *)(v222 + 7);
  *(void *)size_t v221 = *(void *)v222;
  uint64_t v223 = *(int *)(a3 + 24);
  v224 = (char *)v264 + v223;
  uint64_t v225 = (char *)v265 + v223;
  v216((char *)v264 + v223, (char *)v265 + v223, v266);
  uint64_t v226 = (int *)type metadata accessor for StaticCharacteristic();
  v224[v226[5]] = v225[v226[5]];
  uint64_t v227 = v226[6];
  size_t v228 = &v224[v227];
  uint64_t v229 = &v225[v227];
  uint64_t v230 = *(void *)v229;
  unint64_t v231 = *((void *)v229 + 1);
  char v232 = v229[16];
  sub_251B2ED7C(*(void *)v229, v231, v232);
  *(void *)size_t v228 = v230;
  *((void *)v228 + 1) = v231;
  v228[16] = v232;
  (*(void (**)(char *, char *, uint64_t))(v258 + 16))(&v224[v226[7]], &v225[v226[7]], v262);
  uint64_t v233 = v226[8];
  uint64_t v234 = &v224[v233];
  int v235 = &v225[v233];
  uint64_t v236 = *(void *)v235;
  uint64_t v237 = *((void *)v235 + 1);
  uint64_t v238 = *((void *)v235 + 2);
  LOBYTE(v228) = v235[24];
  sub_251A1A550(*(void *)v235, v237, v238, (char)v228);
  *(void *)uint64_t v234 = v236;
  *((void *)v234 + 1) = v237;
  *((void *)v234 + 2) = v238;
  v234[24] = (char)v228;
  *(void *)&v224[v226[9]] = *(void *)&v225[v226[9]];
  v216(&v224[v226[10]], &v225[v226[10]], v266);
  uint64_t v239 = v226[11];
  uint64_t v240 = &v224[v239];
  uint64_t v241 = (uint64_t *)&v225[v239];
  unint64_t v242 = v241[3];
  if (v242 >> 8 == 0xFFFFFFFF)
  {
    long long v243 = *((_OWORD *)v241 + 1);
    *(_OWORD *)uint64_t v240 = *(_OWORD *)v241;
    *((_OWORD *)v240 + 1) = v243;
    *((void *)v240 + 4) = v241[4];
  }
  else
  {
    uint64_t v244 = *v241;
    uint64_t v245 = v241[1];
    uint64_t v246 = v241[2];
    uint64_t v247 = v241[4];
    sub_251A11E50(*v241, v245, v246, v241[3]);
    *(void *)uint64_t v240 = v244;
    *((void *)v240 + 1) = v245;
    *((void *)v240 + 2) = v246;
    *((void *)v240 + 3) = v242;
    *((void *)v240 + 4) = v247;
  }
  return v264;
}

uint64_t destroy for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  uint64_t v6 = (int *)type metadata accessor for StaticAccessory(0);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + v6[6];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    v5(v7, v3);
  }
  else {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + v6[7];
  uint64_t v9 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v39(v8, 1, v9))
  {
    v5(v8, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = a1 + v6[8];
  uint64_t v11 = sub_251F34D20();
  uint64_t v43 = *(void *)(v11 - 8);
  BOOL v41 = *(unsigned int (**)(void))(v43 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v41)(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v10, v11);
  }
  v5(a1 + v6[11], v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + v6[21];
  unint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v44(v12, 1, v3)) {
    v5(v12, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + v6[28];
  uint64_t v14 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v42 = v5;
  if (!v38(v13, 1, v14))
  {
    v5(v13, v3);
    uint64_t v15 = v13 + *(int *)(v14 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = v15 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v41()) {
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v37, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_19;
      }
      v5(v15, v3);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + *(int *)(a2 + 20);
  v5(v17, v3);
  uint64_t v18 = (int *)type metadata accessor for StaticService();
  swift_bridgeObjectRelease();
  v5(v17 + v18[11], v3);
  uint64_t v19 = v17 + v18[13];
  if (!v39(v19, 1, v9))
  {
    v42(v19, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v17 + v18[14];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v41)(v20, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v20, v11);
  }
  uint64_t v40 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v17 + v18[25];
  uint64_t v22 = v42;
  if (!v44(v21, 1, v3)) {
    v42(v21, v3);
  }
  uint64_t v23 = v17 + v18[26];
  if (!v44(v23, 1, v3)) {
    v42(v23, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v17 + v18[30];
  if (!v38(v24, 1, v14))
  {
    v42(v24, v3);
    uint64_t v25 = v24 + *(int *)(v14 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 2 || v26 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v27 = v25 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v41)(v27, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v27, v40);
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = v42;
    }
    else
    {
      if (v26) {
        goto LABEL_36;
      }
      v42(v25, v3);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_36:
  swift_bridgeObjectRelease();
  uint64_t v28 = v17 + v18[33];
  if (!v44(v28, 1, v3)) {
    v22(v28, v3);
  }
  uint64_t v29 = a1 + *(int *)(a2 + 24);
  v22(v29, v3);
  uint64_t v30 = (int *)type metadata accessor for StaticCharacteristic();
  sub_251A580B4(*(void *)(v29 + v30[6]), *(void *)(v29 + v30[6] + 8), *(unsigned char *)(v29 + v30[6] + 16));
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v29 + v30[7], v40);
  sub_251A1A5A4(*(void *)(v29 + v30[8]), *(void *)(v29 + v30[8] + 8), *(void *)(v29 + v30[8] + 16), *(unsigned char *)(v29 + v30[8] + 24));
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v22)(v29 + v30[10], v3);
  uint64_t v32 = (uint64_t *)(v29 + v30[11]);
  unint64_t v33 = v32[3];
  if (v33 >> 8 != 0xFFFFFFFF)
  {
    uint64_t v34 = *v32;
    uint64_t v35 = v32[1];
    uint64_t v36 = v32[2];
    return sub_251A11E74(v34, v35, v36, v33);
  }
  return result;
}

uint64_t initializeWithCopy for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_251F34DA0();
  uint64_t v257 = *(void *)(v5 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v257 + 16);
  v6(a1, a2, v5);
  uint64_t v7 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6((uint64_t)v13, (uint64_t)v14, v5);
  }
  else
  {
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = v7[7];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v244 = *((void *)v19 - 1);
  uint64_t v246 = *(unsigned int (**)(char *, uint64_t, int *))(v244 + 48);
  uint64_t v261 = v5;
  uint64_t v262 = v6;
  uint64_t v251 = v19;
  if (v246(v18, 1, v19))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v17, (uint64_t)v18, v5);
    uint64_t v21 = v19[5];
    uint64_t v22 = &v17[v21];
    uint64_t v23 = &v18[v21];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = v19[6];
    int v26 = &v17[v25];
    uint64_t v27 = &v18[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)int v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v19[7];
    uint64_t v30 = &v17[v29];
    uint64_t v31 = &v18[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = v19[8];
    uint64_t v34 = &v17[v33];
    uint64_t v35 = &v18[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    v17[v19[9]] = v18[v19[9]];
    v17[v19[10]] = v18[v19[10]];
    v17[v19[11]] = v18[v19[11]];
    v17[v19[12]] = v18[v19[12]];
    uint64_t v37 = v19;
    uint64_t v38 = *(void (**)(char *, void, uint64_t, int *))(v244 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = v262;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v17, 0, 1, v37);
  }
  uint64_t v39 = v7[8];
  uint64_t v40 = (void *)(a1 + v39);
  BOOL v41 = (const void *)(a2 + v39);
  uint64_t v42 = sub_251F34D20();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v252 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48);
  uint64_t v258 = v42;
  uint64_t v253 = v43;
  if (v252(v41, 1, v42))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  uint64_t v45 = v7[9];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  *(unsigned char *)(a1 + v7[10]) = *(unsigned char *)(a2 + v7[10]);
  v6(a1 + v7[11], a2 + v7[11], v261);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  uint64_t v48 = v7[13];
  char v49 = (void *)(a1 + v48);
  unint64_t v50 = (void *)(a2 + v48);
  uint64_t v51 = v50[1];
  *char v49 = *v50;
  v49[1] = v51;
  *(unsigned char *)(a1 + v7[14]) = *(unsigned char *)(a2 + v7[14]);
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  *(unsigned char *)(a1 + v7[17]) = *(unsigned char *)(a2 + v7[17]);
  *(unsigned char *)(a1 + v7[18]) = *(unsigned char *)(a2 + v7[18]);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  *(void *)(a1 + v7[20]) = *(void *)(a2 + v7[20]);
  uint64_t v52 = v7[21];
  uint64_t v259 = a1;
  unint64_t v53 = (void *)(a1 + v52);
  uint64_t v256 = a2;
  uint64_t v54 = (const void *)(a2 + v52);
  uint64_t v55 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v257 + 48);
  uint64_t v260 = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v55(v54, 1, v261))
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    v262((uint64_t)v53, (uint64_t)v54, v261);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v257 + 56))(v53, 0, 1, v261);
  }
  *(_WORD *)(v259 + v7[22]) = *(_WORD *)(a2 + v7[22]);
  uint64_t v57 = v7[23];
  id v58 = (void *)(v259 + v57);
  uint64_t v59 = (void *)(a2 + v57);
  uint64_t v60 = v59[1];
  *id v58 = *v59;
  v58[1] = v60;
  *(void *)(v259 + v7[24]) = *(void *)(a2 + v7[24]);
  *(unsigned char *)(v259 + v7[25]) = *(unsigned char *)(a2 + v7[25]);
  *(unsigned char *)(v259 + v7[26]) = *(unsigned char *)(a2 + v7[26]);
  *(unsigned char *)(v259 + v7[27]) = *(unsigned char *)(a2 + v7[27]);
  uint64_t v61 = v7[28];
  uint64_t v62 = (char *)(v259 + v61);
  uint64_t v63 = (char *)(a2 + v61);
  uint64_t v64 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v245 = *(void *)(v64 - 8);
  uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v245 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v247 = v65;
  uint64_t v254 = v64;
  if (v65(v63, 1, v64))
  {
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
    uint64_t v67 = v261;
    goto LABEL_28;
  }
  v262((uint64_t)v62, (uint64_t)v63, v261);
  uint64_t v68 = *(int *)(v64 + 20);
  uint64_t v69 = &v62[v68];
  uint64_t v70 = &v63[v68];
  uint64_t v71 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v73 = v62;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v83 = *((void *)v70 + 1);
      *(void *)uint64_t v69 = *(void *)v70;
      *((void *)v69 + 1) = v83;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v84 = updated[5];
      uint64_t v85 = &v69[v84];
      uint64_t v86 = &v70[v84];
      swift_bridgeObjectRetain();
      if (v252(v86, 1, v42)) {
        goto LABEL_22;
      }
      goto LABEL_24;
    case 1:
      uint64_t v87 = *((void *)v70 + 1);
      *(void *)uint64_t v69 = *(void *)v70;
      *((void *)v69 + 1) = v87;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v88 = updated[5];
      uint64_t v85 = &v69[v88];
      uint64_t v86 = &v70[v88];
      swift_bridgeObjectRetain();
      if (v252(v86, 1, v42))
      {
LABEL_22:
        uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
LABEL_25:
        uint64_t v67 = v261;
        uint64_t v90 = updated[6];
        unint64_t v91 = &v69[v90];
        uint64_t v92 = &v70[v90];
        uint64_t v93 = *((void *)v92 + 1);
        *(void *)unint64_t v91 = *(void *)v92;
        *((void *)v91 + 1) = v93;
        uint64_t v94 = updated[7];
        uint64_t v95 = &v69[v94];
        uint64_t v96 = &v70[v94];
        uint64_t v97 = *((void *)v96 + 1);
        *(void *)uint64_t v95 = *(void *)v96;
        *((void *)v95 + 1) = v97;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v69[*(int *)(v98 + 48)] = v70[*(int *)(v98 + 48)];
        goto LABEL_26;
      }
LABEL_24:
      (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v85, v86, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v253 + 56))(v85, 0, 1, v42);
      goto LABEL_25;
    case 0:
      uint64_t v67 = v261;
      v262((uint64_t)v69, (uint64_t)v70, v261);
      uint64_t v74 = (int *)type metadata accessor for StaticHH2Update(0);
      v69[v74[5]] = v70[v74[5]];
      uint64_t v75 = v74[6];
      uint64_t v76 = &v69[v75];
      uint64_t v77 = &v70[v75];
      uint64_t v79 = *(void *)v77;
      uint64_t v78 = *((void *)v77 + 1);
      *(void *)uint64_t v76 = v79;
      *((void *)v76 + 1) = v78;
      uint64_t v80 = v74[7];
      uint64_t v81 = &v69[v80];
      uint64_t v82 = &v70[v80];
      v81[8] = v82[8];
      *(void *)uint64_t v81 = *(void *)v82;
      swift_bridgeObjectRetain();
LABEL_26:
      swift_storeEnumTagMultiPayload();
      goto LABEL_27;
  }
  memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  uint64_t v67 = v261;
LABEL_27:
  (*(void (**)(char *, void, uint64_t, uint64_t))(v245 + 56))(v73, 0, 1, v254);
LABEL_28:
  *(unsigned char *)(v259 + v7[29]) = *(unsigned char *)(a2 + v7[29]);
  *(unsigned char *)(v259 + v7[30]) = *(unsigned char *)(a2 + v7[30]);
  *(void *)(v259 + v7[31]) = *(void *)(a2 + v7[31]);
  uint64_t v99 = *(int *)(a3 + 20);
  uint64_t v100 = v259 + v99;
  uint64_t v101 = a2 + v99;
  swift_bridgeObjectRetain();
  v262(v100, v101, v67);
  uint64_t v102 = (int *)type metadata accessor for StaticService();
  uint64_t v103 = v102[5];
  uint64_t v104 = (void *)(v100 + v103);
  uint64_t v105 = (void *)(v101 + v103);
  uint64_t v106 = v105[1];
  *uint64_t v104 = *v105;
  v104[1] = v106;
  *(unsigned char *)(v100 + v102[6]) = *(unsigned char *)(v101 + v102[6]);
  *(unsigned char *)(v100 + v102[7]) = *(unsigned char *)(v101 + v102[7]);
  *(unsigned char *)(v100 + v102[8]) = *(unsigned char *)(v101 + v102[8]);
  *(unsigned char *)(v100 + v102[9]) = *(unsigned char *)(v101 + v102[9]);
  *(unsigned char *)(v100 + v102[10]) = *(unsigned char *)(v101 + v102[10]);
  uint64_t v107 = v102[11];
  uint64_t v108 = v100 + v107;
  uint64_t v109 = v101 + v107;
  swift_bridgeObjectRetain();
  v262(v108, v109, v67);
  uint64_t v110 = v102[12];
  uint64_t v111 = v100 + v110;
  uint64_t v112 = v101 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  *(unsigned char *)(v111 + 8) = *(unsigned char *)(v112 + 8);
  uint64_t v113 = v102[13];
  uint64_t v114 = (char *)(v100 + v113);
  uint64_t v115 = (char *)(v101 + v113);
  if (v246((char *)(v101 + v113), 1, v251))
  {
    uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    v262((uint64_t)v114, (uint64_t)v115, v67);
    uint64_t v117 = v251[5];
    uint64_t v118 = &v114[v117];
    uint64_t v119 = &v115[v117];
    uint64_t v120 = *((void *)v119 + 1);
    *(void *)uint64_t v118 = *(void *)v119;
    *((void *)v118 + 1) = v120;
    uint64_t v121 = v251[6];
    uint64_t v122 = &v114[v121];
    uint64_t v123 = &v115[v121];
    uint64_t v124 = *((void *)v123 + 1);
    *(void *)uint64_t v122 = *(void *)v123;
    *((void *)v122 + 1) = v124;
    uint64_t v125 = v251[7];
    uint64_t v126 = &v114[v125];
    uint64_t v127 = &v115[v125];
    uint64_t v128 = *((void *)v127 + 1);
    *(void *)uint64_t v126 = *(void *)v127;
    *((void *)v126 + 1) = v128;
    uint64_t v129 = v251[8];
    uint64_t v130 = &v114[v129];
    uint64_t v131 = &v115[v129];
    uint64_t v132 = *((void *)v131 + 1);
    *(void *)uint64_t v130 = *(void *)v131;
    *((void *)v130 + 1) = v132;
    v114[v251[9]] = v115[v251[9]];
    v114[v251[10]] = v115[v251[10]];
    v114[v251[11]] = v115[v251[11]];
    v114[v251[12]] = v115[v251[12]];
    uint64_t v133 = *(void (**)(char *, void, uint64_t, int *))(v244 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = v258;
    swift_bridgeObjectRetain();
    uint64_t v67 = v261;
    swift_bridgeObjectRetain();
    v133(v114, 0, 1, v251);
  }
  uint64_t v134 = v102[14];
  uint64_t v135 = (void *)(v100 + v134);
  uint64_t v136 = (const void *)(v101 + v134);
  if (v252((const void *)(v101 + v134), 1, v42))
  {
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v253 + 16))(v135, v136, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v253 + 56))(v135, 0, 1, v42);
  }
  *(void *)(v100 + v102[15]) = *(void *)(v101 + v102[15]);
  uint64_t v138 = v102[16];
  uint64_t v139 = (void *)(v100 + v138);
  uint64_t v140 = (void *)(v101 + v138);
  uint64_t v141 = v140[1];
  *uint64_t v139 = *v140;
  v139[1] = v141;
  *(unsigned char *)(v100 + v102[17]) = *(unsigned char *)(v101 + v102[17]);
  *(unsigned char *)(v100 + v102[18]) = *(unsigned char *)(v101 + v102[18]);
  *(unsigned char *)(v100 + v102[19]) = *(unsigned char *)(v101 + v102[19]);
  *(unsigned char *)(v100 + v102[20]) = *(unsigned char *)(v101 + v102[20]);
  uint64_t v142 = v102[21];
  size_t v143 = (void *)(v100 + v142);
  uint64_t v144 = (void *)(v101 + v142);
  uint64_t v145 = v144[1];
  void *v143 = *v144;
  v143[1] = v145;
  *(unsigned char *)(v100 + v102[22]) = *(unsigned char *)(v101 + v102[22]);
  *(unsigned char *)(v100 + v102[23]) = *(unsigned char *)(v101 + v102[23]);
  *(unsigned char *)(v100 + v102[24]) = *(unsigned char *)(v101 + v102[24]);
  uint64_t v146 = v102[25];
  uint64_t v147 = (void *)(v100 + v146);
  uint64_t v148 = (const void *)(v101 + v146);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v55(v148, 1, v67))
  {
    uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
    uint64_t v150 = v257;
  }
  else
  {
    v262((uint64_t)v147, (uint64_t)v148, v67);
    uint64_t v150 = v257;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v257 + 56))(v147, 0, 1, v67);
  }
  uint64_t v151 = v102[26];
  uint64_t v152 = (void *)(v100 + v151);
  uint64_t v153 = (const void *)(v101 + v151);
  if (v55((const void *)(v101 + v151), 1, v67))
  {
    uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v152, v153, *(void *)(*(void *)(v154 - 8) + 64));
  }
  else
  {
    v262((uint64_t)v152, (uint64_t)v153, v67);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v150 + 56))(v152, 0, 1, v67);
  }
  *(void *)(v100 + v102[27]) = *(void *)(v101 + v102[27]);
  *(void *)(v100 + v102[28]) = *(void *)(v101 + v102[28]);
  uint64_t v155 = v102[29];
  uint64_t v156 = (void *)(v100 + v155);
  uint64_t v157 = (void *)(v101 + v155);
  uint64_t v158 = v157[1];
  *uint64_t v156 = *v157;
  v156[1] = v158;
  uint64_t v159 = v102[30];
  uint64_t v160 = (char *)(v100 + v159);
  uint64_t v161 = (char *)(v101 + v159);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v162 = v254;
  if (v247(v161, 1, v254))
  {
    uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
  }
  else
  {
    v262((uint64_t)v160, (uint64_t)v161, v261);
    uint64_t v164 = *(int *)(v254 + 20);
    uint64_t v165 = &v160[v164];
    uint64_t v166 = &v161[v164];
    uint64_t v167 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v168 = swift_getEnumCaseMultiPayload();
    if (v168 == 2)
    {
      uint64_t v178 = *((void *)v166 + 1);
      *(void *)uint64_t v165 = *(void *)v166;
      *((void *)v165 + 1) = v178;
      uint64_t v179 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v180 = *(int *)(v179 + 20);
      uint64_t v248 = v179;
      __dst = &v165[v180];
      uint64_t v181 = &v166[v180];
      swift_bridgeObjectRetain();
      if (v252(v181, 1, v258))
      {
        uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v181, *(void *)(*(void *)(v182 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v253 + 16))(__dst, v181, v258);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v253 + 56))(__dst, 0, 1, v258);
      }
      uint64_t v188 = *(int *)(v248 + 24);
      uint64_t v189 = &v165[v188];
      uint64_t v190 = &v166[v188];
      uint64_t v191 = *((void *)v190 + 1);
      *(void *)uint64_t v189 = *(void *)v190;
      *((void *)v189 + 1) = v191;
      uint64_t v192 = *(int *)(v248 + 28);
      v193 = &v165[v192];
      uint64_t v194 = &v166[v192];
      uint64_t v195 = *((void *)v194 + 1);
      *(void *)v193 = *(void *)v194;
      *((void *)v193 + 1) = v195;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v165[*(int *)(v196 + 48)] = v166[*(int *)(v196 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v162 = v254;
    }
    else if (v168 == 1)
    {
      uint64_t v183 = *((void *)v166 + 1);
      *(void *)uint64_t v165 = *(void *)v166;
      *((void *)v165 + 1) = v183;
      __dsta = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v184 = __dsta[5];
      int v185 = &v165[v184];
      uint64_t v186 = &v166[v184];
      swift_bridgeObjectRetain();
      if (v252(v186, 1, v258))
      {
        uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v185, v186, v258);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v253 + 56))(v185, 0, 1, v258);
      }
      uint64_t v162 = v254;
      uint64_t v197 = __dsta[6];
      v198 = &v165[v197];
      uint64_t v199 = &v166[v197];
      uint64_t v200 = *((void *)v199 + 1);
      *(void *)v198 = *(void *)v199;
      *((void *)v198 + 1) = v200;
      uint64_t v201 = __dsta[7];
      uint64_t v202 = &v165[v201];
      uint64_t v203 = &v166[v201];
      uint64_t v204 = *((void *)v203 + 1);
      *(void *)uint64_t v202 = *(void *)v203;
      *((void *)v202 + 1) = v204;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v165[*(int *)(v205 + 48)] = v166[*(int *)(v205 + 48)];
      swift_storeEnumTagMultiPayload();
      a2 = v256;
    }
    else if (v168)
    {
      memcpy(v165, v166, *(void *)(*(void *)(v167 - 8) + 64));
    }
    else
    {
      v262((uint64_t)v165, (uint64_t)v166, v261);
      uint64_t v169 = (int *)type metadata accessor for StaticHH2Update(0);
      v165[v169[5]] = v166[v169[5]];
      uint64_t v170 = v169[6];
      uint64_t v171 = &v165[v170];
      uint64_t v172 = &v166[v170];
      uint64_t v174 = *(void *)v172;
      uint64_t v173 = *((void *)v172 + 1);
      *(void *)uint64_t v171 = v174;
      *((void *)v171 + 1) = v173;
      uint64_t v175 = v169[7];
      uint64_t v176 = &v165[v175];
      uint64_t v177 = &v166[v175];
      v176[8] = v177[8];
      *(void *)uint64_t v176 = *(void *)v177;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v245 + 56))(v160, 0, 1, v162);
  }
  *(unsigned char *)(v100 + v102[31]) = *(unsigned char *)(v101 + v102[31]);
  *(void *)(v100 + v102[32]) = *(void *)(v101 + v102[32]);
  uint64_t v206 = v102[33];
  uint64_t v207 = (void *)(v100 + v206);
  uint64_t v208 = (const void *)(v101 + v206);
  swift_bridgeObjectRetain();
  if (v260(v208, 1, v261))
  {
    uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v207, v208, *(void *)(*(void *)(v209 - 8) + 64));
    uint64_t v210 = v262;
  }
  else
  {
    uint64_t v210 = v262;
    v262((uint64_t)v207, (uint64_t)v208, v261);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v257 + 56))(v207, 0, 1, v261);
  }
  uint64_t v211 = v102[34];
  uint64_t v212 = v100 + v211;
  uint64_t v213 = v101 + v211;
  *(_WORD *)uint64_t v212 = *(_WORD *)v213;
  *(unsigned char *)(v212 + 2) = *(unsigned char *)(v213 + 2);
  uint64_t v214 = v102[35];
  uint64_t v215 = v100 + v214;
  uint64_t v216 = v101 + v214;
  *(_DWORD *)(v215 + 7) = *(_DWORD *)(v216 + 7);
  *(void *)uint64_t v215 = *(void *)v216;
  uint64_t v217 = *(int *)(a3 + 24);
  uint64_t v218 = v259 + v217;
  uint64_t v219 = a2 + v217;
  v210(v259 + v217, v219, v261);
  uint64_t v220 = (int *)type metadata accessor for StaticCharacteristic();
  *(unsigned char *)(v218 + v220[5]) = *(unsigned char *)(v219 + v220[5]);
  uint64_t v221 = v220[6];
  uint64_t v222 = v218 + v221;
  uint64_t v223 = v219 + v221;
  uint64_t v224 = *(void *)v223;
  unint64_t v225 = *(void *)(v223 + 8);
  char v226 = *(unsigned char *)(v223 + 16);
  sub_251B2ED7C(*(void *)v223, v225, v226);
  *(void *)uint64_t v222 = v224;
  *(void *)(v222 + 8) = v225;
  *(unsigned char *)(v222 + 16) = v226;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v253 + 16))(v218 + v220[7], v219 + v220[7], v258);
  uint64_t v227 = v220[8];
  uint64_t v228 = v218 + v227;
  uint64_t v229 = v219 + v227;
  uint64_t v230 = *(void *)v229;
  uint64_t v231 = *(void *)(v229 + 8);
  uint64_t v232 = *(void *)(v229 + 16);
  LOBYTE(v222) = *(unsigned char *)(v229 + 24);
  sub_251A1A550(*(void *)v229, v231, v232, v222);
  *(void *)uint64_t v228 = v230;
  *(void *)(v228 + 8) = v231;
  *(void *)(v228 + 16) = v232;
  *(unsigned char *)(v228 + 24) = v222;
  *(void *)(v218 + v220[9]) = *(void *)(v219 + v220[9]);
  v210(v218 + v220[10], v219 + v220[10], v261);
  uint64_t v233 = v220[11];
  uint64_t v234 = v218 + v233;
  int v235 = (uint64_t *)(v219 + v233);
  unint64_t v236 = v235[3];
  if (v236 >> 8 == 0xFFFFFFFF)
  {
    long long v237 = *((_OWORD *)v235 + 1);
    *(_OWORD *)uint64_t v234 = *(_OWORD *)v235;
    *(_OWORD *)(v234 + 16) = v237;
    *(void *)(v234 + 32) = v235[4];
  }
  else
  {
    uint64_t v238 = *v235;
    uint64_t v239 = v235[1];
    uint64_t v240 = v235[2];
    uint64_t v241 = v235[4];
    sub_251A11E50(*v235, v239, v240, v235[3]);
    *(void *)uint64_t v234 = v238;
    *(void *)(v234 + 8) = v239;
    *(void *)(v234 + 16) = v240;
    *(void *)(v234 + 24) = v236;
    *(void *)(v234 + 32) = v241;
  }
  return v259;
}

char *assignWithCopy for StaticAccessoryServiceCharacteristicTriplet(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  v346 = *(void (**)(char *, char *))(v6 + 24);
  uint64_t v347 = v5;
  v346(a1, a2);
  uint64_t v7 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v11 = v7[6];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    sub_251D310C4((uint64_t)&a1[v11], type metadata accessor for StaticAccessory.DeviceIdentifier);
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v13, v347);
    }
    else
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = v7[7];
  uint64_t v15 = &a1[v14];
  uint64_t v341 = a2;
  uint64_t v16 = &a2[v14];
  uint64_t v17 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, int *))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  uint64_t v22 = v6;
  uint64_t v343 = v6;
  uint64_t v333 = v17;
  uint64_t v327 = v18;
  char v329 = v19;
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v15, v16, v347);
      uint64_t v23 = v17[5];
      uint64_t v24 = &v15[v23];
      uint64_t v25 = &v16[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = *((void *)v25 + 1);
      uint64_t v26 = v17[6];
      uint64_t v27 = &v15[v26];
      uint64_t v28 = &v16[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = *((void *)v28 + 1);
      uint64_t v29 = v17[7];
      uint64_t v30 = &v15[v29];
      uint64_t v31 = &v16[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = *((void *)v31 + 1);
      uint64_t v32 = v17[8];
      uint64_t v33 = &v15[v32];
      uint64_t v34 = &v16[v32];
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = *((void *)v34 + 1);
      v15[v17[9]] = v16[v17[9]];
      v15[v17[10]] = v16[v17[10]];
      v15[v17[11]] = v16[v17[11]];
      v15[v17[12]] = v16[v17[12]];
      uint64_t v35 = *(void (**)(char *, void, uint64_t, int *))(v18 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v22 = v6;
      swift_bridgeObjectRetain();
      v35(v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v21)
  {
    sub_251D310C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_11:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v15, v16, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_12;
  }
  ((void (*)(char *, char *, uint64_t))v346)(v15, v16, v347);
  uint64_t v61 = v17[5];
  uint64_t v62 = &v15[v61];
  uint64_t v63 = &v16[v61];
  *(void *)uint64_t v62 = *(void *)v63;
  *((void *)v62 + 1) = *((void *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v17[6];
  uint64_t v65 = &v15[v64];
  uint64_t v66 = &v16[v64];
  *(void *)uint64_t v65 = *(void *)v66;
  *((void *)v65 + 1) = *((void *)v66 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v67 = v17[7];
  uint64_t v68 = &v15[v67];
  uint64_t v69 = &v16[v67];
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = *((void *)v69 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v70 = v17[8];
  uint64_t v71 = &v15[v70];
  unint64_t v72 = &v16[v70];
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = *((void *)v72 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v17[9]] = v16[v17[9]];
  v15[v17[10]] = v16[v17[10]];
  v15[v17[11]] = v16[v17[11]];
  v15[v17[12]] = v16[v17[12]];
LABEL_12:
  uint64_t v37 = v7[8];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &v341[v37];
  uint64_t v40 = sub_251F34D20();
  uint64_t v342 = *(void *)(v40 - 8);
  BOOL v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v342 + 48);
  unsigned int v42 = v41(v38, 1, v40);
  v335 = v41;
  unsigned int v43 = v41(v39, 1, v40);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v342 + 16))(v38, v39, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v342 + 56))(v38, 0, 1, v40);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v342 + 8))(v38, v40);
LABEL_17:
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v342 + 24))(v38, v39, v40);
LABEL_18:
  uint64_t v45 = v7[9];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &v341[v45];
  uint64_t v48 = *(void *)v47;
  v46[8] = v47[8];
  *(void *)uint64_t v46 = v48;
  a1[v7[10]] = v341[v7[10]];
  ((void (*)(char *, char *, uint64_t))v346)(&a1[v7[11]], &v341[v7[11]], v347);
  *(void *)&a1[v7[12]] = *(void *)&v341[v7[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = v7[13];
  unint64_t v50 = &a1[v49];
  uint64_t v51 = &v341[v49];
  *(void *)unint64_t v50 = *(void *)v51;
  *((void *)v50 + 1) = *((void *)v51 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v7[14]] = v341[v7[14]];
  a1[v7[15]] = v341[v7[15]];
  a1[v7[16]] = v341[v7[16]];
  a1[v7[17]] = v341[v7[17]];
  a1[v7[18]] = v341[v7[18]];
  *(void *)&a1[v7[19]] = *(void *)&v341[v7[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v7[20]] = *(void *)&v341[v7[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v52 = v7[21];
  unint64_t v53 = &a1[v52];
  uint64_t v54 = &v341[v52];
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v56 = v55(&a1[v52], 1, v347);
  uint64_t v345 = v55;
  int v57 = v55(v54, 1, v347);
  uint64_t v344 = v40;
  if (v56)
  {
    if (v57)
    {
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
      uint64_t v59 = v347;
    }
    else
    {
      uint64_t v59 = v347;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v53, v54, v347);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v53, 0, 1, v347);
    }
  }
  else
  {
    uint64_t v59 = v347;
    if (v57)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v53, v347);
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v53, v54, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v346)(v53, v54, v347);
    }
  }
  *(_WORD *)&a1[v7[22]] = *(_WORD *)&v341[v7[22]];
  uint64_t v73 = v7[23];
  uint64_t v74 = &a1[v73];
  uint64_t v75 = &v341[v73];
  *(void *)uint64_t v74 = *(void *)v75;
  *((void *)v74 + 1) = *((void *)v75 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v7[24]] = *(void *)&v341[v7[24]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v7[25]] = v341[v7[25]];
  a1[v7[26]] = v341[v7[26]];
  a1[v7[27]] = v341[v7[27]];
  uint64_t v76 = v7[28];
  uint64_t v77 = (uint64_t)&a1[v76];
  uint64_t v78 = &v341[v76];
  uint64_t v79 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v328 = *(void *)(v79 - 8);
  uint64_t v80 = *(uint64_t (**)(void))(v328 + 48);
  int v81 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v77, 1, v79);
  uint64_t v337 = v79;
  v331 = v80;
  int v82 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v78, 1, v79);
  if (v81)
  {
    if (!v82)
    {
      uint64_t v83 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
      v83(v77, v78, v59);
      uint64_t v84 = *(int *)(v337 + 20);
      uint64_t v85 = (void *)(v77 + v84);
      uint64_t v86 = &v78[v84];
      uint64_t v87 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *uint64_t v85 = *(void *)v86;
        v85[1] = *((void *)v86 + 1);
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v114 = updated[5];
        __dst = (char *)v85 + v114;
        uint64_t v115 = &v86[v114];
        swift_bridgeObjectRetain();
        if (v335(v115, 1, v344))
        {
LABEL_45:
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dst, v115, *(void *)(*(void *)(v117 - 8) + 64));
LABEL_53:
          uint64_t v59 = v347;
          uint64_t v123 = updated[6];
          uint64_t v124 = (void *)((char *)v85 + v123);
          uint64_t v125 = &v86[v123];
          *uint64_t v124 = *(void *)v125;
          v124[1] = *((void *)v125 + 1);
          uint64_t v126 = updated[7];
          uint64_t v127 = (void *)((char *)v85 + v126);
          uint64_t v128 = &v86[v126];
          *uint64_t v127 = *(void *)v128;
          v127[1] = *((void *)v128 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v85 + *(int *)(v129 + 48)) = v86[*(int *)(v129 + 48)];
          goto LABEL_54;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
            uint64_t v59 = v347;
LABEL_55:
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v328 + 56))(v77, 0, 1, v337);
            goto LABEL_56;
          }
          uint64_t v59 = v347;
          v83((uint64_t)v85, v86, v347);
          uint64_t v89 = (int *)type metadata accessor for StaticHH2Update(0);
          *((unsigned char *)v85 + v89[5]) = v86[v89[5]];
          uint64_t v90 = v89[6];
          unint64_t v91 = (void *)((char *)v85 + v90);
          uint64_t v92 = &v86[v90];
          *unint64_t v91 = *(void *)v92;
          v91[1] = *((void *)v92 + 1);
          uint64_t v93 = v89[7];
          uint64_t v94 = (char *)v85 + v93;
          uint64_t v95 = &v86[v93];
          char v96 = v95[8];
          *(void *)uint64_t v94 = *(void *)v95;
          v94[8] = v96;
          swift_bridgeObjectRetain();
LABEL_54:
          swift_storeEnumTagMultiPayload();
          goto LABEL_55;
        }
        *uint64_t v85 = *(void *)v86;
        v85[1] = *((void *)v86 + 1);
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v116 = updated[5];
        __dst = (char *)v85 + v116;
        uint64_t v115 = &v86[v116];
        swift_bridgeObjectRetain();
        if (v335(v115, 1, v344)) {
          goto LABEL_45;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v342 + 16))(__dst, v115, v344);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v342 + 56))(__dst, 0, 1, v344);
      goto LABEL_53;
    }
    goto LABEL_35;
  }
  if (v82)
  {
    sub_251D310C4(v77, type metadata accessor for StaticSoftwareUpdate);
LABEL_35:
    size_t v97 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
    uint64_t v98 = (void *)v77;
    uint64_t v99 = v78;
    goto LABEL_36;
  }
  ((void (*)(uint64_t, char *, uint64_t))v346)(v77, v78, v59);
  if (a1 == v341) {
    goto LABEL_56;
  }
  uint64_t v100 = *(int *)(v79 + 20);
  uint64_t v101 = (void *)(v77 + v100);
  uint64_t v102 = &v78[v100];
  sub_251D310C4((uint64_t)v101, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v103 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v104 = swift_getEnumCaseMultiPayload();
  if (v104 != 2)
  {
    if (v104 != 1)
    {
      if (!v104)
      {
        (*(void (**)(void *, char *, uint64_t))(v6 + 16))(v101, v102, v59);
        uint64_t v105 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v101 + v105[5]) = v102[v105[5]];
        uint64_t v106 = v105[6];
        uint64_t v107 = (void *)((char *)v101 + v106);
        uint64_t v108 = &v102[v106];
        void *v107 = *(void *)v108;
        v107[1] = *((void *)v108 + 1);
        uint64_t v109 = v105[7];
        uint64_t v110 = (char *)v101 + v109;
        uint64_t v111 = &v102[v109];
        char v112 = v111[8];
        *(void *)uint64_t v110 = *(void *)v111;
        v110[8] = v112;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_56;
      }
      size_t v97 = *(void *)(*(void *)(v103 - 8) + 64);
      uint64_t v98 = v101;
      uint64_t v99 = v102;
LABEL_36:
      memcpy(v98, v99, v97);
      goto LABEL_56;
    }
    void *v101 = *(void *)v102;
    v101[1] = *((void *)v102 + 1);
    uint64_t v118 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v122 = v118[5];
    __dsta = (char *)v101 + v122;
    uint64_t v120 = &v102[v122];
    swift_bridgeObjectRetain();
    if (v335(v120, 1, v344)) {
      goto LABEL_48;
    }
LABEL_127:
    (*(void (**)(char *, char *, uint64_t))(v342 + 16))(__dsta, v120, v344);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v342 + 56))(__dsta, 0, 1, v344);
    goto LABEL_128;
  }
  void *v101 = *(void *)v102;
  v101[1] = *((void *)v102 + 1);
  uint64_t v118 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v119 = v118[5];
  __dsta = (char *)v101 + v119;
  uint64_t v120 = &v102[v119];
  swift_bridgeObjectRetain();
  if (!v335(v120, 1, v344)) {
    goto LABEL_127;
  }
LABEL_48:
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  memcpy(__dsta, v120, *(void *)(*(void *)(v121 - 8) + 64));
LABEL_128:
  uint64_t v313 = v118[6];
  size_t v314 = (void *)((char *)v101 + v313);
  uint64_t v315 = &v102[v313];
  *size_t v314 = *(void *)v315;
  v314[1] = *((void *)v315 + 1);
  uint64_t v316 = v118[7];
  uint64_t v317 = (void *)((char *)v101 + v316);
  uint64_t v318 = &v102[v316];
  *uint64_t v317 = *(void *)v318;
  v317[1] = *((void *)v318 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  *((unsigned char *)v101 + *(int *)(v319 + 48)) = v102[*(int *)(v319 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_56:
  a1[v7[29]] = v341[v7[29]];
  a1[v7[30]] = v341[v7[30]];
  *(void *)&a1[v7[31]] = *(void *)&v341[v7[31]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v130 = *(int *)(a3 + 20);
  __dstb = a1;
  uint64_t v131 = &a1[v130];
  uint64_t v132 = &v341[v130];
  ((void (*)(char *, char *, uint64_t))v346)(&a1[v130], &v341[v130], v59);
  uint64_t v133 = (int *)type metadata accessor for StaticService();
  uint64_t v134 = v133[5];
  uint64_t v135 = &v131[v134];
  uint64_t v136 = &v132[v134];
  *(void *)uint64_t v135 = *(void *)v136;
  *((void *)v135 + 1) = *((void *)v136 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v131[v133[6]] = v132[v133[6]];
  v131[v133[7]] = v132[v133[7]];
  v131[v133[8]] = v132[v133[8]];
  v131[v133[9]] = v132[v133[9]];
  v131[v133[10]] = v132[v133[10]];
  ((void (*)(char *, char *, uint64_t))v346)(&v131[v133[11]], &v132[v133[11]], v59);
  uint64_t v137 = v133[12];
  uint64_t v138 = &v131[v137];
  uint64_t v139 = &v132[v137];
  uint64_t v140 = *(void *)v139;
  v138[8] = v139[8];
  *(void *)uint64_t v138 = v140;
  uint64_t v141 = v133[13];
  uint64_t v142 = &v131[v141];
  size_t v143 = &v132[v141];
  int v144 = v329(&v131[v141], 1, v333);
  int v145 = v329(v143, 1, v333);
  if (v144)
  {
    if (!v145)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v142, v143, v347);
      uint64_t v146 = v333[5];
      uint64_t v147 = &v142[v146];
      uint64_t v148 = &v143[v146];
      *(void *)uint64_t v147 = *(void *)v148;
      *((void *)v147 + 1) = *((void *)v148 + 1);
      uint64_t v149 = v333[6];
      uint64_t v150 = &v142[v149];
      uint64_t v151 = &v143[v149];
      *(void *)uint64_t v150 = *(void *)v151;
      *((void *)v150 + 1) = *((void *)v151 + 1);
      uint64_t v152 = v333[7];
      uint64_t v153 = &v142[v152];
      uint64_t v154 = &v143[v152];
      *(void *)uint64_t v153 = *(void *)v154;
      *((void *)v153 + 1) = *((void *)v154 + 1);
      uint64_t v155 = v333[8];
      uint64_t v156 = &v142[v155];
      uint64_t v157 = &v143[v155];
      *(void *)uint64_t v156 = *(void *)v157;
      *((void *)v156 + 1) = *((void *)v157 + 1);
      v142[v333[9]] = v143[v333[9]];
      v142[v333[10]] = v143[v333[10]];
      v142[v333[11]] = v143[v333[11]];
      v142[v333[12]] = v143[v333[12]];
      uint64_t v330 = *(void (**)(char *, void, uint64_t, int *))(v327 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v330(v142, 0, 1, v333);
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  if (v145)
  {
    sub_251D310C4((uint64_t)v142, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_61:
    uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v142, v143, *(void *)(*(void *)(v158 - 8) + 64));
    goto LABEL_62;
  }
  ((void (*)(char *, char *, uint64_t))v346)(v142, v143, v347);
  uint64_t v209 = v333[5];
  uint64_t v210 = &v142[v209];
  uint64_t v211 = &v143[v209];
  *(void *)uint64_t v210 = *(void *)v211;
  *((void *)v210 + 1) = *((void *)v211 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v212 = v333[6];
  uint64_t v213 = &v142[v212];
  uint64_t v214 = &v143[v212];
  *(void *)uint64_t v213 = *(void *)v214;
  *((void *)v213 + 1) = *((void *)v214 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v215 = v333[7];
  uint64_t v216 = &v142[v215];
  uint64_t v217 = &v143[v215];
  *(void *)uint64_t v216 = *(void *)v217;
  *((void *)v216 + 1) = *((void *)v217 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v218 = v333[8];
  uint64_t v219 = &v142[v218];
  uint64_t v220 = &v143[v218];
  *(void *)uint64_t v219 = *(void *)v220;
  *((void *)v219 + 1) = *((void *)v220 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v142[v333[9]] = v143[v333[9]];
  v142[v333[10]] = v143[v333[10]];
  v142[v333[11]] = v143[v333[11]];
  v142[v333[12]] = v143[v333[12]];
LABEL_62:
  uint64_t v159 = v133[14];
  uint64_t v160 = &v131[v159];
  uint64_t v161 = &v132[v159];
  unsigned int v162 = v335(&v131[v159], 1, v344);
  unsigned int v163 = v335(v161, 1, v344);
  if (v162)
  {
    uint64_t v164 = v347;
    if (!v163)
    {
      (*(void (**)(char *, char *, uint64_t))(v342 + 16))(v160, v161, v344);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v342 + 56))(v160, 0, 1, v344);
      goto LABEL_68;
    }
    goto LABEL_67;
  }
  uint64_t v164 = v347;
  if (v163)
  {
    (*(void (**)(char *, uint64_t))(v342 + 8))(v160, v344);
LABEL_67:
    uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v160, v161, *(void *)(*(void *)(v165 - 8) + 64));
    goto LABEL_68;
  }
  (*(void (**)(char *, char *, uint64_t))(v342 + 24))(v160, v161, v344);
LABEL_68:
  *(void *)&v131[v133[15]] = *(void *)&v132[v133[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v166 = v133[16];
  uint64_t v167 = &v131[v166];
  int v168 = &v132[v166];
  *(void *)uint64_t v167 = *(void *)v168;
  *((void *)v167 + 1) = *((void *)v168 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v131[v133[17]] = v132[v133[17]];
  v131[v133[18]] = v132[v133[18]];
  v131[v133[19]] = v132[v133[19]];
  v131[v133[20]] = v132[v133[20]];
  uint64_t v169 = v133[21];
  uint64_t v170 = &v131[v169];
  uint64_t v171 = &v132[v169];
  *(void *)uint64_t v170 = *(void *)v171;
  *((void *)v170 + 1) = *((void *)v171 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v131[v133[22]] = v132[v133[22]];
  v131[v133[23]] = v132[v133[23]];
  v131[v133[24]] = v132[v133[24]];
  uint64_t v172 = v133[25];
  uint64_t v173 = &v131[v172];
  uint64_t v174 = &v132[v172];
  int v175 = v345(&v131[v172], 1, v164);
  int v176 = v345(v174, 1, v164);
  if (v175)
  {
    if (!v176)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v173, v174, v164);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v173, 0, 1, v164);
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if (v176)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v173, v164);
LABEL_73:
    uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v173, v174, *(void *)(*(void *)(v177 - 8) + 64));
    goto LABEL_74;
  }
  ((void (*)(char *, char *, uint64_t))v346)(v173, v174, v164);
LABEL_74:
  uint64_t v178 = v133[26];
  uint64_t v179 = &v131[v178];
  uint64_t v180 = &v132[v178];
  int v181 = v345(&v131[v178], 1, v164);
  int v182 = v345(v180, 1, v164);
  if (v181)
  {
    if (!v182)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v179, v180, v164);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v179, 0, 1, v164);
      goto LABEL_80;
    }
    goto LABEL_79;
  }
  if (v182)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v179, v164);
LABEL_79:
    uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v179, v180, *(void *)(*(void *)(v183 - 8) + 64));
    goto LABEL_80;
  }
  ((void (*)(char *, char *, uint64_t))v346)(v179, v180, v164);
LABEL_80:
  *(void *)&v131[v133[27]] = *(void *)&v132[v133[27]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v131[v133[28]] = *(void *)&v132[v133[28]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v184 = v133[29];
  int v185 = &v131[v184];
  uint64_t v186 = &v132[v184];
  *(void *)&v131[v184] = *(void *)&v132[v184];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v185 + 1) = *((void *)v186 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v187 = v133[30];
  uint64_t v188 = &v132[v187];
  uint64_t v189 = &v131[v187];
  int v190 = v331();
  int v191 = ((uint64_t (*)(char *, uint64_t, uint64_t))v331)(v188, 1, v337);
  if (v190)
  {
    if (!v191)
    {
      uint64_t v192 = v164;
      v193 = *(void (**)(char *, char *, uint64_t))(v343 + 16);
      uint64_t v194 = v189;
      v193(v189, v188, v192);
      uint64_t v195 = *(int *)(v337 + 20);
      uint64_t v196 = &v189[v195];
      uint64_t v197 = &v188[v195];
      uint64_t v198 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v199 = swift_getEnumCaseMultiPayload();
      if (v199 == 2)
      {
        *(void *)uint64_t v196 = *(void *)v197;
        *((void *)v196 + 1) = *((void *)v197 + 1);
        uint64_t v234 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v235 = v234[5];
        v334 = &v196[v235];
        unint64_t v236 = &v197[v235];
        swift_bridgeObjectRetain();
        v332 = v236;
        if (v335(v236, 1, v344))
        {
LABEL_101:
          uint64_t v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v334, v332, *(void *)(*(void *)(v238 - 8) + 64));
LABEL_109:
          uint64_t v164 = v347;
          uint64_t v245 = v234[6];
          uint64_t v246 = &v196[v245];
          uint64_t v247 = &v197[v245];
          *(void *)uint64_t v246 = *(void *)v247;
          *((void *)v246 + 1) = *((void *)v247 + 1);
          uint64_t v248 = v234[7];
          uint64_t v249 = &v196[v248];
          uint64_t v250 = &v197[v248];
          *(void *)uint64_t v249 = *(void *)v250;
          *((void *)v249 + 1) = *((void *)v250 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v196[*(int *)(v251 + 48)] = v197[*(int *)(v251 + 48)];
          goto LABEL_110;
        }
      }
      else
      {
        if (v199 != 1)
        {
          if (v199)
          {
            memcpy(v196, v197, *(void *)(*(void *)(v198 - 8) + 64));
            uint64_t v164 = v347;
LABEL_111:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v328 + 56))(v194, 0, 1, v337);
            goto LABEL_112;
          }
          v193(v196, v197, v347);
          uint64_t v164 = v347;
          uint64_t v200 = (int *)type metadata accessor for StaticHH2Update(0);
          v196[v200[5]] = v197[v200[5]];
          uint64_t v201 = v200[6];
          uint64_t v202 = &v196[v201];
          uint64_t v203 = &v197[v201];
          *(void *)uint64_t v202 = *(void *)v203;
          *((void *)v202 + 1) = *((void *)v203 + 1);
          uint64_t v204 = v200[7];
          uint64_t v205 = &v196[v204];
          uint64_t v206 = &v197[v204];
          char v207 = v206[8];
          *(void *)uint64_t v205 = *(void *)v206;
          v205[8] = v207;
          swift_bridgeObjectRetain();
LABEL_110:
          swift_storeEnumTagMultiPayload();
          goto LABEL_111;
        }
        *(void *)uint64_t v196 = *(void *)v197;
        *((void *)v196 + 1) = *((void *)v197 + 1);
        uint64_t v234 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v237 = v234[5];
        v334 = &v196[v237];
        unint64_t v236 = &v197[v237];
        swift_bridgeObjectRetain();
        v332 = v236;
        if (v335(v236, 1, v344)) {
          goto LABEL_101;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v342 + 16))(v334, v236, v344);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v342 + 56))(v334, 0, 1, v344);
      goto LABEL_109;
    }
LABEL_88:
    uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v189, v188, *(void *)(*(void *)(v208 - 8) + 64));
    goto LABEL_112;
  }
  if (v191)
  {
    sub_251D310C4((uint64_t)v189, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_88;
  }
  ((void (*)(char *, char *, uint64_t))v346)(v189, v188, v164);
  if (a1 == v341) {
    goto LABEL_112;
  }
  uint64_t v221 = *(int *)(v337 + 20);
  uint64_t v222 = &v189[v221];
  uint64_t v223 = &v188[v221];
  sub_251D310C4((uint64_t)&v189[v221], type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v224 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v225 = swift_getEnumCaseMultiPayload();
  if (v225 == 2)
  {
    *(void *)uint64_t v222 = *(void *)v223;
    *((void *)v222 + 1) = *((void *)v223 + 1);
    uint64_t v239 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v240 = v239[5];
    uint64_t v241 = &v222[v240];
    unint64_t v242 = &v223[v240];
    swift_bridgeObjectRetain();
    if (v335(v242, 1, v344)) {
      goto LABEL_106;
    }
    goto LABEL_130;
  }
  if (v225 == 1)
  {
    *(void *)uint64_t v222 = *(void *)v223;
    *((void *)v222 + 1) = *((void *)v223 + 1);
    uint64_t v239 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v243 = v239[5];
    uint64_t v241 = &v222[v243];
    unint64_t v242 = &v223[v243];
    swift_bridgeObjectRetain();
    if (v335(v242, 1, v344))
    {
LABEL_106:
      uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v241, v242, *(void *)(*(void *)(v244 - 8) + 64));
LABEL_131:
      uint64_t v320 = v239[6];
      int v321 = &v222[v320];
      v322 = &v223[v320];
      *(void *)int v321 = *(void *)v322;
      *((void *)v321 + 1) = *((void *)v322 + 1);
      uint64_t v323 = v239[7];
      v324 = &v222[v323];
      v325 = &v223[v323];
      *(void *)v324 = *(void *)v325;
      *((void *)v324 + 1) = *((void *)v325 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v326 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v222[*(int *)(v326 + 48)] = v223[*(int *)(v326 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v164 = v347;
      goto LABEL_112;
    }
LABEL_130:
    (*(void (**)(char *, char *, uint64_t))(v342 + 16))(v241, v242, v344);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v342 + 56))(v241, 0, 1, v344);
    goto LABEL_131;
  }
  if (v225)
  {
    memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
    uint64_t v164 = v347;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v343 + 16))(v222, v223, v347);
    char v226 = (int *)type metadata accessor for StaticHH2Update(0);
    v222[v226[5]] = v223[v226[5]];
    uint64_t v227 = v226[6];
    uint64_t v228 = &v222[v227];
    uint64_t v229 = &v223[v227];
    *(void *)uint64_t v228 = *(void *)v229;
    *((void *)v228 + 1) = *((void *)v229 + 1);
    uint64_t v230 = v226[7];
    uint64_t v231 = &v222[v230];
    uint64_t v232 = &v223[v230];
    char v233 = v232[8];
    *(void *)uint64_t v231 = *(void *)v232;
    v231[8] = v233;
    swift_bridgeObjectRetain();
    uint64_t v164 = v347;
    swift_storeEnumTagMultiPayload();
  }
LABEL_112:
  v131[v133[31]] = v132[v133[31]];
  *(void *)&v131[v133[32]] = *(void *)&v132[v133[32]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v252 = v133[33];
  uint64_t v253 = &v131[v252];
  uint64_t v254 = &v132[v252];
  int v255 = v345(&v131[v252], 1, v164);
  int v256 = v345(v254, 1, v164);
  if (v255)
  {
    uint64_t v257 = v341;
    if (!v256)
    {
      (*(void (**)(char *, char *, uint64_t))(v343 + 16))(v253, v254, v164);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v343 + 56))(v253, 0, 1, v164);
      goto LABEL_118;
    }
    goto LABEL_117;
  }
  uint64_t v257 = v341;
  if (v256)
  {
    (*(void (**)(char *, uint64_t))(v343 + 8))(v253, v164);
LABEL_117:
    uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v253, v254, *(void *)(*(void *)(v258 - 8) + 64));
    goto LABEL_118;
  }
  ((void (*)(char *, char *, uint64_t))v346)(v253, v254, v164);
LABEL_118:
  uint64_t v259 = v133[34];
  uint64_t v260 = &v131[v259];
  uint64_t v261 = &v132[v259];
  __int16 v262 = *(_WORD *)v261;
  v260[2] = v261[2];
  *(_WORD *)uint64_t v260 = v262;
  uint64_t v263 = v133[35];
  v264 = &v131[v263];
  v265 = &v132[v263];
  uint64_t v266 = *(void *)v265;
  *(_DWORD *)(v264 + 7) = *(_DWORD *)(v265 + 7);
  *(void *)v264 = v266;
  uint64_t v267 = *(int *)(a3 + 24);
  uint64_t v268 = &__dstb[v267];
  uint64_t v269 = &v257[v267];
  ((void (*)(char *, char *, uint64_t))v346)(&__dstb[v267], &v257[v267], v164);
  v270 = (int *)type metadata accessor for StaticCharacteristic();
  v268[v270[5]] = v269[v270[5]];
  uint64_t v271 = v270[6];
  uint64_t v272 = &v268[v271];
  v273 = &v269[v271];
  uint64_t v274 = *(void *)v273;
  unint64_t v275 = *((void *)v273 + 1);
  char v276 = v273[16];
  sub_251B2ED7C(*(void *)v273, v275, v276);
  uint64_t v277 = *(void *)v272;
  unint64_t v278 = *((void *)v272 + 1);
  *(void *)uint64_t v272 = v274;
  *((void *)v272 + 1) = v275;
  char v279 = v272[16];
  v272[16] = v276;
  sub_251A580B4(v277, v278, v279);
  (*(void (**)(char *, char *, uint64_t))(v342 + 24))(&v268[v270[7]], &v269[v270[7]], v344);
  uint64_t v280 = v270[8];
  uint64_t v281 = &v268[v280];
  uint64_t v282 = &v269[v280];
  uint64_t v283 = *(void *)v282;
  uint64_t v284 = *((void *)v282 + 1);
  uint64_t v285 = *((void *)v282 + 2);
  LOBYTE(v272) = v282[24];
  sub_251A1A550(*(void *)v282, v284, v285, (char)v272);
  uint64_t v286 = *(void *)v281;
  uint64_t v287 = *((void *)v281 + 1);
  uint64_t v288 = *((void *)v281 + 2);
  *(void *)uint64_t v281 = v283;
  *((void *)v281 + 1) = v284;
  *((void *)v281 + 2) = v285;
  char v289 = v281[24];
  v281[24] = (char)v272;
  sub_251A1A5A4(v286, v287, v288, v289);
  *(void *)&v268[v270[9]] = *(void *)&v269[v270[9]];
  ((void (*)(char *, char *, uint64_t))v346)(&v268[v270[10]], &v269[v270[10]], v347);
  uint64_t v290 = v270[11];
  uint64_t v291 = (uint64_t)&v268[v290];
  uint64_t v292 = (uint64_t *)&v269[v290];
  unint64_t v293 = *(void *)&v268[v290 + 24];
  uint64_t v294 = *(void *)&v269[v290 + 24];
  unint64_t v295 = v294 & 0xFFFFFFFFFFFFFF00;
  if (v293 >> 8 == 0xFFFFFFFF)
  {
    if (v295 == 0xFFFFFFFF00)
    {
      long long v296 = *(_OWORD *)v292;
      long long v297 = *((_OWORD *)v292 + 1);
      *(void *)(v291 + 32) = v292[4];
      *(_OWORD *)uint64_t v291 = v296;
      *(_OWORD *)(v291 + 16) = v297;
    }
    else
    {
      uint64_t v300 = *v292;
      uint64_t v301 = v292[1];
      uint64_t v302 = v292[2];
      uint64_t v303 = v292[4];
      sub_251A11E50(v300, v301, v302, v294);
      *(void *)uint64_t v291 = v300;
      *(void *)(v291 + 8) = v301;
      *(void *)(v291 + 16) = v302;
      *(void *)(v291 + 24) = v294;
      *(void *)(v291 + 32) = v303;
    }
  }
  else if (v295 == 0xFFFFFFFF00)
  {
    sub_251D31124(v291);
    uint64_t v298 = v292[4];
    long long v299 = *((_OWORD *)v292 + 1);
    *(_OWORD *)uint64_t v291 = *(_OWORD *)v292;
    *(_OWORD *)(v291 + 16) = v299;
    *(void *)(v291 + 32) = v298;
  }
  else
  {
    uint64_t v304 = *v292;
    uint64_t v305 = v292[1];
    uint64_t v306 = v292[2];
    uint64_t v307 = v292[4];
    sub_251A11E50(v304, v305, v306, v294);
    uint64_t v308 = *(void *)v291;
    uint64_t v309 = *(void *)(v291 + 8);
    uint64_t v310 = *(void *)(v291 + 16);
    uint64_t v311 = *(void *)(v291 + 24);
    *(void *)uint64_t v291 = v304;
    *(void *)(v291 + 8) = v305;
    *(void *)(v291 + 16) = v306;
    *(void *)(v291 + 24) = v294;
    *(void *)(v291 + 32) = v307;
    sub_251A11E74(v308, v309, v310, v311);
  }
  return __dstb;
}

uint64_t sub_251D310C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D31124(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for StaticAccessory(0);
  *(_OWORD *)(a1 + v8[5]) = *(_OWORD *)(a2 + v8[5]);
  uint64_t v9 = v8[6];
  uint64_t v141 = a1;
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  __dst = (void *)v5;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7((uint64_t)v10, (uint64_t)v11, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v13 = v8[7];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v129 = *(unsigned int (**)(char *, uint64_t, int *))(v17 + 48);
  uint64_t v124 = v17;
  uint64_t v126 = v16;
  if (v129(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    uint64_t v19 = v5;
  }
  else
  {
    uint64_t v19 = v5;
    v7((uint64_t)v14, (uint64_t)v15, v5);
    *(_OWORD *)&v14[v16[5]] = *(_OWORD *)&v15[v16[5]];
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    *(_OWORD *)&v14[v16[8]] = *(_OWORD *)&v15[v16[8]];
    v14[v16[9]] = v15[v16[9]];
    v14[v16[10]] = v15[v16[10]];
    v14[v16[11]] = v15[v16[11]];
    v14[v16[12]] = v15[v16[12]];
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v20 = v8[8];
  int v21 = (void *)(v141 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_251F34D20();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v132 = *(unsigned int (**)(void))(v24 + 48);
  uint64_t v138 = v24;
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v132)(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = v8[9];
  uint64_t v27 = v141 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(unsigned char *)(v141 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  v7(v141 + v8[11], a2 + v8[11], v19);
  *(void *)(v141 + v8[12]) = *(void *)(a2 + v8[12]);
  *(_OWORD *)(v141 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
  *(unsigned char *)(v141 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  *(unsigned char *)(v141 + v8[15]) = *(unsigned char *)(a2 + v8[15]);
  *(unsigned char *)(v141 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(v141 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(v141 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  *(void *)(v141 + v8[19]) = *(void *)(a2 + v8[19]);
  *(void *)(v141 + v8[20]) = *(void *)(a2 + v8[20]);
  uint64_t v29 = v8[21];
  uint64_t v30 = (void *)(v141 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v140 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v131 = v6;
  if (v140(a2 + v29, 1, v19))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v30, (uint64_t)v31, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v30, 0, 1, v19);
  }
  *(_WORD *)(v141 + v8[22]) = *(_WORD *)(a2 + v8[22]);
  *(_OWORD *)(v141 + v8[23]) = *(_OWORD *)(a2 + v8[23]);
  *(void *)(v141 + v8[24]) = *(void *)(a2 + v8[24]);
  *(unsigned char *)(v141 + v8[25]) = *(unsigned char *)(a2 + v8[25]);
  *(unsigned char *)(v141 + v8[26]) = *(unsigned char *)(a2 + v8[26]);
  *(unsigned char *)(v141 + v8[27]) = *(unsigned char *)(a2 + v8[27]);
  uint64_t v33 = v8[28];
  uint64_t v34 = (char *)(v141 + v33);
  uint64_t v35 = (char *)(a2 + v33);
  uint64_t v36 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v125 = *(void *)(v36 - 8);
  uint64_t v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48);
  uint64_t v139 = v7;
  uint64_t v137 = v23;
  uint64_t v133 = v36;
  if (v127(v35, 1, v36))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_28;
  }
  v7((uint64_t)v34, (uint64_t)v35, v19);
  uint64_t v38 = *(int *)(v36 + 20);
  uint64_t v39 = &v34[v38];
  uint64_t v40 = &v35[v38];
  uint64_t v123 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v46 = updated[5];
    uint64_t v47 = &v39[v46];
    uint64_t v48 = &v40[v46];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v132)(&v40[v46], 1, v23)) {
      goto LABEL_22;
    }
    goto LABEL_24;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v49 = updated[5];
    uint64_t v47 = &v39[v49];
    uint64_t v48 = &v40[v49];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v132)(&v40[v49], 1, v23))
    {
LABEL_22:
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
LABEL_25:
      *(_OWORD *)&v39[updated[6]] = *(_OWORD *)&v40[updated[6]];
      *(_OWORD *)&v39[updated[7]] = *(_OWORD *)&v40[updated[7]];
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v39[*(int *)(v51 + 48)] = v40[*(int *)(v51 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_26;
    }
LABEL_24:
    (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v47, v48, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v47, 0, 1, v23);
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(v39, v40, *(void *)(*(void *)(v123 - 8) + 64));
LABEL_26:
    uint64_t v7 = v139;
    goto LABEL_27;
  }
  v139((uint64_t)v39, (uint64_t)v40, v19);
  unsigned int v42 = (int *)type metadata accessor for StaticHH2Update(0);
  v39[v42[5]] = v40[v42[5]];
  *(_OWORD *)&v39[v42[6]] = *(_OWORD *)&v40[v42[6]];
  uint64_t v43 = v42[7];
  uint64_t v44 = &v39[v43];
  uint64_t v45 = &v40[v43];
  v44[8] = v45[8];
  *(void *)uint64_t v44 = *(void *)v45;
  uint64_t v7 = v139;
  swift_storeEnumTagMultiPayload();
LABEL_27:
  (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v34, 0, 1, v36);
LABEL_28:
  *(unsigned char *)(v141 + v8[29]) = *(unsigned char *)(a2 + v8[29]);
  *(unsigned char *)(v141 + v8[30]) = *(unsigned char *)(a2 + v8[30]);
  *(void *)(v141 + v8[31]) = *(void *)(a2 + v8[31]);
  uint64_t v52 = *(int *)(a3 + 20);
  uint64_t v53 = v141 + v52;
  uint64_t v54 = a2 + v52;
  v7(v141 + v52, a2 + v52, v19);
  uint64_t v55 = v7;
  int v56 = (int *)type metadata accessor for StaticService();
  *(_OWORD *)(v53 + v56[5]) = *(_OWORD *)(v54 + v56[5]);
  *(unsigned char *)(v53 + v56[6]) = *(unsigned char *)(v54 + v56[6]);
  *(unsigned char *)(v53 + v56[7]) = *(unsigned char *)(v54 + v56[7]);
  *(unsigned char *)(v53 + v56[8]) = *(unsigned char *)(v54 + v56[8]);
  *(unsigned char *)(v53 + v56[9]) = *(unsigned char *)(v54 + v56[9]);
  *(unsigned char *)(v53 + v56[10]) = *(unsigned char *)(v54 + v56[10]);
  v55(v53 + v56[11], v54 + v56[11], v19);
  uint64_t v57 = v56[12];
  uint64_t v58 = v53 + v57;
  uint64_t v59 = v54 + v57;
  *(void *)uint64_t v58 = *(void *)v59;
  *(unsigned char *)(v58 + 8) = *(unsigned char *)(v59 + 8);
  uint64_t v60 = v56[13];
  uint64_t v61 = (char *)(v53 + v60);
  uint64_t v62 = (char *)(v54 + v60);
  if (v129((char *)(v54 + v60), 1, v126))
  {
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    v55((uint64_t)v61, (uint64_t)v62, v19);
    *(_OWORD *)&v61[v126[5]] = *(_OWORD *)&v62[v126[5]];
    *(_OWORD *)&v61[v126[6]] = *(_OWORD *)&v62[v126[6]];
    *(_OWORD *)&v61[v126[7]] = *(_OWORD *)&v62[v126[7]];
    *(_OWORD *)&v61[v126[8]] = *(_OWORD *)&v62[v126[8]];
    v61[v126[9]] = v62[v126[9]];
    v61[v126[10]] = v62[v126[10]];
    v61[v126[11]] = v62[v126[11]];
    v61[v126[12]] = v62[v126[12]];
    (*(void (**)(char *, void, uint64_t, int *))(v124 + 56))(v61, 0, 1, v126);
  }
  uint64_t v64 = v56[14];
  uint64_t v65 = (void *)(v53 + v64);
  uint64_t v66 = (const void *)(v54 + v64);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v132)(v54 + v64, 1, v23))
  {
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v138 + 32))(v65, v66, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v65, 0, 1, v23);
  }
  uint64_t v68 = __dst;
  *(void *)(v53 + v56[15]) = *(void *)(v54 + v56[15]);
  *(_OWORD *)(v53 + v56[16]) = *(_OWORD *)(v54 + v56[16]);
  *(unsigned char *)(v53 + v56[17]) = *(unsigned char *)(v54 + v56[17]);
  *(unsigned char *)(v53 + v56[18]) = *(unsigned char *)(v54 + v56[18]);
  *(unsigned char *)(v53 + v56[19]) = *(unsigned char *)(v54 + v56[19]);
  *(unsigned char *)(v53 + v56[20]) = *(unsigned char *)(v54 + v56[20]);
  *(_OWORD *)(v53 + v56[21]) = *(_OWORD *)(v54 + v56[21]);
  *(unsigned char *)(v53 + v56[22]) = *(unsigned char *)(v54 + v56[22]);
  *(unsigned char *)(v53 + v56[23]) = *(unsigned char *)(v54 + v56[23]);
  *(unsigned char *)(v53 + v56[24]) = *(unsigned char *)(v54 + v56[24]);
  uint64_t v69 = v56[25];
  uint64_t v70 = (void *)(v53 + v69);
  uint64_t v71 = (const void *)(v54 + v69);
  if (v140(v54 + v69, 1, (uint64_t)__dst))
  {
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    v139((uint64_t)v70, (uint64_t)v71, (uint64_t)__dst);
    (*(void (**)(void *, void, uint64_t, void *))(v131 + 56))(v70, 0, 1, __dst);
  }
  uint64_t v73 = v56[26];
  uint64_t v74 = (void *)(v53 + v73);
  uint64_t v75 = (const void *)(v54 + v73);
  if (v140(v54 + v73, 1, (uint64_t)__dst))
  {
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    v139((uint64_t)v74, (uint64_t)v75, (uint64_t)__dst);
    (*(void (**)(void *, void, uint64_t, void *))(v131 + 56))(v74, 0, 1, __dst);
  }
  *(void *)(v53 + v56[27]) = *(void *)(v54 + v56[27]);
  *(void *)(v53 + v56[28]) = *(void *)(v54 + v56[28]);
  *(_OWORD *)(v53 + v56[29]) = *(_OWORD *)(v54 + v56[29]);
  uint64_t v77 = v56[30];
  uint64_t v78 = (char *)(v53 + v77);
  uint64_t v79 = (char *)(v54 + v77);
  if (v127((char *)(v54 + v77), 1, v133))
  {
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_55;
  }
  v139((uint64_t)v78, (uint64_t)v79, (uint64_t)__dst);
  uint64_t v81 = *(int *)(v133 + 20);
  int v82 = &v78[v81];
  uint64_t v83 = &v79[v81];
  uint64_t v84 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v85 = swift_getEnumCaseMultiPayload();
  if (v85 != 2)
  {
    if (v85 != 1)
    {
      if (v85)
      {
        memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        v139((uint64_t)v82, (uint64_t)v83, (uint64_t)__dst);
        uint64_t v86 = (int *)type metadata accessor for StaticHH2Update(0);
        v82[v86[5]] = v83[v86[5]];
        *(_OWORD *)&v82[v86[6]] = *(_OWORD *)&v83[v86[6]];
        uint64_t v87 = v86[7];
        uint64_t v88 = &v82[v87];
        uint64_t v89 = &v83[v87];
        v88[8] = v89[8];
        *(void *)uint64_t v88 = *(void *)v89;
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v93 = v133;
      goto LABEL_54;
    }
    *(_OWORD *)int v82 = *(_OWORD *)v83;
    uint64_t v130 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v91 = v130[5];
    __dsta = &v82[v91];
    __src = &v83[v91];
    if (v132()) {
      goto LABEL_49;
    }
LABEL_52:
    (*(void (**)(char *, char *, uint64_t))(v138 + 32))(__dsta, __src, v137);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(__dsta, 0, 1, v137);
    goto LABEL_53;
  }
  *(_OWORD *)int v82 = *(_OWORD *)v83;
  uint64_t v130 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v90 = v130[5];
  __dsta = &v82[v90];
  __src = &v83[v90];
  if (!v132()) {
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  memcpy(__dsta, __src, *(void *)(*(void *)(v92 - 8) + 64));
LABEL_53:
  uint64_t v93 = v133;
  *(_OWORD *)&v82[v130[6]] = *(_OWORD *)&v83[v130[6]];
  *(_OWORD *)&v82[v130[7]] = *(_OWORD *)&v83[v130[7]];
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  v82[*(int *)(v94 + 48)] = v83[*(int *)(v94 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_54:
  (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v78, 0, 1, v93);
LABEL_55:
  *(unsigned char *)(v53 + v56[31]) = *(unsigned char *)(v54 + v56[31]);
  *(void *)(v53 + v56[32]) = *(void *)(v54 + v56[32]);
  uint64_t v95 = v56[33];
  char v96 = (void *)(v53 + v95);
  size_t v97 = (const void *)(v54 + v95);
  if (v140(v54 + v95, 1, (uint64_t)v68))
  {
    uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
    uint64_t v99 = (void (*)(uint64_t, uint64_t, void *))v139;
    uint64_t v100 = v68;
  }
  else
  {
    uint64_t v99 = (void (*)(uint64_t, uint64_t, void *))v139;
    uint64_t v100 = v68;
    v139((uint64_t)v96, (uint64_t)v97, (uint64_t)v68);
    (*(void (**)(void *, void, uint64_t, void *))(v131 + 56))(v96, 0, 1, v68);
  }
  uint64_t v101 = v56[34];
  uint64_t v102 = v53 + v101;
  uint64_t v103 = v54 + v101;
  *(_WORD *)uint64_t v102 = *(_WORD *)v103;
  *(unsigned char *)(v102 + 2) = *(unsigned char *)(v103 + 2);
  uint64_t v104 = v56[35];
  uint64_t v105 = v53 + v104;
  uint64_t v106 = v54 + v104;
  *(_DWORD *)(v105 + 7) = *(_DWORD *)(v106 + 7);
  *(void *)uint64_t v105 = *(void *)v106;
  uint64_t v107 = *(int *)(a3 + 24);
  uint64_t v108 = v141 + v107;
  uint64_t v109 = a2 + v107;
  v99(v141 + v107, v109, v100);
  uint64_t v110 = (int *)type metadata accessor for StaticCharacteristic();
  *(unsigned char *)(v108 + v110[5]) = *(unsigned char *)(v109 + v110[5]);
  uint64_t v111 = v110[6];
  uint64_t v112 = v108 + v111;
  uint64_t v113 = v109 + v111;
  *(unsigned char *)(v112 + 16) = *(unsigned char *)(v113 + 16);
  *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 32))(v108 + v110[7], v109 + v110[7], v137);
  uint64_t v114 = v110[8];
  uint64_t v115 = (_OWORD *)(v108 + v114);
  uint64_t v116 = (_OWORD *)(v109 + v114);
  _OWORD *v115 = *v116;
  *(_OWORD *)((char *)v115 + 9) = *(_OWORD *)((char *)v116 + 9);
  *(void *)(v108 + v110[9]) = *(void *)(v109 + v110[9]);
  v99(v108 + v110[10], v109 + v110[10], v100);
  uint64_t v117 = v110[11];
  uint64_t v118 = v108 + v117;
  uint64_t v119 = v109 + v117;
  long long v120 = *(_OWORD *)(v119 + 16);
  *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
  *(_OWORD *)(v118 + 16) = v120;
  *(void *)(v118 + 32) = *(void *)(v119 + 32);
  return v141;
}

uint64_t assignWithTake for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_251F34DA0();
  uint64_t v296 = *(void *)(v5 - 8);
  unint64_t v295 = *(void (**)(uint64_t, uint64_t, uint64_t))(v296 + 40);
  v295(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v12 = v6[6];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_251D310C4(a1 + v12, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v15 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, const void *, uint64_t))(v296 + 32))(v13, v14, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v16 = v6[7];
  uint64_t v17 = (unsigned char *)(a1 + v16);
  uint64_t v287 = a2;
  uint64_t v18 = (unsigned char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v20 = *((void *)v19 - 1);
  int v21 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v20 + 48);
  int v22 = v21((uint64_t)v17, 1, v19);
  int v23 = v21((uint64_t)v18, 1, v19);
  uint64_t v297 = v5;
  uint64_t v275 = v20;
  unint64_t v278 = v21;
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v296 + 32))(v17, v18, v5);
      *(_OWORD *)&v17[v19[5]] = *(_OWORD *)&v18[v19[5]];
      *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
      *(_OWORD *)&v17[v19[7]] = *(_OWORD *)&v18[v19[7]];
      *(_OWORD *)&v17[v19[8]] = *(_OWORD *)&v18[v19[8]];
      v17[v19[9]] = v18[v19[9]];
      v17[v19[10]] = v18[v19[10]];
      v17[v19[11]] = v18[v19[11]];
      v17[v19[12]] = v18[v19[12]];
      (*(void (**)(unsigned char *, void, uint64_t))(v20 + 56))(v17, 0, 1);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v23)
  {
    sub_251D310C4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_10:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_11;
  }
  v295((uint64_t)v17, (uint64_t)v18, v5);
  uint64_t v73 = v19[5];
  uint64_t v74 = &v17[v73];
  uint64_t v75 = (uint64_t *)&v18[v73];
  uint64_t v77 = *v75;
  uint64_t v76 = v75[1];
  void *v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease();
  uint64_t v78 = v19[6];
  uint64_t v79 = &v17[v78];
  uint64_t v80 = (uint64_t *)&v18[v78];
  uint64_t v82 = *v80;
  uint64_t v81 = v80[1];
  *uint64_t v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  uint64_t v83 = v19[7];
  uint64_t v84 = &v17[v83];
  int v85 = (uint64_t *)&v18[v83];
  uint64_t v87 = *v85;
  uint64_t v86 = v85[1];
  *uint64_t v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  uint64_t v88 = v19[8];
  uint64_t v89 = &v17[v88];
  uint64_t v90 = (uint64_t *)&v18[v88];
  uint64_t v92 = *v90;
  uint64_t v91 = v90[1];
  *uint64_t v89 = v92;
  v89[1] = v91;
  swift_bridgeObjectRelease();
  v17[v19[9]] = v18[v19[9]];
  v17[v19[10]] = v18[v19[10]];
  v17[v19[11]] = v18[v19[11]];
  v17[v19[12]] = v18[v19[12]];
LABEL_11:
  uint64_t v25 = v6[8];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(v287 + v25);
  uint64_t v28 = sub_251F34D20();
  uint64_t v292 = *(void *)(v28 - 8);
  uint64_t v29 = *(unsigned int (**)(void))(v292 + 48);
  unsigned int v30 = ((uint64_t (*)(void *, uint64_t, uint64_t))v29)(v26, 1, v28);
  uint64_t v293 = v28;
  uint64_t v284 = v29;
  unsigned int v31 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v29)(v27, 1, v28);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, const void *, uint64_t))(v292 + 32))(v26, v27, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v292 + 56))(v26, 0, 1, v28);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v292 + 8))(v26, v28);
LABEL_16:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v26, v27, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, const void *, uint64_t))(v292 + 40))(v26, v27, v28);
LABEL_17:
  uint64_t v33 = v6[9];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = v287 + v33;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(v287 + v6[10]);
  v295(a1 + v6[11], v287 + v6[11], v5);
  *(void *)(a1 + v6[12]) = *(void *)(v287 + v6[12]);
  swift_bridgeObjectRelease();
  uint64_t v36 = v6[13];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(v287 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(v287 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(v287 + v6[15]);
  *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(v287 + v6[16]);
  *(unsigned char *)(a1 + v6[17]) = *(unsigned char *)(v287 + v6[17]);
  *(unsigned char *)(a1 + v6[18]) = *(unsigned char *)(v287 + v6[18]);
  *(void *)(a1 + v6[19]) = *(void *)(v287 + v6[19]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[20]) = *(void *)(v287 + v6[20]);
  swift_bridgeObjectRelease();
  uint64_t v41 = v6[21];
  unsigned int v42 = (void *)(a1 + v41);
  uint64_t v43 = (const void *)(v287 + v41);
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v296 + 48);
  int v45 = v44(a1 + v41, 1, v5);
  uint64_t v294 = v44;
  int v46 = v44((uint64_t)v43, 1, v5);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(v296 + 32))(v42, v43, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v296 + 56))(v42, 0, 1, v5);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v296 + 8))(v42, v5);
LABEL_22:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_23;
  }
  v295((uint64_t)v42, (uint64_t)v43, v5);
LABEL_23:
  *(_WORD *)(a1 + v6[22]) = *(_WORD *)(v287 + v6[22]);
  uint64_t v48 = v6[23];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(v287 + v48);
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *uint64_t v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[24]) = *(void *)(v287 + v6[24]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[25]) = *(unsigned char *)(v287 + v6[25]);
  *(unsigned char *)(a1 + v6[26]) = *(unsigned char *)(v287 + v6[26]);
  *(unsigned char *)(a1 + v6[27]) = *(unsigned char *)(v287 + v6[27]);
  uint64_t v53 = v6[28];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = (char *)(v287 + v53);
  uint64_t v56 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v276 = *(void *)(v56 - 8);
  uint64_t v57 = *(uint64_t (**)(void))(v276 + 48);
  int v58 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v57)(v54, 1, v56);
  char v289 = (int *)v56;
  uint64_t v280 = v57;
  int v59 = ((uint64_t (*)(char *, uint64_t, uint64_t))v57)(v55, 1, v56);
  if (v58)
  {
    if (!v59)
    {
      uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v296 + 32);
      v60(v54, v55, v297);
      uint64_t v61 = v289[5];
      uint64_t v62 = (_OWORD *)(v54 + v61);
      uint64_t v63 = &v55[v61];
      uint64_t v64 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *uint64_t v62 = *(_OWORD *)v63;
        uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v103 = *(int *)(updated + 20);
        uint64_t v272 = updated;
        __dst = (char *)v62 + v103;
        uint64_t v104 = &v63[v103];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v284)(&v63[v103], 1, v293))
        {
LABEL_44:
          uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dst, v104, *(void *)(*(void *)(v107 - 8) + 64));
LABEL_52:
          *(_OWORD *)((char *)v62 + *(int *)(v272 + 24)) = *(_OWORD *)&v63[*(int *)(v272 + 24)];
          *(_OWORD *)((char *)v62 + *(int *)(v272 + 28)) = *(_OWORD *)&v63[*(int *)(v272 + 28)];
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v62 + *(int *)(v113 + 48)) = v63[*(int *)(v113 + 48)];
          goto LABEL_53;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
LABEL_54:
            (*(void (**)(uint64_t, void, uint64_t, int *))(v276 + 56))(v54, 0, 1, v289);
            goto LABEL_55;
          }
          v60((uint64_t)v62, v63, v297);
          uint64_t v66 = (int *)type metadata accessor for StaticHH2Update(0);
          *((unsigned char *)v62 + v66[5]) = v63[v66[5]];
          *(_OWORD *)((char *)v62 + v66[6]) = *(_OWORD *)&v63[v66[6]];
          uint64_t v67 = v66[7];
          uint64_t v68 = (char *)v62 + v67;
          uint64_t v69 = &v63[v67];
          v68[8] = v69[8];
          *(void *)uint64_t v68 = *(void *)v69;
LABEL_53:
          swift_storeEnumTagMultiPayload();
          goto LABEL_54;
        }
        *uint64_t v62 = *(_OWORD *)v63;
        uint64_t v105 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v106 = *(int *)(v105 + 20);
        uint64_t v272 = v105;
        __dst = (char *)v62 + v106;
        uint64_t v104 = &v63[v106];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v284)(&v63[v106], 1, v293)) {
          goto LABEL_44;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v292 + 32))(__dst, v104, v293);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v292 + 56))(__dst, 0, 1, v293);
      goto LABEL_52;
    }
    goto LABEL_31;
  }
  if (v59)
  {
    sub_251D310C4(v54, type metadata accessor for StaticSoftwareUpdate);
LABEL_31:
    size_t v70 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
    uint64_t v71 = (void *)v54;
    uint64_t v72 = v55;
    goto LABEL_32;
  }
  v295(v54, (uint64_t)v55, v297);
  if (a1 == v287) {
    goto LABEL_55;
  }
  uint64_t v93 = *(int *)(v56 + 20);
  uint64_t v94 = (_OWORD *)(v54 + v93);
  uint64_t v95 = &v55[v93];
  sub_251D310C4((uint64_t)v94, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v96 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v97 = swift_getEnumCaseMultiPayload();
  if (v97 != 2)
  {
    if (v97 != 1)
    {
      if (!v97)
      {
        (*(void (**)(_OWORD *, char *, uint64_t))(v296 + 32))(v94, v95, v297);
        uint64_t v98 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v94 + v98[5]) = v95[v98[5]];
        *(_OWORD *)((char *)v94 + v98[6]) = *(_OWORD *)&v95[v98[6]];
        uint64_t v99 = v98[7];
        uint64_t v100 = (char *)v94 + v99;
        uint64_t v101 = &v95[v99];
        v100[8] = v101[8];
        *(void *)uint64_t v100 = *(void *)v101;
        swift_storeEnumTagMultiPayload();
        goto LABEL_55;
      }
      size_t v70 = *(void *)(*(void *)(v96 - 8) + 64);
      uint64_t v71 = v94;
      uint64_t v72 = v95;
LABEL_32:
      memcpy(v71, v72, v70);
      goto LABEL_55;
    }
    *uint64_t v94 = *(_OWORD *)v95;
    uint64_t v108 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v112 = v108[5];
    __dsta = (char *)v94 + v112;
    uint64_t v110 = &v95[v112];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v284)(&v95[v112], 1, v293)) {
      goto LABEL_47;
    }
LABEL_124:
    (*(void (**)(char *, char *, uint64_t))(v292 + 32))(__dsta, v110, v293);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v292 + 56))(__dsta, 0, 1, v293);
    goto LABEL_125;
  }
  *uint64_t v94 = *(_OWORD *)v95;
  uint64_t v108 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v109 = v108[5];
  __dsta = (char *)v94 + v109;
  uint64_t v110 = &v95[v109];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v284)(&v95[v109], 1, v293)) {
    goto LABEL_124;
  }
LABEL_47:
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  memcpy(__dsta, v110, *(void *)(*(void *)(v111 - 8) + 64));
LABEL_125:
  *(_OWORD *)((char *)v94 + v108[6]) = *(_OWORD *)&v95[v108[6]];
  *(_OWORD *)((char *)v94 + v108[7]) = *(_OWORD *)&v95[v108[7]];
  uint64_t v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  *((unsigned char *)v94 + *(int *)(v270 + 48)) = v95[*(int *)(v270 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_55:
  *(unsigned char *)(a1 + v6[29]) = *(unsigned char *)(v287 + v6[29]);
  *(unsigned char *)(a1 + v6[30]) = *(unsigned char *)(v287 + v6[30]);
  *(void *)(a1 + v6[31]) = *(void *)(v287 + v6[31]);
  swift_bridgeObjectRelease();
  uint64_t v114 = *(int *)(a3 + 20);
  uint64_t v115 = a1 + v114;
  uint64_t v116 = v287 + v114;
  v295(a1 + v114, v287 + v114, v297);
  uint64_t v117 = (int *)type metadata accessor for StaticService();
  uint64_t v118 = v117[5];
  uint64_t v119 = (void *)(v115 + v118);
  long long v120 = (uint64_t *)(v116 + v118);
  uint64_t v122 = *v120;
  uint64_t v121 = v120[1];
  *uint64_t v119 = v122;
  v119[1] = v121;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v115 + v117[6]) = *(unsigned char *)(v116 + v117[6]);
  *(unsigned char *)(v115 + v117[7]) = *(unsigned char *)(v116 + v117[7]);
  *(unsigned char *)(v115 + v117[8]) = *(unsigned char *)(v116 + v117[8]);
  *(unsigned char *)(v115 + v117[9]) = *(unsigned char *)(v116 + v117[9]);
  *(unsigned char *)(v115 + v117[10]) = *(unsigned char *)(v116 + v117[10]);
  v295(v115 + v117[11], v116 + v117[11], v297);
  uint64_t v123 = v117[12];
  uint64_t v124 = v115 + v123;
  uint64_t v125 = v116 + v123;
  *(void *)uint64_t v124 = *(void *)v125;
  *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
  uint64_t v126 = v117[13];
  uint64_t v127 = (unsigned char *)(v115 + v126);
  uint64_t v128 = (unsigned char *)(v116 + v126);
  int v129 = v278(v115 + v126, 1, v19);
  int v130 = v278((uint64_t)v128, 1, v19);
  uint64_t v291 = a1;
  if (v129)
  {
    if (!v130)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v296 + 32))(v127, v128, v297);
      *(_OWORD *)&v127[v19[5]] = *(_OWORD *)&v128[v19[5]];
      *(_OWORD *)&v127[v19[6]] = *(_OWORD *)&v128[v19[6]];
      *(_OWORD *)&v127[v19[7]] = *(_OWORD *)&v128[v19[7]];
      *(_OWORD *)&v127[v19[8]] = *(_OWORD *)&v128[v19[8]];
      v127[v19[9]] = v128[v19[9]];
      v127[v19[10]] = v128[v19[10]];
      v127[v19[11]] = v128[v19[11]];
      v127[v19[12]] = v128[v19[12]];
      (*(void (**)(unsigned char *, void, uint64_t))(v275 + 56))(v127, 0, 1);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v130)
  {
    sub_251D310C4((uint64_t)v127, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_60:
    uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
    goto LABEL_61;
  }
  v295((uint64_t)v127, (uint64_t)v128, v297);
  uint64_t v156 = v19[5];
  uint64_t v157 = &v127[v156];
  uint64_t v158 = (uint64_t *)&v128[v156];
  uint64_t v160 = *v158;
  uint64_t v159 = v158[1];
  void *v157 = v160;
  v157[1] = v159;
  swift_bridgeObjectRelease();
  uint64_t v161 = v19[6];
  unsigned int v162 = &v127[v161];
  unsigned int v163 = (uint64_t *)&v128[v161];
  uint64_t v165 = *v163;
  uint64_t v164 = v163[1];
  void *v162 = v165;
  v162[1] = v164;
  swift_bridgeObjectRelease();
  uint64_t v166 = v19[7];
  uint64_t v167 = &v127[v166];
  int v168 = (uint64_t *)&v128[v166];
  uint64_t v170 = *v168;
  uint64_t v169 = v168[1];
  *uint64_t v167 = v170;
  v167[1] = v169;
  swift_bridgeObjectRelease();
  uint64_t v171 = v19[8];
  uint64_t v172 = &v127[v171];
  uint64_t v173 = (uint64_t *)&v128[v171];
  uint64_t v175 = *v173;
  uint64_t v174 = v173[1];
  *uint64_t v172 = v175;
  v172[1] = v174;
  swift_bridgeObjectRelease();
  v127[v19[9]] = v128[v19[9]];
  v127[v19[10]] = v128[v19[10]];
  v127[v19[11]] = v128[v19[11]];
  v127[v19[12]] = v128[v19[12]];
LABEL_61:
  uint64_t v132 = v117[14];
  uint64_t v133 = (void *)(v115 + v132);
  uint64_t v134 = (const void *)(v116 + v132);
  unsigned int v135 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v284)(v115 + v132, 1, v293);
  unsigned int v136 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v284)(v134, 1, v293);
  if (v135)
  {
    if (!v136)
    {
      (*(void (**)(void *, const void *, uint64_t))(v292 + 32))(v133, v134, v293);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v292 + 56))(v133, 0, 1, v293);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v136)
  {
    (*(void (**)(void *, uint64_t))(v292 + 8))(v133, v293);
LABEL_66:
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v133, v134, *(void *)(*(void *)(v137 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(void *, const void *, uint64_t))(v292 + 40))(v133, v134, v293);
LABEL_67:
  *(void *)(v115 + v117[15]) = *(void *)(v116 + v117[15]);
  swift_bridgeObjectRelease();
  uint64_t v138 = v117[16];
  uint64_t v139 = (void *)(v115 + v138);
  uint64_t v140 = (uint64_t *)(v116 + v138);
  uint64_t v142 = *v140;
  uint64_t v141 = v140[1];
  *uint64_t v139 = v142;
  v139[1] = v141;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v115 + v117[17]) = *(unsigned char *)(v116 + v117[17]);
  *(unsigned char *)(v115 + v117[18]) = *(unsigned char *)(v116 + v117[18]);
  *(unsigned char *)(v115 + v117[19]) = *(unsigned char *)(v116 + v117[19]);
  *(unsigned char *)(v115 + v117[20]) = *(unsigned char *)(v116 + v117[20]);
  uint64_t v143 = v117[21];
  int v144 = (void *)(v115 + v143);
  int v145 = (uint64_t *)(v116 + v143);
  uint64_t v147 = *v145;
  uint64_t v146 = v145[1];
  void *v144 = v147;
  v144[1] = v146;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v115 + v117[22]) = *(unsigned char *)(v116 + v117[22]);
  *(unsigned char *)(v115 + v117[23]) = *(unsigned char *)(v116 + v117[23]);
  *(unsigned char *)(v115 + v117[24]) = *(unsigned char *)(v116 + v117[24]);
  uint64_t v148 = v117[25];
  uint64_t v149 = (void *)(v115 + v148);
  uint64_t v150 = (const void *)(v116 + v148);
  int v151 = v294(v115 + v148, 1, v297);
  int v152 = v294((uint64_t)v150, 1, v297);
  if (v151)
  {
    if (v152)
    {
      uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v149, v150, *(void *)(*(void *)(v153 - 8) + 64));
      uint64_t v154 = v297;
    }
    else
    {
      uint64_t v154 = v297;
      (*(void (**)(void *, const void *, uint64_t))(v296 + 32))(v149, v150, v297);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v296 + 56))(v149, 0, 1, v297);
    }
  }
  else
  {
    uint64_t v154 = v297;
    if (v152)
    {
      (*(void (**)(void *, uint64_t))(v296 + 8))(v149, v297);
      uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v149, v150, *(void *)(*(void *)(v155 - 8) + 64));
    }
    else
    {
      v295((uint64_t)v149, (uint64_t)v150, v297);
    }
  }
  uint64_t v176 = v117[26];
  uint64_t v177 = (void *)(v115 + v176);
  uint64_t v178 = (const void *)(v116 + v176);
  int v179 = v294(v115 + v176, 1, v154);
  int v180 = v294((uint64_t)v178, 1, v154);
  if (v179)
  {
    if (v180)
    {
      uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v177, v178, *(void *)(*(void *)(v181 - 8) + 64));
      uint64_t v182 = v297;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v296 + 32))(v177, v178, v297);
      uint64_t v182 = v297;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v296 + 56))(v177, 0, 1, v297);
    }
  }
  else
  {
    uint64_t v182 = v297;
    if (v180)
    {
      (*(void (**)(void *))(v296 + 8))(v177);
      uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v177, v178, *(void *)(*(void *)(v183 - 8) + 64));
    }
    else
    {
      ((void (*)(void *, const void *))v295)(v177, v178);
    }
  }
  *(void *)(v115 + v117[27]) = *(void *)(v116 + v117[27]);
  swift_bridgeObjectRelease();
  *(void *)(v115 + v117[28]) = *(void *)(v116 + v117[28]);
  swift_bridgeObjectRelease();
  uint64_t v184 = v117[29];
  uint64_t v185 = v115 + v184;
  uint64_t v186 = v116 + v184;
  *(void *)(v115 + v184) = *(void *)(v116 + v184);
  swift_bridgeObjectRelease();
  *(void *)(v185 + 8) = *(void *)(v186 + 8);
  swift_bridgeObjectRelease();
  uint64_t v187 = v117[30];
  uint64_t v188 = (char *)(v116 + v187);
  uint64_t v189 = (char *)(v115 + v187);
  LODWORD(v185) = v280();
  int v190 = ((uint64_t (*)(char *, uint64_t, int *))v280)(v188, 1, v289);
  if (v185)
  {
    uint64_t v191 = v182;
    if (!v190)
    {
      uint64_t v192 = *(void (**)(char *, char *, uint64_t))(v296 + 32);
      v192(v189, v188, v182);
      uint64_t v193 = v289[5];
      uint64_t v285 = v189;
      uint64_t v194 = &v189[v193];
      uint64_t v195 = &v188[v193];
      uint64_t v282 = (void *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v196 = swift_getEnumCaseMultiPayload();
      uint64_t v197 = v287;
      if (v196 == 2)
      {
        uint64_t v212 = v194;
        *(_OWORD *)uint64_t v194 = *(_OWORD *)v195;
        uint64_t v213 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v214 = *(int *)(v213 + 20);
        uint64_t v279 = v213;
        uint64_t v281 = &v194[v214];
        __src = &v195[v214];
        if (v284())
        {
LABEL_100:
          uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v281, __src, *(void *)(*(void *)(v217 - 8) + 64));
LABEL_108:
          *(_OWORD *)((char *)v212 + *(int *)(v279 + 24)) = *(_OWORD *)&v195[*(int *)(v279 + 24)];
          *(_OWORD *)((char *)v212 + *(int *)(v279 + 28)) = *(_OWORD *)&v195[*(int *)(v279 + 28)];
          uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v212 + *(int *)(v221 + 48)) = v195[*(int *)(v221 + 48)];
          goto LABEL_109;
        }
      }
      else
      {
        if (v196 != 1)
        {
          if (v196)
          {
            memcpy(v194, v195, *(void *)(*(v282 - 1) + 64));
LABEL_110:
            (*(void (**)(char *, void, uint64_t, int *))(v276 + 56))(v285, 0, 1, v289);
            goto LABEL_111;
          }
          v192(v194, v195, v191);
          uint64_t v198 = (int *)type metadata accessor for StaticHH2Update(0);
          v194[v198[5]] = v195[v198[5]];
          *(_OWORD *)&v194[v198[6]] = *(_OWORD *)&v195[v198[6]];
          uint64_t v199 = v198[7];
          uint64_t v200 = &v194[v199];
          uint64_t v201 = &v195[v199];
          v200[8] = v201[8];
          *(void *)uint64_t v200 = *(void *)v201;
LABEL_109:
          swift_storeEnumTagMultiPayload();
          goto LABEL_110;
        }
        uint64_t v212 = v194;
        *(_OWORD *)uint64_t v194 = *(_OWORD *)v195;
        uint64_t v215 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v216 = *(int *)(v215 + 20);
        uint64_t v279 = v215;
        uint64_t v281 = &v194[v216];
        __src = &v195[v216];
        if (v284()) {
          goto LABEL_100;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v292 + 32))(v281, __src, v293);
      uint64_t v212 = v194;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v292 + 56))(v281, 0, 1, v293);
      goto LABEL_108;
    }
LABEL_91:
    uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v189, v188, *(void *)(*(void *)(v202 - 8) + 64));
    uint64_t v197 = v287;
    goto LABEL_111;
  }
  uint64_t v191 = v182;
  if (v190)
  {
    sub_251D310C4((uint64_t)v189, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_91;
  }
  v295((uint64_t)v189, (uint64_t)v188, v182);
  uint64_t v197 = v287;
  if (a1 == v287) {
    goto LABEL_111;
  }
  uint64_t v203 = v289[5];
  uint64_t v204 = &v189[v203];
  uint64_t v205 = &v188[v203];
  sub_251D310C4((uint64_t)v204, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v206 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v207 = swift_getEnumCaseMultiPayload();
  if (v207 != 2)
  {
    if (v207 != 1)
    {
      if (v207)
      {
        memcpy(v204, v205, *(void *)(*(void *)(v206 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v296 + 32))(v204, v205, v191);
        uint64_t v208 = (int *)type metadata accessor for StaticHH2Update(0);
        v204[v208[5]] = v205[v208[5]];
        *(_OWORD *)&v204[v208[6]] = *(_OWORD *)&v205[v208[6]];
        uint64_t v209 = v208[7];
        uint64_t v210 = &v204[v209];
        uint64_t v211 = &v205[v209];
        v210[8] = v211[8];
        *(void *)uint64_t v210 = *(void *)v211;
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_111;
    }
    *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
    uint64_t v286 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v220 = v286[5];
    uint64_t v290 = &v204[v220];
    uint64_t v283 = &v205[v220];
    if (v284()) {
      goto LABEL_103;
    }
LABEL_127:
    (*(void (**)(char *, char *, uint64_t))(v292 + 32))(v290, v283, v293);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v292 + 56))(v290, 0, 1, v293);
    goto LABEL_128;
  }
  *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
  uint64_t v286 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v218 = v286[5];
  uint64_t v290 = &v204[v218];
  uint64_t v283 = &v205[v218];
  if (!v284()) {
    goto LABEL_127;
  }
LABEL_103:
  uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  memcpy(v290, v283, *(void *)(*(void *)(v219 - 8) + 64));
LABEL_128:
  *(_OWORD *)&v204[v286[6]] = *(_OWORD *)&v205[v286[6]];
  *(_OWORD *)&v204[v286[7]] = *(_OWORD *)&v205[v286[7]];
  uint64_t v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  v204[*(int *)(v271 + 48)] = v205[*(int *)(v271 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_111:
  uint64_t v222 = v197;
  *(unsigned char *)(v115 + v117[31]) = *(unsigned char *)(v116 + v117[31]);
  *(void *)(v115 + v117[32]) = *(void *)(v116 + v117[32]);
  swift_bridgeObjectRelease();
  uint64_t v223 = v117[33];
  uint64_t v224 = (void *)(v115 + v223);
  int v225 = (const void *)(v116 + v223);
  int v226 = v294(v115 + v223, 1, v191);
  int v227 = v294((uint64_t)v225, 1, v191);
  if (v226)
  {
    uint64_t v228 = v293;
    if (v227)
    {
      uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v224, v225, *(void *)(*(void *)(v229 - 8) + 64));
      uint64_t v230 = v297;
    }
    else
    {
      uint64_t v230 = v297;
      (*(void (**)(void *, const void *, uint64_t))(v296 + 32))(v224, v225, v297);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v296 + 56))(v224, 0, 1, v297);
    }
  }
  else
  {
    uint64_t v228 = v293;
    uint64_t v230 = v297;
    if (v227)
    {
      (*(void (**)(void *, uint64_t))(v296 + 8))(v224, v297);
      uint64_t v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v224, v225, *(void *)(*(void *)(v231 - 8) + 64));
    }
    else
    {
      v295((uint64_t)v224, (uint64_t)v225, v297);
    }
  }
  uint64_t v232 = v117[34];
  uint64_t v233 = v115 + v232;
  uint64_t v234 = v116 + v232;
  *(_WORD *)uint64_t v233 = *(_WORD *)v234;
  *(unsigned char *)(v233 + 2) = *(unsigned char *)(v234 + 2);
  uint64_t v235 = v117[35];
  uint64_t v236 = v115 + v235;
  uint64_t v237 = v116 + v235;
  *(_DWORD *)(v236 + 7) = *(_DWORD *)(v237 + 7);
  *(void *)uint64_t v236 = *(void *)v237;
  uint64_t v238 = *(int *)(a3 + 24);
  uint64_t v239 = v291 + v238;
  uint64_t v240 = v222 + v238;
  v295(v291 + v238, v222 + v238, v230);
  uint64_t v241 = (int *)type metadata accessor for StaticCharacteristic();
  *(unsigned char *)(v239 + v241[5]) = *(unsigned char *)(v240 + v241[5]);
  uint64_t v242 = v241[6];
  uint64_t v243 = v239 + v242;
  uint64_t v244 = v240 + v242;
  char v245 = *(unsigned char *)(v244 + 16);
  uint64_t v246 = *(void *)v243;
  unint64_t v247 = *(void *)(v243 + 8);
  *(_OWORD *)uint64_t v243 = *(_OWORD *)v244;
  char v248 = *(unsigned char *)(v243 + 16);
  *(unsigned char *)(v243 + 16) = v245;
  sub_251A580B4(v246, v247, v248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v292 + 40))(v239 + v241[7], v240 + v241[7], v228);
  uint64_t v249 = v241[8];
  uint64_t v250 = v239 + v249;
  uint64_t v251 = v240 + v249;
  uint64_t v252 = *(void *)(v251 + 16);
  char v253 = *(unsigned char *)(v251 + 24);
  uint64_t v254 = *(void *)v250;
  uint64_t v255 = *(void *)(v250 + 8);
  uint64_t v256 = *(void *)(v250 + 16);
  *(_OWORD *)uint64_t v250 = *(_OWORD *)v251;
  *(void *)(v250 + 16) = v252;
  char v257 = *(unsigned char *)(v250 + 24);
  *(unsigned char *)(v250 + 24) = v253;
  sub_251A1A5A4(v254, v255, v256, v257);
  *(void *)(v239 + v241[9]) = *(void *)(v240 + v241[9]);
  v295(v239 + v241[10], v240 + v241[10], v230);
  uint64_t v258 = v241[11];
  uint64_t v259 = (uint64_t *)(v239 + v258);
  uint64_t v260 = v240 + v258;
  unint64_t v261 = *(void *)(v239 + v258 + 24);
  if (v261 >> 8 != 0xFFFFFFFF)
  {
    unint64_t v262 = *(void *)(v260 + 24);
    if (v262 >> 8 != 0xFFFFFFFF)
    {
      uint64_t v264 = *(void *)(v260 + 16);
      uint64_t v265 = *(void *)(v260 + 32);
      uint64_t v266 = *v259;
      uint64_t v267 = v259[1];
      uint64_t v268 = v259[2];
      *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
      v259[2] = v264;
      v259[3] = v262;
      v259[4] = v265;
      sub_251A11E74(v266, v267, v268, v261);
      return v291;
    }
    sub_251D31124((uint64_t)v259);
  }
  long long v263 = *(_OWORD *)(v260 + 16);
  *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
  *((_OWORD *)v259 + 1) = v263;
  v259[4] = *(void *)(v260 + 32);
  return v291;
}

uint64_t getEnumTagSinglePayload for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D3445C);
}

uint64_t sub_251D3445C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for StaticService();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for StaticCharacteristic();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D345BC);
}

uint64_t sub_251D345BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticAccessory(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for StaticService();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for StaticCharacteristic();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);
  return v17(v19, a2, a2, v18);
}

uint64_t sub_251D34714()
{
  uint64_t result = type metadata accessor for StaticAccessory(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StaticService();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for StaticCharacteristic();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticAccessoryServiceCharacteristicTriplet.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D348E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessoryServiceCharacteristicTriplet.CodingKeys()
{
  return &type metadata for StaticAccessoryServiceCharacteristicTriplet.CodingKeys;
}

unint64_t sub_251D34920()
{
  unint64_t result = qword_269BA2A28;
  if (!qword_269BA2A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2A28);
  }
  return result;
}

unint64_t sub_251D34978()
{
  unint64_t result = qword_269BA2A30;
  if (!qword_269BA2A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2A30);
  }
  return result;
}

unint64_t sub_251D349D0()
{
  unint64_t result = qword_269BA2A38;
  if (!qword_269BA2A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2A38);
  }
  return result;
}

uint64_t sub_251D34A24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6341636974617473 && a2 == 0xEF79726F73736563;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6553636974617473 && a2 == 0xED00006563697672 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F709E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t CameraController.State.description.getter()
{
  sub_251F36400();
  sub_251F35800();
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  CameraController.Mode.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  sub_251F36640();
  sub_251F35800();
  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  id v1 = *(id *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D680);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  id v2 = *(id *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269B9E7F0);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  return 0;
}

void (*sub_251D34FDC(void *a1))(void **a1, char a2)
{
  int v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[8] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  v3[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[10] = v5;
  v3[11] = malloc(*(void *)(v5 + 64));
  swift_beginAccess();
  return sub_251D350A8;
}

void sub_251D350A8(void **a1, char a2)
{
  int v3 = *a1;
  swift_endAccess();
  if (a2)
  {
    uint64_t v4 = (void *)v3[11];
  }
  else
  {
    uint64_t v5 = v3[10];
    uint64_t v4 = (void *)v3[11];
    uint64_t v7 = v3[8];
    uint64_t v6 = v3[9];
    swift_getKeyPath();
    v3[7] = v7;
    sub_251D35E00();
    sub_251F34F10();
    swift_release();
    uint64_t v8 = *(unsigned __int16 *)(v7 + 16);
    v3[1] = 0;
    v3[2] = 0;
    *int v3 = v8;
    *((unsigned char *)v3 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
    sub_251F35CF0();
    (*(void (**)(void *, uint64_t))(v5 + 8))(v4, v6);
  }
  free(v4);
  free(v3);
}

uint64_t sub_251D351B8@<X0>(uint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(_WORD *)(v3 + 16);
  return result;
}

uint64_t sub_251D35244()
{
  return swift_release();
}

uint64_t sub_251D352E4@<X0>(_WORD *a1@<X8>)
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a1 = *(_WORD *)(v1 + 16);
  return result;
}

uint64_t sub_251D35370()
{
  return swift_release();
}

uint64_t sub_251D35410(uint64_t a1, __int16 a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(_WORD *)(a1 + 16) = a2;
  swift_getKeyPath();
  uint64_t v11 = a1;
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  uint64_t v8 = *(unsigned __int16 *)(a1 + 16);
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v11 = v8;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void (*sub_251D35580(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtCC13HomeDataModel16CameraController5State___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251D35E00();
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251D34FDC(v3);
  return sub_251D3566C;
}

void sub_251D3566C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  free(v1);
}

uint64_t CameraController.State.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State_identifier;
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

void *sub_251D3576C()
{
  return sub_251D35890((uint64_t)&unk_251F501F8, &OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot);
}

id sub_251D35780@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_251D3591C(a1, &OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot, a2);
}

void sub_251D35794(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_251D35E00();
  id v2 = v1;
  sub_251F34F00();
  swift_release();
}

void sub_251D35840(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot);
  *(void *)(a1 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot) = a2;
  id v3 = a2;
}

void *sub_251D3587C()
{
  return sub_251D35890((uint64_t)&unk_251F501D0, &OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream);
}

void *sub_251D35890(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  uint64_t v4 = *(void **)(v2 + *a2);
  id v5 = v4;
  return v4;
}

id sub_251D35908@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_251D3591C(a1, &OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream, a2);
}

id sub_251D3591C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  uint64_t v6 = *(void **)(v5 + *a2);
  *a3 = v6;
  return v6;
}

void sub_251D359B0(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_251D35E00();
  id v2 = v1;
  sub_251F34F00();
  swift_release();
}

void sub_251D35A5C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream);
  *(void *)(a1 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream) = a2;
  id v3 = a2;
}

uint64_t sub_251D35A98()
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__supportsBidirectionalAudio);
}

uint64_t sub_251D35B10@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__supportsBidirectionalAudio);
  return result;
}

uint64_t sub_251D35B90()
{
  return swift_release();
}

uint64_t sub_251D35C30@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__name + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__name);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251D35CB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D35D6C()
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__name);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_251D35E00()
{
  unint64_t result = qword_269B9FE70;
  if (!qword_269B9FE70)
  {
    type metadata accessor for CameraController.State();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B9FE70);
  }
  return result;
}

uint64_t type metadata accessor for CameraController.State()
{
  uint64_t result = qword_269BA2A78;
  if (!qword_269BA2A78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251D35EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__name);
  *uint64_t v3 = a2;
  v3[1] = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D35EF4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_251D35FE8(a1, &OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__availability, a2);
}

uint64_t sub_251D35F08()
{
  return swift_release();
}

uint64_t sub_251D35FA8@<X0>(unsigned char *a1@<X8>)
{
  return sub_251D36120(&OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__availability, a1);
}

uint64_t sub_251D35FC4(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__availability) = a2;
  return result;
}

uint64_t sub_251D35FD4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_251D35FE8(a1, &OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__streamState, a2);
}

uint64_t sub_251D35FE8@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_251D3606C()
{
  return swift_release();
}

uint64_t sub_251D3610C@<X0>(unsigned char *a1@<X8>)
{
  return sub_251D36120(&OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__streamState, a1);
}

uint64_t sub_251D36120@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v2 + *a1);
  return result;
}

id sub_251D361A8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_251D3591C(a1, &OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream, a2);
}

id sub_251D361D4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_251D3591C(a1, &OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot, a2);
}

uint64_t sub_251D36200(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__streamState) = a2;
  return result;
}

uint64_t sub_251D36210(uint64_t a1, uint64_t a2)
{
  *(_WORD *)(v2 + 16) = 4;
  *(void *)(v2 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot) = 0;
  *(void *)(v2 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__supportsBidirectionalAudio) = 1;
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__name);
  *uint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__availability) = 1;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__streamState) = 0;
  sub_251F34F40();
  uint64_t v6 = v2 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State_identifier;
  uint64_t v7 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a1, v7);
  uint64_t v8 = v2 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State_updates;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  return v2;
}

uint64_t CameraController.State.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State_identifier;
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State_updates;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State___observationRegistrar;
  uint64_t v6 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t CameraController.State.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State_identifier;
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State_updates;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State___observationRegistrar;
  uint64_t v6 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

void *CameraController.State.source.getter()
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  int v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 != 3)
  {
    uint64_t v2 = 0;
    if (v1 == 4) {
      return v2;
    }
    swift_getKeyPath();
    sub_251F34F10();
    swift_release();
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream);
    if (v2)
    {
LABEL_5:
      id v3 = v2;
      return v2;
    }
  }
  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot);
  if (v2) {
    goto LABEL_5;
  }
  return v2;
}

void *CameraController.State.aspectRatio.getter()
{
  uint64_t result = CameraController.State.source.getter();
  int v1 = result;
  if (result)
  {
    objc_msgSend(result, sel_aspectRatio);
    uint64_t v3 = v2;

    return (void *)v3;
  }
  return result;
}

uint64_t CameraController.State.dateOfLastSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot);
  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_captureDate);
    sub_251F34CE0();

    uint64_t v5 = sub_251F34D20();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 0, 1, v5);
  }
  else
  {
    uint64_t v7 = sub_251F34D20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
}

BOOL CameraController.State.isSourceSnapshot.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = CameraController.State.source.getter();

  if (!v2) {
    return 0;
  }
  uint64_t v3 = CameraController.State.source.getter();
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  id v4 = *(void **)(v1 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot);
  BOOL result = v4 == 0;
  if (v3)
  {

    return v4 && v3 == v4;
  }
  return result;
}

BOOL CameraController.State.canToggleAudioSetting.getter()
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__supportsBidirectionalAudio) != 1) {
    return 0;
  }
  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream) != 0;
}

uint64_t CameraController.State.statusString.getter()
{
  swift_getKeyPath();
  sub_251D35E00();
  sub_251F34F10();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__streamState) != 2)
  {
    swift_getKeyPath();
    sub_251F34F10();
    swift_release();
    uint64_t result = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__availability);
    switch(*(unsigned char *)(v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__availability))
    {
      case 1:
      case 4:
        uint64_t v1 = 0xD000000000000019;
        uint64_t v2 = "HFCameraErrorNotReachable";
        goto LABEL_10;
      case 2:
        uint64_t v1 = 0xD000000000000011;
        uint64_t v2 = "HFCameraErrorBusy";
        goto LABEL_10;
      case 3:
        uint64_t v1 = 0xD00000000000001ALL;
        uint64_t v2 = "HFCameraStreamingOptionOff";
        goto LABEL_10;
      case 5:
        id v4 = "HFCameraErrorExtremeColdTitle";
        goto LABEL_8;
      case 6:
        id v4 = "HFCameraErrorExtremeHeatTitle";
LABEL_8:
        unint64_t v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
        uint64_t v1 = 0xD00000000000001DLL;
        return static String.hfLocalized(_:)(v1, v5);
      default:
        return result;
    }
  }
  uint64_t v1 = 0xD000000000000014;
  uint64_t v2 = "HFCameraPlaybackLive";
LABEL_10:
  unint64_t v5 = (unint64_t)(v2 - 32) | 0x8000000000000000;
  return static String.hfLocalized(_:)(v1, v5);
}

uint64_t sub_251D36B64()
{
  return type metadata accessor for CameraController.State();
}

void sub_251D36B6C()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251BF6684();
    if (v1 <= 0x3F)
    {
      sub_251F34F50();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for CameraController.State(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CameraController.State);
}

uint64_t dispatch thunk of CameraController.State.mode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CameraController.State.mode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CameraController.State.mode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CameraController.State.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of CameraController.State.availability.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of CameraController.State.streamState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

void sub_251D36DB8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__supportsBidirectionalAudio) = *(unsigned char *)(v0 + 24);
}

void sub_251D36DD0()
{
}

void sub_251D36DF0()
{
}

void sub_251D36E10(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  id v4 = *(void **)(v2 + *a1);
  *(void *)(v2 + *a1) = v3;
  id v5 = v3;
}

void sub_251D36E4C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__streamState) = *(unsigned char *)(v0 + 24);
}

void sub_251D36E64()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__availability) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_251D36E7C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__name);
  *uint64_t v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D36EC8()
{
  return sub_251BF6D7C();
}

uint64_t sub_251D36EE0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = 0;
  while (*(unsigned __int8 *)(a2 + 32 + result) != a1)
  {
    if (v2 == ++result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_251D36F28(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v36 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v36);
  uint64_t v40 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v39 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F940);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScrubberElement(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (uint64_t *)((char *)&v36 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t v42 = *(void *)(a2 + 16);
  if (!v42) {
    return 0;
  }
  uint64_t v19 = 0;
  uint64_t v20 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v41 = *(void *)(v16 + 72);
  uint64_t v37 = v8;
  uint64_t v38 = (char *)&v36 - v17;
  while (1)
  {
    sub_251D39398(v20, (uint64_t)v18, type metadata accessor for ScrubberElement);
    uint64_t v23 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_251D39398((uint64_t)v18, (uint64_t)v8, type metadata accessor for ScrubberElement);
    sub_251D39398(v43, v23, type metadata accessor for ScrubberElement);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_251D39398((uint64_t)v8, (uint64_t)v15, type metadata accessor for ScrubberElement);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      int v21 = type metadata accessor for CameraClip;
      uint64_t v22 = (uint64_t)v15;
LABEL_4:
      sub_251D396EC(v22, (uint64_t (*)(void))v21);
      sub_251A1B064((uint64_t)v8, &qword_269B9F940);
      goto LABEL_5;
    }
    unsigned int v30 = v12;
    uint64_t v31 = v6;
    uint64_t v32 = v39;
    sub_251D39620(v23, v39, (uint64_t (*)(void))type metadata accessor for CameraClip);
    BOOL v33 = _s13HomeDataModel10CameraClipV2eeoiySbAC_ACtFZ_0(v15, v32);
    sub_251D396EC(v32, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251D396EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CameraClip);
    if (v33) {
      goto LABEL_20;
    }
    uint64_t v34 = (uint64_t)v37;
    sub_251D396EC((uint64_t)v37, type metadata accessor for ScrubberElement);
    uint64_t v6 = v31;
    uint64_t v18 = v38;
    uint64_t v12 = v30;
    uint64_t v8 = (char *)v34;
LABEL_5:
    sub_251D396EC((uint64_t)v18, type metadata accessor for ScrubberElement);
    ++v19;
    v20 += v41;
    if (v42 == v19) {
      return 0;
    }
  }
  sub_251D39398((uint64_t)v8, (uint64_t)v12, type metadata accessor for ScrubberElement);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    int v21 = type metadata accessor for ReachabilityEvent;
    uint64_t v22 = (uint64_t)v12;
    goto LABEL_4;
  }
  uint64_t v24 = v23;
  uint64_t v25 = v40;
  sub_251D39620(v24, v40, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
  char v26 = sub_251F34D70();
  uint64_t v27 = v25;
  if ((v26 & 1) == 0
    || v12[*(int *)(v36 + 20)] != *(unsigned char *)(v25 + *(int *)(v36 + 20))
    || (v28 = sub_251F34CD0(), uint64_t v27 = v40, (v28 & 1) == 0)
    || (v29 = sub_251F34CD0(), uint64_t v27 = v40, (v29 & 1) == 0))
  {
    sub_251D396EC(v27, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    sub_251D396EC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    sub_251D396EC((uint64_t)v8, type metadata accessor for ScrubberElement);
    goto LABEL_5;
  }
  sub_251D396EC(v40, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
  sub_251D396EC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
LABEL_20:
  sub_251D396EC((uint64_t)v37, type metadata accessor for ScrubberElement);
  sub_251D396EC((uint64_t)v38, type metadata accessor for ScrubberElement);
  return v19;
}

uint64_t CameraEventCache.cameraProfile.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D39398(v1 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache_cameraProfile, a1, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t CameraEventCache.elements.getter()
{
  return sub_251D37648();
}

uint64_t sub_251D374C4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_251D376E8(a1, &OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elements, a2);
}

uint64_t sub_251D374DC()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_251D37590()
{
  unint64_t result = qword_269BA2A90;
  if (!qword_269BA2A90)
  {
    type metadata accessor for CameraEventCache();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2A90);
  }
  return result;
}

uint64_t type metadata accessor for CameraEventCache()
{
  uint64_t result = qword_269BA2AE0;
  if (!qword_269BA2AE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CameraEventCache.elementsByUUID.getter()
{
  return sub_251D37648();
}

uint64_t sub_251D37648()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251D376D4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_251D376E8(a1, &OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elementsByUUID, a2);
}

uint64_t sub_251D376E8@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_251D37590();
  sub_251F34F10();
  swift_release();
  uint64_t v6 = (void *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251D3778C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D37840(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)(a1 + *a3);
  swift_beginAccess();
  *uint64_t v4 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t CameraEventCache.fetchFirstClip(in:limit:ascending:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_251F35C80();
  *(void *)(v1 + 24) = sub_251F35C70();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D37944, v3, v2);
}

uint64_t sub_251D37944()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t CameraEventCache.fetchAndUpdateEvents(in:limit:ascending:)()
{
  sub_251F35C80();
  *(void *)(v0 + 16) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D37A78, v2, v1);
}

uint64_t sub_251D37A78()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t CameraEventCache.prefetchAndLoadInitialEvents(with:)()
{
  sub_251F35C80();
  *(void *)(v0 + 16) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D39E44, v2, v1);
}

uint64_t CameraEventCache.fetchOlderEvents()()
{
  sub_251F35C80();
  *(void *)(v0 + 16) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D39E44, v2, v1);
}

uint64_t CameraEventCache.fetchOlderEvents(limit:)()
{
  sub_251F35C80();
  *(void *)(v0 + 16) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D39E44, v2, v1);
}

uint64_t CameraEventCache.fetchNewerEvents()()
{
  sub_251F35C80();
  *(void *)(v0 + 16) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D37D2C, v2, v1);
}

uint64_t sub_251D37D2C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall CameraEventCache.removeAll()()
{
  swift_getKeyPath();
  sub_251D37590();
  sub_251F34F10();
  swift_release();
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elements);
  swift_beginAccess();
  *uint64_t v1 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
}

uint64_t CameraEventCache.update(element:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v142 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v142);
  uint64_t v141 = (uint64_t)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v140);
  uint64_t v139 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2AD8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v117 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v124 = (uint64_t)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v117 - v11;
  uint64_t v13 = type metadata accessor for ScrubberElement.ID(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v123 = (uint64_t)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v117 - v16;
  uint64_t v18 = type metadata accessor for ScrubberElement(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v128 = (uint64_t)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v127 = (uint64_t)&v117 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v143 = (uint64_t)&v117 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v133 = (char *)&v117 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v134 = (uint64_t)&v117 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v147 = (uint64_t)&v117 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v118 = (uint64_t)&v117 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (uint64_t *)((char *)&v117 - v34);
  uint64_t v144 = a1;
  ScrubberElement.id.getter((uint64_t)v17);
  unint64_t KeyPath = swift_getKeyPath();
  unint64_t v37 = v2 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache___observationRegistrar;
  uint64_t v154 = v2;
  unint64_t v126 = sub_251D37590();
  sub_251F34F10();
  swift_release();
  uint64_t v38 = (void *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elementsByUUID);
  swift_beginAccess();
  uint64_t v122 = v38;
  uint64_t v39 = *v38;
  if (*(void *)(v39 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_2519FE584((uint64_t)v17);
    if (v41)
    {
      sub_251D39398(*(void *)(v39 + 56) + *(void *)(v19 + 72) * v40, (uint64_t)v12, type metadata accessor for ScrubberElement);
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      uint64_t v43 = v12;
      uint64_t v44 = 0;
    }
    else
    {
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      uint64_t v43 = v12;
      uint64_t v44 = 1;
    }
    uint64_t v121 = v42;
    v42(v43, v44, 1, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v121(v12, 1, 1, v18);
  }
  uint64_t v45 = sub_251F34DA0();
  uint64_t v119 = *(void *)(v45 - 8);
  int v46 = *(void (**)(char *))(v119 + 8);
  uint64_t v120 = v45;
  v46(v17);
  uint64_t v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v151 = v18;
  int v48 = v47(v12, 1, v18);
  uint64_t v135 = v19;
  if (v48 == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_269B9C908);
  }
  else
  {
    sub_251D39620((uint64_t)v12, (uint64_t)v35, type metadata accessor for ScrubberElement);
    swift_getKeyPath();
    uint64_t v153 = v2;
    sub_251F34F10();
    swift_release();
    uint64_t v19 = v2 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elements;
    swift_beginAccess();
    uint64_t v49 = *(void *)v19;
    swift_bridgeObjectRetain();
    unint64_t KeyPath = sub_251D36F28((uint64_t)v35, v49);
    char v51 = v50;
    swift_bridgeObjectRelease();
    if ((v51 & 1) == 0)
    {
      swift_getKeyPath();
      uint64_t v153 = v2;
      sub_251F34F10();
      swift_release();
      uint64_t v153 = v2;
      swift_getKeyPath();
      sub_251F34F30();
      swift_release();
      swift_beginAccess();
      unint64_t v52 = *(void *)v19;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v19 = v52;
      if (result) {
        goto LABEL_11;
      }
      goto LABEL_52;
    }
    sub_251D396EC((uint64_t)v35, type metadata accessor for ScrubberElement);
    uint64_t v19 = v135;
  }
  swift_getKeyPath();
  uint64_t v153 = v2;
  unint64_t v52 = v37;
  sub_251F34F10();
  swift_release();
  uint64_t v55 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elements);
  swift_beginAccess();
  uint64_t v125 = v55;
  uint64_t v56 = *v55;
  uint64_t v57 = *(void *)(*v55 + 16);
  if (v57)
  {
    uint64_t v35 = (uint64_t *)(v57 - 1);
    uint64_t v132 = v56 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    swift_bridgeObjectRetain();
    uint64_t v58 = 0;
    uint64_t v131 = v2;
    unint64_t v130 = v37;
    uint64_t v129 = v56;
    while (1)
    {
      uint64_t v59 = (uint64_t)v35 + v58;
      if (__OFADD__(v58, v35)) {
        break;
      }
      if (v59 >= 0) {
        uint64_t v60 = (uint64_t)v35 + v58;
      }
      else {
        uint64_t v60 = v59 + 1;
      }
      if (v59 < -1) {
        goto LABEL_48;
      }
      if (v60 >> 1 >= *(void *)(v56 + 16)) {
        goto LABEL_49;
      }
      uint64_t v138 = v35;
      uint64_t v61 = *(void *)(v19 + 72);
      uint64_t v145 = v60 >> 1;
      uint64_t v137 = v132 + v61 * (v60 >> 1);
      uint64_t v62 = v147;
      sub_251D39398(v137, v147, type metadata accessor for ScrubberElement);
      uint64_t v63 = sub_251F34D20();
      uint64_t v146 = &v117;
      uint64_t v64 = *(void **)(v63 - 8);
      uint64_t v65 = v64[8];
      uint64_t v66 = MEMORY[0x270FA5388](v63);
      uint64_t v67 = (char *)&v117 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v66);
      uint64_t v69 = (char *)&v117 - v68;
      uint64_t v70 = v62;
      uint64_t v71 = v134;
      sub_251D39398(v70, v134, type metadata accessor for ScrubberElement);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v136 = v58;
      uint64_t v149 = v64 + 2;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v73 = v141;
        sub_251D39620(v71, v141, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
        uint64_t v74 = v73 + *(int *)(v142 + 24);
        uint64_t v148 = (void (*)(char *, uint64_t, uint64_t))v64[2];
        v148(v69, v74, v63);
        uint64_t v75 = type metadata accessor for ReachabilityEvent;
        uint64_t v76 = v73;
      }
      else
      {
        uint64_t v77 = v139;
        sub_251D39620(v71, v139, (uint64_t (*)(void))type metadata accessor for CameraClip);
        uint64_t v78 = v77 + *(int *)(v140 + 24);
        uint64_t v148 = (void (*)(char *, uint64_t, uint64_t))v64[2];
        v148(v69, v78, v63);
        uint64_t v75 = type metadata accessor for CameraClip;
        uint64_t v76 = v77;
      }
      sub_251D396EC(v76, (uint64_t (*)(void))v75);
      uint64_t v79 = (uint64_t)v133;
      uint64_t v150 = (uint64_t (*)(char *, char *, uint64_t))v64[4];
      uint64_t v80 = v150(v67, v69, v63);
      uint64_t v81 = MEMORY[0x270FA5388](v80);
      unint64_t KeyPath = (unint64_t)&v117 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v81);
      uint64_t v83 = (char *)&v117 - v82;
      sub_251D39398(v144, v79, type metadata accessor for ScrubberElement);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v84 = v79;
        uint64_t v85 = v141;
        sub_251D39620(v84, v141, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
        v148(v83, v85 + *(int *)(v142 + 24), v63);
        uint64_t v86 = type metadata accessor for ReachabilityEvent;
      }
      else
      {
        uint64_t v87 = v79;
        uint64_t v85 = v139;
        sub_251D39620(v87, v139, (uint64_t (*)(void))type metadata accessor for CameraClip);
        v148(v83, v85 + *(int *)(v140 + 24), v63);
        uint64_t v86 = type metadata accessor for CameraClip;
      }
      sub_251D396EC(v85, (uint64_t (*)(void))v86);
      v150((char *)KeyPath, v83, v63);
      char v88 = sub_251F34C90();
      unint64_t v52 = v64[1];
      ((void (*)(unint64_t, uint64_t))v52)(KeyPath, v63);
      ((void (*)(char *, uint64_t))v52)(v67, v63);
      sub_251D396EC(v147, type metadata accessor for ScrubberElement);
      if (v88)
      {
        uint64_t v58 = v145 + 1;
        uint64_t v2 = v131;
        uint64_t v54 = v151;
        unint64_t v37 = v130;
        uint64_t v19 = v135;
        uint64_t v56 = v129;
        uint64_t v35 = v138;
      }
      else
      {
        uint64_t v89 = sub_251D39398(v137, v143, type metadata accessor for ScrubberElement);
        uint64_t v146 = &v117;
        uint64_t v90 = MEMORY[0x270FA5388](v89);
        uint64_t v91 = (char *)&v117 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v90);
        uint64_t v93 = (char *)&v117 - v92;
        uint64_t v94 = v127;
        sub_251D39398(v144, v127, type metadata accessor for ScrubberElement);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v95 = v94;
          uint64_t v96 = v141;
          sub_251D39620(v95, v141, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
          v148(v93, v96 + *(int *)(v142 + 24), v63);
          int v97 = type metadata accessor for ReachabilityEvent;
        }
        else
        {
          uint64_t v98 = v94;
          uint64_t v96 = v139;
          sub_251D39620(v98, v139, (uint64_t (*)(void))type metadata accessor for CameraClip);
          v148(v93, v96 + *(int *)(v140 + 24), v63);
          int v97 = type metadata accessor for CameraClip;
        }
        sub_251D396EC(v96, (uint64_t (*)(void))v97);
        uint64_t v99 = v150(v91, v93, v63);
        uint64_t v138 = &v117;
        uint64_t v100 = MEMORY[0x270FA5388](v99);
        unint64_t KeyPath = (unint64_t)&v117 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v100);
        uint64_t v102 = (char *)&v117 - v101;
        uint64_t v103 = v128;
        sub_251D39398(v143, v128, type metadata accessor for ScrubberElement);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v104 = v103;
          uint64_t v105 = v141;
          sub_251D39620(v104, v141, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
          v148(v102, v105 + *(int *)(v142 + 24), v63);
          uint64_t v106 = type metadata accessor for ReachabilityEvent;
        }
        else
        {
          uint64_t v107 = v103;
          uint64_t v105 = v139;
          sub_251D39620(v107, v139, (uint64_t (*)(void))type metadata accessor for CameraClip);
          v148(v102, v105 + *(int *)(v140 + 24), v63);
          uint64_t v106 = type metadata accessor for CameraClip;
        }
        sub_251D396EC(v105, (uint64_t (*)(void))v106);
        uint64_t v56 = v129;
        v150((char *)KeyPath, v102, v63);
        char v108 = sub_251F34C90();
        ((void (*)(unint64_t, uint64_t))v52)(KeyPath, v63);
        ((void (*)(char *, uint64_t))v52)(v91, v63);
        sub_251D396EC(v143, type metadata accessor for ScrubberElement);
        uint64_t v54 = v151;
        if ((v108 & 1) == 0)
        {
          uint64_t v58 = v145;
          uint64_t v2 = v131;
          unint64_t v37 = v130;
LABEL_42:
          swift_bridgeObjectRelease();
          goto LABEL_43;
        }
        uint64_t v35 = (uint64_t *)(v145 - 1);
        uint64_t v2 = v131;
        unint64_t v37 = v130;
        uint64_t v19 = v135;
        uint64_t v58 = v136;
      }
      if ((uint64_t)v35 < v58) {
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
  }
  else
  {
    uint64_t v58 = 0;
    uint64_t v54 = v151;
LABEL_43:
    uint64_t v19 = v118;
    sub_251D39398(v144, v118, type metadata accessor for ScrubberElement);
    unint64_t KeyPath = swift_getKeyPath();
    uint64_t v152 = v2;
    unint64_t v52 = v37;
    sub_251F34F10();
    swift_release();
    uint64_t v152 = v2;
    swift_getKeyPath();
    sub_251F34F30();
    swift_release();
    uint64_t v35 = v125;
    swift_beginAccess();
    if (*(void *)(*v35 + 16) >= v58)
    {
      if ((v58 & 0x8000000000000000) == 0)
      {
        uint64_t v109 = v117;
        sub_251D39620(v19, v117, type metadata accessor for ScrubberElement);
        sub_251D39400(v58, v58, v109);
        swift_endAccess();
        uint64_t v152 = v2;
        swift_getKeyPath();
        sub_251F34F20();
        swift_release();
        goto LABEL_46;
      }
      goto LABEL_51;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_251A9269C(v52);
  unint64_t v52 = result;
  *(void *)uint64_t v19 = result;
LABEL_11:
  uint64_t v54 = v151;
  if ((KeyPath & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (KeyPath < *(void *)(v52 + 16))
  {
    sub_251D39688(v144, v52+ ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80))+ *(void *)(v135 + 72) * KeyPath);
    swift_endAccess();
    uint64_t v153 = v2;
    swift_getKeyPath();
    sub_251F34F20();
    swift_release();
    sub_251D396EC((uint64_t)v35, type metadata accessor for ScrubberElement);
LABEL_46:
    uint64_t v110 = v123;
    uint64_t v111 = v144;
    uint64_t v112 = ScrubberElement.id.getter(v123);
    MEMORY[0x270FA5388](v112);
    uint64_t v114 = (char *)&v117 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v114, v110, v120);
    uint64_t v116 = v124;
    sub_251D39398(v111, v124, type metadata accessor for ScrubberElement);
    v121((char *)v116, 0, 1, v54);
    swift_getKeyPath();
    uint64_t v152 = v2;
    sub_251F34F10();
    swift_release();
    uint64_t v152 = v2;
    swift_getKeyPath();
    sub_251F34F30();
    swift_release();
    swift_beginAccess();
    sub_2519F8D08(v116, (uint64_t)v114);
    swift_endAccess();
    uint64_t v152 = v2;
    swift_getKeyPath();
    sub_251F34F20();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t CameraEventCache.deinit()
{
  sub_251D396EC(v0 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache_cameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache___observationRegistrar;
  uint64_t v2 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t CameraEventCache.__deallocating_deinit()
{
  sub_251D396EC(v0 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache_cameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache___observationRegistrar;
  uint64_t v2 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_251D39398(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D39400(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_251F0FFF4(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for ScrubberElement(0) - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = sub_251F36710();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_251D39398(a3, v17, type metadata accessor for ScrubberElement);
  }
  return sub_251A1B064(a3, &qword_269BA2AD8);
}

uint64_t sub_251D39620(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D39688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D396EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D3974C()
{
  return type metadata accessor for CameraEventCache();
}

uint64_t sub_251D39754()
{
  uint64_t result = type metadata accessor for StaticCameraProfile();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F34F50();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for CameraEventCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CameraEventCache);
}

uint64_t sub_251D39848(uint64_t a1, uint64_t a2)
{
  return sub_251D39C4C(a1, a2, (uint64_t (*)(void))sub_251F0F4F8, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

uint64_t sub_251D39874(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_251F366C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x2533AB3B0](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for MockObserver();
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_251F366C0();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_251F36710();
          __break(1u);
          return result;
        }
        unint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_251F366C0();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_251F35AE0();
}

uint64_t sub_251D39B54()
{
  return sub_251D37840(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elementsByUUID);
}

uint64_t sub_251D39B78()
{
  return sub_251D37840(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elements);
}

uint64_t sub_251D39B9C(uint64_t a1, uint64_t a2)
{
  return sub_251D39C4C(a1, a2, (uint64_t (*)(void))sub_251F0F18C, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

uint64_t sub_251D39BC8(uint64_t a1, uint64_t a2)
{
  return sub_251D39C4C(a1, a2, (uint64_t (*)(void))sub_251F1005C, type metadata accessor for StaticRoom);
}

uint64_t sub_251D39BF4(uint64_t a1, uint64_t a2)
{
  return sub_251D39C4C(a1, a2, (uint64_t (*)(void))sub_251F0F1C0, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_251D39C20(uint64_t a1, uint64_t a2)
{
  return sub_251D39C4C(a1, a2, (uint64_t (*)(void))sub_251F0F5FC, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

uint64_t sub_251D39C4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(a4(0) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251D39E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = sub_251F35030();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = sub_251F34FE0();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251D39FC0, v3, 0);
}

uint64_t sub_251D39FC0()
{
  uint64_t v75 = v0;
  unint64_t v1 = v0;
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9DEE0);
  sub_251AF0624(v3, v2);
  swift_retain();
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[21];
  uint64_t v9 = v0[11];
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v74 = v11;
    *(_DWORD *)uint64_t v10 = 134218242;
    v1[6] = *(void *)(v9 + 120);
    sub_251F361D0();
    swift_release();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t updated = CoordinationSnapshot.UpdateType.description.getter();
    v1[7] = sub_251A00E84(updated, v13, &v74);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251AF0688(v8);
    _os_log_impl(&dword_2519F3000, v5, v6, "new snapshot based on iteration %ld, %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }
  else
  {
    swift_release();
    sub_251AF0688(v8);
  }

  unint64_t v14 = (unint64_t)sub_251D3AF4C(v1[9]);
  char v16 = v15;
  if (qword_269B9C428 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_251F35020();
  __swift_project_value_buffer(v17, (uint64_t)qword_269BF3188);
  sub_251F34FD0();
  uint64_t v18 = sub_251F35000();
  os_signpost_type_t v19 = sub_251F36060();
  uint64_t v20 = sub_251F36170();
  unint64_t v67 = v14;
  char format = v16;
  if ((v20 & 1) == 0) {
    goto LABEL_12;
  }
  if (v16)
  {
    if (HIDWORD(v14))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >> 11 == 27)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (WORD1(v14) > 0x10u) {
      goto LABEL_41;
    }
    unint64_t v14 = (unint64_t)(v1 + 3);
  }
  else if (!v14)
  {
    __break(1u);
LABEL_12:
    uint64_t v23 = v1[16];

    uint64_t v24 = *(void (**)(void, uint64_t, uint64_t))(v23 + 16);
    goto LABEL_18;
  }
  uint64_t v25 = v1[18];
  uint64_t v27 = v1[15];
  uint64_t v26 = v1[16];
  uint64_t v28 = *(void (**)(uint64_t, void, uint64_t))(v26 + 16);
  v28(v25, v1[19], v27);
  uint64_t v29 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v29 = 0;
  os_signpost_id_t v30 = sub_251F34FC0();
  _os_signpost_emit_with_name_impl(&dword_2519F3000, v18, v19, v30, (const char *)v14, "", v29, 2u);
  MEMORY[0x2533AC760](v29, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  uint64_t v24 = v28;
LABEL_18:
  uint64_t v31 = v1 + 18;
  uint64_t v33 = v1[19];
  uint64_t v32 = v1[20];
  uint64_t v34 = v1[15];
  uint64_t v35 = v1[16];
  unint64_t v37 = v1[10];
  uint64_t v36 = v1[11];
  uint64_t v70 = v1[9];
  uint64_t v66 = v24;
  v24(v1[18], v33, v34);
  sub_251F35060();
  swift_allocObject();
  v1[22] = sub_251F35050();
  uint64_t v38 = v33;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v39(v38, v34);
  sub_251AF0624(v70, v32);
  uint64_t v74 = *(void *)(v36 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251D7BA60(v32, v37, &v74, (unint64_t *)&v73);
  uint64_t v40 = v73;
  v1[23] = v73;
  uint64_t v71 = v36;
  uint64_t v41 = swift_bridgeObjectRetain();
  char v42 = sub_251AF8A48(v41, v40);
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v44 = sub_251F36050();
  uint64_t v20 = sub_251F36170();
  if ((v20 & 1) == 0)
  {
LABEL_22:

    uint64_t v31 = v1 + 17;
    goto LABEL_31;
  }
  uint64_t v65 = v39;
  char v64 = v42;
  os_signpost_type_t v72 = v44;
  if (format)
  {
    if (HIDWORD(v67))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v67 >> 11 == 27)
    {
LABEL_45:
      __break(1u);
      return MEMORY[0x270FA2498](v20, v21, v22);
    }
    if (WORD1(v67) > 0x10u) {
      goto LABEL_43;
    }
    uint64_t v39 = (void (*)(uint64_t, uint64_t))(v1 + 2);
  }
  else
  {
    uint64_t v39 = (void (*)(uint64_t, uint64_t))v67;
    if (!v67)
    {
      __break(1u);
      goto LABEL_22;
    }
  }
  uint64_t v46 = v1[13];
  uint64_t v45 = v1[14];
  uint64_t v47 = v1[12];
  swift_retain();
  sub_251F35070();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v46 + 88))(v45, v47) == *MEMORY[0x263F90238])
  {
    int v48 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(void, void))(v1[13] + 8))(v1[14], v1[12]);
    int v48 = "";
  }
  formata = (char *)v48;
  uint64_t v49 = v1[17];
  uint64_t v50 = v1[15];
  v66(v1[18], v49, v50);
  char v51 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)char v51 = 0;
  os_signpost_id_t v52 = sub_251F34FC0();
  _os_signpost_emit_with_name_impl(&dword_2519F3000, v43, v72, v52, (const char *)v39, formata, v51, 2u);
  MEMORY[0x2533AC760](v51, -1, -1);

  uint64_t v39 = v65;
  v65(v49, v50);
  char v42 = v64;
LABEL_31:
  uint64_t v20 = ((uint64_t (*)(void, void))v39)(*v31, v1[15]);
  if ((v42 & 1) == 0)
  {
    uint64_t v57 = v1[11];
    uint64_t v58 = *(void *)(v57 + 120);
    BOOL v59 = __OFADD__(v58, 1);
    uint64_t v60 = v58 + 1;
    if (!v59)
    {
      *(void *)(v57 + 120) = v60;
      *(void *)(v71 + 112) = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[24] = sub_251F35C80();
      v1[25] = sub_251F35C70();
      uint64_t v61 = sub_251F35C00();
      uint64_t v63 = v62;
      uint64_t v20 = (uint64_t)sub_251D3A730;
      uint64_t v21 = v61;
      uint64_t v22 = v63;
      return MEMORY[0x270FA2498](v20, v21, v22);
    }
    __break(1u);
    goto LABEL_40;
  }
  swift_release();
  uint64_t v53 = v1[11];
  *(void *)v1[8] = v1[23];
  uint64_t v54 = *(void *)(v53 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = (uint64_t (*)(uint64_t))v1[1];
  return v55(v54);
}

uint64_t sub_251D3A730()
{
  swift_release();
  if (qword_26B21E6D8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 88);
  return MEMORY[0x270FA2498](sub_251D3A7C8, v1, 0);
}

uint64_t sub_251D3A7C8()
{
  *(void *)(v0 + 208) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D3A854, v2, v1);
}

uint64_t sub_251D3A854()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  *(void *)(v0 + 216) = qword_26B21E630;
  return MEMORY[0x270FA2498](sub_251D3A8CC, v1, 0);
}

uint64_t sub_251D3A8CC()
{
  v0[28] = *(void *)(v0[11] + 112);
  swift_bridgeObjectRetain();
  v0[29] = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D3A968, v2, v1);
}

uint64_t sub_251D3A968()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = (void *)v0[27];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[4] = v1;
  swift_bridgeObjectRetain();
  id v3 = v2;
  sub_251F35130();
  if (qword_269B9C2B8 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[11];
  v0[5] = v0[28];
  sub_251F350C0();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251D3AA80, v4, 0);
}

uint64_t sub_251D3AA80()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 88);
  **(void **)(v0 + 64) = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v1 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t CoordinationSnapshotModerator.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CoordinationSnapshotModerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t CoordinationSnapshotModerator.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_251D3ABB0()
{
  uint64_t v0 = sub_251F35020();
  __swift_allocate_value_buffer(v0, qword_269BF3188);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BF3188);
  return sub_251F35010();
}

uint64_t sub_251D3ABFC()
{
  uint64_t v0 = sub_251F34B70();
  __swift_allocate_value_buffer(v0, qword_269BA2AF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BA2AF0);
  id v1 = objc_msgSend(self, sel_defaultManager);
  id v2 = objc_msgSend(v1, sel_URLForUbiquityContainerIdentifier_, 0);

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2)
  {
    uint64_t v7 = *(void *)(v0 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34B40();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v6, v9, v0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v6, 0, 1, v0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v0);
    if (result != 1)
    {
      sub_251F34B20();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v6, v0);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 56))(v6, 1, 1, v0);
  }
  __break(1u);
  return result;
}

uint64_t static CoordinationSnapshotModerator.iCloudDocumentsURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C430 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F34B70();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA2AF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t type metadata accessor for CoordinationSnapshotModerator()
{
  return self;
}

uint64_t method lookup function for CoordinationSnapshotModerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoordinationSnapshotModerator);
}

char *sub_251D3AF3C()
{
  return &v1;
}

const char *sub_251D3AF4C(uint64_t a1)
{
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251AF0624(a1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = "updateType: .all";
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_251AF0688((uint64_t)v4);
      uint64_t result = "updateType: .remove(_)";
      break;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
      uint64_t result = "updateType: .alarms(_,_)";
      break;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
      uint64_t result = "updateType: .removeAlarms(_,_)";
      break;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
      swift_bridgeObjectRelease();
      uint64_t v9 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v4, v9);
      uint64_t result = "updateType: .timers(_,_)";
      break;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
      uint64_t result = "updateType: .removeTimers(_,_)";
      break;
    case 6:
      uint64_t result = "updateType: .snapshotStream(_)";
      break;
    case 7:
      return result;
    default:
      sub_251AF0688((uint64_t)v4);
      uint64_t result = "updateType: .data(_)";
      break;
  }
  return result;
}

uint64_t static String.hfLocalized(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = sub_251F356B0();
  uint64_t v4 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v32 = v5;
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v33 = v6;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v7 = sub_251F35660();
  if (!qword_27025FCD0)
  {
    uint64_t v14 = 95;
    goto LABEL_20;
  }
  uint64_t v8 = 0;
  uint64_t v21 = v4;
  os_signpost_id_t v30 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v31 = v4 + 16;
  uint64_t v28 = "gs-NativeMatterSupport";
  uint64_t v29 = qword_27025FCD0 - 1;
  uint64_t v26 = "HFSensitiveStrings-WalletKeyUWB";
  uint64_t v27 = "HFSensitiveStrings-RVC";
  uint64_t v24 = "iveWidgets-RestrictedGuests";
  uint64_t v25 = "gs-RestrictedGuest";
  uint64_t v22 = "updateType: .all";
  uint64_t v23 = "gs-ResidentSelection";
  while (1)
  {
    uint64_t v9 = v8 + 1;
    MEMORY[0x270FA5388](v7);
    v30((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v34);
    if (qword_26B21F148 != -1) {
      swift_once();
    }
    uint64_t v11 = (void *)qword_26B220CD0;
    uint64_t v12 = sub_251F34DE0();
    MEMORY[0x270FA5388](v12 - 8);
    id v13 = v11;
    sub_251F34DD0();
    uint64_t v14 = sub_251F35750();
    uint64_t v16 = v15;
    uint64_t v7 = swift_bridgeObjectRelease();
    if (v14 != v35 || v16 != v36)
    {
      uint64_t v7 = sub_251F36B10();
      if ((v7 & 1) == 0 && (v14 != 95 || v16 != 0xE100000000000000)) {
        break;
      }
    }
    if (v29 == v8) {
      goto LABEL_18;
    }
LABEL_4:
    ++v8;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      JUMPOUT(0x251D3B60CLL);
    }
  }
  uint64_t v7 = sub_251F36B10();
  if (v29 != v8 && (v7 & 1) != 0) {
    goto LABEL_4;
  }
LABEL_18:
  uint64_t v4 = v21;
LABEL_20:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v33, v34);
  return v14;
}

uint64_t static String.hfLocalizedPercentage(_:minValue:maxValue:)()
{
  sub_251B3F4F4();
  uint64_t v0 = (void *)sub_251F360F0();
  char v1 = (void *)sub_251F360F0();
  uint64_t v2 = (void *)sub_251F360F0();
  uint64_t v3 = sub_251D3B848(v0);

  return v3;
}

id sub_251D3B6C8()
{
  _s25_doNotTouchThisDummyClassCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26B220CD0 = (uint64_t)result;
  return result;
}

uint64_t static String.hfLocalizedWithFormat(_:_:)(uint64_t a1, uint64_t a2)
{
  static String.hfLocalized(_:)(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_251F35720();
  swift_bridgeObjectRelease();
  return v2;
}

id static String.hfLocalizedWiFi(_:)(uint64_t a1, uint64_t a2)
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v5 = result;
    MobileGestalt_get_wapiCapability();

    swift_bridgeObjectRetain();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v6 = static String.hfLocalized(_:)(a1, a2);
    swift_bridgeObjectRelease();
    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_251D3B848(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A28]), sel_init);
  objc_msgSend(v2, sel_setNumberStyle_, 3);
  objc_msgSend(v2, sel_setUsesSignificantDigits_, 0);
  sub_251B3F4F4();
  uint64_t v3 = (void *)sub_251F36100();
  objc_msgSend(v2, sel_setMultiplier_, v3);

  uint64_t v4 = sub_251F34DE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34DD0();
  uint64_t v8 = (void *)sub_251F34DB0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v2, sel_setLocale_, v8);

  id v9 = objc_msgSend(v2, sel_stringFromNumber_, a1);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_251F356F0();
  }
  else
  {
    id v12 = objc_msgSend(a1, sel_description);
    uint64_t v13 = sub_251F356F0();
    uint64_t v15 = v14;

    v17[0] = v13;
    v17[1] = v15;
    sub_251F35800();

    return v17[0];
  }
  return v11;
}

uint64_t _s25_doNotTouchThisDummyClassCMa()
{
  return self;
}

void MTAlarm.alarmRepeatSchedule.getter(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_repeatSchedule);
  type metadata accessor for MTAlarmRepeatSchedule(0);
  a1[3] = v4;
  a1[4] = &protocol witness table for MTAlarmRepeatSchedule;
  *a1 = v3;
}

double MTAlarm.mutableCopy()@<D0>(uint64_t a1@<X8>)
{
  v3.super_class = (Class)MEMORY[0x263F55D40];
  objc_msgSendSuper2(&v3, sel_mutableCopy);
  sub_251F36240();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_251D3BB38()
{
  return objc_msgSend(*v0, sel_hour);
}

id sub_251D3BB48()
{
  return objc_msgSend(*v0, sel_minute);
}

uint64_t sub_251D3BB58()
{
  id v1 = objc_msgSend(*v0, sel_title);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_251F356F0();

  return v3;
}

id sub_251D3BBC0()
{
  return objc_msgSend(*v0, sel_isEnabled);
}

void sub_251D3BBE4()
{
  id v1 = objc_msgSend(*v0, sel_alarmID);
  sub_251F34D80();
}

void sub_251D3BC44(void *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_repeatSchedule);
  type metadata accessor for MTAlarmRepeatSchedule(0);
  a1[3] = v4;
  a1[4] = &protocol witness table for MTAlarmRepeatSchedule;
  *a1 = v3;
}

double sub_251D3BC90@<D0>(uint64_t a1@<X8>)
{
  v4.receiver = *v1;
  v4.super_class = (Class)MEMORY[0x263F55D40];
  objc_msgSendSuper2(&v4, sel_mutableCopy);
  sub_251F36240();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_251D3BD28(uint64_t a1)
{
  return objc_msgSend(*v1, sel_setHour_, a1);
}

id (*sub_251D3BD3C(void *a1))(uint64_t a1)
{
  id v3 = *v1;
  a1[1] = *v1;
  *a1 = objc_msgSend(v3, sel_hour);
  return sub_251D3BD90;
}

id sub_251D3BD90(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setHour_, *(void *)a1);
}

id sub_251D3BDA4(uint64_t a1)
{
  return objc_msgSend(*v1, sel_setMinute_, a1);
}

id (*sub_251D3BDB8(void *a1))(uint64_t a1)
{
  id v3 = *v1;
  a1[1] = *v1;
  *a1 = objc_msgSend(v3, sel_minute);
  return sub_251D3BE0C;
}

id sub_251D3BE0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinute_, *(void *)a1);
}

void sub_251D3BE20(uint64_t a1, uint64_t a2)
{
  id v3 = *v2;
  if (a2)
  {
    id v4 = (id)sub_251F356C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  objc_msgSend(v3, sel_setTitle_, v4);
}

void (*sub_251D3BE98(uint64_t **a1))(void *a1)
{
  id v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_251D3BF3C(v2);
  return sub_251D3BEF4;
}

void sub_251D3BEF4(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_251D3BF3C(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(v1, sel_title);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_251F356F0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_251D3BFC4;
}

void sub_251D3BFC4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (a2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      id v4 = (id)sub_251F356C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend(*(id *)(a1 + 16), sel_setTitle_, v4);
    swift_bridgeObjectRelease();
  }
  else if (v3)
  {
    id v4 = (id)sub_251F356C0();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(a1 + 16), sel_setTitle_, v4);
  }
  else
  {
    id v4 = 0;
    objc_msgSend(*(id *)(a1 + 16), sel_setTitle_, 0);
  }
}

id sub_251D3C098(char a1)
{
  return objc_msgSend(*v1, sel_setEnabled_, a1 & 1);
}

id (*sub_251D3C0B0(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)a1 = *v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v3, sel_isEnabled);
  return sub_251D3C104;
}

id sub_251D3C104(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setEnabled_, *(unsigned __int8 *)(a1 + 8));
}

Swift::Bool __swiftcall MTAlarmRepeatSchedule.contains(_:)(Swift::UInt a1)
{
  return (v1 & a1) != 0;
}

unint64_t sub_251D3C128(uint64_t a1)
{
  unint64_t result = sub_251D3C150();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_251D3C150()
{
  unint64_t result = qword_269BA2B18;
  if (!qword_269BA2B18)
  {
    sub_251A1A568(255, &qword_269BA2B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2B18);
  }
  return result;
}

unint64_t sub_251D3C1AC(uint64_t a1)
{
  unint64_t result = sub_251D3C1D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_251D3C1D4()
{
  unint64_t result = qword_269BA2B28;
  if (!qword_269BA2B28)
  {
    sub_251A1A568(255, &qword_269BA2B30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2B28);
  }
  return result;
}

uint64_t sub_251D3C23C()
{
  return *(void *)v0;
}

uint64_t dispatch thunk of HomeAlarmRepeatSchedule.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeAlarmRepeatSchedule.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HomeAlarm.hour.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HomeAlarm.minute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HomeAlarm.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HomeAlarm.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of HomeAlarm.alarmID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HomeAlarm.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of HomeAlarm.alarmRepeatSchedule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HomeAlarm.mutableCopy()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HomeMutableAlarm.hour.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HomeMutableAlarm.hour.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of HomeMutableAlarm.minute.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of HomeMutableAlarm.minute.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of HomeMutableAlarm.title.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HomeMutableAlarm.title.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HomeMutableAlarm.isEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of HomeMutableAlarm.isEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

BOOL sub_251D3C3AC(uint64_t a1)
{
  return (*v1 & a1) != 0;
}

uint64_t sub_251D3C3BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID;
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_251D3C46C()
{
  return type metadata accessor for MockAlarm();
}

uint64_t type metadata accessor for MockAlarm()
{
  uint64_t result = qword_269BA2B38;
  if (!qword_269BA2B38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251D3C4C0()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_251D3C580(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 32) = a1;
  return result;
}

uint64_t (*sub_251D3C5C4())()
{
  return j__swift_endAccess;
}

uint64_t sub_251D3C61C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 40) = a1;
  return result;
}

uint64_t (*sub_251D3C660())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251D3C6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  *(void *)(v5 + 48) = a1;
  *(void *)(v5 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_251D3C710())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251D3C768(char a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 72) = a1;
  return result;
}

uint64_t (*sub_251D3C7AC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251D3C804()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v2);
  sub_251AD2788();
  sub_251F35610();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_251F36D00();
}

uint64_t sub_251D3C914()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v2);
  sub_251AD2788();
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_251D3CA18()
{
  sub_251F36CA0();
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v2);
  sub_251AD2788();
  sub_251F35610();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_251F36D00();
}

uint64_t sub_251D3CB24()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(v1 + 32);
}

uint64_t sub_251D3CB64()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(v1 + 40);
}

uint64_t sub_251D3CBA4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_251D3CBF4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 72);
}

uint64_t sub_251D3CC34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID;
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_251D3CCAC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_251D3CCE0(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  a1[3] = &type metadata for MockAlarmRepeatSchedule;
  a1[4] = &off_270271150;
  *a1 = v2;
}

uint64_t sub_251D3CD04@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  a1[3] = type metadata accessor for MockAlarm();
  a1[4] = sub_251D3CDC0(&qword_269BA2B60);
  *a1 = v3;
  return swift_retain();
}

BOOL sub_251D3CD70(uint64_t *a1, uint64_t *a2)
{
  return sub_251D3CE7C(*a1, *a2);
}

uint64_t sub_251D3CD7C(uint64_t a1)
{
  uint64_t result = sub_251D3CDC0(&qword_269BA2B48);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_251D3CDC0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MockAlarm();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251D3CE04()
{
  return sub_251D3CDC0(&qword_269BA2B50);
}

uint64_t sub_251D3CE38(uint64_t a1)
{
  uint64_t result = sub_251D3CDC0(&qword_269BA2B58);
  *(void *)(a1 + 8) = result;
  return result;
}

BOOL sub_251D3CE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = v5[8];
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(char *, uint64_t, uint64_t))v5[2];
  uint64_t v9 = v8(v7, a1 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v4);
  MEMORY[0x270FA5388](v9);
  v8(v7, a2 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v4);
  char v10 = sub_251F34D70();
  uint64_t v11 = (void (*)(char *, uint64_t))v5[1];
  v11(v7, v4);
  v11(v7, v4);
  if ((v10 & 1) == 0) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 32);
  swift_beginAccess();
  if (v12 != *(void *)(a2 + 32)) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 40);
  swift_beginAccess();
  if (v13 != *(void *)(a2 + 40)) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a2 + 56);
  if (!v15)
  {
    if (!v16) {
      goto LABEL_11;
    }
    return 0;
  }
  if (!v16) {
    return 0;
  }
  if (v14 == *(void *)(a2 + 48) && v15 == v16 || (char v17 = sub_251F36B10(), result = 0, (v17 & 1) != 0))
  {
LABEL_11:
    swift_beginAccess();
    int v19 = *(unsigned __int8 *)(a1 + 72);
    swift_beginAccess();
    if (v19 == *(unsigned __int8 *)(a2 + 72)) {
      return *(void *)(a1 + 64) == *(void *)(a2 + 64);
    }
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MockAlarmRepeatSchedule()
{
  return &type metadata for MockAlarmRepeatSchedule;
}

unint64_t sub_251D3D128()
{
  unint64_t result = qword_269BA2B68;
  if (!qword_269BA2B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2B68);
  }
  return result;
}

uint64_t sub_251D3D180()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v1 = 0xD00000000000001FLL;
    uint64_t v2 = "HFServiceDescriptionCalibrating";
LABEL_3:
    unint64_t v3 = (unint64_t)(v2 - 32) | 0x8000000000000000;
LABEL_6:
    uint64_t v4 = static String.hfLocalized(_:)(v1, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v4;
  }
  if (*(unsigned char *)(v0 + 17) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v3 = 0x8000000251F70F30;
    uint64_t v1 = 0xD00000000000001CLL;
    goto LABEL_6;
  }
  if (*(unsigned char *)(v0 + 18))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v1 = 0xD00000000000002ALL;
    uint64_t v2 = "HFMediaAccessoryStateSettingsSyncingStatus";
    goto LABEL_3;
  }
  if (*(void *)(v0 + 8))
  {
    uint64_t v4 = *(void *)v0;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (*(void *)(v0 + 48)) {
      uint64_t v4 = *(void *)(v0 + 40);
    }
    else {
      uint64_t v4 = *(void *)(v0 + 24);
    }
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_251D3D2E0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v2 = 0xD00000000000001FLL;
    unint64_t v3 = "HFServiceDescriptionCalibrating";
LABEL_7:
    unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
    goto LABEL_8;
  }
  if (*(unsigned char *)(v0 + 17) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0x8000000251F70F30;
    uint64_t v2 = 0xD00000000000001CLL;
LABEL_8:
    uint64_t v5 = static String.hfLocalized(_:)(v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5;
  }
  if (*(unsigned char *)(v0 + 18))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v2 = 0xD00000000000002ALL;
    unint64_t v3 = "HFMediaAccessoryStateSettingsSyncingStatus";
    goto LABEL_7;
  }
  if (!*(void *)(v0 + 8))
  {
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v7 = *(void *)(v0 + 40);
    if (*(void *)(v0 + 32))
    {
      if (v1)
      {
        uint64_t v8 = *(void *)(v0 + 24);
        swift_bridgeObjectRetain();
        sub_251F35800();
        sub_251F35800();
        return v8;
      }
    }
    else if (v1)
    {
      swift_bridgeObjectRetain();
      return v7;
    }
    swift_bridgeObjectRetain();
    return v5;
  }
  uint64_t v5 = *(void *)v0;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t StatusStrings.errorString.getter()
{
  if (v0[2])
  {
    uint64_t v1 = 0xD00000000000001FLL;
    uint64_t v2 = "HFServiceDescriptionCalibrating";
LABEL_3:
    unint64_t v3 = (unint64_t)(v2 - 32) | 0x8000000000000000;
    return static String.hfLocalized(_:)(v1, v3);
  }
  if (*((unsigned char *)v0 + 17))
  {
    unint64_t v3 = 0x8000000251F70F30;
    uint64_t v1 = 0xD00000000000001CLL;
    return static String.hfLocalized(_:)(v1, v3);
  }
  if (*((unsigned char *)v0 + 18))
  {
    uint64_t v1 = 0xD00000000000002ALL;
    uint64_t v2 = "HFMediaAccessoryStateSettingsSyncingStatus";
    goto LABEL_3;
  }
  uint64_t v4 = *v0;
  if (v0[1]) {
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for StatusStrings()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StatusStrings(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StatusStrings(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StatusStrings(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StatusStrings(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusStrings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusStrings()
{
  return &type metadata for StatusStrings;
}

uint64_t sub_251D3D7D0@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v165 = a3;
  uint64_t v166 = a5;
  uint64_t v169 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v159 = (uint64_t)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v157 = (void *)((char *)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v152 = (char *)&v140 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v151 = (char *)&v140 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v158 = (char *)&v140 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v156 = (uint64_t)&v140 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v155 = (char *)&v140 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v154 = (char *)&v140 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v153 = (uint64_t)&v140 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v140 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v168 = (uint64_t)&v140 - v36;
  unint64_t v37 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v167 = *((void *)v37 - 1);
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v140 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v40 = *a4;
  id v170 = a1;
  id v41 = objc_msgSend(a1, sel_accessory);
  if (v41)
  {
    char v42 = v41;
    id v43 = objc_msgSend(v41, sel_home);
    if (v43)
    {
      uint64_t v164 = v35;
      id v148 = v43;
      id v160 = v42;
      int v149 = v40;
      uint64_t v144 = v18;
      uint64_t v44 = sub_251F34DA0();
      uint64_t v143 = &v140;
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v46 = *(void **)(v45 + 64);
      MEMORY[0x270FA5388](v44);
      unint64_t v47 = ((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF0;
      unsigned int v163 = (char *)&v140 - v47;
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v147 = (uint64_t)&v140;
      MEMORY[0x270FA5388](v48 - 8);
      uint64_t v50 = (char *)&v140 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v51 = objc_msgSend(v170, sel_accessory);
      uint64_t v161 = v45;
      uint64_t v146 = a6;
      uint64_t v145 = v11;
      id v141 = v46;
      if (v51)
      {
        os_signpost_id_t v52 = v51;
        id v53 = objc_msgSend(v51, sel_uniqueIdentifier);

        MEMORY[0x270FA5388](v54);
        sub_251F34D80();

        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
        v55(v50, (char *)&v140 - v47, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v50, 0, 1, v44);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v50, 1, v44) != 1)
        {
          v55(v163, v50, v44);
LABEL_12:
          uint64_t v59 = v168;
          uint64_t v58 = v169;
          uint64_t v60 = (uint64_t)v164;
          uint64_t v61 = v169[2];
          uint64_t v162 = v44;
          if (v61 && (unint64_t v62 = sub_2519FE584((uint64_t)v163), (v63 & 1) != 0))
          {
            unint64_t v64 = v62;
            uint64_t v65 = v58[7];
            uint64_t v66 = type metadata accessor for StaticAccessory(0);
            uint64_t v67 = *(void *)(v66 - 8);
            sub_251D4EAF8(v65 + *(void *)(v67 + 72) * v64, v168, type metadata accessor for StaticAccessory);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v168, 0, 1, v66);
            uint64_t v59 = v168;
          }
          else
          {
            uint64_t v68 = type metadata accessor for StaticAccessory(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v59, 1, 1, v68);
          }
          swift_bridgeObjectRelease();
          id v69 = objc_msgSend(v160, sel_room);
          if (!v69) {
            id v69 = objc_msgSend(v148, sel_roomForEntireHome);
          }
          id v70 = objc_msgSend(v170, sel_uniqueIdentifier);
          sub_251F34D80();

          sub_251A1B128(v59, v60, &qword_26B21F240);
          uint64_t v71 = (int *)type metadata accessor for StaticAccessory(0);
          uint64_t v142 = *((void *)v71 - 1);
          os_signpost_type_t v72 = *(void **)(v142 + 48);
          uint64_t v164 = (char *)(v142 + 48);
          uint64_t v169 = v72;
          int v73 = ((uint64_t (*)(uint64_t, uint64_t, int *))v72)(v60, 1, v71);
          id v74 = v141;
          if (v73 == 1)
          {
            sub_251A1B064(v60, &qword_26B21F240);
            id v75 = objc_msgSend(v69, sel_name);
            uint64_t v76 = sub_251F356F0();
            uint64_t v78 = v77;
          }
          else
          {
            uint64_t v79 = (uint64_t *)(v60 + v71[5]);
            uint64_t v76 = *v79;
            uint64_t v78 = v79[1];
            swift_bridgeObjectRetain();
            sub_251D4EA98(v60, type metadata accessor for StaticAccessory);
          }
          uint64_t v80 = v161;
          uint64_t v147 = 0x69662E6573756F68;
          uint64_t v81 = (uint64_t *)&v39[v37[5]];
          uint64_t *v81 = v76;
          v81[1] = v78;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
          unint64_t v82 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
          uint64_t v83 = swift_allocObject();
          long long v140 = xmmword_251F38650;
          *(_OWORD *)(v83 + 16) = xmmword_251F38650;
          id v84 = objc_msgSend(v69, sel_uniqueIdentifier);
          MEMORY[0x270FA5388](v84);
          unint64_t v85 = ((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v86 = v69;
          uint64_t v87 = (char *)&v140 - v85;
          sub_251F34D80();

          (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v83 + v82, v87, v162);
          uint64_t v88 = sub_251C08E40(v83);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          *(void *)&v39[v37[6]] = v88;
          id v141 = v86;
          id v89 = objc_msgSend(v86, sel_name);
          uint64_t v90 = sub_251F356F0();
          uint64_t v92 = v91;

          uint64_t v93 = (uint64_t *)&v39[v37[7]];
          *uint64_t v93 = v90;
          v93[1] = v92;
          id v94 = v160;
          HMAccessory.dateAdded.getter((uint64_t)&v39[v37[8]]);
          v39[v37[10]] = sub_251AC52B8() & 1;
          v39[v37[11]] = HMAccessory.isFavorite.getter() & 1;
          v39[v37[12]] = HMAccessory.shouldShowInDashboard.getter() & 1;
          v39[v37[13]] = objc_msgSend(v94, sel_isCurrentAccessory);
          uint64_t v95 = v168;
          uint64_t v96 = v153;
          sub_251A1B128(v168, v153, &qword_26B21F240);
          if (((unsigned int (*)(uint64_t, uint64_t, int *))v169)(v96, 1, v71) == 1)
          {
            sub_251A1B064(v96, &qword_26B21F240);
            uint64_t v97 = (uint64_t)v154;
            unint64_t v98 = 0xEA00000000006C6CLL;
          }
          else
          {
            int v99 = *(unsigned __int16 *)(v96 + v71[22]);
            sub_251D4EA98(v96, type metadata accessor for StaticAccessory);
            uint64_t v97 = (uint64_t)v154;
            unint64_t v98 = 0xEA00000000006C6CLL;
            if ((~v99 & 0xFEFC) != 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F218);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = v140;
              *(_WORD *)(inited + 32) = v99;
              uint64_t v147 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
              unint64_t v98 = v101;
              swift_setDeallocating();
            }
          }
          uint64_t v102 = (uint64_t *)&v39[v37[9]];
          *uint64_t v102 = v147;
          v102[1] = v98;
          (*(void (**)(char *, char *, uint64_t))(v161 + 16))(&v39[v37[14]], v163, v162);
          sub_251A1B128(v95, v97, &qword_26B21F240);
          if (((unsigned int (*)(uint64_t, uint64_t, int *))v169)(v97, 1, v71) == 1)
          {
            sub_251A1B064(v97, &qword_26B21F240);
            char v103 = 0;
          }
          else
          {
            char v103 = *(unsigned char *)(v97 + v71[29]);
            sub_251D4EA98(v97, type metadata accessor for StaticAccessory);
          }
          v39[v37[15]] = v103;
          id v104 = objc_msgSend(v170, sel_settings);
          if (v104)
          {
            uint64_t v105 = v104;
            id v106 = v160;
            id v107 = objc_msgSend(v104, sel_rootGroup);

            if (v107)
            {

              char v108 = 1;
LABEL_33:
              v39[v37[16]] = v108;
              uint64_t v109 = (uint64_t)v157;
              id v110 = v148;
              void *v157 = v148;
              swift_storeEnumTagMultiPayload();
              LOBYTE(v171) = v149;
              uint64_t v111 = (uint64_t)v155;
              (*(void (**)(char *, uint64_t, uint64_t, int *))(v142 + 56))(v155, 1, 1, v71);
              id v112 = v110;
              uint64_t v113 = sub_251DC9944(v109, (uint64_t)v112, v106, (char *)&v171, 1, v111, v166);
              swift_bridgeObjectRelease();
              sub_251A1B064(v111, &qword_26B21F240);
              sub_251D4EA98(v109, type metadata accessor for StateSnapshot.UpdateType);
              *(void *)&v39[v37[17]] = v113;
              uint64_t v114 = v156;
              sub_251A1B128(v95, v156, &qword_26B21F240);
              if (((unsigned int (*)(uint64_t, uint64_t, int *))v169)(v114, 1, v71) == 1)
              {
                sub_251A1B064(v114, &qword_26B21F240);
                uint64_t v115 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
                uint64_t v116 = v159;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v159, 1, 1, v115);
              }
              else
              {
                uint64_t v116 = v159;
                sub_251D4EAF8(v114 + v71[6], v159, type metadata accessor for StaticAccessory.DeviceIdentifier);
                sub_251D4EA98(v114, type metadata accessor for StaticAccessory);
                uint64_t v117 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v116, 0, 1, v117);
              }
              uint64_t v118 = (uint64_t)v158;
              sub_251A4ECF0(v116, (uint64_t)&v39[v37[18]], &qword_26B21F090);
              sub_251A1B128(v95, v118, &qword_26B21F240);
              if (((unsigned int (*)(uint64_t, uint64_t, int *))v169)(v118, 1, v71) == 1)
              {
                sub_251A1B064(v118, &qword_26B21F240);
                unsigned __int16 v119 = -260;
              }
              else
              {
                unsigned __int16 v119 = *(_WORD *)(v118 + v71[22]);
                sub_251D4EA98(v118, type metadata accessor for StaticAccessory);
              }
              unsigned __int16 v171 = v119;
              id v120 = v170;
              StaticMediaSystemComponent.PlaybackState.init(from:specialMediaCategory:)(v120, &v171, &v172);
              v39[v37[19]] = v172;
              id v121 = objc_msgSend(v120, sel_mediaSession);
              if (v121
                && (uint64_t v122 = v121,
                    id v123 = objc_msgSend(v121, sel_sleepWakeState),
                    v122,
                    (unint64_t)v123 <= 2))
              {
                char v124 = 2 - (_BYTE)v123;
              }
              else
              {
                char v124 = 3;
              }
              v39[v37[20]] = v124;
              id v125 = objc_msgSend(v106, sel_audioDestinationIdentifier);
              if (v125)
              {
                unint64_t v126 = v125;
                uint64_t v127 = sub_251F356F0();
                uint64_t v129 = v128;
              }
              else
              {

                uint64_t v127 = 0;
                uint64_t v129 = 0;
              }
              uint64_t v130 = (uint64_t)v152;
              uint64_t v131 = (uint64_t)v151;
              (*(void (**)(char *, uint64_t))(v161 + 8))(v163, v162);
              uint64_t v132 = (uint64_t *)&v39[v37[21]];
              uint64_t *v132 = v127;
              v132[1] = v129;
              uint64_t v133 = v168;
              sub_251A1B128(v168, v131, &qword_26B21F240);
              if (((unsigned int (*)(uint64_t, uint64_t, int *))v169)(v131, 1, v71) == 1)
              {
                sub_251A1B064(v131, &qword_26B21F240);
                __int16 v134 = -260;
              }
              else
              {
                __int16 v134 = *(_WORD *)(v131 + v71[22]);
                sub_251D4EA98(v131, type metadata accessor for StaticAccessory);
              }
              uint64_t v135 = v146;
              uint64_t v136 = (uint64_t)v144;
              *(_WORD *)&v39[v37[22]] = v134;
              sub_251A1B128(v133, v130, &qword_26B21F240);
              if (((unsigned int (*)(uint64_t, uint64_t, int *))v169)(v130, 1, v71) == 1)
              {
                sub_251A1B064(v130, &qword_26B21F240);
                uint64_t v137 = 0;
              }
              else
              {
                uint64_t v137 = *(void *)(v130 + v71[31]);
                swift_bridgeObjectRetain();
                sub_251D4EA98(v130, type metadata accessor for StaticAccessory);
              }
              *(void *)&v39[v37[23]] = v137;
              sub_251A4ECF0(v133, v136, &qword_26B21F240);
              if (((unsigned int (*)(uint64_t, uint64_t, int *))v169)(v136, 1, v71) == 1)
              {
                sub_251A1B064(v136, &qword_26B21F240);
                uint64_t v138 = type metadata accessor for StaticSoftwareUpdate(0);
                uint64_t v139 = (uint64_t)v145;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v145, 1, 1, v138);
              }
              else
              {
                uint64_t v139 = (uint64_t)v145;
                sub_251A1B128(v136 + v71[28], (uint64_t)v145, &qword_26B21F120);
                sub_251D4EA98(v136, type metadata accessor for StaticAccessory);
              }
              sub_251A4ECF0(v139, (uint64_t)&v39[v37[24]], &qword_26B21F120);
              v39[v37[25]] = v149;
              sub_251D4EBA4((uint64_t)v39, v135, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
              return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v167 + 56))(v135, 0, 1, v37);
            }
          }
          else
          {
            id v106 = v160;
          }
          char v108 = 0;
          goto LABEL_33;
        }
      }
      else
      {
        (*(void (**)(__objc2_class **__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(&off_26536F000, v50, 1, 1, v44);
      }
      sub_251F34D90();
      sub_251A1B064((uint64_t)v50, &qword_26B21FF90);
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v167 + 56);
  return v56(a6, 1, 1, v37);
}

uint64_t sub_251D3EA38(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 168) = a3;
  *(void *)(v4 + 176) = a4;
  *(unsigned char *)(v4 + 540) = a2;
  *(void *)(v4 + 160) = a1;
  uint64_t v5 = sub_251F35030();
  *(void *)(v4 + 184) = v5;
  *(void *)(v4 + 192) = *(void *)(v5 - 8);
  *(void *)(v4 + 200) = swift_task_alloc();
  *(void *)(v4 + 208) = swift_task_alloc();
  uint64_t v6 = sub_251F34FE0();
  *(void *)(v4 + 216) = v6;
  *(void *)(v4 + 224) = *(void *)(v6 - 8);
  *(void *)(v4 + 232) = swift_task_alloc();
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = swift_task_alloc();
  *(void *)(v4 + 256) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251D3EB94, 0, 0);
}

uint64_t sub_251D3EB94()
{
  uint64_t v1 = type metadata accessor for StateSnapshot(0);
  *(void *)(v0 + 264) = v1;
  *(_DWORD *)(v0 + 532) = *(_DWORD *)(v1 + 20);
  *(void *)(v0 + 272) = sub_251F35C80();
  *(void *)(v0 + 280) = sub_251F35C70();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D3EC40, v3, v2);
}

uint64_t sub_251D3EC40()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251D3ECD8, 0, 0);
}

uint64_t sub_251D3ECD8()
{
  *(void *)(v0 + 288) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D3ED64, v2, v1);
}

uint64_t sub_251D3ED64()
{
  swift_release();
  *(void *)(v0 + 296) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251D3EDD8, 0, 0);
}

uint64_t sub_251D3EDD8()
{
  *(void *)(v0 + 304) = sub_251F34D50();
  *(void *)(v0 + 312) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D3EE78, v2, v1);
}

uint64_t sub_251D3EE78()
{
  uint64_t v1 = (void *)v0[38];
  uint64_t v2 = (void *)v0[37];
  swift_release();
  v0[40] = objc_msgSend(v2, sel_homeFor_, v1);

  return MEMORY[0x270FA2498](sub_251D3EF08, 0, 0);
}

uint64_t sub_251D3EF08()
{
  uint64_t v73 = v0;
  if (*(void *)(v0 + 320))
  {
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0()) {
      sub_251C0A1EC(MEMORY[0x263F8EE78]);
    }
    else {
      uint64_t v1 = MEMORY[0x263F8EE88];
    }
    uint64_t v2 = *(void *)(v0 + 168);
    *(void *)(v0 + 136) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 328) = v3;
    uint64_t v4 = *(void *)(v2 + 16);
    *(void *)(v0 + 336) = v4;
    uint64_t v5 = sub_251F34DA0();
    uint64_t v6 = v5;
    if (v4)
    {
      *(void *)(v0 + 344) = v5;
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      *(void *)(v0 + 352) = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      *(_DWORD *)(v0 + 536) = v9;
      *(void *)(v0 + 360) = *(void *)(v7 + 72);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      *(void *)(v0 + 368) = v10;
      *(void *)(v0 + 376) = 0;
      uint64_t v11 = v2 + ((v9 + 32) & ~(unint64_t)v9);
      *(void *)(v0 + 384) = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      swift_bridgeObjectRetain();
      v10(v3, v11, v6);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v6);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v3, 1, v6) != 1)
      {
        uint64_t v12 = *(void *)(v0 + 352);
        *(void *)(v0 + 392) = *(void *)(v12 + 64);
        uint64_t v13 = swift_task_alloc();
        *(void *)(v0 + 400) = v13;
        (*(void (**)(void))(v12 + 32))();
        id v69 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_269BA2D20 + dword_269BA2D20);
        uint64_t v14 = (void *)swift_task_alloc();
        *(void *)(v0 + 408) = v14;
        *uint64_t v14 = v0;
        v14[1] = sub_251D3F958;
        uint64_t v15 = *(void *)(v0 + 176);
        char v16 = *(unsigned char *)(v0 + 540);
        return v69(v16, v13, v15);
      }
    }
    else
    {
      uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
      swift_bridgeObjectRetain();
      v39(v3, 1, 1, v6);
    }
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (qword_26B21ED30 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_251F35020();
    *(void *)(v0 + 424) = __swift_project_value_buffer(v40, (uint64_t)qword_26B21ED40);
    sub_251F34FD0();
    id v41 = sub_251F35000();
    os_signpost_type_t v42 = sub_251F36060();
    if (sub_251F36170())
    {
      uint64_t v43 = *(void *)(v0 + 248);
      uint64_t v44 = *(void *)(v0 + 216);
      uint64_t v45 = *(void *)(v0 + 224);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
      unint64_t v47 = (v45 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v43, *(void *)(v0 + 256), v44);
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      os_signpost_id_t v49 = sub_251F34FC0();
      _os_signpost_emit_with_name_impl(&dword_2519F3000, v41, v42, v49, "MediaSetPowerState", "", v48, 2u);
      MEMORY[0x2533AC760](v48, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
    }
    else
    {
      uint64_t v50 = *(void *)(v0 + 224);

      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
      unint64_t v47 = (v50 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    }
    id v51 = *(void **)(v0 + 320);
    uint64_t v52 = *(void *)(v0 + 248);
    uint64_t v53 = *(void *)(v0 + 256);
    uint64_t v54 = *(void *)(v0 + 216);
    uint64_t v55 = *(void *)(v0 + 224);
    *(void *)(v0 + 432) = v46;
    *(void *)(v0 + 440) = v47;
    v46(v52, v53, v54);
    sub_251F35060();
    swift_allocObject();
    *(void *)(v0 + 448) = sub_251F35050();
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    *(void *)(v0 + 456) = v56;
    *(void *)(v0 + 464) = (v55 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v56(v53, v54);
    sub_251D4687C(*(void *)(v0 + 136));
    swift_bridgeObjectRelease();
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
    sub_251D4EB60((unint64_t *)&qword_26B21EB48, (unint64_t *)&qword_26B21EB40);
    uint64_t v57 = sub_251F35E30();
    *(void *)(v0 + 472) = v57;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_251D401E4;
    uint64_t v58 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x263EF8330];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_251A5B804;
    *(void *)(v0 + 104) = &block_descriptor_12;
    *(void *)(v0 + 112) = v58;
    objc_msgSend(v51, sel_executeActions_completionHandler_, v57, v0 + 80);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_251F350A0();
    __swift_project_value_buffer(v18, (uint64_t)qword_26B21F290);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = *(void *)(v0 + 168);
    if (v21)
    {
      int v23 = *(unsigned __int8 *)(v0 + 540);
      uint64_t v24 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      uint64_t v71 = v66;
      *(_DWORD *)uint64_t v24 = 136315650;
      *(void *)(v0 + 144) = sub_251A00E84(0xD000000000000031, 0x8000000251F710B0, &v71);
      sub_251F361D0();
      *(_WORD *)(v24 + 12) = 1024;
      *(_DWORD *)(v0 + 528) = v23;
      sub_251F361D0();
      *(_WORD *)(v24 + 18) = 2080;
      int64_t v25 = *(void *)(v22 + 16);
      uint64_t v26 = MEMORY[0x263F8EE78];
      uint64_t v67 = v0;
      if (v25)
      {
        uint64_t v63 = v24;
        os_log_type_t v64 = v20;
        uint64_t v65 = v19;
        uint64_t v27 = *(void *)(v0 + 168);
        uint64_t v72 = MEMORY[0x263F8EE78];
        sub_251A3DEDC(0, v25, 0);
        uint64_t v70 = sub_251F34DA0();
        uint64_t v28 = *(void *)(v70 - 8);
        uint64_t v29 = v27 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
        uint64_t v68 = *(void *)(v28 + 72);
        uint64_t v30 = (void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
        uint64_t v31 = (void (**)(uint64_t, uint64_t))(v28 + 8);
        do
        {
          uint64_t v32 = swift_task_alloc();
          (*v30)(v32, v29, v70);
          uint64_t v33 = sub_251F34D40();
          uint64_t v35 = v34;
          (*v31)(v32, v70);
          swift_task_dealloc();
          uint64_t v26 = v72;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_251A3DEDC(0, *(void *)(v26 + 16) + 1, 1);
            uint64_t v26 = v72;
          }
          unint64_t v37 = *(void *)(v26 + 16);
          unint64_t v36 = *(void *)(v26 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_251A3DEDC(v36 > 1, v37 + 1, 1);
            uint64_t v26 = v72;
          }
          *(void *)(v26 + 16) = v37 + 1;
          uint64_t v38 = v26 + 16 * v37;
          *(void *)(v38 + 32) = v33;
          *(void *)(v38 + 40) = v35;
          v29 += v68;
          --v25;
        }
        while (v25);
        uint64_t v19 = v65;
        os_log_type_t v20 = v64;
        uint64_t v24 = v63;
      }
      uint64_t v0 = v67;
      *(void *)(v67 + 120) = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
      sub_251BFC684();
      uint64_t v59 = sub_251F35620();
      unint64_t v61 = v60;
      swift_bridgeObjectRelease();
      *(void *)(v67 + 128) = sub_251A00E84(v59, v61, &v71);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v19, v20, "%s Home not found to set power state to %{BOOL}d for device idss %s.", (uint8_t *)v24, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v66, -1, -1);
      MEMORY[0x2533AC760](v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 264) - 8) + 56))(*(void *)(v0 + 160), 1, 1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v62 = *(uint64_t (**)(void))(v0 + 8);
    return v62();
  }
}

uint64_t sub_251D3F958(uint64_t a1)
{
  *(void *)(*(void *)v1 + 416) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251D3FA58, 0, 0);
}

uint64_t sub_251D3FA58()
{
  uint64_t v59 = v0;
  uint64_t v1 = *(void **)(v0 + 416);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 400);
    uint64_t v3 = *(void *)(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 352);
    sub_251A652AC(&v58, v1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v5 = *(void *)(v0 + 400);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
    uint64_t v7 = *(void *)(v0 + 344);
    uint64_t v8 = sub_251F350A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B21F290);
    uint64_t v9 = swift_task_alloc();
    v6(v9, v5, v7);
    uint64_t v10 = sub_251F35080();
    os_log_type_t v11 = sub_251F35FB0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 400);
    uint64_t v14 = *(void *)(v0 + 344);
    uint64_t v15 = *(void *)(v0 + 352);
    if (v12)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      id v58 = v17;
      *(_DWORD *)uint64_t v16 = 136315906;
      *(void *)(v16 + 4) = sub_251A00E84(0xD00000000000007CLL, 0x8000000251F71110, (uint64_t *)&v58);
      *(_WORD *)(v16 + 12) = 2080;
      *(void *)(v16 + 14) = sub_251A00E84(0xD000000000000031, 0x8000000251F710B0, (uint64_t *)&v58);
      *(_WORD *)(v16 + 22) = 2048;
      *(void *)(v16 + 24) = 404;
      *(_WORD *)(v16 + 32) = 2080;
      sub_251D480E0((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA95E8]);
      uint64_t v18 = sub_251F36AB0();
      *(void *)(v16 + 34) = sub_251A00E84(v18, v19, (uint64_t *)&v58);
      swift_bridgeObjectRelease();
      os_log_type_t v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v20(v9, v14);
      _os_log_impl(&dword_2519F3000, v10, v11, "%s | %s | %ld | Could not create power action using deviceID: %s", (uint8_t *)v16, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v17, -1, -1);
      MEMORY[0x2533AC760](v16, -1, -1);

      v20(v13, v14);
      swift_task_dealloc();
    }
    else
    {

      BOOL v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v21(v9, v14);
      swift_task_dealloc();
      v21(v13, v14);
    }
  }
  uint64_t v22 = *(void *)(v0 + 336);
  uint64_t v23 = *(void *)(v0 + 376) + 1;
  swift_task_dealloc();
  if (v23 == v22)
  {
    uint64_t v24 = *(void *)(v0 + 328);
    uint64_t v25 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
LABEL_11:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (qword_26B21ED30 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_251F35020();
    *(void *)(v0 + 424) = __swift_project_value_buffer(v32, (uint64_t)qword_26B21ED40);
    sub_251F34FD0();
    uint64_t v33 = sub_251F35000();
    os_signpost_type_t v34 = sub_251F36060();
    if (sub_251F36170())
    {
      uint64_t v35 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 216);
      uint64_t v37 = *(void *)(v0 + 224);
      uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
      unint64_t v39 = (v37 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v38(v35, *(void *)(v0 + 256), v36);
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      os_signpost_id_t v41 = sub_251F34FC0();
      _os_signpost_emit_with_name_impl(&dword_2519F3000, v33, v34, v41, "MediaSetPowerState", "", v40, 2u);
      MEMORY[0x2533AC760](v40, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
    }
    else
    {
      uint64_t v42 = *(void *)(v0 + 224);

      uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
      unint64_t v39 = (v42 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    }
    uint64_t v43 = *(void **)(v0 + 320);
    uint64_t v44 = *(void *)(v0 + 248);
    uint64_t v45 = *(void *)(v0 + 256);
    uint64_t v46 = *(void *)(v0 + 216);
    uint64_t v47 = *(void *)(v0 + 224);
    *(void *)(v0 + 432) = v38;
    *(void *)(v0 + 440) = v39;
    v38(v44, v45, v46);
    sub_251F35060();
    swift_allocObject();
    *(void *)(v0 + 448) = sub_251F35050();
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    *(void *)(v0 + 456) = v48;
    *(void *)(v0 + 464) = (v47 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v48(v45, v46);
    sub_251D4687C(*(void *)(v0 + 136));
    swift_bridgeObjectRelease();
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
    sub_251D4EB60((unint64_t *)&qword_26B21EB48, (unint64_t *)&qword_26B21EB40);
    uint64_t v49 = sub_251F35E30();
    *(void *)(v0 + 472) = v49;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_251D401E4;
    uint64_t v50 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x263EF8330];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_251A5B804;
    *(void *)(v0 + 104) = &block_descriptor_12;
    *(void *)(v0 + 112) = v50;
    objc_msgSend(v43, sel_executeActions_completionHandler_, v49, v0 + 80);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
  uint64_t v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 368);
  uint64_t v27 = *(void *)(v0 + 376) + 1;
  uint64_t v28 = *(void *)(v0 + 352);
  uint64_t v29 = *(void *)(v0 + 344);
  uint64_t v30 = *(void *)(v0 + 328);
  unint64_t v31 = *(void *)(v0 + 168)
      + ((*(unsigned __int8 *)(v0 + 536) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 536))
      + *(void *)(v0 + 360) * v27;
  *(void *)(v0 + 376) = v27;
  *(void *)(v0 + 384) = (v28 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v30, v31, v29);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v29) == 1) {
    goto LABEL_11;
  }
  uint64_t v51 = *(void *)(v0 + 352);
  *(void *)(v0 + 392) = *(void *)(v51 + 64);
  uint64_t v52 = swift_task_alloc();
  *(void *)(v0 + 400) = v52;
  (*(void (**)(void))(v51 + 32))();
  uint64_t v57 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_269BA2D20 + dword_269BA2D20);
  uint64_t v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v53;
  *uint64_t v53 = v0;
  v53[1] = sub_251D3F958;
  uint64_t v54 = *(void *)(v0 + 176);
  char v55 = *(unsigned char *)(v0 + 540);
  return v57(v55, v52, v54);
}

uint64_t sub_251D401E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 480) = v1;
  if (v1) {
    uint64_t v2 = sub_251D40938;
  }
  else {
    uint64_t v2 = sub_251D402F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251D402F4()
{
  uint64_t v1 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v2 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v5 = *(void *)(v0 + 192);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x263F90238])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 184));
      uint64_t v6 = "";
    }
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 248);
    uint64_t v13 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432))(v11, v12, v13);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v1, v2, v15, "MediaSetPowerState", v6, v14, 2u);
    MEMORY[0x2533AC760](v14, -1, -1);

    v10(v12, v13);
    v10(v11, v13);
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v8 = *(void *)(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 216);

    v7(v8, v9);
  }
  *(void *)(v0 + 488) = sub_251F35C70();
  uint64_t v17 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D40508, v17, v16);
}

uint64_t sub_251D40508()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251D40570, 0, 0);
}

uint64_t sub_251D40570()
{
  *(void *)(v0 + 496) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D405FC, v2, v1);
}

uint64_t sub_251D405FC()
{
  swift_release();
  *(void *)(v0 + 504) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251D40670, 0, 0);
}

uint64_t sub_251D40670()
{
  if (qword_26B21F398 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B21F5E0;
  v0[64] = qword_26B21F5E0;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[65] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251D40768;
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[20];
  return DataModel.rebuildSnapshot(for:includingMatterSnapshot:coverage:)(v4, v3, 0, v1);
}

uint64_t sub_251D40768()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251D40880, 0, 0);
}

uint64_t sub_251D40880()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251D40938()
{
  uint64_t v1 = *(void **)(v0 + 472);
  swift_willThrow();

  uint64_t v2 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v3 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v5 = *(void *)(v0 + 192);
    uint64_t v4 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 184);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x263F90238])
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
      uint64_t v7 = "";
    }
    uint64_t v8 = (void *)(v0 + 248);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v9 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 216);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 432))(*(void *)(v0 + 248), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v2, v3, v12, "MediaSetPowerState", v7, v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);

    v28(v9, v10);
  }
  else
  {

    uint64_t v8 = (void *)(v0 + 232);
  }
  (*(void (**)(void, void))(v0 + 456))(*v8, *(void *)(v0 + 216));
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void **)(v0 + 480);
  uint64_t v14 = sub_251F350A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_26B21F290);
  id v15 = v13;
  id v16 = v13;
  uint64_t v17 = sub_251F35080();
  os_log_type_t v18 = sub_251F35FB0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  os_log_type_t v20 = *(void **)(v0 + 480);
  if (v19)
  {
    BOOL v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)BOOL v21 = 138412290;
    id v23 = v20;
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 152) = v24;
    sub_251F361D0();
    void *v22 = v24;

    _os_log_impl(&dword_2519F3000, v17, v18, "Error executing power actions %@", v21, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v22, -1, -1);
    MEMORY[0x2533AC760](v21, -1, -1);
  }
  else
  {
  }
  *(void *)(v0 + 488) = sub_251F35C70();
  uint64_t v26 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D40508, v26, v25);
}

uint64_t StaticMediaProfile.copyReplacing(id:name:roomIds:roomName:dateAdded:iconSymbol:isDoubleHigh:isCurrentAccessory:isFavorite:shouldShowInDashboard:staticAccessoryId:isReachable:hasValidSettings:staticServicesDictionary:deviceId:playbackState:sleepWakeState:audioDestinationId:specialMediaCategory:symptoms:softwareUpdate:homeNonResponsiveType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13, uint64_t a14, char a15, char a16, uint64_t a17, uint64_t a18, unsigned __int8 *a19, unsigned __int8 *a20,uint64_t a21,uint64_t a22,unsigned __int16 *a23,uint64_t a24,uint64_t a25,unsigned __int8 *a26)
{
  uint64_t v27 = v26;
  uint64_t v198 = a5;
  uint64_t v199 = a8;
  uint64_t v188 = a7;
  uint64_t v189 = a6;
  uint64_t v187 = (char *)a4;
  uint64_t v200 = a3;
  uint64_t v201 = a2;
  uint64_t v193 = a1;
  uint64_t v197 = a9;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v196 = (uint64_t)&v161 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v203 = (uint64_t)&v161 - v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v192 = (uint64_t)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v202 = (char *)&v161 - v35;
  uint64_t v204 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v36 = MEMORY[0x270FA5388](v204);
  uint64_t v177 = (uint64_t)&v161 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v195 = (uint64_t)&v161 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v175 = (char *)&v161 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v194 = (uint64_t)&v161 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v173 = (char *)&v161 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  unsigned __int16 v171 = (char *)&v161 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v170 = (uint64_t)&v161 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v169 = (char *)&v161 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v186 = (uint64_t)&v161 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v182 = (char *)&v161 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v166 = (uint64_t)&v161 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v184 = (uint64_t)&v161 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v181 = (char *)&v161 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v190 = (uint64_t)&v161 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v183 = (uint64_t *)((char *)&v161 - v65);
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  uint64_t v165 = (uint64_t)&v161 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  uint64_t v185 = (uint64_t)&v161 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  uint64_t v72 = (char *)&v161 - v71;
  uint64_t v73 = MEMORY[0x270FA5388](v70);
  id v75 = (char *)&v161 - v74;
  uint64_t v76 = MEMORY[0x270FA5388](v73);
  uint64_t v78 = (char *)&v161 - v77;
  MEMORY[0x270FA5388](v76);
  uint64_t v80 = (char *)&v161 - v79;
  int v167 = *a19;
  int v168 = *a20;
  int v191 = *a23;
  int v174 = *a26;
  uint64_t v81 = sub_251F34DA0();
  uint64_t v82 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v162 = v83;
  id v84 = (char *)&v161 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v85 - 8);
  uint64_t v178 = v86;
  uint64_t v87 = (char *)&v161 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = v82;
  sub_251A1B128(v193, (uint64_t)v87, &qword_26B21FF90);
  sub_251D4EAF8(v27, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  int v179 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  int v89 = v179(v87, 1, v81);
  uint64_t v180 = v82 + 48;
  if (v89 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v84, v80, v81);
    sub_251D4EA98((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251A1B064((uint64_t)v87, &qword_26B21FF90);
  }
  else
  {
    sub_251D4EA98((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v84, v87, v81);
  }
  uint64_t v90 = v190;
  uint64_t v91 = (uint64_t)v187;
  uint64_t v92 = (uint64_t)v188;
  sub_251D4EAF8(v27, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (v200)
  {
    uint64_t v172 = v200;
  }
  else
  {
    uint64_t v93 = (uint64_t *)&v78[v204[5]];
    uint64_t v94 = v93[1];
    uint64_t v201 = *v93;
    uint64_t v172 = v94;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D4EA98((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  sub_251D4EAF8(v27, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (v91)
  {
    uint64_t v193 = v91;
  }
  else
  {
    uint64_t v193 = *(void *)&v75[v204[6]];
    swift_bridgeObjectRetain();
  }
  uint64_t v200 = v88;
  uint64_t v176 = v84;
  swift_bridgeObjectRetain();
  sub_251D4EA98((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  sub_251D4EAF8(v27, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v95 = (uint64_t)v189;
  uint64_t v96 = v204;
  if (!v189)
  {
    uint64_t v198 = *(void *)&v72[v204[7]];
    uint64_t v95 = swift_bridgeObjectRetain();
  }
  uint64_t v190 = v95;
  swift_bridgeObjectRetain();
  sub_251D4EA98((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v189 = &v161;
  uint64_t v98 = MEMORY[0x270FA5388](v97 - 8);
  uint64_t v100 = (char *)&v161 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = &v161;
  MEMORY[0x270FA5388](v98);
  uint64_t v102 = (char *)&v161 - v101;
  sub_251A1B128(v92, (uint64_t)&v161 - v101, &qword_26B21EC20);
  uint64_t v103 = v185;
  sub_251D4EAF8(v27, v185, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v104 = sub_251F34D20();
  uint64_t v105 = *(void *)(v104 - 8);
  int v106 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v105 + 48))(v102, 1, v104);
  uint64_t v187 = v100;
  if (v106 == 1)
  {
    sub_251A1B128(v103 + v96[8], (uint64_t)v100, &qword_26B21EC20);
    sub_251D4EA98(v103, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251A1B064((uint64_t)v102, &qword_26B21EC20);
  }
  else
  {
    sub_251D4EA98(v103, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v100, v102, v104);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v100, 0, 1, v104);
  }
  uint64_t v107 = (uint64_t)v182;
  uint64_t v108 = v165;
  sub_251D4EAF8(v27, v165, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (a10)
  {
    uint64_t v109 = a10;
  }
  else
  {
    id v110 = (uint64_t *)(v108 + v96[9]);
    uint64_t v109 = v110[1];
    uint64_t v199 = *v110;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D4EA98(v108, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v111 = (uint64_t)v183;
  sub_251D4EAF8(v27, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (a11 == 2) {
    int v112 = *(unsigned __int8 *)(v111 + v96[10]);
  }
  else {
    int v112 = a11 & 1;
  }
  LODWORD(v165) = v112;
  sub_251D4EA98(v111, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  sub_251D4EAF8(v27, v90, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (a13 == 2) {
    int v113 = *(unsigned __int8 *)(v90 + v96[11]);
  }
  else {
    int v113 = a13 & 1;
  }
  int v164 = v113;
  uint64_t v114 = (uint64_t)v181;
  sub_251D4EA98(v90, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  sub_251D4EAF8(v27, v114, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (a12 == 2) {
    int v115 = *(unsigned __int8 *)(v114 + v96[13]);
  }
  else {
    int v115 = a12 & 1;
  }
  int v163 = v115;
  uint64_t v116 = v162;
  uint64_t v117 = sub_251D4EA98(v114, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v183 = &v161;
  uint64_t v118 = MEMORY[0x270FA5388](v117);
  unsigned __int16 v119 = (char *)&v161 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = (char *)&v161;
  MEMORY[0x270FA5388](v118);
  id v121 = (char *)&v161 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a14, (uint64_t)v121, &qword_26B21FF90);
  uint64_t v122 = v184;
  sub_251D4EAF8(v27, v184, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  int v123 = v179(v121, 1, v81);
  uint64_t v185 = v109;
  uint64_t v181 = v119;
  if (v123 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v200 + 16))(v119, v122 + v96[14], v81);
    sub_251D4EA98(v122, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251A1B064((uint64_t)v121, &qword_26B21FF90);
  }
  else
  {
    sub_251D4EA98(v122, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    (*(void (**)(char *, char *, uint64_t))(v200 + 32))(v119, v121, v81);
  }
  uint64_t v124 = (uint64_t)v202;
  uint64_t v125 = (uint64_t)v173;
  uint64_t v126 = (uint64_t)v169;
  uint64_t v127 = v166;
  sub_251D4EAF8(v27, v166, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (a15 == 2) {
    int v128 = *(unsigned __int8 *)(v127 + v96[15]);
  }
  else {
    int v128 = a15 & 1;
  }
  LODWORD(v180) = v128;
  sub_251D4EA98(v127, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  sub_251D4EAF8(v27, v107, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (a16 == 2) {
    int v129 = *(unsigned __int8 *)(v107 + v96[16]);
  }
  else {
    int v129 = a16 & 1;
  }
  LODWORD(v179) = v129;
  uint64_t v130 = (uint64_t)v175;
  sub_251D4EA98(v107, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v131 = v186;
  sub_251D4EAF8(v27, v186, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (a17)
  {
    uint64_t v132 = a17;
  }
  else
  {
    uint64_t v132 = *(void *)(v131 + v96[17]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D4EA98(v131, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v133 = v192;
  sub_251A1B128(a18, v192, &qword_26B21F090);
  sub_251D4EAF8(v27, v126, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v134 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v135 = *(void *)(v134 - 8);
  int v136 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134);
  uint64_t v184 = v132;
  if (v136 == 1)
  {
    sub_251A1B128(v126 + v96[18], v124, &qword_26B21F090);
    sub_251D4EA98(v126, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251A1B064(v133, &qword_26B21F090);
  }
  else
  {
    sub_251D4EA98(v126, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251D4EBA4(v133, v124, type metadata accessor for StaticAccessory.DeviceIdentifier);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v135 + 56))(v124, 0, 1, v134);
  }
  uint64_t v137 = (uint64_t)v171;
  uint64_t v138 = v170;
  int v139 = v167;
  int v140 = v168;
  sub_251D4EAF8(v27, v170, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (v139 == 6) {
    LOBYTE(v139) = *(unsigned char *)(v138 + v96[19]);
  }
  uint64_t v200 = a21;
  sub_251D4EA98(v138, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  v208[0] = v139;
  sub_251D4EAF8(v27, v137, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (v140 == 4) {
    LOBYTE(v140) = *(unsigned char *)(v137 + v96[20]);
  }
  sub_251D4EA98(v137, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  char v207 = v140;
  sub_251D4EAF8(v27, v125, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v141 = a22;
  if (!a22)
  {
    uint64_t v142 = (uint64_t *)(v125 + v96[21]);
    uint64_t v141 = v142[1];
    uint64_t v200 = *v142;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D4EA98(v125, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v143 = v194;
  sub_251D4EAF8(v27, v194, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  __int16 v144 = v191;
  if ((~v191 & 0xFEFC) == 0) {
    __int16 v144 = *(_WORD *)(v143 + v96[22]);
  }
  sub_251D4EA98(v143, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  __int16 v206 = v144;
  sub_251D4EAF8(v27, v130, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v145 = a24;
  uint64_t v146 = (uint64_t)v181;
  if (!a24)
  {
    uint64_t v145 = *(void *)(v130 + v96[23]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251D4EA98(v130, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v147 = v196;
  sub_251A1B128(a25, v196, &qword_26B21F120);
  uint64_t v148 = v195;
  sub_251D4EAF8(v27, v195, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v149 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v150 = *(void *)(v149 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v147, 1, v149) == 1)
  {
    sub_251A1B128(v148 + v204[24], v203, &qword_26B21F120);
    sub_251D4EA98(v148, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251A1B064(v147, &qword_26B21F120);
  }
  else
  {
    sub_251D4EA98(v148, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v151 = v203;
    sub_251D4EBA4(v147, v203, type metadata accessor for StaticSoftwareUpdate);
    uint64_t v152 = v151;
    uint64_t v124 = (uint64_t)v202;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v150 + 56))(v152, 0, 1, v149);
  }
  uint64_t v153 = v198;
  uint64_t v154 = v177;
  uint64_t v155 = (uint64_t)v176;
  int v156 = v174;
  uint64_t v157 = v172;
  sub_251D4EAF8(v27, v177, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (v156 == 2) {
    char v158 = *(unsigned char *)(v154 + v204[25]);
  }
  else {
    char v158 = v156 & 1;
  }
  uint64_t v159 = v199;
  sub_251D4EA98(v154, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  char v205 = v158;
  return sub_251D44894(v155, v201, v157, v193, v153, v190, (uint64_t)v187, v159, v197, v185, v165, v164, 1, v163, v146, v180, (char)v179, v184, v124,
           v208,
           &v207,
           v200,
           v141,
           &v206,
           v145,
           v203,
           &v205);
}

BOOL StaticMediaProfile.isActivated.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 76)) == 1;
}

uint64_t Set<>.staticMediaProfilesIgnoringCurrentDevice.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251D04A2C(v0);
}

uint64_t StaticMediaProfile.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaProfile.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticMediaProfile.roomIds.getter()
{
  type metadata accessor for StaticMediaProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaProfile.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaProfile.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMediaProfile();
  return sub_251A1B128(v1 + *(int *)(v3 + 32), a1, &qword_26B21EC20);
}

uint64_t StaticMediaProfile.iconSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaProfile.isDoubleHigh.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 40));
}

uint64_t StaticMediaProfile.isFavorite.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 44));
}

uint64_t StaticMediaProfile.shouldShowInDashboard.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 48));
}

uint64_t StaticMediaProfile.isCurrentAccessory.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 52));
}

uint64_t StaticMediaProfile.staticAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticMediaProfile() + 56);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticMediaProfile.isReachable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 60));
}

uint64_t StaticMediaProfile.hasValidSettings.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 64));
}

uint64_t StaticMediaProfile.staticServicesDictionary.getter()
{
  type metadata accessor for StaticMediaProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaProfile.deviceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMediaProfile();
  return sub_251A1B128(v1 + *(int *)(v3 + 72), a1, &qword_26B21F090);
}

uint64_t StaticMediaProfile.playbackState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticMediaProfile();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t StaticMediaProfile.sleepWakeState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticMediaProfile();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 80));
  return result;
}

uint64_t StaticMediaProfile.audioDestinationId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaProfile.specialMediaCategory.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticMediaProfile();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 88));
  return result;
}

uint64_t StaticMediaProfile.symptoms.getter()
{
  type metadata accessor for StaticMediaProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaProfile.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMediaProfile();
  return sub_251A1B128(v1 + *(int *)(v3 + 96), a1, &qword_26B21F120);
}

uint64_t StaticMediaProfile.homeNonResponsiveType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticMediaProfile();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 100));
  return result;
}

uint64_t StaticMediaProfile.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v49 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v48 = (uint64_t)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v42 = (uint64_t)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v46 = (uint64_t)v41 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v43 = (uint64_t)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = sub_251D480E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95E8]);
  uint64_t v47 = v15;
  uint64_t v50 = v16;
  sub_251F35610();
  uint64_t v17 = (int *)type metadata accessor for StaticMediaProfile();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v1 + v17[6]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v2 + v17[7] + 8);
  uint64_t v45 = v9;
  sub_251F36CC0();
  if (v19)
  {
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v2 + v17[8];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v21 - 8);
  id v23 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v20, (uint64_t)v23, &qword_26B21EC20);
  uint64_t v24 = sub_251F34D20();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
  if (v26 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    v41[1] = v41;
    MEMORY[0x270FA5388](v26);
    uint64_t v28 = (char *)v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v28, v23, v24);
    sub_251F36CC0();
    sub_251D480E0(&qword_269B9CF80, MEMORY[0x270FA9188]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  }
  uint64_t v29 = v47;
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F35610();
  sub_251F36CC0();
  sub_251F36CC0();
  uint64_t v30 = *(void *)(v2 + v17[17]);
  swift_bridgeObjectRetain();
  sub_251A454AC((uint64_t)a1, v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = v43;
  sub_251A1B128(v2 + v17[18], v43, &qword_26B21F090);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v31, 1, v45) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v32 = v46;
    sub_251D4EBA4(v31, v46, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251F36CC0();
    uint64_t v33 = v42;
    sub_251D4EAF8(v32, v42, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = *(void *)(v29 - 8);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      uint64_t v37 = (char *)v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v37, v33, v29);
      sub_251F36CB0();
      sub_251F35610();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v29);
    }
    else
    {
      sub_251F36CB0();
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    sub_251D4EA98(v46, type metadata accessor for StaticAccessory.DeviceIdentifier);
  }
  if (*(unsigned char *)(v2 + v17[19]) == 6)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CB0();
  }
  if (*(unsigned char *)(v2 + v17[20]) == 4)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CB0();
  }
  if (*(void *)(v2 + v17[21] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if ((~*(unsigned __int16 *)(v2 + v17[22]) & 0xFEFC) != 0)
  {
    __int16 v51 = *(_WORD *)(v2 + v17[22]);
    sub_251F36CC0();
    StaticAccessory.SpecialMediaCategory.hash(into:)();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v38 = *(void *)(v2 + v17[23]);
  sub_251F36CC0();
  if (v38)
  {
    swift_bridgeObjectRetain();
    sub_251A54ED4(a1, v38);
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = v48;
  sub_251A1B128(v2 + v17[24], v48, &qword_26B21F120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v39, 1, v4) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251D4EBA4(v39, (uint64_t)v6, type metadata accessor for StaticSoftwareUpdate);
    sub_251F36CC0();
    sub_251F35610();
    StaticSoftwareUpdate.Kind.hash(into:)();
    sub_251D4EA98((uint64_t)v6, type metadata accessor for StaticSoftwareUpdate);
  }
  return sub_251F36CB0();
}

unint64_t sub_251D42F2C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 3:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 4:
      unint64_t result = 0x6564644165746164;
      break;
    case 5:
      unint64_t result = 0x626D79536E6F6369;
      break;
    case 6:
      unint64_t result = 0x656C62756F447369;
      break;
    case 7:
      unint64_t result = 0x69726F7661467369;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x6168636165527369;
      break;
    case 12:
      unint64_t result = 0xD000000000000010;
      break;
    case 13:
      unint64_t result = 0xD000000000000018;
      break;
    case 14:
      unint64_t result = 0x6449656369766564;
      break;
    case 15:
      unint64_t result = 0x6B63616279616C70;
      break;
    case 16:
      unint64_t result = 0x6B61577065656C73;
      break;
    case 18:
      unint64_t result = 0xD000000000000014;
      break;
    case 19:
      unint64_t result = 0x736D6F74706D7973;
      break;
    case 20:
      unint64_t result = 0x6572617774666F73;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251D431E8()
{
  return sub_251D42F2C(*v0);
}

uint64_t sub_251D431F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D49790(a1, a2);
  *a3 = result;
  return result;
}

void sub_251D43218(unsigned char *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_251D43224(uint64_t a1)
{
  unint64_t v2 = sub_251D48128();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D43260(uint64_t a1)
{
  unint64_t v2 = sub_251D48128();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticMediaProfile.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D48128();
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  sub_251F34DA0();
  sub_251D480E0(&qword_26B21E348, MEMORY[0x270FA95E8]);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticMediaProfile();
    LOBYTE(v13) = 1;
    sub_251F369D0();
    uint64_t v13 = *(void *)(v3 + v9[6]);
    char v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251D48278(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v13) = 3;
    sub_251F36910();
    uint64_t v11 = v3 + v9[8];
    LOBYTE(v13) = 4;
    sub_251F34D20();
    sub_251D480E0(&qword_269B9F590, MEMORY[0x270FA9188]);
    sub_251F36970();
    LOBYTE(v13) = 5;
    sub_251F369D0();
    LOBYTE(v13) = 6;
    sub_251F369E0();
    LOBYTE(v13) = 7;
    sub_251F369E0();
    LOBYTE(v13) = 8;
    sub_251F369E0();
    LOBYTE(v13) = 9;
    sub_251F369E0();
    LOBYTE(v13) = 10;
    sub_251F36A20();
    LOBYTE(v13) = 11;
    sub_251F369E0();
    LOBYTE(v13) = 12;
    sub_251F369E0();
    uint64_t v13 = *(void *)(v3 + v9[17]);
    char v12 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
    sub_251B24DC8();
    sub_251F36A20();
    LOBYTE(v13) = 14;
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    sub_251D4A65C(&qword_269BA2B80, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251F36970();
    LOBYTE(v13) = *(unsigned char *)(v3 + v9[19]);
    char v12 = 15;
    sub_251D4817C();
    sub_251F36970();
    LOBYTE(v13) = *(unsigned char *)(v3 + v9[20]);
    char v12 = 16;
    sub_251D481D0();
    sub_251F36970();
    LOBYTE(v13) = 17;
    sub_251F36910();
    LOWORD(v13) = *(_WORD *)(v3 + v9[22]);
    char v12 = 18;
    sub_251C9D94C();
    sub_251F36970();
    uint64_t v13 = *(void *)(v3 + v9[23]);
    char v12 = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B98);
    sub_251D483A8(&qword_269BA2BA0, (void (*)(void))sub_251D48224);
    sub_251F36970();
    LOBYTE(v13) = 20;
    type metadata accessor for StaticSoftwareUpdate(0);
    sub_251D4A65C(&qword_269BA2BB0, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
    sub_251F36970();
    LOBYTE(v13) = *(unsigned char *)(v3 + v9[25]);
    char v12 = 21;
    sub_251C84AF4();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticMediaProfile.hashValue.getter()
{
  sub_251F36CA0();
  StaticMediaProfile.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticMediaProfile.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2BB8);
  uint64_t v11 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v13 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = (int *)type metadata accessor for StaticMediaProfile();
  MEMORY[0x270FA5388](v83);
  uint64_t v82 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_251D48128();
  uint64_t v79 = v13;
  sub_251F36D90();
  if (v2)
  {
    uint64_t v81 = v2;
    LODWORD(v80) = 0;
    unsigned int v20 = 0;
  }
  else
  {
    uint64_t v75 = a2;
    uint64_t v76 = v10;
    uint64_t v74 = v7;
    uint64_t v78 = v11;
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(void *)(v17 + 64);
    MEMORY[0x270FA5388](v16);
    LOBYTE(v85) = 0;
    uint64_t v19 = sub_251D480E0(&qword_269B9CC80, MEMORY[0x270FA95E8]);
    sub_251F36880();
    uint64_t v35 = v82;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36(v82, (char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
    LOBYTE(v85) = 1;
    uint64_t v37 = sub_251F36830();
    uint64_t v73 = v36;
    uint64_t v38 = v83;
    uint64_t v39 = (uint64_t *)&v35[v83[5]];
    uint64_t *v39 = v37;
    v39[1] = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    char v84 = 2;
    sub_251D48278(&qword_269B9CC78, &qword_269B9CC80);
    sub_251F36880();
    *(void *)&v35[v38[6]] = v85;
    LOBYTE(v85) = 3;
    uint64_t v41 = sub_251F36790();
    v72[0] = v19;
    uint64_t v42 = (uint64_t *)&v35[v38[7]];
    *uint64_t v42 = v41;
    v42[1] = v43;
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    v72[1] = v72;
    MEMORY[0x270FA5388](v44 - 8);
    uint64_t v46 = (char *)v72 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D20();
    LOBYTE(v85) = 4;
    sub_251D480E0(&qword_269B9DBE8, MEMORY[0x270FA9188]);
    sub_251F367D0();
    uint64_t v47 = v82;
    sub_251A4ECF0((uint64_t)v46, (uint64_t)&v82[v38[8]], &qword_26B21EC20);
    LOBYTE(v85) = 5;
    uint64_t v48 = sub_251F36830();
    uint64_t v49 = (uint64_t *)&v47[v38[9]];
    *uint64_t v49 = v48;
    v49[1] = v50;
    LOBYTE(v85) = 6;
    v47[v38[10]] = sub_251F36840() & 1;
    LOBYTE(v85) = 7;
    v47[v83[11]] = sub_251F36840() & 1;
    LOBYTE(v85) = 8;
    char v51 = sub_251F36840();
    uint64_t v81 = 0;
    v47[v83[12]] = v51 & 1;
    LOBYTE(v85) = 9;
    uint64_t v52 = v81;
    uint64_t v53 = sub_251F36840();
    uint64_t v81 = v52;
    if (v52)
    {
      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
      LODWORD(v80) = 0;
      unsigned int v20 = 63;
    }
    else
    {
      v82[v83[13]] = v53 & 1;
      MEMORY[0x270FA5388](v53);
      LOBYTE(v85) = 10;
      uint64_t v54 = v81;
      sub_251F36880();
      uint64_t v81 = v54;
      if (v54)
      {
        (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
        unsigned int v20 = 63;
        LODWORD(v80) = 0;
      }
      else
      {
        v73(&v82[v83[14]], (char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
        LOBYTE(v85) = 11;
        uint64_t v55 = v81;
        char v56 = sub_251F36840();
        uint64_t v81 = v55;
        if (v55) {
          goto LABEL_38;
        }
        v82[v83[15]] = v56 & 1;
        LOBYTE(v85) = 12;
        uint64_t v57 = v81;
        char v58 = sub_251F36840();
        uint64_t v81 = v57;
        if (v57
          || (v82[v83[16]] = v58 & 1,
              __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8),
              char v84 = 13,
              sub_251B25884(),
              uint64_t v59 = v81,
              sub_251F36880(),
              (uint64_t v81 = v59) != 0))
        {
LABEL_38:
          (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
          LODWORD(v80) = 0;
          unsigned int v20 = 1087;
        }
        else
        {
          *(void *)&v82[v83[17]] = v85;
          type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          LOBYTE(v85) = 14;
          sub_251D4A65C(&qword_269BA2BC0, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
          uint64_t v60 = v81;
          sub_251F367D0();
          uint64_t v81 = v60;
          if (v60)
          {
            (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
            LODWORD(v80) = 0;
            unsigned int v20 = 9279;
          }
          else
          {
            sub_251A4ECF0((uint64_t)v76, (uint64_t)&v82[v83[18]], &qword_26B21F090);
            char v84 = 15;
            sub_251D48300();
            uint64_t v61 = v81;
            sub_251F367D0();
            uint64_t v81 = v61;
            if (!v61)
            {
              v82[v83[19]] = v85;
              char v84 = 16;
              sub_251D48354();
              uint64_t v62 = v81;
              sub_251F367D0();
              uint64_t v81 = v62;
              if (!v62)
              {
                v82[v83[20]] = v85;
                LOBYTE(v85) = 17;
                uint64_t v63 = v81;
                uint64_t v64 = sub_251F36790();
                uint64_t v81 = v63;
                if (!v63)
                {
                  uint64_t v66 = (uint64_t *)&v82[v83[21]];
                  uint64_t *v66 = v64;
                  v66[1] = v65;
                  char v84 = 18;
                  sub_251C9DAB4();
                  uint64_t v67 = v81;
                  sub_251F367D0();
                  uint64_t v81 = v67;
                  if (v67
                    || (*(_WORD *)&v82[v83[22]] = v85,
                        __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B98),
                        char v84 = 19,
                        sub_251D483A8(&qword_269BA2BD8, (void (*)(void))sub_251D48418),
                        uint64_t v68 = v81,
                        sub_251F367D0(),
                        (uint64_t v81 = v68) != 0))
                  {
                    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
                    LODWORD(v78) = 0;
                    LODWORD(v79) = 0;
                  }
                  else
                  {
                    *(void *)&v82[v83[23]] = v85;
                    type metadata accessor for StaticSoftwareUpdate(0);
                    LOBYTE(v85) = 20;
                    sub_251D4A65C(&qword_269BA2BE8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
                    uint64_t v69 = v81;
                    sub_251F367D0();
                    uint64_t v81 = v69;
                    if (v69)
                    {
                      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
                      LODWORD(v79) = 0;
                      LODWORD(v78) = 1;
                    }
                    else
                    {
                      sub_251A4ECF0((uint64_t)v74, (uint64_t)&v82[v83[24]], &qword_26B21F120);
                      char v84 = 21;
                      sub_251C84C30();
                      uint64_t v70 = v81;
                      sub_251F36880();
                      uint64_t v81 = v70;
                      if (!v70)
                      {
                        (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
                        uint64_t v71 = (uint64_t)v82;
                        v82[v83[25]] = v85;
                        sub_251D4EAF8(v71, v75, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
                        __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
                        return sub_251D4EA98(v71, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
                      }
                      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
                      LODWORD(v78) = 1;
                      LODWORD(v79) = 1;
                    }
                  }
                  __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
                  LOBYTE(v33) = 1;
                  int v23 = 1;
                  int v24 = 1;
                  int v25 = 1;
                  int v26 = 1;
                  int v27 = 1;
                  int v28 = 1;
                  LODWORD(v80) = 1;
                  int v29 = 1;
                  uint64_t v21 = v82;
                  goto LABEL_18;
                }
              }
            }
            (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
            unsigned int v20 = 25663;
            LODWORD(v80) = 1;
          }
        }
      }
    }
  }
  uint64_t v21 = v82;
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
  int v23 = (v20 >> 2) & 1;
  int v24 = (v20 >> 3) & 1;
  int v25 = (v20 >> 4) & 1;
  int v26 = (v20 >> 5) & 1;
  int v27 = (v20 >> 10) & 1;
  int v28 = (v20 >> 13) & 1;
  if ((v20 & 1) == 0)
  {
    LODWORD(v79) = 0;
    LODWORD(v78) = 0;
    int v29 = 0;
    if ((v20 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
  int v29 = 0;
  LODWORD(v78) = 0;
  LODWORD(v79) = 0;
  int v33 = (v20 >> 1) & 1;
LABEL_18:
  uint64_t v34 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v21, v34);
  if ((v33 & 1) == 0)
  {
LABEL_6:
    uint64_t v30 = v83;
    if (v23) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v30 = v83;
  uint64_t result = swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  if (!v24)
  {
LABEL_8:
    if (v25) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_9:
    uint64_t result = sub_251A1B064((uint64_t)&v21[v30[8]], &qword_26B21EC20);
    if ((v26 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  if (!v26)
  {
LABEL_10:
    if (v27) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_11:
    uint64_t v31 = &v21[v30[14]];
    uint64_t v32 = sub_251F34DA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    if ((v28 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  if (!v28)
  {
LABEL_12:
    if (v80) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = swift_bridgeObjectRelease();
  if (v80)
  {
LABEL_13:
    uint64_t result = sub_251A1B064((uint64_t)&v21[v30[18]], &qword_26B21F090);
    if ((v29 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  if (!v29)
  {
LABEL_14:
    if (v78) {
      goto LABEL_15;
    }
LABEL_28:
    if (!v79) {
      return result;
    }
    return sub_251A1B064((uint64_t)&v21[v30[24]], &qword_26B21F120);
  }
LABEL_27:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v78 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_15:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v79 & 1) == 0) {
    return result;
  }
  return sub_251A1B064((uint64_t)&v21[v30[24]], &qword_26B21F120);
}

uint64_t sub_251D44894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13, char a14, uint64_t a15, char a16, char a17, uint64_t a18, uint64_t a19, char *a20,char *a21,uint64_t a22,uint64_t a23,__int16 *a24,uint64_t a25,uint64_t a26,char *a27)
{
  char v44 = *a20;
  char v45 = *a21;
  __int16 v46 = *a24;
  char v47 = *a27;
  uint64_t v32 = sub_251F34DA0();
  int v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32);
  v33(a9, a1, v32);
  uint64_t v34 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v35 = (void *)(a9 + v34[5]);
  *uint64_t v35 = a2;
  v35[1] = a3;
  *(void *)(a9 + v34[6]) = a4;
  uint64_t v36 = (void *)(a9 + v34[7]);
  *uint64_t v36 = a5;
  v36[1] = a6;
  sub_251A4ECF0(a7, a9 + v34[8], &qword_26B21EC20);
  uint64_t v37 = (void *)(a9 + v34[9]);
  *uint64_t v37 = a8;
  v37[1] = a10;
  *(unsigned char *)(a9 + v34[10]) = a11;
  *(unsigned char *)(a9 + v34[11]) = a12;
  *(unsigned char *)(a9 + v34[12]) = a13;
  *(unsigned char *)(a9 + v34[13]) = a14;
  v33(a9 + v34[14], a15, v32);
  *(unsigned char *)(a9 + v34[15]) = a16;
  *(unsigned char *)(a9 + v34[16]) = a17;
  *(void *)(a9 + v34[17]) = a18;
  sub_251A4ECF0(a19, a9 + v34[18], &qword_26B21F090);
  *(unsigned char *)(a9 + v34[19]) = v44;
  *(unsigned char *)(a9 + v34[20]) = v45;
  uint64_t v38 = (void *)(a9 + v34[21]);
  void *v38 = a22;
  v38[1] = a23;
  *(_WORD *)(a9 + v34[22]) = v46;
  *(void *)(a9 + v34[23]) = a25;
  uint64_t result = sub_251A4ECF0(a26, a9 + v34[24], &qword_26B21F120);
  *(unsigned char *)(a9 + v34[25]) = v47;
  return result;
}

uint64_t sub_251D44B10()
{
  sub_251F36CA0();
  StaticMediaProfile.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251D44B54()
{
  sub_251F36CA0();
  StaticMediaProfile.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251D44B90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMediaProfile.init(from:)(a1, a2);
}

uint64_t sub_251D44BA8(void *a1)
{
  return StaticMediaProfile.encode(to:)(a1);
}

uint64_t StaticMediaProfile.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251D4EAF8(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  int v8 = *(unsigned __int16 *)&v7[*(int *)(v5 + 96)];
  if ((~v8 & 0xFEFC) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F218);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(_WORD *)(inited + 32) = v8;
    uint64_t v9 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
    uint64_t v10 = v23;
    swift_setDeallocating();
    sub_251D4EA98((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t result = swift_bridgeObjectRetain_n();
    char v21 = 0;
    char v18 = 0;
    char v19 = 0;
    char v16 = 0;
    uint64_t v20 = v9;
    uint64_t v11 = v10;
    uint64_t v13 = v9;
    uint64_t v12 = v10;
    uint64_t v15 = v9;
    uint64_t v14 = v10;
  }
  else
  {
    if (qword_269B9C360 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_269BA00F0;
    uint64_t v10 = *(void *)algn_269BA00F8;
    int v27 = byte_269BA0100;
    uint64_t v11 = unk_269BA0110;
    uint64_t v26 = qword_269BA0108;
    uint64_t v13 = qword_269BA0120;
    uint64_t v12 = unk_269BA0128;
    int v24 = byte_269BA0130;
    int v25 = byte_269BA0118;
    uint64_t v15 = qword_269BA0138;
    uint64_t v14 = unk_269BA0140;
    char v16 = byte_269BA0148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_251D4EA98((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    char v19 = v24;
    char v18 = v25;
    uint64_t v20 = v26;
    char v21 = v27;
  }
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v20;
  *(void *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 40) = v18;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v12;
  *(unsigned char *)(a1 + 64) = v19;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v16;
  return result;
}

uint64_t StaticMediaProfile.foregroundColor.getter()
{
  return sub_251F35370();
}

void StaticMediaProfile.primaryServiceKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticMediaProfile.tileStatusString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  int v8 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 60));
  if ((v8 & 1) == 0)
  {
    if (*(unsigned char *)(v1 + v2[25]))
    {
      uint64_t v9 = 0xD00000000000001FLL;
      uint64_t v10 = 0x8000000251F6D360;
    }
    else
    {
      uint64_t v10 = 0x8000000251F6D380;
      uint64_t v9 = 0xD00000000000001ELL;
    }
    uint64_t v6 = static String.hfLocalized(_:)(v9, v10);
    uint64_t v7 = v11;
  }
  char v12 = 0;
  unsigned int v13 = *(unsigned __int16 *)(v1 + v2[22]);
  if (v13 >> 14) {
    BOOL v14 = 1;
  }
  else {
    BOOL v14 = (v13 & 0xFEFC) == 65276;
  }
  if (!v14 && ((v8 ^ 1) & 1) == 0) {
    char v12 = *(unsigned char *)(v1 + v2[16]) ^ 1;
  }
  if (*(unsigned char *)(v1 + v2[19]) == 6)
  {
    uint64_t v15 = 0;
  }
  else
  {
    v21[15] = *(unsigned char *)(v1 + v2[19]);
    uint64_t v15 = sub_251A84814();
  }
  uint64_t v16 = sub_251C4862C(v1 + v2[24], 0);
  uint64_t v18 = v17;
  sub_251D4EAF8(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (!v18)
  {
    uint64_t v16 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(void *)&v5[v2[23]], 0);
    uint64_t v18 = v19;
  }
  sub_251D4EA98((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (v12)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = static String.hfLocalized(_:)(0xD00000000000002ALL, 0x8000000251F70F00);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else if (v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      return v16;
    }
    else {
      return v15;
    }
  }
  return v6;
}

uint64_t StaticMediaProfile.canBeToggled.getter()
{
  return 0;
}

uint64_t StaticMediaProfile.toggle()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AC2104, 0, 0);
}

uint64_t sub_251D450C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251A1B128(v2 + *(int *)(a1 + 32), a2, &qword_26B21EC20);
}

uint64_t sub_251D450F4()
{
  return sub_251F35370();
}

uint64_t sub_251D4510C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_251D45118(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_251D45124(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t sub_251D45130(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

BOOL sub_251D45168(uint64_t a1)
{
  return *(unsigned char *)(v1 + *(int *)(a1 + 76)) == 1;
}

uint64_t sub_251D4517C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 60));
}

id StaticMediaProfile.mediaProfile.getter()
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B21FF50;
  uint64_t v1 = (void *)sub_251F34D50();
  id v2 = objc_msgSend(v0, sel_mediaProfileFor_, v1);

  return v2;
}

uint64_t StaticMediaProfile.staticServices.getter()
{
  type metadata accessor for StaticMediaProfile();
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDF4E4(v0);
}

uint64_t StaticMediaProfile.isConfiguring.getter()
{
  uint64_t v1 = (int *)type metadata accessor for StaticMediaProfile();
  unsigned int v2 = *(unsigned __int16 *)(v0 + v1[22]);
  if (v2 >> 14) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = (v2 & 0xFEFC) == 65276;
  }
  if (v3 || *(unsigned char *)(v0 + v1[15]) != 1) {
    char v4 = 0;
  }
  else {
    char v4 = *(unsigned char *)(v0 + v1[16]) ^ 1;
  }
  return v4 & 1;
}

uint64_t StaticMediaProfile.accessoryControlStatusString.getter()
{
  uint64_t v1 = v0;
  unsigned int v2 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  int v8 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 60));
  if ((v8 & 1) == 0)
  {
    if (*(unsigned char *)(v1 + v2[25]))
    {
      uint64_t v9 = 0xD00000000000001FLL;
      uint64_t v10 = 0x8000000251F6D360;
    }
    else
    {
      uint64_t v10 = 0x8000000251F6D380;
      uint64_t v9 = 0xD00000000000001ELL;
    }
    uint64_t v6 = static String.hfLocalized(_:)(v9, v10);
    uint64_t v7 = v11;
  }
  char v12 = 0;
  unsigned int v13 = *(unsigned __int16 *)(v1 + v2[22]);
  if (v13 >> 14) {
    BOOL v14 = 1;
  }
  else {
    BOOL v14 = (v13 & 0xFEFC) == 65276;
  }
  if (!v14 && ((v8 ^ 1) & 1) == 0) {
    char v12 = *(unsigned char *)(v1 + v2[16]) ^ 1;
  }
  if (*(unsigned char *)(v1 + v2[19]) == 6)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  else
  {
    LOBYTE(v25) = *(unsigned char *)(v1 + v2[19]);
    uint64_t v15 = sub_251A84814();
    uint64_t v16 = v17;
  }
  uint64_t v18 = sub_251C4862C(v1 + v2[24], 1);
  uint64_t v20 = v19;
  sub_251D4EAF8(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (!v20)
  {
    uint64_t v18 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(void *)&v5[v2[23]], 1);
    uint64_t v20 = v21;
  }
  sub_251D4EA98((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v25 = v6;
  uint64_t v26 = v7;
  __int16 v27 = 0;
  char v28 = v12 & 1;
  uint64_t v29 = v15;
  uint64_t v30 = v16;
  uint64_t v31 = v18;
  uint64_t v32 = v20;
  uint64_t v22 = sub_251D3D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

unint64_t StaticMediaProfile.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v1 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v2 = v0 + v1[24];
  uint64_t v3 = *(void *)(v0 + v1[23]);
  char v4 = *(unsigned char *)(v0 + v1[15]);
  return sub_251D4A07C(v4, v2, v3);
}

uint64_t StaticMediaProfile.hasDetailAttentionMessages.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticMediaProfile();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 1;
  sub_251C4862C(v1 + *(int *)(v3 + 96), 1);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  sub_251D4EAF8(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (!v8)
  {
    _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(void *)&v5[*(int *)(v2 + 92)], 1);
    if (v9) {
      swift_bridgeObjectRelease();
    }
    else {
      uint64_t v6 = 0;
    }
  }
  sub_251D4EA98((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  return v6;
}

BOOL static StaticMediaProfile.SleepWakeState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticMediaProfile.SleepWakeState.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251D4565C(uint64_t a1)
{
  unint64_t v2 = sub_251D4A46C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D45698(uint64_t a1)
{
  unint64_t v2 = sub_251D4A46C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D456D4()
{
  uint64_t result = 0x656B617761;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7065656C73;
      break;
    case 2:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 3:
      uint64_t result = 0x6C646E6148746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D4575C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D4E87C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D45784(uint64_t a1)
{
  unint64_t v2 = sub_251D4A31C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D457C0(uint64_t a1)
{
  unint64_t v2 = sub_251D4A31C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D457FC(uint64_t a1)
{
  unint64_t v2 = sub_251D4A370();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D45838(uint64_t a1)
{
  unint64_t v2 = sub_251D4A370();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D45874(uint64_t a1)
{
  unint64_t v2 = sub_251D4A418();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D458B0(uint64_t a1)
{
  unint64_t v2 = sub_251D4A418();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D458EC(uint64_t a1)
{
  unint64_t v2 = sub_251D4A3C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D45928(uint64_t a1)
{
  unint64_t v2 = sub_251D4A3C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticMediaProfile.SleepWakeState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2BF8);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C00);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C08);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C10);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C18);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D4A31C();
  sub_251F36DA0();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_251D4A418();
      uint64_t v17 = v23;
      sub_251F36900();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_251D4A3C4();
      uint64_t v17 = v26;
      sub_251F36900();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_251D4A370();
      uint64_t v17 = v29;
      sub_251F36900();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_251D4A46C();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t StaticMediaProfile.SleepWakeState.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticMediaProfile.SleepWakeState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C48);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C50);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  __int16 v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C58);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C60);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2C68);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  char v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_251D4A31C();
  uint64_t v19 = v52;
  sub_251F36D90();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_251F368E0();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_251F36490();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    void *v29 = &type metadata for StaticMediaProfile.SleepWakeState;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_251D4A418();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_251F36770();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_251D4A3C4();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_251F36770();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_251D4A370();
      uint64_t v37 = v52;
      sub_251F36770();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_0(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_251D4A46C();
      uint64_t v26 = v52;
      sub_251F36770();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      unsigned char *v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v30);
}

uint64_t sub_251D46420@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticMediaProfile.SleepWakeState.init(from:)(a1, a2);
}

uint64_t sub_251D46438(void *a1)
{
  return StaticMediaProfile.SleepWakeState.encode(to:)(a1);
}

uint64_t static StaticMediaProfile.test(name:specialMediaCategory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v33 = a4;
  uint64_t v34 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v5 - 8);
  char v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v10 = *a3;
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 64);
  MEMORY[0x270FA5388](v11);
  sub_251F34D90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v13 = swift_allocObject();
  long long v29 = xmmword_251F38650;
  *(_OWORD *)(v13 + 16) = xmmword_251F38650;
  swift_bridgeObjectRetain();
  sub_251F34D90();
  uint64_t v30 = sub_251C08E40(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34CB0();
  uint64_t v17 = sub_251F34D20();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F218);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v29;
  __int16 v19 = v10;
  *(_WORD *)(inited + 32) = v10;
  uint64_t v20 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
  uint64_t v22 = v21;
  uint64_t v23 = swift_setDeallocating();
  MEMORY[0x270FA5388](v23);
  sub_251F34D90();
  unint64_t v24 = sub_2519F9B94(MEMORY[0x263F8EE78]);
  sub_251F34D90();
  uint64_t v25 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 0, 1, v25);
  char v38 = 6;
  char v37 = 4;
  __int16 v36 = v19;
  uint64_t v26 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v27 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v32, 1, 1, v26);
  char v35 = 0;
  return sub_251D44894((uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v31, v30, 0, 0, (uint64_t)v16, v20, v33, v22, 0, 1, 1, 0, (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v24, (uint64_t)v9,
           &v38,
           &v37,
           0,
           0,
           &v36,
           0,
           v27,
           &v35);
}

uint64_t sub_251D4687C(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_251F36300()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x263F8EE88];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v29 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D320);
  uint64_t v3 = sub_251F363F0();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_251F362B0();
  sub_251A1A568(0, &qword_269BA04C0);
  sub_251D4EB60(&qword_269BA2D28, &qword_269BA04C0);
  uint64_t result = sub_251F35E90();
  uint64_t v1 = v31;
  uint64_t v29 = v32;
  uint64_t v5 = v33;
  uint64_t v6 = v34;
  unint64_t v7 = v35;
LABEL_11:
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_251F36340()) {
      goto LABEL_45;
    }
    sub_251A1A568(0, &qword_269BA04C0);
    swift_dynamicCast();
    uint64_t v16 = v30;
LABEL_36:
    uint64_t result = sub_251F36110();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v3 + 48) + 8 * v13) = v16;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    uint64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v15);
    uint64_t v30 = v16;
    id v21 = v16;
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v29 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v29 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v11 != v20)
              {
                unint64_t v18 = *(void *)(v29 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_251A1E630();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v142 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v138 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v137 = (uint64_t)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F128);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v139 = (uint64_t)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v140 = (uint64_t)&v119 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v141 = (uint64_t)&v119 - v13;
  uint64_t v14 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v143 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F098);
  MEMORY[0x270FA5388](v17);
  uint64_t v144 = (uint64_t)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  char v25 = (char *)&v119 - v24;
  MEMORY[0x270FA5388](v23);
  BOOL v27 = (char *)&v119 - v26;
  if ((sub_251F34D70() & 1) == 0) {
    goto LABEL_38;
  }
  uint64_t v136 = v5;
  uint64_t v28 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v29 = v28[5];
  uint64_t v30 = *(void *)(a1 + v29);
  uint64_t v31 = *(void *)(a1 + v29 + 8);
  uint64_t v32 = (void *)(a2 + v29);
  if (v30 != *v32 || v31 != v32[1])
  {
    char v33 = sub_251F36B10();
    char v34 = 0;
    if ((v33 & 1) == 0) {
      return v34 & 1;
    }
  }
  if ((sub_251B04848(*(void *)(a1 + v28[6]), *(void *)(a2 + v28[6])) & 1) == 0) {
    goto LABEL_38;
  }
  uint64_t v35 = v28[7];
  __int16 v36 = (void *)(a1 + v35);
  uint64_t v37 = *(void *)(a1 + v35 + 8);
  char v38 = (void *)(a2 + v35);
  uint64_t v39 = v38[1];
  if (v37)
  {
    if (!v39) {
      goto LABEL_38;
    }
    if (*v36 != *v38 || v37 != v39)
    {
      char v40 = sub_251F36B10();
      char v34 = 0;
      if ((v40 & 1) == 0) {
        return v34 & 1;
      }
    }
  }
  else if (v39)
  {
    goto LABEL_38;
  }
  uint64_t v124 = v16;
  uint64_t v125 = v14;
  int v123 = v7;
  uint64_t v41 = v28[8];
  uint64_t v126 = a1;
  uint64_t v42 = a1 + v41;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v134 = &v119;
  uint64_t v44 = *(uint64_t **)(*(void *)(v43 - 8) + 64);
  MEMORY[0x270FA5388](v43 - 8);
  uint64_t v45 = (char *)&v119 - (((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v42, (uint64_t)v45, &qword_26B21EC20);
  uint64_t v133 = &v119;
  uint64_t v131 = v28;
  uint64_t v46 = v28[8];
  uint64_t v127 = a2;
  int v129 = v44;
  uint64_t v47 = MEMORY[0x270FA5388](a2 + v46);
  int v128 = (char *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v47, (uint64_t)v45, &qword_26B21EC20);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EFF8);
  uint64_t v132 = &v119;
  uint64_t v49 = MEMORY[0x270FA5388](v48 - 8);
  char v51 = (char *)&v119 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = (uint64_t)&v51[*(int *)(v49 + 56)];
  sub_251A1B128((uint64_t)v45, (uint64_t)v51, &qword_26B21EC20);
  sub_251A1B128((uint64_t)v45, v52, &qword_26B21EC20);
  uint64_t v53 = sub_251F34D20();
  uint64_t v130 = *(void *)(v53 - 8);
  char v54 = *(uint64_t (**)(char *, uint64_t))(v130 + 48);
  uint64_t v135 = v53;
  uint64_t v55 = v54(v51, 1);
  if (v55 == 1)
  {
    sub_251A1B064((uint64_t)v45, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v45, &qword_26B21EC20);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v54)(v52, 1, v135) == 1)
    {
      sub_251A1B064((uint64_t)v51, &qword_26B21EC20);
      goto LABEL_20;
    }
LABEL_18:
    sub_251A1B064((uint64_t)v51, &qword_26B21EFF8);
    goto LABEL_38;
  }
  uint64_t v122 = v45;
  id v121 = v45;
  MEMORY[0x270FA5388](v55);
  char v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v54;
  uint64_t v57 = (char *)((char *)&v119 - v128);
  sub_251A1B128((uint64_t)v51, (char *)&v119 - v128, &qword_26B21EC20);
  uint64_t v58 = v56(v52, 1, v135);
  if (v58 == 1)
  {
    sub_251A1B064((uint64_t)v122, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v121, &qword_26B21EC20);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v57, v135);
    goto LABEL_18;
  }
  int v128 = (char *)&v119;
  int v129 = &v119;
  uint64_t v59 = v130;
  MEMORY[0x270FA5388](v58);
  uint64_t v61 = *(void (**)(void))(v59 + 32);
  uint64_t v120 = v51;
  uint64_t v62 = (char *)&v119 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v135;
  v61();
  sub_251D480E0((unint64_t *)&qword_269B9F5C0, MEMORY[0x270FA9188]);
  char v64 = sub_251F35650();
  uint64_t v65 = *(void (**)(char *, uint64_t))(v59 + 8);
  v65(v62, v63);
  sub_251A1B064((uint64_t)v122, &qword_26B21EC20);
  sub_251A1B064((uint64_t)v121, &qword_26B21EC20);
  v65(v57, v63);
  sub_251A1B064((uint64_t)v120, &qword_26B21EC20);
  if ((v64 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_20:
  uint64_t v66 = v131;
  uint64_t v67 = v131[9];
  uint64_t v69 = v126;
  uint64_t v68 = v127;
  uint64_t v70 = *(void *)(v126 + v67);
  uint64_t v71 = *(void *)(v126 + v67 + 8);
  uint64_t v72 = (void *)(v127 + v67);
  uint64_t v73 = v125;
  if (v70 != *v72 || v71 != v72[1])
  {
    char v74 = sub_251F36B10();
    uint64_t v66 = v131;
    char v34 = 0;
    if ((v74 & 1) == 0) {
      return v34 & 1;
    }
  }
  if (*(unsigned __int8 *)(v69 + v66[10]) != *(unsigned __int8 *)(v68 + v66[10])
    || *(unsigned __int8 *)(v69 + v66[11]) != *(unsigned __int8 *)(v68 + v66[11])
    || *(unsigned __int8 *)(v69 + v66[12]) != *(unsigned __int8 *)(v68 + v66[12])
    || *(unsigned __int8 *)(v69 + v66[13]) != *(unsigned __int8 *)(v68 + v66[13])
    || (sub_251F34D70() & 1) == 0
    || *(unsigned __int8 *)(v69 + v66[15]) != *(unsigned __int8 *)(v68 + v66[15])
    || *(unsigned __int8 *)(v69 + v66[16]) != *(unsigned __int8 *)(v68 + v66[16])
    || (sub_251AF99A8(*(void *)(v69 + v66[17]), *(void *)(v68 + v66[17])) & 1) == 0)
  {
    goto LABEL_38;
  }
  sub_251A1B128(v69 + v66[18], (uint64_t)v27, &qword_26B21F090);
  sub_251A1B128(v68 + v66[18], (uint64_t)v25, &qword_26B21F090);
  uint64_t v75 = v144;
  uint64_t v76 = v144 + *(int *)(v17 + 48);
  sub_251A1B128((uint64_t)v27, v144, &qword_26B21F090);
  sub_251A1B128((uint64_t)v25, v76, &qword_26B21F090);
  uint64_t v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48);
  if (v77(v75, 1, v73) != 1)
  {
    sub_251A1B128(v144, (uint64_t)v22, &qword_26B21F090);
    if (v77(v76, 1, v73) != 1)
    {
      uint64_t v81 = (uint64_t)v124;
      sub_251D4EBA4(v76, (uint64_t)v124, type metadata accessor for StaticAccessory.DeviceIdentifier);
      char v82 = _s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO2eeoiySbAE_AEtFZ_0((uint64_t)v22, v81);
      sub_251D4EA98(v81, type metadata accessor for StaticAccessory.DeviceIdentifier);
      sub_251A1B064((uint64_t)v25, &qword_26B21F090);
      sub_251A1B064((uint64_t)v27, &qword_26B21F090);
      sub_251D4EA98((uint64_t)v22, type metadata accessor for StaticAccessory.DeviceIdentifier);
      sub_251A1B064(v144, &qword_26B21F090);
      if ((v82 & 1) == 0) {
        goto LABEL_38;
      }
      goto LABEL_41;
    }
    sub_251A1B064((uint64_t)v25, &qword_26B21F090);
    sub_251A1B064((uint64_t)v27, &qword_26B21F090);
    sub_251D4EA98((uint64_t)v22, type metadata accessor for StaticAccessory.DeviceIdentifier);
LABEL_36:
    uint64_t v78 = &qword_26B21F098;
    uint64_t v79 = v144;
LABEL_37:
    sub_251A1B064(v79, v78);
    goto LABEL_38;
  }
  sub_251A1B064((uint64_t)v25, &qword_26B21F090);
  sub_251A1B064((uint64_t)v27, &qword_26B21F090);
  if (v77(v76, 1, v73) != 1) {
    goto LABEL_36;
  }
  sub_251A1B064(v144, &qword_26B21F090);
LABEL_41:
  uint64_t v83 = v131[19];
  int v84 = *(unsigned __int8 *)(v126 + v83);
  int v85 = *(unsigned __int8 *)(v127 + v83);
  if (v84 == 6)
  {
    BOOL v86 = v85 == 6;
    uint64_t v87 = v131;
    uint64_t v88 = v126;
    uint64_t v89 = v127;
    if (!v86) {
      goto LABEL_38;
    }
  }
  else
  {
    char v34 = 0;
    if (v85 == 6) {
      return v34 & 1;
    }
    BOOL v86 = v84 == v85;
    uint64_t v87 = v131;
    uint64_t v88 = v126;
    uint64_t v89 = v127;
    if (!v86) {
      return v34 & 1;
    }
  }
  uint64_t v90 = v87[20];
  int v91 = *(unsigned __int8 *)(v88 + v90);
  int v92 = *(unsigned __int8 *)(v89 + v90);
  if (v91 == 4)
  {
    BOOL v86 = v92 == 4;
    uint64_t v93 = v131;
    uint64_t v95 = v126;
    uint64_t v94 = v127;
    if (!v86) {
      goto LABEL_38;
    }
  }
  else
  {
    char v34 = 0;
    if (v92 == 4) {
      return v34 & 1;
    }
    BOOL v86 = v91 == v92;
    uint64_t v93 = v131;
    uint64_t v95 = v126;
    uint64_t v94 = v127;
    if (!v86) {
      return v34 & 1;
    }
  }
  uint64_t v96 = v93[21];
  uint64_t v97 = (void *)(v95 + v96);
  uint64_t v98 = *(void *)(v95 + v96 + 8);
  uint64_t v99 = (void *)(v94 + v96);
  uint64_t v100 = v99[1];
  if (!v98)
  {
    uint64_t v101 = v131;
    uint64_t v103 = v126;
    uint64_t v102 = v127;
    if (v100) {
      goto LABEL_38;
    }
LABEL_63:
    uint64_t v105 = v101[22];
    int v106 = *(unsigned __int16 *)(v103 + v105);
    int v107 = *(unsigned __int16 *)(v102 + v105);
    if ((~v106 & 0xFEFC) != 0)
    {
      v146[0] = v106;
      if ((~v107 & 0xFEFC) == 0) {
        goto LABEL_38;
      }
      unsigned __int16 v145 = v107;
      if ((_s13HomeDataModel15StaticAccessoryV20SpecialMediaCategoryO2eeoiySbAE_AEtFZ_0(v146, &v145) & 1) == 0) {
        goto LABEL_38;
      }
    }
    else if ((~v107 & 0xFEFC) != 0)
    {
      goto LABEL_38;
    }
    uint64_t v108 = v131[23];
    uint64_t v109 = *(void *)(v127 + v108);
    if (*(void *)(v126 + v108))
    {
      if (!v109 || (sub_251B05984() & 1) == 0) {
        goto LABEL_38;
      }
    }
    else if (v109)
    {
      goto LABEL_38;
    }
    id v110 = v131;
    uint64_t v111 = v141;
    sub_251A1B128(v126 + v131[24], v141, &qword_26B21F120);
    uint64_t v112 = v140;
    sub_251A1B128(v127 + v110[24], v140, &qword_26B21F120);
    uint64_t v113 = (uint64_t)v123;
    uint64_t v114 = (uint64_t)&v123[*(int *)(v136 + 48)];
    sub_251A1B128(v111, (uint64_t)v123, &qword_26B21F120);
    sub_251A1B128(v112, v114, &qword_26B21F120);
    int v115 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
    if (v115(v113, 1, v142) == 1)
    {
      sub_251A1B064(v140, &qword_26B21F120);
      sub_251A1B064(v141, &qword_26B21F120);
      if (v115(v114, 1, v142) == 1)
      {
        sub_251A1B064((uint64_t)v123, &qword_26B21F120);
LABEL_76:
        char v34 = *(unsigned char *)(v126 + v131[25]) ^ *(unsigned char *)(v127 + v131[25]) ^ 1;
        return v34 & 1;
      }
      goto LABEL_79;
    }
    sub_251A1B128((uint64_t)v123, v139, &qword_26B21F120);
    if (v115(v114, 1, v142) == 1)
    {
      sub_251A1B064(v140, &qword_26B21F120);
      sub_251A1B064(v141, &qword_26B21F120);
      sub_251D4EA98(v139, type metadata accessor for StaticSoftwareUpdate);
LABEL_79:
      uint64_t v78 = &qword_26B21F128;
      uint64_t v79 = (uint64_t)v123;
      goto LABEL_37;
    }
    sub_251D4EBA4(v114, v137, type metadata accessor for StaticSoftwareUpdate);
    if ((sub_251F34D70() & 1) == 0)
    {
      sub_251D4EA98(v137, type metadata accessor for StaticSoftwareUpdate);
      sub_251A1B064(v140, &qword_26B21F120);
      sub_251A1B064(v141, &qword_26B21F120);
      sub_251D4EA98(v139, type metadata accessor for StaticSoftwareUpdate);
      uint64_t v79 = (uint64_t)v123;
      uint64_t v78 = &qword_26B21F120;
      goto LABEL_37;
    }
    uint64_t v116 = v139;
    uint64_t v117 = v137;
    char updated = _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(v139 + *(int *)(v142 + 20), v137 + *(int *)(v142 + 20));
    sub_251D4EA98(v117, type metadata accessor for StaticSoftwareUpdate);
    sub_251A1B064(v140, &qword_26B21F120);
    sub_251A1B064(v141, &qword_26B21F120);
    sub_251D4EA98(v116, type metadata accessor for StaticSoftwareUpdate);
    sub_251A1B064((uint64_t)v123, &qword_26B21F120);
    if (updated) {
      goto LABEL_76;
    }
LABEL_38:
    char v34 = 0;
    return v34 & 1;
  }
  if (!v100) {
    goto LABEL_38;
  }
  BOOL v86 = *v97 == *v99;
  uint64_t v101 = v131;
  uint64_t v103 = v126;
  uint64_t v102 = v127;
  if (v86 && v98 == v100) {
    goto LABEL_63;
  }
  char v104 = sub_251F36B10();
  uint64_t v101 = v131;
  char v34 = 0;
  if (v104) {
    goto LABEL_63;
  }
  return v34 & 1;
}

uint64_t type metadata accessor for StaticMediaProfile()
{
  uint64_t result = qword_26B2208E0;
  if (!qword_26B2208E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251D47B58(uint64_t a1, uint64_t a2)
{
  if (sub_251F356F0() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      if (sub_251F356F0() == a1 && v7 == a2)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v9 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0)
        {
          if (sub_251F356F0() == a1 && v10 == a2)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v12 = sub_251F36B10();
            swift_bridgeObjectRelease();
            if ((v12 & 1) == 0) {
              return 0;
            }
          }
        }
      }
    }
  }
  uint64_t v14 = sub_251F356B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_251F35660();
  MEMORY[0x270FA5388](v18);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v17, v14);
  if (qword_26B21F148 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_26B220CD0;
  uint64_t v20 = sub_251F34DE0();
  MEMORY[0x270FA5388](v20 - 8);
  id v21 = v19;
  sub_251F34DD0();
  uint64_t v13 = sub_251F35750();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v13;
}

uint64_t _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0xD000000000000010;
  }
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = (unsigned __int16 *)(result + 32);
  while (1)
  {
    unsigned int v8 = *v5++;
    unsigned int v7 = v8;
    unsigned int v9 = v8 >> 14;
    if (v8 >> 14)
    {
      if (v9 != 1 && v7 == 32769)
      {
        BOOL v6 = __OFADD__(v4++, 1);
        if (v6) {
          goto LABEL_30;
        }
      }
      goto LABEL_4;
    }
    if (v7 >= 2u) {
      break;
    }
    BOOL v6 = __OFADD__(v3++, 1);
    if (v6)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      return result;
    }
LABEL_4:
    if (!--v1) {
      goto LABEL_19;
    }
  }
  if (v7 == 2)
  {
    BOOL v6 = __OFADD__(v2++, 1);
    if (v6) {
      goto LABEL_31;
    }
    goto LABEL_4;
  }
  BOOL v6 = __OFADD__(v3++, 1);
  if (!v6) {
    goto LABEL_4;
  }
  __break(1u);
LABEL_19:
  if (v4 == 1) {
    return 0x2E7674656C707061;
  }
  uint64_t result = 0x2E646F70656D6F68;
  if (v3 != 2 && v3 != 1)
  {
    uint64_t result = 0xD000000000000010;
    if (v2 == 2) {
      return 0xD000000000000012;
    }
    if (v2 == 1) {
      return result;
    }
    return 0xD000000000000010;
  }
  return result;
}

uint64_t sub_251D480E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251D48128()
{
  unint64_t result = qword_269BA2B78;
  if (!qword_269BA2B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2B78);
  }
  return result;
}

unint64_t sub_251D4817C()
{
  unint64_t result = qword_269BA2B88;
  if (!qword_269BA2B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2B88);
  }
  return result;
}

unint64_t sub_251D481D0()
{
  unint64_t result = qword_269BA2B90;
  if (!qword_269BA2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2B90);
  }
  return result;
}

unint64_t sub_251D48224()
{
  unint64_t result = qword_269BA2BA8;
  if (!qword_269BA2BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2BA8);
  }
  return result;
}

uint64_t sub_251D48278(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC40);
    sub_251D480E0(a2, MEMORY[0x270FA95E8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251D48300()
{
  unint64_t result = qword_269BA2BC8;
  if (!qword_269BA2BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2BC8);
  }
  return result;
}

unint64_t sub_251D48354()
{
  unint64_t result = qword_269BA2BD0;
  if (!qword_269BA2BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2BD0);
  }
  return result;
}

uint64_t sub_251D483A8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA2B98);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251D48418()
{
  unint64_t result = qword_269BA2BE0;
  if (!qword_269BA2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2BE0);
  }
  return result;
}

unint64_t sub_251D4846C(unint64_t a1, void *a2, void *a3, char a4, uint64_t a5)
{
  BOOL v6 = v5;
  id v45 = a3;
  uint64_t v46 = a5;
  LOBYTE(v7) = a4;
  uint64_t v44 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E850);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  char v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v15 = type metadata accessor for StaticMediaProfile();
  uint64_t v42 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v51 = (uint64_t)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v41 = (uint64_t)&v40 - v18;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_251F366C0();
    if (v19) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
    {
LABEL_3:
      char v40 = v6;
      int v54 = v7 & 1;
      unint64_t v50 = a1 & 0xC000000000000001;
      uint64_t v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
      unint64_t v7 = MEMORY[0x263F8EE78];
      uint64_t v20 = 4;
      uint64_t v53 = (uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
      uint64_t v48 = (v42 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      unint64_t v49 = a1;
      uint64_t v43 = v19;
      while (1)
      {
        if (v50) {
          id v22 = (id)MEMORY[0x2533AB3A0](v20 - 4, a1);
        }
        else {
          id v22 = *(id *)(a1 + 8 * v20);
        }
        BOOL v6 = v22;
        a1 = v20 - 3;
        if (__OFADD__(v20 - 4, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        id v23 = objc_msgSend(v22, sel_mediaProfile);
        if (v23)
        {
          uint64_t v24 = v23;
          unint64_t v52 = v7;
          unsigned __int8 v55 = v54;
          char v25 = v44;
          swift_bridgeObjectRetain();
          id v26 = v45;
          uint64_t v27 = v15;
          uint64_t v28 = v12;
          uint64_t v29 = v46;
          swift_bridgeObjectRetain();
          uint64_t v30 = (uint64_t)v28;
          uint64_t v31 = v29;
          char v12 = v28;
          uint64_t v15 = v27;
          sub_251D3D7D0(v24, v25, v26, &v55, v31, v30);
          uint64_t v32 = *v53;
          if ((*v53)(v12, 1, v27) != 1)
          {
            sub_251D4EBA4((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
            (*v47)(v14, 0, 1, v27);

            uint64_t v19 = v43;
            unint64_t v7 = v52;
            int v33 = v32(v14, 1, v15);
            goto LABEL_15;
          }
          sub_251A1B064((uint64_t)v12, &qword_26B21E850);
          uint64_t v19 = v43;
          unint64_t v7 = v52;
        }
        (*v47)(v14, 1, 1, v15);

        int v33 = (*v53)(v14, 1, v15);
LABEL_15:
        if (v33 == 1)
        {
          sub_251A1B064((uint64_t)v14, &qword_26B21E850);
        }
        else
        {
          unint64_t v34 = v7;
          uint64_t v35 = v41;
          sub_251D4EBA4((uint64_t)v14, v41, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
          uint64_t v36 = v35;
          unint64_t v7 = v34;
          sub_251D4EBA4(v36, v51, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v7 = sub_251F0F5C8(0, *(void *)(v34 + 16) + 1, 1, v34);
          }
          unint64_t v38 = *(void *)(v7 + 16);
          unint64_t v37 = *(void *)(v7 + 24);
          if (v38 >= v37 >> 1) {
            unint64_t v7 = sub_251F0F5C8(v37 > 1, v38 + 1, 1, v7);
          }
          *(void *)(v7 + 16) = v38 + 1;
          sub_251D4EBA4(v51, v7+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v38, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        }
        ++v20;
        BOOL v21 = a1 == v19;
        a1 = v49;
        if (v21)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251D48904(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticMediaProfile();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFE0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  uint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  uint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFE0);
    uint64_t v20 = sub_251F34DA0();
    id v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    id v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251D4EBA4((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A12394();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01E60(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251D4EBA4((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251D4EA34(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    unint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251D4EBA4((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251D48D2C(void *a1, char *a2, void *a3, uint64_t a4)
{
  char v7 = *a2;
  id v8 = objc_msgSend(a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v9 = sub_251F35AC0();

  swift_bridgeObjectRetain();
  id v10 = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  unint64_t v12 = sub_251D4846C(v9, a3, v10, v7, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v30 = 0;
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_251A3E180(0, v13, 0);
    uint64_t v14 = v33;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(type metadata accessor for StaticMediaProfile() - 8);
    uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
    unint64_t v29 = v12;
    unint64_t v31 = v12 + ((v17 + 32) & ~v17);
    uint64_t v32 = v16;
    do
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFE0);
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = MEMORY[0x270FA5388](v18 - 8);
      uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
      sub_251D4EAF8(v31 + *(void *)(v32 + 72) * v15, v23, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      uint64_t v24 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      uint64_t v33 = v14;
      unint64_t v26 = *(void *)(v14 + 16);
      unint64_t v25 = *(void *)(v14 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_251A3E180(v25 > 1, v26 + 1, 1);
        uint64_t v14 = v33;
      }
      ++v15;
      *(void *)(v14 + 16) = v26 + 1;
      sub_251A4ECF0((uint64_t)v22, v14+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v26, &qword_26B21FFE0);
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    uint64_t v11 = v30;
    if (*(void *)(v14 + 16)) {
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1D0);
      uint64_t v27 = sub_251F36700();
      goto LABEL_10;
    }
  }
  uint64_t v27 = MEMORY[0x263F8EE80];
LABEL_10:
  uint64_t v33 = v27;
  sub_251D48904(v14, 1, &v33);
  swift_bridgeObjectRelease();
  if (!v11) {
    return v33;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251D49070(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  *(unsigned char *)(v3 + 144) = a1;
  *(void *)(v3 + 32) = *(void *)(type metadata accessor for StaticAccessory(0) - 8);
  *(void *)(v3 + 40) = swift_task_alloc();
  *(void *)(v3 + 48) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = *(void *)(v4 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  *(void *)(v3 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251D491AC, 0, 0);
}

uint64_t sub_251D491AC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  uint64_t v3 = *(void *)(v1 + *(int *)(v2 + 48));
  if (*(void *)(v3 + 16))
  {
    uint64_t v4 = v2;
    unint64_t v5 = sub_2519FE584(v0[2]);
    if (v6)
    {
      uint64_t v8 = v0[9];
      uint64_t v7 = v0[10];
      uint64_t v9 = v0[3];
      sub_251D4EAF8(*(void *)(v3 + 56) + *(void *)(v0[8] + 72) * v5, v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      sub_251D4EBA4(v8, v7, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      uint64_t v10 = *(void *)(v9 + *(int *)(v4 + 32));
      if (*(void *)(v10 + 16))
      {
        unint64_t v11 = sub_2519FE584(v0[10] + *(int *)(v0[7] + 56));
        if (v12)
        {
          uint64_t v14 = v0[5];
          uint64_t v13 = v0[6];
          sub_251D4EAF8(*(void *)(v10 + 56) + *(void *)(v0[4] + 72) * v11, v14, type metadata accessor for StaticAccessory);
          sub_251D4EBA4(v14, v13, type metadata accessor for StaticAccessory);
          v0[11] = sub_251F35C80();
          v0[12] = sub_251F35C70();
          uint64_t v16 = sub_251F35C00();
          return MEMORY[0x270FA2498](sub_251D493C8, v16, v15);
        }
      }
      sub_251D4EA98(v0[10], (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17(0);
}

uint64_t sub_251D493C8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251D49460, 0, 0);
}

uint64_t sub_251D49460()
{
  *(void *)(v0 + 104) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D494EC, v2, v1);
}

uint64_t sub_251D494EC()
{
  swift_release();
  *(void *)(v0 + 112) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251D49560, 0, 0);
}

uint64_t sub_251D49560()
{
  *(void *)(v0 + 120) = sub_251F34D50();
  *(void *)(v0 + 128) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D495F8, v2, v1);
}

uint64_t sub_251D495F8()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = (void *)v0[14];
  swift_release();
  v0[17] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251D49688, 0, 0);
}

uint64_t sub_251D49688()
{
  uint64_t v1 = *(void **)(v0 + 136);
  if (v1)
  {
    if (*(unsigned char *)(v0 + 144)) {
      uint64_t v2 = 2;
    }
    else {
      uint64_t v2 = 1;
    }
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E0E0]), sel_initWithAccessory_targetSleepWakeState_, v1, v2);
  }
  else
  {
    id v3 = 0;
  }
  sub_251D4EA98(*(void *)(v0 + 48), type metadata accessor for StaticAccessory);
  sub_251D4EA98(*(void *)(v0 + 80), (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(id))(v0 + 8);
  return v4(v3);
}

uint64_t sub_251D49790(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x626D79536E6F6369 && a2 == 0xEA00000000006C6FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C62756F447369 && a2 == 0xEC00000068676948 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F70F70 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F70F90 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F70FB0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F70FD0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6A5B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6449656369766564 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xED00006574617453 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6B61577065656C73 && a2 == 0xEE00657461745365 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F70FF0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F6FB40 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x736D6F74706D7973 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEE00657461647055 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71010)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 21;
    }
    else {
      return 22;
    }
  }
}

unint64_t sub_251D4A07C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = 0;
  if ((a1 & 1) == 0) {
    return v13;
  }
  sub_251A1B128(a2, (uint64_t)v8, &qword_26B21F120);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_251A1B064((uint64_t)v8, &qword_26B21F120);
    if (!a3) {
      return 0;
    }
  }
  else
  {
    sub_251D4EBA4((uint64_t)v8, (uint64_t)v12, type metadata accessor for StaticSoftwareUpdate);
    sub_251C40BA4((char *)&v18);
    if (v18 != 8 && (v18 == 3 || v18 == 5))
    {
      unint64_t v13 = 0xD000000000000015;
      sub_251D4EA98((uint64_t)v12, type metadata accessor for StaticSoftwareUpdate);
      return v13;
    }
    sub_251D4EA98((uint64_t)v12, type metadata accessor for StaticSoftwareUpdate);
    if (!a3) {
      return 0;
    }
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_251A915C4(v14);
  sub_251E2713C(&v18);
  swift_bridgeObjectRelease();
  if (!*(void *)(v18 + 16))
  {
    swift_release();
    return 0;
  }
  unsigned int v15 = *(unsigned __int8 *)(v18 + 32);
  swift_release();
  unint64_t v13 = 0;
  if (v15 <= 0x13 && ((1 << v15) & 0x80003) != 0) {
    return 0xD000000000000018;
  }
  return v13;
}

unint64_t sub_251D4A31C()
{
  unint64_t result = qword_269BA2C20;
  if (!qword_269BA2C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2C20);
  }
  return result;
}

unint64_t sub_251D4A370()
{
  unint64_t result = qword_269BA2C28;
  if (!qword_269BA2C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2C28);
  }
  return result;
}

unint64_t sub_251D4A3C4()
{
  unint64_t result = qword_269BA2C30;
  if (!qword_269BA2C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2C30);
  }
  return result;
}

unint64_t sub_251D4A418()
{
  unint64_t result = qword_269BA2C38;
  if (!qword_269BA2C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2C38);
  }
  return result;
}

unint64_t sub_251D4A46C()
{
  unint64_t result = qword_269BA2C40;
  if (!qword_269BA2C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2C40);
  }
  return result;
}

uint64_t sub_251D4A4C0()
{
  return sub_251D4A65C((unint64_t *)&unk_269BA2C70, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
}

uint64_t sub_251D4A508()
{
  return sub_251D480E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95E8]);
}

uint64_t sub_251D4A538(void *a1)
{
  a1[1] = sub_251D4A65C(&qword_269BA2C80, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
  a1[2] = sub_251D4A65C(&qword_269BA2C88, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
  a1[3] = sub_251D4A65C(&qword_269B9D388, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
  a1[4] = sub_251D4A65C(&qword_269B9D370, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
  a1[5] = sub_251D4A65C(&qword_269BA2C90, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
  uint64_t result = sub_251D4A65C(&qword_269BA2C98, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
  a1[6] = result;
  return result;
}

uint64_t sub_251D4A65C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251D4A6A8()
{
  unint64_t result = qword_269BA2CA0;
  if (!qword_269BA2CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CA0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticMediaProfile(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = sub_251F34DA0();
    int v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v93 = v7;
    ((void (*)(void *, void *))v92)(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    unsigned int v15 = (void *)((char *)a1 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v88 = a2;
    __dst = (char *)a1 + v14;
    uint64_t v18 = (char *)a2 + v14;
    uint64_t v19 = sub_251F34D20();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v87 = v19;
    uint64_t v86 = v20;
    if (v21(v18, 1, v19))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    unint64_t v26 = (void *)((char *)a1 + v24);
    uint64_t v27 = (void *)((char *)v88 + v24);
    uint64_t v28 = v27[1];
    void *v26 = *v27;
    v26[1] = v28;
    *((unsigned char *)a1 + v25) = *((unsigned char *)v88 + v25);
    uint64_t v29 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)v88 + a3[11]);
    *((unsigned char *)a1 + v29) = *((unsigned char *)v88 + v29);
    uint64_t v30 = a3[14];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)v88 + a3[13]);
    unint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)v88 + v30;
    swift_bridgeObjectRetain();
    v92(v31, v32, v93);
    uint64_t v33 = a3[16];
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)v88 + a3[15]);
    *((unsigned char *)a1 + v33) = *((unsigned char *)v88 + v33);
    uint64_t v34 = a3[18];
    *(void *)((char *)a1 + a3[17]) = *(void *)((char *)v88 + a3[17]);
    uint64_t v35 = (void *)((char *)a1 + v34);
    BOOL v36 = (void *)((char *)v88 + v34);
    uint64_t v37 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    if (v39(v36, 1, v37))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v92((char *)v35, (char *)v36, v93);
      }
      else
      {
        uint64_t v41 = v36[1];
        *uint64_t v35 = *v36;
        v35[1] = v41;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    uint64_t v42 = a3[20];
    *((unsigned char *)a1 + a3[19]) = *((unsigned char *)v88 + a3[19]);
    *((unsigned char *)a1 + v42) = *((unsigned char *)v88 + v42);
    uint64_t v43 = a3[21];
    uint64_t v44 = a3[22];
    id v45 = (void *)((char *)a1 + v43);
    uint64_t v46 = (void *)((char *)v88 + v43);
    uint64_t v47 = v46[1];
    void *v45 = *v46;
    v45[1] = v47;
    *(_WORD *)((char *)a1 + v44) = *(_WORD *)((char *)v88 + v44);
    uint64_t v48 = a3[24];
    *(void *)((char *)a1 + a3[23]) = *(void *)((char *)v88 + a3[23]);
    __dsta = (char *)a1 + v48;
    unint64_t v49 = (char *)v88 + v48;
    uint64_t v50 = type metadata accessor for StaticSoftwareUpdate(0);
    uint64_t v51 = *(void *)(v50 - 8);
    unint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52(v49, 1, v50))
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
      memcpy(__dsta, v49, *(void *)(*(void *)(v53 - 8) + 64));
LABEL_26:
      *((unsigned char *)a1 + a3[25]) = *((unsigned char *)v88 + a3[25]);
      return a1;
    }
    int v54 = __dsta;
    v92(__dsta, v49, v93);
    uint64_t v55 = *(int *)(v50 + 20);
    char v56 = &__dsta[v55];
    uint64_t v57 = &v49[v55];
    uint64_t v58 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v94 = v50;
      uint64_t v69 = *((void *)v57 + 1);
      *(void *)char v56 = *(void *)v57;
      *((void *)v56 + 1) = v69;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v70 = updated[5];
      uint64_t v71 = &v56[v70];
      uint64_t v72 = &v57[v70];
      swift_bridgeObjectRetain();
      if (v21(v72, 1, v87))
      {
LABEL_21:
        uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
LABEL_24:
        uint64_t v76 = updated[6];
        uint64_t v77 = &v56[v76];
        uint64_t v78 = &v57[v76];
        uint64_t v79 = *((void *)v78 + 1);
        *(void *)uint64_t v77 = *(void *)v78;
        *((void *)v77 + 1) = v79;
        uint64_t v80 = updated[7];
        uint64_t v81 = &v56[v80];
        char v82 = &v57[v80];
        uint64_t v83 = *((void *)v82 + 1);
        *(void *)uint64_t v81 = *(void *)v82;
        *((void *)v81 + 1) = v83;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v56[*(int *)(v84 + 48)] = v57[*(int *)(v84 + 48)];
        swift_storeEnumTagMultiPayload();
        int v54 = __dsta;
        uint64_t v50 = v94;
LABEL_25:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v50);
        goto LABEL_26;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          v92(v56, v57, v93);
          uint64_t v60 = (int *)type metadata accessor for StaticHH2Update(0);
          v56[v60[5]] = v57[v60[5]];
          uint64_t v61 = v60[6];
          uint64_t v62 = &v56[v61];
          uint64_t v63 = &v57[v61];
          uint64_t v65 = *(void *)v63;
          uint64_t v64 = *((void *)v63 + 1);
          *(void *)uint64_t v62 = v65;
          *((void *)v62 + 1) = v64;
          uint64_t v66 = v60[7];
          uint64_t v67 = &v56[v66];
          uint64_t v68 = &v57[v66];
          v67[8] = v68[8];
          *(void *)uint64_t v67 = *(void *)v68;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_25;
      }
      uint64_t v94 = v50;
      uint64_t v73 = *((void *)v57 + 1);
      *(void *)char v56 = *(void *)v57;
      *((void *)v56 + 1) = v73;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v74 = updated[5];
      uint64_t v71 = &v56[v74];
      uint64_t v72 = &v57[v74];
      swift_bridgeObjectRetain();
      if (v21(v72, 1, v87)) {
        goto LABEL_21;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v71, v72, v87);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v71, 0, 1, v87);
    goto LABEL_24;
  }
  uint64_t v23 = *a2;
  *a1 = *a2;
  a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for StaticMediaProfile(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = sub_251F34D20();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v16(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  v5(a1 + a2[14], v4);
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[18];
  uint64_t v10 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      v5(v9, v4);
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[24];
  uint64_t v12 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
  if (!result)
  {
    v5(v11, v4);
    uint64_t v14 = v11 + *(int *)(v12 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2 || result == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = v14 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v16(v15, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (result) {
        return result;
      }
      v5(v14, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StaticMediaProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v90 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v91 = v6;
  v90(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v86 = a3;
  __dst = (void *)(a1 + v13);
  uint64_t v17 = (const void *)(a2 + v13);
  uint64_t v18 = sub_251F34D20();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v85 = v18;
  uint64_t v84 = v19;
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(__dst, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(__dst, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  uint64_t v22 = v86[9];
  uint64_t v23 = v86[10];
  uint64_t v24 = (void *)(a1 + v22);
  uint64_t v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v27 = v86[12];
  *(unsigned char *)(a1 + v86[11]) = *(unsigned char *)(a2 + v86[11]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = v86[14];
  *(unsigned char *)(a1 + v86[13]) = *(unsigned char *)(a2 + v86[13]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  swift_bridgeObjectRetain();
  ((void (*)(uint64_t, uint64_t, uint64_t))v90)(v29, v30, v91);
  uint64_t v31 = v86[16];
  *(unsigned char *)(a1 + v86[15]) = *(unsigned char *)(a2 + v86[15]);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  uint64_t v32 = v86[18];
  *(void *)(a1 + v86[17]) = *(void *)(a2 + v86[17]);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  if (v37(v34, 1, v35))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
    memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      ((void (*)(void *, void *, uint64_t))v90)(v33, v34, v91);
    }
    else
    {
      uint64_t v39 = v34[1];
      *uint64_t v33 = *v34;
      v33[1] = v39;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v40 = v86[20];
  *(unsigned char *)(a1 + v86[19]) = *(unsigned char *)(a2 + v86[19]);
  *(unsigned char *)(a1 + v40) = *(unsigned char *)(a2 + v40);
  uint64_t v41 = v86[21];
  uint64_t v42 = v86[22];
  uint64_t v43 = (void *)(a1 + v41);
  uint64_t v44 = (void *)(a2 + v41);
  uint64_t v45 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v45;
  *(_WORD *)(a1 + v42) = *(_WORD *)(a2 + v42);
  uint64_t v46 = v86[24];
  *(void *)(a1 + v86[23]) = *(void *)(a2 + v86[23]);
  __dsta = (char *)(a1 + v46);
  uint64_t v47 = (char *)(a2 + v46);
  uint64_t v48 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v50(v47, 1, v48))
  {
    unint64_t v52 = __dsta;
    ((void (*)(char *, char *, uint64_t))v90)(__dsta, v47, v91);
    uint64_t v53 = *(int *)(v48 + 20);
    int v54 = &__dsta[v53];
    uint64_t v55 = &v47[v53];
    uint64_t v56 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v92 = v48;
      uint64_t v67 = *((void *)v55 + 1);
      *(void *)int v54 = *(void *)v55;
      *((void *)v54 + 1) = v67;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v68 = updated[5];
      uint64_t v69 = &v54[v68];
      uint64_t v70 = &v55[v68];
      swift_bridgeObjectRetain();
      if (v20(v70, 1, v85))
      {
LABEL_19:
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
LABEL_22:
        uint64_t v74 = updated[6];
        uint64_t v75 = &v54[v74];
        uint64_t v76 = &v55[v74];
        uint64_t v77 = *((void *)v76 + 1);
        *(void *)uint64_t v75 = *(void *)v76;
        *((void *)v75 + 1) = v77;
        uint64_t v78 = updated[7];
        uint64_t v79 = &v54[v78];
        uint64_t v80 = &v55[v78];
        uint64_t v81 = *((void *)v80 + 1);
        *(void *)uint64_t v79 = *(void *)v80;
        *((void *)v79 + 1) = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v54[*(int *)(v82 + 48)] = v55[*(int *)(v82 + 48)];
        swift_storeEnumTagMultiPayload();
        unint64_t v52 = __dsta;
        uint64_t v48 = v92;
LABEL_23:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v48);
        goto LABEL_24;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v90)(v54, v55, v91);
          uint64_t v58 = (int *)type metadata accessor for StaticHH2Update(0);
          v54[v58[5]] = v55[v58[5]];
          uint64_t v59 = v58[6];
          uint64_t v60 = &v54[v59];
          uint64_t v61 = &v55[v59];
          uint64_t v63 = *(void *)v61;
          uint64_t v62 = *((void *)v61 + 1);
          *(void *)uint64_t v60 = v63;
          *((void *)v60 + 1) = v62;
          uint64_t v64 = v58[7];
          uint64_t v65 = &v54[v64];
          uint64_t v66 = &v55[v64];
          v65[8] = v66[8];
          *(void *)uint64_t v65 = *(void *)v66;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_23;
      }
      uint64_t v92 = v48;
      uint64_t v71 = *((void *)v55 + 1);
      *(void *)int v54 = *(void *)v55;
      *((void *)v54 + 1) = v71;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v72 = updated[5];
      uint64_t v69 = &v54[v72];
      uint64_t v70 = &v55[v72];
      swift_bridgeObjectRetain();
      if (v20(v70, 1, v85)) {
        goto LABEL_19;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v69, v70, v85);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v69, 0, 1, v85);
    goto LABEL_22;
  }
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(__dsta, v47, *(void *)(*(void *)(v51 - 8) + 64));
LABEL_24:
  *(unsigned char *)(a1 + v86[25]) = *(unsigned char *)(a2 + v86[25]);
  return a1;
}

uint64_t assignWithCopy for StaticMediaProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  __src = *(void **)(v6 - 8);
  char v104 = (void (*)(uint64_t, uint64_t))__src[3];
  __dst = (void *)v6;
  v104(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_251F34D20();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
  unsigned int v19 = v18(v14, 1, v16);
  uint64_t v99 = (unsigned int (*)(char *, uint64_t, uint64_t))v18;
  unsigned int v20 = v18(v15, 1, v16);
  uint64_t v100 = v16;
  uint64_t v98 = v17;
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  ((void (*)(uint64_t, uint64_t, void *))v104)(a1 + a3[14], a2 + a3[14], __dst);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[18];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        ((void (*)(void *, void *, void *))__src[2])(v26, v27, __dst);
      }
      else
      {
        void *v26 = *v27;
        v26[1] = v27[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_21;
    }
LABEL_13:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_21;
  }
  if (v32)
  {
    sub_251D4EA98((uint64_t)v26, type metadata accessor for StaticAccessory.DeviceIdentifier);
    goto LABEL_13;
  }
  if (a1 != a2)
  {
    sub_251D4EA98((uint64_t)v26, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      ((void (*)(void *, void *, void *))__src[2])(v26, v27, __dst);
    }
    else
    {
      void *v26 = *v27;
      v26[1] = v27[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  uint64_t v34 = a3[21];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[24];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (char *)(a2 + v37);
  uint64_t v40 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42((uint64_t)v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      uint64_t v45 = (void (*)(uint64_t, char *, void *))__src[2];
      v45(v38, v39, __dst);
      uint64_t v46 = *(int *)(v40 + 20);
      uint64_t v47 = (void *)(v38 + v46);
      uint64_t v48 = &v39[v46];
      uint64_t v105 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *uint64_t v47 = *(void *)v48;
        v47[1] = *((void *)v48 + 1);
        char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v74 = updated[5];
        __dsta = (char *)v47 + v74;
        uint64_t v75 = &v48[v74];
        swift_bridgeObjectRetain();
        __srca = v75;
        if (v99(v75, 1, v100))
        {
LABEL_39:
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dsta, __srca, *(void *)(*(void *)(v77 - 8) + 64));
LABEL_48:
          uint64_t v83 = updated[6];
          uint64_t v84 = (void *)((char *)v47 + v83);
          uint64_t v85 = &v48[v83];
          *uint64_t v84 = *(void *)v85;
          v84[1] = *((void *)v85 + 1);
          uint64_t v86 = updated[7];
          uint64_t v87 = (void *)((char *)v47 + v86);
          uint64_t v88 = &v48[v86];
          void *v87 = *(void *)v88;
          v87[1] = *((void *)v88 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v47 + *(int *)(v89 + 48)) = v48[*(int *)(v89 + 48)];
          goto LABEL_49;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v47, v48, *(void *)(*(void *)(v105 - 8) + 64));
LABEL_50:
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
            goto LABEL_51;
          }
          v45((uint64_t)v47, v48, __dst);
          uint64_t v50 = (int *)type metadata accessor for StaticHH2Update(0);
          *((unsigned char *)v47 + v50[5]) = v48[v50[5]];
          uint64_t v51 = v50[6];
          unint64_t v52 = (void *)((char *)v47 + v51);
          uint64_t v53 = &v48[v51];
          void *v52 = *(void *)v53;
          v52[1] = *((void *)v53 + 1);
          uint64_t v54 = v50[7];
          uint64_t v55 = (char *)v47 + v54;
          uint64_t v56 = &v48[v54];
          char v57 = v56[8];
          *(void *)uint64_t v55 = *(void *)v56;
          v55[8] = v57;
          swift_bridgeObjectRetain();
LABEL_49:
          swift_storeEnumTagMultiPayload();
          goto LABEL_50;
        }
        *uint64_t v47 = *(void *)v48;
        v47[1] = *((void *)v48 + 1);
        char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v76 = updated[5];
        __dsta = (char *)v47 + v76;
        uint64_t v75 = &v48[v76];
        swift_bridgeObjectRetain();
        __srca = v75;
        if (v99(v75, 1, v100)) {
          goto LABEL_39;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(__dsta, v75, v100);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(__dsta, 0, 1, v100);
      goto LABEL_48;
    }
    goto LABEL_29;
  }
  if (!v44)
  {
    ((void (*)(uint64_t, char *, void *))v104)(v38, v39, __dst);
    if (a1 == a2) {
      goto LABEL_51;
    }
    uint64_t v61 = *(int *)(v40 + 20);
    uint64_t v62 = (void *)(v38 + v61);
    uint64_t v63 = &v39[v61];
    sub_251D4EA98((uint64_t)v62, type metadata accessor for StaticSoftwareUpdate.Kind);
    uint64_t v64 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v65 = swift_getEnumCaseMultiPayload();
    switch(v65)
    {
      case 2:
        *uint64_t v62 = *(void *)v63;
        v62[1] = *((void *)v63 + 1);
        uint64_t v78 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v79 = v78[5];
        __dstb = (char *)v62 + v79;
        uint64_t v80 = &v63[v79];
        swift_bridgeObjectRetain();
        if (v99(v80, 1, v100))
        {
LABEL_43:
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dstb, v80, *(void *)(*(void *)(v81 - 8) + 64));
LABEL_53:
          uint64_t v91 = v78[6];
          uint64_t v92 = (void *)((char *)v62 + v91);
          uint64_t v93 = &v63[v91];
          void *v92 = *(void *)v93;
          v92[1] = *((void *)v93 + 1);
          uint64_t v94 = v78[7];
          uint64_t v95 = (void *)((char *)v62 + v94);
          uint64_t v96 = &v63[v94];
          void *v95 = *(void *)v96;
          v95[1] = *((void *)v96 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v62 + *(int *)(v97 + 48)) = v63[*(int *)(v97 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_51;
        }
        break;
      case 1:
        *uint64_t v62 = *(void *)v63;
        v62[1] = *((void *)v63 + 1);
        uint64_t v78 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v82 = v78[5];
        __dstb = (char *)v62 + v82;
        uint64_t v80 = &v63[v82];
        swift_bridgeObjectRetain();
        if (v99(v80, 1, v100)) {
          goto LABEL_43;
        }
        break;
      case 0:
        ((void (*)(void *, char *, void *))__src[2])(v62, v63, __dst);
        uint64_t v66 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v62 + v66[5]) = v63[v66[5]];
        uint64_t v67 = v66[6];
        uint64_t v68 = (void *)((char *)v62 + v67);
        uint64_t v69 = &v63[v67];
        *uint64_t v68 = *(void *)v69;
        v68[1] = *((void *)v69 + 1);
        uint64_t v70 = v66[7];
        uint64_t v71 = (char *)v62 + v70;
        uint64_t v72 = &v63[v70];
        char v73 = v72[8];
        *(void *)uint64_t v71 = *(void *)v72;
        v71[8] = v73;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      default:
        size_t v58 = *(void *)(*(void *)(v64 - 8) + 64);
        uint64_t v59 = v62;
        uint64_t v60 = v63;
        goto LABEL_30;
    }
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(__dstb, v80, v100);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(__dstb, 0, 1, v100);
    goto LABEL_53;
  }
  sub_251D4EA98(v38, type metadata accessor for StaticSoftwareUpdate);
LABEL_29:
  size_t v58 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
  uint64_t v59 = (void *)v38;
  uint64_t v60 = v39;
LABEL_30:
  memcpy(v59, v60, v58);
LABEL_51:
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  return a1;
}

uint64_t initializeWithTake for StaticMediaProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = (void **)(*(void *)(v6 - 8) + 32);
  __dst = (void (*)(uint64_t, uint64_t, uint64_t))*v7;
  ((void (*)(uint64_t, uint64_t, uint64_t))*v7)(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_251F34D20();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v50 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v51 = v12;
  uint64_t v49 = v13;
  if (v50(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  __dst(a1 + v17, a2 + v17, v6);
  uint64_t v18 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  unsigned int v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __dst((uint64_t)v20, (uint64_t)v21, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(v23 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(_WORD *)(a1 + v26) = *(_WORD *)(a2 + v26);
  uint64_t v27 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  uint64_t v28 = (char *)(a1 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  uint64_t v30 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v31 = *(void *)(v30 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    __dst((uint64_t)v28, (uint64_t)v29, v6);
    uint64_t v33 = *(int *)(v30 + 20);
    uint64_t v48 = &v28[v33];
    uint64_t v34 = &v29[v33];
    uint64_t v47 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v34;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v40 = updated[5];
      __dsta = &v48[v40];
      uint64_t v41 = &v34[v40];
      if (v50(&v34[v40], 1, v51))
      {
LABEL_19:
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dsta, v41, *(void *)(*(void *)(v43 - 8) + 64));
LABEL_22:
        *(_OWORD *)&v48[updated[6]] = *(_OWORD *)&v34[updated[6]];
        *(_OWORD *)&v48[updated[7]] = *(_OWORD *)&v34[updated[7]];
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v48[*(int *)(v44 + 48)] = v34[*(int *)(v44 + 48)];
        goto LABEL_23;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v48, v34, *(void *)(*(void *)(v47 - 8) + 64));
LABEL_24:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          goto LABEL_25;
        }
        __dst((uint64_t)v48, (uint64_t)v34, v6);
        uint64_t v36 = (int *)type metadata accessor for StaticHH2Update(0);
        v48[v36[5]] = v34[v36[5]];
        *(_OWORD *)&v48[v36[6]] = *(_OWORD *)&v34[v36[6]];
        uint64_t v37 = v36[7];
        uint64_t v38 = &v48[v37];
        uint64_t v39 = &v34[v37];
        v38[8] = v39[8];
        *(void *)uint64_t v38 = *(void *)v39;
LABEL_23:
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v34;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v42 = updated[5];
      __dsta = &v48[v42];
      uint64_t v41 = &v34[v42];
      if (v50(&v34[v42], 1, v51)) {
        goto LABEL_19;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(__dsta, v41, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(__dsta, 0, 1, v51);
    goto LABEL_22;
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
LABEL_25:
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  return a1;
}

uint64_t assignWithTake for StaticMediaProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v98 = *(void *)(v6 - 8);
  uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 40);
  v103(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v99 = a3;
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_251F34D20();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48);
  unsigned int v23 = v22(v18, 1, v20);
  uint64_t v96 = (unsigned int (*)(char *, uint64_t, uint64_t))v22;
  unsigned int v24 = v22(v19, 1, v20);
  uint64_t v97 = v20;
  uint64_t v95 = v21;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = v99;
  uint64_t v27 = v99[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  void *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v99[11];
  *(unsigned char *)(a1 + v99[10]) = *(unsigned char *)(a2 + v99[10]);
  *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
  uint64_t v33 = v99[13];
  *(unsigned char *)(a1 + v99[12]) = *(unsigned char *)(a2 + v99[12]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v100 = v6;
  v103(a1 + v26[14], a2 + v26[14], v6);
  uint64_t v34 = v26[16];
  *(unsigned char *)(a1 + v26[15]) = *(unsigned char *)(a2 + v26[15]);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  *(void *)(a1 + v26[17]) = *(void *)(a2 + v26[17]);
  swift_bridgeObjectRelease();
  uint64_t v35 = v26[18];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      if (a1 == a2) {
        goto LABEL_21;
      }
      sub_251D4EA98((uint64_t)v36, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(void *, void *, uint64_t))(v98 + 32))(v36, v37, v100);
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
      size_t v43 = *(void *)(v39 + 64);
LABEL_14:
      memcpy(v36, v37, v43);
      goto LABEL_21;
    }
    sub_251D4EA98((uint64_t)v36, type metadata accessor for StaticAccessory.DeviceIdentifier);
LABEL_13:
    size_t v43 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090) - 8) + 64);
    goto LABEL_14;
  }
  if (v42) {
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(void *, void *, uint64_t))(v98 + 32))(v36, v37, v100);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(void *)(v39 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_21:
  uint64_t v44 = v26[20];
  *(unsigned char *)(a1 + v26[19]) = *(unsigned char *)(a2 + v26[19]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v45 = v26[21];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  void *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v26[23];
  *(_WORD *)(a1 + v26[22]) = *(_WORD *)(a2 + v26[22]);
  *(void *)(a1 + v50) = *(void *)(a2 + v50);
  swift_bridgeObjectRelease();
  uint64_t v51 = v26[24];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = (char *)(a2 + v51);
  uint64_t v54 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56((uint64_t)v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      uint64_t v59 = *(void (**)(uint64_t, char *, uint64_t))(v98 + 32);
      v59(v52, v53, v100);
      uint64_t v60 = *(int *)(v54 + 20);
      uint64_t v61 = (_OWORD *)(v52 + v60);
      uint64_t v62 = &v53[v60];
      uint64_t v104 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        _OWORD *v61 = *(_OWORD *)v62;
        uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v81 = *(int *)(updated + 20);
        uint64_t v101 = updated;
        __dst = (char *)v61 + v81;
        uint64_t v82 = &v62[v81];
        if (v96(&v62[v81], 1, v97))
        {
LABEL_39:
          uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dst, v82, *(void *)(*(void *)(v85 - 8) + 64));
LABEL_48:
          *(_OWORD *)((char *)v61 + *(int *)(v101 + 24)) = *(_OWORD *)&v62[*(int *)(v101 + 24)];
          *(_OWORD *)((char *)v61 + *(int *)(v101 + 28)) = *(_OWORD *)&v62[*(int *)(v101 + 28)];
          uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v61 + *(int *)(v92 + 48)) = v62[*(int *)(v92 + 48)];
          goto LABEL_49;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v61, v62, *(void *)(*(void *)(v104 - 8) + 64));
LABEL_50:
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
            goto LABEL_51;
          }
          v59((uint64_t)v61, v62, v100);
          uint64_t v64 = (int *)type metadata accessor for StaticHH2Update(0);
          *((unsigned char *)v61 + v64[5]) = v62[v64[5]];
          *(_OWORD *)((char *)v61 + v64[6]) = *(_OWORD *)&v62[v64[6]];
          uint64_t v65 = v64[7];
          uint64_t v66 = (char *)v61 + v65;
          uint64_t v67 = &v62[v65];
          v66[8] = v67[8];
          *(void *)uint64_t v66 = *(void *)v67;
LABEL_49:
          swift_storeEnumTagMultiPayload();
          goto LABEL_50;
        }
        _OWORD *v61 = *(_OWORD *)v62;
        uint64_t v83 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v84 = *(int *)(v83 + 20);
        uint64_t v101 = v83;
        __dst = (char *)v61 + v84;
        uint64_t v82 = &v62[v84];
        if (v96(&v62[v84], 1, v97)) {
          goto LABEL_39;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(__dst, v82, v97);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(__dst, 0, 1, v97);
      goto LABEL_48;
    }
    goto LABEL_29;
  }
  if (!v58)
  {
    v103(v52, (uint64_t)v53, v100);
    if (a1 == a2) {
      goto LABEL_51;
    }
    uint64_t v71 = *(int *)(v54 + 20);
    uint64_t v72 = (_OWORD *)(v52 + v71);
    char v73 = &v53[v71];
    sub_251D4EA98((uint64_t)v72, type metadata accessor for StaticSoftwareUpdate.Kind);
    uint64_t v74 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v75 = swift_getEnumCaseMultiPayload();
    switch(v75)
    {
      case 2:
        *uint64_t v72 = *(_OWORD *)v73;
        uint64_t v86 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v87 = v86[5];
        uint64_t v88 = (char *)v72 + v87;
        uint64_t v89 = &v73[v87];
        if (v96(&v73[v87], 1, v97))
        {
LABEL_43:
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
LABEL_53:
          *(_OWORD *)((char *)v72 + v86[6]) = *(_OWORD *)&v73[v86[6]];
          *(_OWORD *)((char *)v72 + v86[7]) = *(_OWORD *)&v73[v86[7]];
          uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v72 + *(int *)(v94 + 48)) = v73[*(int *)(v94 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_51;
        }
        break;
      case 1:
        *uint64_t v72 = *(_OWORD *)v73;
        uint64_t v86 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v91 = v86[5];
        uint64_t v88 = (char *)v72 + v91;
        uint64_t v89 = &v73[v91];
        if (v96(&v73[v91], 1, v97)) {
          goto LABEL_43;
        }
        break;
      case 0:
        (*(void (**)(_OWORD *, char *, uint64_t))(v98 + 32))(v72, v73, v100);
        uint64_t v76 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v72 + v76[5]) = v73[v76[5]];
        *(_OWORD *)((char *)v72 + v76[6]) = *(_OWORD *)&v73[v76[6]];
        uint64_t v77 = v76[7];
        uint64_t v78 = (char *)v72 + v77;
        uint64_t v79 = &v73[v77];
        v78[8] = v79[8];
        *(void *)uint64_t v78 = *(void *)v79;
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      default:
        size_t v68 = *(void *)(*(void *)(v74 - 8) + 64);
        uint64_t v69 = v72;
        uint64_t v70 = v73;
        goto LABEL_30;
    }
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v88, v89, v97);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v88, 0, 1, v97);
    goto LABEL_53;
  }
  sub_251D4EA98(v52, type metadata accessor for StaticSoftwareUpdate);
LABEL_29:
  size_t v68 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
  uint64_t v69 = (void *)v52;
  uint64_t v70 = v53;
LABEL_30:
  memcpy(v69, v70, v68);
LABEL_51:
  *(unsigned char *)(a1 + v26[25]) = *(unsigned char *)(a2 + v26[25]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticMediaProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D4DAA8);
}

uint64_t sub_251D4DAA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[8];
LABEL_11:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_12;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[18];
    goto LABEL_11;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[24];
  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for StaticMediaProfile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D4DC98);
}

uint64_t sub_251D4DC98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[8];
LABEL_9:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[18];
    goto LABEL_9;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[24];
  return v18(v20, a2, a2, v19);
}

void sub_251D4DE74()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251D4E06C(319, (unint64_t *)&qword_26B21FD28, MEMORY[0x270FA9170]);
    if (v1 <= 0x3F)
    {
      sub_251D4E06C(319, &qword_26B220540, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (v2 <= 0x3F)
      {
        sub_251D4E06C(319, &qword_26B220B48, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_251D4E06C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_251F36190();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState()
{
  return &type metadata for StaticMediaProfile.SleepWakeState;
}

unsigned char *_s13HomeDataModel18StaticMediaProfileV14SleepWakeStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D4E1A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.CodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.AwakeCodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.AwakeCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.SleepCodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.SleepCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.UnknownCodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.NotHandledCodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.NotHandledCodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticMediaProfile.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StaticMediaProfile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *uint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D4E374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.CodingKeys()
{
  return &type metadata for StaticMediaProfile.CodingKeys;
}

unint64_t sub_251D4E3B0()
{
  unint64_t result = qword_269BA2CA8;
  if (!qword_269BA2CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CA8);
  }
  return result;
}

unint64_t sub_251D4E408()
{
  unint64_t result = qword_269BA2CB0;
  if (!qword_269BA2CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CB0);
  }
  return result;
}

unint64_t sub_251D4E460()
{
  unint64_t result = qword_269BA2CB8;
  if (!qword_269BA2CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CB8);
  }
  return result;
}

unint64_t sub_251D4E4B8()
{
  unint64_t result = qword_269BA2CC0;
  if (!qword_269BA2CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CC0);
  }
  return result;
}

unint64_t sub_251D4E510()
{
  unint64_t result = qword_269BA2CC8;
  if (!qword_269BA2CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CC8);
  }
  return result;
}

unint64_t sub_251D4E568()
{
  unint64_t result = qword_269BA2CD0;
  if (!qword_269BA2CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CD0);
  }
  return result;
}

unint64_t sub_251D4E5C0()
{
  unint64_t result = qword_269BA2CD8;
  if (!qword_269BA2CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CD8);
  }
  return result;
}

unint64_t sub_251D4E618()
{
  unint64_t result = qword_269BA2CE0;
  if (!qword_269BA2CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CE0);
  }
  return result;
}

unint64_t sub_251D4E670()
{
  unint64_t result = qword_269BA2CE8;
  if (!qword_269BA2CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CE8);
  }
  return result;
}

unint64_t sub_251D4E6C8()
{
  unint64_t result = qword_269BA2CF0;
  if (!qword_269BA2CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CF0);
  }
  return result;
}

unint64_t sub_251D4E720()
{
  unint64_t result = qword_269BA2CF8;
  if (!qword_269BA2CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2CF8);
  }
  return result;
}

unint64_t sub_251D4E778()
{
  unint64_t result = qword_269BA2D00;
  if (!qword_269BA2D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2D00);
  }
  return result;
}

unint64_t sub_251D4E7D0()
{
  unint64_t result = qword_269BA2D08;
  if (!qword_269BA2D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2D08);
  }
  return result;
}

unint64_t sub_251D4E828()
{
  unint64_t result = qword_269BA2D10;
  if (!qword_269BA2D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269BA2D10);
  }
  return result;
}

uint64_t sub_251D4E87C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656B617761 && a2 == 0xE500000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7065656C73 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C646E6148746F6ELL && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251D4EA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D4EA98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D4EAF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D4EB60(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251A1A568(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251D4EBA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D4EC10(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StaticServiceGroup();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v38 = (uint64_t)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  v33[1] = v1;
  uint64_t v46 = MEMORY[0x263F8EE78];
  sub_251A3E6EC(0, v5, 0);
  uint64_t v6 = v46;
  uint64_t result = sub_251AC5764(a1);
  uint64_t v9 = result;
  uint64_t v10 = 0;
  char v12 = v11 & 1;
  uint64_t v13 = a1 + 64;
  int64_t v35 = v5;
  uint64_t v36 = v8;
  uint64_t v34 = a1 + 88;
  uint64_t v37 = a1 + 64;
  while ((v12 & 1) == 0)
  {
    if (v9 < 0 || v9 >= 1 << *(unsigned char *)(a1 + 32))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      break;
    }
    unint64_t v17 = (unint64_t)v9 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(a1 + 36) != v8) {
      goto LABEL_28;
    }
    uint64_t v41 = v10;
    uint64_t v42 = v8;
    uint64_t v18 = v38;
    sub_251D5C0FC(*(void *)(a1 + 56) + *(void *)(v39 + 72) * v9, v38, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v44 = v40;
    uint64_t v45 = sub_251D5C164(&qword_269B9E278, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
    sub_251D5C274(v18, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v46 = v6;
    unint64_t v21 = *(void *)(v6 + 16);
    unint64_t v20 = *(void *)(v6 + 24);
    if (v21 >= v20 >> 1) {
      sub_251A3E6EC(v20 > 1, v21 + 1, 1);
    }
    uint64_t v22 = v44;
    uint64_t v23 = v45;
    uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
    MEMORY[0x270FA5388](v24);
    uint64_t v26 = (char *)v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v27 + 16))(v26);
    sub_251D0655C(v21, (uint64_t)v26, &v46, v22, v23);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
    int64_t v14 = 1 << *(unsigned char *)(a1 + 32);
    if (v9 >= v14) {
      goto LABEL_29;
    }
    uint64_t v13 = v37;
    uint64_t v28 = *(void *)(v37 + 8 * v17);
    if ((v28 & (1 << v9)) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(a1 + 36) != v42) {
      goto LABEL_31;
    }
    uint64_t v6 = v46;
    unint64_t v29 = v28 & (-2 << (v9 & 0x3F));
    if (v29)
    {
      int64_t v14 = __clz(__rbit64(v29)) | v9 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v35;
      uint64_t v16 = v41;
    }
    else
    {
      unint64_t v30 = v17 + 1;
      unint64_t v31 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v35;
      uint64_t v16 = v41;
      if (v17 + 1 < v31)
      {
        unint64_t v32 = *(void *)(v37 + 8 * v30);
        if (!v32)
        {
          unint64_t v30 = v17 + 2;
          if (v17 + 2 >= v31) {
            goto LABEL_4;
          }
          unint64_t v32 = *(void *)(v37 + 8 * v30);
          if (!v32)
          {
            while (v31 - 3 != v17)
            {
              unint64_t v32 = *(void *)(v34 + 8 * v17++);
              if (v32)
              {
                uint64_t result = sub_251A4ECE4(v9, v42, 0);
                unint64_t v30 = v17 + 2;
                goto LABEL_18;
              }
            }
            uint64_t result = sub_251A4ECE4(v9, v42, 0);
            goto LABEL_4;
          }
        }
LABEL_18:
        int64_t v14 = __clz(__rbit64(v32)) + (v30 << 6);
      }
    }
LABEL_4:
    char v12 = 0;
    uint64_t v10 = v16 + 1;
    uint64_t v8 = v36;
    uint64_t v9 = v14;
    if (v10 == v15) {
      return v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251D4F028(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessory(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v29 = (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t result = MEMORY[0x270FA5388](v6);
  char v11 = (char *)&v27 - v10;
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v30 = a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v32 = MEMORY[0x263F8EE78];
  unint64_t v17 = v15 & v13;
  int64_t v31 = (unint64_t)(v14 + 63) >> 6;
  if ((v15 & v13) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v18 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v12 << 6))
  {
    uint64_t v20 = *(void *)(v3 + 72);
    sub_251D5C0FC(*(void *)(a1 + 56) + v20 * i, (uint64_t)v8, type metadata accessor for StaticAccessory);
    sub_251D5C274((uint64_t)v8, (uint64_t)v11, type metadata accessor for StaticAccessory);
    if (v11[*(int *)(v2 + 72)])
    {
      uint64_t result = sub_251D5C1AC((uint64_t)v11, type metadata accessor for StaticAccessory);
      if (v17) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_251D5C274((uint64_t)v11, v29, type metadata accessor for StaticAccessory);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_251A3E114(0, *(void *)(v16 + 16) + 1, 1);
      }
      uint64_t v16 = v32;
      unint64_t v25 = *(void *)(v32 + 16);
      unint64_t v24 = *(void *)(v32 + 24);
      unint64_t v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        unint64_t v27 = *(void *)(v32 + 16);
        unint64_t v28 = v25 + 1;
        sub_251A3E114(v24 > 1, v25 + 1, 1);
        unint64_t v25 = v27;
        unint64_t v26 = v28;
        uint64_t v16 = v32;
      }
      *(void *)(v16 + 16) = v26;
      uint64_t result = sub_251D5C274(v29, v16+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ v25 * v20, type metadata accessor for StaticAccessory);
      if (v17) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v21 >= v31) {
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v21);
    ++v12;
    if (!v22)
    {
      int64_t v12 = v21 + 1;
      if (v21 + 1 >= v31) {
        goto LABEL_29;
      }
      unint64_t v22 = *(void *)(v30 + 8 * v12);
      if (!v22)
      {
        int64_t v12 = v21 + 2;
        if (v21 + 2 >= v31) {
          goto LABEL_29;
        }
        unint64_t v22 = *(void *)(v30 + 8 * v12);
        if (!v22)
        {
          int64_t v12 = v21 + 3;
          if (v21 + 3 >= v31) {
            goto LABEL_29;
          }
          unint64_t v22 = *(void *)(v30 + 8 * v12);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v31)
  {
LABEL_29:
    swift_release();
    return v16;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22)
  {
    int64_t v12 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v31) {
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t StaticCameraProfile.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticCameraProfile.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for StaticCameraProfile()
{
  uint64_t result = qword_26B21FDC0;
  if (!qword_26B21FDC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticCameraProfile.roomIds.getter()
{
  type metadata accessor for StaticCameraProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticCameraProfile.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticCameraProfile.staticAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticCameraProfile() + 32);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticCameraProfile.staticServiceIds.getter()
{
  type metadata accessor for StaticCameraProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticCameraProfile.isReachable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 40));
}

uint64_t StaticCameraProfile.currentAccessMode.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticCameraProfile();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t StaticCameraProfile.snapshotControl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticCameraProfile();
  return sub_251A1B128(v1 + *(int *)(v3 + 48), a1, &qword_269BA2D30);
}

uint64_t StaticCameraProfile.streamControl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticCameraProfile();
  return sub_251A1B128(v1 + *(int *)(v3 + 52), a1, &qword_269BA0FB8);
}

uint64_t StaticCameraProfile.shouldShowInDashboard.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 56));
}

uint64_t StaticCameraProfile.shouldShowInDashboard.setter(char a1)
{
  uint64_t result = type metadata accessor for StaticCameraProfile();
  *(unsigned char *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*StaticCameraProfile.shouldShowInDashboard.modify())(void)
{
  return nullsub_1;
}

uint64_t StaticCameraProfile.isFavorite.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 60));
}

uint64_t StaticCameraProfile.isFavorite.setter(char a1)
{
  uint64_t result = type metadata accessor for StaticCameraProfile();
  *(unsigned char *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*StaticCameraProfile.isFavorite.modify())(void)
{
  return nullsub_1;
}

uint64_t StaticCameraProfile.recordingEventManager.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticCameraProfile();
  return sub_251A1B128(v1 + *(int *)(v3 + 64), a1, &qword_269BA2D38);
}

uint64_t StaticCameraProfile.supportsBidirectionalAudio.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 68));
}

uint64_t StaticCameraProfile.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticCameraRecordingEventManager();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticCameraStreamControl();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v40 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
  MEMORY[0x270FA5388](v16 - 8);
  unint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_251F34DA0();
  uint64_t v20 = sub_251D5C20C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95A0]);
  uint64_t v46 = v19;
  uint64_t v47 = v20;
  sub_251F35610();
  int64_t v21 = (int *)type metadata accessor for StaticCameraProfile();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v1 + v21[6]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v22);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v21[7] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  sub_251F35610();
  uint64_t v23 = *(void *)(v2 + v21[9]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v23);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  sub_251F36CB0();
  sub_251A1B128(v2 + v21[12], (uint64_t)v18, &qword_269BA2D30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251D5C274((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticCameraSnapshotControl);
    sub_251F36CC0();
    sub_251F35610();
    uint64_t v24 = (uint64_t)&v15[*(int *)(v12 + 20)];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    MEMORY[0x270FA5388](v25 - 8);
    unint64_t v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128(v24, (uint64_t)v27, &qword_26B21EC20);
    uint64_t v28 = sub_251F34D20();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
    if (v30 == 1)
    {
      sub_251F36CC0();
    }
    else
    {
      MEMORY[0x270FA5388](v30);
      uint64_t v32 = (char *)&v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v32, v27, v28);
      sub_251F36CC0();
      sub_251D5C20C(&qword_269B9CF80, MEMORY[0x270FA9120]);
      sub_251F35610();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
    }
    sub_251D5C1AC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticCameraSnapshotControl);
  }
  uint64_t v33 = v40;
  sub_251A1B128(v2 + v21[13], v40, &qword_269BA0FB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v33, 1, v42) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v34 = v38;
    sub_251D5C274(v33, v38, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
    sub_251F36CC0();
    sub_251F35610();
    sub_251F36CB0();
    sub_251D5C1AC(v34, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
  }
  sub_251F36CC0();
  sub_251F36CC0();
  uint64_t v35 = v43;
  sub_251A1B128(v2 + v21[16], v43, &qword_269BA2D38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v45) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v36 = v39;
    sub_251D5C274(v35, v39, (uint64_t (*)(void))type metadata accessor for StaticCameraRecordingEventManager);
    sub_251F36CC0();
    sub_251F35610();
    sub_251D5C1AC(v36, (uint64_t (*)(void))type metadata accessor for StaticCameraRecordingEventManager);
  }
  return sub_251F36CC0();
}

unint64_t sub_251D4FFEC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 3:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x6168636165527369;
      break;
    case 8:
      unint64_t result = 0x746F687370616E73;
      break;
    case 9:
      unint64_t result = 0x6F436D6165727473;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0x69726F7661467369;
      break;
    case 12:
      unint64_t result = 0xD000000000000015;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251D501A8()
{
  return sub_251D4FFEC(*v0);
}

uint64_t sub_251D501B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D5B9C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_251D501D8(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_251D501E4(uint64_t a1)
{
  unint64_t v2 = sub_251D57264();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D50220(uint64_t a1)
{
  unint64_t v2 = sub_251D57264();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCameraProfile.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D57264();
  sub_251F36DA0();
  LOBYTE(v19) = 0;
  sub_251F34DA0();
  sub_251D5C20C(&qword_26B21E348, MEMORY[0x270FA95A0]);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for StaticCameraProfile();
    LOBYTE(v19) = 1;
    sub_251F369D0();
    uint64_t v16 = v3;
    uint64_t v17 = v9;
    uint64_t v19 = *(void *)(v3 + *(int *)(v9 + 24));
    char v18 = 2;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    uint64_t v11 = sub_251D5730C(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    v15[1] = v11;
    void v15[2] = v10;
    uint64_t v12 = v16;
    LOBYTE(v19) = 3;
    sub_251F36910();
    LOBYTE(v19) = 4;
    sub_251F36A20();
    uint64_t v19 = *(void *)(v12 + *(int *)(v17 + 36));
    char v18 = 5;
    sub_251F36A20();
    uint64_t v13 = v17;
    LOBYTE(v19) = 6;
    sub_251F369E0();
    LOBYTE(v19) = *(unsigned char *)(v12 + *(int *)(v13 + 44));
    char v18 = 7;
    sub_251D572B8();
    sub_251F36A20();
    LOBYTE(v19) = 8;
    type metadata accessor for StaticCameraSnapshotControl();
    sub_251D5C164(&qword_269BA2D58, (void (*)(uint64_t))type metadata accessor for StaticCameraSnapshotControl);
    sub_251F36970();
    LOBYTE(v19) = 9;
    type metadata accessor for StaticCameraStreamControl();
    sub_251D5C164(&qword_269BA2D60, (void (*)(uint64_t))type metadata accessor for StaticCameraStreamControl);
    sub_251F36970();
    LOBYTE(v19) = 10;
    sub_251F369E0();
    LOBYTE(v19) = 11;
    sub_251F369E0();
    LOBYTE(v19) = 12;
    type metadata accessor for StaticCameraRecordingEventManager();
    sub_251D5C164(&qword_269BA2D68, (void (*)(uint64_t))type metadata accessor for StaticCameraRecordingEventManager);
    sub_251F36970();
    LOBYTE(v19) = 13;
    sub_251F369E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticCameraProfile.hashValue.getter()
{
  sub_251F36CA0();
  StaticCameraProfile.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticCameraProfile.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D70);
  uint64_t v13 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = (int *)type metadata accessor for StaticCameraProfile();
  MEMORY[0x270FA5388](v69);
  uint64_t v66 = a1;
  uint64_t v67 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D57264();
  uint64_t v64 = v15;
  sub_251F36D90();
  if (v2)
  {
    uint64_t v68 = v2;
    int v22 = 0;
    unsigned int v23 = 0;
  }
  else
  {
    uint64_t v60 = v9;
    uint64_t v61 = v12;
    uint64_t v59 = v6;
    uint64_t v62 = v13;
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(void *)(v18 + 64);
    MEMORY[0x270FA5388](v17);
    LOBYTE(v71) = 0;
    uint64_t v20 = sub_251D5C20C(&qword_269B9CC80, MEMORY[0x270FA95A0]);
    int64_t v21 = v64;
    sub_251F36880();
    uint64_t v68 = v20;
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v38 = v67;
    v37(v67, (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
    LOBYTE(v71) = 1;
    uint64_t v39 = sub_251F36830();
    uint64_t v57 = v18 + 32;
    int v58 = v37;
    uint64_t v40 = v69;
    uint64_t v41 = (uint64_t *)&v38[v69[5]];
    *uint64_t v41 = v39;
    v41[1] = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    char v70 = 2;
    sub_251D5730C(&qword_269B9CC78, &qword_269B9CC80);
    sub_251F36880();
    *(void *)&v38[v40[6]] = v71;
    LOBYTE(v71) = 3;
    uint64_t v43 = sub_251F36790();
    uint64_t v44 = (uint64_t *)&v38[v40[7]];
    uint64_t *v44 = v43;
    v44[1] = v45;
    MEMORY[0x270FA5388](v43);
    LOBYTE(v71) = 4;
    sub_251F36880();
    v58(&v38[v40[8]], (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
    char v70 = 5;
    sub_251F36880();
    *(void *)&v38[v40[9]] = v71;
    LOBYTE(v71) = 6;
    v38[v40[10]] = sub_251F36840() & 1;
    char v70 = 7;
    sub_251D57394();
    sub_251F36880();
    uint64_t v68 = 0;
    v38[v40[11]] = v71;
    type metadata accessor for StaticCameraSnapshotControl();
    LOBYTE(v71) = 8;
    sub_251D5C164(&qword_269BA2D80, (void (*)(uint64_t))type metadata accessor for StaticCameraSnapshotControl);
    uint64_t v46 = (uint64_t)v61;
    uint64_t v47 = v68;
    sub_251F367D0();
    uint64_t v68 = v47;
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v65);
      int v22 = 0;
      unsigned int v23 = 63;
      uint64_t v24 = (uint64_t)v66;
      goto LABEL_5;
    }
    sub_251A4ECF0(v46, (uint64_t)&v38[v69[12]], &qword_269BA2D30);
    type metadata accessor for StaticCameraStreamControl();
    LOBYTE(v71) = 9;
    sub_251D5C164(&qword_269BA2D88, (void (*)(uint64_t))type metadata accessor for StaticCameraStreamControl);
    uint64_t v48 = v68;
    sub_251F367D0();
    uint64_t v68 = v48;
    if (!v48)
    {
      sub_251A4ECF0((uint64_t)v60, (uint64_t)&v67[v69[13]], &qword_269BA0FB8);
      LOBYTE(v71) = 10;
      uint64_t v49 = v68;
      char v50 = sub_251F36840();
      uint64_t v68 = v49;
      if (v49) {
        goto LABEL_32;
      }
      v67[v69[14]] = v50 & 1;
      LOBYTE(v71) = 11;
      char v51 = sub_251F36840();
      uint64_t v68 = 0;
      v67[v69[15]] = v51 & 1;
      type metadata accessor for StaticCameraRecordingEventManager();
      LOBYTE(v71) = 12;
      sub_251D5C164(&qword_269BA2D90, (void (*)(uint64_t))type metadata accessor for StaticCameraRecordingEventManager);
      uint64_t v52 = v68;
      sub_251F367D0();
      uint64_t v68 = v52;
      if (v52)
      {
LABEL_32:
        (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v65);
        int v30 = 0;
      }
      else
      {
        sub_251A4ECF0((uint64_t)v59, (uint64_t)&v67[v69[16]], &qword_269BA2D38);
        LOBYTE(v71) = 13;
        uint64_t v53 = v68;
        char v54 = sub_251F36840();
        uint64_t v68 = v53;
        if (!v53)
        {
          char v55 = v54;
          (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v65);
          uint64_t v56 = (uint64_t)v67;
          v67[v69[17]] = v55 & 1;
          sub_251D5C0FC(v56, v63, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v66);
          return sub_251D5C1AC(v56, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        }
        (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v65);
        int v30 = 1;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v66);
      LOBYTE(v35) = 1;
      int v26 = 1;
      int v27 = 1;
      int v28 = 1;
      int v29 = 1;
      int v22 = 1;
      int v31 = 1;
      uint64_t v38 = v67;
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v65);
    unsigned int v23 = 319;
    int v22 = 1;
  }
  uint64_t v24 = (uint64_t)v66;
  uint64_t v38 = v67;
LABEL_5:
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(v24);
  int v26 = (v23 >> 2) & 1;
  int v27 = (v23 >> 3) & 1;
  int v28 = (v23 >> 4) & 1;
  int v29 = (v23 >> 5) & 1;
  if ((v23 & 1) == 0)
  {
    int v30 = 0;
    int v31 = 0;
    if ((v23 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
  int v31 = 0;
  int v30 = 0;
  int v35 = (v23 >> 1) & 1;
LABEL_16:
  uint64_t v36 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v38, v36);
  if ((v35 & 1) == 0)
  {
LABEL_7:
    uint64_t v32 = v69;
    if (v26) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v32 = v69;
  uint64_t result = swift_bridgeObjectRelease();
  if (v26)
  {
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  if (!v27)
  {
LABEL_9:
    if (v28) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = swift_bridgeObjectRelease();
  if (v28)
  {
LABEL_10:
    uint64_t v33 = &v38[v32[8]];
    uint64_t v34 = sub_251F34DA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
    if ((v29 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  if (!v29)
  {
LABEL_11:
    if (v22) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_12:
    uint64_t result = sub_251A1B064((uint64_t)&v38[v32[12]], &qword_269BA2D30);
    if ((v31 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_23:
    uint64_t result = sub_251A1B064((uint64_t)&v38[v32[13]], &qword_269BA0FB8);
    if ((v30 & 1) == 0) {
      return result;
    }
    return sub_251A1B064((uint64_t)&v38[v32[16]], &qword_269BA2D38);
  }
LABEL_22:
  if (v31) {
    goto LABEL_23;
  }
LABEL_13:
  if (!v30) {
    return result;
  }
  return sub_251A1B064((uint64_t)&v38[v32[16]], &qword_269BA2D38);
}

uint64_t sub_251D51304()
{
  sub_251F36CA0();
  StaticCameraProfile.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251D51348()
{
  sub_251F36CA0();
  StaticCameraProfile.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251D51384@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraProfile.init(from:)(a1, a2);
}

uint64_t sub_251D5139C(void *a1)
{
  return StaticCameraProfile.encode(to:)(a1);
}

void StaticCameraProfile.primaryServiceKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

void StaticCameraProfile.tileIcon.getter(HomeDataModel::Icon *a1@<X8>)
{
  v1._countAndFlagsBits = 0x69662E6F65646976;
  v1._object = (void *)0xEA00000000006C6CLL;
  Icon.init(customIconName:)(a1, v1);
}

uint64_t StaticCameraProfile.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t StaticCameraProfile.foregroundColor.getter()
{
  return sub_251F35390();
}

uint64_t StaticCameraProfile.isDoubleHigh.getter()
{
  return 0;
}

BOOL StaticCameraProfile.isActivated.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticCameraProfile();
  sub_251A1B128(v0 + *(int *)(v4 + 52), (uint64_t)v3, &qword_269BA0FB8);
  uint64_t v5 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_251A1B064((uint64_t)v3, &qword_269BA0FB8);
    return 0;
  }
  else
  {
    int v7 = v3[*(int *)(v5 + 20)];
    sub_251D5C1AC((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
    return v7 == 2;
  }
}

uint64_t StaticCameraProfile.canBeToggled.getter()
{
  return 0;
}

uint64_t StaticCameraProfile.toggle()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AC2104, 0, 0);
}

void sub_251D515B4(HomeDataModel::Icon *a1@<X8>)
{
  v1._countAndFlagsBits = 0x69662E6F65646976;
  v1._object = (void *)0xEA00000000006C6CLL;
  Icon.init(customIconName:)(a1, v1);
}

uint64_t sub_251D515D0()
{
  return sub_251F35390();
}

uint64_t sub_251D515E8(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 56));
}

BOOL sub_251D515F4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v1 + *(int *)(a1 + 52), (uint64_t)v5, &qword_269BA0FB8);
  uint64_t v6 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_251A1B064((uint64_t)v5, &qword_269BA0FB8);
    return 0;
  }
  else
  {
    int v8 = v5[*(int *)(v6 + 20)];
    sub_251D5C1AC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
    return v8 == 2;
  }
}

unint64_t sub_251D51710()
{
  return 0xD000000000000013;
}

uint64_t sub_251D51730@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v115 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v129 = (uint64_t)&v115 - v15;
  uint64_t v16 = (int *)type metadata accessor for StaticCameraProfile();
  uint64_t v128 = *((void *)v16 - 1);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_msgSend(a1, sel_accessory);
  if (!v19) {
    goto LABEL_7;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_home);
  if (!v21)
  {

LABEL_7:
    swift_bridgeObjectRelease();

    int v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v128 + 56);
    return v35(a4, 1, 1, v16);
  }
  uint64_t v119 = a3;
  uint64_t v120 = v11;
  id v121 = v21;
  uint64_t v122 = (uint64_t)v14;
  uint64_t v125 = v18;
  id v126 = v20;
  uint64_t v118 = a4;
  uint64_t v22 = sub_251F34DA0();
  uint64_t v117 = &v115;
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v127 = (char *)&v115 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  int v123 = &v115;
  MEMORY[0x270FA5388](v26 - 8);
  int v28 = (char *)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v124 = a1;
  id v29 = objc_msgSend(a1, sel_accessory);
  uint64_t v131 = v24;
  uint64_t v132 = v23;
  uint64_t v130 = v22;
  if (!v29)
  {
    (*(void (**)(__objc2_class **__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(&off_26536F000, v28, 1, 1, v22);
    uint64_t v34 = a2;
    goto LABEL_11;
  }
  int v30 = v29;
  id v31 = objc_msgSend(v29, sel_uniqueIdentifier);

  MEMORY[0x270FA5388](v32);
  sub_251F34D80();

  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v33(v28, (char *)&v115 - v25, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
  uint64_t v34 = a2;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v28, 1, v22) == 1)
  {
LABEL_11:
    sub_251F34D90();
    sub_251A1B064((uint64_t)v28, &qword_26B21FF90);
    goto LABEL_12;
  }
  v33(v127, v28, v130);
LABEL_12:
  uint64_t v37 = v122;
  uint64_t v38 = v129;
  id v39 = v126;
  if (*(void *)(v34 + 16) && (unint64_t v40 = sub_2519FE584((uint64_t)v127), (v41 & 1) != 0))
  {
    unint64_t v42 = v40;
    uint64_t v43 = *(void *)(v34 + 56);
    uint64_t v44 = type metadata accessor for StaticAccessory(0);
    uint64_t v45 = *(void *)(v44 - 8);
    sub_251D5C0FC(v43 + *(void *)(v45 + 72) * v42, v38, type metadata accessor for StaticAccessory);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v38, 0, 1, v44);
  }
  else
  {
    uint64_t v46 = type metadata accessor for StaticAccessory(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v38, 1, 1, v46);
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = (uint64_t *)objc_msgSend(v39, sel_room);
  if (!v47) {
    uint64_t v47 = (uint64_t *)objc_msgSend(v121, sel_roomForEntireHome);
  }
  int v123 = v47;
  id v48 = objc_msgSend(v39, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v49 = sub_251F35AC0();

  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_251F366C0();
    swift_bridgeObjectRelease();
    uint64_t v51 = v131;
    if (v50) {
      goto LABEL_20;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v53 = MEMORY[0x263F8EE78];
    goto LABEL_31;
  }
  uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v51 = v131;
  if (!v50) {
    goto LABEL_30;
  }
LABEL_20:
  uint64_t v133 = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E084(0, v50 & ~(v50 >> 63), 0);
  if ((v50 & 0x8000000000000000) == 0)
  {
    uint64_t v116 = v16;
    uint64_t v52 = 0;
    uint64_t v53 = v133;
    do
    {
      MEMORY[0x270FA5388](result);
      char v54 = (char *)&v115 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
      if ((v49 & 0xC000000000000001) != 0) {
        id v55 = (id)MEMORY[0x2533AB3A0](v52, v49);
      }
      else {
        id v55 = *(id *)(v49 + 8 * v52 + 32);
      }
      uint64_t v56 = v55;
      id v57 = objc_msgSend(v55, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v133 = v53;
      unint64_t v59 = *(void *)(v53 + 16);
      unint64_t v58 = *(void *)(v53 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_251A3E084(v58 > 1, v59 + 1, 1);
        uint64_t v53 = v133;
      }
      ++v52;
      *(void *)(v53 + 16) = v59 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v132 + 32))(v53+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(void *)(v132 + 72) * v59, v54, v130);
      uint64_t v51 = v131;
    }
    while (v50 != v52);
    swift_bridgeObjectRelease();
    uint64_t v16 = v116;
    uint64_t v38 = v129;
    uint64_t v37 = v122;
LABEL_31:
    uint64_t v122 = sub_251EE04F8(v53);
    swift_bridgeObjectRelease();
    id v60 = objc_msgSend(v124, sel_uniqueIdentifier);
    sub_251F34D80();

    sub_251A1B128(v38, v37, &qword_26B21F240);
    uint64_t v61 = type metadata accessor for StaticAccessory(0);
    uint64_t v62 = *(void *)(v61 - 8);
    uint64_t v63 = *(int **)(v62 + 48);
    uint64_t v115 = v62 + 48;
    uint64_t v116 = v63;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v63)(v37, 1, v61) == 1)
    {
      sub_251A1B064(v37, &qword_26B21F240);
      uint64_t v64 = v123;
      id v65 = objc_msgSend(v123, sel_name);
      uint64_t v66 = sub_251F356F0();
      uint64_t v68 = v67;
    }
    else
    {
      uint64_t v69 = (uint64_t *)(v37 + *(int *)(v61 + 20));
      uint64_t v66 = *v69;
      uint64_t v68 = v69[1];
      swift_bridgeObjectRetain();
      sub_251D5C1AC(v37, type metadata accessor for StaticAccessory);
      uint64_t v64 = v123;
    }
    uint64_t v70 = (uint64_t)v125;
    uint64_t v71 = (uint64_t *)&v125[v16[5]];
    *uint64_t v71 = v66;
    v71[1] = v68;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
    uint64_t v72 = v132;
    unint64_t v73 = (*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_251F38650;
    id v75 = objc_msgSend(v64, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v75);
    uint64_t v77 = (char *)&v115 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    uint64_t v78 = v77;
    uint64_t v79 = v70;
    uint64_t v80 = v130;
    (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v74 + v73, v78, v130);
    uint64_t v81 = sub_251C08E40(v74);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(v79 + v16[6]) = v81;
    id v82 = objc_msgSend(v64, sel_name);
    uint64_t v83 = sub_251F356F0();
    uint64_t v85 = v84;

    uint64_t v86 = (uint64_t *)(v79 + v16[7]);
    uint64_t *v86 = v83;
    v86[1] = v85;
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v79 + v16[8], v127, v80);
    *(void *)(v79 + v16[9]) = v122;
    uint64_t v87 = (uint64_t)v120;
    sub_251A1B128(v129, (uint64_t)v120, &qword_26B21F240);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v116)(v87, 1, v61) == 1)
    {
      sub_251A1B064(v87, &qword_26B21F240);
      char v88 = 0;
    }
    else
    {
      char v88 = *(unsigned char *)(v87 + *(int *)(v61 + 116));
      sub_251D5C1AC(v87, type metadata accessor for StaticAccessory);
    }
    uint64_t v89 = v119;
    id v90 = v124;
    *(unsigned char *)(v79 + v16[10]) = v88;
    id v91 = v90;
    id v92 = objc_msgSend(v91, sel_userSettings);
    uint64_t v93 = v129;
    if (v92)
    {
      uint64_t v94 = v92;
      unint64_t v95 = (unint64_t)objc_msgSend(v92, sel_currentAccessMode);

      if (v95 <= 3)
      {
        unsigned int v96 = 0x2040301u >> (8 * v95);
        goto LABEL_42;
      }
    }
    else
    {
    }
    LOBYTE(v96) = 0;
LABEL_42:
    *(unsigned char *)(v79 + v16[11]) = v96;
    uint64_t v97 = v79 + v16[12];
    id v98 = v91;
    sub_251BBAA60(v98, v97);
    uint64_t v99 = v79 + v16[13];
    id v100 = v98;
    sub_251B6AB30(v100, v99);
    id v101 = objc_msgSend(v100, sel_accessory);
    if (v101)
    {
      uint64_t v102 = v101;
      char v103 = HMAccessory.shouldShowInDashboard.getter();
    }
    else
    {
      char v103 = 0;
    }
    *(unsigned char *)(v79 + v16[14]) = v103 & 1;
    id v104 = objc_msgSend(v100, sel_accessory);
    if (v104)
    {
      uint64_t v105 = v104;
      char v106 = HMAccessory.isFavorite.getter();
    }
    else
    {
      char v106 = 0;
    }
    *(unsigned char *)(v79 + v16[15]) = v106 & 1;
    uint64_t v107 = v79 + v16[16];
    id v108 = v100;
    id v109 = objc_msgSend(v108, sel_uniqueIdentifier);
    sub_251F34D80();

    uint64_t v110 = type metadata accessor for StaticCameraRecordingEventManager();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v107, 0, 1, v110);
    id v111 = objc_msgSend(v108, sel_speakerControl);

    if (v111)
    {
      id v112 = objc_msgSend(v108, sel_microphoneControl);

      sub_251A1B064(v93, &qword_26B21F240);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v127, v80);
      if (v112)
      {

        char v113 = 1;
LABEL_53:
        uint64_t v114 = v118;
        *(unsigned char *)(v79 + v16[17]) = v113;
        sub_251D5C274(v79, v114, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v128 + 56))(v114, 0, 1, v16);
      }
    }
    else
    {

      sub_251A1B064(v93, &qword_26B21F240);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v127, v80);
    }
    char v113 = 0;
    goto LABEL_53;
  }
  __break(1u);
  return result;
}

uint64_t StaticCameraProfile.controller.getter()
{
  uint64_t v1 = v0;
  if (qword_269B9C3A0 != -1) {
    swift_once();
  }
  unint64_t v2 = sub_251C49FBC();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_2519FE584(v1), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = 0;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t Array<A>.controllers.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticCameraProfile() - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v33 = MEMORY[0x263F8EE78];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v28 = *(void *)(v3 + 72);
    uint64_t v26 = a1;
    swift_bridgeObjectRetain();
    uint64_t v27 = v5;
    while (1)
    {
      uint64_t v31 = v7;
      sub_251D5C0FC(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      if (qword_269B9C3A0 != -1) {
        swift_once();
      }
      uint64_t v9 = qword_269BA0DD0;
      uint64_t v10 = sub_251F34DA0();
      int v30 = &v26;
      uint64_t v11 = *(void *)(v10 - 8);
      MEMORY[0x270FA5388](v10);
      uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      id v29 = &v26;
      MEMORY[0x270FA5388](v14 - 8);
      uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_getKeyPath();
      uint64_t v32 = v9;
      sub_251D5C164((unint64_t *)&qword_269BA2FB0, (void (*)(uint64_t))type metadata accessor for CamerasModel);
      sub_251F34F10();
      swift_release();
      uint64_t v17 = v9 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__currentHomeIdentifier;
      swift_beginAccess();
      sub_251A1B128(v17, (uint64_t)v16, &qword_26B21FF90);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
      {
        sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
        uint64_t v18 = MEMORY[0x263F8EE80];
        uint64_t v5 = v27;
        uint64_t v19 = v31;
        goto LABEL_15;
      }
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
      swift_getKeyPath();
      uint64_t v32 = v9;
      sub_251F34F10();
      swift_release();
      uint64_t v20 = (uint64_t *)(v9 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
      swift_beginAccess();
      uint64_t v21 = *v20;
      uint64_t v19 = v31;
      if (!*(void *)(v21 + 16)) {
        goto LABEL_13;
      }
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_2519FE584((uint64_t)v13);
      if ((v23 & 1) == 0) {
        break;
      }
      uint64_t v18 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_14:
      uint64_t v5 = v27;
LABEL_15:
      if (*(void *)(v18 + 16) && (sub_2519FE584((uint64_t)v5), (v24 & 1) != 0))
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v25 = sub_251D5C1AC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        MEMORY[0x2533AA9D0](v25);
        if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_251F35B10();
        }
        sub_251F35B70();
        sub_251F35AE0();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_251D5C1AC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      }
      v8 += v28;
      uint64_t v7 = v19 - 1;
      if (!v7)
      {
        swift_bridgeObjectRelease();
        return v33;
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v18 = MEMORY[0x263F8EE80];
    goto LABEL_14;
  }
  return result;
}

uint64_t ArraySlice<A>.controllers.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v32 = a1;
  uint64_t v7 = type metadata accessor for StaticCameraProfile() - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v39 = MEMORY[0x263F8EE78];
  unint64_t v12 = (a4 >> 1) - a3;
  if (a4 >> 1 != a3)
  {
    if ((uint64_t)(a4 >> 1) <= a3)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v8 + 72);
    swift_unknownObjectRetain();
    uint64_t v33 = v13;
    uint64_t v34 = v10;
    uint64_t v14 = a2 + v13 * a3;
    while (1)
    {
      unint64_t v37 = v12;
      sub_251D5C0FC(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      if (qword_269B9C3A0 != -1) {
        swift_once();
      }
      uint64_t v15 = qword_269BA0DD0;
      uint64_t v16 = sub_251F34DA0();
      uint64_t v36 = &v32;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x270FA5388](v16);
      uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      int v35 = &v32;
      MEMORY[0x270FA5388](v20 - 8);
      unint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_getKeyPath();
      uint64_t v38 = v15;
      sub_251D5C164((unint64_t *)&qword_269BA2FB0, (void (*)(uint64_t))type metadata accessor for CamerasModel);
      sub_251F34F10();
      swift_release();
      uint64_t v23 = v15 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__currentHomeIdentifier;
      swift_beginAccess();
      sub_251A1B128(v23, (uint64_t)v22, &qword_26B21FF90);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
      {
        sub_251A1B064((uint64_t)v22, &qword_26B21FF90);
        uint64_t v24 = MEMORY[0x263F8EE80];
        unint64_t v25 = v37;
        goto LABEL_15;
      }
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
      swift_getKeyPath();
      uint64_t v38 = v15;
      sub_251F34F10();
      swift_release();
      uint64_t v26 = (uint64_t *)(v15 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
      swift_beginAccess();
      uint64_t v27 = *v26;
      unint64_t v25 = v37;
      if (*(void *)(v27 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v28 = sub_2519FE584((uint64_t)v19);
        if (v29)
        {
          uint64_t v24 = *(void *)(*(void *)(v27 + 56) + 8 * v28);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      uint64_t v24 = MEMORY[0x263F8EE80];
LABEL_15:
      uint64_t v10 = v34;
      if (*(void *)(v24 + 16) && (sub_2519FE584((uint64_t)v34), (v30 & 1) != 0))
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v31 = sub_251D5C1AC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        MEMORY[0x2533AA9D0](v31);
        if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_251F35B10();
        }
        sub_251F35B70();
        sub_251F35AE0();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_251D5C1AC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      }
      v14 += v33;
      unint64_t v12 = v25 - 1;
      if (!v12)
      {
        swift_unknownObjectRelease();
        return v39;
      }
    }
  }
  return result;
}

uint64_t StaticCameraProfile.NearbyStaticItems.services.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticCameraProfile.NearbyStaticItems.accessories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticCameraProfile.NearbyStaticItems.serviceGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static StaticCameraProfile.NearbyStaticItems.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_251AF99A8(*a1, *a2) & 1) == 0 || (sub_251AF9FA8(v2, v4) & 1) == 0) {
    return 0;
  }
  return sub_251AFA5A8(v3, v5);
}

uint64_t StaticCameraProfile.NearbyStaticItems.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  swift_bridgeObjectRetain();
  sub_251A454AC(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45A18(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A44E40(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D52FFC()
{
  uint64_t v1 = 0x726F737365636361;
  if (*v0 != 1) {
    uint64_t v1 = 0x4765636976726573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7365636976726573;
  }
}

uint64_t sub_251D5306C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D5BF68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D53094(uint64_t a1)
{
  unint64_t v2 = sub_251D573F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D530D0(uint64_t a1)
{
  unint64_t v2 = sub_251D573F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCameraProfile.NearbyStaticItems.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2DA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D573F8();
  sub_251F36DA0();
  uint64_t v16 = v9;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
  sub_251B24DC8();
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v16 = v14;
    char v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E018);
    sub_251B248A4();
    sub_251F36A20();
    uint64_t v16 = v10;
    char v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0A0);
    sub_251B24D0C();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticCameraProfile.NearbyStaticItems.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251A454AC((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45A18((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A44E40((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t StaticCameraProfile.NearbyStaticItems.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2DB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D573F8();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
  char v15 = 0;
  sub_251B25884();
  sub_251F36880();
  uint64_t v9 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E018);
  char v15 = 1;
  sub_251B25360();
  swift_bridgeObjectRetain();
  sub_251F36880();
  uint64_t v10 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0A0);
  char v15 = 2;
  sub_251B257C8();
  uint64_t v14 = v10;
  swift_bridgeObjectRetain();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v14;
  *a2 = v9;
  a2[1] = v12;
  a2[2] = v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D5368C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_251AF99A8(*a1, *a2) & 1) == 0 || (sub_251AF9FA8(v2, v4) & 1) == 0) {
    return 0;
  }
  return sub_251AFA5A8(v3, v5);
}

uint64_t sub_251D5370C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251A454AC((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45A18((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A44E40((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251D537A8(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  swift_bridgeObjectRetain();
  sub_251A454AC(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45A18(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A44E40(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D53838()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251A454AC((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45A18((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A44E40((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251D538D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return StaticCameraProfile.NearbyStaticItems.init(from:)(a1, a2);
}

uint64_t sub_251D538E8(void *a1)
{
  return StaticCameraProfile.NearbyStaticItems.encode(to:)(a1);
}

unint64_t StaticCameraProfile.nearbyItems(using:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_26B21FF50;
  uint64_t v7 = type metadata accessor for StaticCameraProfile();
  uint64_t v8 = v2 + *(int *)(v7 + 32);
  uint64_t v9 = (void *)sub_251F34D50();
  id v10 = objc_msgSend(v6, sel_accessoryFor_, v9);

  if (!v10) {
    goto LABEL_6;
  }
  uint64_t v56 = a1;
  id v57 = a2;
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v3 + *(int *)(v7 + 24));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251ABDFB8(v15, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
  {

    sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
    a2 = v57;
LABEL_6:
    uint64_t v19 = MEMORY[0x263F8EE78];
    unint64_t v20 = sub_2519F9B94(MEMORY[0x263F8EE78]);
    unint64_t v21 = sub_2519F9A68(v19);
    unint64_t result = sub_2519F9B58(v19);
    *a2 = v20;
    a2[1] = v21;
    a2[2] = result;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v11);
  uint64_t v23 = HMAccessory.customNearbyAccessoryIdentifiers.getter();
  id v55 = &v52;
  if (!v23)
  {
    char v54 = &v52;
    MEMORY[0x270FA5388](0);
    unint64_t v40 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    char v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v42 = v41(v40, v8, v11);
    uint64_t v53 = &v52;
    MEMORY[0x270FA5388](v42);
    v41(v40, (uint64_t)v40, v11);
    uint64_t v43 = (int *)type metadata accessor for StateSnapshot(0);
    uint64_t v44 = *(void *)(v56 + v43[15]);
    uint64_t v45 = *(void *)(v56 + v43[8]);
    uint64_t v46 = *(void *)(v56 + v43[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = v57;
    uint64_t v34 = (uint64_t)v40;
    uint64_t v35 = (uint64_t)v40;
    uint64_t v36 = v44;
    uint64_t v37 = v45;
    uint64_t v38 = v46;
    uint64_t v39 = 0;
    goto LABEL_11;
  }
  uint64_t v24 = v23;
  if (*(void *)(v23 + 16))
  {
    char v54 = &v52;
    MEMORY[0x270FA5388](v23);
    unint64_t v25 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v52 = (char *)&v52 - v25;
    uint64_t v26 = *(uint64_t (**)(void))(v12 + 16);
    uint64_t v27 = v26();
    uint64_t v53 = &v52;
    MEMORY[0x270FA5388](v27);
    unint64_t v28 = (char *)&v52 - v25;
    ((void (*)(char *, char *, uint64_t))v26)((char *)&v52 - v25, (char *)&v52 - v25, v11);
    char v29 = (int *)type metadata accessor for StateSnapshot(0);
    uint64_t v30 = *(void *)(v56 + v29[15]);
    uint64_t v31 = *(void *)(v56 + v29[8]);
    uint64_t v32 = *(void *)(v56 + v29[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = v57;
    uint64_t v34 = (uint64_t)v52;
    uint64_t v35 = (uint64_t)v28;
    uint64_t v36 = v30;
    uint64_t v37 = v31;
    uint64_t v38 = v32;
    uint64_t v39 = v24;
LABEL_11:
    sub_251D53DCC(v34, v35, v36, v37, v38, v39, v33);

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = MEMORY[0x263F8EE78];
  unint64_t v48 = sub_2519F9B94(MEMORY[0x263F8EE78]);
  unint64_t v49 = sub_2519F9A68(v47);
  unint64_t v50 = sub_2519F9B58(v47);

  unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v51 = v57;
  *id v57 = v48;
  v51[1] = v49;
  v51[2] = v50;
  return result;
}

uint64_t sub_251D53DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>)
{
  uint64_t v167 = a6;
  uint64_t v170 = a4;
  uint64_t v166 = a3;
  uint64_t v178 = a2;
  uint64_t v162 = a1;
  uint64_t v157 = a7;
  int64_t v8 = 0;
  uint64_t v177 = type metadata accessor for StaticService();
  uint64_t v184 = *(void *)(v177 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v177);
  uint64_t v164 = (uint64_t)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v169 = (uint64_t)&v155 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v183 = (uint64_t (**)(char *, uint64_t))((char *)&v155 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v155 - v15;
  uint64_t v159 = type metadata accessor for StaticAccessory(0);
  uint64_t v158 = *(void *)(v159 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v159);
  uint64_t v156 = (uint64_t)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v155 = (uint64_t)&v155 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v155 - v21;
  uint64_t v23 = type metadata accessor for StaticServiceGroup();
  uint64_t v185 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v181 = (uint64_t)&v155 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  unint64_t v28 = (char *)&v155 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v155 - v29;
  *(void *)&long long v188 = MEMORY[0x263F8EE88];
  uint64_t v31 = a5 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(a5 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & *(void *)(a5 + 64);
  int64_t v35 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v186 = a5;
  swift_bridgeObjectRetain_n();
  uint64_t v160 = 0;
  while (1)
  {
    if (v34)
    {
      unint64_t v36 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      unint64_t v37 = v36 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v40 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    char v41 = (int *)v177;
    if (v40 >= v35) {
      goto LABEL_25;
    }
    unint64_t v42 = *(void *)(v31 + 8 * v40);
    ++v8;
    if (!v42)
    {
      int64_t v8 = v40 + 1;
      if (v40 + 1 >= v35) {
        goto LABEL_25;
      }
      unint64_t v42 = *(void *)(v31 + 8 * v8);
      if (!v42)
      {
        int64_t v8 = v40 + 2;
        if (v40 + 2 >= v35) {
          goto LABEL_25;
        }
        unint64_t v42 = *(void *)(v31 + 8 * v8);
        if (!v42)
        {
          int64_t v8 = v40 + 3;
          if (v40 + 3 >= v35) {
            goto LABEL_25;
          }
          unint64_t v42 = *(void *)(v31 + 8 * v8);
          if (!v42)
          {
            int64_t v8 = v40 + 4;
            if (v40 + 4 >= v35) {
              goto LABEL_25;
            }
            unint64_t v42 = *(void *)(v31 + 8 * v8);
            if (!v42) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v34 = (v42 - 1) & v42;
    unint64_t v37 = __clz(__rbit64(v42)) + (v8 << 6);
LABEL_5:
    sub_251D5C0FC(*(void *)(v186 + 56) + *(void *)(v185 + 72) * v37, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251D5C274((uint64_t)v30, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v38 = swift_bridgeObjectRetain();
    uint64_t v39 = sub_251EDC188(v38);
    sub_251AC0DD8(v39);
    sub_251D5C1AC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  }
  int64_t v43 = v40 + 5;
  if (v43 >= v35) {
    goto LABEL_25;
  }
  unint64_t v42 = *(void *)(v31 + 8 * v43);
  if (v42)
  {
    int64_t v8 = v43;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v8 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      goto LABEL_126;
    }
    if (v8 >= v35) {
      break;
    }
    unint64_t v42 = *(void *)(v31 + 8 * v8);
    ++v43;
    if (v42) {
      goto LABEL_24;
    }
  }
LABEL_25:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v168 = v188;
  unint64_t v189 = MEMORY[0x263F8EE80];
  unint64_t v190 = MEMORY[0x263F8EE80];
  uint64_t v44 = v170;
  if (*(void *)(v170 + 16))
  {
    uint64_t v45 = v162;
    unint64_t v46 = sub_2519FE584(v162);
    if ((v47 & 1) == 0) {
      goto LABEL_45;
    }
    unint64_t v48 = v16;
    uint64_t v49 = sub_251D5C0FC(*(void *)(v44 + 56) + *(void *)(v158 + 72) * v46, (uint64_t)v22, type metadata accessor for StaticAccessory);
    uint64_t v50 = *(void *)&v22[*(int *)(v159 + 80)];
    MEMORY[0x270FA5388](v49);
    *(&v155 - 2) = (uint64_t)v22;
    swift_bridgeObjectRetain();
    uint64_t v51 = v160;
    unint64_t v52 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)(&v155 - 4), v50);
    swift_bridgeObjectRelease();
    sub_251D5C1AC((uint64_t)v22, type metadata accessor for StaticAccessory);
    uint64_t v53 = v168;
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_251D580BC(v52, v53);
    uint64_t v160 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55)
    {
      uint64_t v56 = v184;
      unint64_t v57 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      uint64_t v173 = (void *)v54;
      uint64_t v58 = v54 + v57;
      swift_beginAccess();
      uint64_t v59 = *(void *)(v56 + 72);
      uint64_t v60 = sub_251F34DA0();
      uint64_t v61 = v60;
      uint64_t v62 = *(void *)(v60 - 8);
      uint64_t v176 = *(void *)(v62 + 64);
      uint64_t v175 = (uint64_t (**)(char *, uint64_t))(v62 + 8);
      uint64_t v174 = v62;
      int v179 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      int64_t v180 = v62 + 16;
      uint64_t v63 = (uint64_t)v48;
      while (1)
      {
        uint64_t v182 = &v155;
        MEMORY[0x270FA5388](v60);
        uint64_t v66 = (char *)&v155 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v67 = v61;
        v179(v66, v58, v61);
        uint64_t v68 = v63;
        sub_251D5C0FC(v58, v63, (uint64_t (*)(void))type metadata accessor for StaticService);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v70 = v190;
        uint64_t v187 = (void *)v190;
        unint64_t v190 = 0x8000000000000000;
        unint64_t v72 = sub_2519FE584((uint64_t)v66);
        uint64_t v73 = *(void *)(v70 + 16);
        BOOL v74 = (v71 & 1) == 0;
        uint64_t v75 = v73 + v74;
        if (__OFADD__(v73, v74)) {
          goto LABEL_123;
        }
        char v76 = v71;
        if (*(void *)(v70 + 24) >= v75)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v79 = v187;
            if ((v71 & 1) == 0) {
              goto LABEL_38;
            }
          }
          else
          {
            sub_251A12304();
            uint64_t v79 = v187;
            if ((v76 & 1) == 0) {
              goto LABEL_38;
            }
          }
        }
        else
        {
          sub_251A01DD0(v75, isUniquelyReferenced_nonNull_native);
          unint64_t v77 = sub_2519FE584((uint64_t)v66);
          if ((v76 & 1) != (v78 & 1)) {
            goto LABEL_128;
          }
          unint64_t v72 = v77;
          uint64_t v79 = v187;
          if ((v76 & 1) == 0)
          {
LABEL_38:
            v79[(v72 >> 6) + 8] |= 1 << v72;
            uint64_t v61 = v67;
            v179((char *)(v79[6] + *(void *)(v174 + 72) * v72), (uint64_t)v66, v67);
            uint64_t v80 = v79[7] + v72 * v59;
            uint64_t v63 = v68;
            sub_251D5C274(v68, v80, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v81 = v79[2];
            BOOL v82 = __OFADD__(v81, 1);
            uint64_t v83 = v81 + 1;
            if (v82) {
              goto LABEL_124;
            }
            v79[2] = v83;
            uint64_t v79 = v187;
            goto LABEL_30;
          }
        }
        uint64_t v64 = v79[7] + v72 * v59;
        uint64_t v63 = v68;
        sub_251D5C2DC(v68, v64, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v61 = v67;
LABEL_30:
        unint64_t v190 = (unint64_t)v79;
        swift_bridgeObjectRelease();
        uint64_t v60 = (*v175)(v66, v61);
        v58 += v59;
        if (!--v55)
        {
          swift_endAccess();
          swift_bridgeObjectRelease();
          uint64_t v45 = v162;
          uint64_t v84 = v166;
          char v41 = (int *)v177;
          goto LABEL_46;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = v162;
LABEL_45:
  uint64_t v84 = v166;
LABEL_46:
  int64_t v85 = 0;
  uint64_t v86 = *(void *)(v84 + 64);
  int v179 = (void (*)(char *, uint64_t, uint64_t))(v84 + 64);
  uint64_t v87 = 1 << *(unsigned char *)(v84 + 32);
  if (v87 < 64) {
    uint64_t v88 = ~(-1 << v87);
  }
  else {
    uint64_t v88 = -1;
  }
  unint64_t v89 = v88 & v86;
  int64_t v180 = (unint64_t)(v87 + 63) >> 6;
  uint64_t v165 = v168 + 56;
  int v163 = "00-8000-0026BB765291";
  unint64_t v161 = 0x8000000251F64F80;
  uint64_t v90 = v169;
  while (v89)
  {
    unint64_t v91 = __clz(__rbit64(v89));
    v89 &= v89 - 1;
    unint64_t v92 = v91 | (v85 << 6);
LABEL_66:
    uint64_t v95 = *(void *)(v84 + 56);
    unsigned int v96 = v183;
    uint64_t v182 = *(uint64_t **)(v184 + 72);
    sub_251D5C0FC(v95 + (void)v182 * v92, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251D5C274((uint64_t)v96, v90, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v97 = v90 + v41[11];
    uint64_t v98 = sub_251F34DA0();
    sub_251D5C20C((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95A0]);
    if (sub_251F35650()) {
      goto LABEL_50;
    }
    int v99 = *(unsigned __int8 *)(v90 + v41[22]);
    if ((v99 - 5) < 4 || v99 == 32) {
      goto LABEL_50;
    }
    if (v99 == 35)
    {
      sub_251D5525C(v90, v170, v167, (uint64_t)&v190, (uint64_t)&v189);
      goto LABEL_50;
    }
    LOBYTE(v188) = *(unsigned char *)(v90 + v41[22]);
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v100 == v161)
    {
      swift_bridgeObjectRelease();
LABEL_79:
      if (*(void *)(v170 + 16))
      {
        unint64_t v102 = sub_2519FE584(v97);
        if (v103)
        {
          uint64_t v104 = v156;
          sub_251D5C0FC(*(void *)(v170 + 56) + *(void *)(v158 + 72) * v102, v156, type metadata accessor for StaticAccessory);
          uint64_t v105 = v155;
          sub_251D5C274(v104, v155, type metadata accessor for StaticAccessory);
          LODWORD(v104) = *(unsigned __int16 *)(v105 + *(int *)(v159 + 88));
          sub_251D5C1AC(v105, type metadata accessor for StaticAccessory);
          if (v104 == 32771) {
            goto LABEL_82;
          }
        }
      }
      goto LABEL_83;
    }
    char v101 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v101) {
      goto LABEL_79;
    }
LABEL_83:
    uint64_t v90 = v169;
    uint64_t v106 = *(void *)(v169 + v41[15]);
    if (*(void *)(v106 + 16))
    {
      sub_251D5C20C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95A0]);
      swift_bridgeObjectRetain();
      uint64_t v107 = sub_251F35600();
      uint64_t v108 = -1 << *(unsigned char *)(v106 + 32);
      unint64_t v109 = v107 & ~v108;
      uint64_t v175 = (uint64_t (**)(char *, uint64_t))(v106 + 56);
      if (((*(void *)(v106 + 56 + ((v109 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v109) & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_90:
        uint64_t v84 = v166;
        char v41 = (int *)v177;
        goto LABEL_91;
      }
      uint64_t v176 = v106;
      uint64_t v171 = ~v108;
      uint64_t v110 = *(void **)(v98 - 8);
      uint64_t v111 = v110[2];
      v110 += 2;
      uint64_t v174 = v111;
      uint64_t v112 = v110[6];
      uint64_t v172 = v110[7];
      uint64_t v173 = v110;
      char v113 = (uint64_t (**)(char *, uint64_t))(v110 - 1);
      while (1)
      {
        MEMORY[0x270FA5388](v107);
        ((void (*)(char *, unint64_t, uint64_t))v174)((char *)&v155 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v176 + 48) + v172 * v109, v98);
        char v114 = sub_251F35650();
        uint64_t v107 = (*v113)((char *)&v155 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0), v98);
        if (v114) {
          break;
        }
        unint64_t v109 = (v109 + 1) & v171;
        if (((*(unint64_t *)((char *)v175 + ((v109 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v109) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v45 = v162;
          goto LABEL_90;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v115 = v168;
      if (*(void *)(v168 + 16))
      {
        sub_251F36CA0();
        StaticService.hash(into:)(&v188);
        uint64_t v116 = sub_251F36D00();
        uint64_t v117 = -1 << *(unsigned char *)(v115 + 32);
        unint64_t v118 = v116 & ~v117;
        uint64_t v45 = v162;
        char v41 = (int *)v177;
        if ((*(void *)(v165 + ((v118 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v118))
        {
          uint64_t v119 = ~v117;
          uint64_t v120 = v182;
          while (1)
          {
            uint64_t v121 = v164;
            sub_251D5C0FC(*(void *)(v115 + 48) + v118 * (void)v120, v164, (uint64_t (*)(void))type metadata accessor for StaticService);
            char v122 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v121, v169);
            sub_251D5C1AC(v121, (uint64_t (*)(void))type metadata accessor for StaticService);
            if (v122) {
              break;
            }
            unint64_t v118 = (v118 + 1) & v119;
            uint64_t v115 = v168;
            if (((*(void *)(v165 + ((v118 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v118) & 1) == 0) {
              goto LABEL_99;
            }
          }
LABEL_82:
          uint64_t v84 = v166;
LABEL_91:
          uint64_t v90 = v169;
          goto LABEL_50;
        }
      }
      else
      {
        uint64_t v45 = v162;
        char v41 = (int *)v177;
      }
LABEL_99:
      uint64_t v90 = v169;
      sub_251D5525C(v169, v170, v167, (uint64_t)&v190, (uint64_t)&v189);
    }
    uint64_t v84 = v166;
LABEL_50:
    sub_251D5C1AC(v90, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  BOOL v82 = __OFADD__(v85++, 1);
  if (v82) {
    goto LABEL_121;
  }
  if (v85 >= v180)
  {
LABEL_101:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v123 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v123);
    uint64_t v124 = v178;
    *(&v155 - 2) = v167;
    *(&v155 - 1) = v124;
    uint64_t v125 = sub_251C35E64((uint64_t (*)(char *))sub_251D5C254, (uint64_t)(&v155 - 4), v186);
    swift_bridgeObjectRelease();
    uint64_t v126 = *(void *)(v125 + 16);
    if (!v126)
    {
      uint64_t v135 = (void *)MEMORY[0x263F8EE80];
LABEL_118:
      uint64_t v149 = sub_251F34DA0();
      uint64_t v150 = *(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8);
      v150(v45, v149);
      swift_bridgeObjectRelease();
      v150(v178, v149);
      swift_beginAccess();
      unint64_t v151 = v190;
      uint64_t result = swift_beginAccess();
      unint64_t v153 = v189;
      uint64_t v154 = v157;
      unint64_t *v157 = v151;
      v154[1] = v153;
      void v154[2] = (unint64_t)v135;
      return result;
    }
    uint64_t v127 = v125 + ((*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80));
    uint64_t v128 = *(void *)(v185 + 72);
    uint64_t v129 = sub_251F34DA0();
    uint64_t v130 = *(void *)(v129 - 8);
    uint64_t v131 = v130;
    uint64_t v184 = *(void *)(v130 + 64);
    uint64_t v133 = v130 + 16;
    uint64_t v132 = *(void *)(v130 + 16);
    uint64_t v185 = v133;
    uint64_t v186 = v132;
    uint64_t v182 = (uint64_t *)v131;
    uint64_t v183 = (uint64_t (**)(char *, uint64_t))(v131 + 8);
    int64_t v180 = v125;
    uint64_t v134 = swift_bridgeObjectRetain();
    uint64_t v135 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      MEMORY[0x270FA5388](v134);
      uint64_t v137 = (char *)&v155 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
      ((void (*)(char *, uint64_t, uint64_t))v186)(v137, v127, v129);
      sub_251D5C0FC(v127, v181, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      int v138 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v188 = v135;
      unint64_t v140 = sub_2519FE584((uint64_t)v137);
      uint64_t v141 = v135[2];
      BOOL v142 = (v139 & 1) == 0;
      uint64_t v143 = v141 + v142;
      if (__OFADD__(v141, v142)) {
        goto LABEL_120;
      }
      char v144 = v139;
      if (v135[3] >= v143)
      {
        if (v138)
        {
          uint64_t v135 = (void *)v188;
          if ((v139 & 1) == 0) {
            goto LABEL_112;
          }
        }
        else
        {
          sub_251A12274();
          uint64_t v135 = (void *)v188;
          if ((v144 & 1) == 0) {
            goto LABEL_112;
          }
        }
      }
      else
      {
        sub_251A01D40(v143, v138);
        unint64_t v145 = sub_2519FE584((uint64_t)v137);
        if ((v144 & 1) != (v146 & 1)) {
          goto LABEL_127;
        }
        unint64_t v140 = v145;
        uint64_t v135 = (void *)v188;
        if ((v144 & 1) == 0)
        {
LABEL_112:
          v135[(v140 >> 6) + 8] |= 1 << v140;
          ((void (*)(unint64_t, char *, uint64_t))v186)(v135[6] + v182[9] * v140, v137, v129);
          sub_251D5C274(v181, v135[7] + v140 * v128, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
          uint64_t v147 = v135[2];
          BOOL v82 = __OFADD__(v147, 1);
          uint64_t v148 = v147 + 1;
          if (v82) {
            goto LABEL_122;
          }
          v135[2] = v148;
          uint64_t v135 = (void *)v188;
          goto LABEL_104;
        }
      }
      sub_251D5C2DC(v181, v135[7] + v140 * v128, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
LABEL_104:
      swift_bridgeObjectRelease();
      uint64_t v134 = (*v183)(v137, v129);
      v127 += v128;
      if (!--v126)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = v162;
        goto LABEL_118;
      }
    }
  }
  unint64_t v93 = *((void *)v179 + v85);
  if (v93)
  {
LABEL_65:
    unint64_t v89 = (v93 - 1) & v93;
    unint64_t v92 = __clz(__rbit64(v93)) + (v85 << 6);
    goto LABEL_66;
  }
  int64_t v94 = v85 + 1;
  if (v85 + 1 >= v180) {
    goto LABEL_101;
  }
  unint64_t v93 = *((void *)v179 + v94);
  if (v93) {
    goto LABEL_64;
  }
  int64_t v94 = v85 + 2;
  if (v85 + 2 >= v180) {
    goto LABEL_101;
  }
  unint64_t v93 = *((void *)v179 + v94);
  if (v93) {
    goto LABEL_64;
  }
  int64_t v94 = v85 + 3;
  if (v85 + 3 >= v180) {
    goto LABEL_101;
  }
  unint64_t v93 = *((void *)v179 + v94);
  if (v93) {
    goto LABEL_64;
  }
  int64_t v94 = v85 + 4;
  if (v85 + 4 >= v180) {
    goto LABEL_101;
  }
  unint64_t v93 = *((void *)v179 + v94);
  if (v93)
  {
LABEL_64:
    int64_t v85 = v94;
    goto LABEL_65;
  }
  while (1)
  {
    int64_t v85 = v94 + 1;
    if (__OFADD__(v94, 1)) {
      break;
    }
    if (v85 >= v180) {
      goto LABEL_101;
    }
    unint64_t v93 = *((void *)v179 + v85);
    ++v94;
    if (v93) {
      goto LABEL_65;
    }
  }
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  sub_251F36BA0();
  __break(1u);
LABEL_128:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

unint64_t sub_251D5525C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = a5;
  uint64_t v44 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = type metadata accessor for StaticService();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for StaticAccessory(0);
  uint64_t v45 = *(void *)(v41 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v41);
  unint64_t v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v39 - v24;
  if (!*(void *)(a2 + 16)) {
    return result;
  }
  unint64_t result = sub_2519FE584(a1 + *(int *)(v16 + 44));
  if ((v26 & 1) == 0) {
    return result;
  }
  sub_251D5C0FC(*(void *)(a2 + 56) + *(void *)(v45 + 72) * result, (uint64_t)v22, type metadata accessor for StaticAccessory);
  sub_251D5C274((uint64_t)v22, (uint64_t)v25, type metadata accessor for StaticAccessory);
  if (a3)
  {
    char v27 = sub_251DB3C24((uint64_t)v25, a3);
    sub_251D5C0FC(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
    if ((v27 & 1) == 0)
    {
      char v28 = sub_251DB3C24((uint64_t)v19, a3);
      sub_251D5C1AC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((v28 & 1) == 0) {
        return sub_251D5C1AC((uint64_t)v25, type metadata accessor for StaticAccessory);
      }
      goto LABEL_9;
    }
  }
  else
  {
    sub_251D5C0FC(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  sub_251D5C1AC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_9:
  uint64_t v29 = sub_251F34DA0();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void *)(v30 + 64);
  MEMORY[0x270FA5388](v29);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v30 + 16);
  uint64_t v40 = v32;
  v39((char *)&v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_251D5C0FC(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  swift_beginAccess();
  sub_2519F79F8((uint64_t)v15, (uint64_t)&v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_endAccess();
  StaticAccessory.primaryStaticService.getter((uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
  {
    sub_251A1B064((uint64_t)v13, qword_26B21EE20);
    char v33 = 0;
  }
  else
  {
    char v33 = v13[*(int *)(v16 + 88)];
    sub_251D5C1AC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  char v46 = v33;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v34 == 0x8000000251F64980)
  {
    swift_bridgeObjectRelease();
    return sub_251D5C1AC((uint64_t)v25, type metadata accessor for StaticAccessory);
  }
  char v35 = sub_251F36B10();
  uint64_t v36 = swift_bridgeObjectRelease();
  if (v35) {
    return sub_251D5C1AC((uint64_t)v25, type metadata accessor for StaticAccessory);
  }
  MEMORY[0x270FA5388](v36);
  unint64_t v37 = (char *)&v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *, char *, uint64_t))v39)(v37, v25, v40);
  uint64_t v38 = v42;
  sub_251D5C0FC((uint64_t)v25, v42, type metadata accessor for StaticAccessory);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v38, 0, 1, v41);
  swift_beginAccess();
  sub_2519F77D8(v38, (uint64_t)v37);
  swift_endAccess();
  return sub_251D5C1AC((uint64_t)v25, type metadata accessor for StaticAccessory);
}

uint64_t sub_251D55864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    int v9 = sub_251DB3C24(a1, a2) & 1;
  }
  else {
    int v9 = 2;
  }
  sub_251D5C0FC(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  if (v9 == 2) {
    char v14 = sub_251DB3C24((uint64_t)v13, *(void *)&v8[*(int *)(v6 + 32)]);
  }
  else {
    char v14 = v9 != 0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_251D5C1AC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  return v14 & 1;
}

uint64_t StaticCameraProfile.NearbyStaticItems.orderedVisibleTileInfos.getter()
{
  uint64_t v1 = type metadata accessor for StaticService();
  uint64_t v47 = *(void *)(v1 - 8);
  uint64_t v48 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v51 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for StaticAccessory(0);
  uint64_t v54 = *(void *)(v56 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v56);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v55 = (uint64_t)&v47 - v7;
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v47 - v8;
  uint64_t v50 = *v0;
  uint64_t v52 = v0[2];
  uint64_t v49 = swift_bridgeObjectRetain();
  uint64_t result = sub_251D4F028(v49);
  uint64_t v11 = result;
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(void *)&long long v57 = MEMORY[0x263F8EE78];
  uint64_t v53 = *(void *)(result + 16);
  if (v53)
  {
    unint64_t v13 = 0;
    uint64_t v14 = MEMORY[0x263F8EE78];
    while (v13 < *(void *)(v11 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      uint64_t v16 = *(void *)(v54 + 72);
      sub_251D5C0FC(v11 + v15 + v16 * v13, (uint64_t)v9, type metadata accessor for StaticAccessory);
      uint64_t v17 = swift_bridgeObjectRetain();
      uint64_t v18 = sub_251B83C30(v17);
      uint64_t v19 = sub_251EE10DC(v18);
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v19 + 16);
      swift_bridgeObjectRelease();
      if (v20)
      {
        sub_251D5C274((uint64_t)v9, v55, type metadata accessor for StaticAccessory);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E114(0, *(void *)(v14 + 16) + 1, 1);
        }
        uint64_t v14 = v57;
        unint64_t v22 = *(void *)(v57 + 16);
        unint64_t v21 = *(void *)(v57 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_251A3E114(v21 > 1, v22 + 1, 1);
          uint64_t v14 = v57;
        }
        *(void *)(v14 + 16) = v22 + 1;
        uint64_t result = sub_251D5C274(v55, v14 + v15 + v22 * v16, type metadata accessor for StaticAccessory);
      }
      else
      {
        uint64_t result = sub_251D5C1AC((uint64_t)v9, type metadata accessor for StaticAccessory);
      }
      if (v53 == ++v13)
      {
        uint64_t v23 = v57;
        uint64_t v12 = MEMORY[0x263F8EE78];
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
LABEL_14:
    swift_bridgeObjectRelease();
    int64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v60 = v12;
      sub_251A3E6EC(0, v24, 0);
      uint64_t v25 = v60;
      uint64_t v26 = *(unsigned __int8 *)(v54 + 80);
      uint64_t v55 = v23;
      uint64_t v27 = v23 + ((v26 + 32) & ~v26);
      uint64_t v28 = *(void *)(v54 + 72);
      do
      {
        sub_251D5C0FC(v27, (uint64_t)v5, type metadata accessor for StaticAccessory);
        uint64_t v60 = v25;
        unint64_t v30 = *(void *)(v25 + 16);
        unint64_t v29 = *(void *)(v25 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_251A3E6EC(v29 > 1, v30 + 1, 1);
          uint64_t v25 = v60;
        }
        uint64_t v58 = v56;
        uint64_t v59 = sub_251D5C164(&qword_269B9E288, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
        sub_251D5C0FC((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
        *(void *)(v25 + 16) = v30 + 1;
        sub_251A1A444(&v57, v25 + 40 * v30 + 32);
        sub_251D5C1AC((uint64_t)v5, type metadata accessor for StaticAccessory);
        v27 += v28;
        --v24;
      }
      while (v24);
      swift_release();
      uint64_t v12 = MEMORY[0x263F8EE78];
    }
    else
    {
      swift_release();
      uint64_t v25 = MEMORY[0x263F8EE78];
    }
    uint64_t v32 = v50;
    swift_bridgeObjectRetain_n();
    uint64_t v33 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_251D58614(v32, v32, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v35 = *(void *)(v34 + 16);
    uint64_t v36 = (uint64_t)v51;
    if (v35)
    {
      uint64_t v56 = 0;
      uint64_t v60 = v12;
      sub_251A3E6EC(0, v35, 0);
      uint64_t v12 = v60;
      uint64_t v37 = v48;
      uint64_t v38 = *(unsigned __int8 *)(v47 + 80);
      uint64_t v55 = v34;
      uint64_t v39 = v34 + ((v38 + 32) & ~v38);
      uint64_t v40 = *(void *)(v47 + 72);
      do
      {
        sub_251D5C0FC(v39, v36, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v60 = v12;
        unint64_t v42 = *(void *)(v12 + 16);
        unint64_t v41 = *(void *)(v12 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_251A3E6EC(v41 > 1, v42 + 1, 1);
          uint64_t v37 = v48;
          uint64_t v12 = v60;
        }
        uint64_t v58 = v37;
        uint64_t v59 = sub_251D5C164(&qword_269B9E270, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v43 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
        sub_251D5C0FC(v36, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for StaticService);
        *(void *)(v12 + 16) = v42 + 1;
        sub_251A1A444(&v57, v12 + 40 * v42 + 32);
        sub_251D5C1AC(v36, (uint64_t (*)(void))type metadata accessor for StaticService);
        v39 += v40;
        --v35;
      }
      while (v35);
    }
    swift_bridgeObjectRelease();
    uint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v45 = sub_251D4EC10(v44);
    swift_bridgeObjectRelease();
    *(void *)&long long v57 = v45;
    sub_251ED7E5C(v25);
    sub_251ED7E5C(v12);
    uint64_t v46 = sub_251CFF0B0(MEMORY[0x263F8EE78], v57);
    swift_bridgeObjectRelease();
    return v46;
  }
  return result;
}

uint64_t static StaticCameraProfile.test(name:isReachable:currentAccessMode:snapshotControl:streamControl:recordingEventManager:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v27 = a5;
  uint64_t v30 = a1;
  int v31 = *a4;
  int v32 = a3;
  uint64_t v23 = sub_251F34DA0();
  uint64_t v25 = *(void *)(v23 - 8);
  uint64_t v10 = *(void *)(v25 + 64);
  MEMORY[0x270FA5388](v23);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v26 = (char *)&v22 - v11;
  sub_251F34D90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v12 = swift_allocObject();
  long long v22 = xmmword_251F38650;
  *(_OWORD *)(v12 + 16) = xmmword_251F38650;
  swift_bridgeObjectRetain();
  sub_251F34D90();
  uint64_t v24 = sub_251C08E40(v12);
  swift_setDeallocating();
  uint64_t v13 = v23;
  swift_arrayDestroy();
  uint64_t v14 = swift_deallocClassInstance();
  MEMORY[0x270FA5388](v14);
  sub_251F34D90();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v22;
  sub_251F34D90();
  uint64_t v16 = sub_251C08E40(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v17 = (int *)type metadata accessor for StaticCameraProfile();
  sub_251A1B128(v27, a8 + v17[12], &qword_269BA2D30);
  sub_251A1B128(v28, a8 + v17[13], &qword_269BA0FB8);
  sub_251A1B128(v29, a8 + v17[16], &qword_269BA2D38);
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
  v18(a8, v26, v13);
  uint64_t v19 = (void *)(a8 + v17[5]);
  *uint64_t v19 = v30;
  v19[1] = a2;
  *(void *)(a8 + v17[6]) = v24;
  uint64_t v20 = (void *)(a8 + v17[7]);
  void *v20 = 0;
  v20[1] = 0;
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(a8 + v17[8], (char *)&v22 - v11, v13);
  *(void *)(a8 + v17[9]) = v16;
  *(unsigned char *)(a8 + v17[10]) = v32;
  *(unsigned char *)(a8 + v17[11]) = v31;
  *(unsigned char *)(a8 + v17[14]) = 1;
  *(unsigned char *)(a8 + v17[15]) = 0;
  *(unsigned char *)(a8 + v17[17]) = 1;
  return result;
}

uint64_t static StaticCameraProfile.demo()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned __int8 v16 = 0;
  uint64_t v11 = type metadata accessor for StaticCameraSnapshotControl();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_251F34D90();
  uint64_t v12 = type metadata accessor for StaticCameraStreamControl();
  v7[*(int *)(v12 + 20)] = 2;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
  uint64_t v13 = type metadata accessor for StaticCameraRecordingEventManager();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  static StaticCameraProfile.test(name:isReachable:currentAccessMode:snapshotControl:streamControl:recordingEventManager:)(0x6D6143206F6D6544, 0xEB00000000617265, 1, &v16, (uint64_t)v10, (uint64_t)v7, (uint64_t)v4, a1);
  sub_251A1B064((uint64_t)v4, &qword_269BA2D38);
  sub_251A1B064((uint64_t)v7, &qword_269BA0FB8);
  return sub_251A1B064((uint64_t)v10, &qword_269BA2D30);
}

uint64_t _s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraRecordingEventManager();
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v90 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2E20);
  MEMORY[0x270FA5388](v92);
  uint64_t v97 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v91 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v95 = (uint64_t)&v85 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v96 = (uint64_t)&v85 - v12;
  uint64_t v13 = type metadata accessor for StaticCameraStreamControl();
  uint64_t v102 = *(void *)(v13 - 8);
  uint64_t v103 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v98 = (uint64_t)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2E28);
  MEMORY[0x270FA5388](v100);
  unsigned __int8 v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v99 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v104 = (uint64_t)&v85 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v101 = (uint64_t)&v85 - v22;
  uint64_t v23 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v105 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA2E30);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  int v32 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  int64_t v35 = (char *)&v85 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v85 - v36;
  if ((sub_251F34D70() & 1) == 0) {
    goto LABEL_42;
  }
  unint64_t v89 = v16;
  uint64_t v38 = (int *)type metadata accessor for StaticCameraProfile();
  uint64_t v39 = v38[5];
  uint64_t v40 = *(void *)(a1 + v39);
  uint64_t v41 = *(void *)(a1 + v39 + 8);
  unint64_t v42 = (void *)(a2 + v39);
  if (v40 == *v42 && v41 == v42[1] || (char v43 = sub_251F36B10(), v44 = 0, (v43 & 1) != 0))
  {
    if ((sub_251B04848(*(void *)(a1 + v38[6]), *(void *)(a2 + v38[6])) & 1) == 0) {
      goto LABEL_42;
    }
    uint64_t v45 = v38[7];
    uint64_t v46 = (void *)(a1 + v45);
    uint64_t v47 = *(void *)(a1 + v45 + 8);
    uint64_t v48 = (void *)(a2 + v45);
    uint64_t v49 = v48[1];
    if (!v47)
    {
      if (v49) {
        goto LABEL_42;
      }
      goto LABEL_13;
    }
    if (!v49) {
      goto LABEL_42;
    }
    if (*v46 == *v48 && v47 == v49 || (char v50 = sub_251F36B10(), v44 = 0, (v50 & 1) != 0))
    {
LABEL_13:
      if ((sub_251F34D70() & 1) == 0
        || (sub_251B04848(*(void *)(a1 + v38[9]), *(void *)(a2 + v38[9])) & 1) == 0
        || *(unsigned __int8 *)(a1 + v38[10]) != *(unsigned __int8 *)(a2 + v38[10])
        || *(unsigned __int8 *)(a1 + v38[11]) != *(unsigned __int8 *)(a2 + v38[11]))
      {
        goto LABEL_42;
      }
      uint64_t v51 = v38[12];
      uint64_t v87 = a1;
      sub_251A1B128(a1 + v51, (uint64_t)v37, &qword_269BA2D30);
      uint64_t v86 = v38;
      uint64_t v52 = v38[12];
      uint64_t v88 = a2;
      sub_251A1B128(a2 + v52, (uint64_t)v35, &qword_269BA2D30);
      uint64_t v53 = (uint64_t)&v28[*(int *)(v26 + 48)];
      sub_251A1B128((uint64_t)v37, (uint64_t)v28, &qword_269BA2D30);
      sub_251A1B128((uint64_t)v35, v53, &qword_269BA2D30);
      uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 48);
      if (v54((uint64_t)v28, 1, v23) == 1)
      {
        sub_251A1B064((uint64_t)v35, &qword_269BA2D30);
        sub_251A1B064((uint64_t)v37, &qword_269BA2D30);
        int v55 = v54(v53, 1, v23);
        uint64_t v56 = (uint64_t)v89;
        if (v55 == 1)
        {
          sub_251A1B064((uint64_t)v28, &qword_269BA2D30);
LABEL_24:
          uint64_t v61 = v86;
          uint64_t v62 = v101;
          sub_251A1B128(v87 + v86[13], v101, &qword_269BA0FB8);
          uint64_t v63 = v104;
          sub_251A1B128(v88 + v61[13], v104, &qword_269BA0FB8);
          uint64_t v64 = v56 + *(int *)(v100 + 48);
          sub_251A1B128(v62, v56, &qword_269BA0FB8);
          sub_251A1B128(v63, v64, &qword_269BA0FB8);
          uint64_t v65 = v103;
          uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
          if (v66(v56, 1, v103) == 1)
          {
            sub_251A1B064(v63, &qword_269BA0FB8);
            sub_251A1B064(v62, &qword_269BA0FB8);
            if (v66(v64, 1, v65) == 1)
            {
              sub_251A1B064(v56, &qword_269BA0FB8);
              goto LABEL_32;
            }
            goto LABEL_29;
          }
          uint64_t v67 = v99;
          sub_251A1B128(v56, v99, &qword_269BA0FB8);
          if (v66(v64, 1, v65) == 1)
          {
            sub_251A1B064(v104, &qword_269BA0FB8);
            sub_251A1B064(v62, &qword_269BA0FB8);
            sub_251D5C1AC(v67, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
LABEL_29:
            uint64_t v58 = &qword_269BA2E28;
            uint64_t v59 = v56;
            goto LABEL_41;
          }
          uint64_t v68 = v98;
          sub_251D5C274(v64, v98, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
          if ((sub_251F34D70() & 1) == 0)
          {
            sub_251D5C1AC(v68, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
            sub_251A1B064(v104, &qword_269BA0FB8);
            sub_251A1B064(v62, &qword_269BA0FB8);
            sub_251D5C1AC(v67, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
            uint64_t v59 = v56;
            uint64_t v58 = &qword_269BA0FB8;
            goto LABEL_41;
          }
          uint64_t v69 = *(int *)(v65 + 20);
          int v70 = *(unsigned __int8 *)(v67 + v69);
          int v71 = *(unsigned __int8 *)(v68 + v69);
          sub_251D5C1AC(v68, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
          sub_251A1B064(v104, &qword_269BA0FB8);
          sub_251A1B064(v62, &qword_269BA0FB8);
          sub_251D5C1AC(v67, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
          sub_251A1B064(v56, &qword_269BA0FB8);
          if (v70 == v71)
          {
LABEL_32:
            if (*(unsigned __int8 *)(v87 + v86[14]) != *(unsigned __int8 *)(v88 + v86[14])
              || *(unsigned __int8 *)(v87 + v86[15]) != *(unsigned __int8 *)(v88 + v86[15]))
            {
              goto LABEL_42;
            }
            uint64_t v72 = v96;
            uint64_t v73 = v88;
            BOOL v74 = v86;
            sub_251A1B128(v87 + v86[16], v96, &qword_269BA2D38);
            uint64_t v75 = v95;
            sub_251A1B128(v73 + v74[16], v95, &qword_269BA2D38);
            uint64_t v76 = v97;
            uint64_t v77 = v97 + *(int *)(v92 + 48);
            sub_251A1B128(v72, v97, &qword_269BA2D38);
            sub_251A1B128(v75, v77, &qword_269BA2D38);
            char v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
            uint64_t v79 = v76;
            uint64_t v80 = v94;
            if (v78(v79, 1, v94) == 1)
            {
              sub_251A1B064(v95, &qword_269BA2D38);
              sub_251A1B064(v96, &qword_269BA2D38);
              if (v78(v77, 1, v80) == 1)
              {
                sub_251A1B064(v97, &qword_269BA2D38);
LABEL_45:
                char v44 = *(unsigned char *)(v87 + v86[17]) ^ *(unsigned char *)(v88 + v86[17]) ^ 1;
                return v44 & 1;
              }
            }
            else
            {
              uint64_t v81 = v91;
              sub_251A1B128(v97, v91, &qword_269BA2D38);
              if (v78(v77, 1, v80) != 1)
              {
                uint64_t v83 = v90;
                sub_251D5C274(v77, v90, (uint64_t (*)(void))type metadata accessor for StaticCameraRecordingEventManager);
                char v84 = sub_251F34D70();
                sub_251D5C1AC(v83, (uint64_t (*)(void))type metadata accessor for StaticCameraRecordingEventManager);
                sub_251A1B064(v95, &qword_269BA2D38);
                sub_251A1B064(v96, &qword_269BA2D38);
                sub_251D5C1AC(v81, (uint64_t (*)(void))type metadata accessor for StaticCameraRecordingEventManager);
                sub_251A1B064(v97, &qword_269BA2D38);
                if (v84) {
                  goto LABEL_45;
                }
                goto LABEL_42;
              }
              sub_251A1B064(v95, &qword_269BA2D38);
              sub_251A1B064(v96, &qword_269BA2D38);
              sub_251D5C1AC(v81, (uint64_t (*)(void))type metadata accessor for StaticCameraRecordingEventManager);
            }
            uint64_t v58 = &qword_269BA2E20;
            uint64_t v59 = v97;
            goto LABEL_41;
          }
LABEL_42:
          char v44 = 0;
          return v44 & 1;
        }
      }
      else
      {
        sub_251A1B128((uint64_t)v28, (uint64_t)v32, &qword_269BA2D30);
        int v57 = v54(v53, 1, v23);
        uint64_t v56 = (uint64_t)v89;
        if (v57 != 1)
        {
          sub_251D5C274(v53, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StaticCameraSnapshotControl);
          BOOL v60 = _s13HomeDataModel27StaticCameraSnapshotControlV2eeoiySbAC_ACtFZ_0((uint64_t)v32, (uint64_t)v25);
          sub_251D5C1AC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StaticCameraSnapshotControl);
          sub_251A1B064((uint64_t)v35, &qword_269BA2D30);
          sub_251A1B064((uint64_t)v37, &qword_269BA2D30);
          sub_251D5C1AC((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StaticCameraSnapshotControl);
          sub_251A1B064((uint64_t)v28, &qword_269BA2D30);
          if (!v60) {
            goto LABEL_42;
          }
          goto LABEL_24;
        }
        sub_251A1B064((uint64_t)v35, &qword_269BA2D30);
        sub_251A1B064((uint64_t)v37, &qword_269BA2D30);
        sub_251D5C1AC((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StaticCameraSnapshotControl);
      }
      uint64_t v58 = (uint64_t *)&unk_269BA2E30;
      uint64_t v59 = (uint64_t)v28;
LABEL_41:
      sub_251A1B064(v59, v58);
      goto LABEL_42;
    }
  }
  return v44 & 1;
}

unint64_t sub_251D57264()
{
  unint64_t result = qword_269BA2D48;
  if (!qword_269BA2D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2D48);
  }
  return result;
}

unint64_t sub_251D572B8()
{
  unint64_t result = qword_269BA2D50;
  if (!qword_269BA2D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2D50);
  }
  return result;
}

uint64_t sub_251D5730C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC40);
    sub_251D5C20C(a2, MEMORY[0x270FA95A0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251D57394()
{
  unint64_t result = qword_269BA2D78;
  if (!qword_269BA2D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2D78);
  }
  return result;
}

unint64_t sub_251D573F8()
{
  unint64_t result = qword_269BA2DA8;
  if (!qword_269BA2DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2DA8);
  }
  return result;
}

unint64_t sub_251D5744C(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a2;
  id v37 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E3A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v34 - v10;
  unint64_t v12 = type metadata accessor for StaticCameraProfile();
  uint64_t v40 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v38 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v39 = (uint64_t)&v34 - v15;
  if (a1 >> 62) {
    goto LABEL_32;
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v16)
  {
    uint64_t v34 = v4;
    int64_t v35 = v9;
    unint64_t v45 = a1 & 0xC000000000000001;
    uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, unint64_t))(v40 + 56);
    unint64_t v17 = MEMORY[0x263F8EE78];
    uint64_t v18 = 4;
    uint64_t v46 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))(v40 + 48);
    uint64_t v42 = (v40 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    uint64_t v43 = v16;
    unint64_t v44 = a1;
    uint64_t v9 = v38;
    while (1)
    {
      unint64_t v20 = v12;
      unint64_t v12 = v18 - 4;
      id v21 = v45 ? (id)MEMORY[0x2533AB3A0](v18 - 4, a1) : *(id *)(a1 + 8 * v18);
      uint64_t v22 = v21;
      a1 = v18 - 3;
      if (__OFADD__(v12, 1)) {
        break;
      }
      id v23 = objc_msgSend(v21, sel_cameraProfiles);
      if (!v23) {
        goto LABEL_21;
      }
      uint64_t v24 = v23;
      sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
      unint64_t v12 = sub_251F35AC0();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v4 = (unsigned int (*)(void, void, void))sub_251F366C0();
        swift_bridgeObjectRelease();
        if (!v4)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v4 = *(unsigned int (**)(void, void, void))((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v4) {
          goto LABEL_20;
        }
      }
      if ((v12 & 0xC000000000000001) != 0)
      {
        id v25 = (id)MEMORY[0x2533AB3A0](0, v12);
      }
      else
      {
        if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_31;
        }
        id v25 = *(id *)(v12 + 32);
      }
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      uint64_t v27 = v36;
      swift_bridgeObjectRetain();
      id v28 = v37;
      uint64_t v29 = (uint64_t)v35;
      sub_251D51730(v26, v27, v28, (uint64_t)v35);
      uint64_t v4 = *v46;
      unint64_t v12 = v20;
      if ((*v46)(v29, 1, v20) == 1)
      {
        sub_251A1B064(v29, &qword_26B21E3A0);
        uint64_t v9 = v38;
LABEL_21:
        unint64_t v12 = v20;
        (*v41)(v11, 1, 1, v20);

        uint64_t v4 = *v46;
        goto LABEL_22;
      }
      sub_251D5C274(v29, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      (*v41)(v11, 0, 1, v20);

      uint64_t v9 = v38;
LABEL_22:
      if (v4(v11, 1, v12) == 1)
      {
        sub_251A1B064((uint64_t)v11, &qword_26B21E3A0);
      }
      else
      {
        uint64_t v30 = v39;
        sub_251D5C274((uint64_t)v11, v39, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        sub_251D5C274(v30, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v17 = sub_251F0F1C0(0, *(void *)(v17 + 16) + 1, 1, v17);
        }
        unint64_t v32 = *(void *)(v17 + 16);
        unint64_t v31 = *(void *)(v17 + 24);
        uint64_t v4 = (unsigned int (*)(void, void, void))(v32 + 1);
        if (v32 >= v31 >> 1) {
          unint64_t v17 = sub_251F0F1C0(v31 > 1, v32 + 1, 1, v17);
        }
        *(void *)(v17 + 16) = v4;
        sub_251D5C274((uint64_t)v9, v17+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v32, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      }
      ++v18;
      BOOL v19 = a1 == v43;
      a1 = v44;
      if (v19)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_251F366C0();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251D5795C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticCameraProfile();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FD38);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  uint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  uint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FD38);
    uint64_t v20 = sub_251F34DA0();
    unint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    id v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251D5C274((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A11ECC();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01840(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251D5C274((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251D5C2DC(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        goto LABEL_4;
      }
    }
    uint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251D5C274((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251D57D98(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v6 = sub_251F35AC0();

  swift_bridgeObjectRetain();
  id v7 = a1;
  uint64_t v8 = 0;
  unint64_t v9 = sub_251D5744C(v6, a3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v27 = 0;
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_251A3DF4C(0, v10, 0);
    uint64_t v11 = v30;
    uint64_t v12 = 0;
    uint64_t v13 = *(void *)(type metadata accessor for StaticCameraProfile() - 8);
    uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
    unint64_t v26 = v9;
    unint64_t v28 = v9 + ((v14 + 32) & ~v14);
    uint64_t v29 = v13;
    do
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FD38);
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = MEMORY[0x270FA5388](v15 - 8);
      uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
      sub_251D5C0FC(v28 + *(void *)(v29 + 72) * v12, v20, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      uint64_t v21 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      uint64_t v30 = v11;
      unint64_t v23 = *(void *)(v11 + 16);
      unint64_t v22 = *(void *)(v11 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_251A3DF4C(v22 > 1, v23 + 1, 1);
        uint64_t v11 = v30;
      }
      ++v12;
      *(void *)(v11 + 16) = v23 + 1;
      sub_251A4ECF0((uint64_t)v19, v11+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v23, &qword_26B21FD38);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    uint64_t v8 = v27;
    if (*(void *)(v11 + 16)) {
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C920);
      uint64_t v24 = sub_251F36700();
      goto LABEL_10;
    }
  }
  uint64_t v24 = MEMORY[0x263F8EE80];
LABEL_10:
  uint64_t v30 = v24;
  sub_251D5795C(v11, 1, &v30);
  swift_bridgeObjectRelease();
  if (!v8) {
    return v30;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251D580BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v52 = (uint64_t)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int64_t v10 = (char *)v44 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v44 - v13;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v58 = MEMORY[0x263F8EE78];
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v48 = v14;
    v44[1] = v2;
    uint64_t v18 = 0;
    uint64_t v19 = *(void *)(v12 + 72);
    unint64_t v45 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v46 = v10;
    uint64_t v20 = a1 + v45;
    uint64_t v54 = a2 + 56;
    uint64_t v55 = v19;
    uint64_t v47 = a2;
    uint64_t v49 = v5;
    uint64_t v50 = a1 + v45;
    uint64_t v53 = (char *)v44 - v13;
    uint64_t v51 = v17;
    while (1)
    {
      sub_251D5C0FC(v20 + v55 * v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
      int v22 = v15[*(int *)(v5 + 88)];
      if ((v22 - 5) >= 4 && v22 != 38)
      {
        if (qword_26B21F080 != -1) {
          swift_once();
        }
        unint64_t v23 = off_26B21F078;
        if (!*((void *)off_26B21F078 + 2)) {
          goto LABEL_21;
        }
        sub_251F36CA0();
        char v56 = v22;
        ServiceKind.rawValue.getter();
        sub_251F357B0();
        swift_bridgeObjectRelease();
        uint64_t v24 = sub_251F36D00();
        uint64_t v25 = -1 << v23[32];
        unint64_t v26 = v24 & ~v25;
        if ((*(void *)&v23[((v26 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v26))
        {
          uint64_t v27 = ~v25;
          while (1)
          {
            LOBYTE(v57[0]) = *(unsigned char *)(*((void *)v23 + 6) + v26);
            char v56 = v22;
            unint64_t v28 = ServiceKind.rawValue.getter();
            uint64_t v30 = v29;
            if (v28 == ServiceKind.rawValue.getter() && v30 == v31) {
              break;
            }
            char v33 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v33) {
              goto LABEL_4;
            }
            unint64_t v26 = (v26 + 1) & v27;
            if (((*(void *)&v23[((v26 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v26) & 1) == 0) {
              goto LABEL_21;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_4:
          uint64_t v15 = v53;
          uint64_t v21 = v48;
          sub_251D5C0FC((uint64_t)v53, v48, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v5 = v49;
        }
        else
        {
LABEL_21:
          uint64_t v15 = v53;
          uint64_t v21 = v48;
          sub_251D5C0FC((uint64_t)v53, v48, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v35 = (uint64_t)v46;
          uint64_t v34 = v47;
          uint64_t v5 = v49;
          if (!*(void *)(v47 + 16)
            || (sub_251F36CA0(),
                StaticService.hash(into:)(v57),
                uint64_t v36 = sub_251F36D00(),
                uint64_t v37 = -1 << *(unsigned char *)(v34 + 32),
                unint64_t v38 = v36 & ~v37,
                ((*(void *)(v54 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0))
          {
LABEL_26:
            sub_251D5C1AC(v21, (uint64_t (*)(void))type metadata accessor for StaticService);
            sub_251D5C274((uint64_t)v15, v52, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v41 = v58;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3E3E8(0, *(void *)(v41 + 16) + 1, 1);
              uint64_t v41 = v58;
            }
            uint64_t v17 = v51;
            unint64_t v43 = *(void *)(v41 + 16);
            unint64_t v42 = *(void *)(v41 + 24);
            if (v43 >= v42 >> 1)
            {
              sub_251A3E3E8(v42 > 1, v43 + 1, 1);
              uint64_t v41 = v58;
            }
            *(void *)(v41 + 16) = v43 + 1;
            sub_251D5C274(v52, v41 + v45 + v43 * v55, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v15 = v53;
            uint64_t v20 = v50;
            goto LABEL_7;
          }
          uint64_t v39 = ~v37;
          while (1)
          {
            sub_251D5C0FC(*(void *)(v34 + 48) + v38 * v55, v35, (uint64_t (*)(void))type metadata accessor for StaticService);
            char v40 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v35, v21);
            sub_251D5C1AC(v35, (uint64_t (*)(void))type metadata accessor for StaticService);
            if (v40) {
              break;
            }
            unint64_t v38 = (v38 + 1) & v39;
            if (((*(void *)(v54 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
              goto LABEL_26;
            }
          }
        }
        sub_251D5C1AC(v21, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v20 = v50;
        uint64_t v17 = v51;
      }
      sub_251D5C1AC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_7:
      if (++v18 == v17) {
        return v58;
      }
    }
  }
  return result;
}

uint64_t sub_251D58614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for StaticService();
  uint64_t v8 = *(void *)(v62 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v62);
  uint64_t v63 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v65 = (uint64_t)&v53 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v58 = (uint64_t)&v53 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v64 = (uint64_t)&v53 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t result = MEMORY[0x270FA5388](v17);
  int v22 = (char *)&v53 - v21;
  int64_t v23 = 0;
  uint64_t v67 = MEMORY[0x263F8EE78];
  uint64_t v24 = a1 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & *(void *)(a1 + 64);
  int64_t v66 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v60 = a2;
  uint64_t v61 = a1;
  char v56 = v7;
  uint64_t v57 = a1 + 64;
  uint64_t v59 = v8;
  if (v27) {
    goto LABEL_6;
  }
LABEL_7:
  while (2)
  {
    int64_t v30 = v23 + 1;
    if (!__OFADD__(v23, 1))
    {
      if (v30 < v66)
      {
        unint64_t v31 = *(void *)(v24 + 8 * v30);
        ++v23;
        if (v31) {
          goto LABEL_22;
        }
        int64_t v23 = v30 + 1;
        if (v30 + 1 >= v66) {
          goto LABEL_39;
        }
        unint64_t v31 = *(void *)(v24 + 8 * v23);
        if (v31) {
          goto LABEL_22;
        }
        int64_t v23 = v30 + 2;
        if (v30 + 2 >= v66) {
          goto LABEL_39;
        }
        unint64_t v31 = *(void *)(v24 + 8 * v23);
        if (v31) {
          goto LABEL_22;
        }
        int64_t v23 = v30 + 3;
        if (v30 + 3 >= v66) {
          goto LABEL_39;
        }
        unint64_t v31 = *(void *)(v24 + 8 * v23);
        if (v31)
        {
LABEL_22:
          unint64_t v27 = (v31 - 1) & v31;
          for (unint64_t i = __clz(__rbit64(v31)) + (v23 << 6); ; unint64_t i = v28 | (v23 << 6))
          {
            uint64_t v33 = *(void *)(v8 + 72);
            sub_251D5C0FC(*(void *)(a1 + 56) + v33 * i, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
            sub_251D5C274((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticService);
            if (!*(void *)(a2 + 16)) {
              break;
            }
            unint64_t v34 = sub_2519FE584((uint64_t)v22);
            if ((v35 & 1) == 0) {
              break;
            }
            uint64_t v36 = v58;
            sub_251D5C0FC(*(void *)(a2 + 56) + v34 * v33, v58, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v37 = v64;
            sub_251D5C274(v36, v64, (uint64_t (*)(void))type metadata accessor for StaticService);
            LODWORD(v36) = *(unsigned __int8 *)(v37 + *(int *)(v62 + 72));
            uint64_t v38 = v65;
            sub_251D5C0FC(v37, v65, (uint64_t (*)(void))type metadata accessor for StaticService);
            if (v36 == 1)
            {
              sub_251D5C1AC(v38, (uint64_t (*)(void))type metadata accessor for StaticService);
              sub_251D5C1AC(v37, (uint64_t (*)(void))type metadata accessor for StaticService);
              uint64_t v24 = v57;
            }
            else
            {
              uint64_t v39 = v55;
              if (*(void *)(v55 + 16) && (unint64_t v40 = sub_2519FE584(v38 + *(int *)(v62 + 44)), (v41 & 1) != 0))
              {
                unint64_t v42 = v40;
                uint64_t v54 = *(void *)(v39 + 56);
                uint64_t v43 = type metadata accessor for StaticAccessory(0);
                uint64_t v44 = *(void *)(v43 - 8);
                uint64_t v45 = v54 + *(void *)(v44 + 72) * v42;
                uint64_t v46 = (uint64_t)v56;
                sub_251D5C0FC(v45, (uint64_t)v56, type metadata accessor for StaticAccessory);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v43);
              }
              else
              {
                uint64_t v43 = type metadata accessor for StaticAccessory(0);
                uint64_t v46 = (uint64_t)v56;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v56, 1, 1, v43);
              }
              sub_251D5C1AC(v65, (uint64_t (*)(void))type metadata accessor for StaticService);
              sub_251D5C1AC(v64, (uint64_t (*)(void))type metadata accessor for StaticService);
              type metadata accessor for StaticAccessory(0);
              int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v46, 1, v43);
              sub_251A1B064(v46, &qword_26B21F240);
              BOOL v48 = v47 == 1;
              a2 = v60;
              a1 = v61;
              uint64_t v8 = v59;
              uint64_t v24 = v57;
              if (!v48) {
                break;
              }
            }
            sub_251D5C274((uint64_t)v22, v63, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v49 = v67;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3E3E8(0, *(void *)(v49 + 16) + 1, 1);
              uint64_t v49 = v67;
            }
            unint64_t v51 = *(void *)(v49 + 16);
            unint64_t v50 = *(void *)(v49 + 24);
            if (v51 >= v50 >> 1)
            {
              sub_251A3E3E8(v50 > 1, v51 + 1, 1);
              uint64_t v49 = v67;
            }
            *(void *)(v49 + 16) = v51 + 1;
            uint64_t v52 = v49
                + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))
                + v51 * v33;
            uint64_t v8 = v59;
            uint64_t result = sub_251D5C274(v63, v52, (uint64_t (*)(void))type metadata accessor for StaticService);
            a2 = v60;
            a1 = v61;
            if (!v27) {
              goto LABEL_7;
            }
LABEL_6:
            unint64_t v28 = __clz(__rbit64(v27));
            v27 &= v27 - 1;
          }
          uint64_t result = sub_251D5C1AC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (!v27) {
            continue;
          }
          goto LABEL_6;
        }
        int64_t v32 = v30 + 4;
        if (v32 < v66)
        {
          unint64_t v31 = *(void *)(v24 + 8 * v32);
          if (v31)
          {
            int64_t v23 = v32;
            goto LABEL_22;
          }
          while (1)
          {
            int64_t v23 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_41;
            }
            if (v23 >= v66) {
              break;
            }
            unint64_t v31 = *(void *)(v24 + 8 * v23);
            ++v32;
            if (v31) {
              goto LABEL_22;
            }
          }
        }
      }
LABEL_39:
      swift_release();
      return v67;
    }
    break;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251D58CD8()
{
  return sub_251D5C164((unint64_t *)&unk_269BA2DB8, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_251D58D20()
{
  return sub_251D5C20C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95A0]);
}

uint64_t sub_251D58D50(void *a1)
{
  a1[1] = sub_251D5C164(&qword_269BA2DC8, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
  a1[2] = sub_251D5C164(&qword_269BA2DD0, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
  a1[3] = sub_251D5C164(&qword_269B9E190, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
  a1[4] = sub_251D5C164(&qword_269B9E058, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
  a1[5] = sub_251D5C164(&qword_269BA2DD8, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
  uint64_t result = sub_251D5C164(&qword_269BA2DE0, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
  a1[6] = result;
  return result;
}

unint64_t sub_251D58E78()
{
  unint64_t result = qword_269BA2DE8;
  if (!qword_269BA2DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2DE8);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticCameraProfile(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    *(void *)&a1[v10] = *(void *)&a2[v10];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = &a1[v14];
    uint64_t v17 = &a2[v14];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = &a1[v15];
    uint64_t v20 = &a2[v15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v53 = v7;
    v8(v19, v20, v7);
    uint64_t v21 = a3[10];
    *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
    a1[v21] = a2[v21];
    uint64_t v22 = a3[12];
    a1[a3[11]] = a2[a3[11]];
    __dst = &a1[v22];
    int64_t v23 = &a2[v22];
    uint64_t v24 = type metadata accessor for StaticCameraSnapshotControl();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
      memcpy(__dst, v23, *(void *)(*(void *)(v27 - 8) + 64));
      uint64_t v28 = v53;
      uint64_t v29 = v8;
    }
    else
    {
      unint64_t v51 = v8;
      v8(__dst, v23, v53);
      uint64_t v31 = *(int *)(v24 + 20);
      int64_t v32 = &__dst[v31];
      uint64_t v33 = &v23[v31];
      uint64_t v34 = sub_251F34D20();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      uint64_t v29 = v51;
      uint64_t v28 = v53;
    }
    uint64_t v37 = a3[13];
    uint64_t v38 = &a1[v37];
    uint64_t v39 = &a2[v37];
    uint64_t v40 = type metadata accessor for StaticCameraStreamControl();
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v29(v38, v39, v28);
      v38[*(int *)(v40 + 20)] = v39[*(int *)(v40 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    uint64_t v43 = a3[15];
    a1[a3[14]] = a2[a3[14]];
    a1[v43] = a2[v43];
    uint64_t v44 = a3[16];
    uint64_t v45 = &a1[v44];
    uint64_t v46 = &a2[v44];
    uint64_t v47 = type metadata accessor for StaticCameraRecordingEventManager();
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      v29(v45, v46, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    a1[a3[17]] = a2[a3[17]];
  }
  return a1;
}

uint64_t destroy for StaticCameraProfile(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v15)((void *)(v4 - 8), a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15(a1 + a2[8], v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[12];
  uint64_t v6 = type metadata accessor for StaticCameraSnapshotControl();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v15(v5, v4);
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_251F34D20();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  uint64_t v10 = a1 + a2[13];
  uint64_t v11 = type metadata accessor for StaticCameraStreamControl();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)) {
    v15(v10, v4);
  }
  uint64_t v12 = a1 + a2[16];
  uint64_t v13 = type metadata accessor for StaticCameraRecordingEventManager();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v12, v4);
  }
  return result;
}

uint64_t initializeWithCopy for StaticCameraProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a1 + v14;
  uint64_t v19 = a2 + v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v51 = v6;
  v7(v18, v19, v6);
  uint64_t v20 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  __dst = (char *)(a1 + v21);
  uint64_t v22 = (char *)(a2 + v21);
  uint64_t v23 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
    memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
    uint64_t v27 = v51;
    uint64_t v28 = (void (*)(void *, const void *, uint64_t))v7;
  }
  else
  {
    uint64_t v49 = v7;
    v7((uint64_t)__dst, (uint64_t)v22, v51);
    uint64_t v29 = *(int *)(v23 + 20);
    uint64_t v30 = &__dst[v29];
    uint64_t v31 = &v22[v29];
    uint64_t v32 = sub_251F34D20();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    uint64_t v28 = (void (*)(void *, const void *, uint64_t))v49;
    uint64_t v27 = v51;
  }
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = type metadata accessor for StaticCameraStreamControl();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    v28(v36, v37, v27);
    *((unsigned char *)v36 + *(int *)(v38 + 20)) = *((unsigned char *)v37 + *(int *)(v38 + 20));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v41 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  uint64_t v42 = a3[16];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (const void *)(a2 + v42);
  uint64_t v45 = type metadata accessor for StaticCameraRecordingEventManager();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    v28(v43, v44, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithCopy for StaticCameraProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v60 = v6;
  uint64_t v58 = (void (*)(uint64_t, char *, uint64_t))v7;
  v7(a1 + a3[8], a2 + a3[8], v6);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19((uint64_t)v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      v58(v15, v16, v60);
      uint64_t v31 = *(int *)(v17 + 20);
      uint64_t v32 = (void *)(v15 + v31);
      uint64_t v33 = &v16[v31];
      uint64_t v34 = sub_251F34D20();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
      int v37 = v36(v32, 1, v34);
      int v38 = v36(v33, 1, v34);
      if (v37)
      {
        if (!v38)
        {
          (*(void (**)(void *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v38)
        {
          (*(void (**)(void *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v35 + 8))(v32, v34);
      }
      size_t v28 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
      uint64_t v29 = v32;
      uint64_t v30 = v33;
LABEL_8:
      memcpy(v29, v30, v28);
      goto LABEL_14;
    }
    sub_251D5C1AC(v15, (uint64_t (*)(void))type metadata accessor for StaticCameraSnapshotControl);
LABEL_7:
    size_t v28 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30) - 8) + 64);
    uint64_t v29 = (void *)v15;
    uint64_t v30 = v16;
    goto LABEL_8;
  }
  if (v21) {
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v15, v16, v60);
  uint64_t v22 = *(int *)(v17 + 20);
  uint64_t v23 = (void *)(v15 + v22);
  uint64_t v24 = &v16[v22];
  uint64_t v25 = sub_251F34D20();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_14:
  uint64_t v39 = a3[13];
  uint64_t v40 = (unsigned char *)(a1 + v39);
  uint64_t v41 = (unsigned char *)(a2 + v39);
  uint64_t v42 = type metadata accessor for StaticCameraStreamControl();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48);
  int v45 = v44(v40, 1, v42);
  int v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v59 + 16))(v40, v41, v60);
      v40[*(int *)(v42 + 20)] = v41[*(int *)(v42 + 20)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v46)
  {
    sub_251D5C1AC((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
LABEL_19:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
    memcpy(v40, v41, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_20;
  }
  v58((uint64_t)v40, v41, v60);
  v40[*(int *)(v42 + 20)] = v41[*(int *)(v42 + 20)];
LABEL_20:
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v48 = a3[16];
  uint64_t v49 = (void *)(a1 + v48);
  unint64_t v50 = (void *)(a2 + v48);
  uint64_t v51 = type metadata accessor for StaticCameraRecordingEventManager();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (!v54)
  {
    if (!v55)
    {
      v58((uint64_t)v49, (char *)v50, v60);
      goto LABEL_26;
    }
    sub_251D5C1AC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for StaticCameraRecordingEventManager);
    goto LABEL_25;
  }
  if (v55)
  {
LABEL_25:
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
    memcpy(v49, v50, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v59 + 16))(v49, v50, v60);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
LABEL_26:
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for StaticCameraProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v10 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v36 = v7;
    v7((uint64_t)v12, (uint64_t)v13, v6);
    uint64_t v17 = *(int *)(v14 + 20);
    __dst = &v12[v17];
    uint64_t v18 = &v13[v17];
    uint64_t v19 = sub_251F34D20();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    uint64_t v7 = v36;
  }
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = type metadata accessor for StaticCameraStreamControl();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v23, (uint64_t)v24, v6);
    *((unsigned char *)v23 + *(int *)(v25 + 20)) = *((unsigned char *)v24 + *(int *)(v25 + 20));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v28 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[16];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v32 = type metadata accessor for StaticCameraRecordingEventManager();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v30, (uint64_t)v31, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for StaticCameraProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v66 = v6;
  uint64_t v64 = (void (*)(uint64_t, char *, uint64_t))v7;
  v7(a1 + a3[8], a2 + a3[8], v6);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24((uint64_t)v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v64(v20, v21, v66);
      uint64_t v36 = *(int *)(v22 + 20);
      int v37 = (void *)(v20 + v36);
      int v38 = &v21[v36];
      uint64_t v39 = sub_251F34D20();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
      int v42 = v41(v37, 1, v39);
      int v43 = v41(v38, 1, v39);
      if (v42)
      {
        if (!v43)
        {
          (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v43)
        {
          (*(void (**)(void *, char *, uint64_t))(v40 + 40))(v37, v38, v39);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v40 + 8))(v37, v39);
      }
      size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
      uint64_t v34 = v37;
      uint64_t v35 = v38;
LABEL_8:
      memcpy(v34, v35, v33);
      goto LABEL_14;
    }
    sub_251D5C1AC(v20, (uint64_t (*)(void))type metadata accessor for StaticCameraSnapshotControl);
LABEL_7:
    size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30) - 8) + 64);
    uint64_t v34 = (void *)v20;
    uint64_t v35 = v21;
    goto LABEL_8;
  }
  if (v26) {
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v20, v21, v66);
  uint64_t v27 = *(int *)(v22 + 20);
  uint64_t v28 = (void *)(v20 + v27);
  uint64_t v29 = &v21[v27];
  uint64_t v30 = sub_251F34D20();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_14:
  uint64_t v44 = a3[13];
  int v45 = (unsigned char *)(a1 + v44);
  int v46 = (unsigned char *)(a2 + v44);
  uint64_t v47 = type metadata accessor for StaticCameraStreamControl();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  int v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 32))(v45, v46, v66);
      v45[*(int *)(v47 + 20)] = v46[*(int *)(v47 + 20)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v51)
  {
    sub_251D5C1AC((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
LABEL_19:
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
    memcpy(v45, v46, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_20;
  }
  v64((uint64_t)v45, v46, v66);
  v45[*(int *)(v47 + 20)] = v46[*(int *)(v47 + 20)];
LABEL_20:
  uint64_t v53 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v53) = *(unsigned char *)(a2 + v53);
  uint64_t v54 = a3[16];
  int v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  uint64_t v57 = type metadata accessor for StaticCameraRecordingEventManager();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
  int v60 = v59(v55, 1, v57);
  int v61 = v59(v56, 1, v57);
  if (!v60)
  {
    if (!v61)
    {
      v64((uint64_t)v55, (char *)v56, v66);
      goto LABEL_26;
    }
    sub_251D5C1AC((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for StaticCameraRecordingEventManager);
    goto LABEL_25;
  }
  if (v61)
  {
LABEL_25:
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
    memcpy(v55, v56, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 32))(v55, v56, v66);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
LABEL_26:
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCameraProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D5AEA4);
}

uint64_t sub_251D5AEA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[12];
LABEL_11:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_12;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[13];
    goto LABEL_11;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[16];
  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for StaticCameraProfile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D5B094);
}

uint64_t sub_251D5B094(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[12];
LABEL_9:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_9;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D38);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[16];
  return v18(v20, a2, a2, v19);
}

void sub_251D5B270()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251D5B440(319, &qword_26B220C30, (void (*)(uint64_t))type metadata accessor for StaticCameraSnapshotControl);
    if (v1 <= 0x3F)
    {
      sub_251D5B440(319, &qword_26B21FED8, (void (*)(uint64_t))type metadata accessor for StaticCameraStreamControl);
      if (v2 <= 0x3F)
      {
        sub_251D5B440(319, &qword_26B21F468, (void (*)(uint64_t))type metadata accessor for StaticCameraRecordingEventManager);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_251D5B440(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_251F36190();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *assignWithCopy for StaticCameraProfile.NearbyStaticItems(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.NearbyStaticItems()
{
  return &type metadata for StaticCameraProfile.NearbyStaticItems;
}

unsigned char *storeEnumTagSinglePayload for StaticCameraProfile.NearbyStaticItems.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D5B5E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.NearbyStaticItems.CodingKeys()
{
  return &type metadata for StaticCameraProfile.NearbyStaticItems.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticCameraProfile.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StaticCameraProfile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D5B77CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.CodingKeys()
{
  return &type metadata for StaticCameraProfile.CodingKeys;
}

unint64_t sub_251D5B7B8()
{
  unint64_t result = qword_269BA2DF0;
  if (!qword_269BA2DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2DF0);
  }
  return result;
}

unint64_t sub_251D5B810()
{
  unint64_t result = qword_269BA2DF8;
  if (!qword_269BA2DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2DF8);
  }
  return result;
}

unint64_t sub_251D5B868()
{
  unint64_t result = qword_269BA2E00;
  if (!qword_269BA2E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2E00);
  }
  return result;
}

unint64_t sub_251D5B8C0()
{
  unint64_t result = qword_269BA2E08;
  if (!qword_269BA2E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2E08);
  }
  return result;
}

unint64_t sub_251D5B918()
{
  unint64_t result = qword_269BA2E10;
  if (!qword_269BA2E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2E10);
  }
  return result;
}

unint64_t sub_251D5B970()
{
  unint64_t result = qword_269BA2E18;
  if (!qword_269BA2E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2E18);
  }
  return result;
}

uint64_t sub_251D5B9C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F70FB0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F71190 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F711B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746F687370616E73 && a2 == 0xEF6C6F72746E6F43 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F436D6165727473 && a2 == 0xED00006C6F72746ELL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F70F70 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F711D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000251F711F0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_251D5BF68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7365636976726573 && a2 == 0xE800000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000736569 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4765636976726573 && a2 == 0xED00007370756F72)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251D5C0FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D5C164(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251D5C1AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D5C20C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251D5C254(uint64_t a1)
{
  return sub_251D55864(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_251D5C274(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D5C2DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

id sub_251D5C34C()
{
  objc_sync_enter(v0);
  uint64_t v1 = OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_AlarmConnectionProvider__alarmManagerServiceConnection;
  BOOL v2 = *(void **)&v0[OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_AlarmConnectionProvider__alarmManagerServiceConnection];
  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    sub_251F356F0();
    id v4 = objc_allocWithZone(MEMORY[0x263F08D70]);
    uint64_t v5 = (void *)sub_251F356C0();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 4096);

    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = sub_251D5CA58;
    uint64_t v18 = v7;
    uint64_t v13 = MEMORY[0x263EF8330];
    uint64_t v14 = 1107296256;
    uint64_t v15 = sub_251AE3BE0;
    uint64_t v16 = &block_descriptor_22_0;
    int v8 = _Block_copy(&v13);
    swift_release();
    objc_msgSend(v6, sel_setInterruptionHandler_, v8);
    _Block_release(v8);
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = sub_251D5CA58;
    uint64_t v18 = v9;
    uint64_t v13 = MEMORY[0x263EF8330];
    uint64_t v14 = 1107296256;
    uint64_t v15 = sub_251AE3BE0;
    uint64_t v16 = &block_descriptor_26;
    uint64_t v10 = _Block_copy(&v13);
    swift_release();
    objc_msgSend(v6, sel_setInvalidationHandler_, v10);
    _Block_release(v10);
    unint64_t v11 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v6;
    id v3 = v6;
  }
  objc_sync_exit(v0);
  return v3;
}

id sub_251D5C5E0()
{
  return sub_251D5C988((uint64_t (*)(void))type metadata accessor for _AlarmConnectionProvider);
}

uint64_t type metadata accessor for _AlarmConnectionProvider()
{
  return self;
}

id sub_251D5C62C()
{
  objc_sync_enter(v0);
  uint64_t v1 = OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_TimerConnectionProvider__timerManagerServiceConnection;
  BOOL v2 = *(void **)&v0[OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_TimerConnectionProvider__timerManagerServiceConnection];
  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    sub_251F356F0();
    id v4 = objc_allocWithZone(MEMORY[0x263F08D70]);
    uint64_t v5 = (void *)sub_251F356C0();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 4096);

    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = sub_251D5CA34;
    uint64_t v18 = v7;
    uint64_t v13 = MEMORY[0x263EF8330];
    uint64_t v14 = 1107296256;
    uint64_t v15 = sub_251AE3BE0;
    uint64_t v16 = &block_descriptor_39;
    int v8 = _Block_copy(&v13);
    swift_release();
    objc_msgSend(v6, sel_setInterruptionHandler_, v8);
    _Block_release(v8);
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = sub_251D5CA34;
    uint64_t v18 = v9;
    uint64_t v13 = MEMORY[0x263EF8330];
    uint64_t v14 = 1107296256;
    uint64_t v15 = sub_251AE3BE0;
    uint64_t v16 = &block_descriptor_16;
    uint64_t v10 = _Block_copy(&v13);
    swift_release();
    objc_msgSend(v6, sel_setInvalidationHandler_, v10);
    _Block_release(v10);
    unint64_t v11 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v6;
    id v3 = v6;
  }
  objc_sync_exit(v0);
  return v3;
}

void sub_251D5C85C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  id v4 = (char *)MEMORY[0x2533AC870](v3);
  if (v4)
  {
    uint64_t v5 = *a2;
    id v6 = *(void **)&v4[*a2];
    *(void *)&v4[v5] = 0;
  }
}

id sub_251D5C920(char *a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  *(void *)&a1[*a3] = 0;
  v5.receiver = a1;
  v5.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_251D5C970()
{
  return sub_251D5C988((uint64_t (*)(void))type metadata accessor for _TimerConnectionProvider);
}

id sub_251D5C988(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for _TimerConnectionProvider()
{
  return self;
}

uint64_t sub_251D5C9FC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_251D5CA34()
{
  sub_251D5C85C(v0, &OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_TimerConnectionProvider__timerManagerServiceConnection);
}

void sub_251D5CA58()
{
  sub_251D5C85C(v0, &OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_AlarmConnectionProvider__alarmManagerServiceConnection);
}

Swift::Void __swiftcall CamerasModel.homeManagerDidUpdateHomes(_:)(HMHomeManager a1)
{
  BOOL v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_269B9FFA8);
  int v8 = a1.super.isa;
  uint64_t v9 = sub_251F35080();
  os_log_type_t v10 = sub_251F35FD0();
  if (!os_log_type_enabled(v9, v10))
  {

LABEL_14:
    uint64_t v22 = sub_251F35CD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
    sub_251F35C80();
    uint64_t v23 = v8;
    id v24 = v2;
    uint64_t v25 = sub_251F35C70();
    int v26 = (void *)swift_allocObject();
    uint64_t v27 = MEMORY[0x263F8F500];
    v26[2] = v25;
    v26[3] = v27;
    v26[4] = v24;
    v26[5] = v23;
    sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269BA2F30, (uint64_t)v26);
    swift_release();
    return;
  }
  uint64_t v11 = swift_slowAlloc();
  uint64_t v12 = swift_slowAlloc();
  uint64_t v29 = v12;
  *(_DWORD *)uint64_t v11 = 136315394;
  uint64_t v28 = sub_251A00E84(0xD00000000000001DLL, 0x8000000251F71330, &v29);
  sub_251F361D0();
  *(_WORD *)(v11 + 12) = 2080;
  id v13 = [(objc_class *)v8 homes];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v14 = sub_251F35AC0();

  if (!(v14 >> 62))
  {
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    unint64_t v20 = 0xE400000000000000;
    uint64_t v18 = 1701736302;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v15 = (id)MEMORY[0x2533AB3A0](0, v14);
    goto LABEL_9;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(v14 + 32);
LABEL_9:
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v16, sel_name);

    uint64_t v18 = sub_251F356F0();
    unint64_t v20 = v19;

LABEL_13:
    uint64_t v28 = sub_251A00E84(v18, v20, &v29);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v9, v10, "%s current is: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v12, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);

    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_251D5CE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  sub_251F35C80();
  v5[5] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D5CF20, v7, v6);
}

uint64_t sub_251D5CF20()
{
  uint64_t v1 = (void *)v0[4];
  BOOL v2 = (void *)v0[3];
  swift_release();
  id v3 = objc_msgSend(v1, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v4 = sub_251F35AC0();

  uint64_t v5 = (void *)sub_2519FB890(MEMORY[0x263F8EE78]);
  id v6 = v2;
  uint64_t v7 = sub_251C4D8A8(v5, v4);

  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v7;
  v0[2] = v6;
  sub_251C49978();
  sub_251F34F00();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  sub_251C4A4A0(v1);
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

Swift::Void __swiftcall CamerasModel.homeManagerDidUpdatePrimaryHome(_:)(HMHomeManager a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (__objc2_class **)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_269B9C348 != -1) {
    goto LABEL_17;
  }
  while (1)
  {
    uint64_t v7 = sub_251F350A0();
    __swift_project_value_buffer(v7, (uint64_t)qword_269B9FFA8);
    uint64_t v8 = a1.super.isa;
    a1.super.Class isa = (Class)sub_251F35080();
    int v9 = sub_251F35FD0();
    if (!os_log_type_enabled((os_log_t)a1.super.isa, (os_log_type_t)v9))
    {

      goto LABEL_24;
    }
    uint64_t v10 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v39 = v36;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v38 = sub_251A00E84(0xD000000000000023, 0x8000000251F71350, &v39);
    sub_251F361D0();
    *(_WORD *)(v10 + 12) = 2080;
    id v11 = [(objc_class *)v8 homes];
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    unint64_t v12 = sub_251F35AC0();

    if (v12 >> 62) {
      break;
    }
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v37 = v2;
    if (!v13) {
      goto LABEL_19;
    }
LABEL_5:
    HIDWORD(v34) = v9;
    uint64_t v35 = v6;
    uint64_t v2 = 4;
    id v6 = &off_26536F000;
    while (1)
    {
      id v14 = (v12 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x2533AB3A0](v2 - 4, v12)
          : *(id *)(v12 + 8 * v2);
      id v15 = v14;
      uint64_t v16 = v2 - 3;
      if (__OFADD__(v2 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v14, sel_isPrimary))
      {
        swift_bridgeObjectRelease_n();
        id v19 = objc_msgSend(v15, sel_name);

        uint64_t v18 = sub_251F356F0();
        unint64_t v17 = v20;

        goto LABEL_15;
      }

      ++v2;
      if (v16 == v13)
      {
        swift_bridgeObjectRelease_n();
        unint64_t v17 = 0xE400000000000000;
        uint64_t v18 = 1701736302;
LABEL_15:
        id v6 = v35;
        LOBYTE(v9) = BYTE4(v34);
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_17:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_251F366C0();
  uint64_t v37 = v2;
  if (v13) {
    goto LABEL_5;
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  unint64_t v17 = 0xE400000000000000;
  uint64_t v18 = 1701736302;
LABEL_20:
  uint64_t v38 = sub_251A00E84(v18, v17, &v39);
  sub_251F361D0();

  swift_bridgeObjectRelease();
  *(_WORD *)(v10 + 22) = 2080;
  id v21 = [(objc_class *)v8 currentHome];
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = objc_msgSend(v21, sel_name);

    uint64_t v24 = sub_251F356F0();
    unint64_t v26 = v25;

    uint64_t v27 = v36;
  }
  else
  {
    unint64_t v26 = 0xE400000000000000;
    uint64_t v27 = v36;
    uint64_t v24 = 1701736302;
  }
  uint64_t v38 = sub_251A00E84(v24, v26, &v39);
  sub_251F361D0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_2519F3000, (os_log_t)a1.super.isa, (os_log_type_t)v9, "%s primary: %s, current: %s", (uint8_t *)v10, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x2533AC760](v27, -1, -1);
  MEMORY[0x2533AC760](v10, -1, -1);

  uint64_t v2 = v37;
LABEL_24:
  uint64_t v28 = sub_251F35CD0();
  (*(void (**)(__objc2_class **, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v6, 1, 1, v28);
  sub_251F35C80();
  uint64_t v29 = v8;
  id v30 = (id)v2;
  uint64_t v31 = sub_251F35C70();
  uint64_t v32 = (void *)swift_allocObject();
  uint64_t v33 = MEMORY[0x263F8F500];
  void v32[2] = v31;
  v32[3] = v33;
  v32[4] = v30;
  v32[5] = v29;
  sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269BA2F48, (uint64_t)v32);
  swift_release();
}

uint64_t sub_251D5D634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_251F35C80();
  v5[4] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D6133C, v7, v6);
}

Swift::Void __swiftcall CamerasModel.homeManagerDidUpdateCurrentHome(_:)(HMHomeManager a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_269B9FFA8);
  uint64_t v8 = a1.super.isa;
  uint64_t v9 = sub_251F35080();
  os_log_type_t v10 = sub_251F35FD0();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v26 = v2;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v28 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v27 = sub_251A00E84(0xD000000000000023, 0x8000000251F71380, &v28);
    sub_251F361D0();
    *(_WORD *)(v11 + 12) = 2080;
    id v13 = [(objc_class *)v8 currentHome];
    if (v13)
    {
      id v14 = v13;
      id v15 = objc_msgSend(v13, sel_name);

      uint64_t v16 = sub_251F356F0();
      unint64_t v18 = v17;
    }
    else
    {
      unint64_t v18 = 0xE400000000000000;
      uint64_t v16 = 1701736302;
    }
    uint64_t v27 = sub_251A00E84(v16, v18, &v28);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v9, v10, "%s current: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v12, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);

    uint64_t v2 = v26;
  }
  else
  {
  }
  uint64_t v19 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  sub_251F35C80();
  unint64_t v20 = v8;
  id v21 = v2;
  uint64_t v22 = sub_251F35C70();
  id v23 = (void *)swift_allocObject();
  uint64_t v24 = MEMORY[0x263F8F500];
  v23[2] = v22;
  v23[3] = v24;
  v23[4] = v21;
  v23[5] = v20;
  sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269BA2F58, (uint64_t)v23);
  swift_release();
}

uint64_t sub_251D5DA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_251F35C80();
  v5[4] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D5DB14, v7, v6);
}

uint64_t sub_251D5DB14()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  sub_251C4A4A0(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

Swift::Void __swiftcall CamerasModel.homeManager(_:didAdd:)(HMHomeManager _, HMHome didAdd)
{
}

uint64_t sub_251D5DB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_251F35C80();
  v5[4] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D5DC20, v7, v6);
}

uint64_t sub_251D5DC20()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  sub_251C4AC54(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

Swift::Void __swiftcall CamerasModel.homeManager(_:didRemove:)(HMHomeManager _, HMHome didRemove)
{
}

uint64_t sub_251D5DD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_251F35C80();
  v5[4] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D5DDA4, v7, v6);
}

uint64_t sub_251D5DDA4()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  sub_251C4B298(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

Swift::Void __swiftcall CamerasModel.home(_:didAdd:)(HMHome _, HMAccessory didAdd)
{
  id v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_251F350A0();
  __swift_project_value_buffer(v9, (uint64_t)qword_269B9FFA8);
  os_log_type_t v10 = didAdd.super.isa;
  uint64_t v11 = _.super.isa;
  uint64_t v12 = v10;
  id v13 = v11;
  id v14 = sub_251F35080();
  os_log_type_t v15 = sub_251F35FD0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    int v45 = v8;
    uint64_t v18 = v17;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v47 = v44;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v46 = sub_251A00E84(0x643A5F28656D6F68, 0xEF293A6464416469, &v47);
    v42[2] = &v47;
    sub_251F361D0();
    *(_WORD *)(v18 + 12) = 2080;
    v42[1] = v18 + 14;
    uint64_t v19 = sub_251F34DA0();
    v42[0] = v42;
    unint64_t v20 = v3;
    uint64_t v21 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    id v23 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v24 = [(objc_class *)v12 uniqueIdentifier];
    int v43 = v16;
    id v25 = v24;
    sub_251F34D80();

    sub_251AF752C();
    uint64_t v26 = sub_251F36AB0();
    unint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
    id v3 = v20;
    uint64_t v46 = sub_251A00E84(v26, v28, &v47);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2080;
    id v29 = [(objc_class *)v13 name];
    uint64_t v30 = sub_251F356F0();
    unint64_t v32 = v31;

    uint64_t v46 = sub_251A00E84(v30, v32, &v47);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v14, (os_log_type_t)v43, "%s adding camera %s to home %s", (uint8_t *)v18, 0x20u);
    uint64_t v33 = v44;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v33, -1, -1);
    uint64_t v34 = v18;
    uint64_t v8 = v45;
    MEMORY[0x2533AC760](v34, -1, -1);
  }
  else
  {
  }
  uint64_t v35 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v8, 1, 1, v35);
  sub_251F35C80();
  uint64_t v36 = v12;
  uint64_t v37 = v13;
  id v38 = v3;
  uint64_t v39 = sub_251F35C70();
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v41 = MEMORY[0x263F8F500];
  v40[2] = v39;
  v40[3] = v41;
  v40[4] = v38;
  v40[5] = v36;
  v40[6] = v37;
  sub_251ACBB48((uint64_t)v8, (uint64_t)&unk_269BA2F68, (uint64_t)v40);
  swift_release();
}

uint64_t sub_251D5E310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_251F35C80();
  v6[5] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D5E3AC, v8, v7);
}

uint64_t sub_251D5E3AC()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)v0[3];
  swift_release();
  sub_251C4B470(v2, v1);
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

Swift::Void __swiftcall CamerasModel.home(_:didRemove:)(HMHome _, HMAccessory didRemove)
{
  id v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_251F350A0();
  __swift_project_value_buffer(v9, (uint64_t)qword_269B9FFA8);
  uint64_t v10 = didRemove.super.isa;
  uint64_t v11 = _.super.isa;
  uint64_t v12 = v10;
  id v13 = v11;
  id v14 = sub_251F35080();
  os_log_type_t v15 = sub_251F35FD0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    int v45 = v8;
    uint64_t v18 = v17;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v47 = v44;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v46 = sub_251A00E84(0xD000000000000012, 0x8000000251F6FD60, &v47);
    v42[2] = &v47;
    sub_251F361D0();
    *(_WORD *)(v18 + 12) = 2080;
    v42[1] = v18 + 14;
    uint64_t v19 = sub_251F34DA0();
    v42[0] = v42;
    unint64_t v20 = v3;
    uint64_t v21 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    id v23 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v24 = [(objc_class *)v12 uniqueIdentifier];
    int v43 = v16;
    id v25 = v24;
    sub_251F34D80();

    sub_251AF752C();
    uint64_t v26 = sub_251F36AB0();
    unint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
    id v3 = v20;
    uint64_t v46 = sub_251A00E84(v26, v28, &v47);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2080;
    id v29 = [(objc_class *)v13 name];
    uint64_t v30 = sub_251F356F0();
    unint64_t v32 = v31;

    uint64_t v46 = sub_251A00E84(v30, v32, &v47);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v14, (os_log_type_t)v43, "%s removing camera %s from home %s", (uint8_t *)v18, 0x20u);
    uint64_t v33 = v44;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v33, -1, -1);
    uint64_t v34 = v18;
    uint64_t v8 = v45;
    MEMORY[0x2533AC760](v34, -1, -1);
  }
  else
  {
  }
  uint64_t v35 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v8, 1, 1, v35);
  sub_251F35C80();
  uint64_t v36 = v12;
  uint64_t v37 = v13;
  id v38 = v3;
  uint64_t v39 = sub_251F35C70();
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v41 = MEMORY[0x263F8F500];
  v40[2] = v39;
  v40[3] = v41;
  v40[4] = v38;
  v40[5] = v36;
  v40[6] = v37;
  sub_251ACBB48((uint64_t)v8, (uint64_t)&unk_269BA2F80, (uint64_t)v40);
  swift_release();
}

uint64_t sub_251D5E918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_251F35C80();
  v6[5] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D5E9B4, v8, v7);
}

uint64_t sub_251D5E9B4()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)v0[3];
  swift_release();
  sub_251C4BF34(v2, v1);
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

Swift::Void __swiftcall CamerasModel.accessoryDidUpdateName(_:)(HMAccessory a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10 - 8);
  Class isa = a1.super.isa;
  id v12 = [(objc_class *)a1.super.isa home];
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))((char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v6);
    goto LABEL_14;
  }
  id v13 = v12;
  uint64_t v95 = v1;
  uint64_t v96 = v5;
  uint64_t v97 = (char *)&v81 - v9;
  id v14 = objc_msgSend(v12, sel_uniqueIdentifier);
  uint64_t v99 = v7;
  id v15 = v14;

  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)&v81 - v9;
  sub_251F34D80();

  uint64_t v18 = v99;
  uint64_t v19 = v99 + 32;
  unint64_t v20 = v17;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
  v21((char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v6);
  id v23 = (char *)(v18 + 56);
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  v22((char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v6);
  id v25 = (char *)(v18 + 48);
  id v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v24((char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v6) == 1)
  {
LABEL_14:
    sub_251B55B48((uint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    return;
  }
  uint64_t v92 = v24;
  uint64_t v93 = v19;
  uint64_t v26 = ((uint64_t (*)(char *, char *, uint64_t))v21)(v97, (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v94 = &v81;
  MEMORY[0x270FA5388](v27);
  unint64_t v28 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v29 = [(objc_class *)isa cameraProfiles];
  if (!v29)
  {
LABEL_19:
    v22(v28, 1, 1, v6);
    goto LABEL_20;
  }
  uint64_t v30 = v29;
  uint64_t v91 = v21;
  sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
  unint64_t v31 = sub_251F35AC0();

  if (!(v31 >> 62))
  {
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v80 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v80)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_6:
  uint64_t v90 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v31 & 0xC000000000000001) != 0)
  {
    id v32 = (id)MEMORY[0x2533AB3A0](0, v31);
  }
  else
  {
    if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    id v32 = *(id *)(v31 + 32);
  }
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v33, sel_uniqueIdentifier);

  MEMORY[0x270FA5388](v35);
  sub_251F34D80();

  uint64_t v36 = v91;
  v91(v28, (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v22(v28, 0, 1, v6);
  if (v92(v28, 1, v6) == 1)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v99 + 8))(v97, v6);
    sub_251B55B48((uint64_t)v28);
    return;
  }
  id v23 = v90;
  v36(v90, v28, v6);
  id v25 = v97;
  if (qword_269B9C348 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v94 = &v81;
  uint64_t v37 = sub_251F350A0();
  uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_269B9FFA8);
  uint64_t v88 = &v81;
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = (unsigned int (*)(char *, uint64_t, uint64_t))(v99 + 16);
  uint64_t v41 = *(uint64_t (**)(char *, char *, uint64_t))(v99 + 16);
  uint64_t v42 = v41(v39, v25, v6);
  uint64_t v87 = &v81;
  MEMORY[0x270FA5388](v42);
  uint64_t v92 = v40;
  unint64_t v89 = (void (*)(char *, char *, uint64_t))v41;
  v41(v39, v23, v6);
  int v43 = isa;
  uint64_t v44 = sub_251F35080();
  os_log_type_t v45 = sub_251F35FD0();
  int v46 = v45;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v85 = swift_slowAlloc();
    v101[0] = v85;
    *(_DWORD *)uint64_t v47 = 136315906;
    int v84 = v46;
    uint64_t v100 = sub_251A00E84(0xD00000000000001ALL, 0x8000000251F70060, v101);
    sub_251F361D0();
    *(_WORD *)(v47 + 12) = 2080;
    Class isa = (Class)(v47 + 14);
    sub_251AF752C();
    BOOL v82 = v43;
    uint64_t v48 = sub_251F36AB0();
    uint64_t v100 = sub_251A00E84(v48, v49, v101);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    os_log_t v83 = v44;
    int v50 = *(objc_class **)(v99 + 8);
    uint64_t v86 = (v99 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v50)(v39, v6);
    *(_WORD *)(v47 + 22) = 2080;
    uint64_t v51 = sub_251F36AB0();
    uint64_t v100 = sub_251A00E84(v51, v52, v101);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    Class isa = v50;
    ((void (*)(char *, uint64_t))v50)(v39, v6);
    *(_WORD *)(v47 + 32) = 2080;
    uint64_t v53 = v82;
    id v54 = [(objc_class *)v82 name];
    uint64_t v55 = sub_251F356F0();
    unint64_t v57 = v56;

    uint64_t v100 = sub_251A00E84(v55, v57, v101);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    os_log_t v58 = v83;
    _os_log_impl(&dword_2519F3000, v83, (os_log_type_t)v84, "%s home: %s camera: %s updated name to: %s", (uint8_t *)v47, 0x2Au);
    uint64_t v59 = v85;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v59, -1, -1);
    MEMORY[0x2533AC760](v47, -1, -1);
  }
  else
  {
    int v60 = *(objc_class **)(v99 + 8);
    uint64_t v86 = (v99 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v60)(v39, v6);
    Class isa = v60;
    ((void (*)(char *, uint64_t))v60)(v39, v6);
  }
  uint64_t v62 = v95;
  uint64_t v61 = (uint64_t)v96;
  uint64_t v63 = sub_251F35CD0();
  uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v61, 1, 1, v63);
  uint64_t v95 = &v81;
  MEMORY[0x270FA5388](v64);
  uint64_t v65 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v97;
  uint64_t v67 = v89;
  uint64_t v68 = ((uint64_t (*)(char *, char *, uint64_t))v89)(v65, v97, v6);
  uint64_t v88 = &v81;
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = v90;
  v67(v65, v90, v6);
  sub_251F35C80();
  int v70 = v62;
  uint64_t v71 = sub_251F35C70();
  uint64_t v72 = *(unsigned __int8 *)(v99 + 80);
  uint64_t v73 = (v72 + 40) & ~v72;
  uint64_t v74 = (v8 + v72 + v73) & ~v72;
  uint64_t v75 = (char *)swift_allocObject();
  uint64_t v76 = MEMORY[0x263F8F500];
  *((void *)v75 + 2) = v71;
  *((void *)v75 + 3) = v76;
  *((void *)v75 + 4) = v70;
  uint64_t v77 = &v75[v73];
  char v78 = v91;
  v91(v77, v65, v6);
  v78(&v75[v74], v65, v6);
  sub_251ACBB48((uint64_t)v96, (uint64_t)&unk_269BA2F90, (uint64_t)v75);
  swift_release();
  Class v79 = isa;
  ((void (*)(char *, uint64_t))isa)(v69, v6);
  ((void (*)(char *, uint64_t))v79)(v66, v6);
}

uint64_t sub_251D5F520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  v6[13] = v7;
  v6[14] = *(void *)(v7 - 8);
  v6[15] = swift_task_alloc();
  sub_251F35C80();
  v6[16] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D5F61C, v9, v8);
}

uint64_t sub_251D5F61C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 72) = v1;
  sub_251C49978();
  sub_251F34F10();
  swift_release();
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*(void *)(*v2 + 16))
  {
    uint64_t v4 = *(void *)(v0 + 88);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_2519FE584(v4);
    if ((v6 & 1) != 0
      && (uint64_t v7 = *(void *)(*(void *)(v3 + 56) + 8 * v5),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          *(void *)(v7 + 16))
      && (sub_2519FE584(*(void *)(v0 + 96)), (v8 & 1) != 0))
    {
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v9 = *(void *)(v0 + 120);
      uint64_t v11 = *(void *)(v0 + 104);
      swift_retain();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = 0;
      *(void *)(v0 + 16) = 0;
      *(unsigned char *)(v0 + 40) = -126;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
      sub_251F35CF0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

Swift::Void __swiftcall CamerasModel.accessoryDidUpdateReachability(_:)(HMAccessory a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10 - 8);
  Class isa = a1.super.isa;
  id v12 = [(objc_class *)a1.super.isa home];
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))((char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v6);
    goto LABEL_14;
  }
  id v13 = v12;
  id v87 = v1;
  unint64_t v89 = v5;
  uint64_t v90 = (char *)&v73 - v9;
  id v14 = objc_msgSend(v12, sel_uniqueIdentifier);

  MEMORY[0x270FA5388](v15);
  sub_251F34D80();

  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16((char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v73 - v9, v6);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v17((char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v6);
  uint64_t v18 = (char *)(v7 + 48);
  uint64_t v88 = *(uint64_t **)(v7 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v88)((char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v6) == 1)
  {
LABEL_14:
    sub_251B55B48((uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    return;
  }
  uint64_t v86 = v7;
  uint64_t v84 = v7 + 32;
  uint64_t v19 = ((uint64_t (*)(char *, char *, uint64_t))v16)(v90, (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v85 = &v73;
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = [(objc_class *)isa cameraProfiles];
  if (!v22)
  {
LABEL_19:
    v17(v21, 1, 1, v6);
    goto LABEL_20;
  }
  id v23 = v22;
  os_log_t v83 = v16;
  sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
  unint64_t v24 = sub_251F35AC0();

  if (!(v24 >> 62))
  {
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v72 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v72)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_6:
  BOOL v82 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v24 & 0xC000000000000001) != 0)
  {
    id v25 = (id)MEMORY[0x2533AB3A0](0, v24);
  }
  else
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    id v25 = *(id *)(v24 + 32);
  }
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v26, sel_uniqueIdentifier);

  MEMORY[0x270FA5388](v28);
  sub_251F34D80();

  id v29 = v83;
  v83(v21, (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v17(v21, 0, 1, v6);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v88)(v21, 1, v6) == 1)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v86 + 8))(v90, v6);
    sub_251B55B48((uint64_t)v21);
    return;
  }
  v29(v82, v21, v6);
  uint64_t v18 = v90;
  if (qword_269B9C348 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v88 = &v73;
  uint64_t v30 = sub_251F350A0();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_269B9FFA8);
  uint64_t v80 = &v73;
  MEMORY[0x270FA5388](v31);
  id v32 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v86;
  id v34 = (uint64_t *)(v86 + 16);
  uint64_t v35 = *(uint64_t (**)(char *, char *, uint64_t))(v86 + 16);
  uint64_t v36 = v35(v32, v18, v6);
  MEMORY[0x270FA5388](v36);
  uint64_t v85 = v34;
  uint64_t v81 = (void (*)(char *, char *, uint64_t))v35;
  v35(v32, v82, v6);
  uint64_t v37 = isa;
  uint64_t v38 = sub_251F35080();
  os_log_type_t v39 = sub_251F35FD0();
  int v40 = v39;
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    v93[0] = v77;
    *(_DWORD *)uint64_t v41 = 136315906;
    int v76 = v40;
    uint64_t v92 = sub_251A00E84(0xD000000000000022, 0x8000000251F6FD80, v93);
    char v78 = &v73;
    sub_251F361D0();
    uint64_t v75 = v37;
    *(_WORD *)(v41 + 12) = 2080;
    Class isa = (Class)(v41 + 14);
    sub_251AF752C();
    uint64_t v42 = sub_251F36AB0();
    uint64_t v92 = sub_251A00E84(v42, v43, v93);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    os_log_t v74 = v38;
    uint64_t v44 = *(objc_class **)(v33 + 8);
    uint64_t v79 = (v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v44)(v32, v6);
    *(_WORD *)(v41 + 22) = 2080;
    uint64_t v45 = sub_251F36AB0();
    uint64_t v92 = sub_251A00E84(v45, v46, v93);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    Class isa = v44;
    ((void (*)(char *, uint64_t))v44)(v32, v6);
    uint64_t v47 = v82;
    *(_WORD *)(v41 + 32) = 1024;
    uint64_t v48 = v75;
    unsigned int v49 = [(objc_class *)v75 isReachable];

    LODWORD(v92) = v49;
    sub_251F361D0();

    os_log_t v50 = v74;
    _os_log_impl(&dword_2519F3000, v74, (os_log_type_t)v76, "%s home: %s camera: %s reachable: %{BOOL}d", (uint8_t *)v41, 0x26u);
    uint64_t v51 = v77;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v51, -1, -1);
    MEMORY[0x2533AC760](v41, -1, -1);

    uint64_t v52 = (uint64_t)v89;
  }
  else
  {

    uint64_t v53 = v37;
    id v54 = *(objc_class **)(v33 + 8);
    uint64_t v79 = (v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v54)(v32, v6);
    Class isa = v54;
    ((void (*)(char *, uint64_t))v54)(v32, v6);

    uint64_t v52 = (uint64_t)v89;
    uint64_t v47 = v82;
  }
  uint64_t v55 = sub_251F35CD0();
  uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v52, 1, 1, v55);
  uint64_t v80 = &v73;
  MEMORY[0x270FA5388](v56);
  unint64_t v57 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v58 = v90;
  uint64_t v59 = v81;
  uint64_t v60 = ((uint64_t (*)(char *, char *, uint64_t))v81)(v57, v90, v6);
  char v78 = &v73;
  MEMORY[0x270FA5388](v60);
  v59(v57, v47, v6);
  sub_251F35C80();
  uint64_t v61 = v47;
  id v62 = v87;
  uint64_t v63 = sub_251F35C70();
  uint64_t v64 = *(unsigned __int8 *)(v86 + 80);
  uint64_t v65 = (v64 + 40) & ~v64;
  uint64_t v66 = (v8 + v64 + v65) & ~v64;
  uint64_t v67 = (char *)swift_allocObject();
  uint64_t v68 = MEMORY[0x263F8F500];
  *((void *)v67 + 2) = v63;
  *((void *)v67 + 3) = v68;
  *((void *)v67 + 4) = v62;
  uint64_t v69 = &v67[v65];
  int v70 = v83;
  v83(v69, v57, v6);
  v70(&v67[v66], v57, v6);
  sub_251ACBB48((uint64_t)v89, (uint64_t)&unk_269BA2FA0, (uint64_t)v67);
  swift_release();
  Class v71 = isa;
  ((void (*)(char *, uint64_t))isa)(v61, v6);
  ((void (*)(char *, uint64_t))v71)(v58, v6);
}

uint64_t sub_251D602AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  v6[13] = v7;
  v6[14] = *(void *)(v7 - 8);
  v6[15] = swift_task_alloc();
  sub_251F35C80();
  v6[16] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D61338, v9, v8);
}

uint64_t sub_251D60434(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251D5CE88(a1, v4, v5, v7, v6);
}

uint64_t sub_251D604F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251D5D634(a1, v4, v5, v7, v6);
}

uint64_t sub_251D605BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_251AB3A34;
  return sub_251D5DA7C(a1, v4, v5, v7, v6);
}

uint64_t sub_251D6067C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_269B9FFA8);
  id v8 = a1;
  uint64_t v9 = sub_251F35080();
  os_log_type_t v10 = sub_251F35FD0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    id v27 = v6;
    uint64_t v29 = v26;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v28 = sub_251A00E84(0xD000000000000016, 0x8000000251F70280, &v29);
    sub_251F361D0();
    *(_WORD *)(v11 + 12) = 2080;
    id v12 = objc_msgSend(v8, sel_name);
    id v13 = v2;
    uint64_t v14 = sub_251F356F0();
    unint64_t v16 = v15;

    uint64_t v17 = v14;
    uint64_t v2 = v13;
    uint64_t v28 = sub_251A00E84(v17, v16, &v29);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v9, v10, "%s adding home: %s", (uint8_t *)v11, 0x16u);
    uint64_t v18 = v26;
    swift_arrayDestroy();
    uint64_t v6 = v27;
    MEMORY[0x2533AC760](v18, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);
  }
  else
  {
  }
  uint64_t v19 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  sub_251F35C80();
  id v20 = v8;
  id v21 = v2;
  uint64_t v22 = sub_251F35C70();
  id v23 = (void *)swift_allocObject();
  uint64_t v24 = MEMORY[0x263F8F500];
  v23[2] = v22;
  v23[3] = v24;
  v23[4] = v21;
  v23[5] = v20;
  sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269BA2FD8, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_251D60998(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_269B9FFA8);
  id v8 = a1;
  uint64_t v9 = sub_251F35080();
  os_log_type_t v10 = sub_251F35FD0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    id v27 = v6;
    uint64_t v29 = v26;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v28 = sub_251A00E84(0xD000000000000019, 0x8000000251F70260, &v29);
    sub_251F361D0();
    *(_WORD *)(v11 + 12) = 2080;
    id v12 = objc_msgSend(v8, sel_name);
    id v13 = v2;
    uint64_t v14 = sub_251F356F0();
    unint64_t v16 = v15;

    uint64_t v17 = v14;
    uint64_t v2 = v13;
    uint64_t v28 = sub_251A00E84(v17, v16, &v29);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v9, v10, "%s removing home: %s", (uint8_t *)v11, 0x16u);
    uint64_t v18 = v26;
    swift_arrayDestroy();
    uint64_t v6 = v27;
    MEMORY[0x2533AC760](v18, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);
  }
  else
  {
  }
  uint64_t v19 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  sub_251F35C80();
  id v20 = v8;
  id v21 = v2;
  uint64_t v22 = sub_251F35C70();
  id v23 = (void *)swift_allocObject();
  uint64_t v24 = MEMORY[0x263F8F500];
  v23[2] = v22;
  v23[3] = v24;
  v23[4] = v21;
  v23[5] = v20;
  sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269BA2FC8, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_251D60CB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251D5E310(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251D60D84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251D5E918(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251D60E50(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v6;
  uint64_t v11 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + v6) & ~v5);
  id v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *id v12 = v2;
  v12[1] = sub_251AB3DD4;
  return sub_251D5F520(a1, v7, v8, v9, v10, v11);
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = v7 + v5;
  swift_unknownObjectRelease();

  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v6);
}

uint64_t sub_251D6107C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v6;
  uint64_t v11 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + v6) & ~v5);
  id v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *id v12 = v2;
  v12[1] = sub_251AB3DD4;
  return sub_251D602AC(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_251D611B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251D5DD0C(a1, v4, v5, v7, v6);
}

uint64_t sub_251D61278(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251D5DB88(a1, v4, v5, v7, v6);
}

uint64_t OtherCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251B75C78(v1, a1);
}

uint64_t OtherCategoryInformation.id.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for OtherCategoryInformation();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for OtherCategoryInformation()
{
  uint64_t result = qword_269BA2FF8;
  if (!qword_269BA2FF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OtherCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for OtherCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static OtherCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for OtherCategoryInformation();
  if ((sub_251DB1CC8(*((unsigned char *)a1 + *(int *)(v4 + 20)), *((unsigned char *)a2 + *(int *)(v4 + 20))) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(uint64_t *)((char *)a1 + v5);
  uint64_t v7 = *(uint64_t *)((char *)a2 + v5);
  return sub_251B04FB8(v6, v7);
}

uint64_t OtherCategoryInformation.hash(into:)(long long *a1)
{
  StateSnapshot.hash(into:)(a1);
  uint64_t v3 = type metadata accessor for OtherCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_251A54A64(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t OtherCategoryInformation.hashValue.getter()
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v3);
  uint64_t v1 = type metadata accessor for OtherCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v3, *(void *)(v0 + *(int *)(v1 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251D616F0@<X0>(uint64_t a1@<X8>)
{
  return sub_251B75C78(v1, a1);
}

uint64_t OtherCategoryInformation.summary.getter()
{
  return 0;
}

uint64_t OtherCategoryInformation.shortSummary.getter()
{
  return 0;
}

uint64_t sub_251D61714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_251D61A8C(a2);
  sub_251D62498(a1, type metadata accessor for StateSnapshot);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
  return v7(a4, 1, 1, a3);
}

uint64_t OtherCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_251D61A8C(a2);
  sub_251D62498(a1, type metadata accessor for StateSnapshot);
  uint64_t v5 = type metadata accessor for OtherCategoryInformation();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(a3, 1, 1, v5);
}

uint64_t OtherCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251D61850(long long *a1, uint64_t a2)
{
  StateSnapshot.hash(into:)(a1);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));
  return sub_251A54A64(a1, v5);
}

uint64_t sub_251D61968(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v5);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251D61A8C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251D61AEC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_251D61B88(&qword_269BA2FE0);
  uint64_t result = sub_251D61B88(&qword_269BA2FE8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_251D61B54()
{
  return sub_251D61B88(&qword_269BA2FF0);
}

uint64_t sub_251D61B88(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for OtherCategoryInformation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *assignWithCopy for OtherCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v56[5];
  uint64_t v55 = a1;
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v53 + 24);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  id v12 = &v6[v11];
  id v13 = &v7[v11];
  *(void *)id v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10[6];
  unint64_t v15 = &v6[v14];
  unint64_t v16 = &v7[v14];
  v9(&v6[v14], &v7[v14], v8);
  uint64_t v17 = v9;
  uint64_t v18 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v19 = v18[5];
  id v20 = &v15[v19];
  id v21 = &v16[v19];
  *(void *)id v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v18[6]] = v16[v18[6]];
  *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v15[v18[8]], &v16[v18[8]], v8);
  *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[11]] = *(void *)&v16[v18[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[12]] = *(void *)&v16[v18[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[14]] = *(void *)&v16[v18[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[17]] = *(void *)&v16[v18[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[18]] = *(void *)&v16[v18[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v10[7];
  id v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  v17(&v6[v22], &v7[v22], v8);
  id v25 = (int *)type metadata accessor for StaticUser();
  uint64_t v26 = v25[5];
  id v27 = &v23[v26];
  uint64_t v28 = &v24[v26];
  *(void *)id v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v23[v25[6]], &v24[v25[6]], v8);
  v23[v25[7]] = v24[v25[7]];
  v23[v25[8]] = v24[v25[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v29 = v10[20];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  id v32 = (int *)type metadata accessor for StaticResident();
  uint64_t v33 = *((void *)v32 - 1);
  id v34 = *(uint64_t (**)(char *, uint64_t, int *))(v33 + 48);
  LODWORD(v23) = v34(v30, 1, v32);
  int v35 = v34(v31, 1, v32);
  if (!v23)
  {
    if (!v35)
    {
      v17(v30, v31, v8);
      uint64_t v47 = v32[5];
      uint64_t v48 = &v30[v47];
      unsigned int v49 = &v31[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = *((void *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v50 = v32[6];
      uint64_t v51 = &v30[v50];
      uint64_t v52 = &v31[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      *((void *)v51 + 1) = *((void *)v52 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
      v17(&v30[v32[10]], &v31[v32[10]], v8);
      goto LABEL_7;
    }
    sub_251D62498((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v35)
  {
LABEL_6:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v30, v31, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v36(v30, v31, v8);
  uint64_t v37 = v32[5];
  uint64_t v38 = &v30[v37];
  os_log_type_t v39 = &v31[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  uint64_t v40 = v32[6];
  uint64_t v41 = &v30[v40];
  uint64_t v42 = &v31[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
  *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
  *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
  uint64_t v43 = v32[10];
  id v54 = &v30[v43];
  uint64_t v44 = &v31[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36(v54, v44, v8);
  (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
LABEL_7:
  *(void *)((char *)v55 + v56[6]) = *(void *)((char *)a2 + v56[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[7]) = *(void *)((char *)a2 + v56[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[8]) = *(void *)((char *)a2 + v56[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[9]) = *(void *)((char *)a2 + v56[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[10]) = *(void *)((char *)a2 + v56[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[11]) = *(void *)((char *)a2 + v56[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[12]) = *(void *)((char *)a2 + v56[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[13]) = *(void *)((char *)a2 + v56[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[14]) = *(void *)((char *)a2 + v56[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[15]) = *(void *)((char *)a2 + v56[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[16]) = *(void *)((char *)a2 + v56[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[17]) = *(void *)((char *)a2 + v56[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[18]) = *(void *)((char *)a2 + v56[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[19]) = *(void *)((char *)a2 + v56[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v55 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)v55 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v55;
}

uint64_t sub_251D62498(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *assignWithTake for OtherCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  unint64_t v57 = a2;
  os_log_t v58 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v58[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v55 + 40);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  id v12 = &v6[v11];
  id v13 = &v7[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)id v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  uint64_t v17 = &v6[v16];
  uint64_t v18 = &v7[v16];
  v9(&v6[v16], &v7[v16], v8);
  uint64_t v19 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v20 = v19[5];
  id v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)id v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v17[v19[6]] = v18[v19[6]];
  *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
  swift_bridgeObjectRelease();
  v9(&v17[v19[8]], &v18[v19[8]], v8);
  *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[10]] = *(void *)&v18[v19[10]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[11]] = *(void *)&v18[v19[11]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[13]] = *(void *)&v18[v19[13]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[14]] = *(void *)&v18[v19[14]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[16]] = *(void *)&v18[v19[16]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[17]] = *(void *)&v18[v19[17]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[18]] = *(void *)&v18[v19[18]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v10[7];
  uint64_t v26 = &v6[v25];
  id v27 = &v7[v25];
  v9(&v6[v25], &v7[v25], v8);
  uint64_t v28 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = v28[5];
  uint64_t v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v56 = v8;
  v9(&v26[v28[6]], &v27[v28[6]], v8);
  v26[v28[7]] = v27[v28[7]];
  v26[v28[8]] = v27[v28[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v34 = v10[20];
  int v35 = &v6[v34];
  uint64_t v36 = &v7[v34];
  uint64_t v37 = (int *)type metadata accessor for StaticResident();
  uint64_t v38 = *((void *)v37 - 1);
  os_log_type_t v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  LODWORD(v26) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v26)
  {
    if (!v40)
    {
      v9(v35, v36, v56);
      uint64_t v45 = v37[5];
      unint64_t v46 = &v35[v45];
      uint64_t v47 = &v36[v45];
      uint64_t v49 = *(void *)v47;
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)unint64_t v46 = v49;
      *((void *)v46 + 1) = v48;
      swift_bridgeObjectRelease();
      uint64_t v50 = v37[6];
      uint64_t v51 = &v35[v50];
      uint64_t v52 = &v36[v50];
      uint64_t v54 = *(void *)v52;
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)uint64_t v51 = v54;
      *((void *)v51 + 1) = v53;
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
      v9(&v35[v37[10]], &v36[v37[10]], v56);
      goto LABEL_7;
    }
    sub_251D62498((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v41(v35, v36, v56);
  *(_OWORD *)&v35[v37[5]] = *(_OWORD *)&v36[v37[5]];
  *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
  *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
  v41(&v35[v37[10]], &v36[v37[10]], v56);
  (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_7:
  *(void *)((char *)a1 + v58[6]) = *(void *)((char *)v57 + v58[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[7]) = *(void *)((char *)v57 + v58[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[8]) = *(void *)((char *)v57 + v58[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[9]) = *(void *)((char *)v57 + v58[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[10]) = *(void *)((char *)v57 + v58[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[11]) = *(void *)((char *)v57 + v58[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[12]) = *(void *)((char *)v57 + v58[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[13]) = *(void *)((char *)v57 + v58[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[14]) = *(void *)((char *)v57 + v58[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[15]) = *(void *)((char *)v57 + v58[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[16]) = *(void *)((char *)v57 + v58[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[17]) = *(void *)((char *)v57 + v58[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[18]) = *(void *)((char *)v57 + v58[18]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[19]) = *(void *)((char *)v57 + v58[19]);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)v57 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v43) = *(void *)((char *)v57 + v43);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OtherCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D62C04);
}

uint64_t sub_251D62C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for OtherCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D62CD8);
}

uint64_t sub_251D62CD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for StateSnapshot(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251D62D94()
{
  uint64_t result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251D62E38(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_251D67790(a1, (uint64_t)sub_251D67B64, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t ActionService.init(with:overrideCharacteristicValues:overrideProfileValues:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v51 = a2;
  uint64_t v6 = (int *)type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_251F34DA0();
  unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(a4, a1, v9);
  uint64_t v11 = (uint64_t *)(a1 + v6[5]);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = (int *)type metadata accessor for ActionService();
  uint64_t v15 = (void *)(a4 + v14[5]);
  void *v15 = v13;
  v15[1] = v12;
  *(unsigned char *)(a4 + v14[6]) = *(unsigned char *)(a1 + v6[6]);
  *(unsigned char *)(a4 + v14[7]) = *(unsigned char *)(a1 + v6[7]);
  v10(a4 + v14[8], a1 + v6[11], v9);
  uint64_t v16 = a1 + v6[12];
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = *(unsigned char *)(v16 + 8);
  uint64_t v18 = a4 + v14[9];
  *(void *)uint64_t v18 = v17;
  *(unsigned char *)(v18 + 8) = v16;
  uint64_t v19 = (uint64_t *)(a1 + v6[21]);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t v22 = (void *)(a4 + v14[10]);
  void *v22 = v20;
  v22[1] = v21;
  *(unsigned char *)(a4 + v14[11]) = *(unsigned char *)(a1 + v6[22]);
  int v23 = *(unsigned __int8 *)(a1 + v6[24]);
  sub_251D6B8B0(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v23 == 53) {
    LOBYTE(v23) = v8[v6[22]];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v49 = type metadata accessor for StaticService;
  sub_251D6B980((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  *(unsigned char *)(a4 + v14[12]) = v23;
  *(unsigned char *)(a4 + v14[13]) = *(unsigned char *)(a1 + v6[23]);
  uint64_t v24 = v51;
  swift_bridgeObjectRetain();
  uint64_t v25 = v50;
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_251D6AA80(v26, v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(a4 + v14[14]) = v27;
  uint64_t v52 = sub_251D68B50(a1, v24);
  uint64_t v28 = (uint64_t *)(a1 + v6[29]);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_2519FA804(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_251D69504(v31, v30, v25, &v52);
  uint64_t v48 = a4;
  uint64_t v33 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(a1 + v6[28]);
  uint64_t v35 = swift_bridgeObjectRetain();
  uint64_t v47 = sub_251D69828(v35, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v36 = (void *)sub_2519FBB0C(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_251D69FF0(v36, v30, v32);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v39 = v47;
  uint64_t v38 = v48;
  int v40 = (uint64_t *)(v48 + v14[16]);
  *int v40 = v37;
  v40[1] = v33;
  *(void *)(v38 + v14[15]) = v39;
  uint64_t v41 = v38;
  uint64_t v42 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = sub_251D6AA80(v43, v42, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_251D6B980(a1, (uint64_t (*)(void))v49);
  *(void *)(v41 + v14[17]) = v44;
  return result;
}

uint64_t ActionService.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for ActionService();
  *(_WORD *)a1 = *(unsigned __int8 *)(v1 + *(int *)(result + 44)) | (*(unsigned __int8 *)(v1 + *(int *)(result + 52)) << 8);
  *(_WORD *)(a1 + 2) = 22784;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return result;
}

uint64_t ActionService.temperatureStringStatusIcon.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ActionService();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251D6B8B0(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionService);
  uint64_t v7 = sub_251EAA758((uint64_t)v6);
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = sub_251EAA8C0((uint64_t)v6);
    uint64_t result = sub_251D6B980((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionService);
    if (v11)
    {
      *a1 = v9;
      a1[1] = v10;
      a1[2] = v11;
      return result;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = sub_251D6B980((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionService);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

uint64_t ActionService.isActivated.getter()
{
  uint64_t v1 = type metadata accessor for ActionService();
  uint64_t result = 2;
  switch(*(unsigned char *)(v0 + *(int *)(v1 + 44)))
  {
    case 3:
    case 0x11:
    case 0x14:
    case 0x15:
    case 0x2A:
    case 0x2C:
    case 0x2F:
    case 0x30:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v3 = 3;
      goto LABEL_8;
    case 0xE:
    case 0x33:
    case 0x34:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v7 = -98;
      Swift::Int_optional v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
      BOOL v4 = v9.value > 0;
      goto LABEL_16;
    case 0x10:
    case 0x1C:
    case 0x22:
    case 0x29:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v3 = 105;
      goto LABEL_8;
    case 0x13:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v5 = -107;
      goto LABEL_10;
    case 0x18:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v3 = 65;
      goto LABEL_8;
    case 0x1E:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v5 = -100;
LABEL_10:
      unsigned __int8 v7 = v5;
      Swift::Int_optional v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
      BOOL v6 = v9.value == 1;
      goto LABEL_13;
    case 0x1F:
    case 0x26:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v3 = 84;
LABEL_8:
      unsigned __int8 v7 = v3;
      return sub_251B457DC(&v7);
    case 0x23:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v7 = -96;
      Swift::Int_optional v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
      BOOL v6 = v9.value == 3;
      goto LABEL_13;
    case 0x2E:
      uint64_t v8 = *(void *)(v0 + *(int *)(v1 + 60));
      unsigned __int8 v7 = -104;
      Swift::Int_optional v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
      BOOL v6 = v9.value == 0;
LABEL_13:
      BOOL v4 = !v6;
LABEL_16:
      if (v9.is_nil) {
        uint64_t result = 2;
      }
      else {
        uint64_t result = v4;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ActionService.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ActionService.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActionService.isPrimary.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionService() + 24));
}

uint64_t ActionService.isDoubleHigh.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionService() + 28));
}

uint64_t ActionService.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActionService() + 32);
  uint64_t v4 = sub_251F34DA0();
  unsigned __int8 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ActionService.mediaSourceIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 36));
}

uint64_t ActionService.customIconSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActionService.serviceKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ActionService();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t ActionService.displayServiceKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ActionService();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t ActionService.serviceSubKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ActionService();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t ActionService.linkedStaticServices.getter()
{
  type metadata accessor for ActionService();
  return swift_bridgeObjectRetain();
}

uint64_t ActionService.staticCharacteristicsBag.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  return swift_bridgeObjectRetain();
}

uint64_t ActionService.staticProfileBag.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ActionService() + 64));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ActionService.bridgedValveServices.getter()
{
  type metadata accessor for ActionService();
  return swift_bridgeObjectRetain();
}

void sub_251D639F0(uint64_t a1, void **a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v7 - 8);
  Swift::Int_optional v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2++;
  uint64_t v68 = v10;
  sub_251A0D51C((uint64_t)a2, (uint64_t)v69);
  id v11 = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v69);
  sub_251A0D51C((uint64_t)a2, (uint64_t)v69);
  sub_251A0D578(v69, v67);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = objc_msgSend(v11, sel_service);
  uint64_t v70 = v3;
  os_log_t v58 = v9;
  uint64_t v59 = a1;
  id v64 = v11;
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))((char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v17);
  }
  else
  {
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))((char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v17);
  }
  uint64_t v19 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v56;
  MEMORY[0x270FA5388](v18);
  unint64_t v61 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v20 = (char *)v56 - v61;
  sub_251F34DA0();
  uint64_t v21 = *(void *)(v17 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v60 = a3;
  v22(v20, a3, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v17);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  id v62 = v56;
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t)&v26[*(int *)(v24 + 56)];
  sub_251A1B128((uint64_t)v19, (uint64_t)v26, &qword_26B21FF90);
  sub_251A1B128((uint64_t)v20, v27, &qword_26B21FF90);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v29 = v28(v26, 1, v17);
  if (v29 == 1)
  {
    sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
    if (v28((char *)v27, 1, v17) == 1)
    {
      sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
      uint64_t v30 = v64;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  unint64_t v57 = v19;
  v56[1] = v56;
  MEMORY[0x270FA5388](v29);
  unint64_t v31 = (char *)v56 - v61;
  sub_251A1B128((uint64_t)v26, (uint64_t)v56 - v61, &qword_26B21FF90);
  uint64_t v32 = v28((char *)v27, 1, v17);
  if (v32 == 1)
  {
    sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v57, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v31, v17);
LABEL_9:
    sub_251A1B064((uint64_t)v26, &qword_26B21E6B8);
    uint64_t v30 = v64;
LABEL_19:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);

    return;
  }
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)v56 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v34, v27, v17);
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  char v35 = sub_251F35650();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v21 + 8);
  v36(v34, v17);
  sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v57, &qword_26B21FF90);
  v36(v31, v17);
  sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
  uint64_t v30 = v64;
  if ((v35 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_11:
  char v37 = *(unsigned char *)(v60 + *(int *)(type metadata accessor for StaticService() + 88));
  LOBYTE(v68) = v37;
  uint64_t v38 = ServiceKind.requiredCharacteristicKinds.getter();
  LOBYTE(v68) = v37;
  uint64_t v39 = ServiceKind.optionalCharacteristicKinds.getter();
  uint64_t v40 = sub_251D8EF64(v39, v38);
  id v41 = objc_msgSend(v30, sel_characteristicType);
  uint64_t v42 = sub_251F356F0();
  uint64_t v44 = v43;

  v45._countAndFlagsBits = v42;
  v45._object = v44;
  CharacteristicKind.init(rawValue:)(v45);
  if (v68 == 174) {
    uint64_t v46 = 0;
  }
  else {
    uint64_t v46 = v68;
  }
  char v47 = sub_251DB3DEC(v46, v40);
  swift_bridgeObjectRelease();
  if ((v47 & 1) == 0) {
    goto LABEL_19;
  }
  id v48 = objc_msgSend(v30, sel_characteristicType);
  uint64_t v49 = sub_251F356F0();
  uint64_t v51 = v50;

  v52._countAndFlagsBits = v49;
  v52._object = v51;
  CharacteristicKind.init(rawValue:)(v52);
  if (v68 == 174) {
    uint64_t v53 = 0;
  }
  else {
    uint64_t v53 = v68;
  }
  sub_251A0D51C((uint64_t)v67, (uint64_t)&v68);
  v65[1] = 0;
  v65[2] = 0;
  v65[0] = 1;
  char v66 = 3;
  id v54 = v30;
  uint64_t v55 = (uint64_t)v58;
  StaticCharacteristic.init(from:value:loadingState:)(v54, (uint64_t)&v68, (uint64_t)v65, (uint64_t)v58);
  sub_2519F88B4(v55, v53);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
}

uint64_t sub_251D640C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  unsigned __int8 v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = &v18[-v7];
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  id v11 = &v18[-v10];
  LOBYTE(v20) = *(unsigned char *)(a1 + *(int *)(v9 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v12 == 0x8000000251F64CB0)
  {
    swift_bridgeObjectRelease();
    sub_251D6B8B0(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    char v13 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251D6B8B0(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    if ((v13 & 1) == 0)
    {
      sub_251D6B980((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251D6B8B0(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_11;
    }
  }
  char v14 = v11[*(int *)(v2 + 48) + 8];
  sub_251D6B980((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251D6B8B0(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v14)
  {
LABEL_11:
    sub_251D6B980((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_12;
  }
  uint64_t v20 = *(void *)&v8[*(int *)(v2 + 112)];
  unsigned __int8 v19 = 47;
  char v15 = sub_251B457DC(&v19);
  sub_251D6B980((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v15 == 2)
  {
LABEL_12:
    sub_251D6B8B0(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_13;
  }
  sub_251D6B8B0(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  if ((v15 & 1) == 0)
  {
LABEL_13:
    sub_251D6B980((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    return 0;
  }
  uint64_t v20 = *(void *)&v5[*(int *)(v2 + 112)];
  unsigned __int8 v19 = 70;
  char v16 = sub_251B457DC(&v19);
  sub_251D6B980((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v16 != 2) {
    return v16 & 1;
  }
  return 0;
}

unint64_t sub_251D643DC(uint64_t *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v77 = a4;
  char v78 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v75 = (uint64_t)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for StaticCharacteristic();
  uint64_t v73 = *(void *)(v74 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v74);
  uint64_t v72 = (uint64_t)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int v76 = (uint64_t (*)(char *, uint64_t))((char *)v71 - v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v79 = (void *)MEMORY[0x270FA5388](v11);
  uint64_t v13 = *((int *)v79 + 12);
  char v14 = (char *)v71 + v13 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = (uint64_t (*)())((char *)a2 + v13);
  uint64_t v16 = sub_251F34DA0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void **)(v17 + 16);
  uint64_t v81 = a2;
  BOOL v82 = v18;
  ((void (*)(char *, void *, uint64_t))v18)((char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v16);
  os_log_t v83 = v15;
  sub_251D6B8B0((uint64_t)v15, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v80 = v17;
  if (v19 && (unint64_t v20 = sub_2519FE584((uint64_t)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0)), (v21 & 1) != 0))
  {
    int v22 = *(char *)(*(void *)(a3 + 56) + v20);
    sub_251D6B980((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    uint64_t v24 = v23((char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
    if ((v22 & 0x80000000) == 0)
    {
      v71[1] = v71;
      MEMORY[0x270FA5388](v24);
      uint64_t v25 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v26 = (uint64_t)&v25[*((int *)v79 + 12)];
      ((void (*)(char *, void *, uint64_t))v82)(v25, v81, v16);
      sub_251D6B8B0((uint64_t)v83, v26, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      uint64_t v27 = v78;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v84[0] = *v27;
      *uint64_t v27 = 0x8000000000000000;
      sub_251A0FA5C(v22, (uint64_t)v25, isUniquelyReferenced_nonNull_native);
      *uint64_t v27 = v84[0];
      swift_bridgeObjectRelease();
      v23(v25, v16);
      unint64_t result = sub_251D6B980(v26, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      if (v22)
      {
        uint64_t v30 = *v77;
        if (*(void *)(*v77 + 16))
        {
          unint64_t result = sub_2519FE568(26);
          if (v31)
          {
            uint64_t v32 = v73;
            uint64_t v33 = *(void *)(v30 + 56) + *(void *)(v73 + 72) * result;
            os_log_t v83 = type metadata accessor for StaticCharacteristic;
            uint64_t v34 = v72;
            sub_251D6B8B0(v33, v72, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            sub_251D6BA64(v34, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            BOOL v82 = v71;
            uint64_t v36 = *(void *)(*(void *)(v35 - 8) + 64);
            MEMORY[0x270FA5388](v35 - 8);
            char v37 = (char *)v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
            v38(v37, 1, 1, v16);
            unsigned __int8 v92 = -82;
            long long v90 = xmmword_251F51750;
            char v91 = 5;
            uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            uint64_t v81 = v71;
            MEMORY[0x270FA5388](v39 - 8);
            id v41 = (char *)v71 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v42 = sub_251F34D20();
            uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
            memset(v88, 0, sizeof(v88));
            char v89 = -1;
            uint64_t v86 = 0;
            char v87 = 1;
            MEMORY[0x270FA5388](v43);
            v38(v37, 1, 1, v16);
            memset(v84, 0, sizeof(v84));
            long long v85 = xmmword_251F3E570;
            uint64_t v44 = v75;
            Swift::String v45 = v76;
            StaticCharacteristic.copyReplacing(id:characteristicKind:typedValue:lastValueUpdate:loadingState:properties:serviceId:metadata:)((uint64_t)v37, &v92, (uint64_t)&v90, (uint64_t)v41, (uint64_t)v88, &v86, (uint64_t)v37, v84, v75);
            sub_251A1B064((uint64_t)v37, &qword_26B21FF90);
            sub_251A1B064((uint64_t)v41, &qword_26B21EC20);
            sub_251A1B064((uint64_t)v37, &qword_26B21FF90);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v44, 0, 1, v74);
            sub_2519F88B4(v44, 26);
            return sub_251D6B980((uint64_t)v45, (uint64_t (*)(void))v83);
          }
        }
      }
      return result;
    }
    int v76 = v23;
  }
  else
  {
    sub_251D6B980((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    int v76 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v76((char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  }
  uint64_t v46 = v79;
  uint64_t v47 = sub_251C0A024((uint64_t)&unk_27025FEE0);
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v49 = sub_251EDF7BC(v48);
  uint64_t v50 = sub_251D67C48(v47, v49, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251D68250);
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)(v50 + 16);
  uint64_t v52 = swift_release();
  uint64_t v79 = v71;
  MEMORY[0x270FA5388](v52);
  unint64_t v53 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v54 = (char *)v71 - v53;
  uint64_t v55 = (char *)v71 + *((int *)v46 + 12) - v53;
  uint64_t v56 = v81;
  ((void (*)(char *, void *, uint64_t))v82)((char *)v71 - v53, v81, v16);
  uint64_t v57 = sub_251D6B8B0((uint64_t)v83, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  if (v51)
  {
    uint64_t v58 = sub_251A1B064((uint64_t)v71 - v53, &qword_269B9CF50);
    char v59 = 0;
    uint64_t v60 = (void (*)(char *, uint64_t))v76;
  }
  else
  {
    uint64_t v77 = v71;
    MEMORY[0x270FA5388](v57);
    unint64_t v61 = (char *)v71 - v53;
    id v62 = (char *)v71 + *((int *)v46 + 12) - v53;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v61, v54, v16);
    sub_251D6BA64((uint64_t)v55, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v63 = &v62[*(int *)(type metadata accessor for StaticLightProfile() + 24)];
    char v64 = *v63;
    int v65 = v63[1];
    if (v65 == 2) {
      char v59 = v64;
    }
    else {
      char v59 = v65;
    }
    sub_251D6B980((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v56 = v81;
    char v66 = v61;
    uint64_t v60 = (void (*)(char *, uint64_t))v76;
    uint64_t v58 = v76(v66, v16);
  }
  MEMORY[0x270FA5388](v58);
  uint64_t v67 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = (uint64_t)&v67[*((int *)v46 + 12)];
  ((void (*)(char *, void *, uint64_t))v82)(v67, v56, v16);
  sub_251D6B8B0((uint64_t)v83, v68, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  uint64_t v69 = v78;
  char v70 = swift_isUniquelyReferenced_nonNull_native();
  v84[0] = *v69;
  *uint64_t v69 = 0x8000000000000000;
  sub_251A0FA5C(v59 & 1, (uint64_t)v67, v70);
  *uint64_t v69 = v84[0];
  swift_bridgeObjectRelease();
  v60(v67, v16);
  return sub_251D6B980(v68, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

uint64_t ActionService.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for ActionService();
  uint64_t v25 = *((void *)v4 - 1);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - v8;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F35610();
  if (*(unsigned char *)(v1 + v4[9] + 8) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CB0();
  }
  if (*(void *)(v1 + v4[10] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  char v27 = *(unsigned char *)(v1 + v4[11]);
  ServiceKind.rawValue.getter();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  char v26 = *(unsigned char *)(v1 + v4[12]);
  ServiceKind.rawValue.getter();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + v4[13]) == 5)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void *)(v1 + v4[14]);
  sub_251F36CB0();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v24 = v1;
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v13 = *(void *)(v25 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_251D6B8B0(v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionService);
      ActionService.hash(into:)(a1);
      sub_251D6B980((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionService);
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v2 = v24;
  }
  uint64_t v14 = *(void *)(v2 + v4[15]);
  swift_bridgeObjectRetain();
  sub_251A42984(a1, v14);
  swift_bridgeObjectRelease();
  char v15 = (uint64_t *)(v2 + v4[16]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251A44858(a1, v16);
  sub_251A4427C(a1, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v2 + v4[17]);
  uint64_t result = sub_251F36CB0();
  uint64_t v20 = *(void *)(v18 + 16);
  if (v20)
  {
    uint64_t v21 = v18 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v22 = *(void *)(v25 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_251D6B8B0(v21, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ActionService);
      ActionService.hash(into:)(a1);
      sub_251D6B980((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ActionService);
      v21 += v22;
      --v20;
    }
    while (v20);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ActionService.hashValue.getter()
{
  sub_251F36CA0();
  ActionService.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251D65254()
{
  sub_251F36CA0();
  ActionService.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251D65298()
{
  sub_251F36CA0();
  ActionService.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t ActionService.canBeToggled.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionService() + 44));
  if (v1 - 3) < 0x2E && ((0x32C892266001uLL >> (v1 - 3)))
  {
    char v3 = 1;
  }
  else
  {
    if (qword_269B9C310 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v2 = off_269B9F948;
    swift_bridgeObjectRetain();
    char v3 = sub_251DB3C0C(v1, (uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

uint64_t ActionService.active.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 3;
  return sub_251B457DC(&v2);
}

unint64_t ActionService.targetPosition.getter()
{
  return sub_251D676A4(158);
}

uint64_t ActionService.powerState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 105;
  return sub_251B457DC(&v2);
}

Swift::Int ActionService.targetDoorState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -107;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.inUse.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 65;
  return sub_251B457DC(&v2);
}

Swift::Int ActionService.targetLockMechanismState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -100;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.mute.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 84;
  return sub_251B457DC(&v2);
}

Swift::Int ActionService.targetSecuritySystemState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -96;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.targetHeatingCoolingMode.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -104;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.staticCharacteristic(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for ActionService() + 60));
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = *a1;
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_2519FE568(v6);
    if (v8)
    {
      unint64_t v9 = v7;
      uint64_t v10 = *(void *)(v5 + 56);
      uint64_t v11 = type metadata accessor for StaticCharacteristic();
      uint64_t v12 = *(void *)(v11 - 8);
      sub_251D6B8B0(v10 + *(void *)(v12 + 72) * v9, a2, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      uint64_t v16 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = type metadata accessor for StaticCharacteristic();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a2, 1, 1, v13);
  }
}

uint64_t ActionService.staticCharacteristic(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  swift_bridgeObjectRetain();
  sub_251A95CF0((uint64_t (*)(char *))sub_251D6ACD0, v3, a1);
  return swift_bridgeObjectRelease();
}

Swift::Bool_optional __swiftcall ActionService.BOOL(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = *(unsigned char *)a1;
  uint64_t v5 = *(void *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v4 = v2;
  return (Swift::Bool_optional)sub_251B457DC(&v4);
}

Swift::Int_optional __swiftcall ActionService.int(for:)(HomeDataModel::CharacteristicKind a1)
{
  char v2 = *(unsigned char *)a1;
  uint64_t v5 = *(void *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  char v4 = v2;
  Swift::Int_optional v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
  v3.is_nil &= 1u;
  return v3;
}

Swift::Double_optional __swiftcall ActionService.double(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = *(unsigned char *)a1;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v5 = v2;
  char v3 = sub_251B46610(&v5);
  result.value = v4;
  result.is_nil = v3;
  return result;
}

Swift::String_optional __swiftcall ActionService.string(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = (unsigned __int8 *)a1;
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_2519FE568(*v2), (v9 & 1) != 0))
  {
    sub_251D6B8B0(*(void *)(v7 + 56) + *(void *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v10 = &v6[*(int *)(v3 + 24)];
    if (v10[16] == 8)
    {
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = (void *)*((void *)v10 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
    }
    sub_251D6B980((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

uint64_t ActionService.data(for:)(unsigned __int8 *a1)
{
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(void *)(v7 + 16)) {
    return 0;
  }
  unint64_t v8 = sub_2519FE568(*a1);
  if ((v9 & 1) == 0) {
    return 0;
  }
  sub_251D6B8B0(*(void *)(v7 + 56) + *(void *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v10 = &v6[*(int *)(v3 + 24)];
  if (v10[16] == 10)
  {
    uint64_t v11 = *(void *)v10;
    sub_251A1A894(*(void *)v10, *((void *)v10 + 1));
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_251D6B980((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return v11;
}

uint64_t ActionService.airParticulateDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 6;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.airParticulateSize.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 7;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.airQuality.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 8;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

unint64_t ActionService.batteryLevel.getter()
{
  return sub_251D676A4(11);
}

unint64_t ActionService.brightness.getter()
{
  return sub_251D676A4(12);
}

uint64_t ActionService.cameraNightVision.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 14;
  return sub_251B457DC(&v2);
}

Swift::Int ActionService.carbonDioxideDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 18;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.carbonDioxideLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 19;
  return sub_251B46610(&v2);
}

uint64_t ActionService.carbonDioxidePeakLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 20;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.carbonMonoxideDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 21;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.carbonMonoxideLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 22;
  return sub_251B46610(&v2);
}

uint64_t ActionService.carbonMonoxidePeakLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 23;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.chargingState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 24;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

unint64_t ActionService.colorTemperature.getter()
{
  return sub_251D676A4(26);
}

uint64_t ActionService.configuredName.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(27);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_251D6B8B0(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  unint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251D6B980((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

Swift::Int ActionService.contactState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 28;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.coolingThreshold.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 29;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.currentAirPurifierState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 30;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.currentDoorState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 31;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.currentFanState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 32;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.currentHeaterCoolerState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 33;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.currentHeatingCooling.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 34;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

unint64_t ActionService.currentHorizontalTilt.getter()
{
  return sub_251D676A4(35);
}

Swift::Int ActionService.currentHumidifierDehumidifierState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 36;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.currentLightLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 37;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.currentLockMechanismState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 38;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

unint64_t ActionService.currentPosition.getter()
{
  return sub_251D676A4(40);
}

uint64_t ActionService.currentRelativeHumidity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 41;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.currentSecuritySystemState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 42;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.currentTemperature.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 44;
  return sub_251B46610(&v2);
}

unint64_t ActionService.currentTilt.getter()
{
  return sub_251D676A4(45);
}

unint64_t ActionService.currentVerticalTilt.getter()
{
  return sub_251D676A4(46);
}

Swift::Int ActionService.currentVisibilityState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 47;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.dehumidifierThreshold.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 48;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.filterChangeIndication.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 50;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.filterLifeLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 51;
  return sub_251B46610(&v2);
}

uint64_t ActionService.heatingThreshold.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 55;
  return sub_251B46610(&v2);
}

uint64_t ActionService.hue.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 57;
  return sub_251B46610(&v2);
}

uint64_t ActionService.humidifierThreshold.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 58;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.isConfigured.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 70;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.leakDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 74;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.manufacturer.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(80);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_251D6B8B0(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  unint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251D6B980((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ActionService.model.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(82);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_251D6B8B0(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  unint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251D6B980((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ActionService.motionDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 83;
  return sub_251B457DC(&v2);
}

uint64_t ActionService.nightVision.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 86;
  return sub_251B457DC(&v2);
}

uint64_t ActionService.nitrogenDioxideDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 87;
  return sub_251B46610(&v2);
}

uint64_t ActionService.obstructionDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 88;
  return sub_251B457DC(&v2);
}

Swift::Int ActionService.occupancyDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 89;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.outletInUse.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 91;
  return sub_251B457DC(&v2);
}

uint64_t ActionService.ozoneDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 94;
  return sub_251B46610(&v2);
}

uint64_t ActionService.pM10Density.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 95;
  return sub_251B46610(&v2);
}

uint64_t ActionService.pM2_5Density.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 96;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.positionState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 102;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.programMode.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 106;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

unint64_t ActionService.remainingDuration.getter()
{
  return sub_251D676A4(112);
}

Swift::Int ActionService.rotationDirection.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 114;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.rotationSpeed.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 115;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.slatType.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 125;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.saturation.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = 116;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.smokeDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = 127;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.statusActive.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = -127;
  return sub_251B457DC(&v2);
}

Swift::Int ActionService.statusFault.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -126;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.statusJammed.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -125;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.statusLowBattery.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -124;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.statusTampered.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -123;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.sulphurDioxideDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = -121;
  return sub_251B46610(&v2);
}

Swift::Int ActionService.swingMode.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -110;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.targetAirPurifierState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -109;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.targetFanState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -106;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.targetHeaterCoolerState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -105;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

unint64_t ActionService.targetHorizontalTilt.getter()
{
  return sub_251D676A4(153);
}

Swift::Int _s13HomeDataModel13ActionServiceV33humidifierDehumidifierTargetStateSo021HMCharacteristicValueh10HumidifiergI0VSgvg_0()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -102;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.targetRelativeHumidity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = -97;
  return sub_251B46610(&v2);
}

uint64_t ActionService.targetTemperature.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = -94;
  return sub_251B46610(&v2);
}

unint64_t ActionService.targetTilt.getter()
{
  return sub_251D676A4(163);
}

unint64_t ActionService.targetVerticalTilt.getter()
{
  return sub_251D676A4(164);
}

Swift::Int ActionService.temperatureUnits.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -90;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int ActionService.valveType.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v2 = -89;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t ActionService.version.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(168);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_251D6B8B0(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  unint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251D6B980((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ActionService.volatileOrganicCompoundDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = -87;
  return sub_251B46610(&v2);
}

unint64_t ActionService.volume.getter()
{
  return sub_251D676A4(170);
}

unint64_t sub_251D676A4(char a1)
{
  uint64_t v5 = *(void *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  char v4 = a1;
  return (unint64_t)StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
}

uint64_t ActionService.waterLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v2 = -83;
  return sub_251B46610(&v2);
}

uint64_t type metadata accessor for ActionService()
{
  uint64_t result = qword_269BA3010;
  if (!qword_269BA3010) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251D67790(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for StaticCharacteristic();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v15 = (char *)v41 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0E0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (unsigned __int8 *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = ~v19;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v22 = -v19;
  v41[3] = a1;
  v41[4] = a1 + 64;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  else {
    uint64_t v23 = -1;
  }
  v41[5] = v20;
  v41[6] = 0;
  v41[7] = v23 & v21;
  v41[8] = a2;
  v41[9] = a3;
  v41[1] = a1;
  swift_bridgeObjectRetain();
  v41[0] = a3;
  swift_retain();
  sub_251AF68E0((uint64_t)v18);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
  for (int i = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v18, 1, v24);
        ;
        int i = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v18, 1, v24))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_251A1E630();
      return swift_release();
    }
    uint64_t v26 = *v18;
    sub_251D6BA64((uint64_t)&v18[*(int *)(v24 + 48)], (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v27 = *a5;
    unint64_t v29 = sub_2519FE568(v26);
    uint64_t v30 = *(void *)(v27 + 16);
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (*(void *)(v27 + 24) >= v32)
    {
      if (a4)
      {
        if (v28) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_251A154F8();
        if (v33) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_251A07E4C(v32, a4 & 1);
      unint64_t v34 = sub_2519FE568(v26);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_22;
      }
      unint64_t v29 = v34;
      if (v33)
      {
LABEL_5:
        sub_251D6B8B0((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        sub_251D6B980((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        sub_251D6B9E0((uint64_t)v13, *(void *)(*a5 + 56) + *(void *)(v42 + 72) * v29, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        goto LABEL_6;
      }
    }
    uint64_t v36 = (void *)*a5;
    *(void *)(*a5 + 8 * (v29 >> 6) + 64) |= 1 << v29;
    *(unsigned char *)(v36[6] + v29) = v26;
    sub_251D6BA64((uint64_t)v15, v36[7] + *(void *)(v42 + 72) * v29, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v37 = v36[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_21;
    }
    v36[2] = v39;
LABEL_6:
    sub_251AF68E0((uint64_t)v18);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251D67B64@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = (uint64_t)&a1[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0) + 48)];
  uint64_t v5 = (uint64_t)&a2[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8) + 48)];
  *a2 = *a1;
  return sub_251D6B8B0(v4, v5, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
}

uint64_t sub_251D67BDC(uint64_t a1, uint64_t a2)
{
  return sub_251D67C48(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251D67DE4);
}

uint64_t sub_251D67C48(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a2 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x2533AC760](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_251D67DE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = (unint64_t *)result;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16))
  {
    int64_t v26 = 0;
    uint64_t v44 = a3 + 56;
    uint64_t v27 = 1 << *(unsigned char *)(a3 + 32);
    if (v27 < 64) {
      uint64_t v28 = ~(-1 << v27);
    }
    else {
      uint64_t v28 = -1;
    }
    unint64_t v29 = v28 & *(void *)(a3 + 56);
    int64_t v46 = (unint64_t)(v27 + 63) >> 6;
    uint64_t v30 = a4 + 56;
    uint64_t v47 = 0;
    while (1)
    {
      if (v29)
      {
        unint64_t v31 = __clz(__rbit64(v29));
        v29 &= v29 - 1;
        unint64_t v32 = v31 | (v26 << 6);
      }
      else
      {
        int64_t v33 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v33 >= v46) {
          goto LABEL_58;
        }
        unint64_t v34 = *(void *)(v44 + 8 * v33);
        ++v26;
        if (!v34)
        {
          int64_t v26 = v33 + 1;
          if (v33 + 1 >= v46) {
            goto LABEL_58;
          }
          unint64_t v34 = *(void *)(v44 + 8 * v26);
          if (!v34)
          {
            int64_t v26 = v33 + 2;
            if (v33 + 2 >= v46) {
              goto LABEL_58;
            }
            unint64_t v34 = *(void *)(v44 + 8 * v26);
            if (!v34)
            {
              int64_t v35 = v33 + 3;
              if (v35 >= v46) {
                goto LABEL_58;
              }
              unint64_t v34 = *(void *)(v44 + 8 * v35);
              if (!v34)
              {
                while (1)
                {
                  int64_t v26 = v35 + 1;
                  if (__OFADD__(v35, 1)) {
                    goto LABEL_64;
                  }
                  if (v26 >= v46) {
                    break;
                  }
                  unint64_t v34 = *(void *)(v44 + 8 * v26);
                  ++v35;
                  if (v34) {
                    goto LABEL_50;
                  }
                }
LABEL_58:
                swift_retain();
                return sub_251F1B24C(v43, a2, v47, a3);
              }
              int64_t v26 = v35;
            }
          }
        }
LABEL_50:
        unint64_t v29 = (v34 - 1) & v34;
        unint64_t v32 = __clz(__rbit64(v34)) + (v26 << 6);
      }
      uint64_t v36 = *(char *)(*(void *)(a3 + 48) + v32);
      sub_251F36CA0();
      int v37 = dword_251F5191C[v36];
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v38 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v39 = result & ~v38;
      if ((*(void *)(v30 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39))
      {
        uint64_t v40 = *(void *)(a4 + 48);
        if (dword_251F5191C[*(char *)(v40 + v39)] == v37)
        {
LABEL_56:
          *(unint64_t *)((char *)v43 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
          if (__OFADD__(v47, 1)) {
            goto LABEL_62;
          }
          ++v47;
        }
        else
        {
          uint64_t v41 = ~v38;
          while (1)
          {
            unint64_t v39 = (v39 + 1) & v41;
            if (((*(void *)(v30 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
              break;
            }
            if (dword_251F5191C[*(char *)(v40 + v39)] == v37) {
              goto LABEL_56;
            }
          }
        }
      }
    }
  }
  int64_t v6 = 0;
  uint64_t v7 = a4 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(a4 + 56);
  int64_t v45 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = a3 + 56;
  uint64_t v47 = 0;
  while (v10)
  {
    unint64_t v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v13 = v12 | (v6 << 6);
LABEL_22:
    uint64_t v17 = *(char *)(*(void *)(a4 + 48) + v13);
    sub_251F36CA0();
    int v18 = dword_251F5191C[v17];
    sub_251F36CE0();
    uint64_t result = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    uint64_t v22 = 1 << v20;
    if (((1 << v20) & *(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      uint64_t v23 = *(void *)(a3 + 48);
      if (dword_251F5191C[*(char *)(v23 + v20)] == v18)
      {
LABEL_29:
        v43[v21] |= v22;
        if (__OFADD__(v47, 1)) {
          goto LABEL_61;
        }
        ++v47;
      }
      else
      {
        for (unint64_t i = v20 + 1; ; unint64_t i = v25 + 1)
        {
          unint64_t v25 = i & ~v19;
          if (((*(void *)(v11 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
            break;
          }
          if (dword_251F5191C[*(char *)(v23 + v25)] == v18)
          {
            unint64_t v21 = v25 >> 6;
            uint64_t v22 = 1 << v25;
            goto LABEL_29;
          }
        }
      }
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_60;
  }
  if (v14 >= v45) {
    goto LABEL_58;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v6 = v14 + 1;
  if (v14 + 1 >= v45) {
    goto LABEL_58;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v6);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v6 = v14 + 2;
  if (v14 + 2 >= v45) {
    goto LABEL_58;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v6);
  if (v15)
  {
LABEL_21:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v45) {
    goto LABEL_58;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v45) {
      goto LABEL_58;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_251D68250(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v51 = (unint64_t *)result;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16))
  {
    int64_t v25 = 0;
    uint64_t v46 = a3 + 56;
    uint64_t v26 = 1 << *(unsigned char *)(a3 + 32);
    if (v26 < 64) {
      uint64_t v27 = ~(-1 << v26);
    }
    else {
      uint64_t v27 = -1;
    }
    unint64_t v28 = v27 & *(void *)(a3 + 56);
    int64_t v48 = (unint64_t)(v26 + 63) >> 6;
    uint64_t v50 = 0;
    uint64_t v29 = a4 + 56;
    while (1)
    {
LABEL_37:
      if (v28)
      {
        unint64_t v30 = __clz(__rbit64(v28));
        v28 &= v28 - 1;
        unint64_t v31 = v30 | (v25 << 6);
      }
      else
      {
        int64_t v32 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          goto LABEL_71;
        }
        if (v32 >= v48) {
          goto LABEL_66;
        }
        unint64_t v33 = *(void *)(v46 + 8 * v32);
        ++v25;
        if (!v33)
        {
          int64_t v25 = v32 + 1;
          if (v32 + 1 >= v48) {
            goto LABEL_66;
          }
          unint64_t v33 = *(void *)(v46 + 8 * v25);
          if (!v33)
          {
            int64_t v25 = v32 + 2;
            if (v32 + 2 >= v48) {
              goto LABEL_66;
            }
            unint64_t v33 = *(void *)(v46 + 8 * v25);
            if (!v33)
            {
              int64_t v34 = v32 + 3;
              if (v34 >= v48) {
                goto LABEL_66;
              }
              unint64_t v33 = *(void *)(v46 + 8 * v34);
              if (!v33)
              {
                while (1)
                {
                  int64_t v25 = v34 + 1;
                  if (__OFADD__(v34, 1)) {
                    goto LABEL_73;
                  }
                  if (v25 >= v48) {
                    break;
                  }
                  unint64_t v33 = *(void *)(v46 + 8 * v25);
                  ++v34;
                  if (v33) {
                    goto LABEL_52;
                  }
                }
LABEL_66:
                uint64_t v44 = a2;
                uint64_t v6 = v50;
LABEL_67:
                swift_retain();
                return sub_251F1D74C(v51, v44, v6, v5);
              }
              int64_t v25 = v34;
            }
          }
        }
LABEL_52:
        unint64_t v28 = (v33 - 1) & v33;
        unint64_t v31 = __clz(__rbit64(v33)) + (v25 << 6);
      }
      sub_251F36CA0();
      CharacteristicKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_251F36D00();
      uint64_t v35 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v36 = result & ~v35;
      if (((*(void *)(v29 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0) {
        continue;
      }
      int64_t v53 = v25;
      uint64_t v37 = ~v35;
      while (1)
      {
        unint64_t v38 = CharacteristicKind.rawValue.getter();
        uint64_t v40 = v39;
        if (v38 == CharacteristicKind.rawValue.getter() && v40 == v41) {
          break;
        }
        char v43 = sub_251F36B10();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v43) {
          goto LABEL_63;
        }
        unint64_t v36 = (v36 + 1) & v37;
        uint64_t v4 = a4;
        if (((*(void *)(v29 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        {
          int64_t v25 = v53;
          uint64_t v5 = a3;
          goto LABEL_37;
        }
      }
      uint64_t result = swift_bridgeObjectRelease_n();
LABEL_63:
      int64_t v25 = v53;
      *(unint64_t *)((char *)v51 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (__OFADD__(v50, 1))
      {
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      ++v50;
    }
  }
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v47 = a4 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  uint64_t v10 = v9 & *(void *)(a4 + 56);
  int64_t v49 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = a3 + 56;
LABEL_8:
  while (v10)
  {
    v10 &= v10 - 1;
LABEL_24:
    sub_251F36CA0();
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_251F36D00();
    uint64_t v16 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v17 = result & ~v16;
    if ((*(void *)(v11 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
    {
      int64_t v52 = v7;
      uint64_t v18 = ~v16;
      while (1)
      {
        unint64_t v19 = CharacteristicKind.rawValue.getter();
        uint64_t v21 = v20;
        if (v19 == CharacteristicKind.rawValue.getter() && v21 == v22) {
          break;
        }
        char v24 = sub_251F36B10();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_7;
        }
        unint64_t v17 = (v17 + 1) & v18;
        uint64_t v5 = a3;
        if (((*(void *)(v11 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
        {
          int64_t v7 = v52;
          goto LABEL_8;
        }
      }
      uint64_t result = swift_bridgeObjectRelease_n();
LABEL_7:
      int64_t v7 = v52;
      *(unint64_t *)((char *)v51 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      BOOL v12 = __OFADD__(v6++, 1);
      uint64_t v5 = a3;
      if (!v12) {
        continue;
      }
      __break(1u);
      goto LABEL_69;
    }
  }
  int64_t v13 = v7 + 1;
  if (__OFADD__(v7, 1)) {
    goto LABEL_70;
  }
  if (v13 >= v49)
  {
LABEL_65:
    uint64_t v44 = a2;
    goto LABEL_67;
  }
  uint64_t v14 = *(void *)(v47 + 8 * v13);
  ++v7;
  if (v14) {
    goto LABEL_23;
  }
  int64_t v7 = v13 + 1;
  if (v13 + 1 >= v49) {
    goto LABEL_65;
  }
  uint64_t v14 = *(void *)(v47 + 8 * v7);
  if (v14) {
    goto LABEL_23;
  }
  int64_t v7 = v13 + 2;
  if (v13 + 2 >= v49) {
    goto LABEL_65;
  }
  uint64_t v14 = *(void *)(v47 + 8 * v7);
  if (v14)
  {
LABEL_23:
    uint64_t v10 = (v14 - 1) & v14;
    goto LABEL_24;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v49) {
    goto LABEL_65;
  }
  uint64_t v14 = *(void *)(v47 + 8 * v15);
  if (v14)
  {
    int64_t v7 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v49) {
      goto LABEL_65;
    }
    uint64_t v14 = *(void *)(v47 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel13ActionServiceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for ActionService();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_251F36B10() & 1) == 0
    || *(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6])
    || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7])
    || (sub_251F34D70() & 1) == 0)
  {
    return 0;
  }
  uint64_t v10 = v4[9];
  uint64_t v11 = (void *)(a1 + v10);
  char v12 = *(unsigned char *)(a1 + v10 + 8);
  int64_t v13 = (void *)(a2 + v10);
  int v14 = *(unsigned __int8 *)(a2 + v10 + 8);
  if (v12)
  {
    if (!v14) {
      return 0;
    }
  }
  else
  {
    if (*v11 != *v13) {
      LOBYTE(v14) = 1;
    }
    if (v14) {
      return 0;
    }
  }
  uint64_t v15 = v4[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = *(void *)(a1 + v15 + 8);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  if (v17)
  {
    if (!v19 || (*v16 != *v18 || v17 != v19) && (sub_251F36B10() & 1) == 0) {
      return 0;
    }
  }
  else if (v19)
  {
    return 0;
  }
  unint64_t v20 = ServiceKind.rawValue.getter();
  uint64_t v22 = v21;
  if (v20 == ServiceKind.rawValue.getter() && v22 == v23)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v24 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      return 0;
    }
  }
  unint64_t v25 = ServiceKind.rawValue.getter();
  uint64_t v27 = v26;
  if (v25 == ServiceKind.rawValue.getter() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v30 = v4[13];
  int v31 = *(unsigned __int8 *)(a1 + v30);
  int v32 = *(unsigned __int8 *)(a2 + v30);
  if (v31 == 5)
  {
    if (v32 != 5) {
      return 0;
    }
  }
  else if (v32 == 5 || (sub_251DB36AC(v31, v32) & 1) == 0)
  {
    return 0;
  }
  if ((sub_251AB713C(*(void *)(a1 + v4[14]), *(void *)(a2 + v4[14])) & 1) == 0) {
    return 0;
  }
  uint64_t v33 = v4[15];
  uint64_t v34 = *(void *)(a1 + v33);
  uint64_t v35 = *(void *)(a2 + v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v36 = sub_251AF8598(v34, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) == 0) {
    return 0;
  }
  uint64_t v37 = v4[16];
  uint64_t v38 = *(void *)(a1 + v37);
  uint64_t v39 = *(void *)(a1 + v37 + 8);
  uint64_t v40 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v40;
  uint64_t v42 = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_251AFD758(v38, v41) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  char v43 = sub_251AFDDE4(v39, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v43 & 1) == 0) {
    return 0;
  }
  uint64_t v44 = v4[17];
  uint64_t v45 = *(void *)(a1 + v44);
  uint64_t v46 = *(void *)(a2 + v44);
  return sub_251AB713C(v45, v46);
}

uint64_t sub_251D68B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v75 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v74 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v71 - v10;
  uint64_t v12 = type metadata accessor for StaticCharacteristic();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v73 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v72 = (uint64_t)&v71 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v76 = (uint64_t)&v71 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  char v24 = (char *)&v71 - v23;
  unint64_t v25 = sub_2519FB260(MEMORY[0x263F8EE78]);
  uint64_t v80 = a1;
  uint64_t v26 = sub_251AA8EF0(v25, (void (*)(uint64_t *, _OWORD *))sub_251D6BA48, (uint64_t)v79, a2);
  uint64_t v77 = (uint64_t *)v4;
  uint64_t v78 = v26;
  LOBYTE(v81[0]) = *(unsigned char *)(a1 + *(int *)(v4 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v27 == 0x8000000251F650A0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      return v78;
    }
  }
  uint64_t v29 = v78;
  if (*(void *)(v78 + 16))
  {
    unint64_t v30 = sub_2519FE568(4);
    if (v31)
    {
      sub_251D6B8B0(*(void *)(v29 + 56) + *(void *)(v13 + 72) * v30, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v12);
      sub_251A1B064((uint64_t)v24, &qword_26B21F108);
      return v29;
    }
  }
  Class v71 = v11;
  int v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v32(v24, 1, 1, v12);
  sub_251A1B064((uint64_t)v24, &qword_26B21F108);
  uint64_t v33 = v77;
  uint64_t v34 = *(void *)(a1 + *((int *)v77 + 28));
  if (!*(void *)(v34 + 16))
  {
    v32(v22, 1, 1, v12);
LABEL_15:
    sub_251A1B064((uint64_t)v22, &qword_26B21F108);
    return v78;
  }
  swift_bridgeObjectRetain();
  unint64_t v35 = sub_2519FE568(4);
  if (v36)
  {
    sub_251D6B8B0(*(void *)(v34 + 56) + *(void *)(v13 + 72) * v35, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v37 = 1;
  }
  v32(v22, v37, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v22, 1, v12) == 1) {
    goto LABEL_15;
  }
  uint64_t v38 = v76;
  sub_251D6BA64((uint64_t)v22, v76, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v39 = *(void *)(a1 + *((int *)v33 + 27));
  uint64_t v40 = *(void *)(v39 + 16);
  if (v40)
  {
    uint64_t v41 = v75;
    uint64_t v42 = v39 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
    uint64_t v43 = *(void *)(v75 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v44 = (uint64_t)v71;
    while (1)
    {
      sub_251D6B8B0(v42, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (sub_251D640C0((uint64_t)v6)) {
        break;
      }
      sub_251D6B980((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      v42 += v43;
      if (!--v40)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = 1;
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
    sub_251D6BA64((uint64_t)v6, v44, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v45 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = 1;
    uint64_t v44 = (uint64_t)v71;
    uint64_t v41 = v75;
  }
LABEL_23:
  uint64_t v46 = v77;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(v41 + 56))(v44, v45, 1, v77);
  uint64_t v47 = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = v74;
  sub_251A1B128(v44, v74, qword_26B21EE20);
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v41 + 48))(v48, 1, v46);
  uint64_t v29 = v78;
  if (v49 == 1)
  {
    sub_251A1B064(v48, qword_26B21EE20);
LABEL_26:
    sub_251A1B064(v44, qword_26B21EE20);
    uint64_t v53 = v38;
LABEL_30:
    sub_251D6B980(v53, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    return v29;
  }
  uint64_t v50 = v48 + *((int *)v47 + 12);
  uint64_t v51 = *(void *)v50;
  int v52 = *(unsigned __int8 *)(v50 + 8);
  sub_251D6B980(v48, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v52 == 1) {
    goto LABEL_26;
  }
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v55 = *(void *)(*(void *)(v54 - 8) + 64);
  MEMORY[0x270FA5388](v54 - 8);
  uint64_t v56 = (char *)&v71 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_251F34DA0();
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
  v58(v56, 1, 1, v57);
  v89[0] = -82;
  if (v51 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    uint64_t v77 = (uint64_t *)&v71;
    if (v51 <= 0x7FFFFFFF)
    {
      v87[0] = v51;
      v87[1] = 0;
      char v88 = 5;
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      MEMORY[0x270FA5388](v59 - 8);
      unint64_t v61 = (char *)&v71 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v62 = sub_251F34D20();
      uint64_t v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 1, 1, v62);
      memset(v85, 0, sizeof(v85));
      char v86 = -1;
      uint64_t v83 = 0;
      char v84 = 1;
      MEMORY[0x270FA5388](v63);
      char v64 = (char *)&v71 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
      v58(v64, 1, 1, v57);
      memset(v81, 0, sizeof(v81));
      long long v82 = xmmword_251F3E570;
      uint64_t v65 = v72;
      uint64_t v66 = v76;
      StaticCharacteristic.copyReplacing(id:characteristicKind:typedValue:lastValueUpdate:loadingState:properties:serviceId:metadata:)((uint64_t)v56, v89, (uint64_t)v87, (uint64_t)v61, (uint64_t)v85, &v83, (uint64_t)v64, v81, v72);
      sub_251A1B064((uint64_t)v64, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v61, &qword_26B21EC20);
      sub_251A1B064((uint64_t)v56, &qword_26B21FF90);
      uint64_t v67 = v73;
      sub_251D6BA64(v65, v73, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      uint64_t v68 = v78;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v81[0] = v68;
      sub_251A0F2D8(v67, 4, isUniquelyReferenced_nonNull_native);
      uint64_t v29 = v81[0];
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v71, qword_26B21EE20);
      uint64_t v53 = v66;
      goto LABEL_30;
    }
  }
  __break(1u);
  sub_251D6B980((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_251D69504(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v27 = a3;
  char v28 = a4;
  uint64_t v29 = a1;
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v25 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
  v24[1] = v24;
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10);
  int64_t v26 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = *(void *)(a2 + 48);
    uint64_t v20 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v20 - 8) + 16))((char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + *(void *)(*(void *)(v20 - 8) + 72) * i, v20);
    uint64_t v21 = *(void *)(a2 + 56);
    uint64_t v22 = type metadata accessor for StaticLightProfile();
    uint64_t v23 = sub_251D6B8B0(v21 + *(void *)(*(void *)(v22 - 8) + 72) * i, (uint64_t)v24 + *(int *)(v10 + 48) - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    MEMORY[0x270FA5388](v23);
    sub_251D6B918((uint64_t)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_251D643DC(&v29, (void *)((char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0)), v27, v28);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9CF50);
      return swift_release();
    }
    uint64_t result = sub_251A1B064((uint64_t)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9CF50);
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v26) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v26)
  {
LABEL_26:
    swift_release();
    return v29;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251D69828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCharacteristic();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v64 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v63 = (uint64_t)&v61 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v65 = (uint64_t)&v61 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v61 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v61 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v61 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v61 - v24;
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v66 = sub_251D62E38(v26, a2);
  if (*(void *)(a2 + 16) && (unint64_t v27 = sub_2519FE568(26), (v28 & 1) != 0))
  {
    sub_251D6B8B0(*(void *)(a2 + 56) + v5[9] * v27, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v29 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
    v29(v25, 0, 1, v4);
  }
  else
  {
    uint64_t v29 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
    v29(v25, 1, 1, v4);
  }
  if (!*(void *)(a1 + 16) || (unint64_t v30 = sub_2519FE568(57), (v31 & 1) == 0))
  {
    v29(v23, 1, 1, v4);
    uint64_t v20 = v23;
LABEL_17:
    sub_251A1B064((uint64_t)v20, &qword_26B21F108);
    sub_251A1B128((uint64_t)v25, (uint64_t)v17, &qword_26B21F108);
    goto LABEL_18;
  }
  unint64_t v61 = v12;
  uint64_t v32 = v5[9];
  sub_251D6B8B0(*(void *)(a1 + 56) + v32 * v30, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  v29(v23, 0, 1, v4);
  sub_251A1B064((uint64_t)v23, &qword_26B21F108);
  if (!*(void *)(a1 + 16) || (v62 = (char **)(v5 + 7), unint64_t v33 = sub_2519FE568(116), (v34 & 1) == 0))
  {
    v29(v20, 1, 1, v4);
    goto LABEL_17;
  }
  sub_251D6B8B0(*(void *)(a1 + 56) + v33 * v32, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  v29(v20, 0, 1, v4);
  sub_251A1B064((uint64_t)v20, &qword_26B21F108);
  sub_251A1B128((uint64_t)v25, (uint64_t)v17, &qword_26B21F108);
  unint64_t v35 = (unsigned int (*)(char *, uint64_t, uint64_t))v5[6];
  if (v35(v17, 1, v4) == 1)
  {
LABEL_18:
    sub_251A1B064((uint64_t)v17, &qword_26B21F108);
    uint64_t v37 = v66;
    goto LABEL_19;
  }
  sub_251A1B064((uint64_t)v17, &qword_26B21F108);
  uint64_t v36 = v65;
  sub_251A1B128((uint64_t)v25, v65, &qword_26B21F108);
  if (v35((char *)v36, 1, v4) == 1)
  {
    sub_251A1B064(v36, &qword_26B21F108);
    uint64_t v37 = v66;
    swift_bridgeObjectRetain();
    unint64_t v38 = sub_2519FE568(26);
    char v40 = v39;
    swift_bridgeObjectRelease();
    if (v40)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v67[0] = v37;
      uint64_t v42 = (uint64_t)v61;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A154F8();
        uint64_t v37 = v67[0];
      }
      sub_251D6BA64(*(void *)(v37 + 56) + v38 * v32, v42, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      sub_251E3C02C(v38, v37);
      swift_bridgeObjectRelease();
      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v43 = 1;
      uint64_t v42 = (uint64_t)v61;
    }
    v29((char *)v42, v43, 1, v4);
    sub_251A1B064(v42, &qword_26B21F108);
  }
  else
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v62 = &v61;
    uint64_t v46 = *(void *)(*(void *)(v45 - 8) + 64);
    MEMORY[0x270FA5388](v45 - 8);
    uint64_t v47 = v36;
    uint64_t v48 = (char *)&v61 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v49 = sub_251F34DA0();
    uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
    v50(v48, 1, 1, v49);
    v75[0] = -82;
    v73[0] = 0;
    v73[1] = 0;
    char v74 = 5;
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    unint64_t v61 = (char *)&v61;
    MEMORY[0x270FA5388](v51 - 8);
    uint64_t v53 = (char *)&v61 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v54 = sub_251F34D20();
    uint64_t v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 1, 1, v54);
    memset(v71, 0, sizeof(v71));
    char v72 = -1;
    uint64_t v69 = 0;
    char v70 = 1;
    MEMORY[0x270FA5388](v55);
    v50(v48, 1, 1, v49);
    memset(v67, 0, sizeof(v67));
    long long v68 = xmmword_251F3E570;
    uint64_t v56 = v63;
    StaticCharacteristic.copyReplacing(id:characteristicKind:typedValue:lastValueUpdate:loadingState:properties:serviceId:metadata:)((uint64_t)v48, v75, (uint64_t)v73, (uint64_t)v53, (uint64_t)v71, &v69, (uint64_t)v48, v67, v63);
    sub_251A1B064((uint64_t)v48, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v53, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v48, &qword_26B21FF90);
    sub_251D6B980(v47, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v57 = v56;
    uint64_t v58 = v64;
    sub_251D6BA64(v57, v64, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v59 = v66;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    v67[0] = v59;
    sub_251A0F2D8(v58, 26, v60);
    uint64_t v37 = v67[0];
    swift_bridgeObjectRelease();
  }
LABEL_19:
  sub_251A1B064((uint64_t)v25, &qword_26B21F108);
  return v37;
}

uint64_t sub_251D69FF0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v95 = a3;
  uint64_t v5 = type metadata accessor for StaticLightProfile();
  uint64_t v94 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v88 = (uint64_t)v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  char v87 = (char *)v86 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v99 = (uint64_t)v86 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v97 = (uint64_t)v86 - v12;
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v90 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
  v86[0] = v86;
  uint64_t v112 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v93 = v18;
  unsigned __int8 v92 = (char *)v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v91 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v96 = a2;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    uint64_t v111 = a1;
    if (v16)
    {
      uint64_t v104 = (v16 - 1) & v16;
      int64_t v105 = v19;
      unint64_t v21 = __clz(__rbit64(v16)) | (v19 << 6);
    }
    else
    {
      int64_t v22 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_43;
      }
      if (v22 >= v91)
      {
LABEL_40:
        swift_release();
        return (uint64_t)a1;
      }
      unint64_t v23 = *(void *)(v90 + 8 * v22);
      int64_t v24 = v19 + 1;
      if (!v23)
      {
        int64_t v24 = v19 + 2;
        if (v19 + 2 >= v91) {
          goto LABEL_40;
        }
        unint64_t v23 = *(void *)(v90 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v19 + 3;
          if (v19 + 3 >= v91) {
            goto LABEL_40;
          }
          unint64_t v23 = *(void *)(v90 + 8 * v24);
          if (!v23)
          {
            int64_t v24 = v19 + 4;
            if (v19 + 4 >= v91) {
              goto LABEL_40;
            }
            unint64_t v23 = *(void *)(v90 + 8 * v24);
            if (!v23)
            {
              uint64_t v25 = v19 + 5;
              if (v19 + 5 >= v91) {
                goto LABEL_40;
              }
              unint64_t v23 = *(void *)(v90 + 8 * v25);
              if (!v23)
              {
                while (1)
                {
                  int64_t v24 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    goto LABEL_44;
                  }
                  if (v24 >= v91) {
                    goto LABEL_40;
                  }
                  unint64_t v23 = *(void *)(v90 + 8 * v24);
                  ++v25;
                  if (v23) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v24 = v19 + 5;
            }
          }
        }
      }
LABEL_24:
      uint64_t v104 = (v23 - 1) & v23;
      int64_t v105 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    uint64_t v26 = v96;
    uint64_t v27 = *(void *)(v96 + 48);
    uint64_t v28 = sub_251F34DA0();
    uint64_t v113 = *(void *)(v28 - 8);
    uint64_t v98 = *(void *)(v113 + 72);
    uint64_t v29 = v27 + v98 * v21;
    unint64_t v30 = *(char **)(v113 + 16);
    char v114 = (void *)(v113 + 16);
    uint64_t v115 = v30;
    uint64_t v31 = (uint64_t)v92;
    ((void (*)(char *, uint64_t, uint64_t))v30)(v92, v29, v28);
    uint64_t v32 = *(void *)(v26 + 56);
    uint64_t v100 = *(void *)(v94 + 72);
    uint64_t v33 = v112;
    uint64_t v34 = v31 + *(int *)(v112 + 48);
    unint64_t v109 = type metadata accessor for StaticLightProfile;
    uint64_t v35 = sub_251D6B8B0(v32 + v100 * v21, v34, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v103 = v86;
    uint64_t v36 = v93;
    MEMORY[0x270FA5388](v35);
    unint64_t v107 = (v36 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v37 = sub_251D6B918(v31, (uint64_t)v86 - v107);
    uint64_t v102 = v86;
    uint64_t v38 = MEMORY[0x270FA5388](v37);
    uint64_t v110 = v39;
    unint64_t v101 = (v39 + 15) & 0xFFFFFFFFFFFFFFF0;
    char v40 = (char *)v86 - v101;
    uint64_t v108 = v86;
    MEMORY[0x270FA5388](v38);
    uint64_t v41 = (char *)v86 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v42 = &v41[*(int *)(v33 + 48)];
    uint64_t v106 = v42;
    uint64_t v43 = v115;
    ((void (*)(char *, char *, uint64_t))v115)(v41, v41, v28);
    uint64_t v44 = v109;
    sub_251D6B8B0((uint64_t)v42, (uint64_t)v42, (uint64_t (*)(void))v109);
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v40, v41, v28);
    uint64_t v45 = sub_251D6B980((uint64_t)v42, (uint64_t (*)(void))v44);
    uint64_t v108 = v86;
    MEMORY[0x270FA5388](v45);
    uint64_t v46 = (char *)v86 - v107;
    uint64_t v47 = (char *)v86 + *(int *)(v112 + 48) - v107;
    uint64_t v48 = (char *)v86 - v107;
    unint64_t v107 = (unint64_t)v86 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    ((void (*)(char *, unint64_t, uint64_t))v43)(v48, v107, v28);
    sub_251D6B8B0((uint64_t)v106, (uint64_t)v47, (uint64_t (*)(void))v44);
    uint64_t v49 = v97;
    sub_251D6BA64((uint64_t)v47, v97, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v50 = v113;
    uint64_t v51 = *(char **)(v113 + 8);
    unint64_t v109 = (uint64_t (*)())(v113 + 8);
    uint64_t v106 = v51;
    unint64_t v52 = ((uint64_t (*)(char *, uint64_t))v51)(v46, v28);
    uint64_t v53 = v95;
    if (!*(void *)(v95 + 16)) {
      break;
    }
    unint64_t v52 = sub_2519FE584((uint64_t)v40);
    if ((v54 & 1) == 0) {
      break;
    }
    int v55 = *(char *)(*(void *)(v53 + 56) + v52);
    if (v55 < 0) {
      break;
    }
    uint64_t v108 = v86;
    LODWORD(v101) = v55 & 1;
    MEMORY[0x270FA5388](v52);
    uint64_t v57 = (char *)v86 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    ((void (*)(char *, char *, uint64_t))v115)(v57, v40, v28);
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    char v114 = v86;
    uint64_t v59 = *(void *)(*(void *)(v58 - 8) + 64);
    MEMORY[0x270FA5388](v58 - 8);
    char v60 = (char *)v86 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
    uint64_t v89 = v28;
    uint64_t v62 = v61(v60, 1, 1, v28);
    uint64_t v115 = v40;
    MEMORY[0x270FA5388](v62);
    v61(v60, 1, 1, v28);
    uint64_t v63 = v97;
    uint64_t v64 = v87;
    StaticLightProfile.copyReplacing(id:isNaturalLightSupported:isNaturalLightEnabled:accessoryId:)((uint64_t)v60, 2u, v101, (uint64_t)v60, v87);
    sub_251A1B064((uint64_t)v60, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v60, &qword_26B21FF90);
    uint64_t v65 = v88;
    sub_251D6BA64((uint64_t)v64, v88, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v66 = v111;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v116 = v66;
    sub_251A10610(v65, (uint64_t)v57, isUniquelyReferenced_nonNull_native);
    a1 = v116;
    swift_bridgeObjectRelease();
    uint64_t v68 = v89;
    uint64_t v69 = v106;
    ((void (*)(char *, uint64_t))v106)(v57, v89);
    sub_251D6B980(v63, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    ((void (*)(char *, uint64_t))v69)(v115, v68);
LABEL_6:
    unint64_t v16 = v104;
    int64_t v19 = v105;
    sub_251A1B064(v107, &qword_269B9CF50);
  }
  MEMORY[0x270FA5388](v52);
  char v70 = (char *)v86 - v101;
  ((void (*)(char *, char *, uint64_t))v115)((char *)v86 - v101, v40, v28);
  sub_251D6B8B0(v49, v99, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  Class v71 = v111;
  int v72 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v116 = v71;
  unint64_t v74 = sub_2519FE584((uint64_t)v70);
  uint64_t v75 = v71[2];
  BOOL v76 = (v73 & 1) == 0;
  uint64_t v77 = v75 + v76;
  if (!__OFADD__(v75, v76))
  {
    char v78 = v73;
    uint64_t v79 = v71[3];
    uint64_t v108 = v86;
    if (v79 < v77)
    {
      sub_251A0ABD0(v77, v72);
      unint64_t v80 = sub_2519FE584((uint64_t)v70);
      if ((v78 & 1) != (v81 & 1)) {
        goto LABEL_45;
      }
      unint64_t v74 = v80;
      a1 = v116;
      if ((v78 & 1) == 0) {
        goto LABEL_36;
      }
LABEL_4:
      sub_251D6B9E0(v99, a1[7] + v74 * v100, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t v20 = v106;
      ((void (*)(char *, uint64_t))v106)(v70, v28);
      sub_251D6B980(v49, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      ((void (*)(char *, uint64_t))v20)(v40, v28);
      goto LABEL_6;
    }
    if (v72)
    {
      a1 = v116;
      if (v73) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_251A17664();
      a1 = v116;
      if (v78) {
        goto LABEL_4;
      }
    }
LABEL_36:
    a1[(v74 >> 6) + 8] |= 1 << v74;
    ((void (*)(unint64_t, char *, uint64_t))v115)(a1[6] + v74 * v98, v70, v28);
    sub_251D6BA64(v99, a1[7] + v74 * v100, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v82 = a1[2];
    BOOL v83 = __OFADD__(v82, 1);
    uint64_t v84 = v82 + 1;
    if (v83) {
      goto LABEL_42;
    }
    a1[2] = v84;
    a1 = v116;
    goto LABEL_5;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251D6AA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActionService();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (v14)
  {
    v21[1] = v3;
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_251A3E80C(0, v14, 0);
    uint64_t v15 = v24;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v22 = *(void *)(v7 + 72);
    do
    {
      sub_251D6B8B0(v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      swift_bridgeObjectRetain();
      uint64_t v17 = v23;
      swift_bridgeObjectRetain();
      ActionService.init(with:overrideCharacteristicValues:overrideProfileValues:)(v9, a2, v17);
      uint64_t v24 = v15;
      unint64_t v19 = *(void *)(v15 + 16);
      unint64_t v18 = *(void *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_251A3E80C(v18 > 1, v19 + 1, 1);
        uint64_t v15 = v24;
      }
      *(void *)(v15 + 16) = v19 + 1;
      sub_251D6BA64((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v19, (uint64_t (*)(void))type metadata accessor for ActionService);
      v16 += v22;
      --v14;
    }
    while (v14);
  }
  return v15;
}

uint64_t sub_251D6ACD0()
{
  return sub_251B45768() & 1;
}

unint64_t sub_251D6ACF4()
{
  unint64_t result = qword_269BA3008;
  if (!qword_269BA3008)
  {
    type metadata accessor for ActionService();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3008);
  }
  return result;
}

uint64_t sub_251D6AD4C()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

char *initializeBufferWithCopyOfBuffer for ActionService(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    a1[v10] = a2[v10];
    uint64_t v14 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    swift_bridgeObjectRetain();
    v8(v15, v16, v7);
    uint64_t v17 = a3[9];
    uint64_t v18 = a3[10];
    unint64_t v19 = &a1[v17];
    uint64_t v20 = &a2[v17];
    *(void *)unint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    unint64_t v21 = &a1[v18];
    uint64_t v22 = &a2[v18];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)unint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = a3[12];
    a1[a3[11]] = a2[a3[11]];
    a1[v24] = a2[v24];
    uint64_t v25 = a3[14];
    a1[a3[13]] = a2[a3[13]];
    *(void *)&a1[v25] = *(void *)&a2[v25];
    uint64_t v26 = a3[16];
    *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionService(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = (void *)(a1 + v17);
  unint64_t v21 = (void *)(a2 + v17);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  v7(a1 + a3[8], a2 + a3[8], v6);
  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  *(unsigned char *)(v12 + 8) = *((unsigned char *)v13 + 8);
  *(void *)uint64_t v12 = v14;
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[16];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActionService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v10 = a3[9];
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v14 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for ActionService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  v7(a1 + a3[8], a2 + a3[8], v6);
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = (void *)(a1 + v15);
  uint64_t v19 = (uint64_t *)(a2 + v15);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v23 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[16];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  swift_bridgeObjectRelease();
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D6B638);
}

uint64_t sub_251D6B638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ActionService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D6B710);
}

uint64_t sub_251D6B710(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251D6B7D0()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251D6B8B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D6B918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D6B980(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D6B9E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_251D6BA48(uint64_t a1, void **a2)
{
  sub_251D639F0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_251D6BA64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id MTTimer.update<A>(state:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_msgSend(v3, sel_timerByUpdatingWithState_, (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3));
  return v4;
}

void MTTimer.timerState.getter(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_state);
  type metadata accessor for MTTimerState(0);
  a1[3] = v4;
  a1[4] = &protocol witness table for MTTimerState;
  *a1 = v3;
}

void MTTimer.toggle()(uint64_t *a1@<X8>)
{
  if (objc_msgSend(v1, sel_state) == (id)2) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 2;
  }
  type metadata accessor for MTTimerState(0);
  a1[3] = v4;
  a1[4] = (uint64_t)&protocol witness table for MTTimerState;
  *a1 = v3;
}

id sub_251D6BBD4()
{
  return objc_msgSend(*v0, sel_remainingTime);
}

id sub_251D6BBE4()
{
  return objc_msgSend(*v0, sel_duration);
}

void sub_251D6BBF4(void *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_state);
  type metadata accessor for MTTimerState(0);
  a1[3] = v4;
  a1[4] = &protocol witness table for MTTimerState;
  *a1 = v3;
}

id sub_251D6BC40()
{
  return objc_msgSend(*v0, sel_isFiring);
}

void sub_251D6BC64()
{
  id v1 = objc_msgSend(*v0, sel_timerID);
  sub_251F34D80();
}

id sub_251D6BCC4()
{
  return objc_msgSend(*v0, sel_isCurrentTimer);
}

void sub_251D6BCE8(uint64_t *a1@<X8>)
{
  if (objc_msgSend(*v1, sel_state) == (id)2) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 2;
  }
  type metadata accessor for MTTimerState(0);
  a1[3] = v4;
  a1[4] = (uint64_t)&protocol witness table for MTTimerState;
  *a1 = v3;
}

id sub_251D6BD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id result = MTTimer.update<A>(state:)(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_251D6BD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v4 = *(double *)(v3 + 24);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  uint64_t v6 = sub_251F34DA0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D90();
  type metadata accessor for MockTimer();
  swift_allocObject();
  sub_251D6BE8C(0, 0, v5, 0, (uint64_t)v8, 0, v4, 0.0);
  return swift_dynamicCastClassUnconditional();
}

uint64_t sub_251D6BE8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, double a7, double a8)
{
  uint64_t v9 = v8;
  double v14 = a7;
  if (a8 > 0.0) {
    a7 = a8;
  }
  *(double *)(v9 + 16) = a7;
  *(double *)(v9 + 24) = v14;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  swift_bridgeObjectRelease();
  *(void *)(v9 + 48) = a3;
  *(unsigned char *)(v9 + 56) = a4;
  uint64_t v15 = v9 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID;
  uint64_t v16 = sub_251F34DA0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, a5, v16);
  *(unsigned char *)(v9 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_currentTimer) = a6;
  sub_251F36400();
  sub_251F35800();
  sub_251F35DF0();
  sub_251F35800();
  sub_251F35DF0();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a5, v16);
  uint64_t v18 = (void *)(v9 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_description);
  *uint64_t v18 = 0;
  v18[1] = 0xE000000000000000;
  return v9;
}

uint64_t sub_251D6C044()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID;
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_251D6C100()
{
  return *(double *)(*(void *)v0 + 16);
}

double sub_251D6C10C()
{
  return *(double *)(*(void *)v0 + 24);
}

uint64_t sub_251D6C118()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_251D6C14C(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  a1[3] = &type metadata for MockTimerState;
  a1[4] = &off_270271B20;
  *a1 = v2;
}

uint64_t sub_251D6C170()
{
  return *(unsigned __int8 *)(*(void *)v0 + 56);
}

uint64_t sub_251D6C17C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID;
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_251D6C1F4()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_description);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_251D6C234()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_currentTimer);
}

void sub_251D6C248(uint64_t *a1@<X8>)
{
  uint64_t v2 = 2;
  if (*(void *)(*(void *)v1 + 48) == 2) {
    uint64_t v2 = 3;
  }
  a1[3] = (uint64_t)&type metadata for MockTimerState;
  a1[4] = (uint64_t)&off_270271B20;
  *a1 = v2;
}

uint64_t sub_251D6C278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_251D6BD68(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_251D6C2A4()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v2);
  sub_251D6C954((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9610]);
  sub_251F35610();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_251F36D00();
}

uint64_t sub_251D6C3CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v2);
  sub_251D6C954((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9610]);
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_251D6C4E8()
{
  sub_251F36CA0();
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v2);
  sub_251D6C954((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9610]);
  sub_251F35610();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_251F36D00();
}

uint64_t sub_251D6C60C(uint64_t *a1, uint64_t *a2)
{
  return sub_251D6C99C(*a1, *a2);
}

uint64_t sub_251D6C618(uint64_t a1)
{
  uint64_t result = sub_251D6C954(&qword_269BA3020, (void (*)(uint64_t))sub_251D6C664);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_251D6C664()
{
  unint64_t result = qword_269BA2380;
  if (!qword_269BA2380)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269BA2380);
  }
  return result;
}

uint64_t dispatch thunk of HomeTimerState.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeTimer.remainingTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HomeTimer.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HomeTimer.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HomeTimer.timerState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of HomeTimer.isFiring.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HomeTimer.timerID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of HomeTimer.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HomeTimer.isCurrentTimer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HomeTimer.toggle()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HomeTimer.update<A>(state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t sub_251D6C780()
{
  return type metadata accessor for MockTimer();
}

uint64_t type metadata accessor for MockTimer()
{
  uint64_t result = qword_269BA3028;
  if (!qword_269BA3028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251D6C7D4()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_251D6C898()
{
  return sub_251D6C910(&qword_269BA3038);
}

uint64_t sub_251D6C8CC(uint64_t a1)
{
  uint64_t result = sub_251D6C910(&qword_269BA3040);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_251D6C910(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MockTimer();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251D6C954(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251D6C99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = v5[8];
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(char *, uint64_t, uint64_t))v5[2];
  uint64_t v9 = v8(v7, a1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v4);
  MEMORY[0x270FA5388](v9);
  v8(v7, a2 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v4);
  char v10 = sub_251F34D70();
  uint64_t v11 = (void (*)(char *, uint64_t))v5[1];
  v11(v7, v4);
  v11(v7, v4);
  if ((v10 & 1) == 0 || *(double *)(a1 + 24) != *(double *)(a2 + 24) || *(double *)(a1 + 16) != *(double *)(a2 + 16)) {
    goto LABEL_13;
  }
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a2 + 40);
  if (!v12)
  {
    if (!v13) {
      goto LABEL_11;
    }
LABEL_13:
    char v15 = 0;
    return v15 & 1;
  }
  if (!v13) {
    goto LABEL_13;
  }
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && v12 == v13 || (char v14 = sub_251F36B10(), v15 = 0, (v14 & 1) != 0))
  {
LABEL_11:
    if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56))
    {
      char v15 = *(unsigned char *)(a1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_currentTimer) ^ *(unsigned char *)(a2
                                                                                               + OBJC_IVAR____TtC13HomeDataModel9MockTimer_currentTimer) ^ 1;
      return v15 & 1;
    }
    goto LABEL_13;
  }
  return v15 & 1;
}

ValueMetadata *type metadata accessor for MockTimerState()
{
  return &type metadata for MockTimerState;
}

unint64_t sub_251D6CBC0()
{
  unint64_t result = qword_269BA3048;
  if (!qword_269BA3048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3048);
  }
  return result;
}

id HMMatterCommand.init(commandId:endpointId:clusterId:accessory:commandFields:expectedValues:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v7 = (void *)sub_251F36D60();
  uint64_t v8 = (void *)sub_251F36D40();
  uint64_t v9 = (void *)sub_251F36D60();
  if (a5)
  {
    char v10 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  uint64_t v12 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithCommandID_endpointID_clusterID_accessory_commandFields_expectedValues_, v7, v8, v9, a4, v10, v12);

  return v13;
}

id HMMatterCommand.init(actionCommand:)(uint64_t a1)
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_26B21FF50;
  uint64_t v3 = (void *)sub_251F34D50();
  id v4 = objc_msgSend(v2, sel_accessoryFor_, v3);

  if (v4)
  {
    uint64_t v5 = type metadata accessor for ActionCommand(0);
    uint64_t v6 = (void *)(a1 + *(int *)(v5 + 28));
    uint64_t v7 = v6[3];
    uint64_t v8 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v7);
    unsigned int v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    uint64_t v9 = *(unsigned __int16 *)(a1 + *(int *)(v5 + 24));
    uint64_t v10 = v6[3];
    uint64_t v11 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v10);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 32))(&v31, v10, v11);
    uint64_t v12 = (char)v31;
    uint64_t v13 = v6[3];
    uint64_t v14 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v13);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 56))(v29, v13, v14);
    char v15 = v30;
    if (v30 == 255)
    {
      unint64_t v20 = 0;
    }
    else
    {
      id v16 = v4;
      uint64_t v17 = v12;
      uint64_t v18 = v29[0];
      uint64_t v19 = v29[1];
      unint64_t v20 = MatterCommandFields.asDictionary()();
      uint64_t v21 = v18;
      uint64_t v12 = v17;
      id v4 = v16;
      uint64_t v9 = v9;
      sub_251C32408(v21, v19, v15);
    }
    uint64_t v23 = dword_251F51BC0[v12];
    uint64_t v24 = v6[3];
    uint64_t v25 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v24);
    MatterCommand.expectedValues(endpointID:)(v9, v24, v25);
    id v22 = HMMatterCommand.init(commandId:endpointId:clusterId:accessory:commandFields:expectedValues:)(v28, v9, v23, v4, v20);
    id v26 = v22;
    sub_251D6D998(a1, type metadata accessor for ActionCommand);
    if (v22) {
  }
    }
  else
  {
    sub_251D6D998(a1, type metadata accessor for ActionCommand);
    return 0;
  }
  return v22;
}

uint64_t HMMatterCommand.effectedEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticMatterDevice();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v36 - v12;
  id v14 = objc_msgSend(v1, sel_accessory);
  uint64_t v15 = sub_251F35F60();
  char v17 = v16;

  if (v17) {
    goto LABEL_12;
  }
  v36[0] = a1;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_26B21FF50;
  swift_getKeyPath();
  v36[1] = v18;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v19 = v18 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
  swift_beginAccess();
  uint64_t v20 = *(void *)(v19 + 16);
  a1 = v36[0];
  if (!*(void *)(v20 + 16)) {
    goto LABEL_12;
  }
  unint64_t v21 = sub_2519FE588(v15);
  if ((v22 & 1) == 0) {
    goto LABEL_12;
  }
  sub_251D6DA60(*(void *)(v20 + 56) + *(void *)(v8 + 72) * v21, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  sub_251D6D9F8((uint64_t)v11, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v23 = *(void *)&v13[*(int *)(v7 + 48)];
  swift_bridgeObjectRetain();
  id v24 = objc_msgSend(v2, sel_endpointID);
  unsigned __int16 v25 = (unsigned __int16)objc_msgSend(v24, sel_unsignedShortValue);

  if (*(void *)(v23 + 16) && (unint64_t v26 = sub_2519FE5CC(v25), (v27 & 1) != 0))
  {
    unint64_t v28 = v26;
    uint64_t v29 = *(void *)(v23 + 56);
    uint64_t v30 = type metadata accessor for StaticEndpoint();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = v29 + *(void *)(v31 + 72) * v28;
    a1 = v36[0];
    sub_251D6DA60(v32, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v6, 0, 1, v30);
  }
  else
  {
    uint64_t v30 = type metadata accessor for StaticEndpoint();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v6, 1, 1, v30);
  }
  swift_bridgeObjectRelease();
  sub_251D6D998((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  type metadata accessor for StaticEndpoint();
  uint64_t v33 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v6, 1, v30) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_269B9CB38);
LABEL_12:
    uint64_t v34 = type metadata accessor for StaticEndpoint();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a1, 1, 1, v34);
  }
  sub_251D6D9F8((uint64_t)v6, a1, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v30);
}

char HMMatterCommand.associatedMatterCommand.getter@<W0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_clusterID);
  Swift::UInt32 v4 = objc_msgSend(v3, sel_unsignedIntValue);

  LOBYTE(v5) = ClusterKind.init(rawValue:)(v4);
  if (v18 == 28
    || (id v5 = objc_msgSend(v1, sel_expectedValues)) == 0)
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    uint64_t v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    sub_251F35AC0();

    unsigned __int8 v21 = v18;
    id v7 = objc_msgSend(v1, sel_commandID);
    int v8 = objc_msgSend(v7, sel_unsignedIntValue);

    id v9 = objc_msgSend(v1, sel_commandFields);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_251F35550();
    }
    else
    {
      uint64_t v11 = 0;
    }
    MatterCommandFields.init(commandFields:)(v11, (uint64_t)&v18);
    uint64_t v12 = v18;
    uint64_t v13 = v19;
    char v14 = v20;
    v16[0] = v18;
    v16[1] = v19;
    char v17 = v20;
    static MatterCommandFactory.matterCommand(clusterKind:commandID:expectedValues:commandFields:)(&v21, v8, (uint64_t)v16, a1);
    swift_bridgeObjectRelease();
    LOBYTE(v5) = sub_251C32408(v12, v13, v14);
  }
  return (char)v5;
}

uint64_t HMMatterCommand.overridingAttributes.getter@<X0>(unint64_t *a1@<X8>)
{
  HMMatterCommand.associatedMatterCommand.getter((uint64_t)&v13);
  if (v14)
  {
    sub_251A1A444(&v13, (uint64_t)v15);
    uint64_t v3 = v16;
    uint64_t v4 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 64))(v3, v4);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = v16;
      uint64_t v8 = v17;
      __swift_project_boxed_opaque_existential_1(v15, v16);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 32))(&v13, v7, v8);
      uint64_t v9 = v13;
      id v10 = objc_msgSend(v1, sel_endpointID);
      unsigned int v11 = objc_msgSend(v10, sel_unsignedShortValue);

      *a1 = v9 | ((unint64_t)v11 << 16);
      a1[1] = v6;
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    }
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  else
  {
    uint64_t result = sub_251A1B064((uint64_t)&v13, &qword_269BA08C0);
  }
  *a1 = 0;
  a1[1] = 0;
  return result;
}

uint64_t HMMatterCommand.matterExpectedValues.getter()
{
  unint64_t v1 = v0;
  HMMatterCommand.associatedMatterCommand.getter((uint64_t)&v11);
  if (v12)
  {
    sub_251A1A444(&v11, (uint64_t)v13);
    uint64_t v2 = v14;
    uint64_t v3 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
    uint64_t v5 = v14;
    uint64_t v6 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    id v7 = objc_msgSend(v1, sel_endpointID);
    id v8 = objc_msgSend(v7, sel_unsignedShortValue);

    uint64_t v9 = MatterCommand.expectedValues(for:endpointID:)(v4, (uint64_t)v8, v5, v6);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    sub_251A1B064((uint64_t)&v11, &qword_269BA08C0);
    return 0;
  }
  return v9;
}

unint64_t HMMatterCommand.matterCommandFields.getter()
{
  HMMatterCommand.associatedMatterCommand.getter((uint64_t)&v6);
  if (v8)
  {
    sub_251A1A444(&v6, (uint64_t)v9);
    uint64_t v0 = v10;
    uint64_t v1 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v1 + 56))(&v6, v0, v1);
    char v2 = v7;
    if (v7 == 255)
    {
      unint64_t v4 = 0;
    }
    else
    {
      long long v3 = v6;
      unint64_t v4 = MatterCommandFields.asDictionary()();
      sub_251C32408(v3, *((uint64_t *)&v3 + 1), v2);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  }
  else
  {
    sub_251A1B064((uint64_t)&v6, &qword_269BA08C0);
    return 0;
  }
  return v4;
}

uint64_t Set<>.byExecutionOrder()()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_251A92280(v0);
  swift_bridgeObjectRelease();
  uint64_t v3 = v1;
  sub_251D6DAC8(&v3);
  return v3;
}

uint64_t sub_251D6D998(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D6D9F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D6DA60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D6DAC8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_251ECE8D4();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_251D6DB44(v6);
  return sub_251F36500();
}

void sub_251D6DB44(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_251F36AA0();
  if (v5 < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1) {
      goto LABEL_334;
    }
    uint64_t v240 = v5;
    uint64_t v244 = (void *)v4;
    uint64_t v237 = a1;
    if (v4 < 2)
    {
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
      uint64_t v270 = MEMORY[0x263F8EE78];
      unint64_t v247 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v4 != 1)
      {
        unint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
        if (v14 < 2) {
          goto LABEL_303;
        }
        goto LABEL_290;
      }
    }
    else
    {
      uint64_t v7 = v6 >> 1;
      sub_251D71D84();
      uint64_t v8 = sub_251F35B50();
      *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      unint64_t v247 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v270 = v8;
    }
    int64_t v10 = 0;
    uint64_t v11 = *a1;
    uint64_t v238 = *a1 + 16;
    uint64_t v239 = v11 - 8;
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    uint64_t v12 = &off_26536F000;
    v236[1] = MEMORY[0x263F8EE58] + 8;
    long long v13 = v244;
    uint64_t v250 = v11;
    while (1)
    {
      uint64_t v15 = v10 + 1;
      int64_t v245 = v10;
      if (v10 + 1 >= (uint64_t)v13) {
        goto LABEL_103;
      }
      uint64_t v241 = v9;
      uint64_t v242 = v2;
      uint64_t v16 = *(void **)(v11 + 8 * v10);
      id v17 = *(id *)(v11 + 8 * v15);
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_clusterID);
      Swift::UInt32 v20 = [v19 (SEL)v12[325]];

      ClusterKind.init(rawValue:)(v20);
      int v21 = LOBYTE(v266[0]);
      if (LOBYTE(v266[0]) == 28) {
        break;
      }
      id v22 = objc_msgSend(v17, sel_expectedValues);
      if (!v22) {
        break;
      }
      uint64_t v23 = v22;
      char v253 = (void *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
      sub_251F35AC0();

      id v24 = objc_msgSend(v17, sel_commandID);
      LODWORD(v271) = [v24 (SEL)v12[325]];

      id v25 = objc_msgSend(v17, sel_commandFields);
      if (v25)
      {
        unint64_t v26 = v25;
        uint64_t v27 = sub_251F35550();
      }
      else
      {
        uint64_t v27 = 0;
      }
      MatterCommandFields.init(commandFields:)(v27, (uint64_t)v266);
      uint64_t v195 = v266[0];
      uint64_t v194 = v266[1];
      char v196 = v267;
      if ((v21 - 23) >= 4)
      {
        uint64_t v265 = 0;
        long long v263 = 0u;
        long long v264 = 0u;
        swift_bridgeObjectRelease();
        sub_251C32408(v195, v194, v196);
        if (!*((void *)&v264 + 1)) {
          goto LABEL_21;
        }
      }
      else
      {
        unint64_t v252 = (unint64_t)v18;
        uint64_t v249 = (void *)sub_251C33658();
        *(void *)&long long v260 = v195;
        *((void *)&v260 + 1) = v194;
        LOBYTE(v261) = v196;
        uint64_t v197 = sub_251F36190();
        uint64_t v251 = v236;
        unint64_t v248 = v197;
        uint64_t v198 = *(void *)(v197 - 8);
        MEMORY[0x270FA5388](v197);
        uint64_t v200 = (char *)v236 - v199;
        LOBYTE(v257) = v21;
        swift_bridgeObjectRetain();
        sub_251C6D698(v195, v194, v196);
        StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)(&v257, (int)v271, (uint64_t)&v260, (uint64_t)v200);
        uint64_t v201 = off_270277040;
        if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v200, 1, &type metadata for StaticRVCClusterGroup.Command) == 1)
        {
          (*(void (**)(char *, unint64_t))(v198 + 8))(v200, v248);
          long long v263 = 0u;
          long long v264 = 0u;
          uint64_t v265 = 0;
        }
        else
        {
          *((void *)&v264 + 1) = &type metadata for StaticRVCClusterGroup.Command;
          uint64_t v265 = v249;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v263);
          ((void (*)(uint64_t *, char *, ValueMetadata *))v201->initializeWithTake)(boxed_opaque_existential_1, v200, &type metadata for StaticRVCClusterGroup.Command);
        }
        swift_bridgeObjectRelease();
        sub_251C32408(v195, v194, v196);
        uint64_t v12 = &off_26536F000;
        id v18 = (id)v252;
        if (!*((void *)&v264 + 1)) {
          goto LABEL_21;
        }
      }
      sub_251A1A444(&v263, (uint64_t)v266);
      id v203 = objc_msgSend(v18, sel_clusterID);
      Swift::UInt32 v204 = [v203 (SEL)v12[325]];

      ClusterKind.init(rawValue:)(v204);
      int v205 = v257;
      if (v257 == 28
        || (id v206 = objc_msgSend(v18, sel_expectedValues)) == 0)
      {
        unint64_t v262 = 0;
        long long v260 = 0u;
        long long v261 = 0u;
LABEL_277:
        sub_251A1B064((uint64_t)&v260, &qword_269BA08C0);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v266);
        goto LABEL_22;
      }
      char v207 = v206;
      sub_251F35AC0();

      id v208 = objc_msgSend(v18, sel_commandID);
      unsigned int v209 = [v208 (SEL)v12[325]];

      id v210 = objc_msgSend(v18, sel_commandFields);
      LODWORD(v271) = v209;
      if (v210)
      {
        uint64_t v211 = v210;
        uint64_t v212 = sub_251F35550();
      }
      else
      {
        uint64_t v212 = 0;
      }
      MatterCommandFields.init(commandFields:)(v212, (uint64_t)&v257);
      uint64_t v213 = v257;
      uint64_t v214 = v258;
      char v215 = v259;
      if ((v205 - 23) >= 4)
      {
        unint64_t v262 = 0;
        long long v260 = 0u;
        long long v261 = 0u;
        swift_bridgeObjectRelease();
        sub_251C32408(v213, v214, v215);
      }
      else
      {
        unint64_t v252 = (unint64_t)v18;
        uint64_t v251 = (void *)sub_251C33658();
        v255[0] = v213;
        v255[1] = v214;
        char v256 = v215;
        uint64_t v216 = sub_251F36190();
        char v253 = v236;
        uint64_t v249 = (void *)v216;
        uint64_t v217 = *(void *)(v216 - 8);
        MEMORY[0x270FA5388](v216);
        uint64_t v219 = (char *)v236 - v218;
        char v254 = v205;
        swift_bridgeObjectRetain();
        sub_251C6D698(v213, v214, v215);
        StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)(&v254, (int)v271, (uint64_t)v255, (uint64_t)v219);
        uint64_t v220 = off_270277040;
        if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v219, 1, &type metadata for StaticRVCClusterGroup.Command) == 1)
        {
          (*(void (**)(char *, void *))(v217 + 8))(v219, v249);
          long long v260 = 0u;
          long long v261 = 0u;
          unint64_t v262 = 0;
        }
        else
        {
          *((void *)&v261 + 1) = &type metadata for StaticRVCClusterGroup.Command;
          unint64_t v262 = v251;
          uint64_t v221 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v260);
          ((void (*)(uint64_t *, char *, ValueMetadata *))v220->initializeWithTake)(v221, v219, &type metadata for StaticRVCClusterGroup.Command);
        }
        swift_bridgeObjectRelease();
        sub_251C32408(v213, v214, v215);
        uint64_t v12 = &off_26536F000;
        id v18 = (id)v252;
      }
      if (!*((void *)&v261 + 1)) {
        goto LABEL_277;
      }
      sub_251A1A444(&v260, (uint64_t)&v263);
      uint64_t v222 = v18;
      uint64_t v223 = v268;
      uint64_t v224 = v269;
      __swift_project_boxed_opaque_existential_1(v266, v268);
      uint64_t v225 = (*(uint64_t (**)(uint64_t, uint64_t))(v224 + 40))(v223, v224);
      uint64_t v226 = *((void *)&v264 + 1);
      int v227 = v265;
      __swift_project_boxed_opaque_existential_1(&v263, *((uint64_t *)&v264 + 1));
      BOOL v28 = v225 < ((uint64_t (*)(uint64_t, void *))v227[5])(v226, v227);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v263);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v266);

LABEL_23:
      int64_t v10 = v245;
      uint64_t v15 = v245 + 2;
      if (v245 + 2 < (uint64_t)v244)
      {
        uint64_t v29 = (id *)(v238 + 8 * v245);
        LODWORD(v271) = v28;
        while (1)
        {
          uint64_t v251 = (void *)v15;
          uint64_t v30 = *(v29 - 1);
          id v31 = *v29;
          id v32 = v30;
          id v33 = objc_msgSend(v31, sel_clusterID);
          Swift::UInt32 v34 = [v33 (SEL)v12[325]];

          ClusterKind.init(rawValue:)(v34);
          int v35 = v260;
          if (v260 == 28) {
            break;
          }
          id v36 = objc_msgSend(v31, sel_expectedValues);
          if (!v36) {
            break;
          }

          id v37 = objc_msgSend(v31, sel_commandID);
          unsigned int v38 = objc_msgSend(v37, sel_unsignedIntValue);

          id v39 = objc_msgSend(v31, sel_commandFields);
          if (v39)
          {
            char v40 = v39;
            uint64_t v41 = sub_251F35550();
          }
          else
          {
            uint64_t v41 = 0;
          }
          MatterCommandFields.init(commandFields:)(v41, (uint64_t)&v260);
          long long v42 = v260;
          int v43 = v261;
          int v44 = v35 - 23;
          if ((v35 - 23) >= 4)
          {
LABEL_54:
            uint64_t v265 = 0;
            long long v263 = 0u;
            long long v264 = 0u;
            sub_251C32408(v42, *((uint64_t *)&v42 + 1), v43);
          }
          else
          {
            unint64_t v252 = sub_251C33658();
            uint64_t v45 = sub_251F36190();
            char v253 = v236;
            uint64_t v249 = (void *)v45;
            unint64_t v248 = *(void *)(v45 - 8);
            MEMORY[0x270FA5388](v45);
            uint64_t v47 = (char *)v236 - v46;
            switch(v44)
            {
              case 0:
                if (v38) {
                  *(void *)uint64_t v47 = 1;
                }
                else {
                  *(void *)uint64_t v47 = 0;
                }
                v47[8] = 3;
                goto LABEL_52;
              case 1:
                if (v43 != 2) {
                  goto LABEL_44;
                }
                *(void *)uint64_t v47 = *((void *)&v42 + 1);
                v47[8] = 0;
                goto LABEL_50;
              case 2:
                if (v43 != 2) {
                  goto LABEL_44;
                }
                *(void *)uint64_t v47 = *((void *)&v42 + 1);
                v47[8] = 1;
LABEL_50:
                uint64_t v49 = *((void *)&v42 + 1);
                uint64_t v48 = v42;
                char v50 = 2;
                goto LABEL_51;
              case 3:
                if (v43 == 3)
                {
                  *(void *)uint64_t v47 = *((void *)&v42 + 1);
                  v47[8] = 2;
                  uint64_t v49 = *((void *)&v42 + 1);
                  uint64_t v48 = v42;
                  char v50 = 3;
LABEL_51:
                  sub_251C6D698(v48, v49, v50);
                }
                else
                {
LABEL_44:
                  if (v43 == 255) {
                    sub_251C6D698(v42, *((uint64_t *)&v42 + 1), 255);
                  }
LABEL_46:
                  *(void *)uint64_t v47 = 0;
                  v47[8] = -1;
                }
LABEL_52:
                uint64_t v51 = off_270277040;
                if (((unsigned int (*)(char *, uint64_t))off_270277040->getEnumTagSinglePayload)(v47, 1) == 1)
                {
                  (*(void (**)(char *, void *))(v248 + 8))(v47, v249);
                  goto LABEL_54;
                }
                *((void *)&v264 + 1) = &type metadata for StaticRVCClusterGroup.Command;
                uint64_t v265 = (void *)v252;
                unint64_t v52 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v263);
                ((void (*)(uint64_t *, char *, ValueMetadata *))v51->initializeWithTake)(v52, v47, &type metadata for StaticRVCClusterGroup.Command);
                sub_251C32408(v42, *((uint64_t *)&v42 + 1), v43);
                break;
              default:
                goto LABEL_46;
            }
          }
          uint64_t v12 = &off_26536F000;
          BOOL v28 = (int)v271;
          if (!*((void *)&v264 + 1)) {
            goto LABEL_30;
          }
          sub_251A1A444(&v263, (uint64_t)v266);
          id v53 = objc_msgSend(v32, sel_clusterID);
          Swift::UInt32 v54 = objc_msgSend(v53, sel_unsignedIntValue);

          ClusterKind.init(rawValue:)(v54);
          int v55 = v257;
          if (v257 == 28
            || (id v56 = objc_msgSend(v32, sel_expectedValues)) == 0)
          {
            unint64_t v262 = 0;
            long long v260 = 0u;
            long long v261 = 0u;
            uint64_t v12 = &off_26536F000;
          }
          else
          {

            id v57 = objc_msgSend(v32, sel_commandID);
            unsigned int v58 = objc_msgSend(v57, sel_unsignedIntValue);

            id v59 = objc_msgSend(v32, sel_commandFields);
            if (v59)
            {
              char v60 = v59;
              uint64_t v61 = sub_251F35550();
            }
            else
            {
              uint64_t v61 = 0;
            }
            MatterCommandFields.init(commandFields:)(v61, (uint64_t)&v257);
            uint64_t v62 = v257;
            uint64_t v63 = v258;
            int v64 = v259;
            int v65 = v55 - 23;
            if ((v55 - 23) >= 4)
            {
LABEL_83:
              unint64_t v262 = 0;
              long long v260 = 0u;
              long long v261 = 0u;
              sub_251C32408(v62, v63, v64);
            }
            else
            {
              unint64_t v252 = sub_251C33658();
              uint64_t v66 = sub_251F36190();
              char v253 = v236;
              uint64_t v249 = (void *)v66;
              unint64_t v248 = *(void *)(v66 - 8);
              MEMORY[0x270FA5388](v66);
              uint64_t v68 = (char *)v236 - v67;
              switch(v65)
              {
                case 0:
                  if (v58) {
                    *(void *)uint64_t v68 = 1;
                  }
                  else {
                    *(void *)uint64_t v68 = 0;
                  }
                  v68[8] = 3;
                  goto LABEL_81;
                case 1:
                  if (v64 != 2) {
                    goto LABEL_74;
                  }
                  *(void *)uint64_t v68 = v63;
                  v68[8] = 0;
                  goto LABEL_72;
                case 2:
                  if (v64 != 2) {
                    goto LABEL_74;
                  }
                  *(void *)uint64_t v68 = v63;
                  v68[8] = 1;
LABEL_72:
                  uint64_t v69 = v62;
                  uint64_t v70 = v63;
                  char v71 = 2;
                  goto LABEL_80;
                case 3:
                  if (v64 == 3)
                  {
                    *(void *)uint64_t v68 = v63;
                    v68[8] = 2;
                    uint64_t v69 = v62;
                    uint64_t v70 = v63;
                    char v71 = 3;
LABEL_80:
                    sub_251C6D698(v69, v70, v71);
                  }
                  else
                  {
LABEL_74:
                    if (v64 == 255) {
                      sub_251C6D698(v62, v63, 255);
                    }
LABEL_76:
                    *(void *)uint64_t v68 = 0;
                    v68[8] = -1;
                  }
LABEL_81:
                  int v72 = off_270277040;
                  if (((unsigned int (*)(char *, uint64_t))off_270277040->getEnumTagSinglePayload)(v68, 1) == 1)
                  {
                    (*(void (**)(char *, void *))(v248 + 8))(v68, v249);
                    goto LABEL_83;
                  }
                  *((void *)&v261 + 1) = &type metadata for StaticRVCClusterGroup.Command;
                  unint64_t v262 = (void *)v252;
                  char v73 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v260);
                  ((void (*)(uint64_t *, char *, ValueMetadata *))v72->initializeWithTake)(v73, v68, &type metadata for StaticRVCClusterGroup.Command);
                  sub_251C32408(v62, v63, v64);
                  break;
                default:
                  goto LABEL_76;
              }
            }
            uint64_t v12 = &off_26536F000;
            BOOL v28 = (int)v271;
            if (*((void *)&v261 + 1))
            {
              sub_251A1A444(&v260, (uint64_t)&v263);
              uint64_t v74 = v268;
              uint64_t v75 = v269;
              __swift_project_boxed_opaque_existential_1(v266, v268);
              uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 40))(v74, v75);
              uint64_t v77 = *((void *)&v264 + 1);
              char v78 = v265;
              __swift_project_boxed_opaque_existential_1(&v263, *((uint64_t *)&v264 + 1));
              LODWORD(v76) = v76 >= ((uint64_t (*)(uint64_t, void *))v78[5])(v77, v78);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v263);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v266);

              if (((v28 ^ v76) & 1) == 0)
              {
                uint64_t v2 = v242;
                uint64_t v9 = v241;
                uint64_t v11 = v250;
                int64_t v10 = v245;
                uint64_t v15 = (uint64_t)v251;
                if (v28) {
                  goto LABEL_94;
                }
                goto LABEL_103;
              }
              goto LABEL_32;
            }
          }
          sub_251A1B064((uint64_t)&v260, &qword_269BA08C0);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v266);
LABEL_31:

          if (v28)
          {
            uint64_t v2 = v242;
            uint64_t v9 = v241;
            uint64_t v11 = v250;
            int64_t v10 = v245;
            uint64_t v15 = (uint64_t)v251;
            goto LABEL_94;
          }
LABEL_32:
          uint64_t v15 = (uint64_t)v251 + 1;
          ++v29;
          if (v244 == (void *)((char *)v251 + 1))
          {
            uint64_t v15 = (uint64_t)v244;
            uint64_t v2 = v242;
            uint64_t v9 = v241;
            uint64_t v11 = v250;
            int64_t v10 = v245;
            if (v28) {
              goto LABEL_94;
            }
            goto LABEL_103;
          }
        }
        uint64_t v265 = 0;
        long long v263 = 0u;
        long long v264 = 0u;
        uint64_t v12 = &off_26536F000;
LABEL_30:
        sub_251A1B064((uint64_t)&v263, &qword_269BA08C0);
        goto LABEL_31;
      }
      uint64_t v2 = v242;
      uint64_t v9 = v241;
      uint64_t v11 = v250;
      if (v28)
      {
LABEL_94:
        if (v15 < v10) {
          goto LABEL_327;
        }
        if (v10 < v15)
        {
          uint64_t v79 = (uint64_t *)(v239 + 8 * v15);
          int64_t v80 = v15;
          int64_t v81 = v10;
          uint64_t v82 = (uint64_t *)(v11 + 8 * v10);
          do
          {
            if (v81 != --v80)
            {
              if (!v11) {
                goto LABEL_332;
              }
              uint64_t v83 = *v82;
              *uint64_t v82 = *v79;
              *uint64_t v79 = v83;
            }
            ++v81;
            --v79;
            ++v82;
          }
          while (v81 < v80);
          int64_t v10 = v245;
        }
      }
LABEL_103:
      if (v15 < (uint64_t)v244)
      {
        if (__OFSUB__(v15, v10)) {
          goto LABEL_325;
        }
        if (v15 - v10 >= v240)
        {
          int64_t v10 = v245;
        }
        else
        {
          if (__OFADD__(v245, v240)) {
            goto LABEL_328;
          }
          uint64_t v84 = v244;
          if (v245 + v240 < (uint64_t)v244) {
            uint64_t v84 = (void *)(v245 + v240);
          }
          int64_t v10 = v245;
          if ((uint64_t)v84 < v245)
          {
LABEL_329:
            __break(1u);
LABEL_330:
            __break(1u);
LABEL_331:
            __break(1u);
LABEL_332:
            __break(1u);
LABEL_333:
            __break(1u);
LABEL_334:
            sub_251F36670();
            __break(1u);
            JUMPOUT(0x251D6FDB4);
          }
          if ((void *)v15 != v84)
          {
            uint64_t v241 = v9;
            uint64_t v242 = v2;
            uint64_t v85 = v239 + 8 * v15;
            uint64_t v243 = v84;
            do
            {
              uint64_t v251 = (void *)v15;
              char v87 = *(void **)(v11 + 8 * v15);
              unint64_t v88 = v10;
              uint64_t v246 = v85;
              while (1)
              {
                uint64_t v89 = *(void **)v85;
                id v90 = v87;
                id v91 = v89;
                id v92 = objc_msgSend(v90, sel_clusterID);
                int v93 = [v92 (SEL)v12[325]];

                if (v93 > 257)
                {
                  if (v93 <= 511)
                  {
                    if (v93 == 258)
                    {
                      int v94 = 22;
                    }
                    else
                    {
                      if (v93 != 336) {
                        break;
                      }
                      int v94 = 26;
                    }
                  }
                  else
                  {
                    switch(v93)
                    {
                      case 512:
                        int v94 = 17;
                        break;
                      case 513:
                        int v94 = 18;
                        break;
                      case 514:
                        int v94 = 19;
                        break;
                      case 515:
                        goto LABEL_112;
                      case 516:
                        int v94 = 20;
                        break;
                      default:
                        if (v93 == 768)
                        {
                          int v94 = 16;
                        }
                        else
                        {
                          if (v93 != 323615747) {
                            goto LABEL_112;
                          }
                          int v94 = 27;
                        }
                        break;
                    }
                  }
                }
                else
                {
                  int v94 = 0;
                  switch(v93)
                  {
                    case 3:
                      int v94 = 9;
                      break;
                    case 4:
                    case 5:
                    case 7:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 48:
                    case 49:
                    case 52:
                    case 53:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 60:
                    case 61:
                    case 62:
                    case 63:
                    case 66:
                    case 67:
                    case 68:
                    case 70:
                    case 71:
                    case 72:
                    case 73:
                    case 74:
                    case 75:
                    case 76:
                    case 77:
                    case 78:
                    case 79:
                    case 81:
                    case 82:
                    case 83:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 91:
                    case 92:
                    case 93:
                    case 94:
                    case 95:
                      goto LABEL_112;
                    case 6:
                      int v94 = 10;
                      break;
                    case 8:
                      int v94 = 11;
                      break;
                    case 29:
                      break;
                    case 40:
                      int v94 = 1;
                      break;
                    case 46:
                      int v94 = 3;
                      break;
                    case 47:
                      int v94 = 2;
                      break;
                    case 50:
                      int v94 = 4;
                      break;
                    case 51:
                      int v94 = 5;
                      break;
                    case 54:
                      int v94 = 6;
                      break;
                    case 59:
                      int v94 = 14;
                      break;
                    case 64:
                      int v94 = 7;
                      break;
                    case 65:
                      int v94 = 8;
                      break;
                    case 69:
                      int v94 = 12;
                      break;
                    case 80:
                      int v94 = 13;
                      break;
                    case 84:
                      int v94 = 24;
                      break;
                    case 85:
                      int v94 = 25;
                      break;
                    case 96:
                      int v94 = 15;
                      break;
                    case 97:
                      int v94 = 23;
                      break;
                    default:
                      if (v93 != 257) {
                        goto LABEL_112;
                      }
                      int v94 = 21;
                      break;
                  }
                }
                id v95 = objc_msgSend(v90, sel_expectedValues);
                if (!v95) {
                  break;
                }

                id v96 = objc_msgSend(v90, sel_commandID);
                unsigned int v97 = [v96 (SEL)v12[325]];

                id v98 = objc_msgSend(v90, sel_commandFields);
                id v271 = v91;
                unint64_t v252 = v88;
                if (v98)
                {
                  uint64_t v99 = v98;
                  uint64_t v100 = sub_251F35550();
                }
                else
                {
                  uint64_t v100 = 0;
                }
                MatterCommandFields.init(commandFields:)(v100, (uint64_t)&v260);
                long long v101 = v260;
                int v102 = v261;
                unsigned int v103 = v94 - 23;
                char v253 = v90;
                if (v103 >= 4)
                {
                  uint64_t v265 = 0;
                  long long v263 = 0u;
                  long long v264 = 0u;
                  sub_251C32408(v260, *((uint64_t *)&v260 + 1), v261);
                }
                else
                {
                  unint64_t v248 = sub_251C33658();
                  uint64_t v104 = sub_251F36190();
                  uint64_t v249 = v236;
                  uint64_t v105 = *(void *)(v104 - 8);
                  MEMORY[0x270FA5388](v104);
                  unint64_t v107 = (char *)v236 - v106;
                  switch(v103)
                  {
                    case 0u:
                      if (v97) {
                        *(void *)unint64_t v107 = 1;
                      }
                      else {
                        *(void *)unint64_t v107 = 0;
                      }
                      v107[8] = 3;
                      goto LABEL_174;
                    case 1u:
                      if (v102 != 2) {
                        goto LABEL_166;
                      }
                      *(void *)unint64_t v107 = *((void *)&v101 + 1);
                      v107[8] = 0;
                      goto LABEL_172;
                    case 2u:
                      if (v102 != 2) {
                        goto LABEL_166;
                      }
                      *(void *)unint64_t v107 = *((void *)&v101 + 1);
                      v107[8] = 1;
LABEL_172:
                      uint64_t v109 = *((void *)&v101 + 1);
                      uint64_t v108 = v101;
                      char v110 = 2;
                      goto LABEL_173;
                    case 3u:
                      if (v102 == 3)
                      {
                        *(void *)unint64_t v107 = *((void *)&v101 + 1);
                        v107[8] = 2;
                        uint64_t v109 = *((void *)&v101 + 1);
                        uint64_t v108 = v101;
                        char v110 = 3;
LABEL_173:
                        sub_251C6D698(v108, v109, v110);
                      }
                      else
                      {
LABEL_166:
                        if (v102 == 255) {
                          sub_251C6D698(v101, *((uint64_t *)&v101 + 1), 255);
                        }
LABEL_168:
                        *(void *)unint64_t v107 = 0;
                        v107[8] = -1;
                      }
LABEL_174:
                      uint64_t v111 = off_270277040;
                      if (((unsigned int (*)(char *, uint64_t))off_270277040->getEnumTagSinglePayload)(v107, 1) == 1)
                      {
                        (*(void (**)(char *, uint64_t))(v105 + 8))(v107, v104);
                        uint64_t v265 = 0;
                        long long v263 = 0u;
                        long long v264 = 0u;
                      }
                      else
                      {
                        *((void *)&v264 + 1) = &type metadata for StaticRVCClusterGroup.Command;
                        uint64_t v265 = (void *)v248;
                        uint64_t v112 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v263);
                        ((void (*)(uint64_t *, char *, ValueMetadata *))v111->initializeWithTake)(v112, v107, &type metadata for StaticRVCClusterGroup.Command);
                      }
                      sub_251C32408(v101, *((uint64_t *)&v101 + 1), v102);
                      uint64_t v12 = &off_26536F000;
                      id v90 = v253;
                      break;
                    default:
                      goto LABEL_168;
                  }
                }
                id v91 = v271;
                if (!*((void *)&v264 + 1)) {
                  goto LABEL_113;
                }
                sub_251A1A444(&v263, (uint64_t)v266);
                id v113 = objc_msgSend(v91, sel_clusterID);
                Swift::UInt32 v114 = [v113 (SEL)v12[325]];

                ClusterKind.init(rawValue:)(v114);
                int v115 = v257;
                if (v257 == 28
                  || (id v116 = objc_msgSend(v91, sel_expectedValues)) == 0)
                {
                  unint64_t v262 = 0;
                  long long v260 = 0u;
                  long long v261 = 0u;
                  char v86 = v251;
LABEL_212:
                  sub_251A1B064((uint64_t)&v260, &qword_269BA08C0);
                  __swift_destroy_boxed_opaque_existential_0((uint64_t)v266);

LABEL_213:
                  uint64_t v11 = v250;
                  goto LABEL_114;
                }

                id v117 = objc_msgSend(v91, sel_commandID);
                unsigned int v118 = [v117 (SEL)v12[325]];

                id v119 = objc_msgSend(v91, sel_commandFields);
                if (v119)
                {
                  uint64_t v120 = v119;
                  uint64_t v121 = sub_251F35550();
                }
                else
                {
                  uint64_t v121 = 0;
                }
                MatterCommandFields.init(commandFields:)(v121, (uint64_t)&v257);
                uint64_t v122 = v257;
                uint64_t v123 = v258;
                int v124 = v259;
                int v125 = v115 - 23;
                if ((v115 - 23) >= 4)
                {
                  unint64_t v262 = 0;
                  long long v260 = 0u;
                  long long v261 = 0u;
                  sub_251C32408(v257, v258, v259);
                }
                else
                {
                  unint64_t v248 = sub_251C33658();
                  uint64_t v126 = sub_251F36190();
                  uint64_t v249 = v236;
                  uint64_t v127 = *(void *)(v126 - 8);
                  MEMORY[0x270FA5388](v126);
                  uint64_t v129 = (char *)v236 - v128;
                  switch(v125)
                  {
                    case 0:
                      if (v118) {
                        *(void *)uint64_t v129 = 1;
                      }
                      else {
                        *(void *)uint64_t v129 = 0;
                      }
                      v129[8] = 3;
                      goto LABEL_202;
                    case 1:
                      if (v124 != 2) {
                        goto LABEL_194;
                      }
                      *(void *)uint64_t v129 = v123;
                      v129[8] = 0;
                      goto LABEL_200;
                    case 2:
                      if (v124 != 2) {
                        goto LABEL_194;
                      }
                      *(void *)uint64_t v129 = v123;
                      v129[8] = 1;
LABEL_200:
                      uint64_t v130 = v122;
                      uint64_t v131 = v123;
                      char v132 = 2;
                      goto LABEL_201;
                    case 3:
                      if (v124 == 3)
                      {
                        *(void *)uint64_t v129 = v123;
                        v129[8] = 2;
                        uint64_t v130 = v122;
                        uint64_t v131 = v123;
                        char v132 = 3;
LABEL_201:
                        sub_251C6D698(v130, v131, v132);
                      }
                      else
                      {
LABEL_194:
                        if (v124 == 255) {
                          sub_251C6D698(v122, v123, 255);
                        }
LABEL_196:
                        *(void *)uint64_t v129 = 0;
                        v129[8] = -1;
                      }
LABEL_202:
                      uint64_t v133 = off_270277040;
                      if (((unsigned int (*)(char *, uint64_t))off_270277040->getEnumTagSinglePayload)(v129, 1) == 1)
                      {
                        (*(void (**)(char *, uint64_t))(v127 + 8))(v129, v126);
                        unint64_t v262 = 0;
                        long long v260 = 0u;
                        long long v261 = 0u;
                      }
                      else
                      {
                        *((void *)&v261 + 1) = &type metadata for StaticRVCClusterGroup.Command;
                        unint64_t v262 = (void *)v248;
                        uint64_t v134 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v260);
                        ((void (*)(uint64_t *, char *, ValueMetadata *))v133->initializeWithTake)(v134, v129, &type metadata for StaticRVCClusterGroup.Command);
                      }
                      sub_251C32408(v122, v123, v124);
                      uint64_t v12 = &off_26536F000;
                      break;
                    default:
                      goto LABEL_196;
                  }
                }
                char v86 = v251;
                id v91 = v271;
                if (!*((void *)&v261 + 1)) {
                  goto LABEL_212;
                }
                sub_251A1A444(&v260, (uint64_t)&v263);
                uint64_t v135 = v268;
                uint64_t v136 = v269;
                __swift_project_boxed_opaque_existential_1(v266, v268);
                uint64_t v137 = (*(uint64_t (**)(uint64_t, uint64_t))(v136 + 40))(v135, v136);
                uint64_t v138 = *((void *)&v264 + 1);
                char v139 = v265;
                __swift_project_boxed_opaque_existential_1(&v263, *((uint64_t *)&v264 + 1));
                uint64_t v140 = ((uint64_t (*)(uint64_t, void *))v139[5])(v138, v139);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)&v263);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)v266);

                if (v137 >= v140) {
                  goto LABEL_213;
                }
                uint64_t v11 = v250;
                if (!v250) {
                  goto LABEL_330;
                }
                uint64_t v141 = *(void **)v85;
                char v87 = *(void **)(v85 + 8);
                *(void *)uint64_t v85 = v87;
                *(void *)(v85 + 8) = v141;
                v85 -= 8;
                unint64_t v88 = v252 + 1;
                if (v86 == (void *)(v252 + 1)) {
                  goto LABEL_114;
                }
              }
LABEL_112:
              uint64_t v265 = 0;
              long long v263 = 0u;
              long long v264 = 0u;
LABEL_113:
              sub_251A1B064((uint64_t)&v263, &qword_269BA08C0);

              uint64_t v11 = v250;
              char v86 = v251;
LABEL_114:
              uint64_t v15 = (uint64_t)v86 + 1;
              uint64_t v85 = v246 + 8;
              int64_t v10 = v245;
            }
            while ((void *)v15 != v243);
            uint64_t v15 = (uint64_t)v243;
            uint64_t v2 = v242;
            uint64_t v9 = v241;
            if ((uint64_t)v243 < v245) {
              goto LABEL_320;
            }
            goto LABEL_216;
          }
        }
      }
      if (v15 < v10) {
        goto LABEL_320;
      }
LABEL_216:
      BOOL v142 = v9;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v9 = v142;
      }
      else {
        uint64_t v9 = sub_251ECD5C4(0, *((void *)v142 + 2) + 1, 1, v142);
      }
      unint64_t v144 = *((void *)v9 + 2);
      unint64_t v143 = *((void *)v9 + 3);
      unint64_t v14 = v144 + 1;
      uint64_t v11 = v250;
      int64_t v145 = v245;
      if (v144 >= v143 >> 1)
      {
        uint64_t v228 = sub_251ECD5C4((char *)(v143 > 1), v144 + 1, 1, v9);
        int64_t v145 = v245;
        uint64_t v11 = v250;
        uint64_t v9 = v228;
      }
      *((void *)v9 + 2) = v14;
      char v146 = v9 + 32;
      uint64_t v147 = &v9[16 * v144 + 32];
      *(void *)uint64_t v147 = v145;
      *((void *)v147 + 1) = v15;
      uint64_t v251 = (void *)v15;
      if (v144)
      {
        while (1)
        {
          unint64_t v148 = v14 - 1;
          if (v14 >= 4)
          {
            unint64_t v153 = &v146[16 * v14];
            uint64_t v154 = *((void *)v153 - 8);
            uint64_t v155 = *((void *)v153 - 7);
            BOOL v159 = __OFSUB__(v155, v154);
            uint64_t v156 = v155 - v154;
            if (v159) {
              goto LABEL_309;
            }
            uint64_t v158 = *((void *)v153 - 6);
            uint64_t v157 = *((void *)v153 - 5);
            BOOL v159 = __OFSUB__(v157, v158);
            uint64_t v151 = v157 - v158;
            char v152 = v159;
            if (v159) {
              goto LABEL_310;
            }
            unint64_t v160 = v14 - 2;
            unint64_t v161 = &v146[16 * v14 - 32];
            uint64_t v163 = *(void *)v161;
            uint64_t v162 = *((void *)v161 + 1);
            BOOL v159 = __OFSUB__(v162, v163);
            uint64_t v164 = v162 - v163;
            if (v159) {
              goto LABEL_312;
            }
            BOOL v159 = __OFADD__(v151, v164);
            uint64_t v165 = v151 + v164;
            if (v159) {
              goto LABEL_315;
            }
            if (v165 >= v156)
            {
              uint64_t v183 = &v146[16 * v148];
              uint64_t v185 = *(void *)v183;
              uint64_t v184 = *((void *)v183 + 1);
              BOOL v159 = __OFSUB__(v184, v185);
              uint64_t v186 = v184 - v185;
              if (v159) {
                goto LABEL_319;
              }
              BOOL v176 = v151 < v186;
              goto LABEL_252;
            }
          }
          else
          {
            if (v14 != 3)
            {
              uint64_t v177 = *((void *)v9 + 4);
              uint64_t v178 = *((void *)v9 + 5);
              BOOL v159 = __OFSUB__(v178, v177);
              uint64_t v170 = v178 - v177;
              char v171 = v159;
              goto LABEL_246;
            }
            uint64_t v150 = *((void *)v9 + 4);
            uint64_t v149 = *((void *)v9 + 5);
            BOOL v159 = __OFSUB__(v149, v150);
            uint64_t v151 = v149 - v150;
            char v152 = v159;
          }
          if (v152) {
            goto LABEL_311;
          }
          unint64_t v160 = v14 - 2;
          uint64_t v166 = &v146[16 * v14 - 32];
          uint64_t v168 = *(void *)v166;
          uint64_t v167 = *((void *)v166 + 1);
          BOOL v169 = __OFSUB__(v167, v168);
          uint64_t v170 = v167 - v168;
          char v171 = v169;
          if (v169) {
            goto LABEL_314;
          }
          uint64_t v172 = &v146[16 * v148];
          uint64_t v174 = *(void *)v172;
          uint64_t v173 = *((void *)v172 + 1);
          BOOL v159 = __OFSUB__(v173, v174);
          uint64_t v175 = v173 - v174;
          if (v159) {
            goto LABEL_317;
          }
          if (__OFADD__(v170, v175)) {
            goto LABEL_318;
          }
          if (v170 + v175 >= v151)
          {
            BOOL v176 = v151 < v175;
LABEL_252:
            if (v176) {
              unint64_t v148 = v160;
            }
            goto LABEL_254;
          }
LABEL_246:
          if (v171) {
            goto LABEL_313;
          }
          int v179 = &v146[16 * v148];
          uint64_t v181 = *(void *)v179;
          uint64_t v180 = *((void *)v179 + 1);
          BOOL v159 = __OFSUB__(v180, v181);
          uint64_t v182 = v180 - v181;
          if (v159) {
            goto LABEL_316;
          }
          if (v182 < v170) {
            goto LABEL_14;
          }
LABEL_254:
          unint64_t v187 = v148 - 1;
          if (v148 - 1 >= v14)
          {
            __break(1u);
LABEL_306:
            __break(1u);
LABEL_307:
            __break(1u);
LABEL_308:
            __break(1u);
LABEL_309:
            __break(1u);
LABEL_310:
            __break(1u);
LABEL_311:
            __break(1u);
LABEL_312:
            __break(1u);
LABEL_313:
            __break(1u);
LABEL_314:
            __break(1u);
LABEL_315:
            __break(1u);
LABEL_316:
            __break(1u);
LABEL_317:
            __break(1u);
LABEL_318:
            __break(1u);
LABEL_319:
            __break(1u);
LABEL_320:
            __break(1u);
LABEL_321:
            __break(1u);
LABEL_322:
            __break(1u);
LABEL_323:
            __break(1u);
LABEL_324:
            __break(1u);
LABEL_325:
            __break(1u);
LABEL_326:
            __break(1u);
LABEL_327:
            __break(1u);
LABEL_328:
            __break(1u);
            goto LABEL_329;
          }
          if (!v11) {
            goto LABEL_331;
          }
          long long v188 = v9;
          unint64_t v189 = &v146[16 * v187];
          uint64_t v190 = *(void *)v189;
          int v191 = &v146[16 * v148];
          uint64_t v192 = *((void *)v191 + 1);
          sub_251D7091C((void **)(v11 + 8 * *(void *)v189), (void **)(v11 + 8 * *(void *)v191), v11 + 8 * v192, v247);
          if (v2) {
            goto LABEL_303;
          }
          if (v192 < v190) {
            goto LABEL_306;
          }
          if (v148 > *((void *)v188 + 2)) {
            goto LABEL_307;
          }
          *(void *)unint64_t v189 = v190;
          *(void *)&v146[16 * v187 + 8] = v192;
          unint64_t v193 = *((void *)v188 + 2);
          if (v148 >= v193) {
            goto LABEL_308;
          }
          unint64_t v14 = v193 - 1;
          memmove(&v146[16 * v148], v191 + 16, 16 * (v193 - 1 - v148));
          uint64_t v9 = v188;
          *((void *)v188 + 2) = v193 - 1;
          uint64_t v11 = v250;
          uint64_t v12 = &off_26536F000;
          if (v193 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v14 = 1;
LABEL_14:
      long long v13 = v244;
      int64_t v10 = (int64_t)v251;
      if ((uint64_t)v251 >= (uint64_t)v244)
      {
        if (v14 < 2)
        {
LABEL_303:
          swift_bridgeObjectRelease();
          *(void *)((v270 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_251F35AE0();
          swift_bridgeObjectRelease();
          return;
        }
LABEL_290:
        uint64_t v229 = *v237;
        while (1)
        {
          unint64_t v230 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_321;
          }
          if (!v229) {
            goto LABEL_333;
          }
          uint64_t v231 = v9;
          uint64_t v232 = *(void *)&v9[16 * v230 + 32];
          uint64_t v233 = *(void *)&v9[16 * v14 + 24];
          sub_251D7091C((void **)(v229 + 8 * v232), (void **)(v229 + 8 * *(void *)&v9[16 * v14 + 16]), v229 + 8 * v233, v247);
          if (v2) {
            goto LABEL_303;
          }
          if (v233 < v232) {
            goto LABEL_322;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v231 = sub_251ECDC38((uint64_t)v231);
          }
          if (v230 >= *((void *)v231 + 2)) {
            goto LABEL_323;
          }
          uint64_t v234 = &v231[16 * v230 + 32];
          *(void *)uint64_t v234 = v232;
          *((void *)v234 + 1) = v233;
          unint64_t v235 = *((void *)v231 + 2);
          if (v14 > v235) {
            goto LABEL_324;
          }
          memmove(&v231[16 * v14 + 16], &v231[16 * v14 + 32], 16 * (v235 - v14));
          uint64_t v9 = v231;
          *((void *)v231 + 2) = v235 - 1;
          unint64_t v14 = v235 - 1;
          if (v235 <= 2) {
            goto LABEL_303;
          }
        }
      }
    }
    uint64_t v265 = 0;
    long long v263 = 0u;
    long long v264 = 0u;
LABEL_21:
    sub_251A1B064((uint64_t)&v263, &qword_269BA08C0);
LABEL_22:

    BOOL v28 = 0;
    goto LABEL_23;
  }
  if (v4 < 0) {
    goto LABEL_326;
  }
  if (v4) {
    sub_251D6FF84(0, v4, 1, a1);
  }
}

void sub_251D6FF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v61 = a1;
  uint64_t v60 = a2;
  if (a3 != a2)
  {
    uint64_t v68 = *a4;
    uint64_t v4 = v68 + 8 * a3 - 8;
    uint64_t v5 = &off_26536F000;
    uint64_t v63 = MEMORY[0x263F8EE58] + 8;
    do
    {
      uint64_t v7 = *(void **)(v68 + 8 * a3);
      uint64_t v8 = v61;
      uint64_t v62 = v4;
      uint64_t v69 = a3;
      while (1)
      {
        uint64_t v9 = *(void **)v4;
        id v10 = v7;
        id v11 = v9;
        id v12 = objc_msgSend(v10, sel_clusterID);
        Swift::UInt32 v13 = [v12 (SEL)v5[325]];

        ClusterKind.init(rawValue:)(v13);
        int v14 = v74;
        if (v74 == 28
          || (id v15 = objc_msgSend(v10, sel_expectedValues)) == 0)
        {
          unint64_t v79 = 0;
          long long v77 = 0u;
          long long v78 = 0u;
LABEL_5:
          sub_251A1B064((uint64_t)&v77, &qword_269BA08C0);
          goto LABEL_6;
        }
        uint64_t v70 = v8;

        id v16 = objc_msgSend(v10, sel_commandID);
        unsigned int v17 = [v16 (SEL)v5[325]];

        id v18 = objc_msgSend(v10, sel_commandFields);
        id v83 = v11;
        if (v18)
        {
          id v19 = v18;
          uint64_t v20 = sub_251F35550();
        }
        else
        {
          uint64_t v20 = 0;
        }
        MatterCommandFields.init(commandFields:)(v20, (uint64_t)&v74);
        unsigned long long v21 = v74;
        int v22 = v75;
        int v23 = v14 - 23;
        if ((v14 - 23) >= 4)
        {
          unint64_t v79 = 0;
          long long v77 = 0u;
          long long v78 = 0u;
          sub_251C32408(v74, *((uint64_t *)&v74 + 1), v75);
          uint64_t v5 = &off_26536F000;
        }
        else
        {
          unint64_t v66 = sub_251C33658();
          uint64_t v65 = sub_251F36190();
          uint64_t v64 = *(void *)(v65 - 8);
          MEMORY[0x270FA5388](v65);
          id v25 = &v59[-v24];
          uint64_t v67 = v59;
          switch(v23)
          {
            case 0:
              uint64_t v5 = &off_26536F000;
              if (v17) {
                *(void *)id v25 = 1;
              }
              else {
                *(void *)id v25 = 0;
              }
              v25[8] = 3;
              goto LABEL_33;
            case 1:
              if (v22 != 2) {
                goto LABEL_25;
              }
              *(void *)id v25 = *((void *)&v21 + 1);
              v25[8] = 0;
              goto LABEL_23;
            case 2:
              if (v22 != 2) {
                goto LABEL_25;
              }
              *(void *)id v25 = *((void *)&v21 + 1);
              v25[8] = 1;
LABEL_23:
              uint64_t v27 = v21 >> 64;
              uint64_t v26 = v21;
              char v28 = 2;
              goto LABEL_31;
            case 3:
              if (v22 == 3)
              {
                *(void *)id v25 = *((void *)&v21 + 1);
                v25[8] = 2;
                uint64_t v27 = v21 >> 64;
                uint64_t v26 = v21;
                char v28 = 3;
LABEL_31:
                sub_251C6D698(v26, v27, v28);
              }
              else
              {
LABEL_25:
                if (v22 == 255) {
                  sub_251C6D698(v21, *((uint64_t *)&v21 + 1), 255);
                }
LABEL_27:
                *(void *)id v25 = 0;
                v25[8] = -1;
              }
              uint64_t v5 = &off_26536F000;
LABEL_33:
              uint64_t v29 = off_270277040;
              if (((unsigned int (*)(unsigned char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v25, 1, &type metadata for StaticRVCClusterGroup.Command) == 1)
              {
                (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v25, v65);
                unint64_t v79 = 0;
                long long v77 = 0u;
                long long v78 = 0u;
              }
              else
              {
                *((void *)&v78 + 1) = &type metadata for StaticRVCClusterGroup.Command;
                unint64_t v79 = v66;
                boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v77);
                ((void (*)(uint64_t *, unsigned char *, ValueMetadata *))v29->initializeWithTake)(boxed_opaque_existential_1, v25, &type metadata for StaticRVCClusterGroup.Command);
              }
              sub_251C32408(v21, *((uint64_t *)&v21 + 1), v22);
              break;
            default:
              goto LABEL_27;
          }
        }
        id v11 = v83;
        if (!*((void *)&v78 + 1)) {
          goto LABEL_5;
        }
        sub_251A1A444(&v77, (uint64_t)v80);
        id v31 = objc_msgSend(v11, sel_clusterID);
        Swift::UInt32 v32 = [v31 (SEL)v5[325]];

        ClusterKind.init(rawValue:)(v32);
        int v33 = v71;
        if (v71 == 28) {
          break;
        }
        id v34 = objc_msgSend(v11, sel_expectedValues);
        if (!v34) {
          break;
        }

        id v35 = objc_msgSend(v11, sel_commandID);
        unsigned int v36 = [v35 (SEL)v5[325]];

        id v37 = objc_msgSend(v11, sel_commandFields);
        if (v37)
        {
          unsigned int v38 = v37;
          uint64_t v39 = sub_251F35550();
        }
        else
        {
          uint64_t v39 = 0;
        }
        MatterCommandFields.init(commandFields:)(v39, (uint64_t)&v71);
        uint64_t v41 = v71;
        uint64_t v40 = v72;
        int v42 = v73;
        int v43 = v33 - 23;
        if ((v33 - 23) >= 4)
        {
          unint64_t v76 = 0;
          unsigned long long v74 = 0u;
          long long v75 = 0u;
          sub_251C32408(v71, v72, v73);
          uint64_t v5 = &off_26536F000;
        }
        else
        {
          unint64_t v66 = sub_251C33658();
          uint64_t v65 = sub_251F36190();
          uint64_t v64 = *(void *)(v65 - 8);
          MEMORY[0x270FA5388](v65);
          uint64_t v45 = &v59[-v44];
          uint64_t v67 = v59;
          switch(v43)
          {
            case 0:
              uint64_t v5 = &off_26536F000;
              if (v36) {
                *(void *)uint64_t v45 = 1;
              }
              else {
                *(void *)uint64_t v45 = 0;
              }
              v45[8] = 3;
              goto LABEL_62;
            case 1:
              if (v42 != 2) {
                goto LABEL_54;
              }
              *(void *)uint64_t v45 = v40;
              v45[8] = 0;
              goto LABEL_52;
            case 2:
              if (v42 != 2) {
                goto LABEL_54;
              }
              *(void *)uint64_t v45 = v40;
              v45[8] = 1;
LABEL_52:
              uint64_t v46 = v41;
              uint64_t v47 = v40;
              char v48 = 2;
              goto LABEL_60;
            case 3:
              if (v42 == 3)
              {
                *(void *)uint64_t v45 = v40;
                v45[8] = 2;
                uint64_t v46 = v41;
                uint64_t v47 = v40;
                char v48 = 3;
LABEL_60:
                sub_251C6D698(v46, v47, v48);
              }
              else
              {
LABEL_54:
                if (v42 == 255) {
                  sub_251C6D698(v41, v40, 255);
                }
LABEL_56:
                *(void *)uint64_t v45 = 0;
                v45[8] = -1;
              }
              uint64_t v5 = &off_26536F000;
LABEL_62:
              uint64_t v49 = off_270277040;
              if (((unsigned int (*)(unsigned char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v45, 1, &type metadata for StaticRVCClusterGroup.Command) == 1)
              {
                (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v45, v65);
                unint64_t v76 = 0;
                unsigned long long v74 = 0u;
                long long v75 = 0u;
              }
              else
              {
                *((void *)&v75 + 1) = &type metadata for StaticRVCClusterGroup.Command;
                unint64_t v76 = v66;
                char v50 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v74);
                ((void (*)(uint64_t *, unsigned char *, ValueMetadata *))v49->initializeWithTake)(v50, v45, &type metadata for StaticRVCClusterGroup.Command);
              }
              sub_251C32408(v41, v40, v42);
              break;
            default:
              goto LABEL_56;
          }
        }
        id v11 = v83;
        if (!*((void *)&v75 + 1)) {
          goto LABEL_72;
        }
        sub_251A1A444((long long *)&v74, (uint64_t)&v77);
        uint64_t v51 = v81;
        uint64_t v52 = v82;
        __swift_project_boxed_opaque_existential_1(v80, v81);
        uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 40))(v51, v52);
        uint64_t v54 = *((void *)&v78 + 1);
        unint64_t v55 = v79;
        __swift_project_boxed_opaque_existential_1(&v77, *((uint64_t *)&v78 + 1));
        uint64_t v56 = (*(uint64_t (**)(uint64_t, unint64_t))(v55 + 40))(v54, v55);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v77);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v80);

        uint64_t v6 = v69;
        uint64_t v57 = v70;
        if (v53 < v56)
        {
          if (!v68)
          {
            __break(1u);
            JUMPOUT(0x251D708FCLL);
          }
          unsigned int v58 = *(void **)v4;
          uint64_t v7 = *(void **)(v4 + 8);
          *(void *)uint64_t v4 = v7;
          *(void *)(v4 + 8) = v58;
          v4 -= 8;
          uint64_t v8 = v57 + 1;
          if (v6 != v8) {
            continue;
          }
        }
        goto LABEL_7;
      }
      unint64_t v76 = 0;
      unsigned long long v74 = 0u;
      long long v75 = 0u;
LABEL_72:
      sub_251A1B064((uint64_t)&v74, &qword_269BA08C0);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v80);
LABEL_6:

      uint64_t v6 = v69;
LABEL_7:
      a3 = v6 + 1;
      uint64_t v4 = v62 + 8;
    }
    while (a3 != v60);
  }
}

uint64_t sub_251D7091C(void **__src, void **a2, unint64_t a3, void **__dst)
{
  uint64_t v4 = __dst;
  unint64_t v5 = a3;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  BOOL v159 = __dst;
  unint64_t v160 = __src;
  if (v9 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_100;
    }
    uint64_t v64 = a2;
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    uint64_t v65 = &v4[v13];
    uint64_t v158 = v65;
    unint64_t v160 = v64;
    if (v11 < 8 || v6 >= v64)
    {
LABEL_99:
      sub_251ECD7AC(&v160, &v159, &v158);
      return 1;
    }
    unint64_t v66 = (void **)(v5 - 8);
    v126[1] = MEMORY[0x263F8EE58] + 8;
    uint64_t v67 = v64;
    char v139 = v4;
    uint64_t v140 = v6;
    while (1)
    {
      unint64_t v161 = v64;
      uint64_t v141 = v66 + 1;
      uint64_t v68 = v65 - 1;
      uint64_t v69 = *--v67;
      id v70 = *(v65 - 1);
      id v142 = v69;
      id v71 = objc_msgSend(v70, sel_clusterID);
      unsigned int v72 = objc_msgSend(v71, sel_unsignedIntValue);

      Swift::UInt32 v73 = v72;
      id v74 = v70;
      ClusterKind.init(rawValue:)(v73);
      int v75 = v149;
      if (v149 == 28
        || (id v76 = objc_msgSend(v70, sel_expectedValues)) == 0)
      {
        unint64_t v154 = 0;
        long long v152 = 0u;
        long long v153 = 0u;
        id v83 = v142;
LABEL_64:
        sub_251A1B064((uint64_t)&v152, &qword_269BA08C0);

        goto LABEL_65;
      }
      long long v77 = v76;
      uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
      uint64_t v136 = (void *)sub_251F35AC0();

      id v78 = objc_msgSend(v70, sel_commandID);
      unsigned int v79 = objc_msgSend(v78, sel_unsignedIntValue);

      id v138 = v74;
      id v80 = objc_msgSend(v74, sel_commandFields);
      if (v80)
      {
        uint64_t v81 = v80;
        uint64_t v82 = sub_251F35550();
      }
      else
      {
        uint64_t v82 = 0;
      }
      MatterCommandFields.init(commandFields:)(v82, (uint64_t)&v149);
      uint64_t v85 = *((void *)&v149 + 1);
      uint64_t v137 = (void *)v149;
      int v86 = v150;
      if ((v75 - 23) >= 4)
      {
        unint64_t v154 = 0;
        long long v152 = 0u;
        long long v153 = 0u;
        swift_bridgeObjectRelease();
        sub_251C32408((uint64_t)v137, v85, v86);
      }
      else
      {
        char v132 = v65;
        unint64_t v129 = sub_251C33658();
        LODWORD(v130) = v79;
        uint64_t v87 = (uint64_t)v137;
        *(void *)&long long v147 = v137;
        *((void *)&v147 + 1) = v85;
        unsigned __int8 v148 = v86;
        uint64_t v88 = sub_251F36190();
        uint64_t v131 = v126;
        uint64_t v128 = v88;
        uint64_t v127 = *(void *)(v88 - 8);
        MEMORY[0x270FA5388](v88);
        id v90 = (char *)v126 - v89;
        LOBYTE(v144) = v75;
        swift_bridgeObjectRetain();
        uint64_t v133 = v85;
        LODWORD(v134) = v86;
        sub_251C6D698(v87, v85, v86);
        StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)(&v144, v130, (uint64_t)&v147, (uint64_t)v90);
        id v91 = off_270277040;
        if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v90, 1, &type metadata for StaticRVCClusterGroup.Command) == 1)
        {
          (*(void (**)(char *, uint64_t))(v127 + 8))(v90, v128);
          long long v152 = 0u;
          long long v153 = 0u;
          unint64_t v154 = 0;
        }
        else
        {
          *((void *)&v153 + 1) = &type metadata for StaticRVCClusterGroup.Command;
          unint64_t v154 = v129;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v152);
          ((void (*)(uint64_t *, char *, ValueMetadata *))v91->initializeWithTake)(boxed_opaque_existential_1, v90, &type metadata for StaticRVCClusterGroup.Command);
        }
        swift_bridgeObjectRelease();
        sub_251C32408((uint64_t)v137, v133, v134);
        uint64_t v4 = v139;
        uint64_t v65 = v132;
      }
      id v83 = v142;
      id v74 = v138;
      if (!*((void *)&v153 + 1)) {
        goto LABEL_64;
      }
      sub_251A1A444(&v152, (uint64_t)&v155);
      id v93 = objc_msgSend(v83, sel_clusterID);
      unsigned int v94 = objc_msgSend(v93, sel_unsignedIntValue);

      Swift::UInt32 v95 = v94;
      id v96 = v142;
      ClusterKind.init(rawValue:)(v95);
      int v97 = v147;
      if (v147 == 28
        || (id v98 = objc_msgSend(v96, sel_expectedValues)) == 0)
      {
        uint64_t v151 = 0;
        long long v149 = 0u;
        long long v150 = 0u;
LABEL_85:
        sub_251A1B064((uint64_t)&v149, &qword_269BA08C0);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v155);

        goto LABEL_65;
      }
      uint64_t v99 = v98;
      uint64_t v100 = sub_251F35AC0();

      id v101 = objc_msgSend(v96, sel_commandID);
      LODWORD(v136) = objc_msgSend(v101, sel_unsignedIntValue);

      id v102 = objc_msgSend(v96, sel_commandFields);
      if (v102)
      {
        unsigned int v103 = v102;
        uint64_t v104 = sub_251F35550();
      }
      else
      {
        uint64_t v104 = 0;
      }
      MatterCommandFields.init(commandFields:)(v104, (uint64_t)&v147);
      unsigned long long v107 = v147;
      uint64_t v105 = v107 >> 64;
      uint64_t v106 = v107;
      int v108 = v148;
      if ((v97 - 23) >= 4)
      {
        uint64_t v151 = 0;
        long long v149 = 0u;
        long long v150 = 0u;
        swift_bridgeObjectRelease();
        uint64_t v114 = v106;
        uint64_t v115 = v105;
        char v116 = v108;
      }
      else
      {
        uint64_t v131 = (void *)sub_251C33658();
        uint64_t v144 = v106;
        uint64_t v145 = v105;
        char v146 = v108;
        uint64_t v137 = (void *)v100;
        uint64_t v109 = sub_251F36190();
        char v132 = (void **)v126;
        uint64_t v130 = v109;
        unint64_t v129 = *(void *)(v109 - 8);
        MEMORY[0x270FA5388](v109);
        int v110 = v108;
        uint64_t v112 = (char *)v126 - v111;
        char v143 = v97;
        swift_bridgeObjectRetain();
        uint64_t v133 = v106;
        unint64_t v134 = v105;
        LODWORD(v135) = v110;
        sub_251C6D698(v106, v105, v110);
        StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)(&v143, (int)v136, (uint64_t)&v144, (uint64_t)v112);
        id v113 = off_270277040;
        if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v112, 1, &type metadata for StaticRVCClusterGroup.Command) != 1)
        {
          *((void *)&v150 + 1) = &type metadata for StaticRVCClusterGroup.Command;
          uint64_t v151 = v131;
          id v117 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v149);
          ((void (*)(uint64_t *, char *, ValueMetadata *))v113->initializeWithTake)(v117, v112, &type metadata for StaticRVCClusterGroup.Command);
          swift_bridgeObjectRelease();
          sub_251C32408(v133, v134, v135);
          goto LABEL_93;
        }
        (*(void (**)(char *, uint64_t))(v129 + 8))(v112, v130);
        long long v149 = 0u;
        long long v150 = 0u;
        uint64_t v151 = 0;
        swift_bridgeObjectRelease();
        uint64_t v114 = v133;
        uint64_t v115 = v134;
        char v116 = v135;
      }
      sub_251C32408(v114, v115, v116);
LABEL_93:
      uint64_t v4 = v139;
      id v96 = v142;
      if (!*((void *)&v150 + 1)) {
        goto LABEL_85;
      }
      sub_251A1A444(&v149, (uint64_t)&v152);
      unsigned int v118 = v96;
      uint64_t v119 = v156;
      uint64_t v120 = v157;
      __swift_project_boxed_opaque_existential_1(&v155, v156);
      uint64_t v137 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v120 + 40))(v119, v120);
      uint64_t v121 = *((void *)&v153 + 1);
      unint64_t v122 = v154;
      __swift_project_boxed_opaque_existential_1(&v152, *((uint64_t *)&v153 + 1));
      uint64_t v123 = v121;
      uint64_t v4 = v139;
      uint64_t v124 = (*(uint64_t (**)(uint64_t, unint64_t))(v122 + 40))(v123, v122);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v152);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v155);

      if ((uint64_t)v137 < v124)
      {
        unint64_t v84 = (unint64_t)v140;
        if (v141 != v161 || v66 >= v161) {
          void *v66 = *v67;
        }
        unint64_t v160 = v67;
        if (v65 <= v4) {
          goto LABEL_99;
        }
        goto LABEL_70;
      }
LABEL_65:
      uint64_t v158 = v68;
      unint64_t v84 = (unint64_t)v140;
      if (v141 < v65 || v66 >= v65 || v141 != v65) {
        void *v66 = *v68;
      }
      uint64_t v67 = v161;
      uint64_t v65 = v68;
      if (v68 <= v4) {
        goto LABEL_99;
      }
LABEL_70:
      --v66;
      uint64_t v64 = v67;
      if ((unint64_t)v67 <= v84) {
        goto LABEL_99;
      }
    }
  }
  if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst) {
      memmove(__dst, __src, 8 * v9);
    }
    uint64_t v141 = &v4[v9];
    uint64_t v158 = v141;
    if (v7 >= 8)
    {
      int v14 = a2;
      if ((unint64_t)a2 < v5)
      {
        uint64_t v131 = (void *)(MEMORY[0x263F8EE58] + 8);
        uint64_t v135 = v5;
        while (1)
        {
          id v15 = *v4;
          id v16 = *v14;
          id v142 = v15;
          id v17 = objc_msgSend(v16, sel_clusterID);
          Swift::UInt32 v18 = objc_msgSend(v17, sel_unsignedIntValue);

          ClusterKind.init(rawValue:)(v18);
          int v19 = v149;
          if (v149 == 28) {
            break;
          }
          id v20 = objc_msgSend(v16, sel_expectedValues);
          if (!v20) {
            break;
          }
          unsigned long long v21 = v20;
          int v22 = (void *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
          sub_251F35AC0();

          id v23 = objc_msgSend(v16, sel_commandID);
          LODWORD(v140) = objc_msgSend(v23, sel_unsignedIntValue);

          id v24 = objc_msgSend(v16, sel_commandFields);
          char v139 = v4;
          id v138 = v22;
          if (v24)
          {
            id v25 = v24;
            uint64_t v26 = sub_251F35550();
          }
          else
          {
            uint64_t v26 = 0;
          }
          MatterCommandFields.init(commandFields:)(v26, (uint64_t)&v149);
          long long v29 = v149;
          int v30 = v150;
          if ((v19 - 23) >= 4)
          {
            unint64_t v154 = 0;
            long long v152 = 0u;
            long long v153 = 0u;
            swift_bridgeObjectRelease();
            sub_251C32408(v29, *((uint64_t *)&v29 + 1), v30);
          }
          else
          {
            unint64_t v161 = v14;
            unint64_t v134 = sub_251C33658();
            long long v147 = v29;
            unsigned __int8 v148 = v30;
            uint64_t v31 = sub_251F36190();
            uint64_t v136 = v126;
            uint64_t v133 = v31;
            char v132 = *(void ***)(v31 - 8);
            MEMORY[0x270FA5388](v31);
            int v33 = (char *)v126 - v32;
            LOBYTE(v144) = v19;
            swift_bridgeObjectRetain();
            LODWORD(v137) = v30;
            sub_251C6D698(v29, *((uint64_t *)&v29 + 1), v30);
            StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)(&v144, (int)v140, (uint64_t)&v147, (uint64_t)v33);
            id v34 = off_270277040;
            if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v33, 1, &type metadata for StaticRVCClusterGroup.Command) == 1)
            {
              ((void (*)(char *, uint64_t))v132[1])(v33, v133);
              long long v152 = 0u;
              long long v153 = 0u;
              unint64_t v154 = 0;
            }
            else
            {
              *((void *)&v153 + 1) = &type metadata for StaticRVCClusterGroup.Command;
              unint64_t v154 = v134;
              id v35 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v152);
              ((void (*)(uint64_t *, char *, ValueMetadata *))v34->initializeWithTake)(v35, v33, &type metadata for StaticRVCClusterGroup.Command);
            }
            swift_bridgeObjectRelease();
            sub_251C32408(v29, *((uint64_t *)&v29 + 1), (char)v137);
            int v14 = v161;
            unint64_t v5 = v135;
          }
          uint64_t v4 = v139;
          id v27 = v142;
          if (!*((void *)&v153 + 1)) {
            goto LABEL_18;
          }
          sub_251A1A444(&v152, (uint64_t)&v155);
          id v36 = objc_msgSend(v27, sel_clusterID);
          unsigned int v37 = objc_msgSend(v36, sel_unsignedIntValue);

          Swift::UInt32 v38 = v37;
          id v39 = v142;
          ClusterKind.init(rawValue:)(v38);
          int v40 = v147;
          if (v147 == 28
            || (id v41 = objc_msgSend(v39, sel_expectedValues)) == 0)
          {
            uint64_t v151 = 0;
            long long v149 = 0u;
            long long v150 = 0u;
LABEL_38:
            sub_251A1B064((uint64_t)&v149, &qword_269BA08C0);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v155);

            goto LABEL_19;
          }
          int v42 = v41;
          sub_251F35AC0();

          id v43 = objc_msgSend(v39, sel_commandID);
          LODWORD(v140) = objc_msgSend(v43, sel_unsignedIntValue);

          id v44 = objc_msgSend(v39, sel_commandFields);
          if (v44)
          {
            uint64_t v45 = v44;
            uint64_t v46 = sub_251F35550();
          }
          else
          {
            uint64_t v46 = 0;
          }
          MatterCommandFields.init(commandFields:)(v46, (uint64_t)&v147);
          unsigned long long v49 = v147;
          uint64_t v47 = v49 >> 64;
          uint64_t v48 = v49;
          int v50 = v148;
          if ((v40 - 23) >= 4)
          {
            uint64_t v151 = 0;
            long long v149 = 0u;
            long long v150 = 0u;
            swift_bridgeObjectRelease();
            sub_251C32408(v48, v47, v50);
          }
          else
          {
            unint64_t v161 = v14;
            uint64_t v136 = (void *)sub_251C33658();
            uint64_t v144 = v48;
            uint64_t v145 = v47;
            char v146 = v50;
            uint64_t v51 = sub_251F36190();
            uint64_t v137 = v126;
            unint64_t v134 = v51;
            uint64_t v133 = *(void *)(v51 - 8);
            MEMORY[0x270FA5388](v51);
            uint64_t v53 = (char *)v126 - v52;
            char v143 = v40;
            swift_bridgeObjectRetain();
            LODWORD(v138) = v50;
            sub_251C6D698(v48, v47, v50);
            StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)(&v143, (int)v140, (uint64_t)&v144, (uint64_t)v53);
            uint64_t v54 = off_270277040;
            if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v53, 1, &type metadata for StaticRVCClusterGroup.Command) == 1)
            {
              (*(void (**)(char *, unint64_t))(v133 + 8))(v53, v134);
              long long v149 = 0u;
              long long v150 = 0u;
              uint64_t v151 = 0;
            }
            else
            {
              *((void *)&v150 + 1) = &type metadata for StaticRVCClusterGroup.Command;
              uint64_t v151 = v136;
              unint64_t v55 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v149);
              ((void (*)(uint64_t *, char *, ValueMetadata *))v54->initializeWithTake)(v55, v53, &type metadata for StaticRVCClusterGroup.Command);
            }
            swift_bridgeObjectRelease();
            sub_251C32408(v48, v47, (char)v138);
            int v14 = v161;
          }
          uint64_t v4 = v139;
          unint64_t v5 = v135;
          id v39 = v142;
          if (!*((void *)&v150 + 1)) {
            goto LABEL_38;
          }
          sub_251A1A444(&v149, (uint64_t)&v152);
          uint64_t v56 = v156;
          uint64_t v57 = v157;
          __swift_project_boxed_opaque_existential_1(&v155, v156);
          uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 40))(v56, v57);
          uint64_t v59 = *((void *)&v153 + 1);
          unint64_t v60 = v154;
          __swift_project_boxed_opaque_existential_1(&v152, *((uint64_t *)&v153 + 1));
          uint64_t v61 = *(uint64_t (**)(uint64_t, unint64_t))(v60 + 40);
          unint64_t v62 = v60;
          uint64_t v4 = v139;
          uint64_t v63 = v61(v59, v62);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v152);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v155);

          if (v58 >= v63) {
            goto LABEL_19;
          }
          char v28 = v14 + 1;
          if (v6 < v14 || v6 >= v28 || v6 != v14) {
            *uint64_t v6 = *v14;
          }
LABEL_22:
          unint64_t v160 = ++v6;
          if (v4 < v141)
          {
            int v14 = v28;
            if ((unint64_t)v28 < v5) {
              continue;
            }
          }
          goto LABEL_99;
        }
        unint64_t v154 = 0;
        long long v152 = 0u;
        long long v153 = 0u;
        id v27 = v142;
LABEL_18:
        sub_251A1B064((uint64_t)&v152, &qword_269BA08C0);

LABEL_19:
        if (v6 != v4) {
          *uint64_t v6 = *v4;
        }
        BOOL v159 = ++v4;
        char v28 = v14;
        goto LABEL_22;
      }
    }
    goto LABEL_99;
  }
LABEL_100:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

unint64_t sub_251D71D84()
{
  unint64_t result = qword_269B9D608;
  if (!qword_269B9D608)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269B9D608);
  }
  return result;
}

BOOL static StaticCameraProfile.CameraMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticCameraProfile.CameraMode.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t StaticCameraProfile.CameraMode.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticCameraProfile.currentMode.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticCameraProfile();
  sub_251A1B128(v1 + *(int *)(v6 + 52), (uint64_t)v5, &qword_269BA0FB8);
  uint64_t v7 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    uint64_t result = sub_251A1B064((uint64_t)v5, &qword_269BA0FB8);
LABEL_5:
    char v10 = 1;
    goto LABEL_6;
  }
  int v9 = v5[*(int *)(v7 + 20)];
  uint64_t result = sub_251D72490((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
  if (v9 != 2) {
    goto LABEL_5;
  }
  char v10 = 0;
LABEL_6:
  *a1 = v10;
  return result;
}

BOOL StaticCameraProfile.isAvailable.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticCameraProfile();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 40));
  sub_251D72048(v1, (uint64_t)v5);
  BOOL v7 = v6 == 1 && v5[*(int *)(v2 + 44)] > 2u;
  sub_251D72490((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  return v7;
}

uint64_t sub_251D72048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id StaticCameraProfile.cameraSource.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  BOOL v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = type metadata accessor for StaticCameraProfile();
  uint64_t v11 = v0 + *(int *)(v10 + 52);
  sub_251A1B128(v11, (uint64_t)v9, &qword_269BA0FB8);
  uint64_t v12 = type metadata accessor for StaticCameraStreamControl();
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  if (v13(v9, 1, v12) == 1)
  {
    sub_251A1B064((uint64_t)v9, &qword_269BA0FB8);
LABEL_6:
    sub_251A1B128(v0 + *(int *)(v10 + 48), (uint64_t)v3, &qword_269BA2D30);
    uint64_t v17 = type metadata accessor for StaticCameraSnapshotControl();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v3, 1, v17) == 1)
    {
      id v15 = &qword_269BA2D30;
      uint64_t v16 = (uint64_t)v3;
      goto LABEL_8;
    }
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    int v19 = (void *)qword_26B21FF50;
    id v20 = (void *)sub_251F34D50();
    id v21 = objc_msgSend(v19, sel_cameraProfileFor_, v20);

    id v22 = objc_msgSend(v21, sel_snapshotControl);
    id v18 = objc_msgSend(v22, sel_mostRecentSnapshot);

    id v23 = type metadata accessor for StaticCameraSnapshotControl;
    uint64_t v24 = (uint64_t)v3;
LABEL_15:
    sub_251D72490(v24, (uint64_t (*)(void))v23);
    return v18;
  }
  int v14 = v9[*(int *)(v12 + 20)];
  sub_251D72490((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
  if (v14 != 2) {
    goto LABEL_6;
  }
  sub_251A1B128(v11, (uint64_t)v7, &qword_269BA0FB8);
  if (v13(v7, 1, v12) != 1)
  {
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    id v25 = (void *)qword_26B21FF50;
    uint64_t v26 = (void *)sub_251F34D50();
    id v27 = objc_msgSend(v25, sel_cameraProfileFor_, v26);

    id v28 = objc_msgSend(v27, sel_streamControl);
    id v18 = objc_msgSend(v28, sel_cameraStream);

    id v23 = type metadata accessor for StaticCameraStreamControl;
    uint64_t v24 = (uint64_t)v7;
    goto LABEL_15;
  }
  id v15 = &qword_269BA0FB8;
  uint64_t v16 = (uint64_t)v7;
LABEL_8:
  sub_251A1B064(v16, v15);
  return 0;
}

uint64_t sub_251D72490(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

Swift::Void __swiftcall StaticCameraProfile.takeSnapshot()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2D30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticCameraProfile();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(v1 + *(int *)(v6 + 40));
  sub_251D72048(v1, (uint64_t)v8);
  if (v9 == 1)
  {
    unsigned int v10 = v8[*(int *)(v5 + 44)];
    sub_251D72490((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    if (v10 <= 2) {
      return;
    }
    sub_251A1B128(v1 + *(int *)(v5 + 48), (uint64_t)v4, &qword_269BA2D30);
    uint64_t v11 = type metadata accessor for StaticCameraSnapshotControl();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v4, 1, v11) == 1)
    {
      sub_251A1B064((uint64_t)v4, &qword_269BA2D30);
      return;
    }
    StaticCameraSnapshotControl.takeSnapshot()();
    uint64_t v12 = type metadata accessor for StaticCameraSnapshotControl;
    uint64_t v13 = (uint64_t)v4;
  }
  else
  {
    uint64_t v12 = type metadata accessor for StaticCameraProfile;
    uint64_t v13 = (uint64_t)v8;
  }
  sub_251D72490(v13, (uint64_t (*)(void))v12);
}

Swift::Void __swiftcall StaticCameraProfile.startStreaming()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticCameraProfile();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v18 - v10;
  int v12 = *(unsigned __int8 *)(v1 + *(int *)(v9 + 40));
  sub_251D72048(v1, (uint64_t)&v18 - v10);
  if (v12 != 1)
  {
    sub_251D72490((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    sub_251D72048(v1, (uint64_t)v8);
    goto LABEL_7;
  }
  unsigned int v13 = v11[*(int *)(v5 + 44)];
  sub_251D72490((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  sub_251D72048(v1, (uint64_t)v8);
  if (v13 < 3)
  {
LABEL_7:
    uint64_t v16 = type metadata accessor for StaticCameraProfile;
    uint64_t v17 = (uint64_t)v8;
    goto LABEL_8;
  }
  BOOL v14 = sub_251D728E8();
  sub_251D72490((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  if (v14) {
    return;
  }
  sub_251A1B128(v1 + *(int *)(v5 + 52), (uint64_t)v4, &qword_269BA0FB8);
  uint64_t v15 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v4, 1, v15) == 1)
  {
    sub_251A1B064((uint64_t)v4, &qword_269BA0FB8);
    return;
  }
  StaticCameraStreamControl.startStream()();
  uint64_t v16 = type metadata accessor for StaticCameraStreamControl;
  uint64_t v17 = (uint64_t)v4;
LABEL_8:
  sub_251D72490(v17, (uint64_t (*)(void))v16);
}

BOOL sub_251D728E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  sub_251A1B128(v1 + *(int *)(v2 + 52), (uint64_t)&v16 - v9, &qword_269BA0FB8);
  uint64_t v11 = type metadata accessor for StaticCameraStreamControl();
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v10, 1, v11) == 1)
  {
    sub_251A1B064((uint64_t)v10, &qword_269BA0FB8);
    sub_251D72048(v1, (uint64_t)v4);
  }
  else
  {
    int v13 = v10[*(int *)(v11 + 20)];
    sub_251D72490((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
    sub_251D72048(v1, (uint64_t)v4);
    if (v13 == 2)
    {
      sub_251D72490((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      return 1;
    }
  }
  sub_251A1B128((uint64_t)&v4[*(int *)(v2 + 52)], (uint64_t)v8, &qword_269BA0FB8);
  sub_251D72490((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  if (v12(v8, 1, v11) == 1)
  {
    sub_251A1B064((uint64_t)v8, &qword_269BA0FB8);
    return 0;
  }
  else
  {
    int v15 = v8[*(int *)(v11 + 20)];
    sub_251D72490((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
    return v15 == 1;
  }
}

Swift::Void __swiftcall StaticCameraProfile.stopStreaming()()
{
  uint64_t v1 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v22 - v9;
  MEMORY[0x270FA5388](v8);
  int v12 = (char *)&v22 - v11;
  uint64_t v13 = v0 + *(int *)(v1 + 52);
  sub_251A1B128(v13, (uint64_t)&v22 - v11, &qword_269BA0FB8);
  uint64_t v14 = type metadata accessor for StaticCameraStreamControl();
  int v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  if (v15(v12, 1, v14) == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_269BA0FB8);
    sub_251D72048(v0, (uint64_t)v3);
  }
  else
  {
    uint64_t v16 = *(int *)(v14 + 20);
    id v23 = v7;
    uint64_t v17 = v13;
    int v18 = v12[v16];
    sub_251D72490((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
    sub_251D72048(v0, (uint64_t)v3);
    BOOL v19 = v18 == 2;
    uint64_t v13 = v17;
    uint64_t v7 = v23;
    if (v19)
    {
      sub_251D72490((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      goto LABEL_9;
    }
  }
  sub_251A1B128((uint64_t)&v3[*(int *)(v1 + 52)], (uint64_t)v10, &qword_269BA0FB8);
  sub_251D72490((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  if (v15(v10, 1, v14) == 1)
  {
    uint64_t v20 = (uint64_t)v10;
LABEL_11:
    sub_251A1B064(v20, &qword_269BA0FB8);
    return;
  }
  int v21 = v10[*(int *)(v14 + 20)];
  sub_251D72490((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
  if (v21 != 1) {
    return;
  }
LABEL_9:
  sub_251A1B128(v13, (uint64_t)v7, &qword_269BA0FB8);
  if (v15(v7, 1, v14) == 1)
  {
    uint64_t v20 = (uint64_t)v7;
    goto LABEL_11;
  }
  StaticCameraStreamControl.stopStream()();
  sub_251D72490((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
}

unint64_t sub_251D72E58()
{
  unint64_t result = qword_269BA3050;
  if (!qword_269BA3050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3050);
  }
  return result;
}

unsigned char *_s10CameraModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D72F78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.CameraMode()
{
  return &type metadata for StaticCameraProfile.CameraMode;
}

id sub_251D72FB0()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessoryControlTransitionModel()), sel_init);
  qword_269BA3058 = (uint64_t)result;
  return result;
}

id AccessoryControlTransitionModel.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static AccessoryControlTransitionModel.shared.getter()
{
  if (qword_269B9C438 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_269BA3058;
  return v0;
}

uint64_t sub_251D73074@<X0>(uint64_t a1@<X8>)
{
  return sub_251D731B4(&OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_oldAccessoryControlsBearer, a1);
}

uint64_t sub_251D73080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D730E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251D73080(a1, (uint64_t)v10);
  uint64_t v11 = *a2 + *a5;
  swift_beginAccess();
  sub_251D73370((uint64_t)v10, v11);
  return swift_endAccess();
}

uint64_t sub_251D731A8@<X0>(uint64_t a1@<X8>)
{
  return sub_251D731B4(&OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_newAccessoryControlsBearer, a1);
}

uint64_t sub_251D731B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_251D73080(v4, a2);
}

uint64_t sub_251D73204(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251AD2AE0(a1, (uint64_t)v7);
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 0, 1, v8);
  uint64_t v10 = v2 + OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_oldAccessoryControlsBearer;
  swift_beginAccess();
  sub_251D73370((uint64_t)v7, v10);
  swift_endAccess();
  sub_251AD2AE0(a2, (uint64_t)v7);
  v9(v7, 0, 1, v8);
  uint64_t v11 = v2 + OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_newAccessoryControlsBearer;
  swift_beginAccess();
  sub_251D73370((uint64_t)v7, v11);
  return swift_endAccess();
}

uint64_t sub_251D73370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D733D8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v1 - 8);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  uint64_t v6 = v0 + OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_oldAccessoryControlsBearer;
  swift_beginAccess();
  sub_251D73370((uint64_t)v3, v6);
  swift_endAccess();
  v5(v3, 1, 1, v4);
  uint64_t v7 = v0 + OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_newAccessoryControlsBearer;
  swift_beginAccess();
  sub_251D73370((uint64_t)v3, v7);
  return swift_endAccess();
}

id AccessoryControlTransitionModel.init()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_oldAccessoryControlsBearer];
  uint64_t v2 = type metadata accessor for StaticService();
  int v3 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(&v0[OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_newAccessoryControlsBearer], 1, 1, v2);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for AccessoryControlTransitionModel();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for AccessoryControlTransitionModel()
{
  uint64_t result = qword_269BA3060;
  if (!qword_269BA3060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id AccessoryControlTransitionModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessoryControlTransitionModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_251D7372C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_oldAccessoryControlsBearer, a2);
}

uint64_t sub_251D73738(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_251D730E8(a1, a2, a3, a4, &OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_oldAccessoryControlsBearer);
}

uint64_t sub_251D73758@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_newAccessoryControlsBearer, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_251D73080(v4, a3);
}

uint64_t sub_251D737B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_251D730E8(a1, a2, a3, a4, &OBJC_IVAR____TtC13HomeDataModel31AccessoryControlTransitionModel_newAccessoryControlsBearer);
}

uint64_t sub_251D73824()
{
  return type metadata accessor for AccessoryControlTransitionModel();
}

void sub_251D7382C()
{
  sub_251D739A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AccessoryControlTransitionModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AccessoryControlTransitionModel);
}

uint64_t dispatch thunk of AccessoryControlTransitionModel.oldAccessoryControlsBearer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AccessoryControlTransitionModel.newAccessoryControlsBearer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AccessoryControlTransitionModel.updateValues(old:new:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AccessoryControlTransitionModel.clear()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

void sub_251D739A4()
{
  if (!qword_269BA3070)
  {
    type metadata accessor for StaticService();
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269BA3070);
    }
  }
}

uint64_t sub_251D739FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t StaticMatterDevice.isActivated.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v1 - 8);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 28)) != 2)
  {
    StaticMatterDevice.mainEndpoint.getter((uint64_t)v3);
    uint64_t v4 = type metadata accessor for StaticEndpoint();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4) != 1)
    {
      char v5 = StaticEndpoint.isActivated.getter();
      sub_251D754C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      return v5 & 1;
    }
    sub_251D75398((uint64_t)v3);
  }
  char v5 = 0;
  return v5 & 1;
}

uint64_t StaticMatterDevice.canBeToggled.getter()
{
  uint64_t v1 = type metadata accessor for StaticEndpoint();
  uint64_t v38 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  int v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE68);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (_WORD *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 48));
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v36 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  unint64_t v15 = (unint64_t)(v12 + 63) >> 6;
  unint64_t v32 = v15 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int v17 = 0;
  unint64_t v18 = 0;
  int64_t v37 = v15;
  uint64_t v33 = v10 + 104;
  unint64_t v34 = v15 - 5;
LABEL_4:
  int v35 = v17;
  while (1)
  {
    if (v14)
    {
      unint64_t v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_9;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v26 < v37)
    {
      unint64_t v27 = *(void *)(v36 + 8 * v26);
      if (v27) {
        goto LABEL_13;
      }
      if ((uint64_t)(v18 + 2) >= v37)
      {
        ++v18;
      }
      else
      {
        unint64_t v27 = *(void *)(v36 + 8 * (v18 + 2));
        if (v27)
        {
          int64_t v26 = v18 + 2;
          goto LABEL_13;
        }
        if ((uint64_t)(v18 + 3) >= v37)
        {
          v18 += 2;
        }
        else
        {
          unint64_t v27 = *(void *)(v36 + 8 * (v18 + 3));
          if (v27)
          {
            int64_t v26 = v18 + 3;
LABEL_13:
            unint64_t v14 = (v27 - 1) & v27;
            unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
            unint64_t v18 = v26;
LABEL_9:
            uint64_t v23 = *(void *)(v10 + 56);
            *uint64_t v7 = *(_WORD *)(*(void *)(v10 + 48) + 2 * v22);
            uint64_t v24 = v23 + *(void *)(v38 + 72) * v22;
            uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
            sub_251D7545C(v24, (uint64_t)v7 + *(int *)(v25 + 48), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
            (*(void (**)(_WORD *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 0, 1, v25);
            goto LABEL_19;
          }
          int64_t v26 = v18 + 4;
          if ((uint64_t)(v18 + 4) >= v37)
          {
            v18 += 3;
          }
          else
          {
            unint64_t v27 = *(void *)(v36 + 8 * v26);
            if (v27) {
              goto LABEL_13;
            }
            while (v34 != v18)
            {
              unint64_t v27 = *(void *)(v33 + 8 * v18++);
              if (v27)
              {
                int64_t v26 = v18 + 4;
                goto LABEL_13;
              }
            }
            unint64_t v18 = v32;
          }
        }
      }
    }
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
    (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
    unint64_t v14 = 0;
LABEL_19:
    sub_251A4ECF0((uint64_t)v7, (uint64_t)v9, &qword_269B9CE68);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v9, 1, v29) == 1)
    {
      char v31 = v35;
LABEL_38:
      swift_release();
      return v31 & 1;
    }
    sub_251D753F8((uint64_t)&v9[*(int *)(v29 + 48)], (uint64_t)v3);
    if (*(void *)&v3[*(int *)(v1 + 28)] != 2)
    {
      if (*(void *)(*(void *)&v3[*(int *)(v1 + 36)] + 16) && (sub_2519FE614(10), (v30 & 1) != 0)
        || (uint64_t v19 = swift_bridgeObjectRetain(), v20 = sub_251D74360(v19), swift_bridgeObjectRelease(), (v20 & 1) != 0))
      {
        uint64_t result = sub_251D754C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        int v17 = 1;
        if ((v35 & 1) == 0) {
          goto LABEL_4;
        }
        char v31 = 0;
        goto LABEL_38;
      }
    }
    uint64_t result = sub_251D754C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  }
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.statusString.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v1 - 8);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 28)) != 2)
  {
    StaticMatterDevice.mainEndpoint.getter((uint64_t)v3);
    uint64_t v5 = type metadata accessor for StaticEndpoint();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
    {
      sub_251D75398((uint64_t)v3);
    }
    else
    {
      uint64_t v4 = StaticEndpoint.statusString.getter();
      uint64_t v7 = v6;
      sub_251D754C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      if (v7) {
        return v4;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6D380);
}

uint64_t sub_251D74158()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  StaticMatterDevice.mainEndpoint.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for StaticEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251D75398((uint64_t)v2);
    return 0;
  }
  else
  {
    uint64_t v4 = StaticEndpoint.tileStatusString.getter();
    sub_251D754C4((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  }
  return v4;
}

uint64_t StaticMatterDevice.tileStatusString.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  StaticMatterDevice.mainEndpoint.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for StaticEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251D75398((uint64_t)v2);
    return 0;
  }
  else
  {
    uint64_t v4 = StaticEndpoint.tileStatusString.getter();
    sub_251D754C4((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  }
  return v4;
}

uint64_t sub_251D74360(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 56;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v1 << 6);
      goto LABEL_22;
    }
    int64_t v9 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v9 >= v6) {
      return 0;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v9);
    ++v1;
    if (!v10)
    {
      int64_t v1 = v9 + 1;
      if (v9 + 1 >= v6) {
        return 0;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v1);
      if (!v10)
      {
        int64_t v1 = v9 + 2;
        if (v9 + 2 >= v6) {
          return 0;
        }
        unint64_t v10 = *(void *)(v2 + 8 * v1);
        if (!v10)
        {
          int64_t v1 = v9 + 3;
          if (v9 + 3 >= v6) {
            return 0;
          }
          unint64_t v10 = *(void *)(v2 + 8 * v1);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v1 << 6);
LABEL_22:
    unsigned int v12 = *(unsigned __int8 *)(*(void *)(result + 48) + v8) - 4;
    if (v12 <= 0x11 && ((0x203ADu >> v12) & 1) != 0) {
      return 1;
    }
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v11);
  if (v10)
  {
    int64_t v1 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v1 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v1 >= v6) {
      return 0;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v1);
    ++v11;
    if (v10) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.mainEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x270FA5388](v4);
  int64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void *)(v2 + *(int *)(v4 + 48));
  uint64_t v15 = v2;
  swift_bridgeObjectRetain();
  sub_251A95970((uint64_t (*)(char *))sub_251BD0188, v10, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_251D7545C(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v11 = type metadata accessor for StaticEndpoint();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_251ABD930(*(void *)&v6[*(int *)(v4 + 48)], a1);
    sub_251D75398((uint64_t)v9);
  }
  else
  {
    sub_251D753F8((uint64_t)v9, a1);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  return sub_251D754C4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
}

uint64_t StaticMatterDevice.rvcState.getter@<X0>(char *a1@<X8>)
{
  unint64_t v34 = a1;
  uint64_t v35 = type metadata accessor for StaticEndpoint();
  uint64_t v2 = *(void *)(v35 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v35);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v33 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for StaticMatterDevice() + 48));
  uint64_t v11 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v10 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_25;
    }
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v20 >= v15) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v20);
    ++v17;
    if (!v21)
    {
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v11 + 8 * v17);
      if (!v21)
      {
        int64_t v17 = v20 + 2;
        if (v20 + 2 >= v15) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v11 + 8 * v17);
        if (!v21)
        {
          int64_t v17 = v20 + 3;
          if (v20 + 3 >= v15) {
            goto LABEL_33;
          }
          unint64_t v21 = *(void *)(v11 + 8 * v17);
          if (!v21)
          {
            int64_t v17 = v20 + 4;
            if (v20 + 4 >= v15) {
              goto LABEL_33;
            }
            unint64_t v21 = *(void *)(v11 + 8 * v17);
            if (!v21)
            {
              int64_t v22 = v20 + 5;
              if (v22 >= v15)
              {
LABEL_33:
                swift_release();
                uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
                uint64_t v27 = v33;
                uint64_t v29 = v33;
                uint64_t v30 = 1;
LABEL_34:
                uint64_t v31 = v35;
                v28(v29, v30, 1, v35);
                swift_bridgeObjectRelease();
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v27, 1, v31) == 1)
                {
                  uint64_t result = sub_251D75398(v27);
                  goto LABEL_37;
                }
                StaticEndpoint.rvcClusterGroup.getter((uint64_t)v36);
                sub_251A4ECF0((uint64_t)v36, (uint64_t)v37, &qword_269B9ECC0);
                sub_251D754C4(v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
                sub_251A4ECF0((uint64_t)v37, (uint64_t)v38, &qword_269B9ECC0);
                uint64_t result = sub_251B72348((uint64_t)v38);
                if (result == 1)
                {
LABEL_37:
                  char v32 = 7;
                }
                else
                {
                  uint64_t result = (uint64_t)sub_251B72360(v37);
                  char v32 = v38[11];
                }
                *unint64_t v34 = v32;
                return result;
              }
              unint64_t v21 = *(void *)(v11 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  int64_t v17 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_41;
                  }
                  if (v17 >= v15) {
                    goto LABEL_33;
                  }
                  unint64_t v21 = *(void *)(v11 + 8 * v17);
                  ++v22;
                  if (v21) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v17 = v22;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_25:
    sub_251D7545C(*(void *)(v10 + 56) + *(void *)(v2 + 72) * v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    sub_251D753F8((uint64_t)v7, (uint64_t)v5);
    id v39 = &type metadata for HomeKitFeatures;
    unint64_t v40 = sub_251A4DA94();
    v38[0] = 4;
    char v23 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    if (v23) {
      goto LABEL_44;
    }
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if (byte_269BA38B2 == 1)
    {
LABEL_44:
      uint64_t v24 = *(void *)&v5[*(int *)(v35 + 36)];
      if (*(void *)(v24 + 16))
      {
        unint64_t v25 = sub_2519FE614(23);
        if (v26)
        {
          sub_251A1A930(*(void *)(v24 + 56) + (v25 << 8), (uint64_t)v37);
          sub_251A1A930((uint64_t)v37, (uint64_t)v38);
          if (sub_251A4DB2C((uint64_t)v38) == 2)
          {
            sub_251A4E128((uint64_t)v38);
            swift_release();
            uint64_t v27 = v33;
            sub_251D753F8((uint64_t)v5, v33);
            uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
            uint64_t v29 = v27;
            uint64_t v30 = 0;
            goto LABEL_34;
          }
        }
      }
    }
    uint64_t result = sub_251D754C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

char StaticMatterDevice.statusIcon.getter@<W0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  StaticMatterDevice.mainEndpoint.getter((uint64_t)v8);
  uint64_t v9 = type metadata accessor for StaticEndpoint();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_251D75398((uint64_t)v8);
LABEL_7:
    sub_251D7545C(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    goto LABEL_8;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_251AC549C(v10);
  uint64_t v12 = sub_251A53EB8(v11);
  if (v14)
  {
LABEL_21:
    __break(1u);
    return v12;
  }
  if (*(_DWORD *)(v11 + 36) != v13) {
    goto LABEL_19;
  }
  if (v12 == 1 << *(unsigned char *)(v11 + 32))
  {
    swift_release();
    sub_251D754C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    goto LABEL_7;
  }
  sub_251A54058(v12, v13, 0, v11, v27);
  swift_release();
  int v19 = v27[0];
  sub_251D754C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251D7545C(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  if (v19 != 27) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_251AC549C(v15);
  uint64_t v12 = sub_251A53EB8(v16);
  if (v18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(_DWORD *)(v16 + 36) != v17)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 == 1 << *(unsigned char *)(v16 + 32))
  {
    swift_release();
    LOWORD(v19) = 27;
  }
  else
  {
    sub_251A54058(v12, v17, 0, v16, v28);
    swift_release();
    LOWORD(v19) = v28[0];
  }
LABEL_14:
  LOBYTE(v12) = sub_251D754C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v20 = v1 + *(int *)(v3 + 52);
  unint64_t v21 = *(void **)(v20 + 24);
  if (v21)
  {
    uint64_t v22 = *(void *)(v20 + 16);
    swift_bridgeObjectRetain();
    v23._countAndFlagsBits = v22;
    v23._object = v21;
    LOBYTE(v12) = IconSymbol.init(rawValue:)(v23);
    char v24 = v27[1];
  }
  else
  {
    char v24 = 89;
  }
  *(_WORD *)a1 = v19;
  *(unsigned char *)(a1 + 2) = 1;
  *(unsigned char *)(a1 + 3) = v24;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return v12;
}

uint64_t sub_251D74E1C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + *(int *)(a1 + 28)) != 2)
  {
    StaticMatterDevice.mainEndpoint.getter((uint64_t)v5);
    uint64_t v6 = type metadata accessor for StaticEndpoint();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) != 1)
    {
      char v7 = StaticEndpoint.isActivated.getter();
      sub_251D754C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      return v7 & 1;
    }
    sub_251D75398((uint64_t)v5);
  }
  char v7 = 0;
  return v7 & 1;
}

uint64_t StaticMatterDevice.accessoryControlStatusString.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  StaticMatterDevice.mainEndpoint.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for StaticEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251D75398((uint64_t)v2);
LABEL_4:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v4 = StaticEndpoint.accessoryControlStatusString.getter();
  uint64_t v6 = v5;
  sub_251D754C4((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  if (!v6) {
    goto LABEL_4;
  }
  return v4;
}

uint64_t StaticMatterDevice.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for StaticMatterDevice();
  uint64_t result = 0;
  if (*(void *)(v0 + *(int *)(v4 + 28)) == 1)
  {
    StaticMatterDevice.mainEndpoint.getter((uint64_t)v3);
    uint64_t v6 = type metadata accessor for StaticEndpoint();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6) == 1)
    {
      sub_251D75398((uint64_t)v3);
    }
    else
    {
      uint64_t v7 = *(void *)&v3[*(int *)(v6 + 36)];
      if (*(void *)(v7 + 16))
      {
        unint64_t v8 = sub_2519FE614(2);
        if (v9)
        {
          sub_251A1A930(*(void *)(v7 + 56) + (v8 << 8), (uint64_t)v11);
          sub_251A1A930((uint64_t)v11, (uint64_t)v12);
          if (sub_251A4DB2C((uint64_t)v12) == 6)
          {
            uint64_t v10 = sub_251A4E128((uint64_t)v12);
            if ((*(unsigned char *)(v10 + 22) & 1) == 0 && *(unsigned __int8 *)(v10 + 21) < 0xAu)
            {
              sub_251D754C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              return 0x2E79726574746162;
            }
          }
        }
      }
      sub_251D754C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    }
    return 0;
  }
  return result;
}

BOOL sub_251D751F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticEndpoint();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *(unsigned __int16 *)(a1 + *(int *)(v8 + 20) + 8);
  sub_251D7545C(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251D7545C(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  if (v11)
  {
    uint64_t v12 = *(void *)&v10[*(int *)(v7 + 32)];
    uint64_t v13 = *(void *)&v6[*(int *)(v4 + 32)];
    swift_bridgeObjectRetain();
    uint64_t v14 = *(void *)(sub_251D67BDC(v13, v12) + 16);
    swift_release();
    BOOL v15 = v14 != 0;
  }
  else
  {
    BOOL v15 = 0;
  }
  sub_251D754C4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251D754C4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  return v15;
}

uint64_t sub_251D75398(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251D753F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D7545C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D754C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D75524(void *a1)
{
  a1[1] = sub_251D755D4(&qword_269B9CE30);
  a1[2] = sub_251D755D4(&qword_269B9CE00);
  a1[3] = sub_251D755D4(&qword_269B9D960);
  uint64_t result = sub_251D755D4(&qword_269B9D968);
  a1[4] = result;
  return result;
}

uint64_t sub_251D755D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StaticMatterDevice();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_251D7561C(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_251F34D80();

  id v7 = objc_msgSend(a1, sel_name);
  uint64_t v8 = sub_251F356F0();
  uint64_t v10 = v9;

  int v11 = (int *)type metadata accessor for StaticUser();
  uint64_t v12 = (uint64_t *)(a3 + v11[5]);
  *uint64_t v12 = v8;
  v12[1] = v10;
  id v13 = objc_msgSend(a2, sel_uniqueIdentifier);
  sub_251F34D80();

  sub_251D78304(a2, (uint64_t)a1, &v17);
  *(unsigned char *)(a3 + v11[7]) = v17;
  id v14 = objc_msgSend(a2, sel_homeAccessControlForUser_, a1);
  id v15 = objc_msgSend(v14, sel_camerasAccessLevel);

  if (v15 == (id)2) {
    char v16 = 2;
  }
  else {
    char v16 = 1;
  }
  if (!v15) {
    char v16 = 0;
  }
  *(unsigned char *)(a3 + v11[8]) = v16;
}

uint64_t StaticUser.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticUser.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticUser() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticUser.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticUser() + 24);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticUser.kind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticUser();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t StaticUser.cameraAccess.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticUser();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

BOOL static StaticUser.CameraAccessLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticUser.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251D759E0()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x6449656D6F68;
      break;
    case 3:
      uint64_t result = 1684957547;
      break;
    case 4:
      uint64_t result = 0x63416172656D6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D75A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D7B2F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D75A9C(uint64_t a1)
{
  unint64_t v2 = sub_251D78BA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D75AD8(uint64_t a1)
{
  unint64_t v2 = sub_251D78BA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticUser.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3090);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D78BA4();
  sub_251F36DA0();
  char v18 = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for StaticUser();
    char v17 = 1;
    sub_251F369D0();
    char v16 = 2;
    sub_251F36A20();
    char v15 = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    char v14 = 3;
    sub_251D78BF8();
    sub_251F36A20();
    char v13 = *(unsigned char *)(v3 + *(int *)(v9 + 32));
    char v12 = 4;
    sub_251D78C4C();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticUser.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticUser.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA30B0);
  uint64_t v4 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticUser();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D78BA4();
  unint64_t v34 = v6;
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v31 = a1;
  uint64_t v32 = v4;
  uint64_t v29 = (int *)v7;
  uint64_t v30 = v9;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  char v42 = 0;
  sub_251A1A8EC(&qword_269B9CC80);
  char v13 = v34;
  uint64_t v14 = v35;
  sub_251F36880();
  uint64_t v28 = v11;
  uint64_t v15 = v11 + 32;
  char v16 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v17 = v15;
  v16(v30, (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  char v41 = 1;
  uint64_t v18 = sub_251F36830();
  unint64_t v25 = (void (*)(uint64_t, char *, uint64_t))v16;
  uint64_t v26 = v17;
  uint64_t v20 = v29;
  uint64_t v19 = (uint64_t)v30;
  unint64_t v21 = (uint64_t *)&v30[v29[5]];
  uint64_t *v21 = v18;
  v21[1] = v22;
  MEMORY[0x270FA5388](v18);
  char v40 = 2;
  uint64_t v27 = 0;
  sub_251F36880();
  v25(v19 + v20[6], (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  char v38 = 3;
  sub_251D78CA0();
  sub_251F36880();
  *(unsigned char *)(v19 + v20[7]) = v39;
  char v36 = 4;
  sub_251D78CF4();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v14);
  *(unsigned char *)(v19 + v20[8]) = v37;
  sub_251B65800(v19, v33);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  return sub_251D78D48(v19);
}

uint64_t sub_251D76360()
{
  return sub_251F36D00();
}

uint64_t sub_251D76430()
{
  return sub_251F36CB0();
}

uint64_t sub_251D764E4()
{
  return sub_251F36D00();
}

uint64_t sub_251D765B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticUser.init(from:)(a1, a2);
}

uint64_t sub_251D765C8(void *a1)
{
  return StaticUser.encode(to:)(a1);
}

uint64_t sub_251D765E0(uint64_t a1)
{
  unint64_t v2 = sub_251D78EA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D7661C(uint64_t a1)
{
  unint64_t v2 = sub_251D78EA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D76658()
{
  uint64_t result = 0x72656E776FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7473696E696D6461;
      break;
    case 2:
      uint64_t result = 0x746E656469736572;
      break;
    case 3:
      uint64_t result = 0x7463697274736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D766FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D7B4F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D76724(uint64_t a1)
{
  unint64_t v2 = sub_251D78DA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D76760(uint64_t a1)
{
  unint64_t v2 = sub_251D78DA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D7679C(uint64_t a1)
{
  unint64_t v2 = sub_251D78EF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D767D8(uint64_t a1)
{
  unint64_t v2 = sub_251D78EF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D76814(uint64_t a1)
{
  unint64_t v2 = sub_251D78E4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D76850(uint64_t a1)
{
  unint64_t v2 = sub_251D78E4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D7688C(uint64_t a1)
{
  unint64_t v2 = sub_251D78DF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D768C8(uint64_t a1)
{
  unint64_t v2 = sub_251D78DF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticUser.Kind.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA30C8);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA30D0);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA30D8);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  Swift::String v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA30E0);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA30E8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D78DA4();
  sub_251F36DA0();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_251D78EA0();
      uint64_t v17 = v23;
      sub_251F36900();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_251D78E4C();
      uint64_t v17 = v26;
      sub_251F36900();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_251D78DF8();
      uint64_t v17 = v29;
      sub_251F36900();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_251D78EF4();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t StaticUser.Kind.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3118);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3120);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3128);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3130);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3138);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_251D78DA4();
  uint64_t v19 = v52;
  sub_251F36D90();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  char v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  Swift::String v23 = v17;
  uint64_t v24 = sub_251F368E0();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_251F36490();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    void *v29 = &type metadata for StaticUser.Kind;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_251D78EA0();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_251F36770();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_251D78E4C();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_251F36770();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_251D78DF8();
      uint64_t v37 = v52;
      sub_251F36770();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_0(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      char v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_251D78EF4();
      uint64_t v26 = v52;
      sub_251F36770();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      char v38 = v47;
LABEL_19:
      unsigned char *v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v30);
}

uint64_t sub_251D7737C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticUser.Kind.init(from:)(a1, a2);
}

uint64_t sub_251D77394(void *a1)
{
  return StaticUser.Kind.encode(to:)(a1);
}

uint64_t StaticUser.CameraAccessLevel.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251D773D8()
{
  uint64_t v1 = 0x6D6165727473;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E416D6165727473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7373656363416F6ELL;
  }
}

uint64_t sub_251D7743C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D7B6EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D77464(uint64_t a1)
{
  unint64_t v2 = sub_251D78F48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D774A0(uint64_t a1)
{
  unint64_t v2 = sub_251D78F48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D774DC(uint64_t a1)
{
  unint64_t v2 = sub_251D79044();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D77518(uint64_t a1)
{
  unint64_t v2 = sub_251D79044();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D77554(uint64_t a1)
{
  unint64_t v2 = sub_251D78F9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D77590(uint64_t a1)
{
  unint64_t v2 = sub_251D78F9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D775CC(uint64_t a1)
{
  unint64_t v2 = sub_251D78FF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D77608(uint64_t a1)
{
  unint64_t v2 = sub_251D78FF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticUser.CameraAccessLevel.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3140);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  Swift::String v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3148);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3150);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3158);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D78F48();
  sub_251F36DA0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_251D78FF0();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_251D78F9C();
      uint64_t v17 = v23;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_251D79044();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t StaticUser.CameraAccessLevel.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3180);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3188);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3190);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3198);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D78F48();
  uint64_t v12 = (uint64_t)v39;
  sub_251F36D90();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_251F368E0();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_251F36490();
    swift_allocError();
    Swift::String v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *Swift::String v23 = &type metadata for StaticUser.CameraAccessLevel;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_251D78FF0();
      uint64_t v18 = v30;
      sub_251F36770();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_251D78F9C();
      uint64_t v25 = v30;
      sub_251F36770();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_251D79044();
    uint64_t v24 = v30;
    sub_251F36770();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  unsigned char *v20 = v17;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
}

uint64_t sub_251D77F64@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticUser.CameraAccessLevel.init(from:)(a1, a2);
}

uint64_t sub_251D77F7C(void *a1)
{
  return StaticUser.CameraAccessLevel.encode(to:)(a1);
}

uint64_t StaticUser.user.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251D77FB4, 0, 0);
}

uint64_t sub_251D77FB4()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D7804C, v2, v1);
}

uint64_t sub_251D7804C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251D780E4, 0, 0);
}

uint64_t sub_251D780E4()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D78170, v2, v1);
}

uint64_t sub_251D78170()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251D781E4, 0, 0);
}

uint64_t sub_251D781E4()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D78278, v2, v1);
}

uint64_t sub_251D78278()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  id v3 = objc_msgSend(v2, sel_userFor_, v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

void sub_251D78304(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  id v4 = objc_msgSend(a1, sel_homeAccessControlForUser_, a2);
  if (objc_msgSend(v4, sel_isOwner))
  {

    char v5 = 0;
  }
  else
  {
    if (!objc_msgSend(v4, sel_isAdministrator))
    {
      if (objc_msgSend(v4, sel_isRestrictedGuest))
      {
        uint64_t v8 = &type metadata for HomeKitFeatures;
        unint64_t v9 = sub_251A4DA94();
        v7[0] = 1;
        char v6 = sub_251F34F60();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);

        if (v6)
        {
          char v5 = 3;
          goto LABEL_10;
        }
      }
      else
      {
      }
      char v5 = 2;
      goto LABEL_10;
    }

    char v5 = 1;
  }
LABEL_10:
  *a3 = v5;
}

Swift::Bool __swiftcall StaticUser.hasAdminPrivilege()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticUser();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 28));
  sub_251B65800(v1, (uint64_t)v5);
  if (v6) {
    Swift::Bool v7 = v5[*(int *)(v2 + 28)] == 1;
  }
  else {
    Swift::Bool v7 = 1;
  }
  sub_251D78D48((uint64_t)v5);
  return v7;
}

BOOL sub_251D784A8(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel10StaticUserV1loiySbAC_ACtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_251D784D4(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel10StaticUserV1loiySbAC_ACtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_251D784F4(uint64_t a1, uint64_t a2)
{
  return _s13HomeDataModel10StaticUserV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t sub_251D78504()
{
  uint64_t v0 = (int *)type metadata accessor for StaticUser();
  __swift_allocate_value_buffer((uint64_t)v0, qword_26B220D58);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_26B220D58);
  if (qword_26B21FD98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B220D18);
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Bool v7 = *(void (**)(char *))(v4 + 16);
  v7(v6);
  if (qword_26B21FD40 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)qword_26B220CF0);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1, v6, v2);
  uint64_t v9 = (void *)(v1 + v0[5]);
  *uint64_t v9 = 0;
  v9[1] = 0xE000000000000000;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v1 + v0[6], v8, v2);
  *(unsigned char *)(v1 + v0[7]) = 0;
  *(unsigned char *)(v1 + v0[8]) = 1;
  return result;
}

uint64_t sub_251D786DC()
{
  uint64_t v0 = (int *)type metadata accessor for StaticUser();
  __swift_allocate_value_buffer((uint64_t)v0, qword_269BA3078);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_269BA3078);
  if (qword_269B9C448 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BF31D0);
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Bool v7 = *(void (**)(char *))(v4 + 16);
  v7(v6);
  if (qword_269B9C3A8 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)qword_269BF3138);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1, v6, v2);
  uint64_t v9 = (void *)(v1 + v0[5]);
  *uint64_t v9 = 0x5520656C706D6153;
  v9[1] = 0xEB00000000726573;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v1 + v0[6], v8, v2);
  *(unsigned char *)(v1 + v0[7]) = 0;
  *(unsigned char *)(v1 + v0[8]) = 1;
  return result;
}

uint64_t static StaticUser.sample.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C440 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for StaticUser();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA3078);
  return sub_251B65800(v3, a1);
}

uint64_t sub_251D78944(uint64_t a1)
{
  return sub_251D7897C(a1, qword_26B220D18);
}

uint64_t sub_251D78960(uint64_t a1)
{
  return sub_251D7897C(a1, qword_269BF31D0);
}

uint64_t sub_251D7897C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_251F34DA0();
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  Swift::Bool v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  uint64_t v8 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v4, v7, v3);
  }
  __break(1u);
  return result;
}

BOOL _s13HomeDataModel10StaticUserV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticUser();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = sub_251F36B10(), result = 0, (v10 & 1) != 0))
  {
    if ((sub_251F34D70() & 1) != 0 && *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7])) {
      return *(unsigned __int8 *)(a1 + v4[8]) == *(unsigned __int8 *)(a2 + v4[8]);
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StaticUser()
{
  uint64_t result = qword_26B2201D0;
  if (!qword_26B2201D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_251D78BA4()
{
  unint64_t result = qword_269BA3098;
  if (!qword_269BA3098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3098);
  }
  return result;
}

unint64_t sub_251D78BF8()
{
  unint64_t result = qword_269BA30A0;
  if (!qword_269BA30A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA30A0);
  }
  return result;
}

unint64_t sub_251D78C4C()
{
  unint64_t result = qword_269BA30A8;
  if (!qword_269BA30A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA30A8);
  }
  return result;
}

unint64_t sub_251D78CA0()
{
  unint64_t result = qword_269BA30B8;
  if (!qword_269BA30B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA30B8);
  }
  return result;
}

unint64_t sub_251D78CF4()
{
  unint64_t result = qword_269BA30C0;
  if (!qword_269BA30C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA30C0);
  }
  return result;
}

uint64_t sub_251D78D48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticUser();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_251D78DA4()
{
  unint64_t result = qword_269BA30F0;
  if (!qword_269BA30F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA30F0);
  }
  return result;
}

unint64_t sub_251D78DF8()
{
  unint64_t result = qword_269BA30F8;
  if (!qword_269BA30F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA30F8);
  }
  return result;
}

unint64_t sub_251D78E4C()
{
  unint64_t result = qword_269BA3100;
  if (!qword_269BA3100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3100);
  }
  return result;
}

unint64_t sub_251D78EA0()
{
  unint64_t result = qword_269BA3108;
  if (!qword_269BA3108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3108);
  }
  return result;
}

unint64_t sub_251D78EF4()
{
  unint64_t result = qword_269BA3110;
  if (!qword_269BA3110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3110);
  }
  return result;
}

unint64_t sub_251D78F48()
{
  unint64_t result = qword_269BA3160;
  if (!qword_269BA3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3160);
  }
  return result;
}

unint64_t sub_251D78F9C()
{
  unint64_t result = qword_269BA3168;
  if (!qword_269BA3168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3168);
  }
  return result;
}

unint64_t sub_251D78FF0()
{
  unint64_t result = qword_269BA3170;
  if (!qword_269BA3170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3170);
  }
  return result;
}

unint64_t sub_251D79044()
{
  unint64_t result = qword_269BA3178;
  if (!qword_269BA3178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3178);
  }
  return result;
}

uint64_t _s13HomeDataModel10StaticUserV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticUser();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v10 = (char *)&v31 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = *(int *)(v14 + 20);
  uint64_t v18 = *(void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  uint64_t v20 = (void *)(a2 + v17);
  if (v18 == *v20 && v19 == v20[1])
  {
    sub_251B65800(a1, (uint64_t)&v31 - v15);
    sub_251B65800(a2, (uint64_t)v13);
  }
  else
  {
    char v22 = 1;
    char v23 = sub_251F36B10();
    sub_251B65800(a1, (uint64_t)v16);
    sub_251B65800(a2, (uint64_t)v13);
    if (v23) {
      goto LABEL_17;
    }
  }
  uint64_t v24 = *(int *)(v4 + 20);
  uint64_t v25 = *(void *)&v16[v24];
  uint64_t v26 = *(void *)&v16[v24 + 8];
  char v27 = &v13[v24];
  if (v25 == *(void *)v27 && v26 == *((void *)v27 + 1))
  {
    sub_251B65800((uint64_t)v16, (uint64_t)v10);
    sub_251B65800((uint64_t)v13, (uint64_t)v7);
  }
  else
  {
    char v29 = sub_251F36B10();
    sub_251B65800((uint64_t)v16, (uint64_t)v10);
    sub_251B65800((uint64_t)v13, (uint64_t)v7);
    char v22 = 0;
    if ((v29 & 1) == 0) {
      goto LABEL_16;
    }
  }
  char v22 = MEMORY[0x2533A9CA0](v10, v7);
LABEL_16:
  sub_251D78D48((uint64_t)v7);
  sub_251D78D48((uint64_t)v10);
LABEL_17:
  sub_251D78D48((uint64_t)v13);
  sub_251D78D48((uint64_t)v16);
  return v22 & 1;
}

unint64_t sub_251D79294()
{
  unint64_t result = qword_269BA31A8;
  if (!qword_269BA31A8)
  {
    type metadata accessor for StaticUser();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31A8);
  }
  return result;
}

uint64_t sub_251D792EC()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

unint64_t sub_251D79318()
{
  unint64_t result = qword_269BA31B0;
  if (!qword_269BA31B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31B0);
  }
  return result;
}

unint64_t sub_251D79370()
{
  unint64_t result = qword_269BA31B8;
  if (!qword_269BA31B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31B8);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticUser(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = &a1[v10];
    uint64_t v15 = &a2[v10];
    swift_bridgeObjectRetain();
    v8(v14, v15, v7);
    uint64_t v16 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    a1[v16] = a2[v16];
  }
  return a1;
}

uint64_t destroy for StaticUser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for StaticUser(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  swift_bridgeObjectRetain();
  v7(v13, v14, v6);
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  return a1;
}

uint64_t assignWithCopy for StaticUser(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for StaticUser(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for StaticUser(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + a3[6], a2 + a3[6], v6);
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D798D8);
}

uint64_t sub_251D798D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticUser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D799B0);
}

uint64_t sub_251D799B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251D79A70()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticUser.Kind()
{
  return &type metadata for StaticUser.Kind;
}

ValueMetadata *type metadata accessor for StaticUser.CameraAccessLevel()
{
  return &type metadata for StaticUser.CameraAccessLevel;
}

unsigned char *_s13HomeDataModel10StaticUserV17CameraAccessLevelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D79C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticUser.CameraAccessLevel.CodingKeys()
{
  return &type metadata for StaticUser.CameraAccessLevel.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.CameraAccessLevel.NoAccessCodingKeys()
{
  return &type metadata for StaticUser.CameraAccessLevel.NoAccessCodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.CameraAccessLevel.StreamCodingKeys()
{
  return &type metadata for StaticUser.CameraAccessLevel.StreamCodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.CameraAccessLevel.StreamAndClipsCodingKeys()
{
  return &type metadata for StaticUser.CameraAccessLevel.StreamAndClipsCodingKeys;
}

unsigned char *_s13HomeDataModel10StaticUserV4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D79D44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.CodingKeys()
{
  return &type metadata for StaticUser.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.OwnerCodingKeys()
{
  return &type metadata for StaticUser.Kind.OwnerCodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.AdministratorCodingKeys()
{
  return &type metadata for StaticUser.Kind.AdministratorCodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.ResidentCodingKeys()
{
  return &type metadata for StaticUser.Kind.ResidentCodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.RestrictedGuestCodingKeys()
{
  return &type metadata for StaticUser.Kind.RestrictedGuestCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StaticUser.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D79E88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticUser.CodingKeys()
{
  return &type metadata for StaticUser.CodingKeys;
}

unint64_t sub_251D79EC4()
{
  unint64_t result = qword_269BA31C0;
  if (!qword_269BA31C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31C0);
  }
  return result;
}

unint64_t sub_251D79F1C()
{
  unint64_t result = qword_269BA31C8;
  if (!qword_269BA31C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31C8);
  }
  return result;
}

unint64_t sub_251D79F74()
{
  unint64_t result = qword_269BA31D0;
  if (!qword_269BA31D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31D0);
  }
  return result;
}

unint64_t sub_251D79FCC()
{
  unint64_t result = qword_269BA31D8;
  if (!qword_269BA31D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31D8);
  }
  return result;
}

unint64_t sub_251D7A024()
{
  unint64_t result = qword_269BA31E0;
  if (!qword_269BA31E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31E0);
  }
  return result;
}

unint64_t sub_251D7A07C()
{
  unint64_t result = qword_269BA31E8;
  if (!qword_269BA31E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31E8);
  }
  return result;
}

unint64_t sub_251D7A0D4()
{
  unint64_t result = qword_269BA31F0;
  if (!qword_269BA31F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31F0);
  }
  return result;
}

unint64_t sub_251D7A12C()
{
  unint64_t result = qword_269BA31F8;
  if (!qword_269BA31F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA31F8);
  }
  return result;
}

unint64_t sub_251D7A184()
{
  unint64_t result = qword_269BA3200;
  if (!qword_269BA3200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3200);
  }
  return result;
}

unint64_t sub_251D7A1DC()
{
  unint64_t result = qword_269BA3208;
  if (!qword_269BA3208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3208);
  }
  return result;
}

unint64_t sub_251D7A234()
{
  unint64_t result = qword_269BA3210;
  if (!qword_269BA3210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3210);
  }
  return result;
}

unint64_t sub_251D7A28C()
{
  unint64_t result = qword_269BA3218;
  if (!qword_269BA3218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3218);
  }
  return result;
}

unint64_t sub_251D7A2E4()
{
  unint64_t result = qword_269BA3220;
  if (!qword_269BA3220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3220);
  }
  return result;
}

unint64_t sub_251D7A33C()
{
  unint64_t result = qword_269BA3228;
  if (!qword_269BA3228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3228);
  }
  return result;
}

unint64_t sub_251D7A394()
{
  unint64_t result = qword_269BA3230;
  if (!qword_269BA3230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3230);
  }
  return result;
}

unint64_t sub_251D7A3EC()
{
  unint64_t result = qword_269BA3238;
  if (!qword_269BA3238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3238);
  }
  return result;
}

unint64_t sub_251D7A444()
{
  unint64_t result = qword_269BA3240;
  if (!qword_269BA3240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3240);
  }
  return result;
}

unint64_t sub_251D7A49C()
{
  unint64_t result = qword_269BA3248;
  if (!qword_269BA3248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3248);
  }
  return result;
}

unint64_t sub_251D7A4F4()
{
  unint64_t result = qword_269BA3250;
  if (!qword_269BA3250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3250);
  }
  return result;
}

unint64_t sub_251D7A54C()
{
  unint64_t result = qword_269BA3258;
  if (!qword_269BA3258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3258);
  }
  return result;
}

unint64_t sub_251D7A5A4()
{
  unint64_t result = qword_269BA3260;
  if (!qword_269BA3260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3260);
  }
  return result;
}

unint64_t sub_251D7A5FC()
{
  unint64_t result = qword_269BA3268;
  if (!qword_269BA3268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3268);
  }
  return result;
}

unint64_t sub_251D7A654()
{
  unint64_t result = qword_269BA3270;
  if (!qword_269BA3270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3270);
  }
  return result;
}

unint64_t sub_251D7A6A8(unint64_t a1, void *a2)
{
  int v3 = v2;
  id v48 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E700);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for StaticUser();
  uint64_t v41 = *(void *)(v55 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v55);
  uint64_t v47 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (uint64_t)&v39 - v10;
  if (a1 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_251F366C0();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      uint64_t v39 = v3;
      unint64_t v46 = a1 & 0xC000000000000001;
      uint64_t v44 = (void (**)(char *, void, uint64_t, uint64_t))(v41 + 56);
      unint64_t v12 = MEMORY[0x263F8EE78];
      unint64_t v42 = a1;
      uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      uint64_t v13 = 4;
      int v3 = &off_26536F000;
      uint64_t v45 = v11;
      while (1)
      {
        uint64_t v15 = v13 - 4;
        if (v46)
        {
          id v16 = (id)MEMORY[0x2533AB3A0](v13 - 4, a1);
          uint64_t v17 = v13 - 3;
          if (__OFADD__(v15, 1)) {
            goto LABEL_33;
          }
        }
        else
        {
          id v16 = *(id *)(a1 + 8 * v13);
          uint64_t v17 = v13 - 3;
          if (__OFADD__(v15, 1))
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
        }
        uint64_t v49 = v13;
        uint64_t v50 = v17;
        unint64_t v51 = v12;
        id v18 = v16;
        id v19 = v48;
        id v20 = objc_msgSend(v18, sel_uniqueIdentifier);
        sub_251F34D80();

        id v21 = objc_msgSend(v18, sel_name);
        uint64_t v22 = sub_251F356F0();
        uint64_t v24 = v23;

        uint64_t v25 = (uint64_t *)&v7[*(int *)(v55 + 20)];
        *uint64_t v25 = v22;
        v25[1] = v24;
        id v26 = objc_msgSend(v19, sel_uniqueIdentifier);
        sub_251F34D80();

        id v27 = objc_msgSend(v19, sel_homeAccessControlForUser_, v18);
        if (objc_msgSend(v27, sel_isOwner)) {
          break;
        }
        if (objc_msgSend(v27, sel_isAdministrator))
        {

          char v28 = 1;
          goto LABEL_15;
        }
        if (!objc_msgSend(v27, sel_isRestrictedGuest))
        {

          a1 = v42;
          uint64_t v29 = v49;
LABEL_20:
          char v28 = 2;
          goto LABEL_21;
        }
        char v53 = &type metadata for HomeKitFeatures;
        unint64_t v54 = sub_251A4DA94();
        v52[0] = 1;
        char v30 = sub_251F34F60();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);

        a1 = v42;
        uint64_t v29 = v49;
        if ((v30 & 1) == 0) {
          goto LABEL_20;
        }
        char v28 = 3;
LABEL_21:
        uint64_t v31 = v55;
        v7[*(int *)(v55 + 28)] = v28;
        id v32 = objc_msgSend(v19, sel_homeAccessControlForUser_, v18, v39);
        id v33 = objc_msgSend(v32, sel_camerasAccessLevel);

        if (v33 == (id)2) {
          char v34 = 2;
        }
        else {
          char v34 = 1;
        }
        if (!v33) {
          char v34 = 0;
        }
        v7[*(int *)(v31 + 32)] = v34;
        (*v44)(v7, 0, 1, v31);

        if ((*v43)(v7, 1, v31) == 1)
        {
          sub_251D7B9F8((uint64_t)v7);
          uint64_t v14 = v45;
          unint64_t v12 = v51;
        }
        else
        {
          uint64_t v35 = v40;
          sub_251D7B930((uint64_t)v7, v40);
          sub_251D7B930(v35, v47);
          unint64_t v12 = v51;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v12 = sub_251F0F4A8(0, *(void *)(v12 + 16) + 1, 1, v12);
          }
          unint64_t v37 = *(void *)(v12 + 16);
          unint64_t v36 = *(void *)(v12 + 24);
          if (v37 >= v36 >> 1) {
            unint64_t v12 = sub_251F0F4A8(v36 > 1, v37 + 1, 1, v12);
          }
          *(void *)(v12 + 16) = v37 + 1;
          sub_251D7B930(v47, v12+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v37);
          uint64_t v14 = v45;
        }
        uint64_t v13 = v29 + 1;
        if (v50 == v14)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }

      char v28 = 0;
LABEL_15:
      a1 = v42;
      uint64_t v29 = v49;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251D7ABB0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  id v48 = a3;
  uint64_t v7 = type metadata accessor for StaticUser();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFA8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  id v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  uint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  unint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251D7B8C8(v18, (uint64_t)v16);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251D7B930((uint64_t)v43, (uint64_t)v11);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A12424();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01EF0(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251D7B930((uint64_t)v42, v39);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251D7B994(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    char v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251D7B930((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    id v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251D7AF94(void *a1)
{
  id v2 = objc_msgSend(a1, sel_users);
  sub_251B65184();
  uint64_t v3 = sub_251F35AC0();

  id v4 = objc_msgSend(a1, sel_currentUser);
  unint64_t v28 = v3;
  swift_bridgeObjectRetain();
  id v5 = v4;
  MEMORY[0x2533AA9D0]();
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_251F35B10();
  }
  sub_251F35B70();
  sub_251F35AE0();
  swift_bridgeObjectRelease();

  id v6 = a1;
  uint64_t v7 = 0;
  unint64_t v8 = sub_251D7A6A8(v28, v6);
  swift_bridgeObjectRelease();

  int64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v26 = 0;
    unint64_t v28 = MEMORY[0x263F8EE78];
    sub_251A3E018(0, v9, 0);
    uint64_t v10 = v28;
    uint64_t v11 = 0;
    uint64_t v27 = *(void *)(type metadata accessor for StaticUser() - 8);
    uint64_t v12 = *(unsigned __int8 *)(v27 + 80);
    v25[1] = v8;
    unint64_t v13 = v8 + ((v12 + 32) & ~v12);
    do
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFA8);
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
      uint64_t v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v19 = (uint64_t)&v18[*(int *)(v16 + 56)];
      sub_251B65800(v13 + *(void *)(v27 + 72) * v11, v19);
      uint64_t v20 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      unint64_t v28 = v10;
      unint64_t v22 = *(void *)(v10 + 16);
      unint64_t v21 = *(void *)(v10 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_251A3E018(v21 > 1, v22 + 1, 1);
        uint64_t v10 = v28;
      }
      ++v11;
      *(void *)(v10 + 16) = v22 + 1;
      sub_251D7B860((uint64_t)v18, v10+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v22);
    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
    uint64_t v7 = v26;
    if (*(void *)(v10 + 16)) {
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_9:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED88);
      uint64_t v23 = sub_251F36700();
      goto LABEL_12;
    }
  }
  uint64_t v23 = MEMORY[0x263F8EE80];
LABEL_12:
  unint64_t v28 = v23;
  sub_251D7ABB0(v10, 1, (uint64_t *)&v28);
  swift_bridgeObjectRelease();
  if (!v7) {
    return v28;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251D7B2F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x63416172656D6163 && a2 == 0xEC00000073736563)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251D7B4F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72656E776FLL && a2 == 0xE500000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473696E696D6461 && a2 == 0xED0000726F746172 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E656469736572 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7463697274736572 && a2 == 0xEF74736575476465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251D7B6EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7373656363416F6ELL && a2 == 0xE800000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6165727473 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E416D6165727473 && a2 == 0xEE007370696C4364)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251D7B860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D7B8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D7B930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticUser();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D7B994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticUser();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D7B9F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E700);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251D7BA60@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (void *)((char *)v123 - v10);
  uint64_t v12 = (void *)*a3;
  if (!v12)
  {
    char v139 = 0;
    sub_251D7CBA4(a2, (unint64_t *)&v139, (unint64_t *)v143);
    uint64_t result = sub_251D80E54(a1, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
    unint64_t v50 = v143[0];
    goto LABEL_60;
  }
  sub_251D80DEC(a1, (uint64_t)v123 - v10, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v138 = a1;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      int v125 = a4;
      swift_bridgeObjectRelease();
      uint64_t v81 = *v11;
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      v123[1] = v123;
      MEMORY[0x270FA5388](v82 - 8);
      unint64_t v84 = (char *)v123 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v85 = *(void **)(v81 + 16);
      v123[2] = v81;
      if (v85)
      {
        uint64_t v86 = sub_251F34DA0();
        uint64_t v87 = *(void **)(v86 - 8);
        uint64_t v88 = v87;
        uint64_t v89 = v81 + ((*((unsigned __int8 *)v88 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v88 + 80));
        uint64_t v90 = v87[9];
        uint64_t v135 = (void (*)(char *, uint64_t, uint64_t))(v87 + 7);
        uint64_t v92 = (uint64_t)(v87 + 2);
        id v91 = (void (*)(char *, uint64_t, uint64_t))v87[2];
        uint64_t v133 = v92;
        unint64_t v134 = v91;
        uint64_t v131 = v88 + 4;
        char v132 = (char *)(v88 + 6);
        swift_bridgeObjectRetain();
        uint64_t v130 = (void (**)(unint64_t, unint64_t))(v88 + 1);
        unint64_t v129 = (void (*)(unint64_t, char *, void *))((unint64_t)(v88 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
        uint64_t v126 = v84;
        uint64_t v124 = v88;
        unint64_t v128 = v86;
        while (1)
        {
          v134(v84, v89, v86);
          (*(void (**)(char *, void, uint64_t, uint64_t))v135)(v84, 0, 1, v86);
          uint64_t v94 = (*(uint64_t (**)(char *, uint64_t, uint64_t))v132)(v84, 1, v86);
          if (v94 == 1) {
            break;
          }
          uint64_t v136 = (char *)v123;
          uint64_t v137 = v85;
          MEMORY[0x270FA5388](v94);
          id v96 = (char *)v123 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
          ((void (*)(char *, char *, uint64_t))v88[4])(v96, v84, v86);
          swift_bridgeObjectRetain();
          uint64_t v97 = (uint64_t)v12;
          unint64_t v98 = sub_2519FE584((uint64_t)v96);
          char v100 = v99;
          swift_bridgeObjectRelease();
          if (v100)
          {
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v143[0] = (uint64_t)v12;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_251A147A8();
              uint64_t v97 = v143[0];
            }
            unint64_t v102 = *(void *)(v97 + 48) + v98 * v90;
            id v93 = *v130;
            uint64_t v86 = v128;
            (*v130)(v102, v128);
            uint64_t v103 = *(void *)(v143[0] + 56) + 32 * v98;
            uint64_t v104 = *(void **)(v103 + 16);
            id v127 = *(id *)(v103 + 24);
            uint64_t v12 = (void *)v143[0];
            sub_251E3B4D4(v98, v143[0]);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_251A1A4DC(v104);
            sub_251A1A4DC(v127);
            unint64_t v84 = v126;
            uint64_t v88 = v124;
          }
          else
          {
            id v93 = *v130;
            uint64_t v86 = v128;
          }
          v93((unint64_t)v96, v86);
          v89 += v90;
          uint64_t v85 = (void *)((char *)v137 - 1);
          if (v137 == (void *)1) {
            goto LABEL_63;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_63:
        uint64_t v122 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v84, 1, 1, v122);
      }
      swift_bridgeObjectRelease();
      sub_251D80E54(v138, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v50 = (unint64_t)v12;
      goto LABEL_58;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v64 = *(uint64_t *)((char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48));
      uint64_t v51 = sub_251F34DA0();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v65 = *(void *)(v52 + 64);
      MEMORY[0x270FA5388](v51);
      unint64_t v66 = (v65 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v55 = (char *)v123 - v66;
      uint64_t v67 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v52 + 32))((char *)v123 - v66, v11, v51);
      uint64_t v68 = v12[2];
      int v125 = a4;
      uint64_t v136 = (char *)v64;
      uint64_t v137 = v123;
      if (v68 && (uint64_t v67 = sub_2519FE584((uint64_t)v123 - v66), (v69 & 1) != 0))
      {
        id v70 = (uint64_t *)(v12[7] + 32 * v67);
        uint64_t v71 = v70[1];
        unsigned int v72 = (void *)v70[2];
        unint64_t v62 = (void *)v70[3];
        uint64_t v63 = *v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251A1A4CC(v72);
        uint64_t v67 = (uint64_t)sub_251A1A4CC(v62);
      }
      else
      {
        uint64_t v63 = 0;
        uint64_t v71 = 0;
        unsigned int v72 = 0;
        unint64_t v62 = 0;
      }
      uint64_t v133 = v71;
      unint64_t v134 = (void (*)(char *, uint64_t, uint64_t))v72;
      uint64_t v135 = (void (*)(char *, uint64_t, uint64_t))v123;
      MEMORY[0x270FA5388](v67);
      uint64_t v114 = (char *)v123 - v66;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v114, v55, v51);
      char v139 = (void *)v63;
      uint64_t v140 = v71;
      uint64_t v141 = v72;
      id v142 = v62;
      sub_251D7D088((uint64_t)v136, (uint64_t *)&v139, v143);
      goto LABEL_57;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v136 = *(char **)((char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48));
      uint64_t v51 = sub_251F34DA0();
      uint64_t v137 = v123;
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v73 = *(void *)(v52 + 64);
      MEMORY[0x270FA5388](v51);
      unint64_t v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v55 = (char *)v123 - v74;
      uint64_t v75 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v52 + 32))((char *)v123 - v74, v11, v51);
      uint64_t v76 = v12[2];
      int v125 = a4;
      if (v76 && (uint64_t v75 = sub_2519FE584((uint64_t)v123 - v74), (v77 & 1) != 0))
      {
        id v78 = (uint64_t *)(v12[7] + 32 * v75);
        uint64_t v79 = v78[1];
        id v80 = (void *)v78[2];
        unint64_t v62 = (void *)v78[3];
        uint64_t v63 = *v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251A1A4CC(v80);
        uint64_t v75 = (uint64_t)sub_251A1A4CC(v62);
      }
      else
      {
        uint64_t v63 = 0;
        uint64_t v79 = 0;
        id v80 = 0;
        unint64_t v62 = 0;
      }
      uint64_t v133 = v79;
      unint64_t v134 = (void (*)(char *, uint64_t, uint64_t))v80;
      uint64_t v135 = (void (*)(char *, uint64_t, uint64_t))v123;
      MEMORY[0x270FA5388](v75);
      uint64_t v114 = (char *)v123 - v74;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v114, v55, v51);
      char v139 = (void *)v63;
      uint64_t v140 = v79;
      uint64_t v141 = v80;
      id v142 = v62;
      sub_251D7D414((uint64_t)v136, (uint64_t *)&v139, v143);
      goto LABEL_57;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v136 = *(char **)((char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48));
      uint64_t v51 = sub_251F34DA0();
      uint64_t v137 = v123;
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(void *)(v52 + 64);
      MEMORY[0x270FA5388](v51);
      unint64_t v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v55 = (char *)v123 - v54;
      uint64_t v56 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v52 + 32))((char *)v123 - v54, v11, v51);
      uint64_t v57 = v12[2];
      int v125 = a4;
      if (v57 && (uint64_t v56 = sub_2519FE584((uint64_t)v123 - v54), (v58 & 1) != 0))
      {
        uint64_t v59 = (uint64_t *)(v12[7] + 32 * v56);
        uint64_t v60 = v59[1];
        uint64_t v61 = (void *)v59[2];
        unint64_t v62 = (void *)v59[3];
        uint64_t v63 = *v59;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251A1A4CC(v61);
        uint64_t v56 = (uint64_t)sub_251A1A4CC(v62);
      }
      else
      {
        uint64_t v63 = 0;
        uint64_t v60 = 0;
        uint64_t v61 = 0;
        unint64_t v62 = 0;
      }
      uint64_t v133 = v60;
      unint64_t v134 = (void (*)(char *, uint64_t, uint64_t))v61;
      uint64_t v135 = (void (*)(char *, uint64_t, uint64_t))v123;
      MEMORY[0x270FA5388](v56);
      uint64_t v114 = (char *)v123 - v54;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v114, v55, v51);
      char v139 = (void *)v63;
      uint64_t v140 = v60;
      uint64_t v141 = v61;
      id v142 = v62;
      sub_251D7D814((uint64_t)v136, (uint64_t *)&v139, v143);
      goto LABEL_57;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v105 = *(uint64_t *)((char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48));
      uint64_t v51 = sub_251F34DA0();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v106 = *(void *)(v52 + 64);
      MEMORY[0x270FA5388](v51);
      unint64_t v107 = (v106 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v55 = (char *)v123 - v107;
      uint64_t v108 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v52 + 32))((char *)v123 - v107, v11, v51);
      uint64_t v109 = v12[2];
      int v125 = a4;
      uint64_t v136 = (char *)v105;
      uint64_t v137 = v123;
      if (v109 && (uint64_t v108 = sub_2519FE584((uint64_t)v123 - v107), (v110 & 1) != 0))
      {
        uint64_t v111 = (uint64_t *)(v12[7] + 32 * v108);
        uint64_t v112 = v111[1];
        id v113 = (void *)v111[2];
        unint64_t v62 = (void *)v111[3];
        uint64_t v63 = *v111;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251A1A4CC(v113);
        uint64_t v108 = (uint64_t)sub_251A1A4CC(v62);
      }
      else
      {
        uint64_t v63 = 0;
        uint64_t v112 = 0;
        id v113 = 0;
        unint64_t v62 = 0;
      }
      uint64_t v133 = v112;
      unint64_t v134 = (void (*)(char *, uint64_t, uint64_t))v113;
      uint64_t v135 = (void (*)(char *, uint64_t, uint64_t))v123;
      MEMORY[0x270FA5388](v108);
      uint64_t v114 = (char *)v123 - v107;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v114, v55, v51);
      char v139 = (void *)v63;
      uint64_t v140 = v112;
      uint64_t v141 = v113;
      id v142 = v62;
      sub_251D7DBA8((uint64_t)v136, (uint64_t *)&v139, v143);
LABEL_57:
      swift_bridgeObjectRelease();
      uint64_t v136 = v55;
      uint64_t v115 = v143[0];
      uint64_t v116 = v143[1];
      uint64_t v117 = v143[2];
      uint64_t v118 = v143[3];
      char v119 = swift_isUniquelyReferenced_nonNull_native();
      char v139 = v12;
      sub_251A0E7E8(v115, v116, v117, v118, (uint64_t)v114, v119);
      uint64_t v120 = (uint64_t)v139;
      swift_bridgeObjectRelease();
      uint64_t v121 = *(void (**)(char *, uint64_t))(v52 + 8);
      v121(v114, v51);
      sub_251D7DFBC(v63, v133, v134, v62);
      sub_251D80E54(v138, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
      v121(v136, v51);
      swift_bridgeObjectRetain();
      unint64_t v50 = v120;
LABEL_58:
      a4 = v125;
      goto LABEL_59;
    case 6:
      swift_bridgeObjectRelease();
      unint64_t v50 = sub_2519FABF8(MEMORY[0x263F8EE78]);
      sub_251D80E54(a1, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
      sub_251D80E54((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
      goto LABEL_59;
    case 7:
      char v139 = v12;
      swift_bridgeObjectRetain();
      sub_251D7CBA4(a2, (unint64_t *)&v139, (unint64_t *)v143);
      sub_251D80E54(a1, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
      unint64_t v50 = v143[0];
      goto LABEL_59;
    default:
      swift_bridgeObjectRelease();
      if (!a2)
      {
        sub_251D80E54(a1, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
        goto LABEL_70;
      }
      int v125 = a4;
      if (a2 >> 62) {
        goto LABEL_68;
      }
      uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v14) {
        goto LABEL_69;
      }
      break;
  }
  do
  {
    id v127 = (id)a2;
    unint64_t v128 = a2 & 0xC000000000000001;
    uint64_t v15 = 4;
    uint64_t v126 = (char *)v14;
    while (1)
    {
      uint64_t v21 = v15 - 4;
      if (!v128) {
        break;
      }
      uint64_t v22 = MEMORY[0x2533AB3A0](v15 - 4, a2);
      a1 = v15 - 3;
      if (__OFADD__(v21, 1)) {
        goto LABEL_65;
      }
LABEL_14:
      uint64_t v23 = (uint64_t)v12;
      uint64_t v133 = v15;
      uint64_t v24 = v22 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id;
      uint64_t v25 = sub_251F34DA0();
      uint64_t v131 = v123;
      uint64_t v26 = *(void *)(v25 - 8);
      MEMORY[0x270FA5388](v25);
      unint64_t v28 = (void (**)(unint64_t, unint64_t))v22;
      BOOL v29 = (char *)v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v30 = *(void (**)(unint64_t, char *, void *))(v26 + 16);
      uint64_t v137 = v31;
      unint64_t v129 = v30;
      ((void (*)(char *, uint64_t))v30)(v29, v24);
      uint64_t v32 = *(uint64_t *)((char *)v28 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms);
      uint64_t v33 = *(uint64_t *)((char *)v28 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers);
      char v34 = *(void (**)(unint64_t, unint64_t))((char *)v28
                                                                      + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError);
      uint64_t v130 = v28;
      uint64_t v35 = *(void (**)(unint64_t, unint64_t))((char *)v28
                                                                      + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError);
      v143[0] = v32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_251A1A4CC(v34);
      uint64_t v135 = (void (*)(char *, uint64_t, uint64_t))v35;
      sub_251A1A4CC(v35);
      sub_251D7E01C(v143, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_251ECDC9C, sub_251D7EEF4);
      uint64_t v136 = (char *)v34;
      char v132 = (char *)a1;
      swift_bridgeObjectRelease();
      unint64_t v134 = (void (*)(char *, uint64_t, uint64_t))v143[0];
      v143[0] = v33;
      swift_bridgeObjectRetain();
      sub_251D7E01C(v143, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_251ECDC88, sub_251D7E0E0);
      swift_bridgeObjectRelease();
      uint64_t v36 = v143[0];
      a1 = swift_isUniquelyReferenced_nonNull_native();
      v143[0] = v23;
      uint64_t v12 = (void *)v23;
      a2 = sub_2519FE584((uint64_t)v29);
      uint64_t v38 = *(void *)(v23 + 16);
      BOOL v39 = (v37 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39)) {
        goto LABEL_66;
      }
      char v41 = v37;
      if (*(void *)(v23 + 24) >= v40)
      {
        if (a1)
        {
          uint64_t v12 = (void *)v143[0];
          if (v37) {
            goto LABEL_7;
          }
        }
        else
        {
          sub_251A147A8();
          uint64_t v12 = (void *)v143[0];
          if (v41) {
            goto LABEL_7;
          }
        }
      }
      else
      {
        sub_251A065E0(v40, a1);
        unint64_t v42 = sub_2519FE584((uint64_t)v29);
        if ((v41 & 1) != (v43 & 1))
        {
          sub_251F36BA0();
          __break(1u);
          JUMPOUT(0x251D7CB84);
        }
        a2 = v42;
        uint64_t v12 = (void *)v143[0];
        if (v41)
        {
LABEL_7:
          uint64_t v16 = v12;
          uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v12[7] + 32 * a2);
          uint64_t v18 = v17[2];
          uint64_t v19 = v17[3];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_251A1A4DC(v18);
          sub_251A1A4DC(v19);
          *uint64_t v17 = v134;
          v17[1] = (void (*)(char *, uint64_t, uint64_t))v36;
          a1 = (uint64_t)v137;
          uint64_t v20 = v135;
          void v17[2] = (void (*)(char *, uint64_t, uint64_t))v136;
          v17[3] = v20;
          uint64_t v12 = v16;
          goto LABEL_8;
        }
      }
      v12[(a2 >> 6) + 8] |= 1 << a2;
      a1 = (uint64_t)v137;
      v129(v12[6] + *(void *)(v26 + 72) * a2, v29, v137);
      uint64_t v44 = (void (**)(char *, uint64_t, uint64_t))(v12[7] + 32 * a2);
      void *v44 = v134;
      v44[1] = (void (*)(char *, uint64_t, uint64_t))v36;
      uint64_t v45 = v135;
      void v44[2] = (void (*)(char *, uint64_t, uint64_t))v136;
      v44[3] = v45;
      uint64_t v46 = v12[2];
      BOOL v47 = __OFADD__(v46, 1);
      uint64_t v48 = v46 + 1;
      if (v47) {
        goto LABEL_67;
      }
      void v12[2] = v48;
LABEL_8:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v29, a1);
      swift_release();
      uint64_t v15 = v133 + 1;
      a1 = v138;
      a2 = (unint64_t)v127;
      if (v132 == v126) {
        goto LABEL_69;
      }
    }
    uint64_t v22 = *(void *)(a2 + 8 * v15);
    swift_retain();
    a1 = v15 - 3;
    if (!__OFADD__(v21, 1)) {
      goto LABEL_14;
    }
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  while (v14);
LABEL_69:
  swift_bridgeObjectRelease();
  sub_251D80E54(a1, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  swift_bridgeObjectRelease();
  a4 = v125;
LABEL_70:
  swift_bridgeObjectRetain();
  unint64_t v50 = (unint64_t)v12;
LABEL_59:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_60:
  *a4 = v50;
  return result;
}

uint64_t sub_251D7CBA4@<X0>(unint64_t isUniquelyReferenced_nonNull_native@<X0>, unint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v5 = *a2;
  char v6 = (void *)sub_2519FABF8(MEMORY[0x263F8EE78]);
  if (!isUniquelyReferenced_nonNull_native)
  {
    if (!v5) {
      unint64_t v5 = sub_2519FABF8(MEMORY[0x263F8EE78]);
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    unint64_t v42 = a3;
    if (v7) {
      goto LABEL_4;
    }
    goto LABEL_29;
  }
  uint64_t v7 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  unint64_t v42 = a3;
  if (!v7)
  {
LABEL_29:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    unint64_t v5 = (unint64_t)v6;
    a3 = v42;
LABEL_30:
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v5;
    return result;
  }
LABEL_4:
  a3 = 0;
  unint64_t v44 = isUniquelyReferenced_nonNull_native;
  unint64_t v45 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v8 = 4;
  uint64_t v43 = v7;
  while (1)
  {
    uint64_t v13 = v8 - 4;
    if (v45)
    {
      uint64_t v14 = MEMORY[0x2533AB3A0](v8 - 4, isUniquelyReferenced_nonNull_native);
      uint64_t v15 = v8 - 3;
      if (__OFADD__(v13, 1)) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(isUniquelyReferenced_nonNull_native + 8 * v8);
      swift_retain();
      uint64_t v15 = v8 - 3;
      if (__OFADD__(v13, 1))
      {
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    uint64_t v49 = v15;
    uint64_t v50 = v8;
    uint64_t v16 = v14 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id;
    uint64_t v17 = sub_251F34DA0();
    uint64_t v48 = &v41;
    uint64_t v18 = *(void *)(v17 - 8);
    MEMORY[0x270FA5388](v17);
    uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v52 = v18;
    uint64_t v21 = *(void (**)(unint64_t, char *, unint64_t))(v18 + 16);
    unint64_t v54 = v22;
    uint64_t v46 = v21;
    ((void (*)(char *, uint64_t))v21)(v20, v16);
    uint64_t v23 = *(void *)(v14 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms);
    uint64_t v24 = *(void *)(v14 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers);
    uint64_t v25 = *(void **)(v14 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError);
    uint64_t v47 = v14;
    uint64_t v26 = *(void **)(v14 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError);
    uint64_t v55 = (void *)v23;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v53 = (uint64_t)v25;
    sub_251A1A4CC(v25);
    sub_251A1A4CC(v26);
    sub_251D7E01C((uint64_t *)&v55, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_251ECDC9C, sub_251D7EEF4);
    swift_bridgeObjectRelease();
    uint64_t v51 = (uint64_t)v55;
    uint64_t v55 = (void *)v24;
    swift_bridgeObjectRetain();
    sub_251D7E01C((uint64_t *)&v55, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_251ECDC88, sub_251D7E0E0);
    swift_bridgeObjectRelease();
    uint64_t v27 = (uint64_t)v55;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v55 = v6;
    unint64_t v29 = sub_2519FE584((uint64_t)v20);
    uint64_t v30 = v6[2];
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      goto LABEL_26;
    }
    char v33 = v28;
    if (v6[3] < v32) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      char v6 = v55;
      if (v28) {
        goto LABEL_5;
      }
    }
    else
    {
      sub_251A147A8();
      char v6 = v55;
      if (v33)
      {
LABEL_5:
        uint64_t v9 = (uint64_t *)(v6[7] + 32 * v29);
        unint64_t v10 = (void *)v9[2];
        uint64_t v11 = (void *)v9[3];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251A1A4DC(v10);
        sub_251A1A4DC(v11);
        uint64_t v12 = v52;
        *uint64_t v9 = v51;
        v9[1] = v27;
        int isUniquelyReferenced_nonNull_native = v54;
        v9[2] = v53;
        void v9[3] = (uint64_t)v26;
        goto LABEL_6;
      }
    }
LABEL_19:
    v6[(v29 >> 6) + 8] |= 1 << v29;
    uint64_t v12 = v52;
    int isUniquelyReferenced_nonNull_native = v54;
    v46(v6[6] + *(void *)(v52 + 72) * v29, v20, v54);
    uint64_t v36 = (uint64_t *)(v6[7] + 32 * v29);
    *uint64_t v36 = v51;
    v36[1] = v27;
    v36[2] = v53;
    v36[3] = (uint64_t)v26;
    uint64_t v37 = v6[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_27;
    }
    uint64_t v6[2] = v39;
LABEL_6:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, unint64_t))(v12 + 8))(v20, isUniquelyReferenced_nonNull_native);
    swift_release();
    uint64_t v8 = v50 + 1;
    int isUniquelyReferenced_nonNull_native = v44;
    if (v49 == v43) {
      goto LABEL_29;
    }
  }
  sub_251A065E0(v32, isUniquelyReferenced_nonNull_native);
  unint64_t v34 = sub_2519FE584((uint64_t)v20);
  if ((v33 & 1) == (v35 & 1))
  {
    unint64_t v29 = v34;
    char v6 = v55;
    if (v33) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251D7D088@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StaticAlarm();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v13 = (void *)a2[2];
  uint64_t v12 = (void *)a2[3];
  uint64_t v33 = v10;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    unint64_t v15 = sub_251D80F1C(v14, a1);
    uint64_t v34 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = 0;
    unint64_t v15 = MEMORY[0x263F8EE78];
  }
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    uint64_t v29 = v11;
    uint64_t v30 = v13;
    BOOL v31 = v12;
    uint64_t v32 = a3;
    unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v35 = a1 + v16;
    uint64_t v17 = *(void *)(v7 + 72);
    uint64_t v28 = a1;
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = v35 + v17 * v18;
      uint64_t v20 = *(void *)(v15 + 16);
      if (v20)
      {
        unint64_t v21 = v15 + v16;
        swift_bridgeObjectRetain();
        do
        {
          if (sub_251F34D70())
          {
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          v21 += v17;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
      }
      sub_251D80DEC(v19, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_251F10DB0(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v23 = *(void *)(v15 + 16);
      unint64_t v22 = *(void *)(v15 + 24);
      if (v23 >= v22 >> 1) {
        unint64_t v15 = sub_251F10DB0(v22 > 1, v23 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v23 + 1;
      sub_251D80EB4((uint64_t)v9, v15 + v16 + v23 * v17, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
LABEL_7:
      ++v18;
    }
    while (v18 != v36);
    swift_bridgeObjectRelease();
    uint64_t v12 = v31;
    a3 = v32;
    uint64_t v11 = v29;
    uint64_t v13 = v30;
  }
  if (v33)
  {
    swift_bridgeObjectRetain();
    sub_251A1A4CC(v13);
    sub_251A1A4CC(v12);
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  uint64_t v37 = v15;
  swift_bridgeObjectRetain();
  uint64_t v24 = v34;
  sub_251D7E01C(&v37, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_251ECDC9C, sub_251D7EEF4);
  if (v24)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = v37;
    uint64_t v37 = v11;
    swift_bridgeObjectRetain();
    sub_251D7E01C(&v37, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_251ECDC88, sub_251D7E0E0);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v27 = v37;
    *a3 = v25;
    a3[1] = v27;
    a3[2] = (uint64_t)v13;
    a3[3] = (uint64_t)v12;
  }
  return result;
}

uint64_t sub_251D7D414@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v39 = type metadata accessor for StaticAlarm();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v12 = (void *)a2[2];
  uint64_t v11 = (void *)a2[3];
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v30 = v9;
    uint64_t v31 = v10;
    uint64_t v32 = v12;
    uint64_t v33 = v11;
    uint64_t v34 = a3;
    uint64_t v40 = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v13, 0);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v16 - 8);
    uint64_t v37 = *(void *)(v18 + 64);
    uint64_t v38 = v16;
    uint64_t v19 = *(void *)(v6 + 72);
    uint64_t v35 = v18 + 32;
    uint64_t v36 = v19;
    do
    {
      MEMORY[0x270FA5388](v16);
      unint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251D80DEC(v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, &v8[*(int *)(v39 + 36)], v17);
      sub_251D80E54((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      uint64_t v14 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v40;
      }
      unint64_t v23 = *(void *)(v14 + 16);
      unint64_t v22 = *(void *)(v14 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_251A3E084(v22 > 1, v23 + 1, 1);
        uint64_t v14 = v40;
      }
      *(void *)(v14 + 16) = v23 + 1;
      unint64_t v24 = v14
          + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))
          + *(void *)(v18 + 72) * v23;
      uint64_t v17 = v38;
      uint64_t v16 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))(v24, v21, v38);
      uint64_t v40 = v14;
      v15 += v36;
      --v13;
    }
    while (v13);
    uint64_t v11 = v33;
    a3 = v34;
    uint64_t v10 = v31;
    uint64_t v12 = v32;
    uint64_t v9 = v30;
  }
  if (v9)
  {
    uint64_t v25 = v9;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_251D81544(v25, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251A1A4CC(v12);
    sub_251A1A4CC(v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t v26 = MEMORY[0x263F8EE78];
  }
  uint64_t v40 = v26;
  swift_bridgeObjectRetain();
  sub_251D7E01C(&v40, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_251ECDC9C, sub_251D7EEF4);
  swift_bridgeObjectRelease();
  uint64_t v27 = v40;
  uint64_t v40 = v10;
  swift_bridgeObjectRetain();
  sub_251D7E01C(&v40, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_251ECDC88, sub_251D7E0E0);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v29 = v40;
  *a3 = v27;
  a3[1] = v29;
  a3[2] = (uint64_t)v12;
  a3[3] = (uint64_t)v11;
  return result;
}

uint64_t sub_251D7D814@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = 0;
  uint64_t v7 = type metadata accessor for StaticTimer();
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a2;
  int64_t v13 = (void *)a2[2];
  uint64_t v12 = (void *)a2[3];
  uint64_t v34 = v13;
  if (v11)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v8;
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_bridgeObjectRetain();
    unint64_t v17 = sub_251D81230(v16, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v15;
    uint64_t v12 = v14;
    int64_t v13 = v34;
  }
  else
  {
    unint64_t v17 = MEMORY[0x263F8EE78];
  }
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    uint64_t v30 = v11;
    uint64_t v31 = 0;
    uint64_t v32 = v12;
    uint64_t v33 = a3;
    unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v35 = a1 + v18;
    uint64_t v19 = *(void *)(v8 + 72);
    v29[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    do
    {
      uint64_t v21 = v35 + v19 * v20;
      uint64_t v22 = *(void *)(v17 + 16);
      if (v22)
      {
        unint64_t v23 = v17 + v18;
        swift_bridgeObjectRetain();
        do
        {
          if (sub_251F34D70())
          {
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          v23 += v19;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
      }
      sub_251D80DEC(v21, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_251F10028(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v25 = *(void *)(v17 + 16);
      unint64_t v24 = *(void *)(v17 + 24);
      if (v25 >= v24 >> 1) {
        unint64_t v17 = sub_251F10028(v24 > 1, v25 + 1, 1, v17);
      }
      *(void *)(v17 + 16) = v25 + 1;
      sub_251D80EB4((uint64_t)v10, v17 + v18 + v25 * v19, (uint64_t (*)(void))type metadata accessor for StaticTimer);
LABEL_7:
      ++v20;
    }
    while (v20 != v36);
    swift_bridgeObjectRelease();
    uint64_t v12 = v32;
    a3 = v33;
    int64_t v13 = v34;
    uint64_t v11 = v30;
    uint64_t v6 = v31;
  }
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_251A1A4CC(v13);
    sub_251A1A4CC(v12);
  }
  else
  {
    uint64_t v12 = 0;
    int64_t v13 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  uint64_t v37 = v11;
  swift_bridgeObjectRetain();
  sub_251D7E01C(&v37, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_251ECDC9C, sub_251D7EEF4);
  if (v6)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = v37;
    uint64_t v37 = v17;
    swift_bridgeObjectRetain();
    sub_251D7E01C(&v37, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_251ECDC88, sub_251D7E0E0);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = v37;
    *a3 = v26;
    a3[1] = v28;
    a3[2] = (uint64_t)v13;
    a3[3] = (uint64_t)v12;
  }
  return result;
}

uint64_t sub_251D7DBA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v38 = type metadata accessor for StaticTimer();
  uint64_t v6 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  uint64_t v10 = (void *)a2[2];
  uint64_t v32 = a2[1];
  uint64_t v33 = v9;
  uint64_t v11 = (void *)a2[3];
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v29 = v10;
    uint64_t v30 = v11;
    uint64_t v31 = a3;
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)(v15 - 8);
    uint64_t v37 = *(void *)(v17 + 64);
    uint64_t v18 = *(void *)(v6 + 72);
    unint64_t v35 = (void (**)(char *, char *, uint64_t))(v17 + 16);
    uint64_t v36 = v18;
    uint64_t v34 = v17 + 32;
    do
    {
      MEMORY[0x270FA5388](v15);
      uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251D80DEC(v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      (*v35)(v20, &v8[*(int *)(v38 + 40)], v16);
      sub_251D80E54((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      uint64_t v13 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v39;
      }
      unint64_t v22 = *(void *)(v13 + 16);
      unint64_t v21 = *(void *)(v13 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_251A3E084(v21 > 1, v22 + 1, 1);
        uint64_t v13 = v39;
      }
      *(void *)(v13 + 16) = v22 + 1;
      uint64_t v15 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(v13+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v22, v20, v16);
      uint64_t v39 = v13;
      v14 += v36;
      --v12;
    }
    while (v12);
    uint64_t v11 = v30;
    a3 = v31;
    uint64_t v10 = v29;
  }
  uint64_t v23 = v33;
  if (v33)
  {
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_251D81A10(v24, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251A1A4CC(v10);
    sub_251A1A4CC(v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    uint64_t v25 = MEMORY[0x263F8EE78];
    uint64_t v23 = MEMORY[0x263F8EE78];
  }
  uint64_t v39 = v23;
  swift_bridgeObjectRetain();
  sub_251D7E01C(&v39, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_251ECDC9C, sub_251D7EEF4);
  swift_bridgeObjectRelease();
  uint64_t v26 = v39;
  uint64_t v39 = v25;
  swift_bridgeObjectRetain();
  sub_251D7E01C(&v39, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_251ECDC88, sub_251D7E0E0);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = v39;
  *a3 = v26;
  a3[1] = v28;
  a3[2] = (uint64_t)v10;
  a3[3] = (uint64_t)v11;
  return result;
}

void sub_251D7DFBC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A1A4DC(a3);
    sub_251A1A4DC(a4);
  }
}

uint64_t sub_251D7E01C(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(void *))
{
  uint64_t v7 = *(void *)(a2(0) - 8);
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a3(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  uint64_t result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_251D7E0E0(uint64_t *a1)
{
  uint64_t v2 = v1;
  BOOL v176 = (int *)type metadata accessor for StaticTimer();
  uint64_t v169 = *((void *)v176 - 1);
  uint64_t v4 = MEMORY[0x270FA5388](v176);
  uint64_t v164 = (uint64_t)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v173 = (uint64_t)&v157 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (double *)((char *)&v157 - v9);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (double *)((char *)&v157 - v12);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (double *)((char *)&v157 - v15);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (double *)((char *)&v157 - v18);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  unint64_t v22 = (double *)((char *)&v157 - v21);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (double *)((char *)&v157 - v23);
  uint64_t v175 = a1;
  uint64_t v25 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v25)
  {
    if (v25 < 0) {
      goto LABEL_199;
    }
    if (v25) {
      return sub_251D7FADC(0, v25, 1, v175);
    }
    return result;
  }
  if (v25 >= 0) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v25 + 1;
  }
  if (v25 < -1)
  {
LABEL_207:
    uint64_t result = sub_251F36670();
    __break(1u);
    return result;
  }
  uint64_t v172 = v13;
  unint64_t v161 = v24;
  uint64_t v158 = result;
  if (v25 < 2)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    unint64_t v168 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80));
    if (v25 != 1)
    {
      unint64_t v34 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v33 = (char *)MEMORY[0x263F8EE78];
      goto LABEL_164;
    }
    uint64_t v157 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v28 = v27 >> 1;
    uint64_t v29 = sub_251F35B50();
    *(void *)(v29 + 16) = v28;
    uint64_t v30 = *(unsigned __int8 *)(v169 + 80);
    uint64_t v157 = v29;
    unint64_t v168 = v29 + ((v30 + 32) & ~v30);
  }
  uint64_t v32 = 0;
  uint64_t v33 = (char *)MEMORY[0x263F8EE78];
  char v171 = v10;
  uint64_t v166 = v19;
  uint64_t v167 = v16;
  BOOL v159 = v22;
  while (2)
  {
    uint64_t v35 = v32;
    uint64_t v36 = v32 + 1;
    uint64_t v170 = v25;
    if (v32 + 1 >= v25) {
      goto LABEL_78;
    }
    unint64_t v160 = v33;
    uint64_t v37 = *v175;
    uint64_t v38 = *(void *)(v169 + 72);
    uint64_t v163 = v32 + 1;
    uint64_t v39 = v161;
    sub_251D80DEC(v37 + v38 * v36, (uint64_t)v161, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    uint64_t v162 = v37;
    uint64_t v174 = v38;
    sub_251D80DEC(v37 + v38 * v35, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    uint64_t v40 = v176[8];
    int v41 = *((unsigned __int8 *)v39 + v40);
    if (v41 == 1)
    {
      double v42 = *(double *)((char *)v161 + v176[6]);
    }
    else if (v41 == 2)
    {
      double v42 = *v161;
    }
    else
    {
      double v42 = 0.0;
      if (v41 == 3)
      {
        double v43 = *v161;
        unint64_t v44 = v176;
        sub_251F34CA0();
        double v42 = v43 + v45;
        uint64_t v40 = v44[8];
      }
    }
    int v46 = *((unsigned __int8 *)v22 + v40);
    switch(v46)
    {
      case 1:
        double v49 = *(double *)((char *)v22 + v176[6]);
        if (v42 != v49) {
          goto LABEL_35;
        }
        break;
      case 2:
        double v49 = *v22;
        if (v42 != *v22) {
          goto LABEL_35;
        }
        break;
      case 3:
        double v47 = *v22;
        sub_251F34CA0();
        double v49 = v47 + v48;
        if (v42 != v49) {
          goto LABEL_35;
        }
        break;
      default:
        if (v42 != 0.0)
        {
          double v49 = 0.0;
LABEL_35:
          LODWORD(v165) = v42 < v49;
          uint64_t v50 = v161;
          goto LABEL_36;
        }
        break;
    }
    uint64_t v50 = v161;
    LODWORD(v165) = MEMORY[0x2533A9CA0]((char *)v161 + v176[10], (char *)v22 + v176[10]);
LABEL_36:
    sub_251D80E54((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    sub_251D80E54((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    uint64_t v36 = v35 + 2;
    if (v35 + 2 >= v170)
    {
LABEL_62:
      uint64_t v66 = v170;
      if ((v165 & 1) == 0) {
        goto LABEL_75;
      }
LABEL_63:
      if (v36 < v35) {
        goto LABEL_200;
      }
      if (v35 >= v36) {
        goto LABEL_75;
      }
      uint64_t v67 = 0;
      uint64_t v68 = v174 * (v36 - 1);
      uint64_t v69 = v35;
      uint64_t v70 = v36 * v174;
      uint64_t v71 = v69;
      uint64_t v165 = v69;
      uint64_t v72 = v69 * v174;
      do
      {
        if (v71 != v36 + v67 - 1)
        {
          uint64_t v74 = v162;
          if (!v162) {
            goto LABEL_205;
          }
          unint64_t v75 = v162 + v72;
          uint64_t v163 = v162 + v68;
          sub_251D80EB4(v162 + v72, v164, (uint64_t (*)(void))type metadata accessor for StaticTimer);
          if (v72 < v68 || v75 >= v74 + v70)
          {
            uint64_t v73 = v163;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v73 = v163;
            if (v72 != v68) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          sub_251D80EB4(v164, v73, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        }
        ++v71;
        --v67;
        v68 -= v174;
        v70 -= v174;
        v72 += v174;
      }
      while (v71 < v36 + v67);
      uint64_t v33 = v160;
      uint64_t v19 = v166;
      uint64_t v16 = v167;
      uint64_t v35 = v165;
LABEL_78:
      uint64_t v66 = v170;
      if (v36 >= v170) {
        goto LABEL_115;
      }
      goto LABEL_79;
    }
    uint64_t v51 = v35;
    uint64_t v52 = v162;
    v163 *= v174;
    uint64_t v53 = v174 * v36;
    do
    {
      uint64_t v54 = v36;
      sub_251D80DEC(v52 + v53, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      sub_251D80DEC(v52 + v163, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      uint64_t v55 = v176[8];
      int v56 = *((unsigned __int8 *)v19 + v55);
      if (v56 == 1)
      {
        double v57 = *(double *)((char *)v19 + v176[6]);
      }
      else if (v56 == 2)
      {
        double v57 = *v19;
      }
      else
      {
        double v57 = 0.0;
        if (v56 == 3)
        {
          double v58 = *v19;
          uint64_t v59 = v176;
          sub_251F34CA0();
          double v57 = v58 + v60;
          uint64_t v55 = v59[8];
        }
      }
      int v61 = *((unsigned __int8 *)v16 + v55);
      switch(v61)
      {
        case 1:
          double v64 = *(double *)((char *)v16 + v176[6]);
          if (v57 == v64) {
            goto LABEL_54;
          }
          break;
        case 2:
          double v64 = *v16;
          if (v57 == *v16) {
            goto LABEL_54;
          }
          break;
        case 3:
          double v62 = *v16;
          sub_251F34CA0();
          double v64 = v62 + v63;
          if (v57 == v64) {
            goto LABEL_54;
          }
          break;
        default:
          if (v57 == 0.0)
          {
LABEL_54:
            int v65 = MEMORY[0x2533A9CA0]((char *)v19 + v176[10], (char *)v16 + v176[10]);
            goto LABEL_57;
          }
          double v64 = 0.0;
          break;
      }
      int v65 = v57 < v64;
LABEL_57:
      sub_251D80E54((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      sub_251D80E54((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      if ((v165 ^ v65))
      {
        uint64_t v36 = v54;
        uint64_t v35 = v51;
        goto LABEL_62;
      }
      uint64_t v36 = v54 + 1;
      v52 += v174;
    }
    while (v170 != v54 + 1);
    uint64_t v66 = v170;
    uint64_t v36 = v170;
    uint64_t v35 = v51;
    if (v165) {
      goto LABEL_63;
    }
LABEL_75:
    uint64_t v33 = v160;
    if (v36 >= v66) {
      goto LABEL_115;
    }
LABEL_79:
    if (__OFSUB__(v36, v35)) {
      goto LABEL_198;
    }
    if (v36 - v35 >= v158) {
      goto LABEL_115;
    }
    if (__OFADD__(v35, v158)) {
      goto LABEL_201;
    }
    if (v35 + v158 >= v66) {
      uint64_t v76 = v66;
    }
    else {
      uint64_t v76 = v35 + v158;
    }
    if (v76 < v35)
    {
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
      goto LABEL_207;
    }
    if (v36 == v76) {
      goto LABEL_115;
    }
    uint64_t v165 = v35;
    unint64_t v160 = v33;
    uint64_t v162 = v2;
    uint64_t v163 = v76;
    uint64_t v77 = *(void *)(v169 + 72);
    uint64_t v174 = v77 * (v36 - 1);
    uint64_t v170 = v77;
    uint64_t v78 = v36 * v77;
    while (2)
    {
      uint64_t v79 = 0;
      uint64_t v80 = v165;
      while (2)
      {
        uint64_t v81 = v36;
        uint64_t v82 = *v175;
        uint64_t v83 = v172;
        sub_251D80DEC(v78 + v79 + *v175, (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        uint64_t v84 = v174 + v79 + v82;
        uint64_t v85 = v171;
        sub_251D80DEC(v84, (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        uint64_t v86 = v176[8];
        int v87 = *((unsigned __int8 *)v83 + v86);
        if (v87 == 1)
        {
          double v88 = *(double *)((char *)v83 + v176[6]);
        }
        else if (v87 == 2)
        {
          double v88 = *v83;
        }
        else
        {
          double v88 = 0.0;
          if (v87 == 3)
          {
            double v89 = *v83;
            uint64_t v90 = v176;
            sub_251F34CA0();
            double v88 = v89 + v91;
            uint64_t v86 = v90[8];
            uint64_t v85 = v171;
            uint64_t v83 = v172;
          }
        }
        int v92 = *((unsigned __int8 *)v85 + v86);
        switch(v92)
        {
          case 1:
            double v95 = *(double *)((char *)v85 + v176[6]);
            if (v88 == v95) {
              break;
            }
            goto LABEL_110;
          case 2:
            double v95 = *v85;
            if (v88 == *v85) {
              break;
            }
LABEL_110:
            char v96 = v88 < v95;
            goto LABEL_111;
          case 3:
            double v93 = *v85;
            sub_251F34CA0();
            uint64_t v83 = v172;
            double v95 = v93 + v94;
            if (v88 != v95) {
              goto LABEL_110;
            }
            break;
          default:
            if (v88 != 0.0)
            {
              double v95 = 0.0;
              goto LABEL_110;
            }
            break;
        }
        char v96 = MEMORY[0x2533A9CA0]((char *)v83 + v176[10], (char *)v85 + v176[10]);
LABEL_111:
        sub_251D80E54((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        sub_251D80E54((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        if (v96)
        {
          uint64_t v97 = *v175;
          if (!*v175) {
            goto LABEL_203;
          }
          uint64_t v98 = v97 + v174 + v79;
          sub_251D80EB4(v97 + v78 + v79, v173, (uint64_t (*)(void))type metadata accessor for StaticTimer);
          swift_arrayInitWithTakeFrontToBack();
          sub_251D80EB4(v173, v98, (uint64_t (*)(void))type metadata accessor for StaticTimer);
          v79 -= v170;
          ++v80;
          uint64_t v36 = v81;
          if (v81 == v80) {
            goto LABEL_89;
          }
          continue;
        }
        break;
      }
      uint64_t v36 = v81;
LABEL_89:
      ++v36;
      v174 += v170;
      v78 += v170;
      if (v36 != v163) {
        continue;
      }
      break;
    }
    uint64_t v36 = v163;
    uint64_t v2 = v162;
    uint64_t v33 = v160;
    uint64_t v19 = v166;
    uint64_t v16 = v167;
    uint64_t v35 = v165;
LABEL_115:
    if (v36 < v35) {
      goto LABEL_193;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v174 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v33 = sub_251ECD5C4(0, *((void *)v33 + 2) + 1, 1, v33);
    }
    unint64_t v101 = *((void *)v33 + 2);
    unint64_t v100 = *((void *)v33 + 3);
    unint64_t v34 = v101 + 1;
    if (v101 >= v100 >> 1) {
      uint64_t v33 = sub_251ECD5C4((char *)(v100 > 1), v101 + 1, 1, v33);
    }
    *((void *)v33 + 2) = v34;
    unint64_t v102 = v33 + 32;
    uint64_t v103 = &v33[16 * v101 + 32];
    uint64_t v104 = v174;
    *(void *)uint64_t v103 = v35;
    *((void *)v103 + 1) = v104;
    if (v101)
    {
      while (2)
      {
        unint64_t v105 = v34 - 1;
        if (v34 >= 4)
        {
          char v110 = &v102[16 * v34];
          uint64_t v111 = *((void *)v110 - 8);
          uint64_t v112 = *((void *)v110 - 7);
          BOOL v116 = __OFSUB__(v112, v111);
          uint64_t v113 = v112 - v111;
          if (v116) {
            goto LABEL_182;
          }
          uint64_t v115 = *((void *)v110 - 6);
          uint64_t v114 = *((void *)v110 - 5);
          BOOL v116 = __OFSUB__(v114, v115);
          uint64_t v108 = v114 - v115;
          char v109 = v116;
          if (v116) {
            goto LABEL_183;
          }
          unint64_t v117 = v34 - 2;
          uint64_t v118 = &v102[16 * v34 - 32];
          uint64_t v120 = *(void *)v118;
          uint64_t v119 = *((void *)v118 + 1);
          BOOL v116 = __OFSUB__(v119, v120);
          uint64_t v121 = v119 - v120;
          if (v116) {
            goto LABEL_185;
          }
          BOOL v116 = __OFADD__(v108, v121);
          uint64_t v122 = v108 + v121;
          if (v116) {
            goto LABEL_188;
          }
          if (v122 >= v113)
          {
            uint64_t v140 = &v102[16 * v105];
            uint64_t v142 = *(void *)v140;
            uint64_t v141 = *((void *)v140 + 1);
            BOOL v116 = __OFSUB__(v141, v142);
            uint64_t v143 = v141 - v142;
            if (v116) {
              goto LABEL_192;
            }
            BOOL v133 = v108 < v143;
          }
          else
          {
LABEL_134:
            if (v109) {
              goto LABEL_184;
            }
            unint64_t v117 = v34 - 2;
            uint64_t v123 = &v102[16 * v34 - 32];
            uint64_t v125 = *(void *)v123;
            uint64_t v124 = *((void *)v123 + 1);
            BOOL v126 = __OFSUB__(v124, v125);
            uint64_t v127 = v124 - v125;
            char v128 = v126;
            if (v126) {
              goto LABEL_187;
            }
            unint64_t v129 = &v102[16 * v105];
            uint64_t v131 = *(void *)v129;
            uint64_t v130 = *((void *)v129 + 1);
            BOOL v116 = __OFSUB__(v130, v131);
            uint64_t v132 = v130 - v131;
            if (v116) {
              goto LABEL_190;
            }
            if (__OFADD__(v127, v132)) {
              goto LABEL_191;
            }
            if (v127 + v132 < v108) {
              goto LABEL_146;
            }
            BOOL v133 = v108 < v132;
          }
          if (v133) {
            unint64_t v105 = v117;
          }
        }
        else
        {
          if (v34 == 3)
          {
            uint64_t v107 = *((void *)v33 + 4);
            uint64_t v106 = *((void *)v33 + 5);
            BOOL v116 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            char v109 = v116;
            goto LABEL_134;
          }
          uint64_t v134 = *((void *)v33 + 4);
          uint64_t v135 = *((void *)v33 + 5);
          BOOL v116 = __OFSUB__(v135, v134);
          uint64_t v127 = v135 - v134;
          char v128 = v116;
LABEL_146:
          if (v128) {
            goto LABEL_186;
          }
          uint64_t v136 = &v102[16 * v105];
          uint64_t v138 = *(void *)v136;
          uint64_t v137 = *((void *)v136 + 1);
          BOOL v116 = __OFSUB__(v137, v138);
          uint64_t v139 = v137 - v138;
          if (v116) {
            goto LABEL_189;
          }
          if (v139 < v127) {
            goto LABEL_15;
          }
        }
        unint64_t v144 = v105 - 1;
        if (v105 - 1 >= v34)
        {
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
          goto LABEL_202;
        }
        if (!*v175) {
          goto LABEL_204;
        }
        uint64_t v145 = v33;
        char v146 = &v102[16 * v144];
        uint64_t v147 = *(void *)v146;
        unsigned __int8 v148 = &v102[16 * v105];
        uint64_t v149 = *((void *)v148 + 1);
        sub_251D80144(*v175 + *(void *)(v169 + 72) * *(void *)v146, *v175 + *(void *)(v169 + 72) * *(void *)v148, *v175 + *(void *)(v169 + 72) * v149, v168);
        if (v2) {
          goto LABEL_175;
        }
        if (v149 < v147) {
          goto LABEL_179;
        }
        if (v105 > *((void *)v145 + 2)) {
          goto LABEL_180;
        }
        *(void *)char v146 = v147;
        *(void *)&v102[16 * v144 + 8] = v149;
        unint64_t v150 = *((void *)v145 + 2);
        if (v105 >= v150) {
          goto LABEL_181;
        }
        uint64_t v33 = v145;
        unint64_t v34 = v150 - 1;
        memmove(&v102[16 * v105], v148 + 16, 16 * (v150 - 1 - v105));
        *((void *)v145 + 2) = v150 - 1;
        uint64_t v19 = v166;
        uint64_t v16 = v167;
        if (v150 <= 2) {
          goto LABEL_15;
        }
        continue;
      }
    }
    unint64_t v34 = 1;
LABEL_15:
    uint64_t v25 = v175[1];
    uint64_t v32 = v174;
    unint64_t v22 = v159;
    if (v174 < v25) {
      continue;
    }
    break;
  }
  uint64_t v31 = v157;
LABEL_164:
  uint64_t v157 = v31;
  if (v34 >= 2)
  {
    uint64_t v151 = *v175;
    do
    {
      unint64_t v152 = v34 - 2;
      if (v34 < 2) {
        goto LABEL_194;
      }
      if (!v151) {
        goto LABEL_206;
      }
      uint64_t v153 = *(void *)&v33[16 * v152 + 32];
      uint64_t v154 = *(void *)&v33[16 * v34 + 24];
      sub_251D80144(v151 + *(void *)(v169 + 72) * v153, v151 + *(void *)(v169 + 72) * *(void *)&v33[16 * v34 + 16], v151 + *(void *)(v169 + 72) * v154, v168);
      if (v2) {
        break;
      }
      if (v154 < v153) {
        goto LABEL_195;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_251ECDC38((uint64_t)v33);
      }
      if (v152 >= *((void *)v33 + 2)) {
        goto LABEL_196;
      }
      uint64_t v155 = &v33[16 * v152 + 32];
      *(void *)uint64_t v155 = v153;
      *((void *)v155 + 1) = v154;
      unint64_t v156 = *((void *)v33 + 2);
      if (v34 > v156) {
        goto LABEL_197;
      }
      memmove(&v33[16 * v34 + 16], &v33[16 * v34 + 32], 16 * (v156 - v34));
      *((void *)v33 + 2) = v156 - 1;
      unint64_t v34 = v156 - 1;
    }
    while (v156 > 2);
  }
LABEL_175:
  swift_bridgeObjectRelease();
  *(void *)(v157 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D7EEF4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticAlarm();
  uint64_t v154 = *(void *)(v4 - 8);
  uint64_t v155 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v149 = (uint64_t)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v158 = (uint64_t)&v141 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v157 = (uint64_t *)((char *)&v141 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v141 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v151 = (uint64_t *)((char *)&v141 - v15);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (uint64_t *)((char *)&v141 - v17);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  char v146 = (uint64_t *)((char *)&v141 - v20);
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (uint64_t *)((char *)&v141 - v21);
  unint64_t v161 = a1;
  uint64_t v23 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v23)
  {
    if (v23 < 0) {
      goto LABEL_156;
    }
    if (v23) {
      return sub_251D7FE6C(0, v23, 1, v161);
    }
    return result;
  }
  if (v23 >= 0) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = v23 + 1;
  }
  if (v23 < -1) {
    goto LABEL_164;
  }
  BOOL v159 = v13;
  uint64_t v143 = result;
  if (v23 < 2)
  {
    uint64_t v29 = (char *)MEMORY[0x263F8EE78];
    unint64_t v153 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
    uint64_t v142 = MEMORY[0x263F8EE78];
    if (v23 != 1)
    {
      unint64_t v31 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_122:
      if (v31 >= 2)
      {
        uint64_t v134 = *v161;
        do
        {
          unint64_t v135 = v31 - 2;
          if (v31 < 2) {
            goto LABEL_151;
          }
          if (!v134) {
            goto LABEL_163;
          }
          uint64_t v136 = v29;
          uint64_t v137 = *(void *)&v29[16 * v135 + 32];
          uint64_t v138 = *(void *)&v29[16 * v31 + 24];
          sub_251D80854(v134 + *(void *)(v154 + 72) * v137, v134 + *(void *)(v154 + 72) * *(void *)&v29[16 * v31 + 16], v134 + *(void *)(v154 + 72) * v138, v153);
          if (v2) {
            break;
          }
          if (v138 < v137) {
            goto LABEL_152;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v136 = sub_251ECDC38((uint64_t)v29);
          }
          if (v135 >= *((void *)v136 + 2)) {
            goto LABEL_153;
          }
          uint64_t v139 = &v136[16 * v135 + 32];
          *(void *)uint64_t v139 = v137;
          *((void *)v139 + 1) = v138;
          unint64_t v140 = *((void *)v136 + 2);
          if (v31 > v140) {
            goto LABEL_154;
          }
          memmove(&v136[16 * v31 + 16], &v136[16 * v31 + 32], 16 * (v140 - v31));
          *((void *)v136 + 2) = v140 - 1;
          unint64_t v31 = v140 - 1;
          uint64_t v29 = v136;
        }
        while (v140 > 2);
      }
LABEL_133:
      swift_bridgeObjectRelease();
      *(void *)(v142 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v26 = v25 >> 1;
    uint64_t v27 = sub_251F35B50();
    *(void *)(v27 + 16) = v26;
    uint64_t v28 = *(unsigned __int8 *)(v154 + 80);
    uint64_t v142 = v27;
    unint64_t v153 = v27 + ((v28 + 32) & ~v28);
  }
  uint64_t v30 = 0;
  uint64_t v29 = (char *)MEMORY[0x263F8EE78];
  unint64_t v152 = v18;
  uint64_t v145 = v22;
  while (1)
  {
    uint64_t v32 = v30;
    uint64_t v33 = v30 + 1;
    if (v30 + 1 >= v23) {
      goto LABEL_50;
    }
    uint64_t v34 = *v161;
    uint64_t v35 = *(void *)(v154 + 72);
    uint64_t v148 = v30 + 1;
    sub_251D80DEC(v34 + v35 * v33, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    uint64_t v150 = v32;
    uint64_t v147 = v34;
    uint64_t v160 = v35;
    uint64_t v36 = v34 + v35 * v32;
    uint64_t v37 = v146;
    sub_251D80DEC(v36, (uint64_t)v146, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    uint64_t v38 = (uint64_t)v37;
    BOOL v39 = *v22 < *v37;
    if (*v22 == *v37 && (uint64_t v40 = v22[1], v41 = v37[1], v39 = v40 < v41, v40 == v41))
    {
      int v42 = MEMORY[0x2533A9CA0]((char *)v22 + *(int *)(v155 + 36), (char *)v146 + *(int *)(v155 + 36));
      uint64_t v38 = (uint64_t)v146;
      LODWORD(v156) = v42;
    }
    else
    {
      int v43 = v39;
      LODWORD(v156) = v43;
    }
    uint64_t v32 = v150;
    sub_251D80E54(v38, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    sub_251D80E54((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    uint64_t v33 = v32 + 2;
    if (v32 + 2 >= v23)
    {
LABEL_34:
      if ((v156 & 1) == 0) {
        goto LABEL_50;
      }
LABEL_37:
      if (v33 < v32) {
        goto LABEL_157;
      }
      if (v32 < v33)
      {
        uint64_t v156 = v23;
        unint64_t v144 = v29;
        uint64_t v56 = 0;
        uint64_t v57 = v32;
        uint64_t v58 = v160 * (v33 - 1);
        uint64_t v59 = v33 * v160;
        uint64_t v60 = v57;
        uint64_t v61 = v57 * v160;
        do
        {
          if (v60 != v33 + v56 - 1)
          {
            uint64_t v148 = v2;
            uint64_t v62 = v147;
            if (!v147) {
              goto LABEL_162;
            }
            unint64_t v63 = v147 + v61;
            sub_251D80EB4(v147 + v61, v149, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
            if (v61 < v58 || v63 >= v62 + v59)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v61 != v58)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_251D80EB4(v149, v62 + v58, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
            uint64_t v2 = v148;
          }
          ++v60;
          --v56;
          v58 -= v160;
          v59 -= v160;
          v61 += v160;
        }
        while (v60 < v33 + v56);
        uint64_t v29 = v144;
        uint64_t v18 = v152;
        uint64_t v32 = v150;
        uint64_t v23 = v156;
      }
      goto LABEL_50;
    }
    unint64_t v144 = v29;
    uint64_t v44 = v147;
    uint64_t v45 = v160 * v148;
    uint64_t v46 = v160 * v33;
    while (1)
    {
      uint64_t v47 = v23;
      uint64_t v48 = v33;
      sub_251D80DEC(v44 + v46, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      double v49 = v151;
      sub_251D80DEC(v44 + v45, (uint64_t)v151, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      uint64_t v50 = (uint64_t)v49;
      BOOL v51 = *v18 < *v49;
      if (*v18 != *v49) {
        goto LABEL_28;
      }
      uint64_t v52 = v18[1];
      uint64_t v53 = v49[1];
      BOOL v51 = v52 < v53;
      if (v52 == v53)
      {
        int v54 = MEMORY[0x2533A9CA0]((char *)v18 + *(int *)(v155 + 36), (char *)v151 + *(int *)(v155 + 36));
        uint64_t v50 = (uint64_t)v151;
        BOOL v55 = v54;
      }
      else
      {
LABEL_28:
        BOOL v55 = v51;
      }
      sub_251D80E54(v50, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      sub_251D80E54((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      if ((v156 ^ v55)) {
        break;
      }
      uint64_t v33 = v48 + 1;
      v44 += v160;
      uint64_t v23 = v47;
      if (v47 == v33)
      {
        uint64_t v33 = v47;
        uint64_t v29 = v144;
        uint64_t v32 = v150;
        goto LABEL_34;
      }
    }
    uint64_t v29 = v144;
    uint64_t v33 = v48;
    uint64_t v32 = v150;
    uint64_t v23 = v47;
    if (v156) {
      goto LABEL_37;
    }
LABEL_50:
    if (v33 >= v23) {
      goto LABEL_74;
    }
    if (__OFSUB__(v33, v32)) {
      goto LABEL_155;
    }
    if (v33 - v32 >= v143) {
      goto LABEL_74;
    }
    if (__OFADD__(v32, v143)) {
      goto LABEL_158;
    }
    uint64_t v64 = v32 + v143 >= v23 ? v23 : v32 + v143;
    if (v64 < v32) {
      break;
    }
    if (v33 != v64)
    {
      uint64_t v150 = v32;
      unint64_t v144 = v29;
      uint64_t v147 = v64;
      uint64_t v148 = v2;
      uint64_t v65 = *(void *)(v154 + 72);
      uint64_t v160 = v65 * (v33 - 1);
      uint64_t v156 = v65;
      uint64_t v66 = v33 * v65;
      do
      {
        uint64_t v67 = 0;
        uint64_t v68 = v150;
        while (1)
        {
          uint64_t v69 = v33;
          uint64_t v70 = *v161;
          uint64_t v71 = v159;
          sub_251D80DEC(v66 + v67 + *v161, (uint64_t)v159, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          uint64_t v72 = v160 + v67 + v70;
          uint64_t v73 = v157;
          sub_251D80DEC(v72, (uint64_t)v157, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          uint64_t v74 = (uint64_t)v73;
          BOOL v75 = *v71 < *v73;
          if (*v71 != *v73) {
            goto LABEL_67;
          }
          uint64_t v76 = v71[1];
          uint64_t v77 = v73[1];
          BOOL v75 = v76 < v77;
          if (v76 == v77)
          {
            char v78 = MEMORY[0x2533A9CA0]((char *)v71 + *(int *)(v155 + 36), (char *)v157 + *(int *)(v155 + 36));
            uint64_t v74 = (uint64_t)v157;
            BOOL v79 = v78;
          }
          else
          {
LABEL_67:
            BOOL v79 = v75;
          }
          sub_251D80E54(v74, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          sub_251D80E54((uint64_t)v159, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          if (!v79) {
            break;
          }
          uint64_t v80 = *v161;
          if (!*v161) {
            goto LABEL_160;
          }
          uint64_t v81 = v80 + v160 + v67;
          sub_251D80EB4(v80 + v66 + v67, v158, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          swift_arrayInitWithTakeFrontToBack();
          sub_251D80EB4(v158, v81, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          v67 -= v156;
          ++v68;
          uint64_t v33 = v69;
          if (v69 == v68) {
            goto LABEL_61;
          }
        }
        uint64_t v33 = v69;
LABEL_61:
        ++v33;
        v160 += v156;
        v66 += v156;
      }
      while (v33 != v147);
      uint64_t v33 = v147;
      uint64_t v2 = v148;
      uint64_t v29 = v144;
      uint64_t v18 = v152;
      uint64_t v32 = v150;
    }
LABEL_74:
    if (v33 < v32) {
      goto LABEL_150;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v160 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v29 = sub_251ECD5C4(0, *((void *)v29 + 2) + 1, 1, v29);
    }
    unint64_t v84 = *((void *)v29 + 2);
    unint64_t v83 = *((void *)v29 + 3);
    unint64_t v31 = v84 + 1;
    if (v84 >= v83 >> 1) {
      uint64_t v29 = sub_251ECD5C4((char *)(v83 > 1), v84 + 1, 1, v29);
    }
    *((void *)v29 + 2) = v31;
    uint64_t v85 = v29 + 32;
    uint64_t v86 = &v29[16 * v84 + 32];
    uint64_t v87 = v160;
    *(void *)uint64_t v86 = v32;
    *((void *)v86 + 1) = v87;
    if (v84)
    {
      while (1)
      {
        unint64_t v88 = v31 - 1;
        if (v31 >= 4)
        {
          double v93 = &v85[16 * v31];
          uint64_t v94 = *((void *)v93 - 8);
          uint64_t v95 = *((void *)v93 - 7);
          BOOL v99 = __OFSUB__(v95, v94);
          uint64_t v96 = v95 - v94;
          if (v99) {
            goto LABEL_139;
          }
          uint64_t v98 = *((void *)v93 - 6);
          uint64_t v97 = *((void *)v93 - 5);
          BOOL v99 = __OFSUB__(v97, v98);
          uint64_t v91 = v97 - v98;
          char v92 = v99;
          if (v99) {
            goto LABEL_140;
          }
          unint64_t v100 = v31 - 2;
          unint64_t v101 = &v85[16 * v31 - 32];
          uint64_t v103 = *(void *)v101;
          uint64_t v102 = *((void *)v101 + 1);
          BOOL v99 = __OFSUB__(v102, v103);
          uint64_t v104 = v102 - v103;
          if (v99) {
            goto LABEL_142;
          }
          BOOL v99 = __OFADD__(v91, v104);
          uint64_t v105 = v91 + v104;
          if (v99) {
            goto LABEL_145;
          }
          if (v105 >= v96)
          {
            uint64_t v123 = &v85[16 * v88];
            uint64_t v125 = *(void *)v123;
            uint64_t v124 = *((void *)v123 + 1);
            BOOL v99 = __OFSUB__(v124, v125);
            uint64_t v126 = v124 - v125;
            if (v99) {
              goto LABEL_149;
            }
            BOOL v116 = v91 < v126;
            goto LABEL_111;
          }
        }
        else
        {
          if (v31 != 3)
          {
            uint64_t v117 = *((void *)v29 + 4);
            uint64_t v118 = *((void *)v29 + 5);
            BOOL v99 = __OFSUB__(v118, v117);
            uint64_t v110 = v118 - v117;
            char v111 = v99;
            goto LABEL_105;
          }
          uint64_t v90 = *((void *)v29 + 4);
          uint64_t v89 = *((void *)v29 + 5);
          BOOL v99 = __OFSUB__(v89, v90);
          uint64_t v91 = v89 - v90;
          char v92 = v99;
        }
        if (v92) {
          goto LABEL_141;
        }
        unint64_t v100 = v31 - 2;
        uint64_t v106 = &v85[16 * v31 - 32];
        uint64_t v108 = *(void *)v106;
        uint64_t v107 = *((void *)v106 + 1);
        BOOL v109 = __OFSUB__(v107, v108);
        uint64_t v110 = v107 - v108;
        char v111 = v109;
        if (v109) {
          goto LABEL_144;
        }
        uint64_t v112 = &v85[16 * v88];
        uint64_t v114 = *(void *)v112;
        uint64_t v113 = *((void *)v112 + 1);
        BOOL v99 = __OFSUB__(v113, v114);
        uint64_t v115 = v113 - v114;
        if (v99) {
          goto LABEL_147;
        }
        if (__OFADD__(v110, v115)) {
          goto LABEL_148;
        }
        if (v110 + v115 >= v91)
        {
          BOOL v116 = v91 < v115;
LABEL_111:
          if (v116) {
            unint64_t v88 = v100;
          }
          goto LABEL_113;
        }
LABEL_105:
        if (v111) {
          goto LABEL_143;
        }
        uint64_t v119 = &v85[16 * v88];
        uint64_t v121 = *(void *)v119;
        uint64_t v120 = *((void *)v119 + 1);
        BOOL v99 = __OFSUB__(v120, v121);
        uint64_t v122 = v120 - v121;
        if (v99) {
          goto LABEL_146;
        }
        if (v122 < v110) {
          goto LABEL_14;
        }
LABEL_113:
        unint64_t v127 = v88 - 1;
        if (v88 - 1 >= v31)
        {
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (!*v161) {
          goto LABEL_161;
        }
        char v128 = v29;
        unint64_t v129 = &v85[16 * v127];
        uint64_t v130 = *(void *)v129;
        uint64_t v131 = &v85[16 * v88];
        uint64_t v132 = *((void *)v131 + 1);
        sub_251D80854(*v161 + *(void *)(v154 + 72) * *(void *)v129, *v161 + *(void *)(v154 + 72) * *(void *)v131, *v161 + *(void *)(v154 + 72) * v132, v153);
        if (v2) {
          goto LABEL_133;
        }
        if (v132 < v130) {
          goto LABEL_136;
        }
        if (v88 > *((void *)v128 + 2)) {
          goto LABEL_137;
        }
        *(void *)unint64_t v129 = v130;
        *(void *)&v85[16 * v127 + 8] = v132;
        unint64_t v133 = *((void *)v128 + 2);
        if (v88 >= v133) {
          goto LABEL_138;
        }
        uint64_t v29 = v128;
        unint64_t v31 = v133 - 1;
        memmove(&v85[16 * v88], v131 + 16, 16 * (v133 - 1 - v88));
        *((void *)v128 + 2) = v133 - 1;
        uint64_t v18 = v152;
        if (v133 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v31 = 1;
LABEL_14:
    uint64_t v23 = v161[1];
    uint64_t v30 = v160;
    unint64_t v22 = v145;
    if (v160 >= v23) {
      goto LABEL_122;
    }
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251D7FADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v38 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = (int *)type metadata accessor for StaticTimer();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v37 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (double *)((char *)&v32 - v10);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (double *)((char *)&v32 - v14);
  uint64_t v36 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v40 = v16 * (v36 - 1);
    uint64_t v35 = v16;
    uint64_t v39 = v16 * v36;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v34;
    while (1)
    {
      uint64_t v19 = *v38;
      sub_251D80DEC(v39 + v17 + *v38, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      sub_251D80DEC(v40 + v17 + v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      uint64_t v20 = v6[8];
      int v21 = *((unsigned __int8 *)v15 + v20);
      if (v21 == 1)
      {
        double v22 = *(double *)((char *)v15 + v6[6]);
      }
      else if (v21 == 2)
      {
        double v22 = *v15;
      }
      else
      {
        double v22 = 0.0;
        if (v21 == 3)
        {
          double v23 = *v15;
          sub_251F34CA0();
          double v22 = v23 + v24;
          uint64_t v20 = v6[8];
        }
      }
      int v25 = *((unsigned __int8 *)v11 + v20);
      switch(v25)
      {
        case 1:
          double v28 = *(double *)((char *)v11 + v6[6]);
          if (v22 == v28) {
            goto LABEL_23;
          }
          break;
        case 2:
          double v28 = *v11;
          if (v22 == *v11) {
            goto LABEL_23;
          }
          break;
        case 3:
          double v26 = *v11;
          sub_251F34CA0();
          double v28 = v26 + v27;
          if (v22 == v28) {
            goto LABEL_23;
          }
          break;
        default:
          if (v22 == 0.0)
          {
LABEL_23:
            char v29 = MEMORY[0x2533A9CA0]((char *)v15 + v6[10], (char *)v11 + v6[10]);
            goto LABEL_26;
          }
          double v28 = 0.0;
          break;
      }
      char v29 = v22 < v28;
LABEL_26:
      sub_251D80E54((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      uint64_t result = sub_251D80E54((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      if ((v29 & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v30 = *v38;
      if (!*v38)
      {
        __break(1u);
        return result;
      }
      uint64_t v31 = v30 + v40 + v17;
      sub_251D80EB4(v30 + v39 + v17, v37, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251D80EB4(v37, v31, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      v17 -= v35;
      if (v36 == ++v18)
      {
LABEL_4:
        v40 += v35;
        v39 += v35;
        if (++v36 == v33) {
          return result;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_251D7FE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v33 = a4;
  uint64_t v28 = a1;
  uint64_t v29 = type metadata accessor for StaticAlarm();
  uint64_t v6 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint64_t *)((char *)&v26 - v9);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (uint64_t *)((char *)&v26 - v13);
  uint64_t v31 = a3;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v34 = v15 * (v31 - 1);
    uint64_t v30 = v15;
    uint64_t v16 = v15 * v31;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v28;
    while (1)
    {
      uint64_t v19 = *v33;
      sub_251D80DEC(v16 + v17 + *v33, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      sub_251D80DEC(v34 + v17 + v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      BOOL v20 = *v14 < *v10;
      if (*v14 == *v10 && (uint64_t v21 = v14[1], v22 = v10[1], v20 = v21 < v22, v21 == v22)) {
        char v23 = MEMORY[0x2533A9CA0]((char *)v14 + *(int *)(v29 + 36), (char *)v10 + *(int *)(v29 + 36));
      }
      else {
        char v23 = v20;
      }
      sub_251D80E54((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      uint64_t result = sub_251D80E54((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      if ((v23 & 1) == 0)
      {
LABEL_4:
        v34 += v30;
        v16 += v30;
        if (++v31 == v27) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v24 = *v33;
      if (!*v33) {
        break;
      }
      uint64_t v25 = v24 + v34 + v17;
      sub_251D80EB4(v24 + v16 + v17, v32, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251D80EB4(v32, v25, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      v17 -= v30;
      if (v31 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251D80144(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v65 = a3;
  uint64_t v66 = (int *)type metadata accessor for StaticTimer();
  uint64_t v7 = MEMORY[0x270FA5388](v66);
  uint64_t v64 = (double *)((char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (double *)((char *)&v62 - v10);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (double *)((char *)&v62 - v13);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (double *)((char *)&v62 - v15);
  uint64_t v18 = *(void *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  if (a2 - a1 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_99;
  }
  int64_t v19 = v65 - a2;
  if (v65 - a2 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_100;
  }
  uint64_t v20 = (uint64_t)(a2 - a1) / v18;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v21 = v19 / v18;
  if (v20 >= v19 / v18)
  {
    if (v21 < 0) {
      goto LABEL_101;
    }
    uint64_t v23 = v21 * v18;
    if (a4 < a2 || a2 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v40 = a4 + v23;
    unint64_t v67 = a4 + v23;
    unint64_t v69 = a2;
    if (v23 < 1 || a1 >= a2)
    {
LABEL_97:
      sub_251ECD7B0(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
    uint64_t v42 = -v18;
    unint64_t v63 = a1;
    while (1)
    {
      sub_251D80DEC(v40 + v42, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      unint64_t v43 = a2 + v42;
      uint64_t v44 = v64;
      sub_251D80DEC(a2 + v42, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      uint64_t v45 = v66[8];
      int v46 = *((unsigned __int8 *)v11 + v45);
      if (v46 == 1)
      {
        double v47 = *(double *)((char *)v11 + v66[6]);
      }
      else if (v46 == 2)
      {
        double v47 = *v11;
      }
      else
      {
        double v47 = 0.0;
        if (v46 == 3)
        {
          double v48 = *v11;
          double v49 = v66;
          sub_251F34CA0();
          double v47 = v48 + v50;
          uint64_t v45 = v49[8];
        }
      }
      int v51 = *((unsigned __int8 *)v44 + v45);
      switch(v51)
      {
        case 1:
          double v54 = *(double *)((char *)v44 + v66[6]);
          if (v47 != v54) {
            goto LABEL_81;
          }
          break;
        case 2:
          double v54 = *v44;
          if (v47 != *v44) {
            goto LABEL_81;
          }
          break;
        case 3:
          double v52 = *v44;
          sub_251F34CA0();
          double v54 = v52 + v53;
          if (v47 != v54) {
            goto LABEL_81;
          }
          break;
        default:
          if (v47 != 0.0)
          {
            double v54 = 0.0;
LABEL_81:
            char v55 = v47 < v54;
            goto LABEL_82;
          }
          break;
      }
      char v55 = MEMORY[0x2533A9CA0]((char *)v11 + v66[10], (char *)v44 + v66[10]);
LABEL_82:
      uint64_t v56 = (uint64_t)v44;
      unint64_t v57 = v65;
      unint64_t v58 = v65 + v42;
      sub_251D80E54(v56, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      sub_251D80E54((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      if (v55)
      {
        if (v57 < a2 || v58 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v59 = v63;
        }
        else
        {
          unint64_t v59 = v63;
          if (v57 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v69 += v42;
      }
      else
      {
        unint64_t v60 = v67;
        v67 += v42;
        if (v57 < v60 || v58 >= v60)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 != v60)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v43 = a2;
        unint64_t v59 = v63;
      }
      unint64_t v40 = v67;
      if (v67 > a4)
      {
        a2 = v43;
        unint64_t v65 = v58;
        if (v43 > v59) {
          continue;
        }
      }
      goto LABEL_97;
    }
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = v20 * v18;
    if (a4 < a1 || a1 + v22 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v24 = a4 + v22;
    unint64_t v67 = a4 + v22;
    if (v22 >= 1 && a2 < v65)
    {
      while (1)
      {
        sub_251D80DEC(a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        sub_251D80DEC(a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        uint64_t v26 = v66[8];
        int v27 = *((unsigned __int8 *)v16 + v26);
        if (v27 == 1)
        {
          double v28 = *(double *)((char *)v16 + v66[6]);
        }
        else if (v27 == 2)
        {
          double v28 = *v16;
        }
        else
        {
          double v28 = 0.0;
          if (v27 == 3)
          {
            double v29 = *v16;
            uint64_t v30 = v66;
            sub_251F34CA0();
            double v28 = v29 + v31;
            uint64_t v26 = v30[8];
          }
        }
        int v32 = *((unsigned __int8 *)v14 + v26);
        switch(v32)
        {
          case 1:
            double v35 = *(double *)((char *)v14 + v66[6]);
            if (v28 != v35) {
              goto LABEL_40;
            }
            break;
          case 2:
            double v35 = *v14;
            if (v28 != *v14) {
              goto LABEL_40;
            }
            break;
          case 3:
            double v33 = *v14;
            sub_251F34CA0();
            double v35 = v33 + v34;
            if (v28 != v35) {
              goto LABEL_40;
            }
            break;
          default:
            if (v28 != 0.0)
            {
              double v35 = 0.0;
LABEL_40:
              char v36 = v28 < v35;
              goto LABEL_41;
            }
            break;
        }
        char v36 = MEMORY[0x2533A9CA0]((char *)v16 + v66[10], (char *)v14 + v66[10]);
LABEL_41:
        sub_251D80E54((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        sub_251D80E54((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        unint64_t v37 = v69;
        if (v36)
        {
          unint64_t v38 = a2 + v18;
          if (v69 < a2 || v69 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v69 == a2)
          {
            unint64_t v37 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v39 = v68 + v18;
          if (v69 < v68 || v69 >= v39)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v69 != v68)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v68 = v39;
          unint64_t v38 = a2;
        }
        unint64_t v69 = v37 + v18;
        a4 = v68;
        if (v68 < v24)
        {
          a2 = v38;
          if (v38 < v65) {
            continue;
          }
        }
        goto LABEL_97;
      }
    }
    goto LABEL_97;
  }
LABEL_101:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251D80854(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v52 = type metadata accessor for StaticAlarm();
  uint64_t v8 = MEMORY[0x270FA5388](v52);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v49 - v10);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (uint64_t *)((char *)&v49 - v13);
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (uint64_t *)((char *)&v49 - v16);
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v20 = v19;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_73;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_74;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v19;
  unint64_t v55 = a1;
  unint64_t v54 = a4;
  uint64_t v23 = v21 / v19;
  if (v22 >= v21 / v20)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      uint64_t v25 = v23 * v20;
      int v51 = (void *)v15;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v35 = a4 + v25;
      unint64_t v53 = a4 + v25;
      unint64_t v55 = a2;
      unint64_t v50 = a1;
      if (v25 >= 1 && a1 < a2)
      {
        uint64_t v37 = -v20;
        do
        {
          sub_251D80DEC(v35 + v37, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          unint64_t v38 = a2 + v37;
          unint64_t v39 = v51;
          sub_251D80DEC(a2 + v37, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          uint64_t v40 = (uint64_t)v39;
          BOOL v41 = *v11 < *v39;
          if (*v11 == *v39 && (v42 = v11[1], v43 = v39[1], BOOL v41 = v42 < v43, v42 == v43))
          {
            char v44 = MEMORY[0x2533A9CA0]((char *)v11 + *(int *)(v52 + 36), (char *)v51 + *(int *)(v52 + 36));
            uint64_t v40 = (uint64_t)v51;
            char v45 = v44;
          }
          else
          {
            char v45 = v41;
          }
          unint64_t v46 = a3 + v37;
          sub_251D80E54(v40, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          sub_251D80E54((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          if (v45)
          {
            if (a3 < a2 || v46 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v55 += v37;
          }
          else
          {
            unint64_t v47 = v53;
            v53 += v37;
            if (a3 < v47 || v46 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v47)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v38 = a2;
          }
          unint64_t v35 = v53;
          if (v53 <= a4) {
            break;
          }
          a2 = v38;
          a3 += v37;
        }
        while (v38 > v50);
      }
      goto LABEL_71;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v20;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v26 = a4 + v24;
    unint64_t v53 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      do
      {
        sub_251D80DEC(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        sub_251D80DEC(a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        BOOL v28 = *v17 < *v14;
        if (*v17 == *v14 && (v29 = v17[1], uint64_t v30 = v14[1], v28 = v29 < v30, v29 == v30)) {
          char v31 = MEMORY[0x2533A9CA0]((char *)v17 + *(int *)(v52 + 36), (char *)v14 + *(int *)(v52 + 36));
        }
        else {
          char v31 = v28;
        }
        sub_251D80E54((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        sub_251D80E54((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        unint64_t v32 = v55;
        if (v31)
        {
          unint64_t v33 = a2 + v20;
          if (v55 < a2 || v55 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v55 == a2)
          {
            unint64_t v32 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v34 = v54 + v20;
          if (v55 < v54 || v55 >= v34)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v55 != v54)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v54 = v34;
          unint64_t v33 = a2;
        }
        unint64_t v55 = v32 + v20;
        a4 = v54;
        if (v54 >= v26) {
          break;
        }
        a2 = v33;
      }
      while (v33 < a3);
    }
LABEL_71:
    sub_251ECD7C8(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_75:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251D80DEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D80E54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D80EB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D80F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StaticAlarm();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v29 = (uint64_t)&v28 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v28 - v12;
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (v14)
  {
    uint64_t v28 = v2;
    uint64_t v36 = MEMORY[0x263F8EE78];
    int64_t v34 = v14;
    sub_251A3E520(0, v14, 0);
    uint64_t v16 = 0;
    unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v32 = a1 + v17;
    unint64_t v33 = v17;
    uint64_t v35 = *(void *)(a2 + 16);
    uint64_t v18 = *(void *)(v6 + 72);
    uint64_t v30 = v13;
    uint64_t v31 = a2 + v17;
    uint64_t v19 = a2;
    do
    {
      uint64_t v20 = v32 + v18 * v16;
      if (v35)
      {
        uint64_t v21 = v19;
        swift_bridgeObjectRetain();
        uint64_t v22 = v31;
        uint64_t v23 = v35;
        while (1)
        {
          sub_251D80DEC(v22, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          if (sub_251F34D70()) {
            break;
          }
          sub_251D80E54((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          v22 += v18;
          if (!--v23)
          {
            uint64_t v19 = v21;
            swift_bridgeObjectRelease();
            uint64_t v13 = v30;
            goto LABEL_8;
          }
        }
        uint64_t v19 = v21;
        swift_bridgeObjectRelease();
        uint64_t v24 = v29;
        sub_251D80EB4((uint64_t)v9, v29, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        uint64_t v13 = v30;
        sub_251D80EB4(v24, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      }
      else
      {
LABEL_8:
        sub_251D80DEC(v20, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      }
      uint64_t v15 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E520(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v36;
      }
      unint64_t v26 = *(void *)(v15 + 16);
      unint64_t v25 = *(void *)(v15 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_251A3E520(v25 > 1, v26 + 1, 1);
        uint64_t v15 = v36;
      }
      ++v16;
      *(void *)(v15 + 16) = v26 + 1;
      sub_251D80EB4((uint64_t)v13, v15 + v33 + v26 * v18, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    }
    while (v16 != v34);
  }
  return v15;
}

uint64_t sub_251D81230(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StaticTimer();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v29 = (uint64_t)&v28 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v28 - v12;
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (v14)
  {
    uint64_t v28 = v2;
    uint64_t v36 = MEMORY[0x263F8EE78];
    int64_t v34 = v14;
    sub_251A3E55C(0, v14, 0);
    uint64_t v16 = 0;
    unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v32 = a1 + v17;
    unint64_t v33 = v17;
    uint64_t v35 = *(void *)(a2 + 16);
    uint64_t v18 = *(void *)(v6 + 72);
    uint64_t v30 = v13;
    uint64_t v31 = a2 + v17;
    uint64_t v19 = a2;
    do
    {
      uint64_t v20 = v32 + v18 * v16;
      if (v35)
      {
        uint64_t v21 = v19;
        swift_bridgeObjectRetain();
        uint64_t v22 = v31;
        uint64_t v23 = v35;
        while (1)
        {
          sub_251D80DEC(v22, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticTimer);
          if (sub_251F34D70()) {
            break;
          }
          sub_251D80E54((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticTimer);
          v22 += v18;
          if (!--v23)
          {
            uint64_t v19 = v21;
            swift_bridgeObjectRelease();
            uint64_t v13 = v30;
            goto LABEL_8;
          }
        }
        uint64_t v19 = v21;
        swift_bridgeObjectRelease();
        uint64_t v24 = v29;
        sub_251D80EB4((uint64_t)v9, v29, (uint64_t (*)(void))type metadata accessor for StaticTimer);
        uint64_t v13 = v30;
        sub_251D80EB4(v24, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      }
      else
      {
LABEL_8:
        sub_251D80DEC(v20, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      }
      uint64_t v15 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E55C(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v36;
      }
      unint64_t v26 = *(void *)(v15 + 16);
      unint64_t v25 = *(void *)(v15 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_251A3E55C(v25 > 1, v26 + 1, 1);
        uint64_t v15 = v36;
      }
      ++v16;
      *(void *)(v15 + 16) = v26 + 1;
      sub_251D80EB4((uint64_t)v13, v15 + v33 + v26 * v18, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    }
    while (v16 != v34);
  }
  return v15;
}

uint64_t sub_251D81544(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = type metadata accessor for StaticAlarm();
  uint64_t v5 = MEMORY[0x270FA5388](v32);
  uint64_t v38 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v49 = MEMORY[0x263F8EE78];
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v31 = v2;
    uint64_t v11 = 0;
    unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v39 = *(void *)(v7 + 72);
    unint64_t v33 = v12;
    uint64_t v34 = a1 + v12;
    uint64_t v35 = (char *)&v31 - v8;
    uint64_t v36 = a2;
    do
    {
      uint64_t v41 = v11;
      sub_251D80DEC(v34 + v39 * v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v40 = &v31;
      MEMORY[0x270FA5388](v13 - 8);
      uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v16 = *(void *)(a2 + 16);
      if (v16)
      {
        char v45 = &v9[*(int *)(v32 + 36)];
        uint64_t v17 = sub_251F34DA0();
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v19 = v18;
        uint64_t v20 = a2 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        uint64_t v42 = *(void *)(v18 + 72);
        double v48 = (void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
        uint64_t v22 = v18 + 16;
        uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
        uint64_t v46 = v22;
        unint64_t v47 = v21;
        uint64_t v43 = v19 + 8;
        uint64_t v44 = v19 + 32;
        swift_bridgeObjectRetain();
        while (1)
        {
          v47(v15, v20, v17);
          (*v48)(v15, 0, 1, v17);
          uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v17);
          if (v23 == 1) {
            break;
          }
          MEMORY[0x270FA5388](v23);
          unint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v15, v17);
          sub_251A9FE88();
          char v26 = sub_251F35650();
          (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v17);
          if (v26)
          {
            a2 = v36;
            swift_bridgeObjectRelease();
            uint64_t v9 = v35;
            sub_251D80E54((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
            goto LABEL_4;
          }
          v20 += v42;
          if (!--v16) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        uint64_t v27 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 1, 1, v27);
      }
      a2 = v36;
      swift_bridgeObjectRelease();
      uint64_t v9 = v35;
      sub_251D80EB4((uint64_t)v35, v38, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      uint64_t v28 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E520(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v28 = v49;
      }
      unint64_t v30 = *(void *)(v28 + 16);
      unint64_t v29 = *(void *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_251A3E520(v29 > 1, v30 + 1, 1);
        uint64_t v28 = v49;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_251D80EB4(v38, v28 + v33 + v30 * v39, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
LABEL_4:
      uint64_t v11 = v41 + 1;
    }
    while (v41 + 1 != v37);
    return v49;
  }
  return result;
}

uint64_t sub_251D81A10(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = type metadata accessor for StaticTimer();
  uint64_t v5 = MEMORY[0x270FA5388](v32);
  uint64_t v38 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v49 = MEMORY[0x263F8EE78];
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v31 = v2;
    uint64_t v11 = 0;
    unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v39 = *(void *)(v7 + 72);
    unint64_t v33 = v12;
    uint64_t v34 = a1 + v12;
    uint64_t v35 = (char *)&v31 - v8;
    uint64_t v36 = a2;
    do
    {
      uint64_t v41 = v11;
      sub_251D80DEC(v34 + v39 * v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v40 = &v31;
      MEMORY[0x270FA5388](v13 - 8);
      uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v16 = *(void *)(a2 + 16);
      if (v16)
      {
        char v45 = &v9[*(int *)(v32 + 40)];
        uint64_t v17 = sub_251F34DA0();
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v19 = v18;
        uint64_t v20 = a2 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        uint64_t v42 = *(void *)(v18 + 72);
        double v48 = (void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
        uint64_t v22 = v18 + 16;
        uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
        uint64_t v46 = v22;
        unint64_t v47 = v21;
        uint64_t v43 = v19 + 8;
        uint64_t v44 = v19 + 32;
        swift_bridgeObjectRetain();
        while (1)
        {
          v47(v15, v20, v17);
          (*v48)(v15, 0, 1, v17);
          uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v17);
          if (v23 == 1) {
            break;
          }
          MEMORY[0x270FA5388](v23);
          unint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v15, v17);
          sub_251A9FE88();
          char v26 = sub_251F35650();
          (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v17);
          if (v26)
          {
            a2 = v36;
            swift_bridgeObjectRelease();
            uint64_t v9 = v35;
            sub_251D80E54((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticTimer);
            goto LABEL_4;
          }
          v20 += v42;
          if (!--v16) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        uint64_t v27 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 1, 1, v27);
      }
      a2 = v36;
      swift_bridgeObjectRelease();
      uint64_t v9 = v35;
      sub_251D80EB4((uint64_t)v35, v38, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      uint64_t v28 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E55C(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v28 = v49;
      }
      unint64_t v30 = *(void *)(v28 + 16);
      unint64_t v29 = *(void *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_251A3E55C(v29 > 1, v30 + 1, 1);
        uint64_t v28 = v49;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_251D80EB4(v38, v28 + v33 + v30 * v39, (uint64_t (*)(void))type metadata accessor for StaticTimer);
LABEL_4:
      uint64_t v11 = v41 + 1;
    }
    while (v41 + 1 != v37);
    return v49;
  }
  return result;
}

uint64_t sub_251D81EDC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v4 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251D81F40(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251D81FA4(uint64_t a1, unint64_t a2)
{
  return sub_251D82D60(a1, a2, (uint64_t)&qword_269B9DA90);
}

uint64_t sub_251D81FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticActionSet();
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v10 = *(void *)(v5 + 72);
  uint64_t v54 = a2;
  swift_bridgeObjectRetain();
  unint64_t v71 = (unint64_t)"ratioMetrics";
  uint64_t v52 = "HMActionSetTypeHomeDeparture";
  unint64_t v53 = "HMActionSetTypeHomeArrival";
  unint64_t v50 = "HMActionSetTypeSleep";
  int v51 = "HMActionSetTypeWakeUp";
  double v48 = "HMActionSetTypeTriggerOwned";
  uint64_t v49 = "HMActionSetTypeUserDefined";
  uint64_t v57 = v10;
  do
  {
    sub_251D860E8(v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if (sub_251F34D70())
    {
      uint64_t v11 = v4[5];
      uint64_t v12 = *(void *)&v7[v11];
      uint64_t v13 = *(void *)&v7[v11 + 8];
      uint64_t v14 = (void *)(a1 + v11);
      BOOL v15 = v12 == *v14 && v13 == v14[1];
      if (v15 || (sub_251F36B10() & 1) != 0)
      {
        uint64_t v16 = v4[6];
        uint64_t v17 = v7[v16];
        int v18 = *(unsigned __int8 *)(a1 + v16);
        if (v17 != 7)
        {
          unint64_t v19 = v71 | 0x8000000000000000;
          unint64_t v20 = 0xD00000000000001ALL;
          switch(v17)
          {
            case 1:
              unint64_t v20 = 0xD00000000000001CLL;
              uint64_t v21 = v53;
              goto LABEL_20;
            case 2:
              unint64_t v20 = 0xD000000000000015;
              uint64_t v21 = v52;
              goto LABEL_20;
            case 3:
              unint64_t v20 = 0xD000000000000014;
              uint64_t v21 = v51;
              goto LABEL_20;
            case 4:
              uint64_t v21 = v50;
              goto LABEL_20;
            case 5:
              unint64_t v20 = 0xD00000000000001BLL;
              uint64_t v21 = v49;
              goto LABEL_20;
            case 6:
              unint64_t v20 = 0xD000000000000021;
              uint64_t v21 = v48;
LABEL_20:
              unint64_t v19 = (unint64_t)v21 | 0x8000000000000000;
              break;
            default:
              break;
          }
          unint64_t v22 = v71 | 0x8000000000000000;
          unint64_t v23 = 0xD00000000000001ALL;
          switch(v18)
          {
            case 0:
              goto LABEL_29;
            case 1:
              unint64_t v23 = 0xD00000000000001CLL;
              uint64_t v24 = v53;
              goto LABEL_28;
            case 2:
              unint64_t v23 = 0xD000000000000015;
              uint64_t v24 = v52;
              goto LABEL_28;
            case 3:
              unint64_t v23 = 0xD000000000000014;
              uint64_t v24 = v51;
              goto LABEL_28;
            case 4:
              uint64_t v24 = v50;
              goto LABEL_28;
            case 5:
              unint64_t v23 = 0xD00000000000001BLL;
              uint64_t v24 = v49;
              goto LABEL_28;
            case 6:
              unint64_t v23 = 0xD000000000000021;
              uint64_t v24 = v48;
LABEL_28:
              unint64_t v22 = (unint64_t)v24 | 0x8000000000000000;
LABEL_29:
              if (v20 == v23 && v19 == v22)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_33;
              }
              char v25 = sub_251F36B10();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v25) {
                goto LABEL_33;
              }
              goto LABEL_3;
            default:
              goto LABEL_3;
          }
        }
        if (v18 == 7)
        {
LABEL_33:
          if ((sub_251F34D70() & 1) == 0) {
            goto LABEL_3;
          }
          uint64_t v26 = v4[8];
          uint64_t v27 = *(void *)&v7[v26];
          uint64_t v28 = *(void *)&v7[v26 + 8];
          int v29 = v7[v26 + 16];
          uint64_t v31 = *(void *)&v7[v26 + 24];
          uint64_t v30 = *(void *)&v7[v26 + 32];
          int v70 = v7[v26 + 40];
          uint64_t v32 = *(void *)&v7[v26 + 56];
          uint64_t v69 = *(void *)&v7[v26 + 48];
          int v65 = v7[v26 + 64];
          uint64_t v63 = *(void *)&v7[v26 + 72];
          uint64_t v62 = *(void *)&v7[v26 + 80];
          int v59 = v7[v26 + 88];
          unint64_t v33 = (uint64_t *)(a1 + v26);
          uint64_t v34 = *v33;
          uint64_t v35 = v33[1];
          int v36 = *((unsigned __int8 *)v33 + 16);
          uint64_t v37 = v33[3];
          uint64_t v38 = v33[4];
          int v39 = *((unsigned __int8 *)v33 + 40);
          uint64_t v40 = v33[7];
          uint64_t v67 = v33[6];
          uint64_t v68 = v32;
          int v64 = *((unsigned __int8 *)v33 + 64);
          uint64_t v61 = v33[9];
          uint64_t v60 = v33[10];
          int v58 = *((unsigned __int8 *)v33 + 88);
          uint64_t v66 = v40;
          if (v27 == v34 && v28 == v35)
          {
            if (v29 != v36) {
              goto LABEL_3;
            }
          }
          else
          {
            int v55 = v36;
            int v56 = v29;
            int v41 = v39;
            uint64_t v42 = v30;
            uint64_t v43 = v4;
            uint64_t v44 = v37;
            char v45 = sub_251F36B10();
            uint64_t v37 = v44;
            uint64_t v4 = v43;
            uint64_t v30 = v42;
            int v39 = v41;
            uint64_t v10 = v57;
            if ((v45 & 1) == 0 || v56 != v55) {
              goto LABEL_3;
            }
          }
          if (v31 == v37 && v30 == v38 || (sub_251F36B10())
            && v70 == v39
            && (v69 == v67 && v68 == v66 || (sub_251F36B10() & 1) != 0)
            && v65 == v64
            && (v63 == v61 && v62 == v60 || (sub_251F36B10() & 1) != 0)
            && v59 == v58
            && (sub_251F352E0() & 1) != 0
            && (sub_251B04848(*(void *)&v7[v4[10]], *(void *)(a1 + v4[10])) & 1) != 0
            && v7[v4[11]] == *(unsigned char *)(a1 + v4[11])
            && (sub_251B0657C(*(void *)&v7[v4[12]], *(void *)(a1 + v4[12])) & 1) != 0
            && v7[v4[13]] == *(unsigned char *)(a1 + v4[13])
            && v7[v4[14]] == *(unsigned char *)(a1 + v4[14]))
          {
            sub_251D86150((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
            uint64_t v46 = 1;
            goto LABEL_60;
          }
        }
      }
    }
LABEL_3:
    sub_251D86150((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    v9 += v10;
    --v8;
  }
  while (v8);
  uint64_t v46 = 0;
LABEL_60:
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_251D825B8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (2)
  {
    LODWORD(v6) = a1;
    unint64_t v7 = 0x8000000251F65CA0;
    unint64_t v8 = 0xD00000000000001ALL;
    switch(*(unsigned char *)(a2 + v5 + 32))
    {
      case 0:
        break;
      case 1:
        unint64_t v8 = 0xD00000000000001CLL;
        uint64_t v6 = "HMActionSetTypeHomeArrival";
        goto LABEL_12;
      case 2:
        uint64_t v6 = "HMActionSetTypeHomeDeparture";
        unint64_t v8 = 0xD000000000000015;
        goto LABEL_12;
      case 3:
        uint64_t v6 = "HMActionSetTypeWakeUp";
        unint64_t v8 = 0xD000000000000014;
        goto LABEL_12;
      case 4:
        uint64_t v6 = "HMActionSetTypeSleep";
        goto LABEL_12;
      case 5:
        unint64_t v8 = 0xD00000000000001BLL;
        uint64_t v6 = "HMActionSetTypeUserDefined";
        goto LABEL_12;
      case 6:
        unint64_t v8 = 0xD000000000000021;
        uint64_t v6 = "HMActionSetTypeTriggerOwned";
LABEL_12:
        unint64_t v7 = (unint64_t)v6 | 0x8000000000000000;
        break;
      default:
        if (a1 != 7) {
          goto LABEL_4;
        }
        goto LABEL_25;
    }
    unint64_t v9 = 0x8000000251F65CA0;
    unint64_t v10 = 0xD00000000000001ALL;
    switch((int)v6)
    {
      case 0:
        goto LABEL_17;
      case 1:
        unint64_t v10 = 0xD00000000000001CLL;
        uint64_t v11 = "HMActionSetTypeHomeArrival";
        goto LABEL_22;
      case 2:
        uint64_t v11 = "HMActionSetTypeHomeDeparture";
        unint64_t v10 = 0xD000000000000015;
        goto LABEL_22;
      case 3:
        unint64_t v10 = 0xD000000000000014;
        unint64_t v9 = 0x8000000251F65D00;
LABEL_17:
        if (v8 != v10) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 4:
        uint64_t v11 = "HMActionSetTypeSleep";
        goto LABEL_22;
      case 5:
        unint64_t v10 = 0xD00000000000001BLL;
        uint64_t v11 = "HMActionSetTypeUserDefined";
        goto LABEL_22;
      case 6:
        unint64_t v10 = 0xD000000000000021;
        uint64_t v11 = "HMActionSetTypeTriggerOwned";
LABEL_22:
        unint64_t v9 = (unint64_t)v11 | 0x8000000000000000;
        if (v8 != v10) {
          goto LABEL_24;
        }
LABEL_23:
        if (v7 != v9)
        {
LABEL_24:
          char v12 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12)
          {
LABEL_25:
            swift_bridgeObjectRelease();
            return 1;
          }
LABEL_4:
          if (v2 == ++v5)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return 1;
      default:
        goto LABEL_4;
    }
  }
}

uint64_t sub_251D8284C(void *a1, uint64_t a2)
{
  uint64_t v36 = _s8IntervalVMa(0);
  MEMORY[0x270FA5388](v36);
  uint64_t v6 = (void *)((char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a2 + 16);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v40 = *(void *)(v4 + 72);
  v35[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  int v39 = a1;
  do
  {
    sub_251D860E8(v8, (uint64_t)v6, _s8IntervalVMa);
    BOOL v9 = *v6 == *a1 && v6[1] == a1[1];
    if (!v9 && (sub_251F36B10() & 1) == 0) {
      goto LABEL_5;
    }
    uint64_t v43 = v7;
    uint64_t v10 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
    uint64_t v11 = (uint64_t)v6 + v10;
    uint64_t v12 = (uint64_t)a1 + v10;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v42 = v35;
    uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
    MEMORY[0x270FA5388](v13 - 8);
    unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v16 = (char *)v35 - v15;
    sub_251A1E280(v12, (uint64_t)v35 - v15);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    int v41 = v35;
    uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
    unint64_t v20 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v21 = (uint64_t)&v20[*(int *)(v18 + 56)];
    sub_251A1E280(v11, (uint64_t)v20);
    sub_251A1E280((uint64_t)v35 - v15, v21);
    uint64_t v22 = sub_251F34DA0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    uint64_t v25 = v24(v20, 1, v22);
    if (v25 == 1)
    {
      sub_251A1B064((uint64_t)v35 - v15, &qword_26B21FF90);
      int v26 = v24((char *)v21, 1, v22);
      a1 = v39;
      if (v26 != 1) {
        goto LABEL_4;
      }
      sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
      uint64_t v7 = v43;
      uint64_t v6 = v38;
LABEL_16:
      if (sub_251F36590() & 1) != 0 && (sub_251F36590())
      {
        sub_251D86150((uint64_t)v6, _s8IntervalVMa);
        uint64_t v33 = 1;
        goto LABEL_20;
      }
      goto LABEL_5;
    }
    uint64_t v37 = v35;
    MEMORY[0x270FA5388](v25);
    uint64_t v27 = (char *)v35 - v15;
    sub_251A1E280((uint64_t)v20, (uint64_t)v35 - v15);
    uint64_t v28 = v24((char *)v21, 1, v22);
    if (v28 == 1)
    {
      sub_251A1B064((uint64_t)v35 - v15, &qword_26B21FF90);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
      a1 = v39;
LABEL_4:
      sub_251A1B064((uint64_t)v20, &qword_26B21E6B8);
      uint64_t v7 = v43;
      uint64_t v6 = v38;
      goto LABEL_5;
    }
    MEMORY[0x270FA5388](v28);
    uint64_t v30 = (char *)v35 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v30, v21, v22);
    sub_251A9FE88();
    char v31 = sub_251F35650();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v23 + 8);
    v32(v30, v22);
    sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
    v32(v27, v22);
    sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
    uint64_t v7 = v43;
    uint64_t v6 = v38;
    a1 = v39;
    if (v31) {
      goto LABEL_16;
    }
LABEL_5:
    sub_251D86150((uint64_t)v6, _s8IntervalVMa);
    v8 += v40;
    --v7;
  }
  while (v7);
  uint64_t v33 = 0;
LABEL_20:
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_251D82D4C(uint64_t a1, unint64_t a2)
{
  return sub_251D82D60(a1, a2, (uint64_t)&qword_26B21F180);
}

uint64_t sub_251D82D60(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_251F366C0())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)MEMORY[0x2533AB3A0](0, a2);
LABEL_5:
      uint64_t v8 = v7;
      sub_251A1A568(0, (unint64_t *)a3);
      a3 = sub_251F36120();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = sub_251F36120();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x2533AB3A0](a3, a2);
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = sub_251F36120();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_251D82EE8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)(a3 + 40);
    do
    {
      if (*v4)
      {
        if (a2) {
          return 1;
        }
      }
      else if ((a2 & 1) == 0 && *((void *)v4 - 1) == a1)
      {
        return 1;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
  }
  return 0;
}

uint64_t sub_251D82F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = (int *)type metadata accessor for StaticResident();
    unint64_t v6 = (*(unsigned __int8 *)(*((void *)v5 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v5 - 1) + 80);
    uint64_t v7 = *(void *)(*((void *)v5 - 1) + 72);
    do
    {
      uint64_t v8 = a2 + v6;
      if ((sub_251F34D70() & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v9 = v5[5];
      uint64_t v10 = *(void *)(v8 + v9);
      uint64_t v11 = *(void *)(v8 + v9 + 8);
      unint64_t v12 = (void *)(a1 + v9);
      BOOL v13 = v10 == *v12 && v11 == v12[1];
      if (!v13 && (sub_251F36B10() & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v14 = v5[6];
      unint64_t v15 = (void *)(a2 + v6 + v14);
      uint64_t v16 = v15[1];
      uint64_t v17 = (void *)(a1 + v14);
      uint64_t v18 = v17[1];
      if (v16)
      {
        if (!v18) {
          goto LABEL_4;
        }
        BOOL v19 = *v15 == *v17 && v16 == v18;
        if (!v19 && (sub_251F36B10() & 1) == 0) {
          goto LABEL_4;
        }
      }
      else if (v18)
      {
        goto LABEL_4;
      }
      if ((sub_251B0693C(*(void *)(a2 + v5[7] + v6), *(void *)(a1 + v5[7])) & 1) == 0
        || (sub_251B06B20(*(void *)(a2 + v5[8] + v6), *(void *)(a1 + v5[8])) & 1) == 0)
      {
        goto LABEL_4;
      }
      uint64_t v20 = v5[9];
      unsigned int v21 = *(unsigned __int16 *)(a2 + v20 + v6);
      unsigned int v22 = *(unsigned __int16 *)(a1 + v20);
      if (v21 >> 14)
      {
        if (v21 >> 14 != 1)
        {
          switch(v21)
          {
            case 0x8000u:
              if (v22 == 0x8000) {
                goto LABEL_28;
              }
              goto LABEL_4;
            case 0x8001u:
              if (v22 == 32769) {
                goto LABEL_28;
              }
              goto LABEL_4;
            case 0x8002u:
              if (v22 == 32770) {
                goto LABEL_28;
              }
              goto LABEL_4;
            case 0x8003u:
              if (v22 == 32771) {
                goto LABEL_28;
              }
              goto LABEL_4;
            default:
              if (v22 == 33024) {
                goto LABEL_28;
              }
              goto LABEL_4;
          }
        }
        if ((v22 & 0xC000) != 0x4000
          || ((v21 & 1) == 0) == (v22 & 1)
          || ((((v21 & 0x100) == 0) ^ ((unsigned __int16)(v22 & 0x100) >> 8)) & 1) == 0)
        {
          goto LABEL_4;
        }
      }
      else if (v22 >> 14 || v22 != v21)
      {
        goto LABEL_4;
      }
LABEL_28:
      if (sub_251F34D70())
      {
        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_4:
      v6 += v7;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t StaticDoorLockCluster.init(path:device:limitedSnapshotController:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *((unsigned __int16 *)a1 + 4);
  uint64_t v9 = *((unsigned __int8 *)a1 + 10);
  uint64_t v28 = *a1;
  uint64_t v7 = v28;
  __int16 v29 = v8;
  char v30 = v9;
  uint64_t v10 = sub_251A2AD4C(a2, a3, (uint64_t)&v28);
  char v11 = sub_251D81EDC(35, v10);
  swift_bridgeObjectRelease();
  uint64_t v33 = v7;
  __int16 v34 = v8;
  char v35 = v9;
  sub_251A2AF60(a2, a3, (uint64_t)&v33, 0x23u, (uint64_t)&v28);
  if (v31)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDC0);
    int v12 = swift_dynamicCast();
    int v13 = v12 ^ 1;
    unint64_t v14 = (unint64_t)v33 << 32;
    if (!v12) {
      unint64_t v14 = 0;
    }
    unint64_t v27 = v14;
  }
  else
  {
    sub_251A1B064((uint64_t)&v28, &qword_269B9CDC8);
    unint64_t v27 = 0;
    int v13 = 1;
  }
  char v31 = &type metadata for HomeAppFeatures;
  unint64_t v32 = sub_251A23FFC();
  LOBYTE(v28) = 4;
  char v15 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v28);
  if ((v15 & 1) == 0)
  {
    uint64_t result = swift_unknownObjectRelease();
    int v23 = 0;
    char v19 = 2;
LABEL_13:
    int v22 = 0x1000000;
LABEL_14:
    unint64_t v21 = v27;
    goto LABEL_15;
  }
  uint64_t v16 = sub_251A2A734(a2, a3, v8);
  if (!sub_251DB3B04(27, v16))
  {
    swift_unknownObjectRelease();
    BOOL v24 = *(void *)(v16 + 16) == 0;
    uint64_t result = swift_bridgeObjectRelease();
    int v23 = 0;
    char v19 = 2 * v24;
    goto LABEL_13;
  }
  char v26 = v11;
  swift_bridgeObjectRelease();
  uint64_t v28 = v7;
  __int16 v29 = v8;
  char v30 = v9;
  uint64_t v17 = sub_251A2AD4C(a2, a3, (uint64_t)&v28);
  char v18 = sub_251D81EDC(0, v17);
  swift_bridgeObjectRelease();
  char v19 = v18 & 1;
  uint64_t v33 = v7;
  __int16 v34 = v8;
  char v35 = 27;
  sub_251A2AF60(a2, a3, (uint64_t)&v33, 0, (uint64_t)&v28);
  swift_unknownObjectRelease();
  if (!v31)
  {
    uint64_t result = sub_251A1B064((uint64_t)&v28, &qword_269B9CDC8);
    int v23 = 0;
    int v22 = 0x1000000;
    char v11 = v26;
    goto LABEL_14;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDC0);
  uint64_t result = swift_dynamicCast();
  char v11 = v26;
  unint64_t v21 = v27;
  if (result)
  {
    int v22 = 0;
    int v23 = v33;
  }
  else
  {
    int v23 = 0;
    int v22 = 0x1000000;
  }
LABEL_15:
  int v25 = 256;
  if ((v11 & 1) == 0) {
    int v25 = 0;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v8 | (v9 << 16) | v21;
  *(unsigned char *)(a4 + 20) = v19;
  *(_DWORD *)(a4 + 16) = v25 | v13 | (v23 << 16) | v22;
  return result;
}

uint64_t StaticDoorLockCluster.init(path:device:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(unsigned __int16 *)(a1 + 8);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 10);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v27 = v5;
  __int16 v28 = v6;
  char v29 = v7;
  unint64_t v9 = sub_251D847AC(&v27, ObjectType, a2);
  uint64_t v27 = v5;
  __int16 v28 = v6;
  char v29 = v7;
  char v10 = sub_251D8486C(&v27, ObjectType, a2, 35);
  char v30 = &type metadata for HomeAppFeatures;
  unint64_t v31 = sub_251A23FFC();
  LOBYTE(v27) = 4;
  char v11 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  if ((v11 & 1) == 0)
  {
    char v23 = v10;
    uint64_t result = swift_unknownObjectRelease();
    char v17 = 0;
    goto LABEL_8;
  }
  if (!(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 24))(v6, ObjectType, a2))
  {
    uint64_t result = swift_unknownObjectRelease();
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 20) = 0;
    LODWORD(v21) = 768;
    goto LABEL_16;
  }
  uint64_t v13 = v12;
  char v23 = v10;
  uint64_t v14 = swift_getObjectType();
  uint64_t v15 = MatterDescriptorCluster.availableClusterKinds.getter(v14, v13);
  BOOL v16 = sub_251DB3B04(27, v15);
  swift_bridgeObjectRelease();
  if (!v16)
  {
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
    char v17 = 0;
LABEL_12:
    uint64_t v20 = 0;
    uint64_t v19 = 0x1000000;
    goto LABEL_13;
  }
  uint64_t v27 = v5;
  __int16 v28 = v6;
  char v29 = 27;
  char v17 = sub_251D8486C(&v27, ObjectType, a2, 0);
  uint64_t v24 = v5;
  __int16 v25 = v6;
  char v26 = 27;
  (*(void (**)(uint64_t *__return_ptr, uint64_t *, void, uint64_t, uint64_t))(a2 + 48))(&v27, &v24, 0, ObjectType, a2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (!v30)
  {
    uint64_t result = sub_251A1B064((uint64_t)&v27, &qword_26B21E190);
    goto LABEL_12;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_8:
    uint64_t v20 = 0;
    uint64_t v19 = 0x1000000;
    goto LABEL_13;
  }
  uint64_t v19 = 0;
  uint64_t v20 = v24;
LABEL_13:
  uint64_t v22 = 256;
  if ((v23 & 1) == 0) {
    uint64_t v22 = 0;
  }
  unint64_t v21 = v22 & 0xFFFFFFFFFFFFFFFELL | HIDWORD(v9) & 1 | (v20 << 16) | v19;
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v6 | (v7 << 16) | (v9 << 32);
  *(unsigned char *)(a3 + 20) = (v17 & 1) != 0;
LABEL_16:
  *(_DWORD *)(a3 + 16) = v21;
  return result;
}

uint64_t StaticDoorLockCluster.WalletKeyUWBApproachAngle.rawValue.getter()
{
  return *v0;
}

uint64_t StaticDoorLockCluster.WalletKeyUWBApproachAngle.init(rawValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.frontLeft.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.frontCenter.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.frontRight.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.backLeft.getter(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.backCenter.getter(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.backRight.getter(unsigned char *a1@<X8>)
{
  *a1 = 32;
}

void sub_251D837A8()
{
  off_269BA3278 = &unk_27025FCE8;
}

unint64_t StaticDoorLockCluster.WalletKeyUWBApproachAngle.description.getter()
{
  int v1 = *v0;
  if (qword_269B9C450 != -1) {
    swift_once();
  }
  uint64_t v2 = *((void *)off_269BA3278 + 2);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    do
    {
      int v9 = *((unsigned __int8 *)v4 - 16);
      if ((v9 & ~v1) == 0)
      {
        uint64_t v10 = *(v4 - 1);
        uint64_t v11 = *v4;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3DEFC(0, v5[2] + 1, 1);
        }
        unint64_t v7 = v5[2];
        unint64_t v6 = v5[3];
        if (v7 >= v6 >> 1) {
          sub_251A3DEFC(v6 > 1, v7 + 1, 1);
        }
        v5[2] = v7 + 1;
        uint64_t v8 = &v5[3 * v7];
        *((unsigned char *)v8 + 32) = v9;
        v8[5] = v10;
        void v8[6] = v11;
      }
      v4 += 3;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
    int64_t v12 = v5[2];
    if (v12) {
      goto LABEL_13;
    }
LABEL_19:
    swift_release();
    uint64_t v13 = MEMORY[0x263F8EE78];
    goto LABEL_20;
  }
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  int64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v12) {
    goto LABEL_19;
  }
LABEL_13:
  uint64_t v21 = v3;
  sub_251A3DEDC(0, v12, 0);
  uint64_t v13 = v21;
  uint64_t v14 = v5 + 6;
  do
  {
    uint64_t v16 = *(v14 - 1);
    uint64_t v15 = *v14;
    unint64_t v18 = *(void *)(v21 + 16);
    unint64_t v17 = *(void *)(v21 + 24);
    swift_bridgeObjectRetain();
    if (v18 >= v17 >> 1) {
      sub_251A3DEDC(v17 > 1, v18 + 1, 1);
    }
    *(void *)(v21 + 16) = v18 + 1;
    uint64_t v19 = v21 + 16 * v18;
    *(void *)(v19 + 32) = v16;
    *(void *)(v19 + 40) = v15;
    v14 += 3;
    --v12;
  }
  while (v12);
  swift_release();
LABEL_20:
  sub_251F36400();
  swift_bridgeObjectRelease();
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  MEMORY[0x2533AAA10](v13, MEMORY[0x263F8D310]);
  sub_251F35800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000024;
}

unsigned char *sub_251D83A68@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_251D83A74()
{
  return sub_251F35A60();
}

uint64_t sub_251D83AD4()
{
  return sub_251F35A00();
}

unsigned char *sub_251D83B28@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

unsigned char *sub_251D83B3C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

unsigned char *sub_251D83B50@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_251D83B64(unsigned char *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  int v4 = *v2;
  if ((v4 & v3) != v3) {
    *uint64_t v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_251D83B94@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    *uint64_t v2 = v4 & ~(_BYTE)v3;
  }
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_251D83BC0@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *uint64_t v2 = v4 | v3;
  int v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned char *sub_251D83BE4(unsigned char *result)
{
  *v1 |= *result;
  return result;
}

unsigned char *sub_251D83BF8(unsigned char *result)
{
  *v1 &= *result;
  return result;
}

unsigned char *sub_251D83C0C(unsigned char *result)
{
  *v1 ^= *result;
  return result;
}

unsigned char *sub_251D83C20@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_251D83C34(unsigned __int8 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_251D83C48(unsigned char *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_251D83C5C(unsigned __int8 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_251D83C70()
{
  return *v0 == 0;
}

unsigned char *sub_251D83C80(unsigned char *result)
{
  *v1 &= ~*result;
  return result;
}

void StaticDoorLockCluster.id.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 10);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
}

unint64_t StaticDoorLockCluster.autoRelockTime.getter()
{
  return *(unsigned int *)(v0 + 12) | ((unint64_t)*(unsigned __int8 *)(v0 + 16) << 32);
}

uint64_t StaticDoorLockCluster.autoRelockTimeSupported.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t StaticDoorLockCluster.effectiveAutoRelockTimeSupported.getter()
{
  return *(unsigned char *)(v0 + 17) & 1;
}

void StaticDoorLockCluster.walletKeyUWBApproachAngle.getter(unsigned char *a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 19);
  *a1 = *(unsigned char *)(v1 + 18);
  a1[1] = v2;
}

uint64_t StaticDoorLockCluster.walletKeyUWBApproachAngleSupported.getter()
{
  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t StaticDoorLockCluster.effectiveWalletKeyUWBApproachAngleSupported.getter()
{
  return *(unsigned char *)(v0 + 20) & 1;
}

uint64_t StaticDoorLockCluster.init(id:autoRelockTime:autoRelockTimeSupported:walletKeyUWBApproachAngle:walletKeyUWBApproachAngleSupported:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  __int16 v6 = *(_WORD *)(result + 8);
  char v7 = *(unsigned char *)(result + 10);
  char v8 = *a4;
  char v9 = a4[1];
  *(void *)a6 = *(void *)result;
  *(_WORD *)(a6 + 8) = v6;
  *(unsigned char *)(a6 + 10) = v7;
  *(_DWORD *)(a6 + 12) = a2;
  *(unsigned char *)(a6 + 16) = BYTE4(a2) & 1;
  *(unsigned char *)(a6 + 17) = a3;
  *(unsigned char *)(a6 + 18) = v8;
  *(unsigned char *)(a6 + 19) = v9;
  *(unsigned char *)(a6 + 20) = a5;
  return result;
}

uint64_t StaticDoorLockCluster.hash(into:)()
{
  int v1 = v0[16];
  int v2 = v0[17];
  unsigned __int8 v3 = v0[19];
  int v4 = v0[20];
  sub_251F36CF0();
  sub_251F36CD0();
  sub_251F36CE0();
  if (v1 == 1)
  {
    sub_251F36CC0();
    if (v2 == 2) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_251F36CC0();
  sub_251F36CE0();
  if (v2 != 2) {
LABEL_3:
  }
    sub_251F36CC0();
LABEL_5:
  sub_251F36CC0();
  if ((v3 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (v4 != 2) {
    sub_251F36CC0();
  }
  return sub_251F36CC0();
}

unint64_t sub_251D83E60(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F6C65526F747561;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251D83F1C()
{
  return sub_251D83E60(*v0);
}

uint64_t sub_251D83F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D85ED4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D83F4C(uint64_t a1)
{
  unint64_t v2 = sub_251D85840();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D83F88(uint64_t a1)
{
  unint64_t v2 = sub_251D85840();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticDoorLockCluster.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3280);
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  __int16 v7 = *((_WORD *)v1 + 4);
  char v8 = *((unsigned char *)v1 + 10);
  uint64_t v20 = *((unsigned int *)v1 + 3);
  int v26 = *((unsigned __int8 *)v1 + 16);
  int v9 = *((unsigned __int8 *)v1 + 17);
  int v18 = *((unsigned __int8 *)v1 + 18);
  int v19 = v9;
  int v10 = *((unsigned __int8 *)v1 + 19);
  void v16[2] = *((unsigned __int8 *)v1 + 20);
  int v17 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D85840();
  sub_251F36DA0();
  uint64_t v23 = v6;
  __int16 v24 = v7;
  char v25 = v8;
  char v27 = 0;
  sub_251A900F8();
  uint64_t v11 = v22;
  sub_251F36A20();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  }
  char v13 = v18;
  char v14 = v17;
  uint64_t v15 = v21;
  LOBYTE(v23) = 1;
  char v27 = v26;
  sub_251F369B0();
  LOBYTE(v23) = 2;
  sub_251F36920();
  LOBYTE(v23) = v13;
  BYTE1(v23) = v14;
  char v27 = 3;
  sub_251D85894();
  sub_251F36970();
  LOBYTE(v23) = 4;
  sub_251F36920();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t StaticDoorLockCluster.hashValue.getter()
{
  int v1 = v0[16];
  int v2 = v0[17];
  unsigned __int8 v3 = v0[19];
  int v4 = v0[20];
  sub_251F36CA0();
  sub_251F36CF0();
  sub_251F36CD0();
  sub_251F36CE0();
  if (v1 == 1)
  {
    sub_251F36CC0();
    if (v2 == 2) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_251F36CC0();
  sub_251F36CE0();
  if (v2 != 2) {
LABEL_3:
  }
    sub_251F36CC0();
LABEL_5:
  sub_251F36CC0();
  if ((v3 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (v4 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36D00();
}

uint64_t StaticDoorLockCluster.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3298);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D85840();
  sub_251F36D90();
  if (!v2)
  {
    char v22 = 0;
    sub_251A9014C();
    sub_251F36880();
    uint64_t v17 = v18;
    int v9 = v19;
    int v10 = v20;
    LOBYTE(v18) = 1;
    uint64_t v15 = sub_251F36810();
    int v16 = v10;
    int v21 = v9;
    LOBYTE(v18) = 2;
    LOBYTE(v10) = sub_251F367A0();
    char v22 = 3;
    sub_251D858E8();
    sub_251F367D0();
    LOBYTE(v9) = v18;
    HIDWORD(v14) = BYTE1(v18);
    LOBYTE(v18) = 4;
    char v12 = sub_251F367A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v17;
    *(_WORD *)(a2 + 8) = v21;
    *(unsigned char *)(a2 + 10) = v16;
    char v13 = BYTE4(v15);
    *(_DWORD *)(a2 + 12) = v15;
    *(unsigned char *)(a2 + 16) = v13 & 1;
    *(unsigned char *)(a2 + 17) = v10;
    *(unsigned char *)(a2 + 18) = v9;
    *(unsigned char *)(a2 + 19) = BYTE4(v14);
    *(unsigned char *)(a2 + 20) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251D8462C()
{
  int v1 = v0[16];
  int v2 = v0[17];
  unsigned __int8 v3 = v0[19];
  int v4 = v0[20];
  sub_251F36CA0();
  sub_251F36CF0();
  sub_251F36CD0();
  sub_251F36CE0();
  if (v1 == 1)
  {
    sub_251F36CC0();
    if (v2 == 2) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_251F36CC0();
  sub_251F36CE0();
  if (v2 != 2) {
LABEL_3:
  }
    sub_251F36CC0();
LABEL_5:
  sub_251F36CC0();
  if ((v3 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (v4 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36D00();
}

uint64_t sub_251D8477C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticDoorLockCluster.init(from:)(a1, a2);
}

uint64_t sub_251D84794(void *a1)
{
  return StaticDoorLockCluster.encode(to:)(a1);
}

unint64_t sub_251D847AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = *((_WORD *)a1 + 4);
  char v4 = *((unsigned char *)a1 + 10);
  uint64_t v9 = *a1;
  __int16 v10 = v3;
  char v11 = v4;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v12, &v9, 35, a2);
  if (v12[3])
  {
    int v5 = swift_dynamicCast();
    uint64_t v6 = v9;
    unsigned __int8 v7 = v5 ^ 1;
    if (!v5) {
      uint64_t v6 = 0;
    }
  }
  else
  {
    sub_251A1B064((uint64_t)v12, &qword_26B21E190);
    uint64_t v6 = 0;
    unsigned __int8 v7 = 1;
  }
  return v6 | ((unint64_t)v7 << 32);
}

uint64_t sub_251D8486C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v5 = *((_WORD *)a1 + 4);
  char v6 = *((unsigned char *)a1 + 10);
  uint64_t v9 = *a1;
  __int16 v10 = v5;
  char v11 = v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t *))(a3 + 88))(&v9);
  LOBYTE(a4) = sub_251D81EDC(a4, v7);
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t StaticDoorLockCluster.setAutoRelockTime(_:)(int a1)
{
  *(_DWORD *)(v2 + 260) = a1;
  *(void *)(v2 + 224) = *(void *)v1;
  *(_WORD *)(v2 + 264) = *(_WORD *)(v1 + 8);
  *(unsigned char *)(v2 + 179) = *(unsigned char *)(v1 + 10);
  return MEMORY[0x270FA2498](sub_251D8491C, 0, 0);
}

uint64_t sub_251D8491C()
{
  uint64_t v13 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  *(void *)(v0 + 232) = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(_DWORD *)(v0 + 260);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315650;
    *(void *)(v0 + 216) = sub_251A00E84(0xD000000000000029, 0x8000000251F71570, &v12);
    sub_251F361D0();
    *(_WORD *)(v5 + 12) = 2080;
    *(void *)(v0 + 208) = sub_251A00E84(0xD000000000000015, 0x8000000251F715A0, &v12);
    sub_251F361D0();
    *(_WORD *)(v5 + 22) = 1024;
    *(_DWORD *)(v0 + 256) = v4;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v2, v3, "%s - %s: Starting to update autoRelockTime to %u.", (uint8_t *)v5, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v6, -1, -1);
    MEMORY[0x2533AC760](v5, -1, -1);
  }

  char v7 = *(unsigned char *)(v0 + 179);
  __int16 v8 = *(_WORD *)(v0 + 264);
  uint64_t v9 = *(void *)(v0 + 224);
  sub_251A1A568(0, &qword_269BA32B0);
  *(void *)(v0 + 168) = v9;
  *(_WORD *)(v0 + 176) = v8;
  *(unsigned char *)(v0 + 178) = v7;
  __int16 v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v10;
  void *v10 = v0;
  v10[1] = sub_251D84BBC;
  return sub_251C4E0D4((uint64_t *)(v0 + 168));
}

uint64_t sub_251D84BBC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 248) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251D84CBC, 0, 0);
}

uint64_t sub_251D84CBC()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 248);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D560);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3A500;
    *(void *)(inited + 32) = sub_251F356F0();
    *(void *)(inited + 40) = v3;
    uint64_t v4 = sub_251F356F0();
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v4;
    *(void *)(inited + 56) = v5;
    *(void *)(inited + 80) = sub_251F356F0();
    *(void *)(inited + 88) = v6;
    uint64_t v7 = sub_251F36D60();
    *(void *)(inited + 120) = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    *(void *)(inited + 96) = v7;
    sub_2519FA1A4(inited);
    __int16 v8 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
    if (qword_269B9C330 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v9 = (void *)qword_269B9FC18;
    if (qword_269B9FC18)
    {
      __int16 v10 = (void *)qword_269B9FC18;
    }
    else
    {
      __int16 v10 = (void *)sub_251F36100();
      uint64_t v9 = 0;
    }
    id v17 = v9;
    objc_msgSend(v1, sel_writeAttributeAutoRelockTimeWithValue_expectedValueInterval_, v8, v10);
  }
  else
  {
    char v11 = sub_251F35080();
    os_log_type_t v12 = sub_251F35FD0();
    if (os_log_type_enabled(v11, v12))
    {
      __int16 v22 = *(_WORD *)(v0 + 264);
      char v23 = *(unsigned char *)(v0 + 179);
      uint64_t v21 = *(void *)(v0 + 224);
      int v20 = *(_DWORD *)(v0 + 260);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v24[0] = v14;
      *(_DWORD *)uint64_t v13 = 136315906;
      *(void *)(v0 + 184) = sub_251A00E84(0xD000000000000029, 0x8000000251F71570, v24);
      sub_251F361D0();
      *(_WORD *)(v13 + 12) = 2080;
      *(void *)(v0 + 200) = sub_251A00E84(0xD000000000000015, 0x8000000251F715A0, v24);
      sub_251F361D0();
      *(_WORD *)(v13 + 22) = 1024;
      *(_DWORD *)(v0 + 180) = v20;
      sub_251F361D0();
      *(_WORD *)(v13 + 28) = 2080;
      v24[1] = v21;
      __int16 v25 = v22;
      char v26 = v23;
      uint64_t v15 = ClusterPath.description.getter();
      *(void *)(v0 + 192) = sub_251A00E84(v15, v16, v24);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v11, v12, "%s - %s: Unable to update to autoRelockTime to %u because could not create door lock cluster with %s", (uint8_t *)v13, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v14, -1, -1);
      MEMORY[0x2533AC760](v13, -1, -1);
    }
  }
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t StaticDoorLockCluster.setWalletKeyUWBApproachAngle(_:)(unsigned char *a1)
{
  *(unsigned char *)(v2 + 211) = *a1;
  *(void *)(v2 + 248) = *(void *)v1;
  *(_WORD *)(v2 + 212) = *(_WORD *)(v1 + 8);
  *(unsigned char *)(v2 + 214) = *(unsigned char *)(v1 + 10);
  return MEMORY[0x270FA2498](sub_251D850CC, 0, 0);
}

uint64_t sub_251D850CC()
{
  uint64_t v15 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  *(void *)(v0 + 256) = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = *(unsigned char *)(v0 + 211);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 232) = sub_251A00E84(0xD000000000000020, 0x8000000251F715C0, &v13);
    sub_251F361D0();
    *(_WORD *)(v5 + 12) = 2080;
    char v14 = v4;
    unint64_t v7 = StaticDoorLockCluster.WalletKeyUWBApproachAngle.description.getter();
    *(void *)(v0 + 240) = sub_251A00E84(v7, v8, &v13);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v2, v3, "%s %s.", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v6, -1, -1);
    MEMORY[0x2533AC760](v5, -1, -1);
  }

  char v9 = *(unsigned char *)(v0 + 214);
  __int16 v10 = *(_WORD *)(v0 + 212);
  *(void *)(v0 + 200) = *(void *)(v0 + 248);
  *(_WORD *)(v0 + 208) = v10;
  *(unsigned char *)(v0 + 210) = v9;
  char v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v11;
  void *v11 = v0;
  v11[1] = sub_251D85320;
  return sub_251C50EE4(v0 + 200);
}

uint64_t sub_251D85320(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = (void *)*v2;
  v3[22] = v2;
  v3[23] = a1;
  v3[24] = a2;
  v3[34] = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251D85428, 0, 0);
}

uint64_t sub_251D85428()
{
  uint64_t v28 = v0;
  if (*(void *)(v0 + 272))
  {
    uint64_t v1 = *(void *)(v0 + 192);
    __int16 v2 = *(_WORD *)(v0 + 212);
    uint64_t v3 = *(void *)(v0 + 248);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D560);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3A500;
    *(void *)(inited + 32) = sub_251F356F0();
    *(void *)(inited + 40) = v5;
    uint64_t v6 = sub_251F356F0();
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v6;
    *(void *)(inited + 56) = v7;
    *(void *)(inited + 80) = sub_251F356F0();
    *(void *)(inited + 88) = v8;
    uint64_t v9 = sub_251F36C50();
    *(void *)(inited + 120) = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    *(void *)(inited + 96) = v9;
    unint64_t v10 = sub_2519FA1A4(inited);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v25 = v3;
    __int16 v26 = v2;
    char v27 = 27;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    *(void *)(v0 + 144) = v10;
    *(void *)(v0 + 168) = v12;
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t, uint64_t))(v1 + 64))(&v25, 0, v0 + 144, ObjectType, v1);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  }
  else
  {
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FB0();
    if (os_log_type_enabled(v13, v14))
    {
      char v23 = *(unsigned char *)(v0 + 214);
      __int16 v15 = *(_WORD *)(v0 + 212);
      uint64_t v16 = *(void *)(v0 + 248);
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v24 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      *(void *)(v0 + 224) = sub_251A00E84(0xD000000000000020, 0x8000000251F715C0, &v24);
      sub_251F361D0();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v25 = v16;
      __int16 v26 = v15;
      char v27 = v23;
      uint64_t v19 = ClusterPath.description.getter();
      *(void *)(v0 + 216) = sub_251A00E84(v19, v20, &v24);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v13, v14, "%s: Unable to update wallet key uwb approach angle because device in current home with path %s could not be found.", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v18, -1, -1);
      MEMORY[0x2533AC760](v17, -1, -1);
    }
  }
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t _s13HomeDataModel21StaticDoorLockClusterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(void *)a1 == *(void *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    if (dword_251F52D84[*(char *)(a1 + 10)] != dword_251F52D84[*(char *)(a2 + 10)]) {
      return 0;
    }
    int v4 = *(unsigned __int8 *)(a1 + 17);
    int v5 = *(unsigned __int8 *)(a1 + 18);
    char v6 = *(unsigned char *)(a1 + 19);
    int v7 = *(unsigned __int8 *)(a1 + 20);
    int v8 = *(unsigned __int8 *)(a2 + 17);
    int v9 = *(unsigned __int8 *)(a2 + 20);
    if (*(unsigned char *)(a1 + 16))
    {
      if (!*(unsigned char *)(a2 + 16)) {
        return 0;
      }
    }
    else
    {
      if (*(_DWORD *)(a1 + 12) == *(_DWORD *)(a2 + 12)) {
        char v10 = *(unsigned char *)(a2 + 16);
      }
      else {
        char v10 = 1;
      }
      if (v10) {
        return 0;
      }
    }
    if (v4 == 2)
    {
      if (v8 != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (v8 == 2 || ((((v4 & 1) == 0) ^ v8) & 1) == 0) {
        return result;
      }
    }
    if (v6)
    {
      if (!*(unsigned char *)(a2 + 19)) {
        return 0;
      }
    }
    else
    {
      if (v5 == *(unsigned __int8 *)(a2 + 18)) {
        char v11 = *(unsigned char *)(a2 + 19);
      }
      else {
        char v11 = 1;
      }
      if (v11) {
        return 0;
      }
    }
    if (v7 == 2)
    {
      if (v9 != 2) {
        return 0;
      }
    }
    else if (v9 == 2 || ((((v7 & 1) == 0) ^ v9) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_251D85840()
{
  unint64_t result = qword_269BA3288;
  if (!qword_269BA3288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3288);
  }
  return result;
}

unint64_t sub_251D85894()
{
  unint64_t result = qword_269BA3290;
  if (!qword_269BA3290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3290);
  }
  return result;
}

unint64_t sub_251D858E8()
{
  unint64_t result = qword_269BA32A0;
  if (!qword_269BA32A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32A0);
  }
  return result;
}

unint64_t sub_251D85940()
{
  unint64_t result = qword_269BA32C0;
  if (!qword_269BA32C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32C0);
  }
  return result;
}

unint64_t sub_251D85998()
{
  unint64_t result = qword_269BA32C8;
  if (!qword_269BA32C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32C8);
  }
  return result;
}

unint64_t sub_251D859F0()
{
  unint64_t result = qword_269BA32D0;
  if (!qword_269BA32D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32D0);
  }
  return result;
}

unint64_t sub_251D85A48()
{
  unint64_t result = qword_269BA32D8;
  if (!qword_269BA32D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32D8);
  }
  return result;
}

unint64_t sub_251D85AA0()
{
  unint64_t result = qword_269BA32E0;
  if (!qword_269BA32E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32E0);
  }
  return result;
}

__n128 __swift_memcpy21_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticDoorLockCluster(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 21)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticDoorLockCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 21) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticDoorLockCluster()
{
  return &type metadata for StaticDoorLockCluster;
}

ValueMetadata *type metadata accessor for StaticDoorLockCluster.WalletKeyUWBApproachAngle()
{
  return &type metadata for StaticDoorLockCluster.WalletKeyUWBApproachAngle;
}

unsigned char *storeEnumTagSinglePayload for StaticDoorLockCluster.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D85C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticDoorLockCluster.CodingKeys()
{
  return &type metadata for StaticDoorLockCluster.CodingKeys;
}

unint64_t sub_251D85CD8()
{
  unint64_t result = qword_269BA32E8;
  if (!qword_269BA32E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32E8);
  }
  return result;
}

unint64_t sub_251D85D30()
{
  unint64_t result = qword_269BA32F0;
  if (!qword_269BA32F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32F0);
  }
  return result;
}

unint64_t sub_251D85D88()
{
  unint64_t result = qword_269BA32F8;
  if (!qword_269BA32F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA32F8);
  }
  return result;
}

uint64_t sub_251D85DDC()
{
  v7[3] = &type metadata for HomeAppFeatures;
  void v7[4] = sub_251A23FFC();
  LOBYTE(v7[0]) = 4;
  char v0 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  uint64_t v1 = MEMORY[0x263F8EE80];
  if (v0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7[0] = v1;
    sub_251A0DC58((uint64_t)&unk_2702617A0, 27, isUniquelyReferenced_nonNull_native);
    uint64_t v1 = v7[0];
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0C8);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_251F38650;
  *(_DWORD *)(v3 + 32) = 35;
  char v4 = swift_isUniquelyReferenced_nonNull_native();
  v7[0] = v1;
  sub_251A0DC58(v3, 21, v4);
  uint64_t v5 = v7[0];
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_251D85ED4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C65526F747561 && a2 == 0xEE00656D69546B63 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000251F715F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000251F71610 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000251F71630)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251D860E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251D86150(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

HomeDataModel::DeepLinkURLGenerator __swiftcall DeepLinkURLGenerator.init(host:path:)(Swift::String host, Swift::String path)
{
  *BOOL v2 = host;
  v2[1] = path;
  result.path = path;
  result.host = host;
  return result;
}

uint64_t DeepLinkURLGenerator.generateDeepLink()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  v39[5] = v1[2];
  uint64_t v6 = sub_251F35780();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v6 == sub_251F35780() && v8 == v9) {
    goto LABEL_8;
  }
  char v11 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_9;
  }
  uint64_t v12 = sub_251F35780();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (v12 == sub_251F35780() && v14 == v15) {
    goto LABEL_8;
  }
  char v27 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    uint64_t v28 = sub_251F35780();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    if (v28 == sub_251F35780() && v30 == v31) {
      goto LABEL_8;
    }
    char v32 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_9;
    }
    uint64_t v33 = sub_251F35780();
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    if (v33 == sub_251F35780() && v35 == v36)
    {
LABEL_8:
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
    char v37 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
      sub_251D86930();
      swift_allocError();
      unsigned char *v38 = 0;
      return swift_willThrow();
    }
  }
LABEL_9:
  v39[0] = a1;
  v39[1] = v2;
  uint64_t v16 = sub_251F34740();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34730();
  sub_251F34720();
  swift_bridgeObjectRetain();
  MEMORY[0x2533A9620](v4, v5);
  v39[2] = 47;
  v39[3] = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F34700();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
  MEMORY[0x270FA5388](v20 - 8);
  __int16 v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F346C0();
  uint64_t v23 = sub_251F34B70();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_251A1B064((uint64_t)v22, &qword_269B9DB68);
    sub_251D86930();
    swift_allocError();
    *uint64_t v25 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return (*(uint64_t (**)(void, char *, uint64_t))(v24 + 32))(v39[0], v22, v23);
  }
}

void *static DeepLinkDestination.allCases.getter()
{
  return &unk_270263D38;
}

uint64_t DeepLinkDestination.rawValue.getter()
{
  uint64_t result = 0x726F737365636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79726F6765746163;
      break;
    case 2:
      uint64_t result = 0x72616F6268736164;
      break;
    case 3:
      uint64_t result = 1836019570;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251D86930()
{
  unint64_t result = qword_269BA3300;
  if (!qword_269BA3300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3300);
  }
  return result;
}

BOOL static DeepLinkURLGeneratorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DeepLinkURLGeneratorError.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t DeepLinkURLGeneratorError.hashValue.getter()
{
  return sub_251F36D00();
}

unint64_t static NavigationConstants.privateURLScheme.getter()
{
  return 0xD000000000000016;
}

HomeDataModel::DeepLinkDestination::SecondaryDestination_optional __swiftcall DeepLinkDestination.SecondaryDestination.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static DeepLinkDestination.SecondaryDestination.allCases.getter()
{
  return &unk_270263DF8;
}

uint64_t DeepLinkDestination.SecondaryDestination.rawValue.getter()
{
  uint64_t result = 0x736172656D6163;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6F72746E6F63;
      break;
    case 2:
      uint64_t result = 0x657469726F766166;
      break;
    case 3:
      uint64_t result = 0x73656E656373;
      break;
    case 4:
      uint64_t result = 0x73676E6974746573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D86B3C(unsigned __int8 *a1, char *a2)
{
  return sub_251DB2614(*a1, *a2);
}

uint64_t sub_251D86B48()
{
  return sub_251F36D00();
}

uint64_t sub_251D86C3C()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D86D18()
{
  return sub_251F36D00();
}

HomeDataModel::DeepLinkDestination::SecondaryDestination_optional sub_251D86E08(Swift::String *a1)
{
  return DeepLinkDestination.SecondaryDestination.init(rawValue:)(*a1);
}

void sub_251D86E14(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x736172656D6163;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6C6F72746E6F63;
      goto LABEL_3;
    case 2:
      *a1 = 0x657469726F766166;
      a1[1] = 0xE900000000000073;
      break;
    case 3:
      *a1 = 0x73656E656373;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x73676E6974746573;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

void sub_251D86ECC(void *a1@<X8>)
{
  *a1 = &unk_270263E20;
}

HomeDataModel::DeepLinkDestination::AcccessoryControlSecondaryDestination_optional __swiftcall DeepLinkDestination.AcccessoryControlSecondaryDestination.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static DeepLinkDestination.AcccessoryControlSecondaryDestination.allCases.getter()
{
  return &unk_270263E98;
}

uint64_t DeepLinkDestination.AcccessoryControlSecondaryDestination.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 6449010;
  }
}

uint64_t sub_251D86F84(char *a1, char *a2)
{
  return sub_251DB27D8(*a1, *a2);
}

uint64_t sub_251D86F90()
{
  return sub_251F36D00();
}

uint64_t sub_251D87010()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D8707C()
{
  return sub_251F36D00();
}

HomeDataModel::DeepLinkDestination::AcccessoryControlSecondaryDestination_optional sub_251D870F8(Swift::String *a1)
{
  return DeepLinkDestination.AcccessoryControlSecondaryDestination.init(rawValue:)(*a1);
}

void sub_251D87104(unint64_t *a1@<X8>)
{
  unint64_t v2 = 6449010;
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x8000000251F66D90;
  if (!*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_251D87140(void *a1@<X8>)
{
  *a1 = &unk_270263EC0;
}

HomeDataModel::DeepLinkDestination_optional __swiftcall DeepLinkDestination.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_251D871AC(unsigned __int8 *a1, char *a2)
{
  return sub_251DB2484(*a1, *a2);
}

uint64_t sub_251D871B8()
{
  return sub_251F36D00();
}

uint64_t sub_251D87298()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D87360()
{
  return sub_251F36D00();
}

HomeDataModel::DeepLinkDestination_optional sub_251D8743C(Swift::String *a1)
{
  return DeepLinkDestination.init(rawValue:)(*a1);
}

void sub_251D87448(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000079;
  uint64_t v3 = 0x726F737365636361;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x79726F6765746163;
      goto LABEL_3;
    case 2:
      *a1 = 0x72616F6268736164;
      a1[1] = 0xE900000000000064;
      break;
    case 3:
      *a1 = 1836019570;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_251D874E8(void *a1@<X8>)
{
  *a1 = &unk_270263F68;
}

BOOL static HomeDeepLinkKeys.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HomeDeepLinkKeys.hash(into:)()
{
  return sub_251F36CB0();
}

HomeDataModel::HomeDeepLinkKeys_optional __swiftcall HomeDeepLinkKeys.init(stringValue:)(Swift::String stringValue)
{
  unint64_t v2 = v1;
  BOOL v3 = stringValue._countAndFlagsBits == 0x7475626972747461 && stringValue._object == (void *)0xE900000000000065;
  if (v3
    || (object = stringValue._object, uint64_t countAndFlagsBits = stringValue._countAndFlagsBits, (sub_251F36B10() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else if (countAndFlagsBits == 0x79726F6765746163 && object == (void *)0xE800000000000000 {
         || (sub_251F36B10() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else if (countAndFlagsBits == 0x694C656369766564 && object == (void *)0xEA00000000007473 {
         || (sub_251F36B10() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 2;
  }
  else if (countAndFlagsBits == 0x686372616573 && object == (void *)0xE600000000000000)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 3;
  }
  else
  {
    char v8 = sub_251F36B10();
    result.value = swift_bridgeObjectRelease();
    if (v8) {
      char v7 = 3;
    }
    else {
      char v7 = 4;
    }
  }
  *unint64_t v2 = v7;
  return result;
}

HomeDataModel::HomeDeepLinkKeys_optional __swiftcall HomeDeepLinkKeys.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 4;
  return (HomeDataModel::HomeDeepLinkKeys_optional)intValue;
}

uint64_t HomeDeepLinkKeys.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t HomeDeepLinkKeys.intValue.getter()
{
  return 0;
}

uint64_t HomeDeepLinkKeys.stringValue.getter()
{
  uint64_t result = 0x7475626972747461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79726F6765746163;
      break;
    case 2:
      uint64_t result = 0x694C656369766564;
      break;
    case 3:
      uint64_t result = 0x686372616573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D87808()
{
  uint64_t result = 0x7475626972747461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79726F6765746163;
      break;
    case 2:
      uint64_t result = 0x694C656369766564;
      break;
    case 3:
      uint64_t result = 0x686372616573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D878A0(uint64_t a1)
{
  unint64_t v2 = sub_251D8A5C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D878DC(uint64_t a1)
{
  unint64_t v2 = sub_251D8A5C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t URLQueryItem.init<A>(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  sub_251F34660();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);
  return v6(a2, a3);
}

uint64_t URLQueryItem.decodedValue<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_251F34680();
  if (v7) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8))(v6, v7, a1, a2);
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
  return v9(a3, 1, 1, a1);
}

uint64_t Array<A>.encode()(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_251A3DEDC(0, v1, 0);
    uint64_t isUniquelyReferenced_nonNull_native = sub_251F34DA0();
    uint64_t v29 = isUniquelyReferenced_nonNull_native;
    uint64_t v5 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
    uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v27 = v5 + 16;
    uint64_t v28 = v6;
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v8 = *(void *)(v5 + 64);
    uint64_t v26 = *(void *)(v5 + 72);
    uint64_t v9 = (void (**)(char *, uint64_t))(v5 + 8);
    do
    {
      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
      uint64_t v10 = v29;
      v28((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v29);
      uint64_t v11 = sub_251F34D40();
      uint64_t v13 = v12;
      (*v9)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
      uint64_t v2 = v30;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = sub_251A3DEDC(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v30;
      }
      unint64_t v15 = *(void *)(v2 + 16);
      unint64_t v14 = *(void *)(v2 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t isUniquelyReferenced_nonNull_native = sub_251A3DEDC(v14 > 1, v15 + 1, 1);
        uint64_t v2 = v30;
      }
      *(void *)(v2 + 16) = v15 + 1;
      uint64_t v16 = v2 + 16 * v15;
      *(void *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v13;
      v7 += v26;
      --v1;
    }
    while (v1);
  }
  uint64_t v30 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  sub_251A1E590((unint64_t *)&qword_26B21EAB8, &qword_26B21EAB0);
  unint64_t v17 = sub_251F35620();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_251D87D64(v17, v19);
  unint64_t v22 = v21;
  uint64_t v23 = sub_251F34C00();
  sub_251A1AD94(v20, v22);
  return v23;
}

uint64_t sub_251D87D64(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3388);
  if (swift_dynamicCast())
  {
    sub_251A1A444(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_251F34890();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_251A1B064((uint64_t)v38, &qword_269BA3390);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_251F364C0();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_251D8992C(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_251F35820();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_251D89990(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_251D8923C((void *(*)(uint64_t *__return_ptr, char *, char *))sub_251D8A65C);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_251F34BD0();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_251D891C0(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_251F35850();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_251F364C0();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_251D891C0(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_251F35830();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_251F34BE0();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_251F34BE0();
    sub_251D8A6C8(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_251D8A6C8((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

unint64_t sub_251D88294@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = _sSa13HomeDataModel10Foundation4UUIDVRszlE5querySayADGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_251D882BC()
{
  return Array<A>.encode()(*v0);
}

Swift::String_optional __swiftcall String.encode()()
{
  unint64_t v2 = v1;
  uint64_t v3 = v0;
  swift_bridgeObjectRetain();
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  result.value._object = v5;
  result.value._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t sub_251D882FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

HomeDataModel::UmbrellaCategory_optional __swiftcall UmbrellaCategory.init(query:)(Swift::String query)
{
  unint64_t v2 = v1;
  result.value = UmbrellaCategory.init(rawValue:)(query).value;
  *unint64_t v2 = v4;
  return result;
}

HomeDataModel::UmbrellaCategory_optional sub_251D88340@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = UmbrellaCategory.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t static URLComponents.create(destination:secondary:queryItems:)(char *a1)
{
  uint64_t v1 = *a1;
  sub_251F34730();
  sub_251F34720();
  MEMORY[0x2533A9620](*(void *)&aAccessorcatego[8 * v1], *(void *)&aY[8 * v1]);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F34700();
  swift_bridgeObjectRetain();
  return sub_251F346A0();
}

char URLComponents.destination.getter@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_251F346D0();
  if (v3)
  {
    LOBYTE(v2) = DeepLinkDestination.init(rawValue:)(*(Swift::String *)&v2);
  }
  else
  {
    *a1 = 4;
  }
  return v2;
}

HomeDataModel::DeepLinkDestination::SecondaryDestination_optional URLComponents.secondary.getter@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_251F346F0();
  unint64_t v4 = v3;
  v16[0] = 47;
  v16[1] = 0xE100000000000000;
  void v15[2] = v16;
  swift_bridgeObjectRetain();
  char v5 = (void *)sub_251D88BC0(0x7FFFFFFFFFFFFFFFLL, 1, sub_251D89E84, (uint64_t)v15, v2, v4);
  swift_bridgeObjectRelease();
  if (v5[2])
  {
    uint64_t v6 = v5[4];
    uint64_t v7 = v5[5];
    uint64_t v8 = v5[6];
    uint64_t v9 = v5[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x2533AA6E0](v6, v7, v8, v9);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v13._uint64_t countAndFlagsBits = v10;
    v13._object = v12;
    return DeepLinkDestination.SecondaryDestination.init(rawValue:)(v13);
  }
  else
  {
    result.value = swift_bridgeObjectRelease();
    *a1 = 5;
  }
  return result;
}

uint64_t Collection<>.subscript.getter@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  char v7 = *a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3308);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned char v14[16] = v7;
  sub_251F35930();
  uint64_t v11 = sub_251F34690();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_251A1B064((uint64_t)v10, &qword_269BA3308);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a4, 1, 1, a2);
  }
  else
  {
    URLQueryItem.decodedValue<A>()(a2, a3, a4);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v10, v11);
  }
}

uint64_t sub_251D887E8(uint64_t a1, char a2)
{
  uint64_t v3 = sub_251F34670();
  unint64_t v5 = 0xE900000000000065;
  uint64_t v6 = 0x7475626972747461;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE800000000000000;
      if (v3 == 0x79726F6765746163) {
        goto LABEL_8;
      }
      goto LABEL_10;
    case 2:
      unint64_t v5 = 0xEA00000000007473;
      uint64_t v6 = 0x694C656369766564;
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xE600000000000000;
      if (v3 == 0x686372616573) {
        goto LABEL_8;
      }
      goto LABEL_10;
    default:
LABEL_5:
      if (v3 != v6) {
        goto LABEL_10;
      }
LABEL_8:
      if (v4 == v5)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      else
      {
LABEL_10:
        char v8 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v8 & 1;
      }
  }
}

uint64_t URL.deepLinkComponents()@<X0>(char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3310);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v5 = (char *)&v16 - v4;
  sub_251F346B0();
  uint64_t v6 = sub_251F34740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  sub_251D89EC0((uint64_t)&v16 - v4, (uint64_t)&v16 - v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))((char *)&v16 - v4, 1, v6) != 1)
  {
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v11(v10, (char *)&v16 - v4, v6);
    uint64_t v12 = sub_251F34710();
    if (v13)
    {
      if (v12 == 0xD000000000000016 && v13 == 0x8000000251F71660)
      {
        sub_251A1B064((uint64_t)&v16 - v4, &qword_269BA3310);
        swift_bridgeObjectRelease();
LABEL_9:
        v11(a1, v10, v6);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      char v14 = sub_251F36B10();
      sub_251A1B064((uint64_t)v5, &qword_269BA3310);
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_251A1B064((uint64_t)&v16 - v4, &qword_269BA3310);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, 1, 1, v6);
  }
  sub_251A1B064((uint64_t)&v16 - v4, &qword_269BA3310);
  sub_251A1B064((uint64_t)&v16 - v4, &qword_269BA3310);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, 1, 1, v6);
}

uint64_t sub_251D88BC0(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_251D89064(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_251F358B0();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_251F357D0();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_251F357D0();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_251F358C0();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_251F10E2C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_251F10E2C((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_251F357D0();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_251F358C0();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_251F10E2C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_251F10E2C((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    long long v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_251F36670();
  __break(1u);
LABEL_42:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251D89064(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_251F358C0();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_251F10E2C(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_251F10E2C((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    void v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    unsigned char v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251D891C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_251F35860();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x2533AA780](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

char *sub_251D8923C(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  void v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_251F52E00;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_251F34770() && __OFSUB__((int)v4, sub_251F347A0())) {
        goto LABEL_24;
      }
      sub_251F347B0();
      swift_allocObject();
      uint64_t v13 = sub_251F34750();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_251D89628((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_251F34B80();
      uint64_t result = sub_251D89628(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_251D89540@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_251D89768(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_251D8982C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_251D898A8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_251D895B8(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_251D89628(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_251F34770();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_251F347A0();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_251F34790();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_251D896DC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_251F36410();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_251D89768(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_251D8982C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_251F347B0();
  swift_allocObject();
  uint64_t result = sub_251F34760();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_251F34BC0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_251D898A8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_251F347B0();
  swift_allocObject();
  uint64_t result = sub_251F34760();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_251D8992C(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_251D89768(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_251D8982C((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_251D898A8((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_251D89990(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_251F347B0();
      swift_allocObject();
      sub_251F34780();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_251F34BC0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

unint64_t _sSa13HomeDataModel10Foundation4UUIDVRszlE5querySayADGSgSS_tcfC_0()
{
  uint64_t v0 = sub_251F34BB0();
  unint64_t v2 = v1;
  swift_bridgeObjectRelease();
  unint64_t v3 = 0;
  if (v2 >> 60 != 15)
  {
    uint64_t v4 = sub_251F35740();
    MEMORY[0x270FA5388](v4 - 8);
    sub_251F35730();
    uint64_t v5 = sub_251F35700();
    unint64_t v3 = v6;
    if (v6)
    {
      uint64_t v7 = v5;
      v42[0] = 44;
      v42[1] = 0xE100000000000000;
      MEMORY[0x270FA5388](v5);
      void v30[2] = v42;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_251D88BC0(0x7FFFFFFFFFFFFFFFLL, 1, sub_251D89E84, (uint64_t)v30, v7, v3);
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v32 = v0;
        unint64_t v33 = v2;
        uint64_t v37 = sub_251F34DA0();
        uint64_t v10 = *(void *)(*(void *)(v37 - 8) + 64);
        uint64_t v34 = *(void *)(v37 - 8);
        uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v34 + 32);
        uint64_t v36 = (unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        uint64_t v11 = swift_bridgeObjectRetain();
        uint64_t v31 = v8;
        uint64_t v12 = (uint64_t *)(v8 + 56);
        unint64_t v3 = MEMORY[0x263F8EE78];
        uint64_t v13 = &qword_26B21FF90;
        uint64_t v38 = v10;
        do
        {
          long long v40 = &v31;
          unint64_t v41 = v3;
          uint64_t v15 = *(v12 - 3);
          uint64_t v14 = *(v12 - 2);
          uint64_t v16 = *(v12 - 1);
          uint64_t v17 = *v12;
          MEMORY[0x270FA5388](v11);
          unint64_t v18 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(v13);
          unint64_t v39 = &v31;
          MEMORY[0x270FA5388](v19 - 8);
          uint64_t v21 = v13;
          uint64_t v22 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
          swift_bridgeObjectRetain();
          MEMORY[0x2533AA6E0](v15, v14, v16, v17);
          sub_251F34D30();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v23 = v37;
          if ((*v36)(v22, 1, v37) == 1)
          {
            uint64_t v11 = sub_251A1B064((uint64_t)v22, v21);
            unint64_t v3 = v41;
            uint64_t v13 = v21;
          }
          else
          {
            uint64_t v24 = *v35;
            uint64_t v25 = (*v35)((char *)&v31 - v18, v22, v23);
            MEMORY[0x270FA5388](v25);
            unint64_t v26 = (char *)&v31 - v18;
            v24((char *)&v31 - v18, (char *)&v31 - v18, v23);
            unint64_t v3 = v41;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v3 = sub_251F0F4DC(0, *(void *)(v3 + 16) + 1, 1, v3);
            }
            unint64_t v28 = *(void *)(v3 + 16);
            unint64_t v27 = *(void *)(v3 + 24);
            if (v28 >= v27 >> 1) {
              unint64_t v3 = sub_251F0F4DC(v27 > 1, v28 + 1, 1, v3);
            }
            *(void *)(v3 + 16) = v28 + 1;
            uint64_t v11 = v24((char *)(v3+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v28), v26, v23);
            uint64_t v13 = v21;
          }
          v12 += 4;
          --v9;
          uint64_t v10 = v38;
        }
        while (v9);
        swift_bridgeObjectRelease();
        uint64_t v0 = v32;
        unint64_t v2 = v33;
      }
      else
      {
        unint64_t v3 = MEMORY[0x263F8EE78];
      }
      sub_251D8A6C8(v0, v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_251D8A6C8(v0, v2);
    }
  }
  return v3;
}

uint64_t sub_251D89E84(void *a1)
{
  return sub_251D8A6FC(a1) & 1;
}

uint64_t sub_251D89EA0(uint64_t a1)
{
  return sub_251D887E8(a1, *(unsigned char *)(v1 + 16)) & 1;
}

uint64_t sub_251D89EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_251D89F2C()
{
  unint64_t result = qword_269BA3318;
  if (!qword_269BA3318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3318);
  }
  return result;
}

unint64_t sub_251D89F84()
{
  unint64_t result = qword_269BA3320;
  if (!qword_269BA3320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3320);
  }
  return result;
}

uint64_t sub_251D89FD8()
{
  return sub_251A1E590(&qword_269BA3328, &qword_269BA3330);
}

unint64_t sub_251D8A018()
{
  unint64_t result = qword_269BA3338;
  if (!qword_269BA3338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3338);
  }
  return result;
}

uint64_t sub_251D8A06C()
{
  return sub_251A1E590(&qword_269BA3340, &qword_269BA3348);
}

unint64_t sub_251D8A0AC()
{
  unint64_t result = qword_269BA3350;
  if (!qword_269BA3350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3350);
  }
  return result;
}

uint64_t sub_251D8A100()
{
  return sub_251A1E590(&qword_269BA3358, &qword_269BA3360);
}

unint64_t sub_251D8A140()
{
  unint64_t result = qword_269BA3368;
  if (!qword_269BA3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3368);
  }
  return result;
}

unint64_t sub_251D8A198()
{
  unint64_t result = qword_269BA3370;
  if (!qword_269BA3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3370);
  }
  return result;
}

unint64_t sub_251D8A1F0()
{
  unint64_t result = qword_269BA3378;
  if (!qword_269BA3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3378);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkURLGenerator()
{
  return &type metadata for DeepLinkURLGenerator;
}

ValueMetadata *type metadata accessor for DeepLinkURLGeneratorError()
{
  return &type metadata for DeepLinkURLGeneratorError;
}

ValueMetadata *type metadata accessor for NavigationConstants()
{
  return &type metadata for NavigationConstants;
}

ValueMetadata *type metadata accessor for DeepLinkDestination()
{
  return &type metadata for DeepLinkDestination;
}

unsigned char *storeEnumTagSinglePayload for DeepLinkDestination.SecondaryDestination(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D8A358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkDestination.SecondaryDestination()
{
  return &type metadata for DeepLinkDestination.SecondaryDestination;
}

unsigned char *_s13HomeDataModel25DeepLinkURLGeneratorErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D8A45CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkDestination.AcccessoryControlSecondaryDestination()
{
  return &type metadata for DeepLinkDestination.AcccessoryControlSecondaryDestination;
}

uint64_t dispatch thunk of DeepLinkCodable.init(query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of DeepLinkCodable.encode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unsigned char *_s13HomeDataModel19DeepLinkDestinationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D8A588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeDeepLinkKeys()
{
  return &type metadata for HomeDeepLinkKeys;
}

unint64_t sub_251D8A5C0()
{
  unint64_t result = qword_269BA3380;
  if (!qword_269BA3380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3380);
  }
  return result;
}

uint64_t sub_251D8A614()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251D8A64C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *sub_251D8A65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  unint64_t result = sub_251D895B8((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_251D8A6DC, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_251D8A6C8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_251A1AD94(a1, a2);
  }
  return a1;
}

uint64_t sub_251D8A6DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_251D896DC(a1, a2);
}

uint64_t sub_251D8A6FC(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_251F36B10() & 1;
  }
}

id sub_251D8A754()
{
  uint64_t v1 = sub_251D8AEC4();
  return objc_msgSend(v0, sel_setRecurrenceDays_, v1);
}

uint64_t TriggerRecurrenceWeekdays.description.getter()
{
  uint64_t v1 = *v0;
  if (qword_269B9C458 != -1) {
    swift_once();
  }
  if (v1 != qword_269BA3398)
  {
    if (qword_269B9C460 != -1) {
      swift_once();
    }
    if (v1 == qword_269BA33A0) {
      return 0x737961646B656577;
    }
    if (qword_269B9C468 != -1) {
      swift_once();
    }
    if (v1 == qword_269BA33A8) {
      return 0x7961647972657665;
    }
    if (v1)
    {
      uint64_t v3 = sub_251F0E8B8(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v4 = v3[2];
      unint64_t v5 = v3[3];
      unint64_t v6 = v4 + 1;
      if (v4 >= v5 >> 1)
      {
        unint64_t v28 = v3;
        unint64_t v29 = v3[2];
        uint64_t v30 = sub_251F0E8B8((void *)(v5 > 1), v4 + 1, 1, v28);
        unint64_t v4 = v29;
        uint64_t v3 = v30;
      }
      v3[2] = v6;
      uint64_t v7 = &v3[2 * v4];
      void v7[4] = 0x7961646E7573;
      void v7[5] = 0xE600000000000000;
      if ((v1 & 2) == 0)
      {
LABEL_24:
        if ((v1 & 4) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v3 = sub_251F0E8B8(0, v3[2] + 1, 1, v3);
          }
          unint64_t v13 = v3[2];
          unint64_t v12 = v3[3];
          if (v13 >= v12 >> 1) {
            uint64_t v3 = sub_251F0E8B8((void *)(v12 > 1), v13 + 1, 1, v3);
          }
          v3[2] = v13 + 1;
          uint64_t v14 = &v3[2 * v13];
          v14[4] = 0x79616473657574;
          v14[5] = 0xE700000000000000;
          if ((v1 & 8) == 0)
          {
LABEL_26:
            if ((v1 & 0x10) == 0) {
              goto LABEL_27;
            }
            goto LABEL_40;
          }
        }
        else if ((v1 & 8) == 0)
        {
          goto LABEL_26;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_251F0E8B8(0, v3[2] + 1, 1, v3);
        }
        unint64_t v16 = v3[2];
        unint64_t v15 = v3[3];
        if (v16 >= v15 >> 1) {
          uint64_t v3 = sub_251F0E8B8((void *)(v15 > 1), v16 + 1, 1, v3);
        }
        v3[2] = v16 + 1;
        uint64_t v17 = &v3[2 * v16];
        v17[4] = 0x616473656E646577;
        v17[5] = 0xE900000000000079;
        if ((v1 & 0x10) == 0)
        {
LABEL_27:
          if ((v1 & 0x20) == 0) {
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_40:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_251F0E8B8(0, v3[2] + 1, 1, v3);
        }
        unint64_t v19 = v3[2];
        unint64_t v18 = v3[3];
        if (v19 >= v18 >> 1) {
          uint64_t v3 = sub_251F0E8B8((void *)(v18 > 1), v19 + 1, 1, v3);
        }
        v3[2] = v19 + 1;
        uint64_t v20 = &v3[2 * v19];
        v20[4] = 0x7961647372756874;
        v20[5] = 0xE800000000000000;
        if ((v1 & 0x20) == 0)
        {
LABEL_28:
          if ((v1 & 0x40) == 0)
          {
LABEL_55:
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
            sub_251BFC684();
            uint64_t v2 = sub_251F35620();
            swift_bridgeObjectRelease();
            return v2;
          }
LABEL_50:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v3 = sub_251F0E8B8(0, v3[2] + 1, 1, v3);
          }
          unint64_t v25 = v3[2];
          unint64_t v24 = v3[3];
          if (v25 >= v24 >> 1) {
            uint64_t v3 = sub_251F0E8B8((void *)(v24 > 1), v25 + 1, 1, v3);
          }
          v3[2] = v25 + 1;
          unint64_t v26 = &v3[2 * v25];
          v26[4] = 0x7961647275746173;
          unsigned char v26[5] = 0xE800000000000000;
          goto LABEL_55;
        }
LABEL_45:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_251F0E8B8(0, v3[2] + 1, 1, v3);
        }
        unint64_t v22 = v3[2];
        unint64_t v21 = v3[3];
        if (v22 >= v21 >> 1) {
          uint64_t v3 = sub_251F0E8B8((void *)(v21 > 1), v22 + 1, 1, v3);
        }
        v3[2] = v22 + 1;
        uint64_t v23 = &v3[2 * v22];
        v23[4] = 0x796164697266;
        v23[5] = 0xE600000000000000;
        if ((v1 & 0x40) == 0) {
          goto LABEL_55;
        }
        goto LABEL_50;
      }
    }
    else
    {
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
      if ((v1 & 2) == 0) {
        goto LABEL_24;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_251F0E8B8(0, v3[2] + 1, 1, v3);
    }
    unint64_t v8 = v3[2];
    unint64_t v9 = v3[3];
    unint64_t v10 = v8 + 1;
    if (v8 >= v9 >> 1)
    {
      uint64_t v31 = v3;
      unint64_t v32 = v3[2];
      unint64_t v33 = sub_251F0E8B8((void *)(v9 > 1), v8 + 1, 1, v31);
      unint64_t v8 = v32;
      uint64_t v3 = v33;
    }
    v3[2] = v10;
    uint64_t v11 = &v3[2 * v8];
    long long v11[4] = 0x7961646E6F6DLL;
    v11[5] = 0xE600000000000000;
    goto LABEL_24;
  }
  return 0x646E656B656577;
}

uint64_t TriggerRecurrenceWeekdays.rawValue.getter()
{
  return *(void *)v0;
}

HomeDataModel::TriggerRecurrenceWeekdays __swiftcall TriggerRecurrenceWeekdays.init(rawValue:)(HomeDataModel::TriggerRecurrenceWeekdays rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static TriggerRecurrenceWeekdays.sunday.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static TriggerRecurrenceWeekdays.monday.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static TriggerRecurrenceWeekdays.tuesday.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static TriggerRecurrenceWeekdays.wednesday.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static TriggerRecurrenceWeekdays.thursday.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static TriggerRecurrenceWeekdays.friday.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static TriggerRecurrenceWeekdays.saturday.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void sub_251D8AD24()
{
  uint64_t v0 = unk_27025FDC0;
  if ((unk_27025FDC0 & ~qword_27025FDB8) == 0) {
    uint64_t v0 = 0;
  }
  qword_269BA3398 = v0 | qword_27025FDB8;
}

void *static TriggerRecurrenceWeekdays.weekend.getter@<X0>(void *a1@<X8>)
{
  return sub_251D8AE70(&qword_269B9C458, &qword_269BA3398, a1);
}

void sub_251D8AD6C()
{
  uint64_t v0 = unk_27025FDF0;
  if ((unk_27025FDF0 & ~qword_27025FDE8) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = v0 | qword_27025FDE8;
  uint64_t v2 = qword_27025FDF8;
  if ((qword_27025FDF8 & ~v1) == 0) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | v1;
  if ((unk_27025FE00 & ~v3) != 0) {
    uint64_t v4 = unk_27025FE00;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v4 | v3;
  uint64_t v6 = qword_27025FE08;
  if ((qword_27025FE08 & ~v5) == 0) {
    uint64_t v6 = 0;
  }
  qword_269BA33A0 = v6 | v5;
}

void *static TriggerRecurrenceWeekdays.weekdays.getter@<X0>(void *a1@<X8>)
{
  return sub_251D8AE70(&qword_269B9C460, &qword_269BA33A0, a1);
}

void sub_251D8ADE0()
{
  uint64_t v0 = unk_27025FE38;
  if ((unk_27025FE38 & ~qword_27025FE30) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = v0 | qword_27025FE30;
  uint64_t v2 = qword_27025FE40;
  if ((qword_27025FE40 & ~v1) == 0) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | v1;
  if ((unk_27025FE48 & ~v3) != 0) {
    uint64_t v4 = unk_27025FE48;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v4 | v3;
  uint64_t v6 = qword_27025FE50;
  if ((qword_27025FE50 & ~v5) == 0) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v6 | v5;
  if ((unk_27025FE58 & ~v7) != 0) {
    uint64_t v8 = unk_27025FE58;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | v7;
  uint64_t v10 = qword_27025FE60;
  if ((qword_27025FE60 & ~v9) == 0) {
    uint64_t v10 = 0;
  }
  qword_269BA33A8 = v10 | v9;
}

void *static TriggerRecurrenceWeekdays.all.getter@<X0>(void *a1@<X8>)
{
  return sub_251D8AE70(&qword_269B9C468, &qword_269BA33A8, a1);
}

void *sub_251D8AE70@<X0>(void *result@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*result != -1) {
    unint64_t result = (void *)swift_once();
  }
  *a3 = *a2;
  return result;
}

uint64_t sub_251D8AEB8@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = result & 0x7F;
  return result;
}

uint64_t sub_251D8AEC4()
{
  uint64_t v1 = *v0;
  if ((*v0 & 2) != 0)
  {
    if ((v1 & 4) != 0)
    {
      uint64_t result = 6;
      if ((v1 & 8) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t result = 2;
      if ((v1 & 8) == 0)
      {
        if ((v1 & 0x10) == 0) {
          goto LABEL_9;
        }
        goto LABEL_22;
      }
    }
    goto LABEL_16;
  }
  if ((v1 & 4) != 0)
  {
    uint64_t result = 4;
    if ((v1 & 8) == 0)
    {
LABEL_17:
      if ((v1 & 0x10) == 0)
      {
        if ((v1 & 0x20) != 0) {
          goto LABEL_23;
        }
        goto LABEL_19;
      }
LABEL_22:
      result |= 0x10uLL;
      if ((v1 & 0x20) != 0) {
        goto LABEL_23;
      }
LABEL_19:
      if ((v1 & 0x40) != 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
LABEL_16:
    result |= 8uLL;
    goto LABEL_17;
  }
  uint64_t result = 0;
  if ((v1 & 8) != 0) {
    goto LABEL_16;
  }
  if ((v1 & 0x10) != 0) {
    goto LABEL_22;
  }
LABEL_9:
  if ((v1 & 0x20) == 0)
  {
    if ((v1 & 0x40) == 0)
    {
      if ((v1 & 1) == 0) {
        return result;
      }
      return result | 1;
    }
    goto LABEL_24;
  }
LABEL_23:
  result |= 0x20uLL;
  if ((v1 & 0x40) != 0)
  {
LABEL_24:
    result |= 0x40uLL;
    if ((v1 & 1) == 0) {
      return result;
    }
LABEL_25:
    if (result) {
      return result;
    }
    return result | 1;
  }
LABEL_20:
  if (v1) {
    goto LABEL_25;
  }
  return result;
}

unint64_t sub_251D8AF58()
{
  unint64_t result = qword_269BA33B0;
  if (!qword_269BA33B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA33B0);
  }
  return result;
}

unint64_t sub_251D8AFB0()
{
  unint64_t result = qword_269BA33B8;
  if (!qword_269BA33B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA33B8);
  }
  return result;
}

unint64_t sub_251D8B008()
{
  unint64_t result = qword_269BA33C0;
  if (!qword_269BA33C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA33C0);
  }
  return result;
}

unint64_t sub_251D8B060()
{
  unint64_t result = qword_269BA33C8;
  if (!qword_269BA33C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA33C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerRecurrenceWeekdays()
{
  return &type metadata for TriggerRecurrenceWeekdays;
}

uint64_t StaticServiceGroup.toggle(options:context:)(uint64_t a1, void *a2, _OWORD *a3)
{
  *(void *)(v4 + 960) = v3;
  *(void *)(v4 + 952) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  *(void *)(v4 + 968) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  *(void *)(v4 + 976) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StaticService();
  *(void *)(v4 + 984) = v7;
  *(void *)(v4 + 992) = *(void *)(v7 - 8);
  *(void *)(v4 + 1000) = swift_task_alloc();
  *(void *)(v4 + 1008) = swift_task_alloc();
  *(void *)(v4 + 1016) = swift_task_alloc();
  *(void *)(v4 + 1024) = swift_task_alloc();
  *(void *)(v4 + 1032) = swift_task_alloc();
  *(void *)(v4 + 1040) = *a2;
  long long v8 = a3[1];
  *(_OWORD *)(v4 + 1048) = *a3;
  *(_OWORD *)(v4 + 1064) = v8;
  return MEMORY[0x270FA2498](sub_251D8B240, 0, 0);
}

uint64_t sub_251D8B240()
{
  uint64_t v147 = v0;
  type metadata accessor for StaticServiceGroup();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_251EDC188(v1);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_251A9147C(v2);
  swift_bridgeObjectRelease();
  uint64_t v145 = v3;
  sub_251D8DA14(&v145);
  swift_bridgeObjectRelease();
  if (v145[2])
  {
    uint64_t v4 = *(unsigned __int8 *)(*(void *)(v0 + 992) + 80);
    sub_251BB1974((uint64_t)v145 + ((v4 + 32) & ~v4), *(void *)(v0 + 976), (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = *(void *)(v0 + 992);
  uint64_t v7 = *(void *)(v0 + 984);
  uint64_t v8 = *(void *)(v0 + 976);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, v5, 1, v7);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 952);
    sub_251A1B064(*(void *)(v0 + 976), qword_26B21EE20);
LABEL_51:
    uint64_t v81 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v9, 1, 1, v81);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v82 = *(uint64_t (**)(void))(v0 + 8);
    return v82();
  }
  sub_251D8DABC(*(void *)(v0 + 976), *(void *)(v0 + 1032));
  BOOL v10 = StaticService.canBeToggled.getter();
  uint64_t v11 = *(void *)(v0 + 1032);
  if (!v10)
  {
LABEL_50:
    uint64_t v9 = *(void *)(v0 + 952);
    sub_251D8DB20(v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_51;
  }
  int v12 = *(unsigned __int8 *)(v11 + *(int *)(*(void *)(v0 + 984) + 88));
  LOBYTE(v145) = *(unsigned char *)(v11 + *(int *)(*(void *)(v0 + 984) + 88));
  ServiceKind.togglingCharacteristicKind.getter(v146);
  char v13 = v146[0];
  if (v146[0] == 174
    || (LOBYTE(v145) = v146[0], StaticServiceGroup.BOOL(for:)((HomeDataModel::CharacteristicKind)&v145).value == 2))
  {
    switch(v12)
    {
      case 14:
      case 51:
      case 52:
        uint64_t v14 = swift_bridgeObjectRetain();
        sub_251EDC188(v14);
        uint64_t v15 = swift_bridgeObjectRetain();
        unint64_t v16 = (void *)sub_251A9147C(v15);
        swift_bridgeObjectRelease();
        uint64_t v145 = v16;
        sub_251D8DA14(&v145);
        swift_bridgeObjectRelease();
        uint64_t v17 = v145[2];
        if (v17)
        {
          uint64_t v18 = *(void *)(v0 + 992);
          uint64_t v19 = *(void *)(v0 + 984);
          uint64_t v20 = (char *)v145
              + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
          uint64_t v21 = *(void *)(v18 + 72);
          swift_retain();
          uint64_t v22 = 0;
          do
          {
            uint64_t v23 = *(void *)(v0 + 1024);
            sub_251BB1974((uint64_t)v20, v23, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v145 = *(void **)(v23 + *(int *)(v19 + 112));
            v146[0] = -98;
            Swift::Int_optional v149 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v146);
            if (v149.is_nil) {
              Swift::Int value = 0;
            }
            else {
              Swift::Int value = v149.value;
            }
            if (value > v22) {
              uint64_t v22 = value;
            }
            sub_251D8DB20(v23, (uint64_t (*)(void))type metadata accessor for StaticService);
            v20 += v21;
            --v17;
          }
          while (v17);
          swift_release_n();
          double v25 = 100.0;
          if (v22 > 0) {
            double v25 = 0.0;
          }
        }
        else
        {
          swift_release();
          double v25 = 100.0;
        }
        int v65 = (uint64_t *)(v0 + 912);
        uint64_t v66 = (_OWORD *)(v0 + 632);
        uint64_t v67 = *(void *)(v0 + 1072);
        uint64_t v68 = *(void *)(v0 + 1064);
        long long v138 = *(_OWORD *)(v0 + 1048);
        uint64_t v69 = *(void *)(v0 + 1040);
        *(void *)(v0 + 784) = MEMORY[0x263F8D538];
        *(double *)(v0 + 760) = v25;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
        uint64_t v70 = swift_allocObject();
        *(_OWORD *)(v70 + 16) = xmmword_251F38650;
        *(unsigned char *)(v70 + 32) = -98;
        sub_251A0D51C(v0 + 760, v70 + 40);
        unint64_t v71 = sub_2519FA2DC(v70);
        *(void *)(v0 + 1096) = v71;
        *(void *)(v0 + 912) = v69;
        *(_OWORD *)(v0 + 632) = v138;
        *(void *)(v0 + 648) = v68;
        *(void *)(v0 + 656) = v67;
        uint64_t v72 = (void *)swift_task_alloc();
        *(void *)(v0 + 1104) = v72;
        *uint64_t v72 = v0;
        uint64_t v73 = sub_251D8C5C4;
        goto LABEL_41;
      case 19:
        uint64_t v35 = swift_bridgeObjectRetain();
        sub_251EDC188(v35);
        uint64_t v36 = swift_bridgeObjectRetain();
        uint64_t v37 = (void *)sub_251A9147C(v36);
        swift_bridgeObjectRelease();
        uint64_t v145 = v37;
        sub_251D8DA14(&v145);
        swift_bridgeObjectRelease();
        uint64_t v38 = v145[2];
        if (!v38)
        {
          swift_release();
          goto LABEL_70;
        }
        uint64_t v39 = *(void *)(v0 + 992);
        uint64_t v40 = *(void *)(v0 + 984);
        unint64_t v41 = (char *)v145
            + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
        uint64_t v42 = *(void *)(v39 + 72);
        swift_retain();
        while (1)
        {
          uint64_t v43 = *(void *)(v0 + 1016);
          sub_251BB1974((uint64_t)v41, v43, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v145 = *(void **)(v43 + *(int *)(v40 + 112));
          v146[0] = -107;
          Swift::Int_optional v150 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v146);
          Swift::Int v44 = v150.value;
          uint64_t v45 = *(void *)(v0 + 1016);
          if (v150.is_nil) {
            break;
          }
          sub_251D8DB20(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v44 != 1) {
            goto LABEL_74;
          }
          v41 += v42;
          if (!--v38)
          {
            swift_release_n();
LABEL_70:
            int v65 = (uint64_t *)(v0 + 888);
            uint64_t v66 = (_OWORD *)(v0 + 792);
            uint64_t v95 = *(void *)(v0 + 1072);
            uint64_t v96 = *(void *)(v0 + 1064);
            long long v139 = *(_OWORD *)(v0 + 1048);
            uint64_t v97 = *(void *)(v0 + 1040);
            *(void *)(v0 + 880) = MEMORY[0x263F8D6C8];
            *(void *)(v0 + 856) = 0;
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
            uint64_t v98 = swift_allocObject();
            *(_OWORD *)(v98 + 16) = xmmword_251F38650;
            *(unsigned char *)(v98 + 32) = -107;
            sub_251A0D51C(v0 + 856, v98 + 40);
            unint64_t v71 = sub_2519FA2DC(v98);
            *(void *)(v0 + 1112) = v71;
            *(void *)(v0 + 888) = v97;
            *(_OWORD *)(v0 + 792) = v139;
            *(void *)(v0 + 808) = v96;
            *(void *)(v0 + 816) = v95;
            uint64_t v72 = (void *)swift_task_alloc();
            *(void *)(v0 + 1120) = v72;
            *uint64_t v72 = v0;
            uint64_t v73 = sub_251D8C6E8;
            goto LABEL_41;
          }
        }
        sub_251D8DB20(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_74:
        uint64_t v103 = (uint64_t *)(v0 + 896);
        uint64_t v104 = (_OWORD *)(v0 + 824);
        uint64_t v105 = *(void *)(v0 + 1072);
        uint64_t v106 = *(void *)(v0 + 1064);
        long long v141 = *(_OWORD *)(v0 + 1048);
        uint64_t v107 = *(void *)(v0 + 1040);
        swift_release_n();
        *(void *)(v0 + 752) = MEMORY[0x263F8D6C8];
        *(void *)(v0 + 728) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_251F38650;
        *(unsigned char *)(inited + 32) = -107;
        sub_251A0D51C(v0 + 728, inited + 40);
        unint64_t v109 = sub_2519FA2DC(inited);
        *(void *)(v0 + 1128) = v109;
        *(void *)(v0 + 896) = v107;
        *(_OWORD *)(v0 + 824) = v141;
        *(void *)(v0 + 840) = v106;
        *(void *)(v0 + 848) = v105;
        uint64_t v110 = (void *)swift_task_alloc();
        *(void *)(v0 + 1136) = v110;
        void *v110 = v0;
        char v111 = sub_251D8C80C;
        goto LABEL_77;
      case 30:
        uint64_t v46 = swift_bridgeObjectRetain();
        sub_251EDC188(v46);
        uint64_t v47 = swift_bridgeObjectRetain();
        unint64_t v48 = (void *)sub_251A9147C(v47);
        swift_bridgeObjectRelease();
        uint64_t v145 = v48;
        sub_251D8DA14(&v145);
        swift_bridgeObjectRelease();
        uint64_t v49 = v145[2];
        if (!v49)
        {
          swift_release();
          goto LABEL_72;
        }
        uint64_t v50 = *(void *)(v0 + 992);
        uint64_t v51 = *(void *)(v0 + 984);
        uint64_t v52 = (char *)v145
            + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
        uint64_t v53 = *(void *)(v50 + 72);
        swift_retain();
        while (1)
        {
          uint64_t v54 = *(void *)(v0 + 1008);
          sub_251BB1974((uint64_t)v52, v54, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v145 = *(void **)(v54 + *(int *)(v51 + 112));
          v146[0] = -100;
          Swift::Int_optional v151 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v146);
          Swift::Int v55 = v151.value;
          uint64_t v56 = *(void *)(v0 + 1008);
          if (v151.is_nil) {
            break;
          }
          sub_251D8DB20(v56, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v55 != 1) {
            goto LABEL_76;
          }
          v52 += v53;
          if (!--v49)
          {
            swift_release_n();
LABEL_72:
            int v65 = (uint64_t *)(v0 + 944);
            uint64_t v66 = (_OWORD *)(v0 + 696);
            uint64_t v99 = *(void *)(v0 + 1072);
            uint64_t v100 = *(void *)(v0 + 1064);
            long long v140 = *(_OWORD *)(v0 + 1048);
            uint64_t v101 = *(void *)(v0 + 1040);
            *(void *)(v0 + 624) = MEMORY[0x263F8D6C8];
            *(void *)(v0 + 600) = 0;
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
            uint64_t v102 = swift_initStackObject();
            *(_OWORD *)(v102 + 16) = xmmword_251F38650;
            *(unsigned char *)(v102 + 32) = -100;
            sub_251A0D51C(v0 + 600, v102 + 40);
            unint64_t v71 = sub_2519FA2DC(v102);
            *(void *)(v0 + 1144) = v71;
            *(void *)(v0 + 944) = v101;
            *(_OWORD *)(v0 + 696) = v140;
            *(void *)(v0 + 712) = v100;
            *(void *)(v0 + 720) = v99;
            uint64_t v72 = (void *)swift_task_alloc();
            *(void *)(v0 + 1152) = v72;
            *uint64_t v72 = v0;
            uint64_t v73 = sub_251D8C930;
            goto LABEL_41;
          }
        }
        sub_251D8DB20(v56, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_76:
        uint64_t v103 = (uint64_t *)(v0 + 928);
        uint64_t v104 = (_OWORD *)(v0 + 568);
        uint64_t v112 = *(void *)(v0 + 1072);
        uint64_t v113 = *(void *)(v0 + 1064);
        long long v142 = *(_OWORD *)(v0 + 1048);
        uint64_t v114 = *(void *)(v0 + 1040);
        swift_release_n();
        *(void *)(v0 + 496) = MEMORY[0x263F8D6C8];
        *(void *)(v0 + 472) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
        uint64_t v115 = swift_initStackObject();
        *(_OWORD *)(v115 + 16) = xmmword_251F38650;
        *(unsigned char *)(v115 + 32) = -100;
        sub_251A0D51C(v0 + 472, v115 + 40);
        unint64_t v109 = sub_2519FA2DC(v115);
        *(void *)(v0 + 1160) = v109;
        *(void *)(v0 + 928) = v114;
        *(_OWORD *)(v0 + 568) = v142;
        *(void *)(v0 + 584) = v113;
        *(void *)(v0 + 592) = v112;
        uint64_t v110 = (void *)swift_task_alloc();
        *(void *)(v0 + 1168) = v110;
        void *v110 = v0;
        char v111 = sub_251D8CB28;
        goto LABEL_77;
      case 35:
        uint64_t v57 = *(void *)(v0 + 984);
        uint64_t v58 = *(void *)(*(void *)(v0 + 1032) + *(int *)(v57 + 112));
        if (!*(void *)(v58 + 16))
        {
          uint64_t v78 = *(void *)(v0 + 968);
          uint64_t v79 = type metadata accessor for StaticCharacteristic();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 1, 1, v79);
LABEL_48:
          sub_251A1B064(*(void *)(v0 + 968), &qword_26B21F108);
LABEL_49:
          uint64_t v11 = *(void *)(v0 + 1032);
          goto LABEL_50;
        }
        swift_bridgeObjectRetain();
        unint64_t v59 = sub_2519FE568(160);
        uint64_t v60 = *(void *)(v0 + 968);
        uint64_t v137 = v57;
        if (v61)
        {
          unint64_t v62 = v59;
          uint64_t v135 = *(void *)(v58 + 56);
          uint64_t v63 = type metadata accessor for StaticCharacteristic();
          uint64_t v64 = *(void *)(v63 - 8);
          sub_251BB1974(v135 + *(void *)(v64 + 72) * v62, v60, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v60, 0, 1, v63);
        }
        else
        {
          uint64_t v63 = type metadata accessor for StaticCharacteristic();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v60, 1, 1, v63);
        }
        uint64_t v80 = *(void *)(v0 + 968);
        swift_bridgeObjectRelease();
        type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v80, 1, v63) == 1) {
          goto LABEL_48;
        }
        uint64_t v83 = *(void *)(v0 + 968);
        unint64_t v84 = (uint64_t *)(v83 + *(int *)(v63 + 44));
        uint64_t v85 = *v84;
        uint64_t v86 = v84[1];
        uint64_t v87 = v84[2];
        unint64_t v88 = v84[3];
        uint64_t v89 = v84[4];
        sub_251A11E3C(*v84, v86, v87, v88);
        sub_251D8DB20(v83, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        if (v88 >> 8 == 0xFFFFFFFF) {
          goto LABEL_49;
        }
        if (v88 >> 62)
        {
          sub_251A11E60(v85, v86, v87, v88);
          goto LABEL_49;
        }
        if (!v89)
        {
          if (v87 <= 1) {
            uint64_t v90 = 1;
          }
          else {
            uint64_t v90 = v87;
          }
          uint64_t v89 = sub_251A1815C(v86, v85, v90);
        }
        uint64_t v91 = *(void *)(v89 + 16);
        if (!v91) {
          goto LABEL_68;
        }
        uint64_t v92 = *(void *)(v89 + 32);
        if (v92 == 3)
        {
          if (v91 == 1)
          {
LABEL_68:
            swift_bridgeObjectRelease();
            goto LABEL_49;
          }
          uint64_t v93 = 5;
          while (1)
          {
            uint64_t v94 = v93 - 3;
            if (__OFADD__(v93 - 4, 1))
            {
              __break(1u);
              JUMPOUT(0x251D8C404);
            }
            uint64_t v92 = *(void *)(v89 + 8 * v93);
            if (v92 != 3) {
              break;
            }
            ++v93;
            if (v94 == v91) {
              goto LABEL_68;
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v116 = swift_bridgeObjectRetain();
        sub_251EDC188(v116);
        uint64_t v117 = swift_bridgeObjectRetain();
        uint64_t v118 = (void *)sub_251A9147C(v117);
        swift_bridgeObjectRelease();
        uint64_t v145 = v118;
        sub_251D8DA14(&v145);
        swift_bridgeObjectRelease();
        uint64_t v119 = v145[2];
        if (v119)
        {
          uint64_t v120 = *(void *)(v0 + 992);
          uint64_t v121 = (char *)v145
               + ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80));
          uint64_t v122 = *(void *)(v120 + 72);
          swift_retain();
          while (1)
          {
            uint64_t v123 = *(void *)(v0 + 1000);
            sub_251BB1974((uint64_t)v121, v123, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v145 = *(void **)(v123 + *(int *)(v137 + 112));
            v146[0] = -96;
            Swift::Int_optional v152 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v146);
            Swift::Int v124 = v152.value;
            uint64_t v125 = *(void *)(v0 + 1000);
            if (v152.is_nil) {
              break;
            }
            sub_251D8DB20(v125, (uint64_t (*)(void))type metadata accessor for StaticService);
            if (v124 != 3) {
              goto LABEL_88;
            }
            v121 += v122;
            if (!--v119)
            {
              swift_release_n();
              goto LABEL_86;
            }
          }
          sub_251D8DB20(v125, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_88:
          uint64_t v103 = (uint64_t *)(v0 + 920);
          uint64_t v104 = (_OWORD *)(v0 + 504);
          uint64_t v130 = *(void *)(v0 + 1072);
          uint64_t v131 = *(void *)(v0 + 1064);
          long long v144 = *(_OWORD *)(v0 + 1048);
          uint64_t v132 = *(void *)(v0 + 1040);
          swift_release_n();
          *(void *)(v0 + 432) = MEMORY[0x263F8D6C8];
          *(void *)(v0 + 408) = 3;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
          uint64_t v133 = swift_initStackObject();
          *(_OWORD *)(v133 + 16) = xmmword_251F38650;
          *(unsigned char *)(v133 + 32) = -96;
          sub_251A0D51C(v0 + 408, v133 + 40);
          unint64_t v109 = sub_2519FA2DC(v133);
          *(void *)(v0 + 1192) = v109;
          *(void *)(v0 + 920) = v132;
          *(_OWORD *)(v0 + 504) = v144;
          *(void *)(v0 + 520) = v131;
          *(void *)(v0 + 528) = v130;
          uint64_t v110 = (void *)swift_task_alloc();
          *(void *)(v0 + 1200) = v110;
          void *v110 = v0;
          char v111 = sub_251D8CD70;
LABEL_77:
          v110[1] = v111;
          uint64_t v74 = *(void *)(v0 + 952);
          uint64_t v75 = v109;
          uint64_t v76 = v103;
          uint64_t v77 = v104;
        }
        else
        {
          swift_release();
LABEL_86:
          int v65 = (uint64_t *)(v0 + 904);
          uint64_t v66 = (_OWORD *)(v0 + 440);
          uint64_t v126 = *(void *)(v0 + 1072);
          uint64_t v127 = *(void *)(v0 + 1064);
          long long v143 = *(_OWORD *)(v0 + 1048);
          uint64_t v128 = *(void *)(v0 + 1040);
          *(void *)(v0 + 400) = MEMORY[0x263F8D6C8];
          *(void *)(v0 + 376) = v92;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
          uint64_t v129 = swift_initStackObject();
          *(_OWORD *)(v129 + 16) = xmmword_251F38650;
          *(unsigned char *)(v129 + 32) = -96;
          sub_251A0D51C(v0 + 376, v129 + 40);
          unint64_t v71 = sub_2519FA2DC(v129);
          *(void *)(v0 + 1176) = v71;
          *(void *)(v0 + 904) = v128;
          *(_OWORD *)(v0 + 440) = v143;
          *(void *)(v0 + 456) = v127;
          *(void *)(v0 + 464) = v126;
          uint64_t v72 = (void *)swift_task_alloc();
          *(void *)(v0 + 1184) = v72;
          *uint64_t v72 = v0;
          uint64_t v73 = sub_251D8CC4C;
LABEL_41:
          v72[1] = v73;
          uint64_t v74 = *(void *)(v0 + 952);
          uint64_t v75 = v71;
          uint64_t v76 = v65;
          uint64_t v77 = v66;
        }
        uint64_t result = StaticServiceGroup.set(for:options:context:)(v74, v75, v76, v77);
        break;
      default:
        goto LABEL_49;
    }
  }
  else
  {
    uint64_t v26 = *(void *)(v0 + 1072);
    uint64_t v27 = *(void *)(v0 + 1064);
    long long v136 = *(_OWORD *)(v0 + 1048);
    uint64_t v28 = *(void *)(v0 + 1040);
    BOOL v29 = StaticServiceGroup.isActivated.getter();
    *(void *)(v0 + 560) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(v0 + 536) = !v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_251F38650;
    *(unsigned char *)(v30 + 32) = v13;
    sub_251A0D51C(v0 + 536, v30 + 40);
    unint64_t v31 = sub_2519FA2DC(v30);
    *(void *)(v0 + 1080) = v31;
    *(void *)(v0 + 936) = v28;
    *(_OWORD *)(v0 + 664) = v136;
    *(void *)(v0 + 680) = v27;
    *(void *)(v0 + 688) = v26;
    uint64_t v32 = swift_task_alloc();
    *(void *)(v0 + 1088) = v32;
    *(void *)uint64_t v32 = v0;
    *(void *)(v32 + 8) = sub_251D8C4A0;
    uint64_t v33 = *(void *)(v0 + 960);
    uint64_t v34 = *(void *)(v0 + 952);
    *(void *)(v32 + 392) = v31;
    *(void *)(v32 + 400) = v33;
    *(void *)(v32 + 384) = v34;
    *(void *)(v32 + 408) = *(void *)(v0 + 936);
    *(_OWORD *)(v32 + 416) = *(_OWORD *)(v0 + 664);
    *(_OWORD *)(v32 + 432) = *(_OWORD *)(v0 + 680);
    return MEMORY[0x270FA2498](sub_251D8D040, 0, 0);
  }
  return result;
}