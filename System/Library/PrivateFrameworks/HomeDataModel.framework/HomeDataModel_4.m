unint64_t sub_251C47B30()
{
  unint64_t result;

  result = qword_269BA0CC0;
  if (!qword_269BA0CC0)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CC0);
  }
  return result;
}

unint64_t sub_251C47B88()
{
  unint64_t result = qword_269BA0CC8;
  if (!qword_269BA0CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CC8);
  }
  return result;
}

unint64_t sub_251C47BE0()
{
  unint64_t result = qword_269BA0CD0;
  if (!qword_269BA0CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CD0);
  }
  return result;
}

unint64_t sub_251C47C38()
{
  unint64_t result = qword_269BA0CD8;
  if (!qword_269BA0CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CD8);
  }
  return result;
}

unint64_t sub_251C47C90()
{
  unint64_t result = qword_269BA0CE0;
  if (!qword_269BA0CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CE0);
  }
  return result;
}

unint64_t sub_251C47CE8()
{
  unint64_t result = qword_269BA0CE8;
  if (!qword_269BA0CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CE8);
  }
  return result;
}

unint64_t sub_251C47D40()
{
  unint64_t result = qword_269BA0CF0;
  if (!qword_269BA0CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CF0);
  }
  return result;
}

unint64_t sub_251C47D98()
{
  unint64_t result = qword_269BA0CF8;
  if (!qword_269BA0CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CF8);
  }
  return result;
}

unint64_t sub_251C47DF0()
{
  unint64_t result = qword_269BA0D00;
  if (!qword_269BA0D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D00);
  }
  return result;
}

unint64_t sub_251C47E48()
{
  unint64_t result = qword_269BA0D08;
  if (!qword_269BA0D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D08);
  }
  return result;
}

unint64_t sub_251C47EA0()
{
  unint64_t result = qword_269BA0D10;
  if (!qword_269BA0D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D10);
  }
  return result;
}

unint64_t sub_251C47EF8()
{
  unint64_t result = qword_269BA0D18;
  if (!qword_269BA0D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D18);
  }
  return result;
}

unint64_t sub_251C47F50()
{
  unint64_t result = qword_269BA0D20;
  if (!qword_269BA0D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D20);
  }
  return result;
}

unint64_t sub_251C47FA8()
{
  unint64_t result = qword_269BA0D28;
  if (!qword_269BA0D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D28);
  }
  return result;
}

unint64_t sub_251C48000()
{
  unint64_t result = qword_269BA0D30;
  if (!qword_269BA0D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D30);
  }
  return result;
}

unint64_t sub_251C48058()
{
  unint64_t result = qword_269BA0D38;
  if (!qword_269BA0D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D38);
  }
  return result;
}

unint64_t sub_251C480B0()
{
  unint64_t result = qword_269BA0D40;
  if (!qword_269BA0D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D40);
  }
  return result;
}

unint64_t sub_251C48108()
{
  unint64_t result = qword_269BA0D48;
  if (!qword_269BA0D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D48);
  }
  return result;
}

unint64_t sub_251C48160()
{
  unint64_t result = qword_269BA0D50;
  if (!qword_269BA0D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D50);
  }
  return result;
}

unint64_t sub_251C481B8()
{
  unint64_t result = qword_269BA0D58;
  if (!qword_269BA0D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D58);
  }
  return result;
}

unint64_t sub_251C48210()
{
  unint64_t result = qword_269BA0D60;
  if (!qword_269BA0D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D60);
  }
  return result;
}

unint64_t sub_251C48268()
{
  unint64_t result = qword_269BA0D68;
  if (!qword_269BA0D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D68);
  }
  return result;
}

unint64_t sub_251C482C0()
{
  unint64_t result = qword_269BA0D70;
  if (!qword_269BA0D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D70);
  }
  return result;
}

unint64_t sub_251C48318()
{
  unint64_t result = qword_269BA0D78;
  if (!qword_269BA0D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D78);
  }
  return result;
}

unint64_t sub_251C48370()
{
  unint64_t result = qword_269BA0D80;
  if (!qword_269BA0D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D80);
  }
  return result;
}

unint64_t sub_251C483C8()
{
  unint64_t result = qword_269BA0D88;
  if (!qword_269BA0D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D88);
  }
  return result;
}

unint64_t sub_251C48420()
{
  unint64_t result = qword_269BA0D90;
  if (!qword_269BA0D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D90);
  }
  return result;
}

unint64_t sub_251C48478()
{
  unint64_t result = qword_269BA0D98;
  if (!qword_269BA0D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0D98);
  }
  return result;
}

unint64_t sub_251C484D0()
{
  unint64_t result = qword_269BA0DA0;
  if (!qword_269BA0DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0DA0);
  }
  return result;
}

unint64_t sub_251C48528()
{
  unint64_t result = qword_269BA0DA8;
  if (!qword_269BA0DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0DA8);
  }
  return result;
}

unint64_t sub_251C48580()
{
  unint64_t result = qword_269BA0DB0;
  if (!qword_269BA0DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0DB0);
  }
  return result;
}

unint64_t sub_251C485D8()
{
  unint64_t result = qword_269BA0DB8;
  if (!qword_269BA0DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0DB8);
  }
  return result;
}

uint64_t sub_251C4862C(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v4 - 8);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128(a1, (uint64_t)v6, &qword_26B21F120);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_26B21F120);
    return 0;
  }
  sub_251C42108((uint64_t)v6, (uint64_t)v10, type metadata accessor for StaticSoftwareUpdate);
  sub_251C40BA4(&v17);
  if (v17 == 8)
  {
LABEL_5:
    sub_251C37530((uint64_t)v10, type metadata accessor for StaticSoftwareUpdate);
    return 0;
  }
  switch(v17)
  {
    case 2:
    case 7:
      goto LABEL_5;
    case 3:
    case 5:
      if (a2)
      {
        uint64_t v13 = 0xD00000000000002FLL;
        v14 = "HFMediaAccessoryStateDescriptionUpdateAvailable";
LABEL_14:
        unint64_t v15 = (unint64_t)(v14 - 32) | 0x8000000000000000;
LABEL_15:
        uint64_t v11 = static String.hfLocalized(_:)(v13, v15);
      }
      else
      {
        uint64_t v11 = 0;
      }
      sub_251C37530((uint64_t)v10, type metadata accessor for StaticSoftwareUpdate);
      break;
    case 4:
      uint64_t v13 = 0xD000000000000026;
      v14 = "HFFirmwareUpdateDownloadingDescription";
      goto LABEL_14;
    case 6:
      unint64_t v15 = 0x8000000251F6ED10;
      uint64_t v13 = 0xD000000000000019;
      goto LABEL_15;
    default:
      uint64_t v13 = 0xD000000000000025;
      v14 = "HFFirmwareUpdateInstallingDescription";
      goto LABEL_14;
  }
  return v11;
}

uint64_t sub_251C488C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251C48990(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x4E657361656C6572 && a2 == 0xEB0000000065746FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEB00000000657461 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x536E6F6973726576 && a2 == 0xED0000676E697274 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F6EC40)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251C48B90(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000251F6EC60 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7964616572 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251C48C78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617453326868 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F6EC80)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251C48E10(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x50656D6F48326868 && a2 == 0xEA0000000000646FLL;
  if (v3 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50656D6F48316868 && a2 == 0xEA0000000000646FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F6ECA0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6ECC0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251C48FB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251C490A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65746F6D6572 && a2 == 0xE600000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7571655272657375 && a2 == 0xED00006465747365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251C491B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEB00000000676E69 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574736575716572 && a2 == 0xE900000000000064 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696C6C6174736E69 && a2 == 0xEA0000000000676ELL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C6C6174736E69 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_251C494B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251C49500()
{
  unint64_t result = qword_269BA0DC8;
  if (!qword_269BA0DC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269BA0DC8);
  }
  return result;
}

uint64_t sub_251C49540(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251C49554(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251C49574(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v6);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (v9 == 1) {
    return 0;
  }
  MEMORY[0x270FA5388](v9);
  v12 = (char *)&v13 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v6, v7);
  a1(&v14, v12);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  return v14;
}

uint64_t (*sub_251C49734())()
{
  return j__swift_endAccess;
}

uint64_t sub_251C49790@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251C49978();
  sub_251F34F10();
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251C4982C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251C498DC()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_251C49978()
{
  unint64_t result = qword_269BA2FB0;
  if (!qword_269BA2FB0)
  {
    type metadata accessor for CamerasModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2FB0);
  }
  return result;
}

uint64_t type metadata accessor for CamerasModel()
{
  uint64_t result = qword_269BA0DF0;
  if (!qword_269BA0DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251C49A1C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251C49AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251C49B30()
{
  return sub_251C49AC0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_251C49B4C(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel12CamerasModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251C49978();
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251C49734();
  return sub_251C49C38;
}

void sub_251C49C38(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  free(v1);
}

uint64_t sub_251C49CC4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_251C49978();
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__currentHomeIdentifier;
  swift_beginAccess();
  return sub_251A1E280(v3, a1);
}

uint64_t sub_251C49D60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251C49978();
  sub_251F34F10();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__currentHomeIdentifier;
  swift_beginAccess();
  return sub_251A1E280(v4, a2);
}

uint64_t sub_251C49DFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1E280(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_251C49978();
  sub_251F34F00();
  swift_release();
  return sub_251B55B48((uint64_t)v6);
}

uint64_t sub_251C49EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(a2, (uint64_t)v6);
  uint64_t v7 = a1 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__currentHomeIdentifier;
  swift_beginAccess();
  sub_251C4DDAC((uint64_t)v6, v7);
  return swift_endAccess();
}

unint64_t sub_251C49FBC()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v16 = v0;
  sub_251C49978();
  sub_251F34F10();
  swift_release();
  uint64_t v8 = v0 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__currentHomeIdentifier;
  swift_beginAccess();
  sub_251A1E280(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_251B55B48((uint64_t)v7);
    return sub_2519FB87C(MEMORY[0x263F8EE78]);
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  swift_getKeyPath();
  v15[0] = v0;
  sub_251F34F10();
  swift_release();
  uint64_t v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (!*(void *)(v10 + 16))
  {
LABEL_7:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return sub_2519FB87C(MEMORY[0x263F8EE78]);
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_2519FE584((uint64_t)v4);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v13;
}

id CamerasModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CamerasModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_251C4A410()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CamerasModel()), sel_init);
  qword_269BA0DD0 = (uint64_t)result;
  return result;
}

id static CamerasModel.shared.getter()
{
  if (qword_269B9C3A0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_269BA0DD0;
  return v0;
}

uint64_t sub_251C4A4A0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  v47 = v4;
  v48 = (char *)&v46 - (((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v46 - v5;
  id v7 = objc_msgSend(a1, sel_currentHome);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_uniqueIdentifier);

    uint64_t v10 = sub_251F34DA0();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v6, v13, v10);
    unint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    v15(v6, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
    {
      uint64_t v16 = (uint64_t)v48;
      v14(v48, v6, v10);
      uint64_t v17 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v15)(v16, 0, 1, v10);
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v18 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  }
  id v19 = objc_msgSend(a1, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v20 = sub_251F35AC0();

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_7;
    }
LABEL_14:
    swift_bridgeObjectRelease_n();
    uint64_t v26 = sub_251F34DA0();
    uint64_t v16 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v48, 1, 1, v26);
LABEL_16:
    uint64_t v17 = sub_251B55B48((uint64_t)v6);
LABEL_17:
    v22 = v47;
    MEMORY[0x270FA5388](v17);
    unint64_t v25 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_251A1E280(v16, (uint64_t)&v46 - v25);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    uint64_t v30 = v46;
    *(&v46 - 2) = v46;
    *(&v46 - 1) = (uint64_t)&v46 - v25;
    uint64_t v50 = v30;
    sub_251C49978();
    sub_251F34F00();
    swift_release();
    sub_251B55B48((uint64_t)&v46 - v25);
    if (qword_269B9C348 == -1) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_251F366C0();
  if (!v21) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v16 = 4;
  v22 = &off_26536F000;
  while (1)
  {
    id v23 = (v20 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x2533AB3A0](v16 - 4, v20)
        : *(id *)(v20 + 8 * v16);
    v24 = v23;
    unint64_t v25 = v16 - 3;
    if (__OFADD__(v16 - 4, 1)) {
      break;
    }
    if (objc_msgSend(v23, sel_isPrimary))
    {
      swift_bridgeObjectRelease_n();
      id v27 = objc_msgSend(v24, sel_uniqueIdentifier);

      uint64_t v16 = (uint64_t)v48;
      sub_251F34D80();

      uint64_t v28 = sub_251F34DA0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v16, 0, 1, v28);
      goto LABEL_16;
    }

    ++v16;
    if (v25 == v21) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_25:
  swift_once();
LABEL_18:
  uint64_t v31 = sub_251F350A0();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_269B9FFA8);
  MEMORY[0x270FA5388](v32);
  v33 = (char *)&v46 - v25;
  sub_251A1E280(v16, (uint64_t)&v46 - v25);
  v34 = sub_251F35080();
  os_log_type_t v35 = sub_251F35FD0();
  if (os_log_type_enabled(v34, v35))
  {
    v47 = (__objc2_class **)&v46;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v50 = v37;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v49 = sub_251A00E84(0xD000000000000024, 0x8000000251F6EE40, &v50);
    uint64_t v38 = sub_251F361D0();
    uint64_t v46 = (uint64_t)&v46;
    *(_WORD *)(v36 + 12) = 2080;
    MEMORY[0x270FA5388](v38);
    v39 = (char *)&v46 - (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1E280((uint64_t)v33, (uint64_t)v39);
    uint64_t v40 = sub_251F34DA0();
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) == 1)
    {
      sub_251B55B48((uint64_t)&v46 - (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v42 = 0xE300000000000000;
      uint64_t v43 = 7104878;
    }
    else
    {
      uint64_t v43 = sub_251F34D40();
      unint64_t v42 = v45;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
    }
    uint64_t v49 = sub_251A00E84(v43, v42, &v50);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251B55B48((uint64_t)v33);
    _os_log_impl(&dword_2519F3000, v34, v35, "%s current home ID: %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v37, -1, -1);
    MEMORY[0x2533AC760](v36, -1, -1);

    return sub_251B55B48((uint64_t)v48);
  }
  else
  {

    sub_251B55B48((uint64_t)&v46 - v25);
    return sub_251B55B48(v16);
  }
}

uint64_t sub_251C4AC54(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_251C4D350(a1);
  v47 = a1;
  id v5 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v6 = (void *)sub_251F34DA0();
  uint64_t v7 = *(v6 - 1);
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = v8;
  id v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  swift_getKeyPath();
  uint64_t v10 = v2 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel___observationRegistrar;
  uint64_t v53 = v2;
  unint64_t v11 = sub_251C49978();
  sub_251F34F10();
  swift_release();
  uint64_t v53 = v2;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = *v12;
  uint64_t *v12 = 0x8000000000000000;
  sub_251A0FF70(v4, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  uint64_t *v12 = v52;
  swift_bridgeObjectRelease();
  unint64_t v45 = *(void (**)(char *, void *))(v7 + 8);
  v45(v9, v6);
  swift_endAccess();
  uint64_t v53 = v2;
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
  MEMORY[0x270FA5388](v14 - 8);
  swift_getKeyPath();
  uint64_t v53 = v2;
  unint64_t v48 = v11;
  uint64_t v49 = v10;
  uint64_t v16 = v7;
  sub_251F34F10();
  swift_release();
  uint64_t v17 = v2 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__currentHomeIdentifier;
  swift_beginAccess();
  sub_251A1E280(v17, (uint64_t)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, void *))(v7 + 48))((char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v6);
  uint64_t result = sub_251B55B48((uint64_t)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v17 == 1)
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_251F350A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_269B9FFA8);
    unint64_t v20 = v47;
    uint64_t v21 = sub_251F35080();
    os_log_type_t v22 = sub_251F35FD0();
    int v23 = v22;
    v24 = &off_26536F000;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v25 = swift_slowAlloc();
      v47 = v6;
      uint64_t v26 = v25;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v52 = v44;
      *(_DWORD *)uint64_t v26 = 136315394;
      int v43 = v23;
      uint64_t v50 = sub_251A00E84(0xD00000000000001ALL, 0x8000000251F6EE20, &v52);
      v42[2] = &v51;
      uint64_t v27 = sub_251F361D0();
      v42[0] = v42;
      *(_WORD *)(v26 + 12) = 2080;
      v42[1] = v26 + 14;
      MEMORY[0x270FA5388](v27);
      v29 = (char *)v42 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v30 = objc_msgSend(v20, sel_uniqueIdentifier);
      sub_251F34D80();

      sub_251AF752C();
      uint64_t v31 = sub_251F36AB0();
      uint64_t v32 = v15;
      unint64_t v34 = v33;
      v45(v29, v47);
      uint64_t v35 = v31;
      v24 = &off_26536F000;
      uint64_t v50 = sub_251A00E84(v35, v34, &v52);
      sub_251F361D0();

      uint64_t v15 = v32;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v21, (os_log_type_t)v43, "%s currentHomeIdentifier is nil, setting it to %s", (uint8_t *)v26, 0x16u);
      uint64_t v36 = v44;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v36, -1, -1);
      uint64_t v37 = v26;
      uint64_t v6 = v47;
      MEMORY[0x2533AC760](v37, -1, -1);
    }
    else
    {
    }
    MEMORY[0x270FA5388](v38);
    v39 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v40 = [v20 (SEL)v24[241]];
    sub_251F34D80();

    (*(void (**)(char *, void, uint64_t, void *))(v16 + 56))(v39, 0, 1, v6);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v42[-2] = v2;
    v42[-1] = v39;
    uint64_t v52 = v2;
    sub_251F34F00();
    swift_release();
    return sub_251B55B48((uint64_t)v39);
  }
  return result;
}

uint64_t sub_251C4B298(void *a1)
{
  uint64_t v2 = v1;
  id v3 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  swift_getKeyPath();
  uint64_t v10 = v2;
  sub_251C49978();
  sub_251F34F10();
  swift_release();
  uint64_t v10 = v2;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  swift_beginAccess();
  sub_251BB8F74((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2;
  swift_getKeyPath();
  sub_251F34F20();
  return swift_release();
}

void sub_251C4B470(void *a1, void *a2)
{
  uint64_t v6 = v2;
  id v8 = objc_msgSend(a1, sel_cameraProfiles);
  if (v8)
  {
    uint64_t v9 = v8;
    sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
    unint64_t v10 = sub_251F35AC0();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (v76)
      {
LABEL_4:
        if ((v10 & 0xC000000000000001) != 0)
        {
          id v11 = (id)MEMORY[0x2533AB3A0](0, v10);
        }
        else
        {
          if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_27;
          }
          id v11 = *(id *)(v10 + 32);
        }
        id v89 = v11;
        swift_bridgeObjectRelease();
        id v12 = objc_msgSend(a2, sel_uniqueIdentifier);
        uint64_t v3 = sub_251F34DA0();
        uint64_t v13 = *(void *)(v3 - 8);
        MEMORY[0x270FA5388](v3);
        uint64_t v88 = v14;
        uint64_t v15 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        swift_getKeyPath();
        uint64_t v16 = (v6 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel___observationRegistrar);
        uint64_t v92 = v6;
        sub_251C49978();
        os_log_t v87 = v16;
        sub_251F34F10();
        swift_release();
        uint64_t v17 = (uint64_t *)(v6 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
        swift_beginAccess();
        uint64_t v18 = *v17;
        if (*(void *)(*v17 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v19 = sub_2519FE584((uint64_t)v15);
          if (v20)
          {
            uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v83 = *(void (**)(char *, uint64_t))(v13 + 8);
            v83(v15, v3);
            id v22 = v89;
            id v23 = objc_msgSend(v89, sel_uniqueIdentifier);
            v82 = v77;
            v85 = a2;
            uint64_t v24 = v88;
            MEMORY[0x270FA5388](v23);
            uint64_t v84 = v3;
            v81 = (unsigned char *)((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v25 = (char *)v77 - v81;
            sub_251F34D80();

            type metadata accessor for CameraController();
            swift_allocObject();
            id v26 = v22;
            uint64_t v27 = sub_251BF5D2C((void (*)(void, void))v26);
            id v89 = v26;

            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v90[0] = v21;
            sub_251A0FDC8((uint64_t)v27, v25, isUniquelyReferenced_nonNull_native);
            uint64_t v86 = v90[0];
            swift_bridgeObjectRelease();
            v29 = (void (*)(uint64_t, uint64_t))v83;
            v83((char *)v25, v84);
            id v30 = objc_msgSend(v85, sel_uniqueIdentifier);
            v82 = v77;
            MEMORY[0x270FA5388](v30);
            uint64_t v31 = (char *)v77 - v81;
            sub_251F34D80();

            swift_getKeyPath();
            v90[0] = v6;
            sub_251F34F10();
            swift_release();
            v90[0] = v6;
            swift_getKeyPath();
            sub_251F34F30();
            swift_release();
            swift_beginAccess();
            char v32 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v91 = *v17;
            *uint64_t v17 = 0x8000000000000000;
            sub_251A0FF70(v86, v31, v32);
            *uint64_t v17 = v91;
            uint64_t v33 = v84;
            swift_bridgeObjectRelease();
            uint64_t v86 = v13 + 8;
            v29(v31, v33);
            swift_endAccess();
            v90[0] = v6;
            swift_getKeyPath();
            sub_251F34F20();
            swift_release();
            if (qword_269B9C348 != -1) {
              swift_once();
            }
            uint64_t v34 = sub_251F350A0();
            __swift_project_value_buffer(v34, (uint64_t)qword_269B9FFA8);
            id v35 = v89;
            uint64_t v36 = v85;
            uint64_t v37 = v35;
            uint64_t v38 = v36;
            v39 = sub_251F35080();
            os_log_type_t v40 = sub_251F35FD0();
            int v41 = v40;
            if (os_log_type_enabled(v39, v40))
            {
              uint64_t v42 = swift_slowAlloc();
              id v89 = (id)swift_slowAlloc();
              v90[0] = (uint64_t)v89;
              *(_DWORD *)uint64_t v42 = 136315650;
              os_log_t v87 = v39;
              uint64_t v91 = sub_251A00E84(0x656D616328646461, 0xEF293A6F743A6172, v90);
              v79 = &v92;
              uint64_t v43 = sub_251F361D0();
              v77[1] = v77;
              *(_WORD *)(v42 + 12) = 2080;
              uint64_t v78 = v42 + 14;
              uint64_t v44 = v88;
              MEMORY[0x270FA5388](v43);
              v81 = v38;
              unint64_t v80 = (v44 + 15) & 0xFFFFFFFFFFFFFFF0;
              LODWORD(v85) = v41;
              unint64_t v45 = (char *)v77 - v80;
              id v46 = [v37 uniqueIdentifier];
              sub_251F34D80();

              sub_251AF752C();
              uint64_t v47 = sub_251F36AB0();
              unint64_t v49 = v48;
              uint64_t v50 = v45;
              uint64_t v51 = v37;
              v82 = v37;
              uint64_t v52 = v83;
              v83(v50, v33);
              uint64_t v91 = sub_251A00E84(v47, v49, v90);
              sub_251F361D0();

              uint64_t v53 = swift_bridgeObjectRelease();
              *(_WORD *)(v42 + 22) = 2080;
              uint64_t v78 = v42 + 24;
              MEMORY[0x270FA5388](v53);
              id v54 = v81;
              v55 = (char *)v77 - v80;
              id v56 = objc_msgSend(v81, sel_uniqueIdentifier);
              sub_251F34D80();

              uint64_t v57 = sub_251F36AB0();
              unint64_t v59 = v58;
              v52(v55, v33);
              uint64_t v91 = sub_251A00E84(v57, v59, v90);
              sub_251F361D0();

              swift_bridgeObjectRelease();
              os_log_t v60 = v87;
              _os_log_impl(&dword_2519F3000, v87, (os_log_type_t)v85, "%s added camera profile %s to home %s", (uint8_t *)v42, 0x20u);
              id v61 = v89;
              swift_arrayDestroy();
              MEMORY[0x2533AC760](v61, -1, -1);
              MEMORY[0x2533AC760](v42, -1, -1);

              return;
            }

LABEL_19:
            return;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v4 = v13 + 8;
        uint64_t v5 = *(void (**)(char *, uint64_t))(v13 + 8);
        v5(v15, v3);
        if (qword_269B9C348 == -1)
        {
LABEL_15:
          uint64_t v62 = sub_251F350A0();
          __swift_project_value_buffer(v62, (uint64_t)qword_269B9FFA8);
          id v63 = a2;
          uint64_t v37 = sub_251F35080();
          os_log_type_t v64 = sub_251F35FB0();
          if (!os_log_type_enabled(v37, v64))
          {

            return;
          }
          uint64_t v65 = swift_slowAlloc();
          uint64_t v86 = v4;
          uint64_t v66 = v65;
          uint64_t v67 = swift_slowAlloc();
          v90[0] = v67;
          *(_DWORD *)uint64_t v66 = 136315394;
          uint64_t v91 = sub_251A00E84(0x656D616328646461, 0xEF293A6F743A6172, v90);
          uint64_t v68 = sub_251F361D0();
          v85 = v77;
          *(_WORD *)(v66 + 12) = 2080;
          os_log_t v87 = (os_log_t)(v66 + 14);
          MEMORY[0x270FA5388](v68);
          v70 = (char *)v77 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
          id v71 = objc_msgSend(v63, sel_uniqueIdentifier);
          sub_251F34D80();

          sub_251AF752C();
          uint64_t v72 = sub_251F36AB0();
          uint64_t v73 = v3;
          unint64_t v75 = v74;
          v5(v70, v73);
          uint64_t v91 = sub_251A00E84(v72, v75, v90);
          sub_251F361D0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2519F3000, v37, v64, "%s failed to add camera, could not find home %s", (uint8_t *)v66, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v67, -1, -1);
          MEMORY[0x2533AC760](v66, -1, -1);

          goto LABEL_19;
        }
LABEL_27:
        swift_once();
        goto LABEL_15;
      }
    }
    else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
}

void sub_251C4BF34(void *a1, void *a2)
{
  uint64_t v4 = v2;
  id v6 = objc_msgSend(a1, sel_cameraProfiles);
  if (!v6) {
    return;
  }
  uint64_t v7 = v6;
  sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
  unint64_t v8 = sub_251F35AC0();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v76)
    {
LABEL_4:
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = MEMORY[0x2533AB3A0](0, v8);
      }
      else
      {
        if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_26;
        }
        uint64_t v9 = *(id *)(v8 + 32);
      }
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      id v88 = a2;
      id v11 = objc_msgSend(a2, sel_uniqueIdentifier);
      uint64_t v89 = sub_251F34DA0();
      uint64_t v12 = *(void *)(v89 - 8);
      MEMORY[0x270FA5388](v89);
      uint64_t v86 = v13;
      uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      swift_getKeyPath();
      uint64_t v15 = (uint64_t *)(v4 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel___observationRegistrar);
      v91[3] = v4;
      uint64_t v16 = (void *)sub_251C49978();
      sub_251F34F10();
      swift_release();
      uint64_t v17 = (uint64_t *)(v4 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
      swift_beginAccess();
      uint64_t v18 = *v17;
      uint64_t v19 = *(void *)(*v17 + 16);
      os_log_t v87 = v10;
      if (v19)
      {
        swift_bridgeObjectRetain();
        unint64_t v20 = sub_2519FE584((uint64_t)v14);
        if (v21)
        {
          uint64_t v22 = *(void *)(*(void *)(v18 + 56) + 8 * v20);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          id v23 = *(void (**)(char *))(v12 + 8);
          id v82 = v16;
          uint64_t v24 = v89;
          v23(v14);
          v83 = v15;
          uint64_t v84 = (void (*)(char *, uint64_t))v23;
          uint64_t v92 = v22;
          id v25 = [v10 uniqueIdentifier];
          uint64_t v26 = v86;
          MEMORY[0x270FA5388](v25);
          unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
          sub_251F34D80();

          sub_251BB8E7C((uint64_t)&v77 - v27);
          ((void (*)(char *, uint64_t))v23)((char *)&v77 - v27, v24);
          swift_release();
          id v28 = objc_msgSend(v88, sel_uniqueIdentifier);
          v81 = (char *)&v77;
          MEMORY[0x270FA5388](v28);
          v29 = (char *)&v77 - v27;
          sub_251F34D80();

          uint64_t v30 = v92;
          swift_getKeyPath();
          v91[0] = v4;
          sub_251F34F10();
          swift_release();
          v91[0] = v4;
          swift_getKeyPath();
          sub_251F34F30();
          swift_release();
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v90 = *v17;
          *uint64_t v17 = 0x8000000000000000;
          sub_251A0FF70(v30, (uint64_t)v29, isUniquelyReferenced_nonNull_native);
          *uint64_t v17 = v90;
          swift_bridgeObjectRelease();
          v85 = (void *)(v12 + 8);
          v84(v29, v89);
          swift_endAccess();
          v91[0] = v4;
          swift_getKeyPath();
          sub_251F34F20();
          swift_release();
          if (qword_269B9C348 != -1) {
            swift_once();
          }
          uint64_t v32 = sub_251F350A0();
          __swift_project_value_buffer(v32, (uint64_t)qword_269B9FFA8);
          uint64_t v33 = v87;
          id v34 = v88;
          id v35 = v33;
          id v36 = v34;
          uint64_t v37 = sub_251F35080();
          os_log_type_t v38 = sub_251F35FD0();
          int v39 = v38;
          if (os_log_type_enabled(v37, v38))
          {
            uint64_t v40 = swift_slowAlloc();
            id v88 = (id)swift_slowAlloc();
            v91[0] = (uint64_t)v88;
            *(_DWORD *)uint64_t v40 = 136315650;
            os_log_t v87 = v37;
            uint64_t v90 = sub_251A00E84(0xD000000000000014, 0x8000000251F6EE00, v91);
            unint64_t v80 = v91;
            uint64_t v41 = sub_251F361D0();
            uint64_t v77 = (uint64_t)&v77;
            *(_WORD *)(v40 + 12) = 2080;
            uint64_t v78 = v40 + 14;
            id v82 = v36;
            uint64_t v42 = v86;
            MEMORY[0x270FA5388](v41);
            v81 = (char *)((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
            LODWORD(v83) = v39;
            uint64_t v43 = (char *)((char *)&v77 - v81);
            id v44 = [v35 uniqueIdentifier];
            sub_251F34D80();

            unint64_t v79 = sub_251AF752C();
            uint64_t v45 = v89;
            uint64_t v46 = sub_251F36AB0();
            unint64_t v48 = v47;
            unint64_t v49 = v84;
            v84(v43, v45);
            uint64_t v90 = sub_251A00E84(v46, v48, v91);
            sub_251F361D0();

            uint64_t v50 = v35;
            uint64_t v51 = swift_bridgeObjectRelease();
            *(_WORD *)(v40 + 22) = 2080;
            uint64_t v78 = v40 + 24;
            MEMORY[0x270FA5388](v51);
            id v52 = v82;
            uint64_t v53 = (char *)((char *)&v77 - v81);
            id v54 = objc_msgSend(v82, sel_uniqueIdentifier);
            sub_251F34D80();

            uint64_t v55 = sub_251F36AB0();
            unint64_t v57 = v56;
            v49(v53, v45);
            uint64_t v90 = sub_251A00E84(v55, v57, v91);
            sub_251F361D0();

            swift_bridgeObjectRelease();
            unint64_t v58 = v87;
            _os_log_impl(&dword_2519F3000, v87, (os_log_type_t)v83, "%s removed camera profile %s to home %s", (uint8_t *)v40, 0x20u);
            id v59 = v88;
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v59, -1, -1);
            MEMORY[0x2533AC760](v40, -1, -1);
          }
          else
          {
          }
          return;
        }
        swift_bridgeObjectRelease();
      }
      os_log_t v60 = *(void (**)(char *, uint64_t))(v12 + 8);
      a2 = (void *)(v12 + 8);
      uint64_t v3 = v60;
      v60(v14, v89);
      if (qword_269B9C348 == -1)
      {
LABEL_15:
        uint64_t v61 = sub_251F350A0();
        __swift_project_value_buffer(v61, (uint64_t)qword_269B9FFA8);
        id v62 = v88;
        id v63 = sub_251F35080();
        os_log_type_t v64 = sub_251F35FB0();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t v65 = swift_slowAlloc();
          v85 = a2;
          uint64_t v66 = v65;
          id v88 = (id)swift_slowAlloc();
          v91[0] = (uint64_t)v88;
          *(_DWORD *)uint64_t v66 = 136315394;
          uint64_t v92 = sub_251A00E84(0xD000000000000014, 0x8000000251F6EE00, v91);
          uint64_t v67 = sub_251F361D0();
          v83 = &v77;
          *(_WORD *)(v66 + 12) = 2080;
          uint64_t v84 = (void (*)(char *, uint64_t))(v66 + 14);
          MEMORY[0x270FA5388](v67);
          uint64_t v69 = (char *)&v77 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
          id v70 = objc_msgSend(v62, sel_uniqueIdentifier);
          sub_251F34D80();

          sub_251AF752C();
          uint64_t v71 = v89;
          uint64_t v72 = sub_251F36AB0();
          unint64_t v74 = v73;
          v3(v69, v71);
          uint64_t v92 = sub_251A00E84(v72, v74, v91);
          sub_251F361D0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2519F3000, v63, v64, "%s failed to add camera, could not find home %s", (uint8_t *)v66, 0x16u);
          id v75 = v88;
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v75, -1, -1);
          MEMORY[0x2533AC760](v66, -1, -1);
        }
        else
        {
        }
        return;
      }
LABEL_26:
      swift_once();
      goto LABEL_15;
    }
  }
  else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
}

char *CamerasModel.controller(for:homeIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10 - 8);
  sub_251A1E280(a2, (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v6);
  uint64_t v35 = a1;
  if (v13 == 1)
  {
    sub_251B55B48((uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_getKeyPath();
  uint64_t v36 = v2;
  sub_251C49978();
  sub_251F34F10();
  swift_release();
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__homesToCameraControllers);
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (!*(void *)(*v14 + 16))
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a1 = v35;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_2519FE584((uint64_t)v9);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1 = v35;
  if (*(void *)(v18 + 16))
  {
    unint64_t v19 = sub_2519FE584(v35);
    if (v20)
    {
      char v21 = *(char **)(*(void *)(v18 + 56) + 8 * v19);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v21;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_11:
  unint64_t v22 = sub_251C49FBC();
  if (*(void *)(v22 + 16) && (unint64_t v23 = sub_2519FE584(a1), (v24 & 1) != 0))
  {
    char v21 = *(char **)(*(void *)(v22 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x270FA5388](v25);
    unint64_t v27 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v26);
    v29 = (char *)&v34 - v28;
    sub_251A1E280(a2, (uint64_t)&v34 - v28);
    if (v12(v29, 1, v6) == 1)
    {
      swift_getKeyPath();
      uint64_t v36 = v3;
      sub_251C49978();
      sub_251F34F10();
      swift_release();
      uint64_t v30 = v3 + OBJC_IVAR____TtC13HomeDataModel12CamerasModel__currentHomeIdentifier;
      swift_beginAccess();
      sub_251A1E280(v30, (uint64_t)v27);
      uint64_t v31 = sub_251B55B48((uint64_t)v29);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v29, v6);
      uint64_t v31 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
    }
    MEMORY[0x270FA5388](v31);
    *(&v34 - 2) = v35;
    uint64_t v32 = (void (*)(void, void))sub_251C49574((void (*)(uint64_t *__return_ptr, char *))sub_251C4D330);
    sub_251B55B48((uint64_t)v27);
    if (v32)
    {
      type metadata accessor for CameraController();
      swift_allocObject();
      char v21 = sub_251BF5D2C(v32);
    }
    else
    {
      return 0;
    }
  }
  return v21;
}

void sub_251C4CE64(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v29 = a1;
  if (qword_26B2200E0 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v5 = (void *)qword_26B21FF50;
    uint64_t v6 = (void *)sub_251F34D50();
    id v7 = objc_msgSend(v5, sel_homeFor_, v6);

    if (!v7) {
      break;
    }
    id v8 = objc_msgSend(v7, sel_accessories);

    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v9 = sub_251F35AC0();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_251F366C0();
      if (!v10)
      {
LABEL_30:
        swift_bridgeObjectRelease_n();
        break;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_30;
      }
    }
    v26[0] = a2;
    v26[1] = v3;
    unint64_t v3 = v9 & 0xC000000000000001;
    a2 = 4;
    uint64_t v11 = &off_26536F000;
    unint64_t v27 = v9 & 0xC000000000000001;
    uint64_t v28 = v10;
    while (1)
    {
      id v12 = v3 ? (id)MEMORY[0x2533AB3A0](a2 - 4, v9) : *(id *)(v9 + 8 * a2);
      int v13 = v12;
      uint64_t v14 = a2 - 3;
      if (__OFADD__(a2 - 4, 1)) {
        break;
      }
      id v15 = [v12 (SEL)v11[297]];
      if (v15)
      {
        unint64_t v16 = v15;
        sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
        unint64_t v17 = sub_251F35AC0();

        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v25 = sub_251F366C0();
          swift_bridgeObjectRelease();
          if (!v25)
          {
LABEL_21:

            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
        }
        else if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_21;
        }
        if ((v17 & 0xC000000000000001) != 0)
        {
          id v18 = (id)MEMORY[0x2533AB3A0](0, v17);
        }
        else
        {
          if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_27;
          }
          id v18 = *(id *)(v17 + 32);
        }
        unint64_t v19 = v18;

        swift_bridgeObjectRelease();
        id v20 = objc_msgSend(v19, sel_uniqueIdentifier);
        uint64_t v21 = sub_251F34DA0();
        uint64_t v22 = *(void *)(v21 - 8);
        MEMORY[0x270FA5388](v21);
        char v24 = (char *)v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        LOBYTE(v20) = sub_251F34D70();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
        if (v20)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_25;
        }

        unint64_t v3 = v27;
        uint64_t v10 = v28;
        uint64_t v11 = &off_26536F000;
      }
      else
      {
      }
LABEL_7:
      ++a2;
      if (v14 == v10)
      {
        swift_bridgeObjectRelease_n();
        unint64_t v19 = 0;
LABEL_25:
        a2 = v26[0];
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_once();
  }
  unint64_t v19 = 0;
LABEL_32:
  *(void *)a2 = v19;
}

Swift::Void __swiftcall CamerasModel.setupForTesting(with:)(HMHomeManager with)
{
  id v3 = [(objc_class *)with.super.isa homes];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v4 = sub_251F35AC0();

  uint64_t v5 = (void *)sub_2519FB890(MEMORY[0x263F8EE78]);
  id v6 = v1;
  sub_251C4D8A8(v5, v4);
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  sub_251C49978();
  sub_251F34F00();
  swift_release();
  swift_bridgeObjectRelease();
  sub_251C4A4A0(with.super.isa);
}

void sub_251C4D330(uint64_t a1@<X8>)
{
  sub_251C4CE64(*(void *)(v1 + 16), a1);
}

uint64_t sub_251C4D350(void *a1)
{
  id v1 = objc_msgSend(a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v2 = sub_251F35AC0();

  unint64_t v46 = MEMORY[0x263F8EE78];
  if (v2 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    if (v3) {
      goto LABEL_3;
    }
    goto LABEL_25;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    unint64_t v13 = MEMORY[0x263F8EE78];
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)sub_2519FB87C(MEMORY[0x263F8EE78]);
    if (v13 >> 62) {
      goto LABEL_48;
    }
    uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v15)
    {
LABEL_49:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v14;
    }
LABEL_28:
    if (v15 < 1) {
      goto LABEL_51;
    }
    uint64_t v16 = 0;
    uint64_t v42 = (void *)v13;
    unint64_t v43 = v13 & 0xC000000000000001;
    uint64_t v41 = v15;
    while (1)
    {
      if (v43) {
        id v19 = (id)MEMORY[0x2533AB3A0](v16, v13);
      }
      else {
        id v19 = *(id *)(v13 + 8 * v16 + 32);
      }
      id v20 = v19;
      id v21 = objc_msgSend(v19, sel_uniqueIdentifier, v41, v42);
      uint64_t v22 = sub_251F34DA0();
      id v44 = &v41;
      uint64_t v45 = v22;
      uint64_t v23 = *(void *)(v22 - 8);
      MEMORY[0x270FA5388](v22);
      uint64_t v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      type metadata accessor for CameraController();
      swift_allocObject();
      id v26 = v20;
      unint64_t v27 = sub_251BF5D2C((void (*)(void, void))v26);

      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v46 = (unint64_t)v14;
      unint64_t v13 = (unint64_t)v14;
      unint64_t v30 = sub_2519FE584((uint64_t)v25);
      uint64_t v31 = v14[2];
      BOOL v32 = (v29 & 1) == 0;
      uint64_t v33 = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_251F366C0();
        if (!v15) {
          goto LABEL_49;
        }
        goto LABEL_28;
      }
      char v34 = v29;
      if (v14[3] >= v33)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v14 = (void *)v46;
          if (v29) {
            goto LABEL_30;
          }
        }
        else
        {
          unint64_t v13 = (unint64_t)&v46;
          sub_251A16840();
          uint64_t v14 = (void *)v46;
          if (v34) {
            goto LABEL_30;
          }
        }
      }
      else
      {
        sub_251A09A5C(v33, isUniquelyReferenced_nonNull_native);
        unint64_t v13 = v46;
        unint64_t v35 = sub_2519FE584((uint64_t)v25);
        if ((v34 & 1) != (v36 & 1)) {
          goto LABEL_52;
        }
        unint64_t v30 = v35;
        uint64_t v14 = (void *)v46;
        if (v34)
        {
LABEL_30:
          uint64_t v17 = v14[7];
          swift_release();
          *(void *)(v17 + 8 * v30) = v27;
          uint64_t v18 = v45;
          goto LABEL_31;
        }
      }
      v14[(v30 >> 6) + 8] |= 1 << v30;
      uint64_t v18 = v45;
      (*(void (**)(unint64_t, char *, uint64_t))(v23 + 16))(v14[6] + *(void *)(v23 + 72) * v30, v25, v45);
      *(void *)(v14[7] + 8 * v30) = v27;
      uint64_t v37 = v14[2];
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_47;
      }
      v14[2] = v39;
LABEL_31:
      swift_bridgeObjectRelease();
      ++v16;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v18);

      unint64_t v13 = (unint64_t)v42;
      if (v41 == v16) {
        goto LABEL_49;
      }
    }
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x2533AB3A0](v4, v2);
      }
      else {
        id v5 = *(id *)(v2 + 8 * v4 + 32);
      }
      id v6 = v5;
      id v7 = objc_msgSend(v5, sel_cameraProfiles);
      if (v7)
      {
        id v8 = v7;
        sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
        unint64_t v9 = sub_251F35AC0();

        if (v9 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_251F366C0();
          swift_bridgeObjectRelease();
          if (v12)
          {
LABEL_13:
            if ((v9 & 0xC000000000000001) != 0)
            {
              MEMORY[0x2533AB3A0](0, v9);
            }
            else
            {
              if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_24;
              }
              id v10 = *(id *)(v9 + 32);
            }

            uint64_t v11 = swift_bridgeObjectRelease();
            MEMORY[0x2533AA9D0](v11);
            if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_251F35B10();
            }
            sub_251F35B70();
            sub_251F35AE0();
            goto LABEL_6;
          }
        }
        else if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_13;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
LABEL_6:
      if (v3 == ++v4)
      {
        swift_bridgeObjectRelease();
        unint64_t v13 = v46;
        goto LABEL_26;
      }
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251C4D8A8(void *a1, unint64_t a2)
{
  id v3 = v2;
  uint64_t isUniquelyReferenced_nonNull_native = a2;
  if (a2 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_251F366C0();
    if (v6) {
      goto LABEL_3;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_26;
  }
LABEL_3:
  v27[1] = v3;
  uint64_t v28 = v6;
  uint64_t v29 = isUniquelyReferenced_nonNull_native;
  unint64_t v30 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v7 = 4;
  while (1)
  {
    id v3 = (id)(v7 - 4);
    if (v30) {
      id v9 = (id)MEMORY[0x2533AB3A0](v7 - 4, isUniquelyReferenced_nonNull_native);
    }
    else {
      id v9 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v7);
    }
    id v10 = v9;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v32 = v7 - 3;
    uint64_t v11 = sub_251C4D350(v9);
    id v33 = v10;
    id v3 = objc_msgSend(v10, sel_uniqueIdentifier);
    uint64_t v12 = sub_251F34DA0();
    uint64_t v31 = v27;
    uint64_t v13 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v12);
    uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v34 = a1;
    unint64_t v17 = sub_2519FE584((uint64_t)v15);
    uint64_t v18 = a1[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      goto LABEL_23;
    }
    id v3 = v16;
    if (a1[3] < v20) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      a1 = v34;
      if (v16) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_251A16B0C();
      a1 = v34;
      if (v3)
      {
LABEL_4:
        uint64_t v8 = a1[7];
        swift_bridgeObjectRelease();
        *(void *)(v8 + 8 * v17) = v11;
        goto LABEL_5;
      }
    }
LABEL_17:
    a1[(v17 >> 6) + 8] |= 1 << v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 16))(a1[6] + *(void *)(v13 + 72) * v17, v15, v12);
    *(void *)(a1[7] + 8 * v17) = v11;
    uint64_t v23 = a1[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_24;
    }
    a1[2] = v25;
LABEL_5:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

    ++v7;
    uint64_t isUniquelyReferenced_nonNull_native = v29;
    if (v32 == v28) {
      goto LABEL_26;
    }
  }
  sub_251A09E68(v20, isUniquelyReferenced_nonNull_native);
  unint64_t v21 = sub_2519FE584((uint64_t)v15);
  if ((v3 & 1) == (v22 & 1))
  {
    unint64_t v17 = v21;
    a1 = v34;
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_17;
  }
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251C4DBC4()
{
  return type metadata accessor for CamerasModel();
}

void sub_251C4DBCC()
{
  sub_251A24BB4();
  if (v0 <= 0x3F)
  {
    sub_251F34F50();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for CamerasModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CamerasModel);
}

uint64_t dispatch thunk of CamerasModel.homesToCameraControllers.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CamerasModel.homesToCameraControllers.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CamerasModel.homesToCameraControllers.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CamerasModel.currentCameraControllers.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t sub_251C4DD90()
{
  return sub_251C49EF8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_251C4DDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C4DE14()
{
  return sub_251C49B30();
}

uint64_t sub_251C4DE2C()
{
  return sub_251C4DD90();
}

uint64_t ServiceKind.serviceStatusCountString.getter()
{
  uint64_t result = 0;
  switch(*v0)
  {
    case 3:
      uint64_t v2 = 0xD000000000000021;
      id v3 = "HFStatusTitleAirPurifier_Multiple";
      goto LABEL_17;
    case 0xB:
      uint64_t v2 = 0xD000000000000023;
      id v3 = "HFStatusTitleContactSensor_Multiple";
      goto LABEL_17;
    case 0xE:
      uint64_t v2 = 0xD00000000000001ALL;
      id v3 = "HFStatusTitleDoor_Multiple";
      goto LABEL_17;
    case 0x10:
    case 0x30:
      uint64_t v2 = 0xD000000000000019;
      id v3 = "HFStatusTitleFan_Multiple";
      goto LABEL_17;
    case 0x11:
      uint64_t v4 = "HFStatusTitleFaucet_Multiple";
      goto LABEL_20;
    case 0x13:
      uint64_t v2 = 0xD000000000000020;
      id v3 = "HFStatusTitleGarageDoor_Multiple";
      goto LABEL_17;
    case 0x18:
      uint64_t v2 = 0xD000000000000026;
      id v3 = "HFStatusTitleIrrigationSystem_Multiple";
      goto LABEL_17;
    case 0x1C:
      uint64_t v2 = 0xD00000000000001FLL;
      id v3 = "HFStatusTitleLightbulb_Multiple";
      goto LABEL_17;
    case 0x1E:
      uint64_t v2 = 0xD00000000000001ALL;
      id v3 = "HFStatusTitleLock_Multiple";
      goto LABEL_17;
    case 0x22:
      uint64_t v4 = "HFStatusTitleOutlet_Multiple";
      goto LABEL_20;
    case 0x26:
      uint64_t v2 = 0xD00000000000001DLL;
      id v3 = "HFStatusTitleSpeaker_Multiple";
      goto LABEL_17;
    case 0x27:
    case 0x28:
      uint64_t v4 = "HFStatusTitleSwitch_Multiple";
      goto LABEL_20;
    case 0x2C:
      uint64_t v2 = 0xD000000000000020;
      id v3 = "HFStatusTitleTelevision_Multiple";
      goto LABEL_17;
    case 0x2F:
      uint64_t v2 = 0xD00000000000001BLL;
      id v3 = "HFStatusTitleValve_Multiple";
      goto LABEL_17;
    case 0x31:
      uint64_t v2 = 0xD000000000000023;
      id v3 = "HFStatusTitleNetworkRouter_Multiple";
LABEL_17:
      unint64_t v5 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      goto LABEL_21;
    case 0x33:
      uint64_t v4 = "HFStatusTitleWindow_Multiple";
      goto LABEL_20;
    case 0x34:
      uint64_t v4 = "HFStatusTitleBlinds_Multiple";
LABEL_20:
      unint64_t v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      uint64_t v2 = 0xD00000000000001CLL;
LABEL_21:
      uint64_t result = static String.hfLocalized(_:)(v2, v5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251C4E0D4(uint64_t *a1)
{
  *(void *)(v2 + 56) = v1;
  uint64_t v3 = *a1;
  __int16 v4 = *((_WORD *)a1 + 4);
  *(_WORD *)(v2 + 52) = v4;
  char v5 = *((unsigned char *)a1 + 10);
  *(void *)(v2 + 40) = v3;
  *(_WORD *)(v2 + 48) = v4;
  *(unsigned char *)(v2 + 50) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v6;
  void *v6 = v2;
  v6[1] = sub_251C4E188;
  return sub_251C50EE4(v2 + 40);
}

uint64_t sub_251C4E188(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = a2;
  v3[9] = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C4E290, 0, 0);
}

uint64_t sub_251C4E290()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v3 = *(unsigned __int16 *)(v0 + 52);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 40);
    swift_unknownObjectRetain();
    uint64_t v6 = v5(v2, v3, v2, ObjectType, v1);
    swift_unknownObjectRelease_n();
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t MatterDevice.setClientData(key:value:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = *a1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 120))(&v5, 0x10000, a2, a3);
}

uint64_t MatterDevice.decodedAttribute(path:attribute:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v4 = *((_WORD *)a1 + 4);
  char v5 = *((unsigned char *)a1 + 10);
  uint64_t v7 = *a1;
  __int16 v8 = v4;
  char v9 = v5;
  return (*(uint64_t (**)(uint64_t *))(a4 + 56))(&v7);
}

double MatterDevice.decodedAttributeIfSupported(path:attribute:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v9 = *a1;
  __int16 v10 = *((_WORD *)a1 + 4);
  char v11 = *((unsigned char *)a1 + 10);
  uint64_t v15 = *a1;
  __int16 v16 = v10;
  char v17 = v11;
  uint64_t v12 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a4 + 88))(&v15, a3, a4);
  char v13 = sub_251D81EDC(a2, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v15 = v9;
    __int16 v16 = v10;
    char v17 = v11;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(a4 + 48))(&v15, a2, a3, a4);
  }
  else
  {
    double result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

unint64_t MatterDevice.clusterFeatureMap(at:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = *((_WORD *)a1 + 4);
  char v4 = *((unsigned char *)a1 + 10);
  uint64_t v9 = *a1;
  __int16 v10 = v3;
  char v11 = v4;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v12, &v9, 65532, a2);
  if (v12[3])
  {
    int v5 = swift_dynamicCast();
    uint64_t v6 = v9;
    unsigned __int8 v7 = v5 ^ 1;
    if (!v5) {
      uint64_t v6 = 0;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)v12);
    uint64_t v6 = 0;
    unsigned __int8 v7 = 1;
  }
  return v6 | ((unint64_t)v7 << 32);
}

uint64_t MatterDevice.attributeListForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251C4E5DC(a1, a2, a3, 65531, "Failed to get attribute list for cluster %s");
}

uint64_t MatterDevice.commandListForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251C4E5DC(a1, a2, a3, 65529, "Failed to get command list for cluster %s");
}

uint64_t sub_251C4E5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v6 = *(void *)a1;
  __int16 v7 = *(_WORD *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 10);
  uint64_t v18 = *(void *)a1;
  __int16 v19 = v7;
  char v20 = v8;
  (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a3 + 48))(&v21, &v18, a4, a2, a3);
  if (v24)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
    if (swift_dynamicCast()) {
      return v18;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v21);
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21ECB8);
  char v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FB0();
  if (os_log_type_enabled(v11, v12))
  {
    format = a5;
    char v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)char v13 = 136315138;
    uint64_t v18 = v14;
    uint64_t v21 = v6;
    __int16 v22 = v7;
    char v23 = v8;
    uint64_t v15 = ClusterPath.description.getter();
    uint64_t v21 = sub_251A00E84(v15, v16, &v18);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v11, v12, format, v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);
  }

  return MEMORY[0x263F8EE78];
}

uint64_t MatterDevice.clusterRevisionForCluster(path:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = *((_WORD *)a1 + 4);
  char v4 = *((unsigned char *)a1 + 10);
  uint64_t v9 = *a1;
  __int16 v10 = v3;
  char v11 = v4;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v12, &v9, 65533, a2);
  if (v12[3])
  {
    int v5 = swift_dynamicCast();
    int v6 = (unsigned __int16)v9;
    int v7 = v5 ^ 1;
    if (!v5) {
      int v6 = 0;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)v12);
    int v6 = 0;
    int v7 = 1;
  }
  return v6 | (v7 << 16);
}

uint64_t MatterDevice.clientData(key:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v4 = *a1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 112))(&v4, 0x10000, a2);
}

id MTRDevice.identifier.getter()
{
  id v1 = objc_msgSend(v0, sel_hdm_nodeID);
  id v2 = objc_msgSend(v1, sel_unsignedLongLongValue);

  return v2;
}

id MTRDevice.descriptorCluster(in:)()
{
  id v1 = v0;
  id v2 = (void *)sub_251F36D40();
  if (qword_269B9C530 != -1) {
    swift_once();
  }
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10CE8]), sel_initWithDevice_endpointID_queue_, v1, v2, qword_269BF3278);

  return v3;
}

Swift::String_optional __swiftcall MTRDevice.defaultName(in:)(Swift::UInt16 in)
{
  id v2 = objc_msgSend(v1, sel_hdm_nodeID);
  sub_251F36D80();

  uint64_t v3 = 0;
  char v4 = 0;
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

id MTRDevice.cluster<A>(of:endpointID:)()
{
  id v1 = v0;
  id v2 = (void *)sub_251F36D40();
  if (qword_269B9C530 != -1) {
    swift_once();
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithDevice_endpointID_queue_, v1, v2, qword_269BF3278);

  return v3;
}

uint64_t MTRDevice.writeAttribute(path:attributeID:value:)(uint64_t a1, int a2, void *a3)
{
  char v4 = v3;
  __int16 v7 = *(_WORD *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 10);
  uint64_t v9 = (void *)sub_251F36D40();
  __int16 v10 = (void *)sub_251F36D60();
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B21ECB8);
  sub_251A0D51C((uint64_t)a3, (uint64_t)v31);
  os_log_type_t v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FD0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v14 = 136315906;
    sub_251A00E84(0xD000000000000027, 0x8000000251F6F0F0, &v30);
    sub_251F361D0();
    *(_WORD *)(v14 + 12) = 2080;
    __int16 v28 = v7;
    char v29 = v8;
    uint64_t v15 = ClusterPath.description.getter();
    HIDWORD(v27) = (unint64_t)sub_251A00E84(v15, v16, &v30) >> 32;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 1024;
    LODWORD(v27) = a2;
    sub_251F361D0();
    *(_WORD *)(v14 + 28) = 2080;
    sub_251A0D51C((uint64_t)v31, (uint64_t)&v27);
    uint64_t v17 = sub_251F35770();
    uint64_t v27 = sub_251A00E84(v17, v18, &v30);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    _os_log_impl(&dword_2519F3000, v12, v13, "%s path: %s attributeID: %u value: %s", (uint8_t *)v14, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v26, -1, -1);
    uint64_t v19 = v14;
    char v4 = v3;
    MEMORY[0x2533AC760](v19, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  }

  char v20 = (void *)sub_251F36D60();
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  uint64_t v21 = sub_251F36B00();
  if (qword_269B9C330 != -1) {
    swift_once();
  }
  swift_beginAccess();
  __int16 v22 = (void *)qword_269B9FC18;
  if (qword_269B9FC18)
  {
    char v23 = (void *)qword_269B9FC18;
  }
  else
  {
    sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    char v23 = (void *)sub_251F36100();
    __int16 v22 = 0;
  }
  id v24 = v22;
  objc_msgSend(v4, sel_writeAttributeWithEndpointID_clusterID_attributeID_value_expectedValueInterval_timedWriteTimeout_, v9, v10, v20, v21, v23, 0);

  return swift_unknownObjectRelease();
}

uint64_t MTRDevice.clientData(key:endpointID:)@<X0>(unsigned char *a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v3 = 0xEB00000000656D61;
  uint64_t v4 = 0x4E79616C70736944;
  if ((a2 & 0x10000) != 0)
  {
    switch(*a1)
    {
      case 1:
        uint64_t v3 = 0xE600000000000000;
        uint64_t v4 = 0x44496D6F6F52;
        break;
      case 2:
        uint64_t v4 = 0x6E6564496E6F6349;
        uint64_t v3 = 0xEE00726569666974;
        break;
      case 3:
        uint64_t v3 = 0xE800000000000000;
        uint64_t v4 = 0x657469726F766146;
        break;
      case 4:
        uint64_t v4 = 0x61446E4F776F6853;
        uint64_t v3 = 0xEF6472616F626873;
        break;
      case 5:
        uint64_t v3 = 0x8000000251F66D10;
        uint64_t v4 = 0xD000000000000017;
        break;
      case 6:
        uint64_t v3 = 0xE800000000000000;
        uint64_t v4 = 0x657A6953656C6954;
        break;
      case 7:
        uint64_t v4 = 0x746169636F737341;
        uint64_t v3 = 0xEE00657079546465;
        break;
      case 8:
        uint64_t v4 = 0x496564756C636E49;
        uint64_t v3 = 0xEF7375746174536ELL;
        break;
      case 9:
        uint64_t v4 = 0x6564644165746144;
        uint64_t v3 = 0xE900000000000064;
        break;
      default:
        break;
    }
    sub_251CD0A48(v4, v3, a3);
  }
  else
  {
    switch(*a1)
    {
      case 1:
        uint64_t v3 = 0xE600000000000000;
        uint64_t v4 = 0x44496D6F6F52;
        break;
      case 2:
        uint64_t v4 = 0x6E6564496E6F6349;
        uint64_t v3 = 0xEE00726569666974;
        break;
      case 3:
        uint64_t v3 = 0xE800000000000000;
        uint64_t v4 = 0x657469726F766146;
        break;
      case 4:
        uint64_t v4 = 0x61446E4F776F6853;
        uint64_t v3 = 0xEF6472616F626873;
        break;
      case 5:
        uint64_t v3 = 0x8000000251F66D10;
        uint64_t v4 = 0xD000000000000017;
        break;
      case 6:
        uint64_t v3 = 0xE800000000000000;
        uint64_t v4 = 0x657A6953656C6954;
        break;
      case 7:
        uint64_t v4 = 0x746169636F737341;
        uint64_t v3 = 0xEE00657079546465;
        break;
      case 8:
        uint64_t v4 = 0x496564756C636E49;
        uint64_t v3 = 0xEF7375746174536ELL;
        break;
      case 9:
        uint64_t v4 = 0x6564644165746144;
        uint64_t v3 = 0xE900000000000064;
        break;
      default:
        break;
    }
    sub_251CD0894(a2, v4, v3, a3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t MTRDevice.setClientData(key:endpointID:value:)(unsigned char *a1, int a2, uint64_t a3)
{
  uint64_t v3 = 0xEB00000000656D61;
  uint64_t v4 = 0x4E79616C70736944;
  if ((a2 & 0x10000) != 0)
  {
    switch(*a1)
    {
      case 1:
        uint64_t v3 = 0xE600000000000000;
        uint64_t v4 = 0x44496D6F6F52;
        break;
      case 2:
        uint64_t v4 = 0x6E6564496E6F6349;
        uint64_t v3 = 0xEE00726569666974;
        break;
      case 3:
        uint64_t v3 = 0xE800000000000000;
        uint64_t v4 = 0x657469726F766146;
        break;
      case 4:
        uint64_t v4 = 0x61446E4F776F6853;
        uint64_t v3 = 0xEF6472616F626873;
        break;
      case 5:
        uint64_t v3 = 0x8000000251F66D10;
        uint64_t v4 = 0xD000000000000017;
        break;
      case 6:
        uint64_t v3 = 0xE800000000000000;
        uint64_t v4 = 0x657A6953656C6954;
        break;
      case 7:
        uint64_t v4 = 0x746169636F737341;
        uint64_t v3 = 0xEE00657079546465;
        break;
      case 8:
        uint64_t v4 = 0x496564756C636E49;
        uint64_t v3 = 0xEF7375746174536ELL;
        break;
      case 9:
        uint64_t v4 = 0x6564644165746144;
        uint64_t v3 = 0xE900000000000064;
        break;
      default:
        break;
    }
    sub_251CD10F4(v4, v3, a3);
  }
  else
  {
    switch(*a1)
    {
      case 1:
        uint64_t v3 = 0xE600000000000000;
        uint64_t v4 = 0x44496D6F6F52;
        break;
      case 2:
        uint64_t v4 = 0x6E6564496E6F6349;
        uint64_t v3 = 0xEE00726569666974;
        break;
      case 3:
        uint64_t v3 = 0xE800000000000000;
        uint64_t v4 = 0x657469726F766146;
        break;
      case 4:
        uint64_t v4 = 0x61446E4F776F6853;
        uint64_t v3 = 0xEF6472616F626873;
        break;
      case 5:
        uint64_t v3 = 0x8000000251F66D10;
        uint64_t v4 = 0xD000000000000017;
        break;
      case 6:
        uint64_t v3 = 0xE800000000000000;
        uint64_t v4 = 0x657A6953656C6954;
        break;
      case 7:
        uint64_t v4 = 0x746169636F737341;
        uint64_t v3 = 0xEE00657079546465;
        break;
      case 8:
        uint64_t v4 = 0x496564756C636E49;
        uint64_t v3 = 0xEF7375746174536ELL;
        break;
      case 9:
        uint64_t v4 = 0x6564644165746144;
        uint64_t v3 = 0xE900000000000064;
        break;
      default:
        break;
    }
    sub_251CD0E4C(a2, v4, v3, a3);
  }
  return swift_bridgeObjectRelease();
}

void MTRDevice.decodedAttribute(path:attributeID:)(uint64_t *a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v83 = *a1;
  __int16 v7 = *((_WORD *)a1 + 4);
  char v8 = *((unsigned char *)a1 + 10);
  uint64_t v9 = (void *)sub_251F36D40();
  __int16 v10 = (void *)sub_251F36D60();
  uint64_t v11 = (void *)sub_251F36D40();
  os_log_type_t v12 = (void *)sub_251F36D60();
  os_log_type_t v13 = (void *)sub_251F36D60();
  id v14 = objc_msgSend(v4, sel_readAttributeWithEndpointID_clusterID_attributeID_params_, v11, v12, v13, 0);

  if (!v14)
  {

LABEL_6:
    *a3 = 0u;
    a3[1] = 0u;
    return;
  }
  uint64_t v82 = (uint64_t)a3;
  uint64_t v15 = sub_251F35550();

  if (!*(void *)(v15 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v10;
    os_log_type_t v12 = v9;
    a3 = (_OWORD *)v82;
    goto LABEL_6;
  }
  char v16 = v8;
  id v17 = v9;
  id v18 = v10;
  uint64_t v19 = (void *)sub_251F36D60();
  id v20 = objc_msgSend(self, sel_attributePathWithEndpointID_clusterID_attributeID_, v17, v18, v19);

  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D560);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F3A500;
  *(void *)(inited + 32) = sub_251F356F0();
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 72) = sub_251A1A568(0, &qword_269BA5560);
  *(void *)(inited + 48) = v20;
  *(void *)(inited + 80) = sub_251F356F0();
  *(void *)(inited + 88) = v23;
  *(void *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  *(void *)(inited + 96) = v15;
  id v80 = v20;
  swift_bridgeObjectRetain();
  sub_2519FA1A4(inited);
  id v24 = objc_allocWithZone(MEMORY[0x263F10C58]);
  id v25 = sub_251C51310();
  LOBYTE(v88[0]) = v16;
  uint64_t v26 = sub_251BE6060(a2, (char *)v88);
  uint64_t v81 = v26;
  if (v27)
  {
    unint64_t v28 = v27;
  }
  else
  {
    *(void *)&v88[0] = 0x2D6E776F6E6B6E75;
    *((void *)&v88[0] + 1) = 0xE800000000000000;
    LODWORD(v86) = a2;
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    unint64_t v28 = *((void *)&v88[0] + 1);
    uint64_t v81 = *(void *)&v88[0];
  }
  memset(v88, 0, sizeof(v88));
  unint64_t v79 = v25;
  char v78 = v16;
  if (v25)
  {
    id v29 = objc_msgSend(v25, sel_error);
    if (v29)
    {
      uint64_t v30 = v29;
      id v76 = v18;
      if (qword_26B21ECD0 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_251F350A0();
      __swift_project_value_buffer(v31, (uint64_t)qword_26B21ECB8);
      swift_bridgeObjectRetain_n();
      id v32 = v30;
      id v33 = sub_251F35080();
      os_log_type_t v34 = sub_251F35FB0();
      if (os_log_type_enabled(v33, v34))
      {
        id v74 = v17;
        uint64_t v35 = swift_slowAlloc();
        uint64_t v72 = (void *)swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        *(void *)&v84[0] = v73;
        *(_DWORD *)uint64_t v35 = 136315650;
        swift_bridgeObjectRetain();
        *(void *)&long long v86 = sub_251A00E84(v81, v28, (uint64_t *)v84);
        sub_251F361D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v35 + 12) = 2080;
        *(void *)&long long v86 = v83;
        WORD4(v86) = v7;
        BYTE10(v86) = v78;
        uint64_t v36 = ClusterPath.description.getter();
        *(void *)&long long v86 = sub_251A00E84(v36, v37, (uint64_t *)v84);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 22) = 2112;
        id v38 = v32;
        uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v86 = v39;
        sub_251F361D0();
        *uint64_t v72 = v39;

        _os_log_impl(&dword_2519F3000, v33, v34, "Got error trying to read attribute (%s) for ClusterPath (%s): %@", (uint8_t *)v35, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v72, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v73, -1, -1);
        uint64_t v40 = v35;
        id v17 = v74;
        MEMORY[0x2533AC760](v40, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v18 = v76;
      goto LABEL_33;
    }
    if (objc_msgSend(v25, sel_value))
    {
      sub_251F36240();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v84, 0, sizeof(v84));
    }
    sub_251ABBD00((uint64_t)v84, (uint64_t)&v86);
    sub_251ABBC18((uint64_t)&v86, (uint64_t)v88);
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_251F350A0();
    __swift_project_value_buffer(v49, (uint64_t)qword_26B21ECB8);
    swift_bridgeObjectRetain_n();
    uint64_t v50 = sub_251F35080();
    os_log_type_t v51 = sub_251F35FD0();
    if (os_log_type_enabled(v50, v51))
    {
      id v75 = v17;
      uint64_t v52 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(void *)&v84[0] = v53;
      *(_DWORD *)uint64_t v52 = 136315650;
      *(void *)&long long v86 = v83;
      WORD4(v86) = v7;
      BYTE10(v86) = v78;
      uint64_t v54 = ClusterPath.description.getter();
      *(void *)&long long v86 = sub_251A00E84(v54, v55, (uint64_t *)v84);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v86 = sub_251A00E84(v81, v28, (uint64_t *)v84);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v52 + 22) = 2080;
      swift_beginAccess();
      sub_251AA82A4((uint64_t)v88, (uint64_t)&v86);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v56 = sub_251F35770();
      *(void *)&long long v86 = sub_251A00E84(v56, v57, (uint64_t *)v84);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v50, v51, "MTRDevice decodedAttribute: %s (attribute:%s) result: %s", (uint8_t *)v52, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v53, -1, -1);
      uint64_t v58 = v52;
      id v17 = v75;
      MEMORY[0x2533AC760](v58, -1, -1);

      goto LABEL_32;
    }

LABEL_31:
    swift_bridgeObjectRelease_n();
    goto LABEL_32;
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_251F350A0();
  __swift_project_value_buffer(v41, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  uint64_t v42 = sub_251F35080();
  os_log_type_t v43 = sub_251F35FB0();
  if (!os_log_type_enabled(v42, v43))
  {

    goto LABEL_31;
  }
  uint64_t v44 = swift_slowAlloc();
  id v77 = v18;
  uint64_t v45 = swift_slowAlloc();
  *(void *)&v84[0] = v45;
  *(_DWORD *)uint64_t v44 = 136315394;
  swift_bridgeObjectRetain();
  *(void *)&long long v86 = sub_251A00E84(v81, v28, (uint64_t *)v84);
  sub_251F361D0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v44 + 12) = 2080;
  *(void *)&long long v86 = v83;
  WORD4(v86) = v7;
  BYTE10(v86) = v78;
  uint64_t v46 = ClusterPath.description.getter();
  *(void *)&long long v86 = sub_251A00E84(v46, v47, (uint64_t *)v84);
  sub_251F361D0();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_2519F3000, v42, v43, "Failed to create MTRAttributeReport for attribute (%s) ClusterPath (%s)", (uint8_t *)v44, 0x16u);
  swift_arrayDestroy();
  uint64_t v48 = v45;
  id v18 = v77;
  MEMORY[0x2533AC760](v48, -1, -1);
  MEMORY[0x2533AC760](v44, -1, -1);

LABEL_32:
  id v25 = v79;
LABEL_33:
  swift_beginAccess();
  sub_251AA82A4((uint64_t)v88, (uint64_t)&v86);
  if (*((void *)&v87 + 1))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_251A9090C((uint64_t)&v86);
  }
  else
  {
    sub_251A9090C((uint64_t)&v86);
    uint64_t v59 = sub_251F356F0();
    if (*(void *)(v15 + 16) && (unint64_t v61 = sub_2519FE798(v59, v60), (v62 & 1) != 0))
    {
      sub_251A0D51C(*(void *)(v15 + 56) + 32 * v61, (uint64_t)&v86);
    }
    else
    {
      long long v86 = 0u;
      long long v87 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251ABBC18((uint64_t)&v86, (uint64_t)v88);
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_251F350A0();
    __swift_project_value_buffer(v63, (uint64_t)qword_26B21ECB8);
    swift_bridgeObjectRetain();
    os_log_type_t v64 = sub_251F35080();
    os_log_type_t v65 = sub_251F35FD0();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315650;
      uint64_t v85 = v67;
      *(void *)&long long v86 = v83;
      WORD4(v86) = v7;
      BYTE10(v86) = v78;
      uint64_t v68 = ClusterPath.description.getter();
      *(void *)&long long v86 = sub_251A00E84(v68, v69, &v85);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v86 = sub_251A00E84(v81, v28, &v85);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 22) = 2080;
      sub_251AA82A4((uint64_t)v88, (uint64_t)&v86);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v70 = sub_251F35770();
      *(void *)&long long v86 = sub_251A00E84(v70, v71, &v85);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v64, v65, "MTRDevice decodedAttribute: Attempting manual decode %s (attribute:%s) result: %s", (uint8_t *)v66, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v67, -1, -1);
      MEMORY[0x2533AC760](v66, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  sub_251AA82A4((uint64_t)v88, v82);
  sub_251A9090C((uint64_t)v88);
}

uint64_t MTRDevice.getAttributeData(path:attributeID:)()
{
  id v1 = v0;
  id v2 = (void *)sub_251F36D40();
  uint64_t v3 = (void *)sub_251F36D60();
  uint64_t v4 = (void *)sub_251F36D60();
  id v5 = objc_msgSend(v1, sel_readAttributeWithEndpointID_clusterID_attributeID_params_, v2, v3, v4, 0);

  if (v5)
  {
    uint64_t v6 = sub_251F35550();
  }
  else
  {

    return 0;
  }
  return v6;
}

uint64_t MTRDevice.performCommand(path:commandID:commandFields:expectedValues:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269BA0E18 + dword_269BA0E18);
  __int16 v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *__int16 v7 = v3;
  v7[1] = sub_251C51F04;
  return v9(a1, a2, a3);
}

void sub_251C507D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v18 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  if (a6) {
    a6 = (void *)sub_251F35540();
  }
  if (qword_269B9C330 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = qword_269B9C530;
  id v13 = (id)qword_269B9FC18;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_269BF3278;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_251C51E80;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251C50AEC;
  aBlock[3] = &block_descriptor_30;
  id v17 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_invokeCommandWithEndpointID_clusterID_commandID_commandFields_expectedValues_expectedValueInterval_queue_completion_, v18, v19, v20, a6, 0, v13, v14, v17);
  _Block_release(v17);
}

uint64_t sub_251C50A6C(uint64_t a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E38);
    return sub_251F35C10();
  }
  else
  {
    if (a1) {
      swift_bridgeObjectRetain();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E38);
    return sub_251F35C20();
  }
}

uint64_t sub_251C50AEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v4 = sub_251F35AC0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_251C50B84()
{
  return objc_msgSend(v0, sel_state);
}

id sub_251C50B94()
{
  id v1 = objc_msgSend(v0, sel_hdm_nodeID);
  id v2 = objc_msgSend(v1, sel_unsignedLongLongValue);

  return v2;
}

id sub_251C50BE4()
{
  id v1 = v0;
  id v2 = (void *)sub_251F36D40();
  if (qword_269B9C530 != -1) {
    swift_once();
  }
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10CE8]), sel_initWithDevice_endpointID_queue_, v1, v2, qword_269BF3278);

  return v3;
}

uint64_t sub_251C50CAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = MatterDevice.clusterFeatureMap(at:)(a1, a2, a3);
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_251C50CD8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return MatterDevice.clusterRevisionForCluster(path:)(a1, a2, a3) & 0x1FFFF;
}

uint64_t sub_251C50CFC@<X0>(unsigned char *a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  return MTRDevice.clientData(key:endpointID:)(a1, a2 & 0x1FFFF, a3);
}

uint64_t sub_251C50D0C(unsigned char *a1, int a2, uint64_t a3)
{
  return MTRDevice.setClientData(key:endpointID:value:)(a1, a2 & 0x1FFFF, a3);
}

uint64_t sub_251C50D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269BA0E18 + dword_269BA0E18);
  __int16 v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *__int16 v7 = v3;
  v7[1] = sub_251C50DE4;
  return v9(a1, a2, a3);
}

uint64_t sub_251C50DE4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  id v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_251C50EE4(uint64_t a1)
{
  *(void *)(v1 + 24) = *(void *)a1;
  *(_WORD *)(v1 + 48) = *(_WORD *)(a1 + 8);
  *(unsigned char *)(v1 + 50) = *(unsigned char *)(a1 + 10);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_269BA1368 + dword_269BA1368);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v2;
  *id v2 = v1;
  v2[1] = sub_251C50F9C;
  return v4();
}

uint64_t sub_251C50F9C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C5109C, 0, 0);
}

uint64_t sub_251C5109C()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    HMHome.matterAccessories.getter();
    unint64_t v3 = v2;
    uint64_t v4 = (void *)sub_251A19364(MEMORY[0x263F8EE78]);
    uint64_t v5 = v1;
    uint64_t v6 = sub_251C513F8(v4, v3, v5);

    swift_bridgeObjectRelease();
    if (*(void *)(v6 + 16))
    {
      unint64_t v7 = sub_2519FE588(*(void *)(v0 + 24));
      if (v8)
      {
        uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
        uint64_t v10 = *v9;
        uint64_t v11 = v9[1];
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_251F350A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_26B21ECB8);
  id v13 = sub_251F35080();
  os_log_type_t v14 = sub_251F35FB0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = *(void *)(v0 + 24);
    char v23 = *(unsigned char *)(v0 + 50);
    __int16 v16 = *(_WORD *)(v0 + 48);
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)id v17 = 136315138;
    v24[0] = v18;
    v24[1] = v15;
    __int16 v25 = v16;
    char v26 = v23;
    uint64_t v19 = ClusterPath.description.getter();
    *(void *)(v0 + 16) = sub_251A00E84(v19, v20, v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v13, v14, "Couldn't find matter device for '%s'", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v18, -1, -1);
    MEMORY[0x2533AC760](v17, -1, -1);
  }

  uint64_t v10 = 0;
  uint64_t v11 = 0;
LABEL_11:
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v21(v10, v11);
}

id sub_251C51310()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = (void *)sub_251F35540();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithResponseValue_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_251F34A30();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_251C513F8(void *a1, unint64_t a2, void *a3)
{
  uint64_t v40 = a1;
  unint64_t v4 = a2;
  if (a2 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_251F366C0();
    if (v5) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    return (uint64_t)v40;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_31;
  }
LABEL_3:
  unint64_t v6 = v4 & 0xC000000000000001;
  uint64_t v7 = 4;
  char v8 = &off_26536F000;
  uint64_t v35 = a3;
  unint64_t v36 = v4;
  unint64_t v33 = v4 & 0xC000000000000001;
  uint64_t v34 = v5;
  while (1)
  {
    if (v6) {
      id v9 = (id)MEMORY[0x2533AB3A0](v7 - 4, v4);
    }
    else {
      id v9 = *(id *)(v4 + 8 * v7);
    }
    uint64_t v10 = v9;
    uint64_t v11 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    id v12 = [v9 (SEL)v8[243]];
    if (v12)
    {
      id v13 = v12;
      id v38 = 0;
      char v39 = 1;
      sub_251F36D80();

      if ((v39 & 1) == 0)
      {
        uint64_t v14 = (uint64_t)v38;
        if (v38) {
          break;
        }
      }
    }

LABEL_5:
    ++v7;
    if (v11 == v5) {
      goto LABEL_31;
    }
  }
  id v15 = sub_251D90BA4(v10);
  if (!v15)
  {

LABEL_26:
    char v8 = &off_26536F000;
    goto LABEL_5;
  }
  id v17 = v15;
  uint64_t v37 = v16;
  swift_unknownObjectRetain();
  a3 = v40;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v38 = a3;
  unint64_t v4 = sub_2519FE588(v14);
  uint64_t v20 = a3[2];
  BOOL v21 = (v19 & 1) == 0;
  uint64_t v22 = v20 + v21;
  if (__OFADD__(v20, v21)) {
    goto LABEL_28;
  }
  char v23 = v19;
  if (a3[3] >= v22)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a3 = &v38;
      sub_251A15A24();
    }
    goto LABEL_21;
  }
  sub_251A08638(v22, isUniquelyReferenced_nonNull_native);
  a3 = v38;
  unint64_t v24 = sub_2519FE588(v14);
  if ((v23 & 1) == (v25 & 1))
  {
    unint64_t v4 = v24;
LABEL_21:
    char v26 = v38;
    uint64_t v40 = v38;
    if (v23)
    {
      uint64_t v27 = (void *)(v38[7] + 16 * v4);
      swift_unknownObjectRelease();
      *uint64_t v27 = v17;
      v27[1] = v37;
    }
    else
    {
      v38[(v4 >> 6) + 8] |= 1 << v4;
      *(void *)(v26[6] + 8 * v4) = v14;
      uint64_t v28 = (void *)(v26[7] + 16 * v4);
      *uint64_t v28 = v17;
      v28[1] = v37;
      uint64_t v29 = v26[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_29;
      }
      void v26[2] = v31;
    }

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v35;
    unint64_t v4 = v36;
    unint64_t v6 = v33;
    uint64_t v5 = v34;
    goto LABEL_26;
  }
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251C5167C(uint64_t a1, int a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(_DWORD *)(v4 + 88) = a2;
  *(_WORD *)(v4 + 92) = *(_WORD *)(a1 + 8);
  *(unsigned char *)(v4 + 94) = *(unsigned char *)(a1 + 10);
  return MEMORY[0x270FA2498](sub_251C516B0, 0, 0);
}

uint64_t sub_251C516B0()
{
  uint64_t v1 = sub_251F36D40();
  v0[5] = v1;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = sub_251F36D60();
  v0[6] = v4;
  uint64_t v5 = sub_251F36D60();
  v0[7] = v5;
  unint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  id v6[2] = v2;
  v6[3] = v1;
  v6[4] = v4;
  v6[5] = v5;
  v6[6] = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
  *uint64_t v7 = v0;
  v7[1] = sub_251C5180C;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD00000000000003CLL, 0x8000000251F6F120, sub_251C51DDC, v6, v8);
}

uint64_t sub_251C5180C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251C5199C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_251C51928;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251C51928()
{
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void **)(v0 + 56);

  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_251C5199C()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void **)(v0 + 48);

  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t dispatch thunk of MatterDevice.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MatterDevice.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MatterDevice.descriptorCluster(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MatterDevice.defaultName(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MatterDevice.cluster<A>(of:endpointID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of MatterDevice.decodedAttribute(path:attribute:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of MatterDevice.decodedAttribute(path:attributeID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of MatterDevice.writeAttribute(path:attributeID:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of MatterDevice.decodedAttributeIfSupported(path:attribute:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of MatterDevice.clusterFeatureMap(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = (*(uint64_t (**)(void))(a3 + 80))();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t dispatch thunk of MatterDevice.attributeListForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of MatterDevice.commandListForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of MatterDevice.clusterRevisionForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))() & 0x1FFFF;
}

uint64_t dispatch thunk of MatterDevice.clientData(key:endpointID:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 112))(a1, a2 & 0x1FFFF);
}

uint64_t dispatch thunk of MatterDevice.setClientData(key:endpointID:value:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, void))(a5 + 120))(a1, a2 & 0x1FFFF);
}

uint64_t dispatch thunk of MatterDevice.getAttributeData(path:attributeID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of MatterDevice.performCommand(path:commandID:commandFields:expectedValues:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 136)
                                                                                     + **(int **)(a6 + 136));
  id v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *id v13 = v6;
  v13[1] = sub_251C51CE0;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_251C51CE0(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

void sub_251C51DDC(uint64_t a1)
{
  sub_251C507D4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_251C51DEC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251C51E80(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E38);
  return sub_251C50A6C(a1, a2);
}

uint64_t sub_251C51F08(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  os_log_type_t v64 = a1;
  uint64_t v63 = type metadata accessor for StaticService();
  uint64_t v5 = *(void *)(v63 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v63);
  uint64_t v65 = (uint64_t)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v53 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)v53 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (uint64_t)v53 - v14;
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v66 = a2 + 56;
  uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  v53[2] = -1 << *(unsigned char *)(a2 + 32);
  int64_t v67 = (unint64_t)(63 - v16) >> 6;
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v19 = 0;
  unint64_t v61 = a3;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v20 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v21 = v20 | (v19 << 6);
  while (1)
  {
    sub_251C0AC14(*(void *)(a2 + 48) + *(void *)(v5 + 72) * v21, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251C5900C((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (a3(v13))
    {
      uint64_t v26 = v62;
      sub_251C5900C((uint64_t)v13, v62, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v27 = v26;
      uint64_t v28 = v65;
      sub_251C5900C(v27, v65, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v29 = (uint64_t *)(v28 + *(int *)(v63 + 64));
      uint64_t v30 = v29[1];
      if (v30)
      {
        uint64_t v57 = *v29;
        uint64_t v31 = sub_251F34DA0();
        unint64_t v55 = v53;
        MEMORY[0x270FA5388](v31);
        unint64_t v33 = (char *)v53 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v59 = v35;
        uint64_t v60 = v34;
        v53[0] = *(void *)(v35 + 16);
        v53[1] = v35 + 16;
        ((void (*)(char *, uint64_t))v53[0])(v33, v65);
        uint64_t v58 = v30;
        swift_bridgeObjectRetain();
        unint64_t v36 = v64;
        LODWORD(v56) = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v68 = v36;
        unint64_t v38 = sub_2519FE584((uint64_t)v33);
        uint64_t v39 = v36[2];
        BOOL v40 = (v37 & 1) == 0;
        uint64_t v41 = v39 + v40;
        if (__OFADD__(v39, v40)) {
          goto LABEL_42;
        }
        if (v36[3] >= v41)
        {
          if ((v56 & 1) == 0)
          {
            unint64_t v56 = v38;
            LODWORD(v64) = v37;
            sub_251A17E7C();
            LOBYTE(v37) = (_BYTE)v64;
            unint64_t v38 = v56;
          }
        }
        else
        {
          LODWORD(v64) = v37;
          sub_251A0B8C8(v41, v56);
          unint64_t v42 = sub_2519FE584((uint64_t)v33);
          int v43 = v37 & 1;
          LOBYTE(v37) = (_BYTE)v64;
          if ((v64 & 1) != v43) {
            goto LABEL_45;
          }
          unint64_t v38 = v42;
        }
        uint64_t v44 = v68;
        os_log_type_t v64 = v68;
        uint64_t v54 = v33;
        if (v37)
        {
          uint64_t v45 = (void *)(v68[7] + 16 * v38);
          swift_bridgeObjectRelease();
          uint64_t v46 = v58;
          *uint64_t v45 = v57;
          v45[1] = v46;
        }
        else
        {
          unint64_t v56 = v38;
          v68[(v38 >> 6) + 8] |= 1 << v38;
          ((void (*)(unint64_t, char *, uint64_t))v53[0])(v44[6] + *(void *)(v59 + 72) * v38, v33, v60);
          unint64_t v47 = (void *)(v44[7] + 16 * v56);
          uint64_t v48 = v58;
          void *v47 = v57;
          v47[1] = v48;
          uint64_t v49 = v44[2];
          BOOL v50 = __OFADD__(v49, 1);
          uint64_t v51 = v49 + 1;
          if (v50) {
            goto LABEL_44;
          }
          v44[2] = v51;
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v60);
        uint64_t v28 = v65;
      }
      sub_251C59074(v28, (uint64_t (*)(void))type metadata accessor for StaticService);
      a3 = v61;
      if (v18) {
        goto LABEL_5;
      }
    }
    else
    {
      sub_251C59074((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v18) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v22 >= v67) {
      goto LABEL_40;
    }
    unint64_t v23 = *(void *)(v66 + 8 * v22);
    int64_t v24 = v19 + 1;
    if (!v23)
    {
      int64_t v24 = v19 + 2;
      if (v19 + 2 >= v67) {
        goto LABEL_40;
      }
      unint64_t v23 = *(void *)(v66 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v19 + 3;
        if (v19 + 3 >= v67) {
          goto LABEL_40;
        }
        unint64_t v23 = *(void *)(v66 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v19 + 4;
          if (v19 + 4 >= v67) {
            goto LABEL_40;
          }
          unint64_t v23 = *(void *)(v66 + 8 * v24);
          if (!v23)
          {
            int64_t v24 = v19 + 5;
            if (v19 + 5 >= v67) {
              goto LABEL_40;
            }
            unint64_t v23 = *(void *)(v66 + 8 * v24);
            if (!v23) {
              break;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    int64_t v19 = v24;
  }
  int64_t v25 = v19 + 6;
  if (v19 + 6 >= v67)
  {
LABEL_40:
    sub_251A1E630();
    swift_release();
    return (uint64_t)v64;
  }
  unint64_t v23 = *(void *)(v66 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v19 + 6;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v67) {
      goto LABEL_40;
    }
    unint64_t v23 = *(void *)(v66 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_30;
    }
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t SecurityAndAccessCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251C0AC14(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t SecurityAndAccessCategoryInformation.id.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SecurityAndAccessCategoryInformation();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SecurityAndAccessCategoryInformation()
{
  uint64_t result = qword_269BA0EB8;
  if (!qword_269BA0EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecurityAndAccessCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for SecurityAndAccessCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static SecurityAndAccessCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SecurityAndAccessCategoryInformation();
  if ((sub_251DB1CC8(*((unsigned char *)a1 + *(int *)(v4 + 20)), *((unsigned char *)a2 + *(int *)(v4 + 20))) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(uint64_t *)((char *)a1 + v5);
  uint64_t v7 = *(uint64_t *)((char *)a2 + v5);
  return sub_251B04FB8(v6, v7);
}

uint64_t SecurityAndAccessCategoryInformation.hash(into:)(long long *a1)
{
  StateSnapshot.hash(into:)(a1);
  uint64_t v3 = type metadata accessor for SecurityAndAccessCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_251A54A64(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t SecurityAndAccessCategoryInformation.hashValue.getter()
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v3);
  uint64_t v1 = type metadata accessor for SecurityAndAccessCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v3, *(void *)(v0 + *(int *)(v1 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251C528D0@<X0>(uint64_t a1@<X8>)
{
  return sub_251C0AC14(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t sub_251C52904()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_251AAD138(v0);
  _s13HomeDataModel18SecuritySummarizerV23securityIssueDictionary4fromSDyAA43StaticAccessoryServiceCharacteristicTripletVAA019IconTextValueStringB6HolderVGShyAA0jK0VG_tFZ_0(v1);
  swift_release();
  uint64_t v2 = sub_251F2793C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t SecurityAndAccessCategoryInformation.summary.getter()
{
  type metadata accessor for SecurityAndAccessCategoryInformation();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_251AAD138(v0);
  _s13HomeDataModel18SecuritySummarizerV23securityIssueDictionary4fromSDyAA43StaticAccessoryServiceCharacteristicTripletVAA019IconTextValueStringB6HolderVGShyAA0jK0VG_tFZ_0(v1);
  swift_release();
  uint64_t v2 = sub_251F2793C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t SecurityAndAccessCategoryInformation.shortSummary.getter()
{
  type metadata accessor for SecurityAndAccessCategoryInformation();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_251AAD138(v1);
  uint64_t v10 = v0;
  uint64_t v3 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251C57CDC, (uint64_t)v9, v2);
  swift_release();
  if (!v3) {
    return 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_251AAD138(v4);
  MEMORY[0x270FA5388](v5);
  v8[2] = v0;
  uint64_t v6 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251C59168, (uint64_t)v8, v5);
  swift_release();
  uint64_t v11 = v6;
  return sub_251F36AB0();
}

void *SecurityAndAccessCategoryInformation.statusItems.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E48);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v83 = (char *)&v77 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E50);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v81 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E58);
  MEMORY[0x270FA5388](v4 - 8);
  id v80 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E60);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v79 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E68);
  MEMORY[0x270FA5388](v8 - 8);
  char v78 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E78);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E80);
  MEMORY[0x270FA5388](v16 - 8);
  unint64_t v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E88);
  MEMORY[0x270FA5388](v19 - 8);
  unint64_t v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E90);
  MEMORY[0x270FA5388](v22 - 8);
  int64_t v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0E98);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_251AAC9B0();
  *(_OWORD *)&v87[56] = xmmword_251F499D0;
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_251EE9B0C(v29, (uint64_t)v27);
  uint64_t v30 = type metadata accessor for SecuritySystemStatusItem(0);
  int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v27, 1, v30);
  uint64_t v82 = &v88;
  if (v31 == 1)
  {
    sub_251A1B064((uint64_t)v27, &qword_269BA0E98);
    long long v88 = 0u;
    long long v89 = 0u;
    uint64_t v90 = 0;
  }
  else
  {
    *((void *)&v89 + 1) = v30;
    uint64_t v90 = &off_270277E28;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v88);
    sub_251C5900C((uint64_t)v27, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SecuritySystemStatusItem);
  }
  unint64_t v33 = (char **)swift_bridgeObjectRetain();
  sub_251C2256C(v33, (uint64_t)v24);
  uint64_t v34 = type metadata accessor for DoorLockStatusItem(0);
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v24, 1, v34);
  uint64_t v36 = (uint64_t)v79;
  if (v35 == 1)
  {
    sub_251A1B064((uint64_t)v24, &qword_269BA0E90);
    long long v91 = 0u;
    long long v92 = 0u;
    v93 = 0;
  }
  else
  {
    *((void *)&v92 + 1) = v34;
    v93 = &off_270277E50;
    int v37 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v91);
    sub_251C5900C((uint64_t)v24, (uint64_t)v37, type metadata accessor for DoorLockStatusItem);
  }
  uint64_t v38 = swift_bridgeObjectRetain();
  sub_251C238E0(v38, (uint64_t)v21);
  uint64_t v39 = type metadata accessor for GarageDoorStatusItem(0);
  int v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v21, 1, v39);
  uint64_t v41 = (uint64_t)v80;
  if (v40 == 1)
  {
    sub_251A1B064((uint64_t)v21, &qword_269BA0E88);
    long long v94 = 0u;
    long long v95 = 0u;
    v96 = 0;
  }
  else
  {
    *((void *)&v95 + 1) = v39;
    v96 = &off_270277E78;
    unint64_t v42 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v94);
    sub_251C5900C((uint64_t)v21, (uint64_t)v42, type metadata accessor for GarageDoorStatusItem);
  }
  uint64_t v43 = swift_bridgeObjectRetain();
  sub_251C24E98(v43, (uint64_t)v18);
  uint64_t v44 = type metadata accessor for DoorStatusItem(0);
  int v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v18, 1, v44);
  uint64_t v46 = (uint64_t)v81;
  if (v45 == 1)
  {
    sub_251A1B064((uint64_t)v18, &qword_269BA0E80);
    long long v97 = 0u;
    long long v98 = 0u;
    v99 = 0;
  }
  else
  {
    *((void *)&v98 + 1) = v44;
    v99 = &off_270277EA0;
    unint64_t v47 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v97);
    sub_251C5900C((uint64_t)v18, (uint64_t)v47, type metadata accessor for DoorStatusItem);
  }
  uint64_t v48 = swift_bridgeObjectRetain();
  sub_251C2650C(v48, (uint64_t)v15);
  uint64_t v49 = type metadata accessor for WindowStatusItem(0);
  int v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v15, 1, v49);
  uint64_t v51 = (uint64_t)v83;
  if (v50 == 1)
  {
    sub_251A1B064((uint64_t)v15, &qword_269BA0E78);
    long long v100 = 0u;
    long long v101 = 0u;
    v102 = 0;
  }
  else
  {
    *((void *)&v101 + 1) = v49;
    v102 = &off_270277EC8;
    uint64_t v52 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v100);
    sub_251C5900C((uint64_t)v15, (uint64_t)v52, type metadata accessor for WindowStatusItem);
  }
  uint64_t v53 = swift_bridgeObjectRetain();
  sub_251C53D54(v53, (uint64_t)v12);
  uint64_t v54 = type metadata accessor for SmokeAlarmStatusItem(0);
  int v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v12, 1, v54);
  uint64_t v56 = (uint64_t)v78;
  if (v55 == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_269BA0E70);
    long long v103 = 0u;
    long long v104 = 0u;
    v105 = 0;
  }
  else
  {
    *((void *)&v104 + 1) = v54;
    v105 = &off_270277EF0;
    uint64_t v57 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v103);
    sub_251C5900C((uint64_t)v12, (uint64_t)v57, type metadata accessor for SmokeAlarmStatusItem);
  }
  uint64_t v58 = swift_bridgeObjectRetain();
  sub_251C544B4(v58, v56);
  uint64_t v59 = type metadata accessor for CarbonDioxideAlarmStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v56, 1, v59) == 1)
  {
    sub_251A1B064(v56, &qword_269BA0E68);
    long long v106 = 0u;
    long long v107 = 0u;
    v108 = 0;
  }
  else
  {
    *((void *)&v107 + 1) = v59;
    v108 = &off_270277F18;
    uint64_t v60 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v106);
    sub_251C5900C(v56, (uint64_t)v60, type metadata accessor for CarbonDioxideAlarmStatusItem);
  }
  uint64_t v61 = swift_bridgeObjectRetain();
  sub_251C54C18(v61, v36);
  uint64_t v62 = type metadata accessor for CarbonMonoxideAlarmStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v36, 1, v62) == 1)
  {
    sub_251A1B064(v36, &qword_269BA0E60);
    long long v109 = 0u;
    long long v110 = 0u;
    v111 = 0;
  }
  else
  {
    *((void *)&v110 + 1) = v62;
    v111 = &off_270277F40;
    uint64_t v63 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v109);
    sub_251C5900C(v36, (uint64_t)v63, type metadata accessor for CarbonMonoxideAlarmStatusItem);
  }
  uint64_t v64 = swift_bridgeObjectRetain();
  sub_251C5537C(v64, v41);
  uint64_t v65 = type metadata accessor for ContactSensorStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48))(v41, 1, v65) == 1)
  {
    sub_251A1B064(v41, &qword_269BA0E58);
    long long v112 = 0u;
    long long v113 = 0u;
    v114 = 0;
  }
  else
  {
    *((void *)&v113 + 1) = v65;
    v114 = &off_270277F68;
    uint64_t v66 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v112);
    sub_251C5900C(v41, (uint64_t)v66, type metadata accessor for ContactSensorStatusItem);
  }
  uint64_t v67 = swift_bridgeObjectRetain();
  sub_251C55AE8(v67, v46);
  uint64_t v68 = type metadata accessor for MotionSensorStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 48))(v46, 1, v68) == 1)
  {
    sub_251A1B064(v46, &qword_269BA0E50);
    long long v115 = 0u;
    long long v116 = 0u;
    v117 = 0;
  }
  else
  {
    *((void *)&v116 + 1) = v68;
    v117 = &off_270277F90;
    unint64_t v69 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v115);
    sub_251C5900C(v46, (uint64_t)v69, type metadata accessor for MotionSensorStatusItem);
  }
  sub_251C56254(v28, v51);
  uint64_t v70 = type metadata accessor for OccupancySensorStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48))(v51, 1, v70) == 1)
  {
    sub_251A1B064(v51, &qword_269BA0E48);
    long long v118 = 0u;
    long long v119 = 0u;
    v120 = 0;
  }
  else
  {
    *((void *)&v119 + 1) = v70;
    v120 = &off_270277FB8;
    unint64_t v71 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v118);
    sub_251C5900C(v51, (uint64_t)v71, type metadata accessor for OccupancySensorStatusItem);
  }
  uint64_t v72 = (void *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; i != 472; i += 40)
  {
    sub_251A1B128((uint64_t)&v87[i + 40], (uint64_t)v87, &qword_269B9D720);
    sub_251AAFC70((uint64_t)v87, (uint64_t)&v84);
    if (v85)
    {
      sub_251A1A444(&v84, (uint64_t)v86);
      sub_251A1A444(v86, (uint64_t)&v84);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v72 = sub_251F0FD30(0, v72[2] + 1, 1, v72);
      }
      unint64_t v75 = v72[2];
      unint64_t v74 = v72[3];
      if (v75 >= v74 >> 1) {
        uint64_t v72 = sub_251F0FD30((void *)(v74 > 1), v75 + 1, 1, v72);
      }
      v72[2] = v75 + 1;
      sub_251A1A444(&v84, (uint64_t)&v72[5 * v75 + 4]);
    }
    else
    {
      sub_251A1B064((uint64_t)&v84, &qword_269B9D720);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D720);
  swift_arrayDestroy();
  return v72;
}

uint64_t sub_251C5378C@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5 = *a2;
  return SecurityAndAccessCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)(a1, &v5, a3, a4);
}

uint64_t SecurityAndAccessCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v27[0] = a4;
  uint64_t v7 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SecurityAndAccessCategoryInformation();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v17 = *a2;
  sub_251C0AC14(a1, (uint64_t)v16, type metadata accessor for StateSnapshot);
  v16[*(int *)(v13 + 20)] = 4;
  sub_251A1B128(a3, (uint64_t)v12, &qword_269B9D138);
  uint64_t v18 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v12, 1, v18) == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_269B9D138);
    sub_251C0AC14(a1, (uint64_t)v9, type metadata accessor for StateSnapshot);
    uint64_t v19 = v27[0];
  }
  else
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_251EDCBC8(v20);
    sub_251C59074((uint64_t)v12, type metadata accessor for StaticRoom);
    sub_251C0AC14(a1, (uint64_t)v9, type metadata accessor for StateSnapshot);
    uint64_t v19 = v27[0];
    if (v21) {
      goto LABEL_5;
    }
  }
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_251EDCBC8(v22);
LABEL_5:
  sub_251C59074((uint64_t)v9, type metadata accessor for StateSnapshot);
  uint64_t v23 = sub_251AAD29C(v21, v17);
  *(void *)&v16[*(int *)(v13 + 24)] = v23;
  uint64_t v24 = *(void *)(v23 + 16);
  sub_251A1B064(a3, &qword_269B9D138);
  sub_251C59074(a1, type metadata accessor for StateSnapshot);
  if (v24)
  {
    sub_251C5900C((uint64_t)v16, v19, (uint64_t (*)(void))type metadata accessor for SecurityAndAccessCategoryInformation);
    uint64_t v25 = 0;
  }
  else
  {
    sub_251C59074((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SecurityAndAccessCategoryInformation);
    uint64_t v25 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, v25, 1, v13);
}

uint64_t SecurityAndAccessCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251C53B18(long long *a1, uint64_t a2)
{
  StateSnapshot.hash(into:)(a1);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));
  return sub_251A54A64(a1, v5);
}

uint64_t sub_251C53C30(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v5);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251C53D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v57 - v14;
  *(unsigned char *)(swift_allocObject() + 16) = 37;
  uint64_t v15 = sub_251C51F08(MEMORY[0x263F8EE80], a1, (uint64_t (*)(void))sub_251C5915C);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16 == 1)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0EC8);
    MEMORY[0x270FA5388](v17 - 8);
    uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_251ABDDD0(v20, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D988);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) == 1)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v19, &qword_269BA0EC8);
      goto LABEL_6;
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v28 = (uint64_t *)&v19[*(int *)(v21 + 48)];
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v58 = v30;
    uint64_t v59 = a2;
    uint64_t v64 = v29;
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v19, v31);
  }
  else
  {
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v22 = type metadata accessor for SmokeAlarmStatusItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v59 = a2;
    static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F6F1A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v25 = *(void *)(v15 + 16);
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v25;
    uint64_t v58 = sub_251F35710();
    uint64_t v64 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v63 = &v57;
  uint64_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
  MEMORY[0x270FA5388](v32 - 8);
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))((char *)&v57 - v34, 1, 1, v35);
  uint64_t v37 = static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6F2D0);
  uint64_t v61 = v38;
  uint64_t v62 = v37;
  uint64_t v60 = &v57;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v57 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  unint64_t v42 = (char *)&v57 - v34;
  sub_251A1B128((uint64_t)&v57 - v34, (uint64_t)&v57 - v34, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)&v57 - v34, 1, v35) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v42, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v43(v41, v42, v35);
  }
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  v43(v13, v41, v35);
  uint64_t v46 = &v13[v10[5]];
  *(void *)uint64_t v46 = 0x69662E656B6F6D73;
  *((void *)v46 + 1) = 0xEA00000000006C6CLL;
  unint64_t v47 = &v13[v10[6]];
  uint64_t v48 = v61;
  *(void *)unint64_t v47 = v62;
  *((void *)v47 + 1) = v48;
  uint64_t v49 = &v13[v10[7]];
  uint64_t v50 = v64;
  *(void *)uint64_t v49 = v44;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = &v13[v10[8]];
  *(void *)uint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  *((void *)v51 + 2) = 0;
  v51[24] = -1;
  uint64_t v52 = v68;
  uint64_t v53 = sub_251C5900C((uint64_t)v13, v68, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  MEMORY[0x270FA5388](v53);
  *((unsigned char *)&v57 - 32) = 0;
  *(&v57 - 3) = v15;
  *((unsigned char *)&v57 - 16) = 37;
  uint64_t v69 = type metadata accessor for StaticService();
  uint64_t v54 = (uint64_t)v65;
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = (uint64_t)v67;
  sub_251C5900C(v54, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  sub_251C5900C(v52, v45, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  uint64_t v56 = type metadata accessor for SmokeAlarmStatusItem(0);
  sub_251C5900C(v55, v45 + *(int *)(v56 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
  *(unsigned char *)(v45 + *(int *)(v56 + 24)) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v45, 0, 1, v56);
}

uint64_t sub_251C544B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v57 - v14;
  *(unsigned char *)(swift_allocObject() + 16) = 9;
  uint64_t v15 = sub_251C51F08(MEMORY[0x263F8EE80], a1, (uint64_t (*)(void))sub_251C59144);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16 == 1)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0EC8);
    MEMORY[0x270FA5388](v17 - 8);
    uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_251ABDDD0(v20, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D988);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) == 1)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v19, &qword_269BA0EC8);
      goto LABEL_6;
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v28 = (uint64_t *)&v19[*(int *)(v21 + 48)];
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v58 = v30;
    uint64_t v59 = a2;
    uint64_t v64 = v29;
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v19, v31);
  }
  else
  {
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v22 = type metadata accessor for CarbonDioxideAlarmStatusItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v59 = a2;
    static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F6F1A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v25 = *(void *)(v15 + 16);
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v25;
    uint64_t v58 = sub_251F35710();
    uint64_t v64 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v63 = &v57;
  uint64_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
  MEMORY[0x270FA5388](v32 - 8);
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))((char *)&v57 - v34, 1, 1, v35);
  uint64_t v37 = static String.hfLocalized(_:)(0xD000000000000015, 0x8000000251F6F2B0);
  uint64_t v61 = v38;
  uint64_t v62 = v37;
  uint64_t v60 = &v57;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v57 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  unint64_t v42 = (char *)&v57 - v34;
  sub_251A1B128((uint64_t)&v57 - v34, (uint64_t)&v57 - v34, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)&v57 - v34, 1, v35) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v42, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v43(v41, v42, v35);
  }
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  v43(v13, v41, v35);
  uint64_t v46 = &v13[v10[5]];
  *(void *)uint64_t v46 = 0xD000000000000019;
  *((void *)v46 + 1) = 0x8000000251F6F290;
  unint64_t v47 = &v13[v10[6]];
  uint64_t v48 = v61;
  *(void *)unint64_t v47 = v62;
  *((void *)v47 + 1) = v48;
  uint64_t v49 = &v13[v10[7]];
  uint64_t v50 = v64;
  *(void *)uint64_t v49 = v44;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = &v13[v10[8]];
  *(void *)uint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  *((void *)v51 + 2) = 0;
  v51[24] = -1;
  uint64_t v52 = v68;
  uint64_t v53 = sub_251C5900C((uint64_t)v13, v68, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  MEMORY[0x270FA5388](v53);
  *((unsigned char *)&v57 - 32) = 0;
  *(&v57 - 3) = v15;
  *((unsigned char *)&v57 - 16) = 9;
  uint64_t v69 = type metadata accessor for StaticService();
  uint64_t v54 = (uint64_t)v65;
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = (uint64_t)v67;
  sub_251C5900C(v54, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  sub_251C5900C(v52, v45, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  uint64_t v56 = type metadata accessor for CarbonDioxideAlarmStatusItem(0);
  sub_251C5900C(v55, v45 + *(int *)(v56 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
  *(unsigned char *)(v45 + *(int *)(v56 + 24)) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v45, 0, 1, v56);
}

uint64_t sub_251C54C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v57 - v14;
  *(unsigned char *)(swift_allocObject() + 16) = 10;
  uint64_t v15 = sub_251C51F08(MEMORY[0x263F8EE80], a1, (uint64_t (*)(void))sub_251C5912C);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16 == 1)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0EC8);
    MEMORY[0x270FA5388](v17 - 8);
    uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_251ABDDD0(v20, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D988);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) == 1)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v19, &qword_269BA0EC8);
      goto LABEL_6;
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v28 = (uint64_t *)&v19[*(int *)(v21 + 48)];
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v58 = v30;
    uint64_t v59 = a2;
    uint64_t v64 = v29;
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v19, v31);
  }
  else
  {
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v22 = type metadata accessor for CarbonMonoxideAlarmStatusItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v59 = a2;
    static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F6F1A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v25 = *(void *)(v15 + 16);
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v25;
    uint64_t v58 = sub_251F35710();
    uint64_t v64 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v63 = &v57;
  uint64_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
  MEMORY[0x270FA5388](v32 - 8);
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))((char *)&v57 - v34, 1, 1, v35);
  uint64_t v37 = static String.hfLocalized(_:)(0xD000000000000014, 0x8000000251F6F270);
  uint64_t v61 = v38;
  uint64_t v62 = v37;
  uint64_t v60 = &v57;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v57 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  unint64_t v42 = (char *)&v57 - v34;
  sub_251A1B128((uint64_t)&v57 - v34, (uint64_t)&v57 - v34, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)&v57 - v34, 1, v35) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v42, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v43(v41, v42, v35);
  }
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  v43(v13, v41, v35);
  uint64_t v46 = &v13[v10[5]];
  *(void *)uint64_t v46 = 0xD00000000000001ALL;
  *((void *)v46 + 1) = 0x8000000251F6F250;
  unint64_t v47 = &v13[v10[6]];
  uint64_t v48 = v61;
  *(void *)unint64_t v47 = v62;
  *((void *)v47 + 1) = v48;
  uint64_t v49 = &v13[v10[7]];
  uint64_t v50 = v64;
  *(void *)uint64_t v49 = v44;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = &v13[v10[8]];
  *(void *)uint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  *((void *)v51 + 2) = 0;
  v51[24] = -1;
  uint64_t v52 = v68;
  uint64_t v53 = sub_251C5900C((uint64_t)v13, v68, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  MEMORY[0x270FA5388](v53);
  *((unsigned char *)&v57 - 32) = 0;
  *(&v57 - 3) = v15;
  *((unsigned char *)&v57 - 16) = 10;
  uint64_t v69 = type metadata accessor for StaticService();
  uint64_t v54 = (uint64_t)v65;
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = (uint64_t)v67;
  sub_251C5900C(v54, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  sub_251C5900C(v52, v45, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  uint64_t v56 = type metadata accessor for CarbonMonoxideAlarmStatusItem(0);
  sub_251C5900C(v55, v45 + *(int *)(v56 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
  *(unsigned char *)(v45 + *(int *)(v56 + 24)) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v45, 0, 1, v56);
}

uint64_t sub_251C5537C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v57 - v14;
  *(unsigned char *)(swift_allocObject() + 16) = 11;
  uint64_t v15 = sub_251C51F08(MEMORY[0x263F8EE80], a1, (uint64_t (*)(void))sub_251C59114);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16 == 1)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0EC8);
    MEMORY[0x270FA5388](v17 - 8);
    uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_251ABDDD0(v20, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D988);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) == 1)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v19, &qword_269BA0EC8);
      goto LABEL_6;
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v28 = (uint64_t *)&v19[*(int *)(v21 + 48)];
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v58 = v30;
    uint64_t v59 = a2;
    uint64_t v64 = v29;
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v19, v31);
  }
  else
  {
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v22 = type metadata accessor for ContactSensorStatusItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v59 = a2;
    static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F6F1A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v25 = *(void *)(v15 + 16);
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v25;
    uint64_t v58 = sub_251F35710();
    uint64_t v64 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v63 = &v57;
  uint64_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
  MEMORY[0x270FA5388](v32 - 8);
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))((char *)&v57 - v34, 1, 1, v35);
  uint64_t v37 = static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6F230);
  uint64_t v61 = v38;
  uint64_t v62 = v37;
  uint64_t v60 = &v57;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v57 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  unint64_t v42 = (char *)&v57 - v34;
  sub_251A1B128((uint64_t)&v57 - v34, (uint64_t)&v57 - v34, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)&v57 - v34, 1, v35) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v42, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v43(v41, v42, v35);
  }
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  v43(v13, v41, v35);
  uint64_t v46 = &v13[v10[5]];
  *(void *)uint64_t v46 = 0xD000000000000013;
  *((void *)v46 + 1) = 0x8000000251F653B0;
  unint64_t v47 = &v13[v10[6]];
  uint64_t v48 = v61;
  *(void *)unint64_t v47 = v62;
  *((void *)v47 + 1) = v48;
  uint64_t v49 = &v13[v10[7]];
  uint64_t v50 = v64;
  *(void *)uint64_t v49 = v44;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = &v13[v10[8]];
  *(void *)uint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  *((void *)v51 + 2) = 0;
  v51[24] = -1;
  uint64_t v52 = v68;
  uint64_t v53 = sub_251C5900C((uint64_t)v13, v68, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  MEMORY[0x270FA5388](v53);
  *((unsigned char *)&v57 - 32) = 1;
  *(&v57 - 3) = v15;
  *((unsigned char *)&v57 - 16) = 11;
  uint64_t v69 = type metadata accessor for StaticService();
  uint64_t v54 = (uint64_t)v65;
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = (uint64_t)v67;
  sub_251C5900C(v54, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  sub_251C5900C(v52, v45, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  uint64_t v56 = type metadata accessor for ContactSensorStatusItem(0);
  sub_251C5900C(v55, v45 + *(int *)(v56 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
  *(unsigned char *)(v45 + *(int *)(v56 + 24)) = 2;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v45, 0, 1, v56);
}

uint64_t sub_251C55AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v57 - v14;
  *(unsigned char *)(swift_allocObject() + 16) = 32;
  uint64_t v15 = sub_251C51F08(MEMORY[0x263F8EE80], a1, sub_251C590FC);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16 == 1)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0EC8);
    MEMORY[0x270FA5388](v17 - 8);
    uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_251ABDDD0(v20, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D988);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) == 1)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v19, &qword_269BA0EC8);
      goto LABEL_6;
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v28 = (uint64_t *)&v19[*(int *)(v21 + 48)];
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v58 = v30;
    uint64_t v59 = a2;
    uint64_t v64 = v29;
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v19, v31);
  }
  else
  {
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v22 = type metadata accessor for MotionSensorStatusItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v59 = a2;
    static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F6F1A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v25 = *(void *)(v15 + 16);
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v25;
    uint64_t v58 = sub_251F35710();
    uint64_t v64 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v63 = &v57;
  uint64_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
  MEMORY[0x270FA5388](v32 - 8);
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))((char *)&v57 - v34, 1, 1, v35);
  uint64_t v37 = static String.hfLocalized(_:)(0xD000000000000018, 0x8000000251F6F210);
  uint64_t v61 = v38;
  uint64_t v62 = v37;
  uint64_t v60 = &v57;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v57 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  unint64_t v42 = (char *)&v57 - v34;
  sub_251A1B128((uint64_t)&v57 - v34, (uint64_t)&v57 - v34, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)&v57 - v34, 1, v35) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v42, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v43(v41, v42, v35);
  }
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  v43(v13, v41, v35);
  uint64_t v46 = &v13[v10[5]];
  *(void *)uint64_t v46 = 0xD000000000000012;
  *((void *)v46 + 1) = 0x8000000251F6F1F0;
  unint64_t v47 = &v13[v10[6]];
  uint64_t v48 = v61;
  *(void *)unint64_t v47 = v62;
  *((void *)v47 + 1) = v48;
  uint64_t v49 = &v13[v10[7]];
  uint64_t v50 = v64;
  *(void *)uint64_t v49 = v44;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = &v13[v10[8]];
  *(void *)uint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  *((void *)v51 + 2) = 0;
  v51[24] = -1;
  uint64_t v52 = v68;
  uint64_t v53 = sub_251C5900C((uint64_t)v13, v68, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  MEMORY[0x270FA5388](v53);
  *((unsigned char *)&v57 - 32) = 1;
  *(&v57 - 3) = v15;
  *((unsigned char *)&v57 - 16) = 32;
  uint64_t v69 = type metadata accessor for StaticService();
  uint64_t v54 = (uint64_t)v65;
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = (uint64_t)v67;
  sub_251C5900C(v54, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  sub_251C5900C(v52, v45, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  uint64_t v56 = type metadata accessor for MotionSensorStatusItem(0);
  sub_251C5900C(v55, v45 + *(int *)(v56 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
  *(unsigned char *)(v45 + *(int *)(v56 + 24)) = 2;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v45, 0, 1, v56);
}

uint64_t sub_251C56254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v59 - v8;
  uint64_t v10 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (uint64_t)&v59 - v14;
  *(unsigned char *)(swift_allocObject() + 16) = 33;
  uint64_t v15 = sub_251C51F08(MEMORY[0x263F8EE80], a1, (uint64_t (*)(void))sub_251C590E4);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16 == 1)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0EC8);
    MEMORY[0x270FA5388](v17 - 8);
    uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_251ABDDD0(v20, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D988);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) == 1)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v19, &qword_269BA0EC8);
      goto LABEL_6;
    }
    uint64_t v67 = v7;
    uint64_t v68 = v4;
    uint64_t v69 = v9;
    uint64_t v28 = (uint64_t *)&v19[*(int *)(v21 + 48)];
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v60 = v30;
    uint64_t v61 = a2;
    uint64_t v66 = v29;
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v19, v31);
  }
  else
  {
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v22 = type metadata accessor for OccupancySensorStatusItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
    }
    uint64_t v67 = v7;
    uint64_t v68 = v4;
    uint64_t v69 = v9;
    uint64_t v61 = a2;
    static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F6F1A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v25 = *(void *)(v15 + 16);
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v25;
    uint64_t v60 = sub_251F35710();
    uint64_t v66 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v65 = &v59;
  uint64_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
  MEMORY[0x270FA5388](v32 - 8);
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))((char *)&v59 - v34, 1, 1, v35);
  uint64_t v37 = static String.hfLocalized(_:)(0xD00000000000001BLL, 0x8000000251F6F1D0);
  uint64_t v63 = v38;
  uint64_t v64 = v37;
  uint64_t v62 = &v59;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v59 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  unint64_t v42 = (char *)&v59 - v34;
  sub_251A1B128((uint64_t)&v59 - v34, (uint64_t)&v59 - v34, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)&v59 - v34, 1, v35) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)&v59 - v34, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v42, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    sub_251A1B064((uint64_t)&v59 - v34, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v43(v41, v42, v35);
  }
  uint64_t v44 = v60;
  uint64_t v45 = v61;
  v43(v13, v41, v35);
  uint64_t v46 = &v13[v10[5]];
  *(void *)uint64_t v46 = 0x772E657275676966;
  *((void *)v46 + 1) = 0xEB000000006B6C61;
  unint64_t v47 = &v13[v10[6]];
  uint64_t v48 = v63;
  *(void *)unint64_t v47 = v64;
  *((void *)v47 + 1) = v48;
  uint64_t v49 = &v13[v10[7]];
  uint64_t v50 = v66;
  *(void *)uint64_t v49 = v44;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = &v13[v10[8]];
  *(void *)uint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  *((void *)v51 + 2) = 0;
  v51[24] = -1;
  uint64_t v52 = v70;
  uint64_t v53 = sub_251C5900C((uint64_t)v13, v70, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  MEMORY[0x270FA5388](v53);
  *((unsigned char *)&v59 - 32) = 1;
  *(&v59 - 3) = v15;
  *((unsigned char *)&v59 - 16) = v54;
  uint64_t v71 = type metadata accessor for StaticService();
  uint64_t v55 = (uint64_t)v67;
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  uint64_t v56 = v55;
  uint64_t v57 = (uint64_t)v69;
  sub_251C5900C(v56, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  sub_251C5900C(v52, v45, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  uint64_t v58 = type metadata accessor for OccupancySensorStatusItem(0);
  sub_251C5900C(v57, v45 + *(int *)(v58 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
  *(unsigned char *)(v45 + *(int *)(v58 + 24)) = 3;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v45, 0, 1, v58);
}

uint64_t sub_251C569C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v57 - v14;
  *(unsigned char *)(swift_allocObject() + 16) = 26;
  uint64_t v15 = sub_251C51F08(MEMORY[0x263F8EE80], a1, (uint64_t (*)(void))sub_251C58FF4);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16 == 1)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0EC8);
    MEMORY[0x270FA5388](v17 - 8);
    uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_251ABDDD0(v20, (uint64_t)v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D988);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) == 1)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v19, &qword_269BA0EC8);
      goto LABEL_6;
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v28 = (uint64_t *)&v19[*(int *)(v21 + 48)];
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v58 = v30;
    uint64_t v59 = a2;
    uint64_t v64 = v29;
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v19, v31);
  }
  else
  {
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v22 = type metadata accessor for LeakAlarmStatusItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
    }
    uint64_t v65 = v7;
    uint64_t v66 = v4;
    uint64_t v67 = v9;
    uint64_t v59 = a2;
    static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F6F1A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v25 = *(void *)(v15 + 16);
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v25;
    uint64_t v58 = sub_251F35710();
    uint64_t v64 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v63 = &v57;
  uint64_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
  MEMORY[0x270FA5388](v32 - 8);
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))((char *)&v57 - v34, 1, 1, v35);
  uint64_t v37 = static String.hfLocalized(_:)(0xD000000000000016, 0x8000000251F6F180);
  uint64_t v61 = v38;
  uint64_t v62 = v37;
  uint64_t v60 = &v57;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v57 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  unint64_t v42 = (char *)&v57 - v34;
  sub_251A1B128((uint64_t)&v57 - v34, (uint64_t)&v57 - v34, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)&v57 - v34, 1, v35) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v42, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    sub_251A1B064((uint64_t)&v57 - v34, &qword_26B21FF90);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v43(v41, v42, v35);
  }
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  v43(v13, v41, v35);
  uint64_t v46 = &v13[v10[5]];
  *(void *)uint64_t v46 = 0xD000000000000012;
  *((void *)v46 + 1) = 0x8000000251F65570;
  unint64_t v47 = &v13[v10[6]];
  uint64_t v48 = v61;
  *(void *)unint64_t v47 = v62;
  *((void *)v47 + 1) = v48;
  uint64_t v49 = &v13[v10[7]];
  uint64_t v50 = v64;
  *(void *)uint64_t v49 = v44;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = &v13[v10[8]];
  *(void *)uint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  *((void *)v51 + 2) = 0;
  v51[24] = -1;
  uint64_t v52 = v68;
  uint64_t v53 = sub_251C5900C((uint64_t)v13, v68, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  MEMORY[0x270FA5388](v53);
  *((unsigned char *)&v57 - 32) = 0;
  *(&v57 - 3) = v15;
  *((unsigned char *)&v57 - 16) = 26;
  uint64_t v69 = type metadata accessor for StaticService();
  uint64_t v54 = (uint64_t)v65;
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = (uint64_t)v67;
  sub_251C5900C(v54, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  sub_251C5900C(v52, v45, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  uint64_t v56 = type metadata accessor for LeakAlarmStatusItem(0);
  sub_251C5900C(v55, v45 + *(int *)(v56 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
  *(unsigned char *)(v45 + *(int *)(v56 + 24)) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v45, 0, 1, v56);
}

BOOL sub_251C57124(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *(unsigned char *)(a1 + *(int *)(v5 + 88));
  char v18 = a2;
  unint64_t v8 = ServiceKind.rawValue.getter();
  uint64_t v10 = v9;
  if (v8 == ServiceKind.rawValue.getter() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v13 = 0;
    if ((v12 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v17 = *(void *)&v7[*(int *)(v4 + 112)];
  char v16 = 89;
  Swift::Int_optional v20 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v16);
  BOOL v13 = !v20.is_nil && v20.value == 1;
LABEL_8:
  sub_251C59074((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v13;
}

uint64_t sub_251C572BC(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *(unsigned char *)(a1 + *(int *)(v5 + 88));
  char v18 = a2;
  unint64_t v8 = ServiceKind.rawValue.getter();
  uint64_t v10 = v9;
  if (v8 == ServiceKind.rawValue.getter() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_5:
    uint64_t v17 = *(void *)&v7[*(int *)(v4 + 112)];
    unsigned __int8 v16 = 83;
    uint64_t v13 = sub_251B457DC(&v16) & 1;
    goto LABEL_6;
  }
  char v12 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v13 = 0;
  if (v12) {
    goto LABEL_5;
  }
LABEL_6:
  sub_251C59074((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v13;
}

BOOL sub_251C57448(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = &v19[-v9];
  char v23 = *(unsigned char *)(a1 + *(int *)(v8 + 88));
  char v22 = a2;
  unint64_t v11 = ServiceKind.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == ServiceKind.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    sub_251C0AC14(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_5;
  }
  char v15 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251C0AC14(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
  BOOL v16 = 0;
  if (v15)
  {
LABEL_5:
    uint64_t v21 = *(void *)&v10[*(int *)(v4 + 112)];
    char v20 = 28;
    Swift::Int_optional v24 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v20);
    if (v24.is_nil)
    {
      sub_251C0AC14((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    else
    {
      Swift::Int value = v24.value;
      sub_251C0AC14((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (value == 1)
      {
        BOOL v16 = v7[*(int *)(v4 + 96)] == 53;
LABEL_10:
        sub_251C59074((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
        goto LABEL_11;
      }
    }
    BOOL v16 = 0;
    goto LABEL_10;
  }
LABEL_11:
  sub_251C59074((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v16;
}

BOOL sub_251C5767C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *(unsigned char *)(a1 + *(int *)(v5 + 88));
  char v18 = a2;
  unint64_t v8 = ServiceKind.rawValue.getter();
  uint64_t v10 = v9;
  if (v8 == ServiceKind.rawValue.getter() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v13 = 0;
    if ((v12 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v17 = *(void *)&v7[*(int *)(v4 + 112)];
  char v16 = 21;
  Swift::Int_optional v20 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v16);
  BOOL v13 = !v20.is_nil && v20.value == 1;
LABEL_8:
  sub_251C59074((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v13;
}

BOOL sub_251C57814(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *(unsigned char *)(a1 + *(int *)(v5 + 88));
  char v18 = a2;
  unint64_t v8 = ServiceKind.rawValue.getter();
  uint64_t v10 = v9;
  if (v8 == ServiceKind.rawValue.getter() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v13 = 0;
    if ((v12 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v17 = *(void *)&v7[*(int *)(v4 + 112)];
  char v16 = 18;
  Swift::Int_optional v20 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v16);
  BOOL v13 = !v20.is_nil && v20.value == 1;
LABEL_8:
  sub_251C59074((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v13;
}

BOOL sub_251C579AC(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *(unsigned char *)(a1 + *(int *)(v5 + 88));
  char v18 = a2;
  unint64_t v8 = ServiceKind.rawValue.getter();
  uint64_t v10 = v9;
  if (v8 == ServiceKind.rawValue.getter() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v13 = 0;
    if ((v12 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v17 = *(void *)&v7[*(int *)(v4 + 112)];
  char v16 = 127;
  Swift::Int_optional v20 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v16);
  BOOL v13 = !v20.is_nil && v20.value == 1;
LABEL_8:
  sub_251C59074((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v13;
}

BOOL sub_251C57B44(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *(unsigned char *)(a1 + *(int *)(v5 + 88));
  char v18 = a2;
  unint64_t v8 = ServiceKind.rawValue.getter();
  uint64_t v10 = v9;
  if (v8 == ServiceKind.rawValue.getter() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251C0AC14(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v13 = 0;
    if ((v12 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v17 = *(void *)&v7[*(int *)(v4 + 112)];
  char v16 = 74;
  Swift::Int_optional v20 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v16);
  BOOL v13 = !v20.is_nil && v20.value == 1;
LABEL_8:
  sub_251C59074((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v13;
}

uint64_t sub_251C57CDC(void *a1, uint64_t a2)
{
  return sub_251AACDA0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_251C57CF8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_251C57D94(&qword_269BA0EA0);
  uint64_t result = sub_251C57D94(&qword_269BA0EA8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_251C57D60()
{
  return sub_251C57D94(&qword_269BA0EB0);
}

uint64_t sub_251C57D94(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SecurityAndAccessCategoryInformation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *assignWithCopy for SecurityAndAccessCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v56[5];
  uint64_t v55 = a1;
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v53 + 24);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  char v12 = &v6[v11];
  BOOL v13 = &v7[v11];
  *(void *)char v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10[6];
  uint64_t v15 = &v6[v14];
  char v16 = &v7[v14];
  v9(&v6[v14], &v7[v14], v8);
  uint64_t v17 = v9;
  char v18 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v19 = v18[5];
  Swift::Int_optional v20 = &v15[v19];
  uint64_t v21 = &v16[v19];
  *(void *)Swift::Int_optional v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v18[6]] = v16[v18[6]];
  *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v15[v18[8]], &v16[v18[8]], v8);
  *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[11]] = *(void *)&v16[v18[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[12]] = *(void *)&v16[v18[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[14]] = *(void *)&v16[v18[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[17]] = *(void *)&v16[v18[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[18]] = *(void *)&v16[v18[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v10[7];
  char v23 = &v6[v22];
  Swift::Int_optional v24 = &v7[v22];
  v17(&v6[v22], &v7[v22], v8);
  uint64_t v25 = (int *)type metadata accessor for StaticUser();
  uint64_t v26 = v25[5];
  uint64_t v27 = &v23[v26];
  uint64_t v28 = &v24[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v23[v25[6]], &v24[v25[6]], v8);
  v23[v25[7]] = v24[v25[7]];
  v23[v25[8]] = v24[v25[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v29 = v10[20];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  uint64_t v32 = (int *)type metadata accessor for StaticResident();
  uint64_t v33 = *((void *)v32 - 1);
  unint64_t v34 = *(uint64_t (**)(char *, uint64_t, int *))(v33 + 48);
  LODWORD(v23) = v34(v30, 1, v32);
  int v35 = v34(v31, 1, v32);
  if (!v23)
  {
    if (!v35)
    {
      v17(v30, v31, v8);
      uint64_t v47 = v32[5];
      uint64_t v48 = &v30[v47];
      uint64_t v49 = &v31[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = *((void *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v50 = v32[6];
      uint64_t v51 = &v30[v50];
      uint64_t v52 = &v31[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      *((void *)v51 + 1) = *((void *)v52 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
      v17(&v30[v32[10]], &v31[v32[10]], v8);
      goto LABEL_7;
    }
    sub_251C59074((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v35)
  {
LABEL_6:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v30, v31, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v36(v30, v31, v8);
  uint64_t v37 = v32[5];
  uint64_t v38 = &v30[v37];
  uint64_t v39 = &v31[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  uint64_t v40 = v32[6];
  uint64_t v41 = &v30[v40];
  unint64_t v42 = &v31[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
  *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
  *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
  uint64_t v43 = v32[10];
  uint64_t v54 = &v30[v43];
  uint64_t v44 = &v31[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36(v54, v44, v8);
  (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
LABEL_7:
  *(void *)((char *)v55 + v56[6]) = *(void *)((char *)a2 + v56[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[7]) = *(void *)((char *)a2 + v56[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[8]) = *(void *)((char *)a2 + v56[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[9]) = *(void *)((char *)a2 + v56[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[10]) = *(void *)((char *)a2 + v56[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[11]) = *(void *)((char *)a2 + v56[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[12]) = *(void *)((char *)a2 + v56[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[13]) = *(void *)((char *)a2 + v56[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[14]) = *(void *)((char *)a2 + v56[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[15]) = *(void *)((char *)a2 + v56[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[16]) = *(void *)((char *)a2 + v56[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[17]) = *(void *)((char *)a2 + v56[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[18]) = *(void *)((char *)a2 + v56[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[19]) = *(void *)((char *)a2 + v56[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v55 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)v55 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v55;
}

void *assignWithTake for SecurityAndAccessCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v57 = a2;
  uint64_t v58 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v58[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v55 + 40);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  char v12 = &v6[v11];
  BOOL v13 = &v7[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)char v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  uint64_t v17 = &v6[v16];
  char v18 = &v7[v16];
  v9(&v6[v16], &v7[v16], v8);
  uint64_t v19 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v17[v19[6]] = v18[v19[6]];
  *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
  swift_bridgeObjectRelease();
  v9(&v17[v19[8]], &v18[v19[8]], v8);
  *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[10]] = *(void *)&v18[v19[10]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[11]] = *(void *)&v18[v19[11]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[13]] = *(void *)&v18[v19[13]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[14]] = *(void *)&v18[v19[14]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[16]] = *(void *)&v18[v19[16]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[17]] = *(void *)&v18[v19[17]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[18]] = *(void *)&v18[v19[18]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v10[7];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  v9(&v6[v25], &v7[v25], v8);
  uint64_t v28 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = v28[5];
  uint64_t v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v56 = v8;
  v9(&v26[v28[6]], &v27[v28[6]], v8);
  v26[v28[7]] = v27[v28[7]];
  v26[v28[8]] = v27[v28[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v34 = v10[20];
  int v35 = &v6[v34];
  uint64_t v36 = &v7[v34];
  uint64_t v37 = (int *)type metadata accessor for StaticResident();
  uint64_t v38 = *((void *)v37 - 1);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  LODWORD(v26) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v26)
  {
    if (!v40)
    {
      v9(v35, v36, v56);
      uint64_t v45 = v37[5];
      uint64_t v46 = &v35[v45];
      uint64_t v47 = &v36[v45];
      uint64_t v49 = *(void *)v47;
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = v49;
      *((void *)v46 + 1) = v48;
      swift_bridgeObjectRelease();
      uint64_t v50 = v37[6];
      uint64_t v51 = &v35[v50];
      uint64_t v52 = &v36[v50];
      uint64_t v54 = *(void *)v52;
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)uint64_t v51 = v54;
      *((void *)v51 + 1) = v53;
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
      v9(&v35[v37[10]], &v36[v37[10]], v56);
      goto LABEL_7;
    }
    sub_251C59074((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v41(v35, v36, v56);
  *(_OWORD *)&v35[v37[5]] = *(_OWORD *)&v36[v37[5]];
  *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
  *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
  v41(&v35[v37[10]], &v36[v37[10]], v56);
  (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_7:
  *(void *)((char *)a1 + v58[6]) = *(void *)((char *)v57 + v58[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[7]) = *(void *)((char *)v57 + v58[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[8]) = *(void *)((char *)v57 + v58[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[9]) = *(void *)((char *)v57 + v58[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[10]) = *(void *)((char *)v57 + v58[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[11]) = *(void *)((char *)v57 + v58[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[12]) = *(void *)((char *)v57 + v58[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[13]) = *(void *)((char *)v57 + v58[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[14]) = *(void *)((char *)v57 + v58[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[15]) = *(void *)((char *)v57 + v58[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[16]) = *(void *)((char *)v57 + v58[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[17]) = *(void *)((char *)v57 + v58[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[18]) = *(void *)((char *)v57 + v58[18]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[19]) = *(void *)((char *)v57 + v58[19]);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)v57 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v43) = *(void *)((char *)v57 + v43);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecurityAndAccessCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C58DB0);
}

uint64_t sub_251C58DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecurityAndAccessCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C58E84);
}

uint64_t sub_251C58E84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for StateSnapshot(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251C58F40()
{
  uint64_t result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251C58FE4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

BOOL sub_251C58FF4(uint64_t a1)
{
  return sub_251C57B44(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251C58FFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251F17E24(a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

uint64_t sub_251C5900C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C59074(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251C590D4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

BOOL sub_251C590E4(uint64_t a1)
{
  return sub_251C57124(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251C590EC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251C590FC(uint64_t a1)
{
  return sub_251C572BC(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251C59104()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

BOOL sub_251C59114(uint64_t a1)
{
  return sub_251C57448(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251C5911C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

BOOL sub_251C5912C(uint64_t a1)
{
  return sub_251C5767C(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251C59134()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

BOOL sub_251C59144(uint64_t a1)
{
  return sub_251C57814(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251C5914C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

BOOL sub_251C5915C(uint64_t a1)
{
  return sub_251C579AC(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251C59168(void *a1, uint64_t a2)
{
  return sub_251C57CDC(a1, a2);
}

uint64_t ActionServiceGroup.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ActionServiceGroup.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionServiceGroup() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ActionServiceGroup()
{
  uint64_t result = qword_269BA0EE0;
  if (!qword_269BA0EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ActionServiceGroup.actionServicesDictionary.getter()
{
  type metadata accessor for ActionServiceGroup();
  return swift_bridgeObjectRetain();
}

uint64_t ActionServiceGroup.init(staticServiceGroup:overrideCharacteristicValues:overrideProfileValues:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for StaticServiceGroup();
  unint64_t v10 = (uint64_t *)(a1 + *(int *)(v9 + 20));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = type metadata accessor for ActionServiceGroup();
  uint64_t v14 = (void *)(a4 + *(int *)(v13 + 20));
  void *v14 = v12;
  v14[1] = v11;
  uint64_t v15 = *(void *)(a1 + *(int *)(v9 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_2519FBAD0(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_251C5DD28(v16, v15, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251C5E608(a1, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + *(int *)(v13 + 24)) = v17;
  return result;
}

uint64_t ActionServiceGroup.hash(into:)(uint64_t a1)
{
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  uint64_t v3 = type metadata accessor for ActionServiceGroup();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_251A43D10(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t ActionServiceGroup.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  uint64_t v1 = type metadata accessor for ActionServiceGroup();
  sub_251F357B0();
  sub_251A43D10((uint64_t)v3, *(void *)(v0 + *(int *)(v1 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251C59548(uint64_t a1)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  sub_251F357B0();
  sub_251A43D10((uint64_t)v4, *(void *)(v1 + *(int *)(a1 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251C595D0(uint64_t a1, uint64_t a2)
{
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  sub_251F357B0();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));
  return sub_251A43D10(a1, v5);
}

uint64_t sub_251C5964C(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  sub_251F357B0();
  sub_251A43D10((uint64_t)v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_251F36D00();
}

uint64_t ActionServiceGroup.actionServices.getter()
{
  type metadata accessor for ActionServiceGroup();
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDEF68(v0);
}

void *ActionServiceGroup.sortedActionServices.getter()
{
  type metadata accessor for ActionServiceGroup();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_251EDEF68(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_251A91F04(v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = v2;
  sub_251C5C9F0(&v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t ActionServiceGroup.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0ED0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionServiceGroup();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_251EDEF68(v5);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_251A91F04(v6);
  swift_bridgeObjectRelease();
  unint64_t v16 = v7;
  sub_251C5C9F0(&v16);
  swift_bridgeObjectRelease();
  uint64_t v8 = v16;
  uint64_t v9 = v16[2];
  uint64_t v10 = type metadata accessor for ActionService();
  uint64_t v11 = *(void *)(v10 - 8);
  if (v9)
  {
    sub_251C5E5A0((uint64_t)v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ActionService);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v4, 1, 1, v10);
  }
  swift_release();
  type metadata accessor for ActionService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) == 1)
  {
    uint64_t result = sub_251A1B064((uint64_t)v4, &qword_269BA0ED0);
    __int16 v13 = 0;
    char v14 = 4;
  }
  else
  {
    __int16 v13 = v4[*(int *)(v10 + 44)] | (v4[*(int *)(v10 + 52)] << 8);
    uint64_t result = sub_251C5E608((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ActionService);
    char v14 = 0;
  }
  *(_WORD *)a1 = v13;
  *(unsigned char *)(a1 + 2) = v14;
  *(unsigned char *)(a1 + 3) = 89;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return result;
}

uint64_t ActionServiceGroup.temperatureStringIcon.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ActionService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0ED0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionServiceGroup();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_251EDEF68(v9);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_251A91F04(v10);
  swift_bridgeObjectRelease();
  uint64_t v19 = v11;
  sub_251C5C9F0(&v19);
  swift_bridgeObjectRelease();
  if (v19[2])
  {
    sub_251C5E5A0((uint64_t)v19 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ActionService);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    uint64_t result = sub_251A1B064((uint64_t)v8, &qword_269BA0ED0);
    a1[1] = 0;
    a1[2] = 0;
    *a1 = 0;
    return result;
  }
  sub_251C5E5A0((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ActionService);
  uint64_t v13 = sub_251EAA758((uint64_t)v5);
  if (!v14)
  {
    sub_251C5E608((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ActionService);
LABEL_11:
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    return sub_251C5E608((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ActionService);
  }
  uint64_t v15 = v13;
  uint64_t v16 = v14;
  uint64_t v17 = sub_251EAA8C0((uint64_t)v5);
  sub_251C5E608((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ActionService);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  *a1 = v15;
  a1[1] = v16;
  a1[2] = v17;
  return sub_251C5E608((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ActionService);
}

uint64_t ActionServiceGroup.actionCharaceristicDescription.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0ED0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionServiceGroup();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_251EDEF68(v3);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_251A91F04(v4);
  swift_bridgeObjectRelease();
  uint64_t v13 = v5;
  sub_251C5C9F0(&v13);
  swift_bridgeObjectRelease();
  uint64_t v6 = v13;
  uint64_t v7 = v13[2];
  uint64_t v8 = type metadata accessor for ActionService();
  uint64_t v9 = *(void *)(v8 - 8);
  if (v7)
  {
    sub_251C5E5A0((uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ActionService);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  }
  swift_release();
  type metadata accessor for ActionService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_269BA0ED0);
    return 0;
  }
  else
  {
    uint64_t v10 = ActionService.actionCharaceristicDescription.getter();
    sub_251C5E608((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ActionService);
  }
  return v10;
}

BOOL ActionServiceGroup.isActivated.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v289 = (uint64_t)v268 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v268 - v4;
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v288 = (uint64_t)v268 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v268 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v287 = (uint64_t)v268 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v268 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v286 = (uint64_t)v268 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v268 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v285 = (uint64_t)v268 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v296 = (uint64_t)v268 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v284 = (uint64_t)v268 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v299 = (uint64_t)v268 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v283 = (uint64_t)v268 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v298 = (uint64_t)v268 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v282 = (uint64_t)v268 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v295 = (uint64_t)v268 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v281 = (uint64_t)v268 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v294 = (uint64_t)v268 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v280 = (uint64_t)v268 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v293 = (uint64_t)v268 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v279 = (uint64_t)v268 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v292 = (uint64_t)v268 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v278 = (uint64_t)v268 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v291 = (uint64_t)v268 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v277 = (uint64_t)v268 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v290 = (uint64_t)v268 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v276 = (uint64_t)v268 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v275 = (uint64_t)v268 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v274 = (uint64_t)v268 - v62;
  MEMORY[0x270FA5388](v61);
  uint64_t v273 = (uint64_t)v268 - v63;
  uint64_t v64 = type metadata accessor for ActionService();
  uint64_t v65 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v67 = (char *)v268 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionServiceGroup();
  uint64_t v68 = swift_bridgeObjectRetain();
  sub_251EDEF68(v68);
  uint64_t v69 = swift_bridgeObjectRetain();
  uint64_t v70 = (void *)sub_251A91F04(v69);
  swift_bridgeObjectRelease();
  v302 = v70;
  sub_251C5C9F0(&v302);
  swift_bridgeObjectRelease();
  uint64_t v71 = v302[2];
  if (v71)
  {
    v269 = v20;
    v270 = v15;
    v271 = v10;
    v272 = v5;
    uint64_t v72 = (char *)v302 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
    uint64_t v300 = *(void *)(v65 + 72);
    v268[1] = v302;
    swift_retain();
    LOBYTE(v73) = 0;
    uint64_t v75 = v298;
    uint64_t v74 = v299;
    uint64_t v297 = v64;
    while (2)
    {
      BOOL v76 = v73;
      sub_251C5E5A0((uint64_t)v72, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for ActionService);
      switch(v67[*(int *)(v64 + 44)])
      {
        case 3:
          uint64_t v129 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v129 + 16))
          {
            unint64_t v130 = sub_2519FE568(3);
            if (v131)
            {
              unint64_t v132 = v130;
              uint64_t v133 = *(void *)(v129 + 56);
              uint64_t v134 = type metadata accessor for StaticCharacteristic();
              uint64_t v135 = *(void *)(v134 - 8);
              uint64_t v136 = v133 + *(void *)(v135 + 72) * v132;
              uint64_t v137 = v273;
              sub_251C5E5A0(v136, v273, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v135 + 56))(v137, 0, 1, v134);
            }
            else
            {
              uint64_t v134 = type metadata accessor for StaticCharacteristic();
              uint64_t v137 = v273;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v273, 1, 1, v134);
            }
            uint64_t v208 = v298;
          }
          else
          {
            uint64_t v208 = v75;
            uint64_t v134 = type metadata accessor for StaticCharacteristic();
            uint64_t v137 = v273;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v273, 1, 1, v134);
          }
          uint64_t v236 = v274;
          sub_251A4ECF0(v137, v274, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 48))(v236, 1, v134) == 1)
          {
            sub_251A1B064(v236, &qword_26B21F108);
LABEL_124:
            uint64_t v75 = v208;
            uint64_t v74 = v299;
            if (v76) {
              goto LABEL_3;
            }
            goto LABEL_159;
          }
          uint64_t v237 = v236 + *(int *)(v134 + 24);
          int v238 = *(unsigned __int8 *)(v237 + 16);
          unint64_t v239 = *(void *)v237;
          switch(v238)
          {
            case 0:
              BOOL v73 = v239 & 1;
              goto LABEL_214;
            case 1:
              BOOL v240 = v239 == 1;
              if (v239 > 1uLL) {
                goto LABEL_123;
              }
              goto LABEL_210;
            case 2:
              BOOL v240 = (unsigned __int16)v239 == 1;
              if ((unsigned __int16)v239 <= 1uLL) {
                goto LABEL_210;
              }
              goto LABEL_123;
            case 3:
              BOOL v240 = v239 == 1;
              if (v239 > 1uLL) {
                goto LABEL_123;
              }
              goto LABEL_210;
            case 4:
              if ((v239 & 0x8000000000000000) != 0) {
                goto LABEL_250;
              }
              BOOL v240 = v239 == 1;
              if (v239 > 1)
              {
LABEL_123:
                sub_251C5E608(v236, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                goto LABEL_124;
              }
LABEL_210:
              BOOL v73 = v240;
LABEL_214:
              sub_251C5E608(v236, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              uint64_t v75 = v208;
              break;
            case 5:
            case 6:
              BOOL v240 = (int)v239 == 1;
              if ((unint64_t)(int)v239 > 1) {
                goto LABEL_123;
              }
              goto LABEL_210;
            default:
              goto LABEL_123;
          }
LABEL_240:
          uint64_t v74 = v299;
          if (v76) {
            goto LABEL_3;
          }
          goto LABEL_4;
        case 14:
        case 51:
        case 52:
          v302 = *(void **)&v67[*(int *)(v64 + 60)];
          char v301 = -98;
          Swift::Int_optional v303 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v301);
          if (v303.is_nil) {
            goto LABEL_158;
          }
          BOOL v73 = v303.value > 0;
          if (v76) {
            goto LABEL_3;
          }
          goto LABEL_4;
        case 16:
          uint64_t v154 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v154 + 16))
          {
            unint64_t v155 = sub_2519FE568(105);
            if (v156)
            {
              unint64_t v157 = v155;
              uint64_t v158 = *(void *)(v154 + 56);
              uint64_t v159 = type metadata accessor for StaticCharacteristic();
              uint64_t v160 = *(void *)(v159 - 8);
              uint64_t v161 = v158 + *(void *)(v160 + 72) * v157;
              uint64_t v162 = v275;
              sub_251C5E5A0(v161, v275, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v160 + 56))(v162, 0, 1, v159);
            }
            else
            {
              uint64_t v159 = type metadata accessor for StaticCharacteristic();
              uint64_t v162 = v275;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v275, 1, 1, v159);
            }
            uint64_t v75 = v298;
          }
          else
          {
            uint64_t v159 = type metadata accessor for StaticCharacteristic();
            uint64_t v162 = v275;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v275, 1, 1, v159);
          }
          uint64_t v247 = v162;
          uint64_t v212 = v276;
          sub_251A4ECF0(v247, v276, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 48))(v212, 1, v159) != 1)
          {
            uint64_t v248 = v212 + *(int *)(v159 + 24);
            int v249 = *(unsigned __int8 *)(v248 + 16);
            unint64_t v215 = *(void *)v248;
            switch(v249)
            {
              case 0:
                goto LABEL_186;
              case 1:
                goto LABEL_169;
              case 2:
                goto LABEL_189;
              case 3:
                goto LABEL_187;
              case 4:
                if ((v215 & 0x8000000000000000) != 0) {
                  goto LABEL_249;
                }
                goto LABEL_235;
              case 5:
              case 6:
                goto LABEL_183;
              default:
                goto LABEL_184;
            }
          }
          goto LABEL_180;
        case 17:
          uint64_t v120 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v120 + 16))
          {
            unint64_t v121 = sub_2519FE568(3);
            if (v122)
            {
              unint64_t v123 = v121;
              uint64_t v124 = *(void *)(v120 + 56);
              uint64_t v125 = type metadata accessor for StaticCharacteristic();
              uint64_t v126 = *(void *)(v125 - 8);
              uint64_t v110 = v299;
              sub_251C5E5A0(v124 + *(void *)(v126 + 72) * v123, v290, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v290, 0, 1, v125);
              uint64_t v127 = v290;
            }
            else
            {
              uint64_t v110 = v74;
              uint64_t v125 = type metadata accessor for StaticCharacteristic();
              uint64_t v127 = v290;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v290, 1, 1, v125);
            }
            uint64_t v205 = v298;
          }
          else
          {
            uint64_t v110 = v74;
            uint64_t v205 = v75;
            uint64_t v125 = type metadata accessor for StaticCharacteristic();
            uint64_t v127 = v290;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v290, 1, 1, v125);
          }
          uint64_t v233 = v127;
          uint64_t v226 = v277;
          sub_251A4ECF0(v233, v277, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 48))(v226, 1, v125) != 1)
          {
            uint64_t v234 = v226 + *(int *)(v125 + 24);
            int v235 = *(unsigned __int8 *)(v234 + 16);
            uint64_t v75 = v205;
            uint64_t v74 = v110;
            uint64_t v64 = v297;
            unint64_t v229 = *(void *)v234;
            switch(v235)
            {
              case 0:
                goto LABEL_162;
              case 1:
                goto LABEL_148;
              case 2:
                goto LABEL_160;
              case 3:
                goto LABEL_163;
              case 4:
                if ((v229 & 0x8000000000000000) != 0) {
                  goto LABEL_248;
                }
                goto LABEL_224;
              case 5:
              case 6:
                goto LABEL_156;
              default:
                goto LABEL_157;
            }
          }
          goto LABEL_153;
        case 19:
          v302 = *(void **)&v67[*(int *)(v64 + 60)];
          char v128 = -107;
          goto LABEL_35;
        case 20:
          uint64_t v138 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v138 + 16))
          {
            unint64_t v139 = sub_2519FE568(3);
            if (v140)
            {
              unint64_t v141 = v139;
              uint64_t v142 = *(void *)(v138 + 56);
              uint64_t v143 = type metadata accessor for StaticCharacteristic();
              uint64_t v144 = *(void *)(v143 - 8);
              uint64_t v110 = v299;
              sub_251C5E5A0(v142 + *(void *)(v144 + 72) * v141, v291, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v144 + 56))(v291, 0, 1, v143);
              uint64_t v145 = v291;
            }
            else
            {
              uint64_t v110 = v74;
              uint64_t v143 = type metadata accessor for StaticCharacteristic();
              uint64_t v145 = v291;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v291, 1, 1, v143);
            }
            uint64_t v205 = v298;
          }
          else
          {
            uint64_t v110 = v74;
            uint64_t v205 = v75;
            uint64_t v143 = type metadata accessor for StaticCharacteristic();
            uint64_t v145 = v291;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v291, 1, 1, v143);
          }
          uint64_t v241 = v145;
          uint64_t v226 = v278;
          sub_251A4ECF0(v241, v278, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 48))(v226, 1, v143) != 1)
          {
            uint64_t v242 = v226 + *(int *)(v143 + 24);
            int v243 = *(unsigned __int8 *)(v242 + 16);
            uint64_t v75 = v205;
            uint64_t v74 = v110;
            uint64_t v64 = v297;
            unint64_t v229 = *(void *)v242;
            switch(v243)
            {
              case 0:
                goto LABEL_162;
              case 1:
                goto LABEL_148;
              case 2:
                goto LABEL_160;
              case 3:
                goto LABEL_163;
              case 4:
                if ((v229 & 0x8000000000000000) != 0) {
                  goto LABEL_245;
                }
                goto LABEL_224;
              case 5:
              case 6:
                goto LABEL_156;
              default:
                goto LABEL_157;
            }
          }
          goto LABEL_153;
        case 21:
          uint64_t v171 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v171 + 16))
          {
            unint64_t v172 = sub_2519FE568(3);
            if (v173)
            {
              unint64_t v174 = v172;
              uint64_t v175 = *(void *)(v171 + 56);
              uint64_t v176 = type metadata accessor for StaticCharacteristic();
              uint64_t v177 = *(void *)(v176 - 8);
              uint64_t v110 = v299;
              sub_251C5E5A0(v175 + *(void *)(v177 + 72) * v174, v292, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v177 + 56))(v292, 0, 1, v176);
              uint64_t v178 = v292;
            }
            else
            {
              uint64_t v110 = v74;
              uint64_t v176 = type metadata accessor for StaticCharacteristic();
              uint64_t v254 = v292;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v176 - 8) + 56))(v292, 1, 1, v176);
              uint64_t v178 = v254;
            }
            uint64_t v205 = v298;
          }
          else
          {
            uint64_t v110 = v74;
            uint64_t v205 = v75;
            uint64_t v176 = type metadata accessor for StaticCharacteristic();
            uint64_t v210 = v292;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v176 - 8) + 56))(v292, 1, 1, v176);
            uint64_t v178 = v210;
          }
          uint64_t v226 = v279;
          sub_251A4ECF0(v178, v279, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v176 - 8) + 48))(v226, 1, v176) != 1)
          {
            uint64_t v255 = v226 + *(int *)(v176 + 24);
            int v256 = *(unsigned __int8 *)(v255 + 16);
            uint64_t v75 = v205;
            uint64_t v74 = v110;
            uint64_t v64 = v297;
            unint64_t v229 = *(void *)v255;
            switch(v256)
            {
              case 0:
                goto LABEL_162;
              case 1:
                BOOL v253 = v229 == 1;
                if (v229 <= 1uLL) {
                  goto LABEL_225;
                }
                goto LABEL_157;
              case 2:
                goto LABEL_160;
              case 3:
                goto LABEL_163;
              case 4:
                if ((v229 & 0x8000000000000000) == 0) {
                  goto LABEL_224;
                }
                goto LABEL_247;
              case 5:
              case 6:
                goto LABEL_156;
              default:
                goto LABEL_157;
            }
          }
          goto LABEL_153;
        case 24:
          uint64_t v163 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v163 + 16))
          {
            unint64_t v164 = sub_2519FE568(65);
            if (v165)
            {
              unint64_t v166 = v164;
              uint64_t v167 = *(void *)(v163 + 56);
              uint64_t v168 = type metadata accessor for StaticCharacteristic();
              uint64_t v169 = *(void *)(v168 - 8);
              uint64_t v110 = v299;
              sub_251C5E5A0(v167 + *(void *)(v169 + 72) * v166, v293, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v169 + 56))(v293, 0, 1, v168);
              uint64_t v170 = v293;
            }
            else
            {
              uint64_t v110 = v74;
              uint64_t v168 = type metadata accessor for StaticCharacteristic();
              uint64_t v250 = v293;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v168 - 8) + 56))(v293, 1, 1, v168);
              uint64_t v170 = v250;
            }
            uint64_t v205 = v298;
          }
          else
          {
            uint64_t v110 = v74;
            uint64_t v205 = v75;
            uint64_t v168 = type metadata accessor for StaticCharacteristic();
            uint64_t v209 = v293;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v168 - 8) + 56))(v293, 1, 1, v168);
            uint64_t v170 = v209;
          }
          uint64_t v226 = v280;
          sub_251A4ECF0(v170, v280, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v168 - 8) + 48))(v226, 1, v168) != 1)
          {
            uint64_t v251 = v226 + *(int *)(v168 + 24);
            int v252 = *(unsigned __int8 *)(v251 + 16);
            uint64_t v75 = v205;
            uint64_t v74 = v110;
            uint64_t v64 = v297;
            unint64_t v229 = *(void *)v251;
            switch(v252)
            {
              case 0:
                goto LABEL_162;
              case 1:
                goto LABEL_148;
              case 2:
                goto LABEL_160;
              case 3:
                goto LABEL_163;
              case 4:
                if ((v229 & 0x8000000000000000) != 0) {
                  goto LABEL_246;
                }
                goto LABEL_224;
              case 5:
              case 6:
                goto LABEL_156;
              default:
                goto LABEL_157;
            }
          }
          goto LABEL_153;
        case 28:
          uint64_t v103 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v103 + 16))
          {
            unint64_t v104 = sub_2519FE568(105);
            if (v105)
            {
              unint64_t v106 = v104;
              uint64_t v107 = *(void *)(v103 + 56);
              uint64_t v108 = type metadata accessor for StaticCharacteristic();
              uint64_t v109 = *(void *)(v108 - 8);
              uint64_t v110 = v299;
              sub_251C5E5A0(v107 + *(void *)(v109 + 72) * v106, v294, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56))(v294, 0, 1, v108);
              uint64_t v111 = v294;
            }
            else
            {
              uint64_t v110 = v74;
              uint64_t v108 = type metadata accessor for StaticCharacteristic();
              uint64_t v225 = v294;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v294, 1, 1, v108);
              uint64_t v111 = v225;
            }
            uint64_t v205 = v298;
          }
          else
          {
            uint64_t v110 = v74;
            uint64_t v205 = v75;
            uint64_t v108 = type metadata accessor for StaticCharacteristic();
            uint64_t v206 = v294;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v294, 1, 1, v108);
            uint64_t v111 = v206;
          }
          uint64_t v226 = v281;
          sub_251A4ECF0(v111, v281, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v226, 1, v108) != 1)
          {
            uint64_t v227 = v226 + *(int *)(v108 + 24);
            int v228 = *(unsigned __int8 *)(v227 + 16);
            uint64_t v75 = v205;
            uint64_t v74 = v110;
            uint64_t v64 = v297;
            unint64_t v229 = *(void *)v227;
            switch(v228)
            {
              case 0:
                goto LABEL_162;
              case 1:
                goto LABEL_148;
              case 2:
                goto LABEL_160;
              case 3:
                goto LABEL_163;
              case 4:
                if ((v229 & 0x8000000000000000) == 0) {
                  goto LABEL_224;
                }
                __break(1u);
LABEL_245:
                __break(1u);
LABEL_246:
                __break(1u);
LABEL_247:
                __break(1u);
LABEL_248:
                __break(1u);
LABEL_249:
                __break(1u);
LABEL_250:
                __break(1u);
                break;
              case 5:
              case 6:
                goto LABEL_156;
              default:
                goto LABEL_157;
            }
LABEL_251:
            __break(1u);
LABEL_252:
            __break(1u);
LABEL_253:
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
            swift_release();
            __break(1u);
            JUMPOUT(0x251C5C784);
          }
          goto LABEL_153;
        case 30:
          v302 = *(void **)&v67[*(int *)(v64 + 60)];
          char v128 = -100;
LABEL_35:
          char v301 = v128;
          Swift::Int_optional v305 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v301);
          if (v305.is_nil) {
            goto LABEL_158;
          }
          BOOL v73 = v305.value != 1;
          if (!v76) {
            goto LABEL_4;
          }
          goto LABEL_3;
        case 31:
          uint64_t v112 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v112 + 16))
          {
            unint64_t v113 = sub_2519FE568(84);
            if (v114)
            {
              unint64_t v115 = v113;
              uint64_t v116 = *(void *)(v112 + 56);
              uint64_t v117 = type metadata accessor for StaticCharacteristic();
              uint64_t v118 = *(void *)(v117 - 8);
              uint64_t v110 = v299;
              sub_251C5E5A0(v116 + *(void *)(v118 + 72) * v115, v295, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56))(v295, 0, 1, v117);
              uint64_t v119 = v295;
            }
            else
            {
              uint64_t v110 = v74;
              uint64_t v117 = type metadata accessor for StaticCharacteristic();
              uint64_t v230 = v295;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v295, 1, 1, v117);
              uint64_t v119 = v230;
            }
            uint64_t v205 = v298;
          }
          else
          {
            uint64_t v110 = v74;
            uint64_t v205 = v75;
            uint64_t v117 = type metadata accessor for StaticCharacteristic();
            uint64_t v207 = v295;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v295, 1, 1, v117);
            uint64_t v119 = v207;
          }
          uint64_t v226 = v282;
          sub_251A4ECF0(v119, v282, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 48))(v226, 1, v117) != 1)
          {
            uint64_t v231 = v226 + *(int *)(v117 + 24);
            int v232 = *(unsigned __int8 *)(v231 + 16);
            uint64_t v75 = v205;
            uint64_t v74 = v110;
            uint64_t v64 = v297;
            unint64_t v229 = *(void *)v231;
            switch(v232)
            {
              case 0:
LABEL_162:
                BOOL v73 = v229 & 1;
                goto LABEL_228;
              case 1:
LABEL_148:
                BOOL v253 = v229 == 1;
                if (v229 > 1uLL) {
                  goto LABEL_157;
                }
                goto LABEL_225;
              case 2:
LABEL_160:
                BOOL v253 = (unsigned __int16)v229 == 1;
                if ((unsigned __int16)v229 > 1uLL) {
                  goto LABEL_157;
                }
                goto LABEL_225;
              case 3:
LABEL_163:
                BOOL v253 = v229 == 1;
                if (v229 > 1uLL) {
                  goto LABEL_157;
                }
                goto LABEL_225;
              case 4:
                if ((v229 & 0x8000000000000000) != 0) {
                  goto LABEL_255;
                }
LABEL_224:
                BOOL v253 = v229 == 1;
                if (v229 > 1)
                {
LABEL_157:
                  sub_251C5E608(v226, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                  goto LABEL_158;
                }
LABEL_225:
                BOOL v73 = v253;
LABEL_228:
                sub_251C5E608(v226, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                if (!v76) {
                  goto LABEL_4;
                }
                goto LABEL_3;
              case 5:
              case 6:
LABEL_156:
                BOOL v253 = (int)v229 == 1;
                if ((unint64_t)(int)v229 > 1) {
                  goto LABEL_157;
                }
                goto LABEL_225;
              default:
                goto LABEL_157;
            }
          }
LABEL_153:
          sub_251A1B064(v226, &qword_26B21F108);
          uint64_t v75 = v205;
          uint64_t v74 = v110;
          uint64_t v64 = v297;
          if (!v76) {
            goto LABEL_159;
          }
          goto LABEL_3;
        case 34:
          uint64_t v95 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v95 + 16))
          {
            unint64_t v96 = sub_2519FE568(105);
            if (v97)
            {
              unint64_t v98 = v96;
              uint64_t v99 = *(void *)(v95 + 56);
              uint64_t v100 = type metadata accessor for StaticCharacteristic();
              uint64_t v101 = *(void *)(v100 - 8);
              uint64_t v102 = v99 + *(void *)(v101 + 72) * v98;
              uint64_t v75 = v298;
              uint64_t v74 = v299;
              sub_251C5E5A0(v102, v298, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v75, 0, 1, v100);
            }
            else
            {
              uint64_t v100 = type metadata accessor for StaticCharacteristic();
              uint64_t v75 = v298;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v298, 1, 1, v100);
            }
          }
          else
          {
            uint64_t v100 = type metadata accessor for StaticCharacteristic();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v75, 1, 1, v100);
          }
          uint64_t v219 = v75;
          uint64_t v220 = v283;
          sub_251A4ECF0(v219, v283, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 48))(v220, 1, v100) == 1)
          {
            sub_251A1B064(v220, &qword_26B21F108);
            uint64_t v75 = v298;
            if (v76) {
LABEL_3:
            }
              BOOL v73 = 1;
            else {
LABEL_159:
            }
              BOOL v73 = 0;
          }
          else
          {
            uint64_t v221 = v220 + *(int *)(v100 + 24);
            int v222 = *(unsigned __int8 *)(v221 + 16);
            unint64_t v223 = *(void *)v221;
            switch(v222)
            {
              case 0:
                BOOL v73 = v223 & 1;
                goto LABEL_200;
              case 1:
                BOOL v224 = v223 == 1;
                if (v223 > 1uLL) {
                  goto LABEL_97;
                }
                goto LABEL_196;
              case 2:
                BOOL v224 = (unsigned __int16)v223 == 1;
                if ((unsigned __int16)v223 <= 1uLL) {
                  goto LABEL_196;
                }
                goto LABEL_97;
              case 3:
                BOOL v224 = v223 == 1;
                if (v223 > 1uLL) {
                  goto LABEL_97;
                }
                goto LABEL_196;
              case 4:
                if ((v223 & 0x8000000000000000) != 0) {
                  goto LABEL_258;
                }
                BOOL v224 = v223 == 1;
                if (v223 > 1)
                {
LABEL_97:
                  sub_251C5E608(v220, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                  uint64_t v75 = v298;
                  if (v76) {
                    goto LABEL_3;
                  }
                  goto LABEL_159;
                }
LABEL_196:
                BOOL v73 = v224;
LABEL_200:
                sub_251C5E608(v220, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                uint64_t v75 = v298;
                if (v76) {
                  goto LABEL_3;
                }
                break;
              case 5:
              case 6:
                BOOL v224 = (int)v223 == 1;
                if ((unint64_t)(int)v223 > 1) {
                  goto LABEL_97;
                }
                goto LABEL_196;
              default:
                goto LABEL_97;
            }
          }
LABEL_4:
          sub_251C5E608((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for ActionService);
          v72 += v300;
          if (--v71) {
            continue;
          }
          swift_release_n();
          break;
        case 35:
          v302 = *(void **)&v67[*(int *)(v64 + 60)];
          char v301 = -96;
          Swift::Int_optional v306 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v301);
          if (v306.is_nil) {
            goto LABEL_158;
          }
          BOOL v73 = v306.value != 3;
          if (!v76) {
            goto LABEL_4;
          }
          goto LABEL_3;
        case 38:
          uint64_t v146 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v146 + 16))
          {
            unint64_t v147 = sub_2519FE568(84);
            if (v148)
            {
              unint64_t v149 = v147;
              uint64_t v150 = *(void *)(v146 + 56);
              uint64_t v151 = type metadata accessor for StaticCharacteristic();
              uint64_t v152 = *(void *)(v151 - 8);
              uint64_t v153 = v150 + *(void *)(v152 + 72) * v149;
              uint64_t v74 = v299;
              sub_251C5E5A0(v153, v299, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v152 + 56))(v74, 0, 1, v151);
            }
            else
            {
              uint64_t v151 = type metadata accessor for StaticCharacteristic();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v74, 1, 1, v151);
            }
            uint64_t v75 = v298;
          }
          else
          {
            uint64_t v151 = type metadata accessor for StaticCharacteristic();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v74, 1, 1, v151);
          }
          uint64_t v244 = v74;
          uint64_t v212 = v284;
          sub_251A4ECF0(v244, v284, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 48))(v212, 1, v151) != 1)
          {
            uint64_t v245 = v212 + *(int *)(v151 + 24);
            int v246 = *(unsigned __int8 *)(v245 + 16);
            unint64_t v215 = *(void *)v245;
            switch(v246)
            {
              case 0:
                goto LABEL_186;
              case 1:
                goto LABEL_169;
              case 2:
                goto LABEL_189;
              case 3:
                goto LABEL_187;
              case 4:
                if ((v215 & 0x8000000000000000) != 0) {
                  goto LABEL_256;
                }
                goto LABEL_235;
              case 5:
              case 6:
                goto LABEL_183;
              default:
                goto LABEL_184;
            }
          }
          goto LABEL_180;
        case 41:
          uint64_t v188 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v188 + 16))
          {
            unint64_t v189 = sub_2519FE568(105);
            uint64_t v190 = v296;
            if (v191)
            {
              unint64_t v192 = v189;
              uint64_t v193 = *(void *)(v188 + 56);
              uint64_t v194 = type metadata accessor for StaticCharacteristic();
              uint64_t v195 = *(void *)(v194 - 8);
              sub_251C5E5A0(v193 + *(void *)(v195 + 72) * v192, v296, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v195 + 56))(v296, 0, 1, v194);
              uint64_t v190 = v296;
            }
            else
            {
              uint64_t v194 = type metadata accessor for StaticCharacteristic();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v194 - 8) + 56))(v190, 1, 1, v194);
            }
            uint64_t v75 = v298;
          }
          else
          {
            uint64_t v194 = type metadata accessor for StaticCharacteristic();
            uint64_t v190 = v296;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v194 - 8) + 56))(v296, 1, 1, v194);
          }
          uint64_t v261 = v190;
          uint64_t v212 = v285;
          sub_251A4ECF0(v261, v285, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v194 - 8) + 48))(v212, 1, v194) != 1)
          {
            uint64_t v262 = v212 + *(int *)(v194 + 24);
            int v263 = *(unsigned __int8 *)(v262 + 16);
            unint64_t v215 = *(void *)v262;
            switch(v263)
            {
              case 0:
                goto LABEL_186;
              case 1:
                goto LABEL_191;
              case 2:
                goto LABEL_189;
              case 3:
                goto LABEL_187;
              case 4:
                if ((v215 & 0x8000000000000000) != 0) {
                  goto LABEL_257;
                }
                goto LABEL_235;
              case 5:
              case 6:
                goto LABEL_183;
              default:
                goto LABEL_184;
            }
          }
          goto LABEL_180;
        case 42:
          uint64_t v179 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v179 + 16))
          {
            unint64_t v180 = sub_2519FE568(3);
            if (v181)
            {
              unint64_t v182 = v180;
              uint64_t v183 = *(void *)(v179 + 56);
              uint64_t v184 = type metadata accessor for StaticCharacteristic();
              uint64_t v185 = *(void *)(v184 - 8);
              uint64_t v186 = v183 + *(void *)(v185 + 72) * v182;
              uint64_t v187 = (uint64_t)v269;
              sub_251C5E5A0(v186, (uint64_t)v269, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v185 + 56))(v187, 0, 1, v184);
            }
            else
            {
              uint64_t v184 = type metadata accessor for StaticCharacteristic();
              uint64_t v187 = (uint64_t)v269;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 56))(v269, 1, 1, v184);
            }
            uint64_t v75 = v298;
          }
          else
          {
            uint64_t v184 = type metadata accessor for StaticCharacteristic();
            uint64_t v187 = (uint64_t)v269;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 56))(v269, 1, 1, v184);
          }
          uint64_t v257 = v187;
          uint64_t v212 = v286;
          sub_251A4ECF0(v257, v286, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 48))(v212, 1, v184) != 1)
          {
            uint64_t v258 = v212 + *(int *)(v184 + 24);
            int v259 = *(unsigned __int8 *)(v258 + 16);
            unint64_t v215 = *(void *)v258;
            switch(v259)
            {
              case 0:
                goto LABEL_186;
              case 1:
                goto LABEL_169;
              case 2:
                goto LABEL_189;
              case 3:
                goto LABEL_187;
              case 4:
                if ((v215 & 0x8000000000000000) != 0) {
                  goto LABEL_253;
                }
                goto LABEL_235;
              case 5:
              case 6:
                goto LABEL_183;
              default:
                goto LABEL_184;
            }
          }
          goto LABEL_180;
        case 44:
          uint64_t v77 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v77 + 16))
          {
            unint64_t v78 = sub_2519FE568(3);
            if (v79)
            {
              unint64_t v80 = v78;
              uint64_t v81 = *(void *)(v77 + 56);
              uint64_t v82 = type metadata accessor for StaticCharacteristic();
              uint64_t v83 = *(void *)(v82 - 8);
              uint64_t v84 = v81 + *(void *)(v83 + 72) * v80;
              uint64_t v85 = (uint64_t)v270;
              sub_251C5E5A0(v84, (uint64_t)v270, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v82);
            }
            else
            {
              uint64_t v82 = type metadata accessor for StaticCharacteristic();
              uint64_t v85 = (uint64_t)v270;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v270, 1, 1, v82);
            }
            uint64_t v75 = v298;
          }
          else
          {
            uint64_t v82 = type metadata accessor for StaticCharacteristic();
            uint64_t v85 = (uint64_t)v270;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v270, 1, 1, v82);
          }
          uint64_t v211 = v85;
          uint64_t v212 = v287;
          sub_251A4ECF0(v211, v287, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 48))(v212, 1, v82) != 1)
          {
            uint64_t v213 = v212 + *(int *)(v82 + 24);
            int v214 = *(unsigned __int8 *)(v213 + 16);
            unint64_t v215 = *(void *)v213;
            switch(v214)
            {
              case 0:
                goto LABEL_186;
              case 1:
                goto LABEL_169;
              case 2:
                goto LABEL_189;
              case 3:
                goto LABEL_187;
              case 4:
                if ((v215 & 0x8000000000000000) != 0) {
                  goto LABEL_251;
                }
                goto LABEL_235;
              case 5:
              case 6:
                goto LABEL_183;
              default:
                goto LABEL_184;
            }
          }
          goto LABEL_180;
        case 46:
          v302 = *(void **)&v67[*(int *)(v64 + 60)];
          char v301 = -104;
          Swift::Int_optional v304 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v301);
          if (v304.is_nil) {
            goto LABEL_158;
          }
          BOOL v73 = v304.value != 0;
          if (!v76) {
            goto LABEL_4;
          }
          goto LABEL_3;
        case 47:
          uint64_t v196 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v196 + 16))
          {
            unint64_t v197 = sub_2519FE568(3);
            if (v198)
            {
              unint64_t v199 = v197;
              uint64_t v200 = *(void *)(v196 + 56);
              uint64_t v201 = type metadata accessor for StaticCharacteristic();
              uint64_t v202 = *(void *)(v201 - 8);
              uint64_t v203 = v200 + *(void *)(v202 + 72) * v199;
              uint64_t v204 = (uint64_t)v271;
              sub_251C5E5A0(v203, (uint64_t)v271, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v202 + 56))(v204, 0, 1, v201);
            }
            else
            {
              uint64_t v201 = type metadata accessor for StaticCharacteristic();
              uint64_t v204 = (uint64_t)v271;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v201 - 8) + 56))(v271, 1, 1, v201);
            }
            uint64_t v75 = v298;
          }
          else
          {
            uint64_t v201 = type metadata accessor for StaticCharacteristic();
            uint64_t v204 = (uint64_t)v271;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v201 - 8) + 56))(v271, 1, 1, v201);
          }
          uint64_t v264 = v204;
          uint64_t v212 = v288;
          sub_251A4ECF0(v264, v288, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v201 - 8) + 48))(v212, 1, v201) != 1)
          {
            uint64_t v265 = v212 + *(int *)(v201 + 24);
            int v266 = *(unsigned __int8 *)(v265 + 16);
            unint64_t v215 = *(void *)v265;
            switch(v266)
            {
              case 0:
                goto LABEL_186;
              case 1:
LABEL_191:
                unint64_t v215 = v215;
                goto LABEL_235;
              case 2:
LABEL_189:
                BOOL v260 = (unsigned __int16)v215 == 1;
                if ((unsigned __int16)v215 > 1uLL) {
                  goto LABEL_184;
                }
                goto LABEL_236;
              case 3:
                goto LABEL_187;
              case 4:
                if ((v215 & 0x8000000000000000) == 0) {
                  goto LABEL_235;
                }
                goto LABEL_254;
              case 5:
              case 6:
                goto LABEL_183;
              default:
                goto LABEL_184;
            }
          }
          goto LABEL_180;
        case 48:
          uint64_t v86 = *(void *)&v67[*(int *)(v64 + 60)];
          if (*(void *)(v86 + 16))
          {
            unint64_t v87 = sub_2519FE568(3);
            if (v88)
            {
              unint64_t v89 = v87;
              uint64_t v90 = *(void *)(v86 + 56);
              uint64_t v91 = type metadata accessor for StaticCharacteristic();
              uint64_t v92 = *(void *)(v91 - 8);
              uint64_t v93 = v90 + *(void *)(v92 + 72) * v89;
              uint64_t v94 = (uint64_t)v272;
              sub_251C5E5A0(v93, (uint64_t)v272, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v94, 0, 1, v91);
            }
            else
            {
              uint64_t v91 = type metadata accessor for StaticCharacteristic();
              uint64_t v94 = (uint64_t)v272;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v272, 1, 1, v91);
            }
            uint64_t v75 = v298;
          }
          else
          {
            uint64_t v91 = type metadata accessor for StaticCharacteristic();
            uint64_t v94 = (uint64_t)v272;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v272, 1, 1, v91);
          }
          uint64_t v216 = v94;
          uint64_t v212 = v289;
          sub_251A4ECF0(v216, v289, &qword_26B21F108);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v212, 1, v91) != 1)
          {
            uint64_t v217 = v212 + *(int *)(v91 + 24);
            int v218 = *(unsigned __int8 *)(v217 + 16);
            unint64_t v215 = *(void *)v217;
            switch(v218)
            {
              case 0:
LABEL_186:
                BOOL v73 = v215 & 1;
                goto LABEL_239;
              case 1:
LABEL_169:
                BOOL v260 = v215 == 1;
                if (v215 > 1uLL) {
                  goto LABEL_184;
                }
                goto LABEL_236;
              case 2:
                unint64_t v215 = (unsigned __int16)v215;
                goto LABEL_235;
              case 3:
LABEL_187:
                BOOL v260 = v215 == 1;
                if (v215 > 1uLL) {
                  goto LABEL_184;
                }
                goto LABEL_236;
              case 4:
                if ((v215 & 0x8000000000000000) != 0) {
                  goto LABEL_252;
                }
LABEL_235:
                BOOL v260 = v215 == 1;
                if (v215 <= 1) {
                  goto LABEL_236;
                }
                goto LABEL_184;
              case 5:
              case 6:
LABEL_183:
                BOOL v260 = (int)v215 == 1;
                if ((unint64_t)(int)v215 > 1) {
                  goto LABEL_184;
                }
LABEL_236:
                BOOL v73 = v260;
LABEL_239:
                sub_251C5E608(v212, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                goto LABEL_240;
              default:
LABEL_184:
                sub_251C5E608(v212, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                uint64_t v74 = v299;
                if (!v76) {
                  goto LABEL_159;
                }
                goto LABEL_3;
            }
          }
LABEL_180:
          sub_251A1B064(v212, &qword_26B21F108);
          uint64_t v74 = v299;
          if (!v76) {
            goto LABEL_159;
          }
          goto LABEL_3;
        default:
LABEL_158:
          if (!v76) {
            goto LABEL_159;
          }
          goto LABEL_3;
      }
      break;
    }
  }
  else
  {
    swift_release();
    return 0;
  }
  return v73;
}

uint64_t sub_251C5C9F0(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ActionService() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_251ECDD64(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_251C5CA98(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_251C5CA98(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ActionService();
  uint64_t v134 = *(void *)(v4 - 8);
  uint64_t v135 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v131 = (uint64_t)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v142 = (uint64_t)&v125 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v139 = (uint64_t)&v125 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v138 = (uint64_t)&v125 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_137;
    }
    if (v12) {
      return sub_251C5D4EC(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_145;
  }
  uint64_t v128 = result;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)MEMORY[0x263F8EE78];
    unint64_t v133 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    uint64_t v127 = MEMORY[0x263F8EE78];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_103:
      uint64_t v118 = v18;
      if (v20 >= 2)
      {
        uint64_t v119 = *a1;
        do
        {
          unint64_t v120 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_132;
          }
          if (!v119) {
            goto LABEL_144;
          }
          uint64_t v121 = *(void *)&v118[16 * v120 + 32];
          uint64_t v122 = *(void *)&v118[16 * v20 + 24];
          sub_251C5D780(v119 + *(void *)(v134 + 72) * v121, v119 + *(void *)(v134 + 72) * *(void *)&v118[16 * v20 + 16], v119 + *(void *)(v134 + 72) * v122, v133);
          if (v2) {
            break;
          }
          if (v122 < v121) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v118 = sub_251ECDC38((uint64_t)v118);
          }
          if (v120 >= *((void *)v118 + 2)) {
            goto LABEL_134;
          }
          unint64_t v123 = &v118[16 * v120 + 32];
          *(void *)unint64_t v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v118 + 2);
          if (v20 > v124) {
            goto LABEL_135;
          }
          memmove(&v118[16 * v20 + 16], &v118[16 * v20 + 32], 16 * (v124 - v20));
          *((void *)v118 + 2) = v124 - 1;
          unint64_t v20 = v124 - 1;
        }
        while (v124 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_251F35B50();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v127 = v16;
    unint64_t v133 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)MEMORY[0x263F8EE78];
  char v140 = a1;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    uint64_t v132 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v31 = v19 + 1;
      uint64_t v39 = v19;
    }
    else
    {
      uint64_t v23 = *a1;
      uint64_t v24 = *a1 + *(void *)(v134 + 72) * v22;
      uint64_t v143 = *(void *)(v134 + 72);
      uint64_t v25 = v143;
      uint64_t v26 = v23;
      uint64_t v136 = v23;
      uint64_t v141 = v12;
      uint64_t v27 = v138;
      sub_251C5E5A0(v24, v138, (uint64_t (*)(void))type metadata accessor for ActionService);
      uint64_t v28 = v26 + v25 * v21;
      uint64_t v29 = v139;
      sub_251C5E5A0(v28, v139, (uint64_t (*)(void))type metadata accessor for ActionService);
      LODWORD(v137) = MEMORY[0x2533A9CA0](v27, v29);
      sub_251C5E608(v29, (uint64_t (*)(void))type metadata accessor for ActionService);
      uint64_t v30 = v27;
      uint64_t v12 = v141;
      sub_251C5E608(v30, (uint64_t (*)(void))type metadata accessor for ActionService);
      uint64_t v31 = v21 + 2;
      if (v21 + 2 < v12)
      {
        uint64_t v126 = v2;
        uint64_t v129 = v18;
        uint64_t v32 = v143 * v22;
        uint64_t v33 = v136;
        uint64_t v34 = v143 * v31;
        while (1)
        {
          uint64_t v35 = v31;
          uint64_t v36 = v138;
          sub_251C5E5A0(v33 + v34, v138, (uint64_t (*)(void))type metadata accessor for ActionService);
          uint64_t v37 = v139;
          sub_251C5E5A0(v33 + v32, v139, (uint64_t (*)(void))type metadata accessor for ActionService);
          int v38 = MEMORY[0x2533A9CA0](v36, v37);
          sub_251C5E608(v37, (uint64_t (*)(void))type metadata accessor for ActionService);
          sub_251C5E608(v36, (uint64_t (*)(void))type metadata accessor for ActionService);
          if ((v137 ^ v38)) {
            break;
          }
          uint64_t v31 = v35 + 1;
          v33 += v143;
          uint64_t v12 = v141;
          if (v141 == v35 + 1)
          {
            uint64_t v31 = v141;
            uint64_t v18 = v129;
            uint64_t v2 = v126;
            goto LABEL_23;
          }
        }
        uint64_t v18 = v129;
        uint64_t v31 = v35;
        uint64_t v2 = v126;
        uint64_t v12 = v141;
      }
LABEL_23:
      uint64_t v39 = v132;
      if (v137)
      {
        if (v31 < v132) {
          goto LABEL_138;
        }
        if (v132 < v31)
        {
          uint64_t v129 = v18;
          uint64_t v40 = 0;
          uint64_t v41 = v143;
          uint64_t v42 = v143 * (v31 - 1);
          uint64_t v43 = v31 * v143;
          uint64_t v44 = v132;
          uint64_t v45 = v132 * v143;
          do
          {
            if (v44 != v31 + v40 - 1)
            {
              uint64_t v47 = v31;
              uint64_t v48 = v136;
              if (!v136) {
                goto LABEL_143;
              }
              unint64_t v49 = v136 + v45;
              uint64_t v137 = v136 + v42;
              sub_251C5E53C(v136 + v45, v131);
              if (v45 < v42 || v49 >= v48 + v43)
              {
                uint64_t v46 = v137;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v46 = v137;
                if (v45 != v42) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_251C5E53C(v131, v46);
              uint64_t v31 = v47;
              uint64_t v41 = v143;
            }
            ++v44;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v45 += v41;
          }
          while (v44 < v31 + v40);
          a1 = v140;
          uint64_t v12 = v141;
          uint64_t v18 = v129;
          uint64_t v39 = v132;
        }
      }
    }
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v39)) {
        goto LABEL_136;
      }
      if (v31 - v39 < v128) {
        break;
      }
    }
LABEL_55:
    if (v31 < v39) {
      goto LABEL_131;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v141 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v18 = sub_251ECD5C4(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v67 = *((void *)v18 + 2);
    unint64_t v66 = *((void *)v18 + 3);
    unint64_t v20 = v67 + 1;
    if (v67 >= v66 >> 1) {
      uint64_t v18 = sub_251ECD5C4((char *)(v66 > 1), v67 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    uint64_t v68 = v18 + 32;
    uint64_t v69 = &v18[16 * v67 + 32];
    uint64_t v70 = v141;
    *(void *)uint64_t v69 = v132;
    *((void *)v69 + 1) = v70;
    if (v67)
    {
      while (1)
      {
        unint64_t v71 = v20 - 1;
        if (v20 >= 4)
        {
          BOOL v76 = &v68[16 * v20];
          uint64_t v77 = *((void *)v76 - 8);
          uint64_t v78 = *((void *)v76 - 7);
          BOOL v82 = __OFSUB__(v78, v77);
          uint64_t v79 = v78 - v77;
          if (v82) {
            goto LABEL_120;
          }
          uint64_t v81 = *((void *)v76 - 6);
          uint64_t v80 = *((void *)v76 - 5);
          BOOL v82 = __OFSUB__(v80, v81);
          uint64_t v74 = v80 - v81;
          char v75 = v82;
          if (v82) {
            goto LABEL_121;
          }
          unint64_t v83 = v20 - 2;
          uint64_t v84 = &v68[16 * v20 - 32];
          uint64_t v86 = *(void *)v84;
          uint64_t v85 = *((void *)v84 + 1);
          BOOL v82 = __OFSUB__(v85, v86);
          uint64_t v87 = v85 - v86;
          if (v82) {
            goto LABEL_123;
          }
          BOOL v82 = __OFADD__(v74, v87);
          uint64_t v88 = v74 + v87;
          if (v82) {
            goto LABEL_126;
          }
          if (v88 >= v79)
          {
            unint64_t v106 = &v68[16 * v71];
            uint64_t v108 = *(void *)v106;
            uint64_t v107 = *((void *)v106 + 1);
            BOOL v82 = __OFSUB__(v107, v108);
            uint64_t v109 = v107 - v108;
            if (v82) {
              goto LABEL_130;
            }
            BOOL v99 = v74 < v109;
            goto LABEL_92;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v100 = *((void *)v18 + 4);
            uint64_t v101 = *((void *)v18 + 5);
            BOOL v82 = __OFSUB__(v101, v100);
            uint64_t v93 = v101 - v100;
            char v94 = v82;
            goto LABEL_86;
          }
          uint64_t v73 = *((void *)v18 + 4);
          uint64_t v72 = *((void *)v18 + 5);
          BOOL v82 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          char v75 = v82;
        }
        if (v75) {
          goto LABEL_122;
        }
        unint64_t v83 = v20 - 2;
        unint64_t v89 = &v68[16 * v20 - 32];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v92 = __OFSUB__(v90, v91);
        uint64_t v93 = v90 - v91;
        char v94 = v92;
        if (v92) {
          goto LABEL_125;
        }
        uint64_t v95 = &v68[16 * v71];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v82 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v82) {
          goto LABEL_128;
        }
        if (__OFADD__(v93, v98)) {
          goto LABEL_129;
        }
        if (v93 + v98 >= v74)
        {
          BOOL v99 = v74 < v98;
LABEL_92:
          if (v99) {
            unint64_t v71 = v83;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v94) {
          goto LABEL_124;
        }
        uint64_t v102 = &v68[16 * v71];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v82 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v82) {
          goto LABEL_127;
        }
        if (v105 < v93) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v110 = v71 - 1;
        if (v71 - 1 >= v20)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        uint64_t v111 = *a1;
        if (!*a1) {
          goto LABEL_142;
        }
        uint64_t v112 = v18;
        unint64_t v113 = &v68[16 * v110];
        uint64_t v114 = *(void *)v113;
        unint64_t v115 = &v68[16 * v71];
        uint64_t v116 = *((void *)v115 + 1);
        sub_251C5D780(v111 + *(void *)(v134 + 72) * *(void *)v113, v111 + *(void *)(v134 + 72) * *(void *)v115, v111 + *(void *)(v134 + 72) * v116, v133);
        if (v2) {
          goto LABEL_114;
        }
        if (v116 < v114) {
          goto LABEL_117;
        }
        if (v71 > *((void *)v112 + 2)) {
          goto LABEL_118;
        }
        *(void *)unint64_t v113 = v114;
        *(void *)&v68[16 * v110 + 8] = v116;
        unint64_t v117 = *((void *)v112 + 2);
        if (v71 >= v117) {
          goto LABEL_119;
        }
        uint64_t v18 = v112;
        unint64_t v20 = v117 - 1;
        memmove(&v68[16 * v71], v115 + 16, 16 * (v117 - 1 - v71));
        *((void *)v112 + 2) = v117 - 1;
        a1 = v140;
        if (v117 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    uint64_t v12 = a1[1];
    uint64_t v19 = v141;
    if (v141 >= v12) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v39, v128)) {
    goto LABEL_139;
  }
  if (v39 + v128 >= v12) {
    uint64_t v50 = v12;
  }
  else {
    uint64_t v50 = v39 + v128;
  }
  if (v50 >= v39)
  {
    if (v31 != v50)
    {
      uint64_t v129 = v18;
      uint64_t v130 = v50;
      uint64_t v126 = v2;
      uint64_t v51 = *(void *)(v134 + 72);
      uint64_t v52 = v51 * (v31 - 1);
      uint64_t v136 = v51;
      uint64_t v53 = v31 * v51;
      do
      {
        uint64_t v55 = 0;
        uint64_t v141 = v31;
        uint64_t v137 = v53;
        while (1)
        {
          uint64_t v143 = v39;
          uint64_t v56 = *a1;
          uint64_t v57 = v53 + v55 + *a1;
          uint64_t v58 = v138;
          sub_251C5E5A0(v57, v138, (uint64_t (*)(void))type metadata accessor for ActionService);
          uint64_t v59 = v52;
          uint64_t v60 = v52 + v55 + v56;
          uint64_t v61 = v139;
          sub_251C5E5A0(v60, v139, (uint64_t (*)(void))type metadata accessor for ActionService);
          char v62 = MEMORY[0x2533A9CA0](v58, v61);
          sub_251C5E608(v61, (uint64_t (*)(void))type metadata accessor for ActionService);
          sub_251C5E608(v58, (uint64_t (*)(void))type metadata accessor for ActionService);
          if ((v62 & 1) == 0) {
            break;
          }
          uint64_t v63 = *a1;
          if (!*a1) {
            goto LABEL_141;
          }
          uint64_t v53 = v137;
          uint64_t v52 = v59;
          uint64_t v64 = v63 + v59 + v55;
          sub_251C5E53C(v63 + v137 + v55, v142);
          swift_arrayInitWithTakeFrontToBack();
          sub_251C5E53C(v142, v64);
          v55 -= v136;
          uint64_t v39 = v143 + 1;
          a1 = v140;
          uint64_t v54 = v141;
          if (v141 == v143 + 1) {
            goto LABEL_48;
          }
        }
        uint64_t v54 = v141;
        uint64_t v52 = v59;
        uint64_t v53 = v137;
LABEL_48:
        uint64_t v31 = v54 + 1;
        v52 += v136;
        v53 += v136;
        uint64_t v39 = v132;
      }
      while (v31 != v130);
      uint64_t v31 = v130;
      uint64_t v2 = v126;
      uint64_t v18 = v129;
    }
    goto LABEL_55;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251C5D4EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for ActionService();
  uint64_t v7 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v31 = v16 * v29;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      uint64_t v19 = a4;
      uint64_t v20 = *a4;
      sub_251C5E5A0(v31 + v17 + v20, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ActionService);
      sub_251C5E5A0(v32 + v17 + v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ActionService);
      char v21 = MEMORY[0x2533A9CA0](v15, v11);
      sub_251C5E608((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ActionService);
      a4 = v19;
      uint64_t result = sub_251C5E608((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ActionService);
      if ((v21 & 1) == 0)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *v19;
      if (!*v19) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_251C5E53C(v22 + v31 + v17, v30);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251C5E53C(v30, v23);
      v17 -= v28;
      ++v18;
      a4 = v19;
      if (v29 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251C5D780(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = type metadata accessor for ActionService();
  uint64_t v8 = MEMORY[0x270FA5388](v44);
  uint64_t v45 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v28 = -v13;
        unint64_t v42 = a4;
        unint64_t v43 = a1;
        do
        {
          unint64_t v29 = a3 + v28;
          sub_251C5E5A0(v26 + v28, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ActionService);
          unint64_t v30 = a2 + v28;
          unint64_t v31 = a3;
          uint64_t v32 = (uint64_t)v11;
          uint64_t v33 = v45;
          sub_251C5E5A0(a2 + v28, v45, (uint64_t (*)(void))type metadata accessor for ActionService);
          char v34 = MEMORY[0x2533A9CA0](v32, v33);
          uint64_t v35 = v33;
          uint64_t v11 = (char *)v32;
          sub_251C5E608(v35, (uint64_t (*)(void))type metadata accessor for ActionService);
          sub_251C5E608(v32, (uint64_t (*)(void))type metadata accessor for ActionService);
          if (v34)
          {
            if (v31 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              BOOL v36 = v31 == a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
              if (!v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v48 += v28;
          }
          else
          {
            unint64_t v39 = v46;
            v46 += v28;
            if (v31 < v39 || v29 >= v39)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v30 = a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              unint64_t v38 = v43;
              if (v31 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v30 = a2;
              unint64_t v37 = v42;
            }
          }
          unint64_t v26 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v30;
          a3 = v29;
        }
        while (v30 > v38);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_251C5E5A0(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ActionService);
        uint64_t v21 = v45;
        sub_251C5E5A0(a4, v45, (uint64_t (*)(void))type metadata accessor for ActionService);
        char v22 = MEMORY[0x2533A9CA0](v11, v21);
        sub_251C5E608(v21, (uint64_t (*)(void))type metadata accessor for ActionService);
        sub_251C5E608((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ActionService);
        unint64_t v23 = v48;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v48 < a2 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v47 + v13;
          if (v48 < v47 || v48 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v47 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v48 = v23 + v13;
        a4 = v47;
        if (v47 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_251ECD918(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel18ActionServiceGroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ActionServiceGroup();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_251F36B10() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(v4 + 24);
  uint64_t v11 = *(void *)(a1 + v10);
  uint64_t v12 = *(void *)(a2 + v10);
  return sub_251AFC01C(v11, v12);
}

uint64_t sub_251C5DD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v6 = type metadata accessor for ActionService();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v56 = (uint64_t)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v55 = (uint64_t)v50 - v9;
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v51 = a2 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
  v50[1] = v50;
  uint64_t v69 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v53 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v15;
  int64_t v52 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v59 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v68)
  {
    uint64_t v70 = a1;
    if (v13)
    {
      uint64_t v67 = (v13 - 1) & v13;
      int64_t v68 = i;
      unint64_t v18 = __clz(__rbit64(v13)) | (i << 6);
      goto LABEL_5;
    }
    int64_t v46 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v46 >= v52) {
      goto LABEL_23;
    }
    unint64_t v47 = *(void *)(v51 + 8 * v46);
    int64_t v48 = i + 1;
    if (!v47)
    {
      int64_t v48 = i + 2;
      if (i + 2 >= v52) {
        goto LABEL_23;
      }
      unint64_t v47 = *(void *)(v51 + 8 * v48);
      if (!v47)
      {
        int64_t v48 = i + 3;
        if (i + 3 >= v52) {
          goto LABEL_23;
        }
        unint64_t v47 = *(void *)(v51 + 8 * v48);
        if (!v47)
        {
          int64_t v48 = i + 4;
          if (i + 4 >= v52) {
            goto LABEL_23;
          }
          unint64_t v47 = *(void *)(v51 + 8 * v48);
          if (!v47) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v67 = (v47 - 1) & v47;
    int64_t v68 = v48;
    unint64_t v18 = __clz(__rbit64(v47)) + (v48 << 6);
LABEL_5:
    uint64_t v19 = v59;
    uint64_t v20 = *(void *)(v59 + 48);
    uint64_t v21 = sub_251F34DA0();
    uint64_t v65 = *(void **)(v21 - 8);
    uint64_t v22 = v20 + v65[9] * v18;
    char v62 = (void (*)(char *, uint64_t, uint64_t))v65[2];
    uint64_t v23 = (uint64_t)v53;
    v62(v53, v22, v21);
    uint64_t v24 = *(void *)(v19 + 56);
    uint64_t v25 = v24 + *(void *)(*(void *)(type metadata accessor for StaticService() - 8) + 72) * v18;
    uint64_t v26 = v69;
    uint64_t v27 = v23 + *(int *)(v69 + 48);
    uint64_t v60 = type metadata accessor for StaticService;
    uint64_t v28 = sub_251C5E5A0(v25, v27, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v66 = v50;
    uint64_t v29 = v54;
    MEMORY[0x270FA5388](v28);
    unint64_t v30 = (char *)v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v31 = sub_251A4ECF0(v23, (uint64_t)v30, &qword_26B21E658);
    uint64_t v64 = v50;
    MEMORY[0x270FA5388](v31);
    uint64_t v32 = (uint64_t)&v30[*(int *)(v26 + 48)];
    uint64_t v63 = v32;
    uint64_t v33 = v32;
    char v34 = (void (*)(char *, char *, uint64_t))v62;
    v62(v30, (uint64_t)v30, v21);
    uint64_t v35 = v32;
    BOOL v36 = v60;
    uint64_t v37 = sub_251C5E5A0(v33, v35, (uint64_t (*)(void))v60);
    uint64_t v61 = v50;
    MEMORY[0x270FA5388](v37);
    uint64_t v38 = (uint64_t)&v30[*(int *)(v69 + 48)];
    v34(v30, v30, v21);
    sub_251C5E5A0(v33, v38, (uint64_t (*)(void))v36);
    uint64_t v39 = v57;
    swift_bridgeObjectRetain();
    uint64_t v40 = v58;
    swift_bridgeObjectRetain();
    uint64_t v41 = v55;
    ActionService.init(with:overrideCharacteristicValues:overrideProfileValues:)(v38, v39, v40, v55);
    unint64_t v42 = (void (*)(char *, uint64_t))v65[1];
    v42(v30, v21);
    uint64_t v43 = v56;
    sub_251C5E53C(v41, v56);
    uint64_t v44 = v70;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v71 = v44;
    sub_251A0FF7C(v43, (uint64_t)v30, isUniquelyReferenced_nonNull_native);
    a1 = v71;
    swift_bridgeObjectRelease();
    v42(v30, v21);
    sub_251C5E608(v63, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t result = sub_251A1B064((uint64_t)v30, &qword_26B21E658);
    unint64_t v13 = v67;
  }
  uint64_t v49 = i + 5;
  if (i + 5 >= v52)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  unint64_t v47 = *(void *)(v51 + 8 * v49);
  if (v47)
  {
    int64_t v48 = i + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v48 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v48 >= v52) {
      goto LABEL_23;
    }
    unint64_t v47 = *(void *)(v51 + 8 * v48);
    ++v49;
    if (v47) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_251C5E290()
{
  unint64_t result = qword_269BA0ED8;
  if (!qword_269BA0ED8)
  {
    type metadata accessor for ActionServiceGroup();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0ED8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActionServiceGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C5E300);
}

uint64_t sub_251C5E300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ActionServiceGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C5E3D8);
}

uint64_t sub_251C5E3D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251C5E498()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251C5E53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C5E5A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C5E608(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void StaticColorControlCluster.id.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 10);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
}

uint64_t StaticColorControlCluster.currentHue.getter()
{
  return *(unsigned __int8 *)(v0 + 11) | (*(unsigned __int8 *)(v0 + 12) << 8);
}

uint64_t StaticColorControlCluster.currentSaturation.getter()
{
  return *(unsigned __int8 *)(v0 + 13) | (*(unsigned __int8 *)(v0 + 14) << 8);
}

uint64_t StaticColorControlCluster.currentX.getter()
{
  return *(unsigned __int8 *)(v0 + 15) | (*(unsigned __int8 *)(v0 + 16) << 8);
}

uint64_t StaticColorControlCluster.currentY.getter()
{
  return *(unsigned __int8 *)(v0 + 17) | (*(unsigned __int8 *)(v0 + 18) << 8);
}

uint64_t StaticColorControlCluster.colorTemperatureMireds.getter()
{
  return *(unsigned __int8 *)(v0 + 19) | (*(unsigned __int8 *)(v0 + 20) << 8);
}

uint64_t StaticColorControlCluster.colorMode.getter()
{
  return *(unsigned __int8 *)(v0 + 21);
}

uint64_t StaticColorControlCluster.init(id:currentHue:currentSaturation:currentX:currentY:colorTemperatureMireds:colorMode:)@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, __int16 a3@<W2>, __int16 a4@<W3>, __int16 a5@<W4>, __int16 a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  __int16 v8 = *(_WORD *)(result + 8);
  char v9 = *(unsigned char *)(result + 10);
  *(void *)a8 = *(void *)result;
  *(_WORD *)(a8 + 8) = v8;
  *(unsigned char *)(a8 + 10) = v9;
  *(unsigned char *)(a8 + 11) = a2;
  *(unsigned char *)(a8 + 12) = HIBYTE(a2) & 1;
  *(unsigned char *)(a8 + 13) = a3;
  *(unsigned char *)(a8 + 14) = HIBYTE(a3) & 1;
  *(unsigned char *)(a8 + 15) = a4;
  *(unsigned char *)(a8 + 16) = HIBYTE(a4) & 1;
  *(unsigned char *)(a8 + 17) = a5;
  *(unsigned char *)(a8 + 18) = HIBYTE(a5) & 1;
  *(unsigned char *)(a8 + 19) = a6;
  *(unsigned char *)(a8 + 20) = HIBYTE(a6) & 1;
  *(unsigned char *)(a8 + 21) = a7;
  return result;
}

uint64_t StaticColorControlCluster.hash(into:)()
{
  char v1 = v0[12];
  char v2 = v0[14];
  char v3 = v0[16];
  char v5 = v0[18];
  char v6 = v0[20];
  sub_251F36CF0();
  sub_251F36CD0();
  sub_251F36CE0();
  if ((v1 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if ((v2 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if ((v3 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if ((v5 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if ((v6 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36CC0();
}

unint64_t sub_251C5E8A8(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x48746E6572727563;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x58746E6572727563;
      break;
    case 4:
      unint64_t result = 0x59746E6572727563;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x646F4D726F6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251C5E998()
{
  return sub_251C5E8A8(*v0);
}

uint64_t sub_251C5E9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C5F738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C5E9C8(uint64_t a1)
{
  unint64_t v2 = sub_251C5F3C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C5EA04(uint64_t a1)
{
  unint64_t v2 = sub_251C5F3C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticColorControlCluster.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0EF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __int16 v8 = *((_WORD *)v1 + 4);
  char v9 = *((unsigned char *)v1 + 10);
  int v10 = *((unsigned __int8 *)v1 + 11);
  v19[12] = *((unsigned __int8 *)v1 + 12);
  v19[13] = v10;
  int v11 = *((unsigned __int8 *)v1 + 13);
  v19[10] = *((unsigned __int8 *)v1 + 14);
  v19[11] = v11;
  int v12 = *((unsigned __int8 *)v1 + 15);
  v19[8] = *((unsigned __int8 *)v1 + 16);
  v19[9] = v12;
  LODWORD(v5) = *((unsigned __int8 *)v1 + 18);
  v19[6] = *((unsigned __int8 *)v1 + 17);
  v19[7] = v5;
  LODWORD(v5) = *((unsigned __int8 *)v1 + 20);
  v19[4] = *((unsigned __int8 *)v1 + 19);
  v19[5] = v5;
  v19[3] = *((unsigned __int8 *)v1 + 21);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1;
  uint64_t v16 = v15;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_251C5F3C8();
  sub_251F36DA0();
  uint64_t v21 = v7;
  __int16 v22 = v8;
  char v23 = v9;
  char v24 = 0;
  sub_251A900F8();
  uint64_t v17 = v20;
  sub_251F36A20();
  if (!v17)
  {
    LOBYTE(v21) = 1;
    sub_251F36990();
    LOBYTE(v21) = 2;
    sub_251F36990();
    LOBYTE(v21) = 3;
    sub_251F36990();
    LOBYTE(v21) = 4;
    sub_251F36990();
    LOBYTE(v21) = 5;
    sub_251F36990();
    LOBYTE(v21) = 6;
    sub_251F36A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
}

uint64_t StaticColorControlCluster.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticColorControlCluster.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0F00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C5F3C8();
  sub_251F36D90();
  if (!v2)
  {
    char v26 = 0;
    sub_251A9014C();
    sub_251F36880();
    uint64_t v21 = a2;
    uint64_t v9 = v22;
    int v10 = v23;
    int v11 = v24;
    LOBYTE(v22) = 1;
    int v18 = sub_251F367F0();
    int v19 = v11;
    uint64_t v20 = v9;
    int v25 = v10;
    LOBYTE(v22) = 2;
    LOWORD(v11) = sub_251F367F0();
    LOBYTE(v22) = 3;
    LOWORD(v9) = sub_251F367F0();
    LOBYTE(v22) = 4;
    LOWORD(v10) = sub_251F367F0();
    LOBYTE(v22) = 5;
    HIDWORD(v17) = sub_251F367F0();
    LOBYTE(v22) = 6;
    char v13 = sub_251F368A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = v21;
    *uint64_t v21 = v20;
    *((_WORD *)v14 + 4) = v25;
    *((unsigned char *)v14 + 10) = v19;
    char v15 = BYTE1(v18);
    *((unsigned char *)v14 + 11) = v18;
    *((unsigned char *)v14 + 12) = v15 & 1;
    *((unsigned char *)v14 + 13) = v11;
    *((unsigned char *)v14 + 14) = BYTE1(v11) & 1;
    *((unsigned char *)v14 + 15) = v9;
    *((unsigned char *)v14 + 16) = BYTE1(v9) & 1;
    *((unsigned char *)v14 + 17) = v10;
    *((unsigned char *)v14 + 18) = BYTE1(v10) & 1;
    char v16 = BYTE5(v17);
    *((unsigned char *)v14 + 19) = BYTE4(v17);
    *((unsigned char *)v14 + 20) = v16 & 1;
    *((unsigned char *)v14 + 21) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251C5F088()
{
  return sub_251F36D00();
}

uint64_t sub_251C5F130()
{
  return sub_251F36D00();
}

uint64_t sub_251C5F1D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return StaticColorControlCluster.init(from:)(a1, a2);
}

uint64_t sub_251C5F1E8(void *a1)
{
  return StaticColorControlCluster.encode(to:)(a1);
}

uint64_t StaticColorControlCluster.init(path:device:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_unknownObjectRelease();
  unint64_t v5 = *(unsigned __int16 *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 10) << 16) | 0x1000100000000;
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v5;
  *(_WORD *)(a2 + 20) = 1;
  *(_DWORD *)(a2 + 16) = 65537;
  return result;
}

uint64_t StaticColorControlCluster.stepColor()()
{
  return sub_251C5F41C(*(uint64_t (**)(void))(v0 + 8));
}

BOOL _s13HomeDataModel25StaticColorControlClusterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0;
  if (*(void *)a1 == *(void *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    if (dword_251F49E34[*(char *)(a1 + 10)] == dword_251F49E34[*(char *)(a2 + 10)])
    {
      int v3 = *(unsigned __int8 *)(a1 + 13);
      char v4 = *(unsigned char *)(a1 + 14);
      int v5 = *(unsigned __int8 *)(a1 + 15);
      char v6 = *(unsigned char *)(a1 + 16);
      int v7 = *(unsigned __int8 *)(a1 + 17);
      char v8 = *(unsigned char *)(a1 + 18);
      int v9 = *(unsigned __int8 *)(a1 + 19);
      char v10 = *(unsigned char *)(a1 + 20);
      int v11 = *(unsigned __int8 *)(a1 + 21);
      if (*(unsigned char *)(a1 + 12))
      {
        if (!*(unsigned char *)(a2 + 12)) {
          return 0;
        }
      }
      else
      {
        if (*(unsigned __int8 *)(a1 + 11) == *(unsigned __int8 *)(a2 + 11)) {
          char v12 = *(unsigned char *)(a2 + 12);
        }
        else {
          char v12 = 1;
        }
        if (v12) {
          return 0;
        }
      }
      if (v4)
      {
        if (!*(unsigned char *)(a2 + 14)) {
          return 0;
        }
      }
      else
      {
        if (v3 == *(unsigned __int8 *)(a2 + 13)) {
          char v13 = *(unsigned char *)(a2 + 14);
        }
        else {
          char v13 = 1;
        }
        if (v13) {
          return 0;
        }
      }
      if (v6)
      {
        if (!*(unsigned char *)(a2 + 16)) {
          return 0;
        }
      }
      else
      {
        if (v5 == *(unsigned __int8 *)(a2 + 15)) {
          char v14 = *(unsigned char *)(a2 + 16);
        }
        else {
          char v14 = 1;
        }
        if (v14) {
          return 0;
        }
      }
      if ((v8 & 1) == 0)
      {
        if (v7 == *(unsigned __int8 *)(a2 + 17)) {
          char v15 = *(unsigned char *)(a2 + 18);
        }
        else {
          char v15 = 1;
        }
        if (v15) {
          return 0;
        }
LABEL_32:
        if (v10)
        {
          if (!*(unsigned char *)(a2 + 20)) {
            return 0;
          }
        }
        else
        {
          if (v9 == *(unsigned __int8 *)(a2 + 19)) {
            char v17 = *(unsigned char *)(a2 + 20);
          }
          else {
            char v17 = 1;
          }
          if (v17) {
            return 0;
          }
        }
        return v11 == *(unsigned __int8 *)(a2 + 21);
      }
      if (*(unsigned char *)(a2 + 18)) {
        goto LABEL_32;
      }
    }
    return 0;
  }
  return v2;
}

unint64_t sub_251C5F3C8()
{
  unint64_t result = qword_269BA0EF8;
  if (!qword_269BA0EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0EF8);
  }
  return result;
}

uint64_t sub_251C5F41C(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_251C5F428()
{
  unint64_t result = qword_269BA0F28;
  if (!qword_269BA0F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0F28);
  }
  return result;
}

__n128 __swift_memcpy22_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 14) = *(void *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticColorControlCluster(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xE5 && *(unsigned char *)(a1 + 22)) {
    return (*(_DWORD *)a1 + 229);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 10);
  BOOL v4 = v3 >= 0x1C;
  int v5 = v3 - 28;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticColorControlCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE4)
  {
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 229;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xE5) {
      *(unsigned char *)(result + 22) = 1;
    }
  }
  else
  {
    if (a3 >= 0xE5) {
      *(unsigned char *)(result + 22) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 10) = a2 + 27;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticColorControlCluster()
{
  return &type metadata for StaticColorControlCluster;
}

unsigned char *storeEnumTagSinglePayload for StaticColorControlCluster.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C5F5F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticColorControlCluster.CodingKeys()
{
  return &type metadata for StaticColorControlCluster.CodingKeys;
}

unint64_t sub_251C5F634()
{
  unint64_t result = qword_269BA0F30;
  if (!qword_269BA0F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0F30);
  }
  return result;
}

unint64_t sub_251C5F68C()
{
  unint64_t result = qword_269BA0F38;
  if (!qword_269BA0F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0F38);
  }
  return result;
}

unint64_t sub_251C5F6E4()
{
  unint64_t result = qword_269BA0F40;
  if (!qword_269BA0F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0F40);
  }
  return result;
}

uint64_t sub_251C5F738(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x48746E6572727563 && a2 == 0xEA00000000006575 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6F2F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x58746E6572727563 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x59746E6572727563 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000251F6F310 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x646F4D726F6C6F63 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t ControlCenterPredictionsFetchTimeEvent.eventName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlCenterPredictionsFetchTimeEvent.domainPrefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double ControlCenterPredictionsFetchTimeEvent.duration.getter()
{
  return *(double *)(v0 + 32);
}

void ControlCenterPredictionsFetchTimeEvent.duration.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*ControlCenterPredictionsFetchTimeEvent.duration.modify())()
{
  return nullsub_1;
}

uint64_t ControlCenterPredictionsFetchTimeEvent.numberOfPredictions.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ControlCenterPredictionsFetchTimeEvent.numberOfPredictions.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*ControlCenterPredictionsFetchTimeEvent.numberOfPredictions.modify())()
{
  return nullsub_1;
}

uint64_t ControlCenterPredictionsFetchTimeEvent.processName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlCenterPredictionsFetchTimeEvent.processName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ControlCenterPredictionsFetchTimeEvent.processName.modify())()
{
  return nullsub_1;
}

void __swiftcall ControlCenterPredictionsFetchTimeEvent.init(duration:numberOfPredictions:)(HomeDataModel::ControlCenterPredictionsFetchTimeEvent *__return_ptr retstr, Swift::Double duration, Swift::UInt numberOfPredictions)
{
  id v6 = objc_msgSend(self, sel_processInfo);
  id v7 = objc_msgSend(v6, sel_processName);

  uint64_t v8 = sub_251F356F0();
  char v10 = v9;

  retstr->eventName._countAndFlagsBits = 0xD000000000000019;
  retstr->eventName._object = (void *)0x8000000251F6F330;
  retstr->domainPrefix.value._countAndFlagsBits = 0xD00000000000001CLL;
  retstr->domainPrefix.value._object = (void *)0x8000000251F6F350;
  retstr->duration = duration;
  retstr->numberOfPredictions = numberOfPredictions;
  retstr->processName._countAndFlagsBits = v8;
  retstr->processName._object = v10;
}

unint64_t sub_251C5FC3C()
{
  unint64_t result = 0x6D614E746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x72506E69616D6F64;
      break;
    case 2:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x4E737365636F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251C5FD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C604B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C5FD28(uint64_t a1)
{
  unint64_t v2 = sub_251C5FFC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C5FD64(uint64_t a1)
{
  unint64_t v2 = sub_251C5FFC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ControlCenterPredictionsFetchTimeEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED20);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  void v15[3] = v1[3];
  v15[4] = v8;
  uint64_t v9 = v1[5];
  v15[1] = v1[6];
  v15[2] = v9;
  v15[0] = v1[7];
  uint64_t v10 = a1[3];
  int v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_251C5FFC0();
  sub_251F36DA0();
  char v20 = 0;
  sub_251F369D0();
  if (!v2)
  {
    char v19 = 1;
    sub_251F36910();
    char v18 = 2;
    sub_251F369F0();
    char v17 = 3;
    sub_251F36A10();
    char v16 = 4;
    sub_251F369D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

unint64_t sub_251C5FFC0()
{
  unint64_t result = qword_26B21EC98;
  if (!qword_26B21EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21EC98);
  }
  return result;
}

unint64_t sub_251C60014(uint64_t a1)
{
  unint64_t result = sub_251B44B68();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_251C6003C(void *a1)
{
  return ControlCenterPredictionsFetchTimeEvent.encode(to:)(a1);
}

uint64_t destroy for ControlCenterPredictionsFetchTimeEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ControlCenterPredictionsFetchTimeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ControlCenterPredictionsFetchTimeEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ControlCenterPredictionsFetchTimeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlCenterPredictionsFetchTimeEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlCenterPredictionsFetchTimeEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlCenterPredictionsFetchTimeEvent()
{
  return &type metadata for ControlCenterPredictionsFetchTimeEvent;
}

unsigned char *storeEnumTagSinglePayload for ControlCenterPredictionsFetchTimeEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C60374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlCenterPredictionsFetchTimeEvent.CodingKeys()
{
  return &type metadata for ControlCenterPredictionsFetchTimeEvent.CodingKeys;
}

unint64_t sub_251C603B0()
{
  unint64_t result = qword_269BA0F48;
  if (!qword_269BA0F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0F48);
  }
  return result;
}

unint64_t sub_251C60408()
{
  unint64_t result = qword_26B21ECA8;
  if (!qword_26B21ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21ECA8);
  }
  return result;
}

unint64_t sub_251C60460()
{
  unint64_t result = qword_26B21ECA0;
  if (!qword_26B21ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21ECA0);
  }
  return result;
}

uint64_t sub_251C604B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72506E69616D6F64 && a2 == 0xEC00000078696665 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F6F370 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4E737365636F7270 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251C60708(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 16);
  v24[1] = a3;
  if (v8)
  {
    uint64_t v9 = sub_251F34DA0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = v10;
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v25 = *(void *)(v10 + 72);
    uint64_t v32 = (void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v14 = v10 + 16;
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v30 = v14;
    uint64_t v31 = v13;
    uint64_t v28 = v11;
    uint64_t v29 = (uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v26 = v11 + 32;
    uint64_t v27 = (void (**)(char *, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      v31(v7, v12, v9);
      (*v32)(v7, 0, 1, v9);
      uint64_t v15 = (*v29)(v7, 1, v9);
      if (v15 == 1) {
        break;
      }
      MEMORY[0x270FA5388](v15);
      char v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v17, v7, v9);
      char v19 = v33(v17);
      if (v3)
      {
        (*v27)(v17, v9);
        swift_bridgeObjectRelease();
        return v22 & 1;
      }
      char v20 = v19;
      (*v27)(v17, v9);
      if (v20)
      {
        swift_bridgeObjectRelease();
        char v22 = 1;
        return v22 & 1;
      }
      v12 += v25;
      if (!--v8) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v21 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_251C60A00(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  v2[18] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  sub_251F35C80();
  v2[21] = sub_251F35C70();
  uint64_t v4 = sub_251F35C00();
  v2[22] = v4;
  v2[23] = v3;
  return MEMORY[0x270FA2498](sub_251C60AD8, v4, v3);
}

uint64_t sub_251C60AD8()
{
  sub_251C69C70(v0[16], v0[20], (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v1 = (unsigned char *)v0[20];
    swift_release();
    byte_269B9DED0 = (*v1 & 1) == 0;
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  sub_251AF0688(v0[20]);
  if (byte_269B9DED0 != 1
    || (BOOL v2 = (void **)(v0[17] + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome),
        swift_beginAccess(),
        uint64_t v3 = *v2,
        v0[24] = *v2,
        !v3))
  {
    swift_release();
    goto LABEL_9;
  }
  sub_251C69C70(v0[16], v0[19], (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v15 = *(void *)v0[19];
    swift_beginAccess();
    id v16 = v3;
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_251C68C14(v17, v15);
    v0[28] = v18;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_251F35120();
    swift_release();
    swift_release();
    uint64_t v19 = v0[11];
    v0[29] = v19;
    v0[12] = v19;
    uint64_t v9 = v0 + 12;
    char v20 = (void *)swift_task_alloc();
    v0[30] = v20;
    *char v20 = v0;
    v20[1] = sub_251C6110C;
    uint64_t v11 = v0[16];
    uint64_t v12 = (uint64_t)v18;
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 7)
  {
    uint64_t v5 = (uint64_t *)(v0[17] + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
    swift_beginAccess();
    uint64_t v6 = *v5;
    v0[25] = *v5;
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v3;
    swift_bridgeObjectRetain();
    sub_251F35120();
    swift_release();
    swift_release();
    uint64_t v8 = v0[14];
    v0[26] = v8;
    v0[15] = v8;
    uint64_t v9 = v0 + 15;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[27] = v10;
    void *v10 = v0;
    v10[1] = sub_251C60F34;
    uint64_t v11 = v0[16];
    uint64_t v12 = v6;
LABEL_13:
    return sub_251C64F54(v11, v12, v9);
  }
  uint64_t v21 = qword_269B9C2B0;
  id v22 = v3;
  if (v21 != -1) {
    swift_once();
  }
  unsigned __int16 v23 = (void *)swift_task_alloc();
  v0[31] = v23;
  *unsigned __int16 v23 = v0;
  v23[1] = sub_251C6126C;
  uint64_t v24 = v0[16];
  return sub_251D39E48((uint64_t)(v0 + 13), v24, 0);
}

uint64_t sub_251C60F34()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_251C61094, v3, v2);
}

uint64_t sub_251C61094()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251C6110C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_251C69D68, v3, v2);
}

uint64_t sub_251C6126C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_251C613A4, v3, v2);
}

uint64_t sub_251C613A4()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = v0[19];
  swift_release();

  sub_251AF0688(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251C61428@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  id v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_251F34DA0();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, a2);
  return sub_251E3E7B8((uint64_t)v9, (uint64_t)v13, v5, v6, a3);
}

uint64_t sub_251C615AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  id v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_251F34DA0();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, a2);
  uint64_t v15 = sub_251F34D20();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251D9F27C();
  return sub_251E7239C((uint64_t)v9, (uint64_t)v13, (uint64_t)v17, v5, v6, a3);
}

uint64_t sub_251C61788()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id;
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1A4DC(*(id *)(v0 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError));
  sub_251A1A4DC(*(id *)(v0 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError));
  return swift_deallocClassInstance();
}

uint64_t sub_251C61868()
{
  return type metadata accessor for _CoordinationClassObject();
}

uint64_t type metadata accessor for _CoordinationClassObject()
{
  uint64_t result = qword_269BA0F50;
  if (!qword_269BA0F50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251C618BC()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_251C61968()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251C61990(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if ((sub_251F34D70() & 1) == 0
    || (sub_251AB5D40(*(void *)(v2 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms), *(void *)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers);
  return sub_251AB5FF4(v4, v5);
}

uint64_t sub_251C61A14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id;
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_251C61A8C(uint64_t a1)
{
  *(void *)(v2 + 296) = a1;
  *(void *)(v2 + 304) = v1;
  return MEMORY[0x270FA2498](sub_251C61AAC, 0, 0);
}

uint64_t sub_251C61AAC()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0 + 56;
  uint64_t v2 = MEMORY[0x2533AC870](*(void *)(v0 + 304) + 56);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_251F350A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_269B9DEE0);
    uint64_t v5 = sub_251F35080();
    os_log_type_t v6 = sub_251F35FD0();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v37 = v8;
      *(_DWORD *)id v7 = 136315138;
      *(void *)(v0 + 288) = sub_251A00E84(0xD000000000000010, 0x8000000251F6F430, &v37);
      uint64_t v1 = v0 + 56;
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v5, v6, "cancel old %s fetch", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v8, -1, -1);
      MEMORY[0x2533AC760](v7, -1, -1);
    }

    objc_msgSend(v3, sel_cancel);
    swift_unknownObjectWeakAssign();
  }
  uint64_t v9 = *(void *)(v0 + 304) + 16;
  sub_251A1A4EC(v9, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
  if (swift_dynamicCast())
  {
    sub_251A1A444((long long *)(v0 + 96), v0 + 16);
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_251F350A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_269B9DEE0);
    sub_251A1A4EC(v0 + 16, v0 + 216);
    uint64_t v11 = sub_251F35080();
    os_log_type_t v12 = sub_251F35FD0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = v36;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v14 = *(void *)(v0 + 240);
      uint64_t v15 = *(void *)(v0 + 248);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 216), v14);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 80))(v14, v15);
      *(void *)(v0 + 280) = sub_251A00E84(v16, v17, &v37);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 216);
      _os_log_impl(&dword_2519F3000, v11, v12, "start alarm fetch for %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v36, -1, -1);
      MEMORY[0x2533AC760](v13, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(v0 + 216);
    }

    uint64_t v29 = v0 + 272;
    uint64_t v30 = (int8x16_t *)swift_task_alloc();
    *(void *)(v0 + 312) = v30;
    v30[1] = vextq_s8(*(int8x16_t *)(v0 + 296), *(int8x16_t *)(v0 + 296), 8uLL);
    v30[2].i64[0] = v0 + 16;
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v31;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FA8);
    *uint64_t v31 = v0;
    v31[1] = sub_251C6219C;
    uint64_t v33 = sub_251C695F4;
  }
  else
  {
    uint64_t v18 = v0 + 136;
    *(void *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_251A1B064(v0 + 96, &qword_269B9DF68);
    sub_251A1A4EC(v9, v0 + 136);
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_251F350A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_269B9DEE0);
    sub_251A1A4EC(v0 + 136, v0 + 176);
    char v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FD0();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v37 = v23;
      *(_DWORD *)id v22 = 136315138;
      uint64_t v24 = *(void *)(v0 + 200);
      uint64_t v25 = *(void *)(v0 + 208);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 176), v24);
      uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
      *(void *)(v0 + 256) = sub_251A00E84(v26, v27, &v37);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 176);
      _os_log_impl(&dword_2519F3000, v20, v21, "start timer fetch for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v23, -1, -1);
      uint64_t v28 = v22;
      uint64_t v18 = v0 + 136;
      MEMORY[0x2533AC760](v28, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(v0 + 176);
    }

    uint64_t v29 = v0 + 264;
    uint64_t v30 = (int8x16_t *)swift_task_alloc();
    *(void *)(v0 + 328) = v30;
    v30[1] = vextq_s8(*(int8x16_t *)(v0 + 296), *(int8x16_t *)(v0 + 296), 8uLL);
    v30[2].i64[0] = v18;
    char v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v34;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FA8);
    void *v34 = v0;
    v34[1] = sub_251C62318;
    uint64_t v33 = sub_251C695E8;
  }
  return MEMORY[0x270FA2318](v29, 0, 0, 0x6F66286863746566, 0xEB00000000293A72, v33, v30, v32);
}

uint64_t sub_251C6219C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C622B4, 0, 0);
}

uint64_t sub_251C622B4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251C62318()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C62430, 0, 0);
}

uint64_t sub_251C62430()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251C62494(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_251C624B4, 0, 0);
}

uint64_t sub_251C624B4()
{
  uint64_t v26 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 56;
  uint64_t v3 = MEMORY[0x2533AC870](*(void *)(v0 + 128) + 56);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251F350A0();
    __swift_project_value_buffer(v5, (uint64_t)qword_269B9DEE0);
    os_log_type_t v6 = sub_251F35080();
    os_log_type_t v7 = sub_251F35FD0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v25 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      *(void *)(v0 + 112) = sub_251A00E84(0xD000000000000010, 0x8000000251F6F3F0, &v25);
      uint64_t v2 = v0 + 56;
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v6, v7, "cancel old %s fetch", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v9, -1, -1);
      uint64_t v10 = v8;
      uint64_t v1 = v0 + 16;
      MEMORY[0x2533AC760](v10, -1, -1);
    }

    objc_msgSend(v4, sel_cancel);
    swift_unknownObjectWeakAssign();
  }
  sub_251A1A4EC(*(void *)(v0 + 128) + 16, v1);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(v1, v2);
  os_log_type_t v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FD0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v16 = (void *)v2;
    uint64_t v18 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1(v16, v18);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 80))(v18, v17);
    *(void *)(v0 + 104) = sub_251A00E84(v19, v20, &v25);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    _os_log_impl(&dword_2519F3000, v12, v13, "start alarm fetch for %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2);
  }

  os_log_type_t v21 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 136) = v21;
  v21[1] = vextq_s8(*(int8x16_t *)(v0 + 120), *(int8x16_t *)(v0 + 120), 8uLL);
  v21[2].i64[0] = v1;
  id v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0F90);
  *id v22 = v0;
  v22[1] = sub_251C62910;
  return MEMORY[0x270FA2318](v0 + 96, 0, 0, 0x6F66286863746566, 0xEB00000000293A72, sub_251C690F8, v21, v23);
}

uint64_t sub_251C62910()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C62A28, 0, 0);
}

uint64_t sub_251C62A28()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_251C62A8C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  v22[1] = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = a4[3];
  uint64_t v16 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v15);
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 88))(a3, v15, v16);
  swift_unknownObjectWeakAssign();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v18, (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = v23;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251B93654;
  aBlock[3] = v24;
  unint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v21 = objc_msgSend(v17, sel_addCompletionBlock_, v20);
  _Block_release(v20);
}

uint64_t sub_251C62C9C(void *a1)
{
  if (a1)
  {
    *((void *)&v15 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FA0);
    *(void *)&long long v14 = a1;
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  id v2 = a1;
  uint64_t v3 = sub_251C69170((uint64_t)&v14);
  sub_251A1B064((uint64_t)&v14, &qword_26B21E190);
  uint64_t v4 = sub_251C63144((uint64_t)v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F350A0();
  __swift_project_value_buffer(v5, (uint64_t)qword_269B9DEE0);
  swift_bridgeObjectRetain();
  os_log_type_t v6 = sub_251F35080();
  os_log_type_t v7 = sub_251F35FD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(void *)&long long v14 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
    uint64_t v11 = MEMORY[0x2533AAA10](v4, v10);
    sub_251A00E84(v11, v12, (uint64_t *)&v14);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v6, v7, "got alarm update result. Alarms: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v9, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(void *)&long long v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB0);
  return sub_251F35C20();
}

uint64_t sub_251C62EDC(void *a1)
{
  if (a1)
  {
    *((void *)&v15 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FA0);
    *(void *)&long long v14 = a1;
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  id v2 = a1;
  uint64_t v3 = sub_251C69170((uint64_t)&v14);
  sub_251A1B064((uint64_t)&v14, &qword_26B21E190);
  uint64_t v4 = sub_251C632C4((uint64_t)v3, (void (*)(BOOL, unint64_t, uint64_t))sub_251A3E5C8, (void (*)(unsigned char *, unint64_t))sub_251A1A444);
  swift_bridgeObjectRelease();
  if (!v4) {
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F350A0();
  __swift_project_value_buffer(v5, (uint64_t)qword_269B9DEE0);
  swift_bridgeObjectRetain();
  os_log_type_t v6 = sub_251F35080();
  os_log_type_t v7 = sub_251F35FD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(void *)&long long v14 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
    uint64_t v11 = MEMORY[0x2533AAA10](v4, v10);
    sub_251A00E84(v11, v12, (uint64_t *)&v14);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v6, v7, "got alarm update result. Alarms: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v9, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(void *)&long long v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0F98);
  return sub_251F35C20();
}

uint64_t sub_251C63144(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_251A3E598(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 40)
    {
      sub_251A1A4EC(i, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_251A1A444(v8, (uint64_t)v11);
      sub_251A1A444(v11, (uint64_t)v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E598(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_251A3E598(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      sub_251A1A444(v10, v3 + 40 * v6 + 32);
      if (!--v2) {
        return v3;
      }
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    swift_release();
    sub_251A1B064((uint64_t)v8, &qword_269B9DF08);
    return 0;
  }
  return v3;
}

uint64_t sub_251C632C4(uint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t), void (*a3)(unsigned char *, unint64_t))
{
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  a2(0, v6, 0);
  uint64_t v7 = v13;
  if (v6)
  {
    uint64_t v8 = a1 + 32;
    do
    {
      sub_251A1A4EC(v8, (uint64_t)v12);
      uint64_t v13 = v7;
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        a2(v9 > 1, v10 + 1, 1);
        uint64_t v7 = v13;
      }
      *(void *)(v7 + 16) = v10 + 1;
      a3(v12, v7 + 40 * v10 + 32);
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_251C633B4(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = MEMORY[0x263F8EE78];
  sub_251A3E2C0(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = v9;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v6) {
      return v4;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return v4;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x2533AB3A0](0, a1);
    sub_251F35EC0();
    swift_unknownObjectRelease();
  }
  else
  {
    id v7 = *(id *)(a1 + 32);
    sub_251F35EC0();
  }
  swift_release();
  return 0;
}

void sub_251C635DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = a4[3];
  uint64_t v12 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v11);
  uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 72))(a3, v11, v12);
  swift_unknownObjectWeakAssign();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_251C69740;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251B93654;
  aBlock[3] = &block_descriptor_36;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v13, sel_addCompletionBlock_, v16);
  _Block_release(v16);
}

uint64_t sub_251C637FC(void *a1)
{
  if (a1)
  {
    *((void *)&v15 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FA0);
    *(void *)&long long v14 = a1;
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  id v2 = a1;
  uint64_t v3 = sub_251C697F8((uint64_t)&v14);
  sub_251A1B064((uint64_t)&v14, &qword_26B21E190);
  uint64_t v4 = sub_251C632C4((uint64_t)v3, (void (*)(BOOL, unint64_t, uint64_t))sub_251A3E598, (void (*)(unsigned char *, unint64_t))sub_251A1A444);
  swift_bridgeObjectRelease();
  if (!v4) {
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F350A0();
  __swift_project_value_buffer(v5, (uint64_t)qword_269B9DEE0);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_251F35080();
  os_log_type_t v7 = sub_251F35FD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(void *)&long long v14 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
    uint64_t v11 = MEMORY[0x2533AAA10](v4, v10);
    sub_251A00E84(v11, v12, (uint64_t *)&v14);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v6, v7, "got timer update result. Timers: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v9, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(void *)&long long v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB0);
  return sub_251F35C20();
}

uint64_t sub_251C63A64()
{
  return sub_251F35650() & 1;
}

uint64_t sub_251C63AD4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_251C63B64(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticService, &qword_26B21F1B8, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251C63B1C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_251C63B64(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, &qword_269B9C900, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
}

uint64_t sub_251C63B64(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t *a6, uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  uint64_t v58 = a8;
  uint64_t v51 = a7;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v11 = a5(0);
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v57 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v49 = (char *)&v45 - v14;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t result = sub_251F36700();
  uint64_t v16 = result;
  if (v46 < 1) {
    unint64_t v17 = 0;
  }
  else {
    unint64_t v17 = *v45;
  }
  uint64_t v18 = 0;
  uint64_t v19 = result + 64;
  unint64_t v47 = a4;
  uint64_t v48 = result;
  uint64_t v20 = (uint64_t)v49;
  while (1)
  {
    uint64_t v56 = a3;
    if (v17)
    {
      uint64_t v53 = (v17 - 1) & v17;
      uint64_t v54 = v18;
      unint64_t v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      uint64_t v22 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_40;
      }
      if (v22 >= v46) {
        return v16;
      }
      unint64_t v23 = v45[v22];
      uint64_t v24 = v18 + 1;
      if (!v23)
      {
        uint64_t v24 = v18 + 2;
        if (v18 + 2 >= v46) {
          return v16;
        }
        unint64_t v23 = v45[v24];
        if (!v23)
        {
          uint64_t v24 = v18 + 3;
          if (v18 + 3 >= v46) {
            return v16;
          }
          unint64_t v23 = v45[v24];
          if (!v23)
          {
            uint64_t v25 = v18 + 4;
            if (v18 + 4 >= v46) {
              return v16;
            }
            unint64_t v23 = v45[v25];
            if (!v23)
            {
              while (1)
              {
                uint64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v24 >= v46) {
                  return v16;
                }
                unint64_t v23 = v45[v24];
                ++v25;
                if (v23) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v53 = (v23 - 1) & v23;
      uint64_t v54 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    uint64_t v26 = sub_251F34DA0();
    int64_t v52 = &v45;
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(void *)(v27 + 64);
    MEMORY[0x270FA5388](v26);
    unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v31 = *(void *)(v30 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))((char *)&v45 - v29, a4[6] + v31 * v21, v26);
    uint64_t v32 = a4[7];
    uint64_t v33 = *(void *)(v50 + 72);
    uint64_t v34 = sub_251C69C70(v32 + v33 * v21, v20, v51);
    uint64_t v55 = &v45;
    MEMORY[0x270FA5388](v34);
    uint64_t v35 = (char *)&v45 - v29;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v36((char *)&v45 - v29, (char *)&v45 - v29, v26);
    sub_251C69CD8(v20, v57, v58);
    uint64_t v16 = v48;
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v37 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v19 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v40 = __clz(__rbit64((-1 << v38) & ~*(void *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v43 = v39 == v42;
        if (v39 == v42) {
          unint64_t v39 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v19 + 8 * v39);
      }
      while (v44 == -1);
      unint64_t v40 = __clz(__rbit64(~v44)) + (v39 << 6);
    }
    *(void *)(v19 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
    v36((char *)(*(void *)(v16 + 48) + v40 * v31), v35, v26);
    uint64_t result = sub_251C69CD8(v57, *(void *)(v16 + 56) + v40 * v33, v58);
    ++*(void *)(v16 + 16);
    a3 = v56 - 1;
    if (__OFSUB__(v56, 1)) {
      break;
    }
    unint64_t v17 = v53;
    a4 = v47;
    uint64_t v18 = v54;
    if (v56 == 1) {
      return v16;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251C64010(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_251C63B64(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, &qword_26B21F1D0, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
}

uint64_t sub_251C64058(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_251C63B64(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, &qword_269B9C918, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
}

uint64_t sub_251C640A0(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_251C63B64(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, &qword_269B9C920, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_251C640E8(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_251C63B64(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticActionSet, &qword_26B21E5C8, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

uint64_t sub_251C64130(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_251C63B64(a1, a2, a3, a4, type metadata accessor for StaticAccessory, &qword_26B21F1C8, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory);
}

uint64_t sub_251C64178(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a2;
  unint64_t v47 = a1;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  uint64_t v50 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C998);
  uint64_t result = sub_251F36700();
  uint64_t v4 = result;
  if (v48 < 1) {
    unint64_t v7 = 0;
  }
  else {
    unint64_t v7 = *v47;
  }
  uint64_t v8 = 0;
  uint64_t v9 = result + 64;
  uint64_t v49 = result;
  while (1)
  {
    if (v7)
    {
      uint64_t v52 = (v7 - 1) & v7;
      uint64_t v53 = v8;
      unint64_t v10 = __clz(__rbit64(v7)) | (v8 << 6);
      goto LABEL_25;
    }
    uint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_39;
    }
    if (v11 >= v48) {
      return v4;
    }
    unint64_t v12 = v47[v11];
    uint64_t v13 = v8 + 1;
    if (!v12)
    {
      uint64_t v13 = v8 + 2;
      if (v8 + 2 >= v48) {
        return v4;
      }
      unint64_t v12 = v47[v13];
      if (!v12)
      {
        uint64_t v13 = v8 + 3;
        if (v8 + 3 >= v48) {
          return v4;
        }
        unint64_t v12 = v47[v13];
        if (!v12) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v52 = (v12 - 1) & v12;
    uint64_t v53 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_25:
    uint64_t v15 = sub_251F34DA0();
    uint64_t v51 = &v47;
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void *)(v16 + 64);
    MEMORY[0x270FA5388](v15);
    unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v19 = v50;
    uint64_t v21 = *(void *)(v20 + 72);
    uint64_t v22 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v16 + 16))((char *)&v47 - v18, *(void *)(v50 + 48) + v21 * v10, v15);
    uint64_t v54 = &v47;
    unint64_t v23 = (long long *)(*(void *)(v19 + 56) + (v10 << 7));
    long long v24 = v23[3];
    long long v26 = *v23;
    long long v25 = v23[1];
    long long v57 = v23[2];
    long long v58 = v24;
    long long v55 = v26;
    long long v56 = v25;
    long long v27 = v23[7];
    long long v29 = v23[4];
    long long v28 = v23[5];
    long long v61 = v23[6];
    long long v62 = v27;
    long long v59 = v29;
    long long v60 = v28;
    MEMORY[0x270FA5388](v22);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v30((char *)&v47 - v18, (char *)&v47 - v18, v15);
    uint64_t v4 = v49;
    sub_251A1A678((uint64_t)&v55);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v31 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v9 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v34 = __clz(__rbit64((-1 << v32) & ~*(void *)(v9 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v37 = v33 == v36;
        if (v33 == v36) {
          unint64_t v33 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v9 + 8 * v33);
      }
      while (v38 == -1);
      unint64_t v34 = __clz(__rbit64(~v38)) + (v33 << 6);
    }
    *(void *)(v9 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(void *)(v4 + 48) + v34 * v21, (char *)&v47 - v18, v15);
    unint64_t v39 = (_OWORD *)(*(void *)(v4 + 56) + (v34 << 7));
    long long v41 = v61;
    long long v40 = v62;
    long long v42 = v60;
    v39[4] = v59;
    v39[5] = v42;
    v39[6] = v41;
    v39[7] = v40;
    long long v44 = v57;
    long long v43 = v58;
    long long v45 = v56;
    _OWORD *v39 = v55;
    v39[1] = v45;
    v39[2] = v44;
    v39[3] = v43;
    ++*(void *)(v4 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v7 = v52;
    uint64_t v8 = v53;
    if (!v5) {
      return v4;
    }
  }
  uint64_t v14 = v8 + 4;
  if (v8 + 4 >= v48) {
    return v4;
  }
  unint64_t v12 = v47[v14];
  if (v12)
  {
    uint64_t v13 = v8 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v48) {
      return v4;
    }
    unint64_t v12 = v47[v13];
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251C645E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA20);
  uint64_t result = sub_251F36700();
  uint64_t v8 = result;
  uint64_t v35 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v37 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v35) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v35) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v35) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v35) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v35) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v37 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = v4;
    uint64_t v19 = *(void **)(*(void *)(v4 + 48) + 8 * v13);
    uint64_t v20 = *(void *)(v4 + 56) + 24 * v13;
    uint64_t v21 = *(void *)v20;
    unint64_t v22 = *(void *)(v20 + 8);
    char v23 = *(unsigned char *)(v20 + 16);
    id v24 = v19;
    sub_251A1A870(v21, v22, v23);
    uint64_t result = sub_251F36110();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(void *)(*(void *)(v8 + 48) + 8 * v28) = v24;
    uint64_t v33 = *(void *)(v8 + 56) + 24 * v28;
    *(void *)uint64_t v33 = v21;
    *(void *)(v33 + 8) = v22;
    *(unsigned char *)(v33 + 16) = v23;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v18;
    uint64_t v10 = v37;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251C648AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C930);
  uint64_t result = sub_251F36700();
  uint64_t v8 = result;
  uint64_t v35 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v37 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v38 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v35) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v35) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v35) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v35) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v35) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v38 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = *(void **)(*(void *)(v4 + 48) + 8 * v13);
    uint64_t v19 = *(void *)(v4 + 56) + 32 * v13;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    char v23 = *(unsigned char *)(v19 + 24);
    id v24 = v18;
    sub_251A1A550(v20, v21, v22, v23);
    uint64_t result = sub_251F36110();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(void *)(*(void *)(v8 + 48) + 8 * v28) = v24;
    uint64_t v33 = *(void *)(v8 + 56) + 32 * v28;
    *(void *)uint64_t v33 = v20;
    *(void *)(v33 + 8) = v21;
    *(void *)(v33 + 16) = v22;
    *(unsigned char *)(v33 + 24) = v23;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v37;
    uint64_t v10 = v38;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251C64B70(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v34 = a1;
  uint64_t v35 = a2;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  uint64_t v37 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB70);
  uint64_t result = sub_251F36700();
  uint64_t v4 = result;
  if (v35 < 1) {
    unint64_t v7 = 0;
  }
  else {
    unint64_t v7 = *v34;
  }
  uint64_t v8 = 0;
  uint64_t v9 = result + 64;
  uint64_t v36 = result;
  while (1)
  {
    if (v7)
    {
      uint64_t v39 = (v7 - 1) & v7;
      uint64_t v40 = v8;
      unint64_t v10 = __clz(__rbit64(v7)) | (v8 << 6);
      goto LABEL_25;
    }
    uint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_39;
    }
    if (v11 >= v35) {
      return v4;
    }
    unint64_t v12 = v34[v11];
    uint64_t v13 = v8 + 1;
    if (!v12)
    {
      uint64_t v13 = v8 + 2;
      if (v8 + 2 >= v35) {
        return v4;
      }
      unint64_t v12 = v34[v13];
      if (!v12)
      {
        uint64_t v13 = v8 + 3;
        if (v8 + 3 >= v35) {
          return v4;
        }
        unint64_t v12 = v34[v13];
        if (!v12) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v39 = (v12 - 1) & v12;
    uint64_t v40 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_25:
    uint64_t v15 = sub_251F34DA0();
    uint64_t v38 = &v33;
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void *)(v16 + 64);
    MEMORY[0x270FA5388](v15);
    unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v19 = v37;
    uint64_t v21 = *(void *)(v20 + 72);
    uint64_t v22 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v16 + 16))((char *)&v33 - v18, *(void *)(v37 + 48) + v21 * v10, v15);
    long long v42 = &v33;
    uint64_t v41 = *(void *)(*(void *)(v19 + 56) + 8 * v10);
    MEMORY[0x270FA5388](v22);
    char v23 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v23((char *)&v33 - v18, (char *)&v33 - v18, v15);
    uint64_t v4 = v36;
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v9 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v9 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v9 + 8 * v26);
      }
      while (v31 == -1);
      unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(void *)(v9 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(*(void *)(v4 + 48) + v27 * v21, (char *)&v33 - v18, v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v27) = v41;
    ++*(void *)(v4 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v7 = v39;
    uint64_t v8 = v40;
    if (!v5) {
      return v4;
    }
  }
  uint64_t v14 = v8 + 4;
  if (v8 + 4 >= v35) {
    return v4;
  }
  unint64_t v12 = v34[v14];
  if (v12)
  {
    uint64_t v13 = v8 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v35) {
      return v4;
    }
    unint64_t v12 = v34[v13];
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251C64F54(uint64_t a1, uint64_t a2, void *a3)
{
  v4[77] = v3;
  v4[76] = a2;
  v4[75] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v4[78] = swift_task_alloc();
  v4[79] = *a3;
  v4[80] = sub_251F35C80();
  v4[81] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  v4[82] = v7;
  v4[83] = v6;
  return MEMORY[0x270FA2498](sub_251C65038, v7, v6);
}

uint64_t sub_251C65038()
{
  uint64_t v1 = v0 + 18;
  id v2 = v0 + 34;
  uint64_t v67 = (uint64_t)(v0 + 73);
  int64_t v68 = v0 + 70;
  uint64_t v3 = v0[79];
  uint64_t v4 = v0[76];
  v0[70] = MEMORY[0x263F8EE78];
  uint64_t v71 = v4 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v79 = v6 & *(void *)(v4 + 64);
  v0[84] = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA0F70) - 8) + 64);
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (unint64_t)(63 - v5) >> 6;
  unint64_t v64 = v8 - 1;
  swift_bridgeObjectRetain();
  unint64_t v9 = 0;
  int64_t v75 = v8;
  uint64_t v76 = v4;
  unint64_t v65 = v8 - 5;
  uint64_t v66 = v4 + 104;
  uint64_t v77 = v7;
  uint64_t v69 = v0;
  uint64_t v70 = v0 + 18;
  uint64_t v73 = v3;
  while (1)
  {
    v0[85] = 0;
    uint64_t v10 = swift_task_alloc();
    if (v79)
    {
      unint64_t v11 = __clz(__rbit64(v79));
      unint64_t v78 = v9;
      v79 &= v79 - 1;
      unint64_t v12 = v11 | (v9 << 6);
LABEL_9:
      uint64_t v13 = *(void *)(v76 + 48);
      uint64_t v14 = sub_251F34DA0();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v13 + *(void *)(*(void *)(v14 - 8) + 72) * v12, v14);
      uint64_t v15 = (long long *)(*(void *)(v76 + 56) + (v12 << 7));
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC38);
      uint64_t v17 = (void *)(v10 + *(int *)(v16 + 48));
      long long v18 = *v15;
      long long v19 = v15[1];
      long long v20 = v15[3];
      v1[2] = v15[2];
      v1[3] = v20;
      *uint64_t v1 = v18;
      v1[1] = v19;
      long long v21 = v15[4];
      long long v22 = v15[5];
      long long v23 = v15[7];
      v1[6] = v15[6];
      v1[7] = v23;
      v1[4] = v21;
      v1[5] = v22;
      memmove(v17, v15, 0x80uLL);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 0, 1, v16);
      sub_251A1A678((uint64_t)v1);
      uint64_t v7 = v77;
      goto LABEL_16;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v24 >= v75)
    {
      unint64_t v78 = v9;
    }
    else
    {
      unint64_t v25 = *(void *)(v71 + 8 * v24);
      if (v25) {
        goto LABEL_13;
      }
      if ((uint64_t)(v9 + 2) >= v75)
      {
        unint64_t v78 = v9 + 1;
      }
      else
      {
        unint64_t v25 = *(void *)(v71 + 8 * (v9 + 2));
        if (v25)
        {
          int64_t v24 = v9 + 2;
LABEL_13:
          unint64_t v78 = v24;
          unint64_t v79 = (v25 - 1) & v25;
          unint64_t v12 = __clz(__rbit64(v25)) + (v24 << 6);
          goto LABEL_9;
        }
        if ((uint64_t)(v9 + 3) >= v75)
        {
          unint64_t v78 = v9 + 2;
        }
        else
        {
          unint64_t v25 = *(void *)(v71 + 8 * (v9 + 3));
          if (v25)
          {
            int64_t v24 = v9 + 3;
            goto LABEL_13;
          }
          int64_t v24 = v9 + 4;
          if ((uint64_t)(v9 + 4) >= v75)
          {
            unint64_t v78 = v9 + 3;
          }
          else
          {
            unint64_t v25 = *(void *)(v71 + 8 * v24);
            if (v25) {
              goto LABEL_13;
            }
            while (v65 != v9)
            {
              unint64_t v25 = *(void *)(v66 + 8 * v9++);
              if (v25)
              {
                int64_t v24 = v9 + 4;
                goto LABEL_13;
              }
            }
            unint64_t v78 = v64;
          }
        }
      }
    }
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC38);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 1, 1, v26);
    unint64_t v79 = 0;
LABEL_16:
    sub_251C68DD8(v10, v7);
    swift_task_dealloc();
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC38);
    v0[86] = v27;
    uint64_t v28 = *(void *)(v27 - 8);
    v0[87] = v28;
    unint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    v0[88] = v29;
    v0[89] = (v28 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (v29(v7, 1, v27) == 1) {
      break;
    }
    uint64_t v30 = sub_251F34DA0();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = swift_task_alloc();
    uint64_t v33 = (long long *)(v7 + *(int *)(v27 + 48));
    long long v34 = v33[4];
    long long v35 = v33[5];
    long long v36 = v33[7];
    v2[6] = v33[6];
    v2[7] = v36;
    v2[4] = v34;
    v2[5] = v35;
    long long v37 = *v33;
    long long v38 = v33[1];
    long long v39 = v33[3];
    v2[2] = v33[2];
    v2[3] = v39;
    *id v2 = v37;
    v2[1] = v38;
    sub_251A1A774((uint64_t)v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v32, v7, v30);
    if (v3 && *(void *)(v3 + 16) && (unint64_t v40 = sub_2519FE584(v32), (v41 & 1) != 0))
    {
      uint64_t v42 = *(void *)(v3 + 56) + 32 * v40;
      long long v43 = *(void **)(v42 + 16);
      long long v44 = *(void **)(v42 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v74 = v43;
      sub_251A1A4CC(v43);
      sub_251A1A4CC(v44);
      LOBYTE(v43) = sub_251AB3E30();
      uint64_t v45 = swift_task_alloc();
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v46(v45, v32, v30);
      if (v43 & 1) == 0 && *(void *)(v73 + 16) && (sub_2519FE584(v45), (v47))
      {
        uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
        v48(v45, v30);
        v48(v32, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251A1A4DC(v74);
        sub_251A1A4DC(v44);
        swift_task_dealloc();
      }
      else
      {
        uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
        uint64_t v72 = v44;
        v49(v45, v30);
        swift_task_dealloc();
        uint64_t v50 = swift_task_alloc();
        v46(v50, v32, v30);
        type metadata accessor for _CoordinationClassObject();
        uint64_t v51 = swift_allocObject();
        v46(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v50, v30);
        uint64_t v52 = swift_task_alloc();
        *(void *)(v52 + 16) = v50;
        uint64_t v53 = MEMORY[0x263F8EE78];
        uint64_t v54 = sub_251D9EBF0((uint64_t)sub_251C69D40, v52, MEMORY[0x263F8EE78]);
        swift_task_dealloc();
        *(void *)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v54;
        uint64_t v55 = swift_task_alloc();
        *(void *)(v55 + 16) = v50;
        uint64_t v56 = v53;
        long long v57 = v49;
        uint64_t v58 = sub_251A52718((void (*)(uint64_t))sub_251C69D6C, v55, v56);
        swift_task_dealloc();
        v49(v50, v30);
        *(void *)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v58;
        *(void *)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = 1;
        *(void *)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = 1;
        uint64_t v59 = swift_task_dealloc();
        MEMORY[0x2533AA9D0](v59);
        if (*(void *)((*v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_251F35B10();
        }
        sub_251F35B70();
        sub_251F35AE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251A1A4DC(v74);
        sub_251A1A4DC(v72);
        v57(v32, v30);
      }
      uint64_t v0 = v69;
      uint64_t v1 = v70;
      uint64_t v3 = v73;
      uint64_t v7 = v77;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v30);
    }
    swift_task_dealloc();
    unint64_t v9 = v78;
  }
  swift_release();
  swift_task_dealloc();
  if (qword_269B9C2B0 == -1) {
    goto LABEL_44;
  }
LABEL_48:
  swift_once();
LABEL_44:
  uint64_t v60 = v0[70];
  v0[90] = v60;
  swift_bridgeObjectRetain();
  long long v61 = (void *)swift_task_alloc();
  v0[91] = v61;
  *long long v61 = v0;
  v61[1] = sub_251C658C4;
  uint64_t v62 = v0[75];
  return sub_251D39E48(v67, v62, v60);
}

uint64_t sub_251C658C4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 664);
  uint64_t v3 = *(void *)(v1 + 656);
  return MEMORY[0x270FA2498](sub_251C65A20, v3, v2);
}

uint64_t sub_251C65A20()
{
  uint64_t v95 = v0 + 16;
  uint64_t v90 = (_OWORD *)(v0 + 400);
  uint64_t v1 = *(void *)(v0 + 608);
  *(void *)(v0 + 560) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  char v2 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v0 + 1008) = v2;
  uint64_t v3 = 1 << v2;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  *(void *)(v0 + 736) = swift_task_alloc();
  uint64_t v6 = *(void *)(v0 + 680);
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    *(void *)(v0 + 744) = v6;
    uint64_t v10 = swift_task_alloc();
    uint64_t v13 = v10;
    if (v5)
    {
      uint64_t v14 = (v5 - 1) & v5;
      unint64_t v15 = __clz(__rbit64(v5)) | (v7 << 6);
      uint64_t v16 = *(void *)(v0 + 608);
LABEL_8:
      uint64_t v17 = *(void *)(v0 + 696);
      uint64_t v18 = *(void *)(v0 + 688);
      uint64_t v19 = *(void *)(v16 + 48);
      uint64_t v20 = sub_251F34DA0();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v13, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v15, v20);
      long long v21 = (long long *)(*(void *)(v16 + 56) + (v15 << 7));
      long long v22 = (void *)(v13 + *(int *)(v18 + 48));
      long long v23 = v21[7];
      long long v25 = v21[4];
      long long v24 = v21[5];
      *(_OWORD *)(v0 + 496) = v21[6];
      *(_OWORD *)(v0 + 512) = v23;
      *(_OWORD *)(v0 + 464) = v25;
      *(_OWORD *)(v0 + 480) = v24;
      long long v26 = *v21;
      long long v27 = v21[1];
      long long v28 = v21[3];
      *(_OWORD *)(v0 + 432) = v21[2];
      *(_OWORD *)(v0 + 448) = v28;
      *uint64_t v90 = v26;
      *(_OWORD *)(v0 + 416) = v27;
      memmove(v22, v21, 0x80uLL);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v18);
      sub_251A1A678((uint64_t)v90);
      goto LABEL_27;
    }
    int64_t v29 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    int64_t v30 = (unint64_t)((1 << *(unsigned char *)(v0 + 1008)) + 63) >> 6;
    if (v29 < v30)
    {
      uint64_t v16 = *(void *)(v0 + 608);
      uint64_t v31 = v16 + 64;
      unint64_t v32 = *(void *)(v16 + 64 + 8 * v29);
      if (v32) {
        goto LABEL_12;
      }
      int64_t v33 = v7 + 2;
      ++v7;
      if (v29 + 1 < v30)
      {
        unint64_t v32 = *(void *)(v31 + 8 * v33);
        if (v32) {
          goto LABEL_15;
        }
        int64_t v7 = v29 + 1;
        if (v29 + 2 < v30)
        {
          unint64_t v32 = *(void *)(v31 + 8 * (v29 + 2));
          if (v32)
          {
            v29 += 2;
            goto LABEL_12;
          }
          int64_t v33 = v29 + 3;
          int64_t v7 = v29 + 2;
          if (v29 + 3 < v30)
          {
            unint64_t v32 = *(void *)(v31 + 8 * v33);
            if (v32)
            {
LABEL_15:
              int64_t v29 = v33;
LABEL_12:
              uint64_t v14 = (v32 - 1) & v32;
              unint64_t v15 = __clz(__rbit64(v32)) + (v29 << 6);
              int64_t v7 = v29;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v29 = v33 + 1;
              if (__OFADD__(v33, 1)) {
                break;
              }
              if (v29 >= v30)
              {
                int64_t v7 = v30 - 1;
                goto LABEL_26;
              }
              unint64_t v32 = *(void *)(v31 + 8 * v29);
              ++v33;
              if (v32) {
                goto LABEL_12;
              }
            }
LABEL_48:
            __break(1u);
            return MEMORY[0x270FA2498](v10, v11, v12);
          }
        }
      }
    }
LABEL_26:
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 696) + 56))(v10, 1, 1, *(void *)(v0 + 688));
    uint64_t v14 = 0;
LABEL_27:
    *(void *)(v0 + 760) = v14;
    *(void *)(v0 + 752) = v7;
    uint64_t v34 = *(void *)(v0 + 736);
    long long v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 704);
    uint64_t v36 = *(void *)(v0 + 688);
    sub_251C68DD8(v13, v34);
    swift_task_dealloc();
    if (v35(v34, 1, v36) == 1) {
      break;
    }
    uint64_t v37 = *(void *)(v0 + 736);
    uint64_t v38 = *(void *)(v0 + 688);
    uint64_t v114 = sub_251F34DA0();
    *(void *)(v0 + 768) = v114;
    uint64_t v39 = *(void *)(v114 - 8);
    uint64_t v40 = v39;
    *(void *)(v0 + 776) = v39;
    *(void *)(v0 + 784) = *(void *)(v39 + 64);
    uint64_t v41 = swift_task_alloc();
    *(void *)(v0 + 792) = v41;
    uint64_t v96 = v41;
    uint64_t v42 = (uint64_t *)(v37 + *(int *)(v38 + 48));
    uint64_t v112 = *v42;
    *(void *)(v0 + 800) = *v42;
    uint64_t v111 = v42[1];
    *(void *)(v0 + 808) = v111;
    uint64_t v109 = v42[2];
    *(void *)(v0 + 816) = v109;
    uint64_t v108 = v42[3];
    *(void *)(v0 + 824) = v108;
    uint64_t v105 = v42[4];
    *(void *)(v0 + 832) = v105;
    uint64_t v103 = v42[5];
    *(void *)(v0 + 840) = v103;
    uint64_t v43 = v42[6];
    *(void *)(v0 + 848) = v43;
    uint64_t v100 = v42[7];
    *(void *)(v0 + 856) = v100;
    uint64_t v99 = v42[8];
    *(void *)(v0 + 864) = v99;
    uint64_t v44 = v42[9];
    *(void *)(v0 + 872) = v44;
    uint64_t v45 = v42[10];
    *(void *)(v0 + 880) = v45;
    uint64_t v46 = v42[11];
    *(void *)(v0 + 888) = v46;
    uint64_t v47 = v42[12];
    *(void *)(v0 + 896) = v47;
    uint64_t v48 = v42[13];
    *(void *)(v0 + 904) = v48;
    uint64_t v49 = (void *)v42[14];
    *(void *)(v0 + 912) = v49;
    uint64_t v50 = v42[15];
    *(void *)(v0 + 920) = v50;
    uint64_t v51 = *(void (**)(void))(v40 + 32);
    *(void *)(v0 + 928) = v51;
    *(void *)(v0 + 936) = (v40 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v51();
    *(void *)(v0 + 16) = v112;
    *(void *)(v0 + 24) = v111;
    *(void *)(v0 + 32) = v109;
    *(void *)(v0 + 40) = v108;
    *(void *)(v0 + 48) = v105;
    *(void *)(v0 + 56) = v103;
    *(void *)(v0 + 64) = v43;
    *(void *)(v0 + 72) = v100;
    *(void *)(v0 + 80) = v99;
    *(void *)(v0 + 88) = v44;
    *(void *)(v0 + 96) = v45;
    *(void *)(v0 + 104) = v46;
    *(void *)(v0 + 112) = v47;
    *(void *)(v0 + 120) = v48;
    *(void *)(v0 + 128) = v49;
    *(void *)(v0 + 136) = v50;
    uint64_t v52 = sub_251C706DC(v96);
    *(void *)(v0 + 944) = v52;
    if (!v49)
    {
      uint64_t v85 = v52;
      sub_251A1A4DC(0);
      sub_251A1A4DC(0);
      uint64_t v86 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v86;
      *uint64_t v86 = v0;
      v86[1] = sub_251C66738;
      v86[15] = v85;
      v86[16] = v43;
      uint64_t v87 = sub_251C624B4;
LABEL_44:
      uint64_t v10 = (uint64_t)v87;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      return MEMORY[0x270FA2498](v10, v11, v12);
    }
    sub_251A1A4CC(v49);
    sub_251A1A4DC(v49);
    sub_251A1A4DC(0);
    *(void *)(v0 + 968) = MEMORY[0x263F8EE78];
    uint64_t v53 = *(void **)(v0 + 920);
    if (!v53)
    {
      sub_251A1A4DC(0);
      sub_251A1A4DC(0);
      uint64_t v88 = (void *)swift_task_alloc();
      *(void *)(v0 + 976) = v88;
      *uint64_t v88 = v0;
      v88[1] = sub_251C67530;
      uint64_t v89 = *(void *)(v0 + 904);
      v88[37] = *(void *)(v0 + 944);
      v88[38] = v89;
      uint64_t v87 = sub_251C61AAC;
      goto LABEL_44;
    }
    sub_251A1A4CC(*(id *)(v0 + 920));
    sub_251A1A4DC(v53);
    sub_251A1A4DC(0);
    swift_bridgeObjectRelease();
    uint64_t v101 = *(void *)(v0 + 968);
    uint64_t v54 = *(void **)(v0 + 920);
    unint64_t v106 = v54;
    uint64_t v93 = *(void **)(v0 + 912);
    uint64_t v55 = *(void *)(v0 + 792);
    uint64_t v56 = *(void *)(v0 + 776);
    uint64_t v57 = *(void *)(v0 + 768);
    uint64_t v104 = *(void *)(v0 + 744);
    uint64_t v97 = swift_task_alloc();
    unint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
    v113(v97, v55, v57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1A678(v95);
    sub_251A1A4DC(v54);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_251A1A678(v95);
    sub_251A1A4DC(v93);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    type metadata accessor for _CoordinationClassObject();
    uint64_t v58 = swift_allocObject();
    v113(v58 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v97, v57);
    uint64_t v59 = swift_task_alloc();
    *(void *)(v59 + 16) = v97;
    uint64_t v60 = sub_251D9EBF0((uint64_t)sub_251C68E40, v59, v101);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(void *)(v58 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v60;
    uint64_t v61 = swift_task_alloc();
    *(void *)(v61 + 16) = v97;
    uint64_t v62 = sub_251A52718((void (*)(uint64_t))sub_251C68E60, v61, MEMORY[0x263F8EE78]);
    swift_task_dealloc();
    unint64_t v110 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v110(v97, v57);
    swift_bridgeObjectRelease();
    *(void *)(v58 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v62;
    *(void *)(v58 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = v93;
    *(void *)(v58 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = v106;
    uint64_t v63 = swift_task_dealloc();
    MEMORY[0x2533AA9D0](v63);
    if (*(void *)((*(void *)(v0 + 560) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 560) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_251F35B10();
    uint64_t v91 = *(void *)(v0 + 968);
    uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 928);
    uint64_t v64 = *(void *)(v0 + 784);
    uint64_t v65 = *(void *)(v0 + 768);
    uint64_t v92 = v65;
    uint64_t v94 = *(void *)(v0 + 792);
    uint64_t v102 = *(void *)(v0 + 776);
    uint64_t v66 = *(void *)(v0 + 624);
    uint64_t v98 = *(void **)(v0 + 616);
    sub_251F35B70();
    sub_251F35AE0();
    uint64_t v67 = sub_251F35CD0();
    uint64_t v68 = *(void *)(v67 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v66, 1, 1, v67);
    uint64_t v69 = swift_task_alloc();
    v113(v69, v94, v65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v70 = v98;
    uint64_t v71 = sub_251F35C70();
    unint64_t v72 = (*(unsigned __int8 *)(v102 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
    unint64_t v73 = (v64 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v74 = (char *)swift_allocObject();
    *((void *)v74 + 2) = v71;
    *((void *)v74 + 3) = MEMORY[0x263F8F500];
    *((void *)v74 + 4) = v70;
    v107(&v74[v72], v69, v92);
    *(void *)&v74[v73] = v91;
    *(void *)&v74[(v73 + 15) & 0xFFFFFFFFFFFFFFF8] = MEMORY[0x263F8EE78];
    swift_task_dealloc();
    int v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67);
    uint64_t v76 = *(void *)(v0 + 624);
    if (v75 == 1)
    {
      sub_251A1B064(*(void *)(v0 + 624), &qword_26B220BB0);
      if (*((void *)v74 + 2)) {
        goto LABEL_34;
      }
    }
    else
    {
      sub_251F35CC0();
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v76, v67);
      if (*((void *)v74 + 2))
      {
LABEL_34:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v77 = sub_251F35C00();
        uint64_t v79 = v78;
        swift_unknownObjectRelease();
        goto LABEL_37;
      }
    }
    uint64_t v77 = 0;
    uint64_t v79 = 0;
LABEL_37:
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = &unk_269BA0F78;
    *(void *)(v80 + 24) = v74;
    if (v79 | v77)
    {
      *(void *)(v0 + 528) = 0;
      *(void *)(v0 + 536) = 0;
      *(void *)(v0 + 544) = v77;
      *(void *)(v0 + 552) = v79;
    }
    uint64_t v8 = *(void *)(v0 + 792);
    uint64_t v9 = *(void *)(v0 + 768);
    swift_task_create();
    swift_release();
    sub_251A1A774(v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v110(v8, v9);
    swift_task_dealloc();
    unint64_t v5 = *(void *)(v0 + 760);
    int64_t v7 = *(void *)(v0 + 752);
    uint64_t v6 = v104;
  }
  swift_release();
  swift_task_dealloc();
  uint64_t v81 = *(void *)(v0 + 560);
  *(void *)(v0 + 992) = v81;
  BOOL v82 = (void *)swift_task_alloc();
  *(void *)(v0 + 1000) = v82;
  void *v82 = v0;
  v82[1] = sub_251C68344;
  uint64_t v83 = *(void *)(v0 + 600);
  return sub_251D39E48(v0 + 576, v83, v81);
}

uint64_t sub_251C66738(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 960) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 664);
  uint64_t v4 = *(void *)(v2 + 656);
  return MEMORY[0x270FA2498](sub_251C66860, v4, v3);
}

uint64_t sub_251C66860()
{
  *(void *)(v0 + 968) = *(void *)(v0 + 960);
  uint64_t v1 = *(void **)(v0 + 920);
  if (v1)
  {
    uint64_t v103 = v0 + 16;
    uint64_t v85 = (_OWORD *)(v0 + 400);
    do
    {
      sub_251A1A4CC(v1);
      sub_251A1A4DC(v1);
      sub_251A1A4DC(0);
      swift_bridgeObjectRelease();
      uint64_t v95 = *(void *)(v0 + 968);
      uint64_t v2 = *(void **)(v0 + 920);
      uint64_t v100 = v2;
      uint64_t v89 = *(void **)(v0 + 912);
      uint64_t v3 = *(void *)(v0 + 792);
      uint64_t v4 = *(void *)(v0 + 776);
      uint64_t v5 = *(void *)(v0 + 768);
      uint64_t v98 = *(void *)(v0 + 744);
      uint64_t v91 = swift_task_alloc();
      uint64_t v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
      v108(v91, v3, v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251A1A678(v103);
      sub_251A1A4DC(v2);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_251A1A678(v103);
      sub_251A1A4DC(v89);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      type metadata accessor for _CoordinationClassObject();
      uint64_t v6 = swift_allocObject();
      v108(v6 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v91, v5);
      uint64_t v7 = swift_task_alloc();
      *(void *)(v7 + 16) = v91;
      uint64_t v8 = sub_251D9EBF0((uint64_t)sub_251C68E40, v7, v95);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      *(void *)(v6 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v8;
      uint64_t v9 = swift_task_alloc();
      *(void *)(v9 + 16) = v91;
      uint64_t v10 = sub_251A52718((void (*)(uint64_t))sub_251C68E60, v9, MEMORY[0x263F8EE78]);
      swift_task_dealloc();
      uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v105(v91, v5);
      swift_bridgeObjectRelease();
      *(void *)(v6 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v10;
      *(void *)(v6 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = v89;
      *(void *)(v6 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = v100;
      uint64_t v11 = swift_task_dealloc();
      MEMORY[0x2533AA9D0](v11);
      if (*(void *)((*(void *)(v0 + 560) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 560) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        sub_251F35B10();
      uint64_t v86 = *(void *)(v0 + 968);
      uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 928);
      uint64_t v12 = *(void *)(v0 + 784);
      uint64_t v13 = *(void *)(v0 + 768);
      uint64_t v87 = v13;
      uint64_t v88 = *(void *)(v0 + 792);
      uint64_t v96 = *(void *)(v0 + 776);
      uint64_t v14 = *(void *)(v0 + 624);
      uint64_t v90 = *(void **)(v0 + 616);
      sub_251F35B70();
      sub_251F35AE0();
      uint64_t v15 = sub_251F35CD0();
      uint64_t v92 = *(void *)(v15 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v14, 1, 1, v15);
      uint64_t v16 = swift_task_alloc();
      v108(v16, v88, v13);
      swift_bridgeObjectRetain();
      uint64_t v17 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      id v18 = v90;
      uint64_t v19 = sub_251F35C70();
      unint64_t v20 = (*(unsigned __int8 *)(v96 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
      unint64_t v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
      long long v22 = (char *)swift_allocObject();
      *((void *)v22 + 2) = v19;
      *((void *)v22 + 3) = MEMORY[0x263F8F500];
      *((void *)v22 + 4) = v18;
      v101(&v22[v20], v16, v87);
      *(void *)&v22[v21] = v86;
      *(void *)&v22[(v21 + 15) & 0xFFFFFFFFFFFFFFF8] = v17;
      swift_task_dealloc();
      int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v14, 1, v15);
      uint64_t v24 = *(void *)(v0 + 624);
      if (v23 == 1)
      {
        sub_251A1B064(*(void *)(v0 + 624), &qword_26B220BB0);
        if (*((void *)v22 + 2)) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_251F35CC0();
        (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v24, v15);
        if (*((void *)v22 + 2))
        {
LABEL_7:
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v25 = sub_251F35C00();
          uint64_t v27 = v26;
          swift_unknownObjectRelease();
          goto LABEL_10;
        }
      }
      uint64_t v25 = 0;
      uint64_t v27 = 0;
LABEL_10:
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = &unk_269BA0F78;
      *(void *)(v28 + 24) = v22;
      if (v27 | v25)
      {
        *(void *)(v0 + 528) = 0;
        *(void *)(v0 + 536) = 0;
        *(void *)(v0 + 544) = v25;
        *(void *)(v0 + 552) = v27;
      }
      uint64_t v29 = *(void *)(v0 + 792);
      uint64_t v30 = *(void *)(v0 + 768);
      swift_task_create();
      swift_release();
      sub_251A1A774(v103);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v105(v29, v30);
      swift_task_dealloc();
      unint64_t v31 = *(void *)(v0 + 760);
      int64_t v32 = *(void *)(v0 + 752);
      *(void *)(v0 + 744) = v98;
      uint64_t v33 = swift_task_alloc();
      uint64_t v36 = v33;
      if (v31)
      {
        uint64_t v37 = (v31 - 1) & v31;
        unint64_t v38 = __clz(__rbit64(v31)) | (v32 << 6);
        uint64_t v39 = *(void *)(v0 + 608);
LABEL_14:
        uint64_t v40 = *(void *)(v0 + 696);
        uint64_t v41 = *(void *)(v0 + 688);
        uint64_t v42 = *(void *)(v39 + 48);
        uint64_t v43 = sub_251F34DA0();
        (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v36, v42 + *(void *)(*(void *)(v43 - 8) + 72) * v38, v43);
        uint64_t v44 = (long long *)(*(void *)(v39 + 56) + (v38 << 7));
        uint64_t v45 = (void *)(v36 + *(int *)(v41 + 48));
        long long v46 = v44[7];
        long long v48 = v44[4];
        long long v47 = v44[5];
        *(_OWORD *)(v0 + 496) = v44[6];
        *(_OWORD *)(v0 + 512) = v46;
        *(_OWORD *)(v0 + 464) = v48;
        *(_OWORD *)(v0 + 480) = v47;
        long long v49 = *v44;
        long long v50 = v44[1];
        long long v51 = v44[3];
        *(_OWORD *)(v0 + 432) = v44[2];
        *(_OWORD *)(v0 + 448) = v51;
        _OWORD *v85 = v49;
        *(_OWORD *)(v0 + 416) = v50;
        memmove(v45, v44, 0x80uLL);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v41);
        sub_251A1A678((uint64_t)v85);
        goto LABEL_33;
      }
      int64_t v52 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
        __break(1u);
LABEL_45:
        __break(1u);
        return MEMORY[0x270FA2498](v33, v34, v35);
      }
      int64_t v53 = (unint64_t)((1 << *(unsigned char *)(v0 + 1008)) + 63) >> 6;
      if (v52 < v53)
      {
        uint64_t v39 = *(void *)(v0 + 608);
        uint64_t v54 = v39 + 64;
        unint64_t v55 = *(void *)(v39 + 64 + 8 * v52);
        if (v55) {
          goto LABEL_18;
        }
        int64_t v56 = v32 + 2;
        ++v32;
        if (v52 + 1 < v53)
        {
          unint64_t v55 = *(void *)(v54 + 8 * v56);
          if (v55) {
            goto LABEL_21;
          }
          int64_t v32 = v52 + 1;
          if (v52 + 2 < v53)
          {
            unint64_t v55 = *(void *)(v54 + 8 * (v52 + 2));
            if (v55)
            {
              v52 += 2;
LABEL_18:
              uint64_t v37 = (v55 - 1) & v55;
              unint64_t v38 = __clz(__rbit64(v55)) + (v52 << 6);
              int64_t v32 = v52;
              goto LABEL_14;
            }
            int64_t v56 = v52 + 3;
            int64_t v32 = v52 + 2;
            if (v52 + 3 < v53)
            {
              unint64_t v55 = *(void *)(v54 + 8 * v56);
              if (!v55)
              {
                while (1)
                {
                  int64_t v52 = v56 + 1;
                  if (__OFADD__(v56, 1)) {
                    goto LABEL_45;
                  }
                  if (v52 >= v53)
                  {
                    int64_t v32 = v53 - 1;
                    goto LABEL_32;
                  }
                  unint64_t v55 = *(void *)(v54 + 8 * v52);
                  ++v56;
                  if (v55) {
                    goto LABEL_18;
                  }
                }
              }
LABEL_21:
              int64_t v52 = v56;
              goto LABEL_18;
            }
          }
        }
      }
LABEL_32:
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 696) + 56))(v33, 1, 1, *(void *)(v0 + 688));
      uint64_t v37 = 0;
LABEL_33:
      *(void *)(v0 + 760) = v37;
      *(void *)(v0 + 752) = v32;
      uint64_t v57 = *(void *)(v0 + 736);
      uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 704);
      uint64_t v59 = *(void *)(v0 + 688);
      sub_251C68DD8(v36, v57);
      swift_task_dealloc();
      if (v58(v57, 1, v59) == 1)
      {
        swift_release();
        swift_task_dealloc();
        uint64_t v79 = *(void *)(v0 + 560);
        *(void *)(v0 + 992) = v79;
        uint64_t v80 = (void *)swift_task_alloc();
        *(void *)(v0 + 1000) = v80;
        *uint64_t v80 = v0;
        v80[1] = sub_251C68344;
        uint64_t v81 = *(void *)(v0 + 600);
        return sub_251D39E48(v0 + 576, v81, v79);
      }
      uint64_t v60 = *(void *)(v0 + 736);
      uint64_t v61 = *(void *)(v0 + 688);
      uint64_t v110 = sub_251F34DA0();
      *(void *)(v0 + 768) = v110;
      uint64_t v62 = *(void *)(v110 - 8);
      uint64_t v63 = v62;
      *(void *)(v0 + 776) = v62;
      *(void *)(v0 + 784) = *(void *)(v62 + 64);
      uint64_t v64 = swift_task_alloc();
      *(void *)(v0 + 792) = v64;
      uint64_t v93 = v64;
      uint64_t v65 = (uint64_t *)(v60 + *(int *)(v61 + 48));
      uint64_t v109 = *v65;
      *(void *)(v0 + 800) = *v65;
      uint64_t v107 = v65[1];
      *(void *)(v0 + 808) = v107;
      uint64_t v106 = v65[2];
      *(void *)(v0 + 816) = v106;
      uint64_t v104 = v65[3];
      *(void *)(v0 + 824) = v104;
      uint64_t v102 = v65[4];
      *(void *)(v0 + 832) = v102;
      uint64_t v99 = v65[5];
      *(void *)(v0 + 840) = v99;
      uint64_t v66 = v65[6];
      *(void *)(v0 + 848) = v66;
      uint64_t v97 = v65[7];
      *(void *)(v0 + 856) = v97;
      uint64_t v94 = v65[8];
      *(void *)(v0 + 864) = v94;
      uint64_t v67 = v65[9];
      *(void *)(v0 + 872) = v67;
      uint64_t v68 = v65[10];
      *(void *)(v0 + 880) = v68;
      uint64_t v69 = v65[11];
      *(void *)(v0 + 888) = v69;
      uint64_t v70 = v65[12];
      *(void *)(v0 + 896) = v70;
      uint64_t v71 = v65[13];
      *(void *)(v0 + 904) = v71;
      unint64_t v72 = (void *)v65[14];
      *(void *)(v0 + 912) = v72;
      uint64_t v73 = v65[15];
      *(void *)(v0 + 920) = v73;
      uint64_t v74 = *(void (**)(void))(v63 + 32);
      *(void *)(v0 + 928) = v74;
      *(void *)(v0 + 936) = (v63 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v74();
      *(void *)(v0 + 16) = v109;
      *(void *)(v0 + 24) = v107;
      *(void *)(v0 + 32) = v106;
      *(void *)(v0 + 40) = v104;
      *(void *)(v0 + 48) = v102;
      *(void *)(v0 + 56) = v99;
      *(void *)(v0 + 64) = v66;
      *(void *)(v0 + 72) = v97;
      *(void *)(v0 + 80) = v94;
      *(void *)(v0 + 88) = v67;
      *(void *)(v0 + 96) = v68;
      *(void *)(v0 + 104) = v69;
      *(void *)(v0 + 112) = v70;
      *(void *)(v0 + 120) = v71;
      *(void *)(v0 + 128) = v72;
      *(void *)(v0 + 136) = v73;
      uint64_t v75 = sub_251C706DC(v93);
      *(void *)(v0 + 944) = v75;
      if (!v72)
      {
        uint64_t v83 = v75;
        sub_251A1A4DC(0);
        sub_251A1A4DC(0);
        uint64_t v84 = (void *)swift_task_alloc();
        *(void *)(v0 + 952) = v84;
        *uint64_t v84 = v0;
        v84[1] = sub_251C66738;
        v84[15] = v83;
        v84[16] = v66;
        uint64_t v78 = sub_251C624B4;
        goto LABEL_41;
      }
      sub_251A1A4CC(v72);
      sub_251A1A4DC(v72);
      sub_251A1A4DC(0);
      *(void *)(v0 + 968) = MEMORY[0x263F8EE78];
      uint64_t v1 = *(void **)(v0 + 920);
    }
    while (v1);
  }
  sub_251A1A4DC(0);
  sub_251A1A4DC(0);
  uint64_t v76 = (void *)swift_task_alloc();
  *(void *)(v0 + 976) = v76;
  *uint64_t v76 = v0;
  v76[1] = sub_251C67530;
  uint64_t v77 = *(void *)(v0 + 904);
  v76[37] = *(void *)(v0 + 944);
  v76[38] = v77;
  uint64_t v78 = sub_251C61AAC;
LABEL_41:
  uint64_t v33 = (uint64_t)v78;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  return MEMORY[0x270FA2498](v33, v34, v35);
}

uint64_t sub_251C67530(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 984) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 664);
  uint64_t v4 = *(void *)(v2 + 656);
  return MEMORY[0x270FA2498](sub_251C6767C, v4, v3);
}

uint64_t sub_251C6767C()
{
  uint64_t v101 = v0 + 16;
  uint64_t v85 = (_OWORD *)(v0 + 400);
  for (uint64_t i = *(void *)(v0 + 984); ; uint64_t i = v74)
  {
    uint64_t v94 = *(void *)(v0 + 968);
    uint64_t v1 = *(void **)(v0 + 920);
    uint64_t v107 = *(void **)(v0 + 912);
    uint64_t v2 = *(void *)(v0 + 792);
    uint64_t v3 = *(void *)(v0 + 776);
    uint64_t v4 = *(void *)(v0 + 768);
    uint64_t v92 = v4;
    uint64_t v97 = *(void *)(v0 + 744);
    uint64_t v90 = swift_task_alloc();
    uint64_t v109 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v109(v90, v2, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1A678(v101);
    sub_251A1A4DC(v1);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_251A1A678(v101);
    sub_251A1A4DC(v107);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    type metadata accessor for _CoordinationClassObject();
    uint64_t v5 = swift_allocObject();
    v109(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v90, v4);
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = v90;
    uint64_t v7 = sub_251D9EBF0((uint64_t)sub_251C68E40, v6, v94);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(void *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v7;
    uint64_t v8 = swift_task_alloc();
    *(void *)(v8 + 16) = v90;
    uint64_t v9 = sub_251A52718((void (*)(uint64_t))sub_251C68E60, v8, i);
    uint64_t v86 = v97;
    swift_task_dealloc();
    uint64_t v104 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v104(v90, v92);
    swift_bridgeObjectRelease();
    *(void *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v9;
    *(void *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = v107;
    *(void *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = v1;
    uint64_t v10 = swift_task_dealloc();
    MEMORY[0x2533AA9D0](v10);
    if (*(void *)((*(void *)(v0 + 560) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 560) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_251F35B10();
    uint64_t v87 = *(void *)(v0 + 968);
    uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 928);
    uint64_t v11 = *(void *)(v0 + 784);
    uint64_t v12 = *(void *)(v0 + 768);
    uint64_t v88 = v12;
    uint64_t v89 = *(void *)(v0 + 792);
    uint64_t v95 = *(void *)(v0 + 776);
    uint64_t v13 = *(void *)(v0 + 624);
    uint64_t v91 = *(void **)(v0 + 616);
    sub_251F35B70();
    sub_251F35AE0();
    uint64_t v14 = sub_251F35CD0();
    uint64_t v98 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v13, 1, 1, v14);
    uint64_t v15 = swift_task_alloc();
    v109(v15, v89, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v91;
    uint64_t v17 = sub_251F35C70();
    unint64_t v18 = (*(unsigned __int8 *)(v95 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
    unint64_t v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = (char *)swift_allocObject();
    *((void *)v20 + 2) = v17;
    *((void *)v20 + 3) = MEMORY[0x263F8F500];
    *((void *)v20 + 4) = v16;
    v102(&v20[v18], v15, v88);
    *(void *)&v20[v19] = v87;
    *(void *)&v20[(v19 + 15) & 0xFFFFFFFFFFFFFFF8] = i;
    swift_task_dealloc();
    int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v13, 1, v14);
    uint64_t v22 = *(void *)(v0 + 624);
    if (v21 == 1)
    {
      sub_251A1B064(*(void *)(v0 + 624), &qword_26B220BB0);
      if (*((void *)v20 + 2)) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_251F35CC0();
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v22, v14);
      if (*((void *)v20 + 2))
      {
LABEL_6:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v23 = sub_251F35C00();
        uint64_t v25 = v24;
        swift_unknownObjectRelease();
        goto LABEL_9;
      }
    }
    uint64_t v23 = 0;
    uint64_t v25 = 0;
LABEL_9:
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = &unk_269BA0F78;
    *(void *)(v26 + 24) = v20;
    if (v25 | v23)
    {
      *(void *)(v0 + 528) = 0;
      *(void *)(v0 + 536) = 0;
      *(void *)(v0 + 544) = v23;
      *(void *)(v0 + 552) = v25;
    }
    uint64_t v27 = *(void *)(v0 + 792);
    uint64_t v28 = *(void *)(v0 + 768);
    swift_task_create();
    swift_release();
    sub_251A1A774(v101);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v104(v27, v28);
    swift_task_dealloc();
    unint64_t v29 = *(void *)(v0 + 760);
    int64_t v30 = *(void *)(v0 + 752);
    *(void *)(v0 + 744) = v86;
    uint64_t v31 = swift_task_alloc();
    uint64_t v34 = v31;
    if (v29)
    {
      uint64_t v35 = (v29 - 1) & v29;
      unint64_t v36 = __clz(__rbit64(v29)) | (v30 << 6);
      uint64_t v37 = *(void *)(v0 + 608);
LABEL_13:
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = *(void *)(v0 + 688);
      uint64_t v40 = *(void *)(v37 + 48);
      uint64_t v41 = sub_251F34DA0();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v34, v40 + *(void *)(*(void *)(v41 - 8) + 72) * v36, v41);
      uint64_t v42 = (long long *)(*(void *)(v37 + 56) + (v36 << 7));
      uint64_t v43 = (void *)(v34 + *(int *)(v39 + 48));
      long long v44 = v42[7];
      long long v46 = v42[4];
      long long v45 = v42[5];
      *(_OWORD *)(v0 + 496) = v42[6];
      *(_OWORD *)(v0 + 512) = v44;
      *(_OWORD *)(v0 + 464) = v46;
      *(_OWORD *)(v0 + 480) = v45;
      long long v47 = *v42;
      long long v48 = v42[1];
      long long v49 = v42[3];
      *(_OWORD *)(v0 + 432) = v42[2];
      *(_OWORD *)(v0 + 448) = v49;
      _OWORD *v85 = v47;
      *(_OWORD *)(v0 + 416) = v48;
      memmove(v43, v42, 0x80uLL);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v39);
      sub_251A1A678((uint64_t)v85);
      goto LABEL_32;
    }
    int64_t v50 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      return MEMORY[0x270FA2498](v31, v32, v33);
    }
    int64_t v51 = (unint64_t)((1 << *(unsigned char *)(v0 + 1008)) + 63) >> 6;
    if (v50 < v51)
    {
      uint64_t v37 = *(void *)(v0 + 608);
      uint64_t v52 = v37 + 64;
      unint64_t v53 = *(void *)(v37 + 64 + 8 * v50);
      if (v53) {
        goto LABEL_17;
      }
      int64_t v54 = v30 + 2;
      ++v30;
      if (v50 + 1 < v51)
      {
        unint64_t v53 = *(void *)(v52 + 8 * v54);
        if (v53) {
          goto LABEL_20;
        }
        int64_t v30 = v50 + 1;
        if (v50 + 2 < v51)
        {
          unint64_t v53 = *(void *)(v52 + 8 * (v50 + 2));
          if (v53)
          {
            v50 += 2;
            goto LABEL_17;
          }
          int64_t v54 = v50 + 3;
          int64_t v30 = v50 + 2;
          if (v50 + 3 < v51)
          {
            unint64_t v53 = *(void *)(v52 + 8 * v54);
            if (!v53)
            {
              while (1)
              {
                int64_t v50 = v54 + 1;
                if (__OFADD__(v54, 1)) {
                  goto LABEL_45;
                }
                if (v50 >= v51)
                {
                  int64_t v30 = v51 - 1;
                  goto LABEL_31;
                }
                unint64_t v53 = *(void *)(v52 + 8 * v50);
                ++v54;
                if (v53) {
                  goto LABEL_17;
                }
              }
            }
LABEL_20:
            int64_t v50 = v54;
LABEL_17:
            uint64_t v35 = (v53 - 1) & v53;
            unint64_t v36 = __clz(__rbit64(v53)) + (v50 << 6);
            int64_t v30 = v50;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_31:
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 696) + 56))(v31, 1, 1, *(void *)(v0 + 688));
    uint64_t v35 = 0;
LABEL_32:
    *(void *)(v0 + 760) = v35;
    *(void *)(v0 + 752) = v30;
    uint64_t v55 = *(void *)(v0 + 736);
    int64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 704);
    uint64_t v57 = *(void *)(v0 + 688);
    sub_251C68DD8(v34, v55);
    swift_task_dealloc();
    if (v56(v55, 1, v57) == 1) {
      break;
    }
    uint64_t v58 = *(void *)(v0 + 736);
    uint64_t v59 = *(void *)(v0 + 688);
    uint64_t v111 = sub_251F34DA0();
    *(void *)(v0 + 768) = v111;
    uint64_t v60 = *(void *)(v111 - 8);
    uint64_t v61 = v60;
    *(void *)(v0 + 776) = v60;
    *(void *)(v0 + 784) = *(void *)(v60 + 64);
    uint64_t v62 = swift_task_alloc();
    *(void *)(v0 + 792) = v62;
    uint64_t v93 = v62;
    uint64_t v63 = (uint64_t *)(v58 + *(int *)(v59 + 48));
    uint64_t v110 = *v63;
    *(void *)(v0 + 800) = *v63;
    uint64_t v108 = v63[1];
    *(void *)(v0 + 808) = v108;
    uint64_t v106 = v63[2];
    *(void *)(v0 + 816) = v106;
    uint64_t v105 = v63[3];
    *(void *)(v0 + 824) = v105;
    uint64_t v103 = v63[4];
    *(void *)(v0 + 832) = v103;
    uint64_t v100 = v63[5];
    *(void *)(v0 + 840) = v100;
    uint64_t v64 = v63[6];
    *(void *)(v0 + 848) = v64;
    uint64_t v99 = v63[7];
    *(void *)(v0 + 856) = v99;
    uint64_t v96 = v63[8];
    *(void *)(v0 + 864) = v96;
    uint64_t v65 = v63[9];
    *(void *)(v0 + 872) = v65;
    uint64_t v66 = v63[10];
    *(void *)(v0 + 880) = v66;
    uint64_t v67 = v63[11];
    *(void *)(v0 + 888) = v67;
    uint64_t v68 = v63[12];
    *(void *)(v0 + 896) = v68;
    uint64_t v69 = v63[13];
    *(void *)(v0 + 904) = v69;
    uint64_t v70 = (void *)v63[14];
    *(void *)(v0 + 912) = v70;
    uint64_t v71 = v63[15];
    *(void *)(v0 + 920) = v71;
    unint64_t v72 = *(void (**)(void))(v61 + 32);
    *(void *)(v0 + 928) = v72;
    *(void *)(v0 + 936) = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v72();
    *(void *)(v0 + 16) = v110;
    *(void *)(v0 + 24) = v108;
    *(void *)(v0 + 32) = v106;
    *(void *)(v0 + 40) = v105;
    *(void *)(v0 + 48) = v103;
    *(void *)(v0 + 56) = v100;
    *(void *)(v0 + 64) = v64;
    *(void *)(v0 + 72) = v99;
    *(void *)(v0 + 80) = v96;
    *(void *)(v0 + 88) = v65;
    *(void *)(v0 + 96) = v66;
    *(void *)(v0 + 104) = v67;
    *(void *)(v0 + 112) = v68;
    *(void *)(v0 + 120) = v69;
    *(void *)(v0 + 128) = v70;
    *(void *)(v0 + 136) = v71;
    uint64_t v73 = sub_251C706DC(v93);
    *(void *)(v0 + 944) = v73;
    if (!v70)
    {
      uint64_t v80 = v73;
      sub_251A1A4DC(0);
      sub_251A1A4DC(0);
      uint64_t v81 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v81;
      void *v81 = v0;
      v81[1] = sub_251C66738;
      v81[15] = v80;
      v81[16] = v64;
      BOOL v82 = sub_251C624B4;
LABEL_41:
      uint64_t v31 = (uint64_t)v82;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      return MEMORY[0x270FA2498](v31, v32, v33);
    }
    sub_251A1A4CC(v70);
    sub_251A1A4DC(v70);
    sub_251A1A4DC(0);
    uint64_t v74 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 968) = MEMORY[0x263F8EE78];
    uint64_t v75 = *(void **)(v0 + 920);
    if (!v75)
    {
      sub_251A1A4DC(0);
      sub_251A1A4DC(0);
      uint64_t v83 = (void *)swift_task_alloc();
      *(void *)(v0 + 976) = v83;
      void *v83 = v0;
      v83[1] = sub_251C67530;
      uint64_t v84 = *(void *)(v0 + 904);
      v83[37] = *(void *)(v0 + 944);
      v83[38] = v84;
      BOOL v82 = sub_251C61AAC;
      goto LABEL_41;
    }
    sub_251A1A4CC(*(id *)(v0 + 920));
    sub_251A1A4DC(v75);
    sub_251A1A4DC(0);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_task_dealloc();
  uint64_t v76 = *(void *)(v0 + 560);
  *(void *)(v0 + 992) = v76;
  uint64_t v77 = (void *)swift_task_alloc();
  *(void *)(v0 + 1000) = v77;
  *uint64_t v77 = v0;
  v77[1] = sub_251C68344;
  uint64_t v78 = *(void *)(v0 + 600);
  return sub_251D39E48(v0 + 576, v78, v76);
}

uint64_t sub_251C68344()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 664);
  uint64_t v3 = *(void *)(v1 + 656);
  return MEMORY[0x270FA2498](sub_251C684A0, v3, v2);
}

uint64_t sub_251C684A0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t *sub_251C6850C(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v61 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = result;
  uint64_t v56 = 0;
  int64_t v4 = 0;
  uint64_t v59 = a3;
  uint64_t v5 = *(void *)(a3 + 64);
  uint64_t v57 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v58 = (unint64_t)(v6 + 63) >> 6;
  while (2)
  {
    if (!v8)
    {
      int64_t v13 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v13 < v58)
      {
        unint64_t v14 = *(void *)(v57 + 8 * v13);
        int64_t v15 = v4 + 1;
        if (v14) {
          goto LABEL_23;
        }
        int64_t v15 = v4 + 2;
        if (v4 + 2 >= v58) {
          return (unint64_t *)sub_251C64178(v55, v54, v56, v59);
        }
        unint64_t v14 = *(void *)(v57 + 8 * v15);
        if (v14) {
          goto LABEL_23;
        }
        int64_t v15 = v4 + 3;
        if (v4 + 3 >= v58) {
          return (unint64_t *)sub_251C64178(v55, v54, v56, v59);
        }
        unint64_t v14 = *(void *)(v57 + 8 * v15);
        if (v14)
        {
LABEL_23:
          uint64_t v62 = (v14 - 1) & v14;
          int64_t v63 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
          goto LABEL_24;
        }
        uint64_t v16 = v4 + 4;
        if (v4 + 4 < v58)
        {
          unint64_t v14 = *(void *)(v57 + 8 * v16);
          if (v14)
          {
            int64_t v15 = v4 + 4;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v15 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              break;
            }
            if (v15 >= v58) {
              return (unint64_t *)sub_251C64178(v55, v54, v56, v59);
            }
            unint64_t v14 = *(void *)(v57 + 8 * v15);
            ++v16;
            if (v14) {
              goto LABEL_23;
            }
          }
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
      }
      return (unint64_t *)sub_251C64178(v55, v54, v56, v59);
    }
    uint64_t v62 = (v8 - 1) & v8;
    int64_t v63 = v4;
    unint64_t v12 = __clz(__rbit64(v8)) | (v4 << 6);
LABEL_24:
    uint64_t v17 = sub_251F34DA0();
    uint64_t v10 = *(void *)(v17 - 8);
    MEMORY[0x270FA5388](v17);
    uint64_t v73 = v18;
    unint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v21 = v20;
    uint64_t v22 = v59;
    uint64_t v23 = *(void *)(v59 + 48);
    uint64_t v71 = *(void *)(v21 + 72);
    uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v24(v19, v23 + v71 * v12, v17);
    uint64_t v25 = (long long *)(*(void *)(v22 + 56) + (v12 << 7));
    long long v26 = v25[3];
    long long v28 = *v25;
    long long v27 = v25[1];
    long long v78 = v25[2];
    *(_OWORD *)uint64_t v79 = v26;
    long long v76 = v28;
    long long v77 = v27;
    long long v29 = v25[7];
    long long v31 = v25[4];
    long long v30 = v25[5];
    *(_OWORD *)&v79[48] = v25[6];
    long long v80 = v29;
    *(_OWORD *)&v79[16] = v31;
    *(_OWORD *)&v79[32] = v30;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC38);
    uint64_t v64 = &v53;
    uint64_t v33 = v32 - 8;
    MEMORY[0x270FA5388](v32);
    uint64_t v35 = (char *)&v53 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v65 = v19;
    uint64_t v74 = (void (*)(char *, uint64_t, uint64_t))v24;
    uint64_t v75 = v10 + 16;
    v24(v35, (unint64_t)v19, v17);
    uint64_t v36 = *(int *)(v33 + 56);
    uint64_t v81 = v35;
    uint64_t v37 = &v35[v36];
    uint64_t v38 = *(void *)v79;
    uint64_t v39 = *(void *)&v79[56];
    long long v40 = v77;
    *(_OWORD *)uint64_t v37 = v76;
    *((_OWORD *)v37 + 1) = v40;
    *((_OWORD *)v37 + 2) = v78;
    *((void *)v37 + 6) = v38;
    *(_OWORD *)(v37 + 56) = *(_OWORD *)&v79[8];
    *(_OWORD *)(v37 + 72) = *(_OWORD *)&v79[24];
    *(_OWORD *)(v37 + 88) = *(_OWORD *)&v79[40];
    *((void *)v37 + 13) = v39;
    *((_OWORD *)v37 + 7) = v80;
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v41 - 8);
    uint64_t v43 = (char *)&v53 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v44 = *(void *)(v61 + 16);
    unint64_t v68 = v12;
    uint64_t v67 = &v53;
    uint64_t v66 = v45;
    if (!v44)
    {
      sub_251A1A678((uint64_t)&v76);
      sub_251A1A678((uint64_t)&v76);
      long long v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      swift_bridgeObjectRetain();
      goto LABEL_31;
    }
    uint64_t v46 = v61 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    sub_251A1A678((uint64_t)&v76);
    sub_251A1A678((uint64_t)&v76);
    long long v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    unint64_t v72 = (uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v70 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v60 = v10;
    uint64_t v69 = (void (**)(char *, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    do
    {
      v74(v43, v46, v17);
      long long v48 = *v47;
      (*v47)(v43, 0, 1, v17);
      uint64_t v49 = (*v72)(v43, 1, v17);
      if (v49 == 1)
      {
        swift_bridgeObjectRelease();
        char v9 = 0;
LABEL_5:
        uint64_t v10 = v60;
        uint64_t v11 = v65;
        goto LABEL_6;
      }
      MEMORY[0x270FA5388](v49);
      int64_t v51 = (char *)&v53 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*v70)(v51, v43, v17);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v52 = sub_251F35650();
      (*v69)(v51, v17);
      if (v52)
      {
        swift_bridgeObjectRelease();
        char v9 = 1;
        goto LABEL_5;
      }
      v46 += v71;
      --v44;
    }
    while (v44);
    uint64_t v10 = v60;
LABEL_31:
    uint64_t v11 = v65;
    v48(v43, 1, 1, v17);
    swift_bridgeObjectRelease();
    char v9 = 0;
LABEL_6:
    sub_251A1B064((uint64_t)v81, &qword_26B21EC38);
    sub_251A1A774((uint64_t)&v76);
    uint64_t result = (unint64_t *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v11, v17);
    if ((v9 & 1) == 0)
    {
LABEL_7:
      int64_t v4 = v63;
      unint64_t v8 = v62;
      continue;
    }
    break;
  }
  *(unint64_t *)((char *)v55 + ((v68 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v68;
  if (!__OFADD__(v56, 1))
  {
    ++v56;
    goto LABEL_7;
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t *sub_251C68C14(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251C6850C((void *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251C6850C((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x2533AC760](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_251C68DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C68E40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251C61428(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251C68E60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251C615AC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251C68E7C()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_251C68F7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  int64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *int64_t v13 = v2;
  v13[1] = sub_251AB3A34;
  return sub_251AED520(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_251C690C0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_251C690F8(uint64_t a1)
{
  sub_251C62A8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), &qword_269BA0F98, (uint64_t)&unk_27026DAB0, (uint64_t)sub_251C69150, (uint64_t)&block_descriptor_31);
}

uint64_t sub_251C69144()
{
  return objectdestroy_21Tm(&qword_269BA0F98);
}

uint64_t sub_251C69150(uint64_t a1, uint64_t a2)
{
  return sub_251C69760(a1, a2, &qword_269BA0F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251C62EDC);
}

void *sub_251C69170(uint64_t a1)
{
  sub_251AA82A4(a1, (uint64_t)&v43);
  uint64_t v1 = MEMORY[0x263F8EE58];
  if (v44)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FA0);
    if (swift_dynamicCast())
    {
      id v2 = v45;
      goto LABEL_6;
    }
  }
  else
  {
    sub_251A1B064((uint64_t)&v43, &qword_26B21E190);
  }
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08970]), sel_init);
LABEL_6:
  id v3 = objc_msgSend(v2, sel_objectEnumerator);
  if (!v3)
  {

    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v4 = v3;
  id v28 = v2;
  id v5 = objc_msgSend(v3, sel_allObjects);

  uint64_t v32 = v1 + 8;
  uint64_t v6 = sub_251F35AC0();

  uint64_t v31 = *(void *)(v6 + 16);
  if (!v31)
  {
    swift_bridgeObjectRelease();

    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v30 = v6 + 32;
  v27[1] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v33 = v7;
    sub_251A0D51C(v30 + 32 * v7, (uint64_t)&v43);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0F90);
    if (swift_dynamicCast())
    {
      uint64_t v35 = v45[2];
      if (v35)
      {
        uint64_t v9 = v45 + 4;
        long long v29 = v45;
        swift_bridgeObjectRetain();
        uint64_t v10 = 0;
        uint64_t v34 = v9;
        do
        {
          long long v40 = &v9[5 * v10];
          uint64_t v11 = v8[2];
          if (v11)
          {
            uint64_t v12 = v8 + 4;
            uint64_t v36 = v10;
            uint64_t v37 = v8;
            int64_t v13 = &v9[5 * v10];
            uint64_t v38 = v13 + 4;
            uint64_t v39 = v13 + 3;
            swift_bridgeObjectRetain();
            do
            {
              uint64_t v14 = v12[3];
              uint64_t v15 = v12[4];
              __swift_project_boxed_opaque_existential_1(v12, v14);
              uint64_t v16 = sub_251F34DA0();
              uint64_t v42 = v27;
              uint64_t v17 = *(void *)(v16 - 8);
              uint64_t v18 = *(void *)(v17 + 64);
              MEMORY[0x270FA5388](v16);
              unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
              (*(void (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
              uint64_t v20 = *v39;
              uint64_t v21 = *v38;
              uint64_t v22 = __swift_project_boxed_opaque_existential_1(v40, *v39);
              uint64_t v41 = v27;
              MEMORY[0x270FA5388](v22);
              (*(void (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
              LOBYTE(v20) = sub_251F34D70();
              uint64_t v23 = *(void (**)(char *, uint64_t))(v17 + 8);
              v23((char *)v27 - v19, v16);
              v23((char *)v27 - v19, v16);
              if (v20)
              {
                uint64_t v8 = v37;
                swift_bridgeObjectRelease();
                uint64_t v9 = v34;
                uint64_t v10 = v36;
                goto LABEL_15;
              }
              v12 += 5;
              --v11;
            }
            while (v11);
            uint64_t v8 = v37;
            swift_bridgeObjectRelease();
            uint64_t v9 = v34;
            uint64_t v10 = v36;
          }
          sub_251A1A4EC((uint64_t)v40, (uint64_t)&v43);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_251F11090(0, v8[2] + 1, 1, v8);
          }
          unint64_t v25 = v8[2];
          unint64_t v24 = v8[3];
          if (v25 >= v24 >> 1) {
            uint64_t v8 = sub_251F11090((void *)(v24 > 1), v25 + 1, 1, v8);
          }
          long long v8[2] = v25 + 1;
          sub_251A1A444(&v43, (uint64_t)&v8[5 * v25 + 4]);
LABEL_15:
          ++v10;
        }
        while (v10 != v35);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v7 = v33 + 1;
  }
  while (v33 + 1 != v31);

  swift_bridgeObjectRelease_n();
  return v8;
}

void sub_251C695E8(uint64_t a1)
{
  sub_251C635DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_251C695F4(uint64_t a1)
{
  sub_251C62A8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), &qword_269BA0FB0, (uint64_t)&unk_27026DB00, (uint64_t)sub_251C6964C, (uint64_t)&block_descriptor_30_0);
}

uint64_t sub_251C69640()
{
  return objectdestroy_21Tm(&qword_269BA0FB0);
}

uint64_t sub_251C6964C(uint64_t a1, uint64_t a2)
{
  return sub_251C69760(a1, a2, &qword_269BA0FB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251C62C9C);
}

uint64_t sub_251C6966C()
{
  return objectdestroy_21Tm(&qword_269BA0FB0);
}

uint64_t objectdestroy_21Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_251C69740(uint64_t a1, uint64_t a2)
{
  return sub_251C69760(a1, a2, &qword_269BA0FB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251C637FC);
}

uint64_t sub_251C69760(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a4(a1, a2, v8, v9);
}

void *sub_251C697F8(uint64_t a1)
{
  sub_251AA82A4(a1, (uint64_t)&v43);
  uint64_t v1 = MEMORY[0x263F8EE58];
  if (v44)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FA0);
    if (swift_dynamicCast())
    {
      id v2 = v45;
      goto LABEL_6;
    }
  }
  else
  {
    sub_251A1B064((uint64_t)&v43, &qword_26B21E190);
  }
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08970]), sel_init);
LABEL_6:
  id v3 = objc_msgSend(v2, sel_objectEnumerator);
  if (!v3)
  {

    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v4 = v3;
  id v28 = v2;
  id v5 = objc_msgSend(v3, sel_allObjects);

  uint64_t v32 = v1 + 8;
  uint64_t v6 = sub_251F35AC0();

  uint64_t v31 = *(void *)(v6 + 16);
  if (!v31)
  {
    swift_bridgeObjectRelease();

    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v30 = v6 + 32;
  v27[1] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v33 = v7;
    sub_251A0D51C(v30 + 32 * v7, (uint64_t)&v43);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FA8);
    if (swift_dynamicCast())
    {
      uint64_t v35 = v45[2];
      if (v35)
      {
        uint64_t v9 = v45 + 4;
        long long v29 = v45;
        swift_bridgeObjectRetain();
        uint64_t v10 = 0;
        uint64_t v34 = v9;
        do
        {
          long long v40 = &v9[5 * v10];
          uint64_t v11 = v8[2];
          if (v11)
          {
            uint64_t v12 = v8 + 4;
            uint64_t v36 = v10;
            uint64_t v37 = v8;
            int64_t v13 = &v9[5 * v10];
            uint64_t v38 = v13 + 4;
            uint64_t v39 = v13 + 3;
            swift_bridgeObjectRetain();
            do
            {
              uint64_t v14 = v12[3];
              uint64_t v15 = v12[4];
              __swift_project_boxed_opaque_existential_1(v12, v14);
              uint64_t v16 = sub_251F34DA0();
              uint64_t v42 = v27;
              uint64_t v17 = *(void *)(v16 - 8);
              uint64_t v18 = *(void *)(v17 + 64);
              MEMORY[0x270FA5388](v16);
              unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
              (*(void (**)(uint64_t, uint64_t))(v15 + 64))(v14, v15);
              uint64_t v20 = *v39;
              uint64_t v21 = *v38;
              uint64_t v22 = __swift_project_boxed_opaque_existential_1(v40, *v39);
              uint64_t v41 = v27;
              MEMORY[0x270FA5388](v22);
              (*(void (**)(uint64_t, uint64_t))(v21 + 64))(v20, v21);
              LOBYTE(v20) = sub_251F34D70();
              uint64_t v23 = *(void (**)(char *, uint64_t))(v17 + 8);
              v23((char *)v27 - v19, v16);
              v23((char *)v27 - v19, v16);
              if (v20)
              {
                uint64_t v8 = v37;
                swift_bridgeObjectRelease();
                uint64_t v9 = v34;
                uint64_t v10 = v36;
                goto LABEL_15;
              }
              v12 += 5;
              --v11;
            }
            while (v11);
            uint64_t v8 = v37;
            swift_bridgeObjectRelease();
            uint64_t v9 = v34;
            uint64_t v10 = v36;
          }
          sub_251A1A4EC((uint64_t)v40, (uint64_t)&v43);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_251F1107C(0, v8[2] + 1, 1, v8);
          }
          unint64_t v25 = v8[2];
          unint64_t v24 = v8[3];
          if (v25 >= v24 >> 1) {
            uint64_t v8 = sub_251F1107C((void *)(v24 > 1), v25 + 1, 1, v8);
          }
          long long v8[2] = v25 + 1;
          sub_251A1A444(&v43, (uint64_t)&v8[5 * v25 + 4]);
LABEL_15:
          ++v10;
        }
        while (v10 != v35);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v7 = v33 + 1;
  }
  while (v33 + 1 != v31);

  swift_bridgeObjectRelease_n();
  return v8;
}

uint64_t sub_251C69C70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C69CD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C69D40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251C68E40(a1, a2);
}

uint64_t sub_251C69D6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251C68E60(a1, a2);
}

uint64_t _s13HomeDataModel19StaticCameraProfileV12statusStringSSSgvg_0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for StaticCameraProfile();
  sub_251C69F54(v0 + v4[13], (uint64_t)v3);
  uint64_t v5 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_251C69FBC((uint64_t)v3);
  }
  else
  {
    int v6 = v3[*(int *)(v5 + 20)];
    sub_251B6AA94((uint64_t)v3);
    if (v6 == 2) {
      return 1702259020;
    }
  }
  unsigned int v8 = *(unsigned __int8 *)(v0 + v4[11]);
  if (v8 <= 2)
  {
    if (*(unsigned char *)(v0 + v4[11]))
    {
      if (v8 == 1)
      {
        unint64_t v9 = 0xE300000000000000;
        uint64_t v10 = 6710895;
      }
      else
      {
        unint64_t v9 = 0xEF79746976697463;
        uint64_t v10 = 0x6120746365746564;
      }
    }
    else
    {
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1701736302;
    }
    v12[0] = v10;
    v12[1] = v9;
    sub_251AE13EC();
    uint64_t v7 = sub_251F361F0();
    swift_bridgeObjectRelease();
  }
  else if (*(unsigned char *)(v0 + v4[10]))
  {
    return 0;
  }
  else
  {
    return 0x6F70736552206F4ELL;
  }
  return v7;
}

uint64_t sub_251C69F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C69FBC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void MatterCommandFields.init(commandFields:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v4 = sub_251F356F0();
  if (!*(void *)(a1 + 16) || (unint64_t v6 = sub_2519FE798(v4, v5), (v7 & 1) == 0))
  {
    long long v37 = 0u;
    long long v38 = 0u;
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_251A0D51C(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1))
  {
LABEL_20:
    uint64_t v17 = &v37;
LABEL_21:
    sub_251A9090C((uint64_t)v17);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FC0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  if (!*(void *)(v35 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_19:
    long long v37 = 0u;
    long long v38 = 0u;
    goto LABEL_20;
  }
  uint64_t v8 = *(void *)(v35 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_251F356F0();
  if (*(void *)(v8 + 16) && (unint64_t v11 = sub_2519FE798(v9, v10), (v12 & 1) != 0))
  {
    sub_251A0D51C(*(void *)(v8 + 56) + 32 * v11, (uint64_t)&v37);
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1)) {
    goto LABEL_20;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v13 = sub_251F356F0();
  if (*(void *)(v35 + 16) && (unint64_t v15 = sub_2519FE798(v13, v14), (v16 & 1) != 0))
  {
    sub_251A0D51C(*(void *)(v35 + 56) + 32 * v15, (uint64_t)&v37);
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1)) {
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  long long v19 = v35;
  uint64_t v20 = sub_251F356F0();
  if (*(void *)(v35 + 16) && (unint64_t v22 = sub_2519FE798(v20, v21), (v23 & 1) != 0))
  {
    sub_251A0D51C(*(void *)(v35 + 56) + 32 * v22, (uint64_t)&v35);
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v36 + 1))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = &v35;
    goto LABEL_21;
  }
  sub_251A0D578(&v35, &v37);
  sub_251A0D51C((uint64_t)&v37, (uint64_t)&v35);
  sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
  if (swift_dynamicCast())
  {
    if ((void)v19 == sub_251F356F0() && *((void *)&v19 + 1) == v24)
    {
      swift_bridgeObjectRelease();
LABEL_43:
      swift_bridgeObjectRelease();
      unsigned int v27 = objc_msgSend(v34, sel_BOOLValue);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = v27;
      *(unsigned char *)(a2 + 16) = 0;
      return;
    }
    char v26 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_43;
    }
    if ((void)v19 == sub_251F356F0() && *((void *)&v19 + 1) == v28)
    {
      swift_bridgeObjectRelease();
LABEL_49:
      swift_bridgeObjectRelease();
      id v30 = objc_msgSend(v34, sel_integerValue);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = v30;
      char v18 = 1;
      goto LABEL_23;
    }
    char v29 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_49;
    }
    if ((void)v19 == sub_251F356F0() && *((void *)&v19 + 1) == v31)
    {
      swift_bridgeObjectRelease_n();
LABEL_54:
      id v33 = objc_msgSend(v34, sel_unsignedIntegerValue);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = v33;
      char v18 = 2;
      goto LABEL_23;
    }
    char v32 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_54;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_251A0D51C((uint64_t)&v37, (uint64_t)&v35);
    sub_251A1A568(0, &qword_269BA0FC8);
    if (swift_dynamicCast())
    {
      uint64_t v25 = sub_251C6D2E0();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
      if (v25)
      {
        *(void *)a2 = 0;
        *(void *)(a2 + 8) = v25;
        char v18 = 3;
        goto LABEL_23;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
    }
  }
LABEL_22:
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  char v18 = -1;
LABEL_23:
  *(unsigned char *)(a2 + 16) = v18;
}

uint64_t MatterCommand.expectedValues(endpointID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  uint64_t v7 = MatterCommand.expectedValues(for:endpointID:)(v6, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

BOOL MatterCommand.isEqual(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v35)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v36;
  int v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  BOOL v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  BOOL v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  BOOL v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  void (*v100)(char *, uint64_t, uint64_t);
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void v116[6];
  char *v117;
  unsigned __int8 v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unsigned __int8 v126;
  uint64_t v127;
  uint64_t v128;
  void v129[2];
  unsigned __int8 v130;
  uint64_t v131;
  uint64_t v132;
  void v133[3];
  uint64_t v134;
  uint64_t v135;
  void v136[3];
  uint64_t v137;
  uint64_t v138;
  void v139[3];
  uint64_t v140;
  uint64_t v141;

  uint64_t v4 = v3;
  uint64_t v110 = *(void *)(a2 - 8);
  uint64_t v8 = v110;
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v104 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v111 = (char *)&v100 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v103 = (char *)&v100 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v107 = (char *)&v100 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v112 = (char *)&v100 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v100 - v19;
  LODWORD(v105) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v22, v21);
  uint64_t v24 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 24);
  uint64_t v26 = v23;
  uint64_t v27 = (uint64_t)a1;
  int v28 = v25(v24, v26);
  uint64_t v102 = v8;
  char v29 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v113 = a2;
  uint64_t v114 = v4;
  v29(v20, v4, a2);
  sub_251A1A4EC(v27, (uint64_t)v139);
  uint64_t v106 = a3;
  uint64_t v108 = v8 + 16;
  uint64_t v109 = v27;
  if (v105 != v28)
  {
    uint64_t v53 = *(void (**)(char *, uint64_t))(v110 + 8);
    long long v47 = v113;
    v53(v20, v113);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v139);
    uint64_t v55 = v112;
    long long v48 = v114;
    v29(v112, v114, v47);
    sub_251A1A4EC(v27, (uint64_t)v136);
    uint64_t v54 = v103;
    int64_t v51 = v107;
    v53(v55, v47);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v136);
    v29(v51, v48, v47);
    sub_251A1A4EC(v27, (uint64_t)v133);
    goto LABEL_11;
  }
  uint64_t v30 = a3;
  uint64_t v31 = v113;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 32))(v136, v113, a3);
  uint64_t v32 = SLOBYTE(v136[0]);
  uint64_t v33 = v140;
  uint64_t v34 = v141;
  __swift_project_boxed_opaque_existential_1(v139, v140);
  long long v35 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 32);
  long long v36 = v34;
  uint64_t v27 = v109;
  v35(v133, v33, v36);
  long long v37 = dword_251F4A228[v32];
  LODWORD(v33) = dword_251F4A228[SLOBYTE(v133[0])];
  uint64_t v39 = v110 + 8;
  long long v38 = *(void (**)(char *, uint64_t))(v110 + 8);
  uint64_t v105 = (v110 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v101 = v38;
  v38(v20, v31);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v139);
  uint64_t v100 = v29;
  v29(v112, v114, v31);
  sub_251A1A4EC(v27, (uint64_t)v136);
  if (v37 != v33)
  {
    long long v47 = v113;
    long long v48 = v114;
    char v29 = v100;
    uint64_t v53 = v101;
    int64_t v51 = v107;
    uint64_t v54 = v103;
    v101(v112, v113);
    goto LABEL_10;
  }
  long long v40 = v39;
  uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 48))(v113, v30);
  uint64_t v42 = v137;
  long long v43 = v138;
  __swift_project_boxed_opaque_existential_1(v136, v137);
  uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 48))(v42, v43);
  uint64_t v45 = v44;
  if (!v41)
  {
    uint64_t v53 = v101;
    v101(v112, v113);
    uint64_t v27 = v109;
    long long v48 = v114;
    if (!v45)
    {
      uint64_t v110 = v40;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v136);
      int64_t v51 = v107;
      long long v47 = v113;
      v100(v107, v48, v113);
      sub_251A1A4EC(v27, (uint64_t)v133);
      char v52 = v106;
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    char v29 = v100;
    long long v47 = v113;
    goto LABEL_25;
  }
  uint64_t v110 = v39;
  uint64_t v46 = v112;
  long long v47 = v113;
  uint64_t v27 = v109;
  long long v48 = v114;
  if (!v44)
  {
    uint64_t v53 = v101;
    v101(v112, v113);
    swift_bridgeObjectRelease();
    char v29 = v100;
LABEL_25:
    uint64_t v54 = v103;
    int64_t v51 = v107;
    goto LABEL_10;
  }
  uint64_t v49 = swift_bridgeObjectRetain();
  uint64_t v50 = sub_251B03EF0(v49, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v101(v46, v47);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v136);
  int64_t v51 = v107;
  char v29 = v100;
  v100(v107, v48, v47);
  sub_251A1A4EC(v27, (uint64_t)v133);
  char v52 = v106;
  if ((v50 & 1) == 0)
  {
    uint64_t v53 = v101;
    uint64_t v54 = v103;
LABEL_11:
    uint64_t v56 = (v102 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v53(v51, v47);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v133);
    v29(v54, v48, v47);
    sub_251A1A4EC(v27, (uint64_t)v129);
    uint64_t v57 = 0;
LABEL_12:
    v53(v54, v47);
    goto LABEL_13;
  }
LABEL_27:
  long long v76 = v51;
  (*(void (**)(void *__return_ptr, uint64_t))(v52 + 56))(v129, v47);
  long long v77 = v129[1];
  uint64_t v113 = v129[0];
  long long v78 = v130;
  uint64_t v79 = v134;
  long long v80 = v135;
  __swift_project_boxed_opaque_existential_1(v133, v134);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v80 + 56))(&v124, v79, v80);
  BOOL v82 = v124;
  uint64_t v81 = (uint64_t)v125;
  uint64_t v83 = v126;
  if (v78 == 255)
  {
    uint64_t v112 = v125;
    uint64_t v53 = v101;
    v101(v76, v47);
    if (v83 == 255)
    {
      sub_251C32408(v113, v77, 255);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v133);
      uint64_t v89 = v103;
      v100(v103, v48, v47);
      sub_251A1A4EC(v109, (uint64_t)v129);
      uint64_t v56 = v105;
      uint64_t v90 = v106;
      goto LABEL_34;
    }
    goto LABEL_36;
  }
  uint64_t v53 = v101;
  if (v126 == 255)
  {
    uint64_t v112 = v125;
    sub_251A1A4B8(v77, v78);
    v53(v107, v47);
    sub_251A4EBDC(v77, v78);
LABEL_36:
    sub_251C32408(v113, v77, v78);
    uint64_t v97 = v82;
    uint64_t v98 = (uint64_t)v112;
    uint64_t v99 = v83;
LABEL_38:
    sub_251C32408(v97, v98, v99);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v133);
    uint64_t v54 = v103;
    char v29 = v100;
    v100(v103, v48, v47);
    uint64_t v27 = v109;
    sub_251A1A4EC(v109, (uint64_t)v129);
    uint64_t v57 = 0;
    uint64_t v56 = v105;
    goto LABEL_12;
  }
  uint64_t v84 = v113;
  if (v113 != v124)
  {
    sub_251C6D698(v113, v77, v78);
    sub_251C32408(v82, v81, v83);
    v53(v107, v47);
    sub_251A4EBDC(v77, v78);
    uint64_t v97 = v84;
    uint64_t v98 = v77;
    uint64_t v99 = v78;
    goto LABEL_38;
  }
  unint64_t v120 = v77;
  uint64_t v121 = v78;
  unint64_t v117 = v125;
  uint64_t v118 = v126;
  sub_251C6D698(v113, v77, v78);
  uint64_t v85 = _s13HomeDataModel015MatterAttributeB7BuilderO2eeoiySbAC_ACtFZ_0((uint64_t)&v120, (uint64_t)&v117);
  uint64_t v86 = v81;
  uint64_t v87 = v53;
  uint64_t v88 = v85;
  sub_251C32408(v84, v86, v83);
  v87(v107, v47);
  sub_251A4EBDC(v77, v78);
  sub_251C32408(v84, v77, v78);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v133);
  uint64_t v89 = v103;
  v100(v103, v48, v47);
  uint64_t v27 = v109;
  sub_251A1A4EC(v109, (uint64_t)v129);
  uint64_t v56 = v105;
  uint64_t v90 = v106;
  if (!v88)
  {
    uint64_t v57 = 0;
    char v29 = v100;
    uint64_t v53 = v101;
    long long v48 = v114;
    v101(v89, v47);
    goto LABEL_13;
  }
LABEL_34:
  uint64_t v91 = (*(uint64_t (**)(uint64_t))(v90 + 40))(v47);
  uint64_t v92 = v131;
  uint64_t v93 = v132;
  __swift_project_boxed_opaque_existential_1(v129, v131);
  uint64_t v94 = *(uint64_t (**)(uint64_t, uint64_t))(v93 + 40);
  uint64_t v95 = v93;
  uint64_t v27 = v109;
  uint64_t v96 = v94(v92, v95);
  long long v48 = v114;
  uint64_t v57 = v91 == v96;
  char v29 = v100;
  uint64_t v53 = v101;
  v101(v89, v47);
LABEL_13:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v129);
  int64_t v58 = v111;
  v29(v111, v48, v47);
  sub_251A1A4EC(v27, (uint64_t)&v124);
  if (v57)
  {
    uint64_t v105 = v56;
    uint64_t v59 = v53;
    uint64_t v60 = v47;
    uint64_t v61 = (*(uint64_t (**)(uint64_t))(v106 + 80))(v47);
    int64_t v63 = v62;
    uint64_t v64 = v127;
    uint64_t v65 = v128;
    __swift_project_boxed_opaque_existential_1(&v124, v127);
    if (v61 == (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 80))(v64, v65) && v63 == v66)
    {
      swift_bridgeObjectRelease_n();
      long long v47 = v60;
      uint64_t v67 = v59;
      v59(v111, v60);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v124);
      unint64_t v68 = v104;
      v29(v104, v114, v47);
      sub_251A1A4EC(v109, (uint64_t)&v120);
LABEL_20:
      uint64_t v71 = v47;
      (*(void (**)(char **__return_ptr, uint64_t))(v106 + 72))(&v117, v47);
      __swift_project_boxed_opaque_existential_1(&v117, v119);
      sub_251F359C0();
      unint64_t v72 = v116[5];
      uint64_t v73 = v122;
      uint64_t v74 = v123;
      __swift_project_boxed_opaque_existential_1(&v120, v122);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v74 + 72))(v116, v73, v74);
      __swift_project_boxed_opaque_existential_1(v116, v116[3]);
      sub_251F359C0();
      v67(v68, v71);
      uint64_t v69 = v72 == v115;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v117);
      goto LABEL_21;
    }
    uint64_t v70 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v47 = v60;
    uint64_t v67 = v59;
    v59(v111, v60);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v124);
    unint64_t v68 = v104;
    v29(v104, v114, v47);
    sub_251A1A4EC(v109, (uint64_t)&v120);
    if (v70) {
      goto LABEL_20;
    }
  }
  else
  {
    v53(v58, v47);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v124);
    unint64_t v68 = v104;
    v29(v104, v48, v47);
    sub_251A1A4EC(v27, (uint64_t)&v120);
    uint64_t v67 = v53;
  }
  v67(v68, v47);
  uint64_t v69 = 0;
LABEL_21:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v120);
  return v69;
}

uint64_t MatterCommand.expectedValues(for:endpointID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  for (uint64_t i = MEMORY[0x263F8EE78]; ; uint64_t i = v31)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_6;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v24 >= v28) {
      goto LABEL_22;
    }
    unint64_t v25 = *(void *)(v27 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v28) {
        goto LABEL_22;
      }
      unint64_t v25 = *(void *)(v27 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v28) {
          goto LABEL_22;
        }
        unint64_t v25 = *(void *)(v27 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v25 - 1) & v25;
    unint64_t v12 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_6:
    int v13 = *(_DWORD *)(*(void *)(a1 + 48) + 8 * v12);
    uint64_t v14 = *(void *)(a1 + 56) + 16 * v12;
    uint64_t v15 = *(void *)v14;
    char v16 = *(unsigned char *)(v14 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(_DWORD *)(inited + 32) = v13;
    *(void *)(inited + 40) = v15;
    *(unsigned char *)(inited + 48) = v16;
    unint64_t v18 = sub_251A19C30(inited);
    swift_setDeallocating();
    sub_251A1A4B8(v15, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
    swift_arrayDestroy();
    uint64_t v19 = (void *)sub_251F36D40();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32))(&v31, a3, a4);
    uint64_t v20 = (void *)sub_251F36D60();
    uint64_t v21 = (void *)sub_251F36D60();
    id v22 = objc_msgSend(self, sel_attributePathWithEndpointID_clusterID_attributeID_, v19, v20, v21);

    uint64_t v23 = _s13HomeDataModel13MatterCommandPAAE15_expectedValues3for19matterAttributePathSaySDySSypGGSDySo18MTRAttributeIDTypeVAA0djB7BuilderOG_So0lK0CtF_0(v18, v22);
    swift_bridgeObjectRelease();

    uint64_t v31 = i;
    uint64_t result = sub_251ED7CF8(v23);
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v28)
  {
LABEL_22:
    swift_release();
    return i;
  }
  unint64_t v25 = *(void *)(v27 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_22;
    }
    unint64_t v25 = *(void *)(v27 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t MatterCommand.isSimilarCommand(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(v5, v6);
  if (!result) {
    return result;
  }
  uint64_t v8 = result;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  if (!result)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  int64_t v9 = 0;
  uint64_t v10 = v8 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = result + 64;
LABEL_7:
  while (2)
  {
    if (!v13)
    {
      int64_t v18 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_56;
      }
      if (v18 < v14)
      {
        unint64_t v19 = *(void *)(v10 + 8 * v18);
        ++v9;
        if (v19) {
          goto LABEL_22;
        }
        int64_t v9 = v18 + 1;
        if (v18 + 1 < v14)
        {
          unint64_t v19 = *(void *)(v10 + 8 * v9);
          if (v19) {
            goto LABEL_22;
          }
          int64_t v9 = v18 + 2;
          if (v18 + 2 < v14)
          {
            unint64_t v19 = *(void *)(v10 + 8 * v9);
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 < v14)
              {
                unint64_t v19 = *(void *)(v10 + 8 * v20);
                if (v19)
                {
                  int64_t v9 = v20;
                  goto LABEL_22;
                }
                while (1)
                {
                  int64_t v9 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_57;
                  }
                  if (v9 >= v14) {
                    break;
                  }
                  unint64_t v19 = *(void *)(v10 + 8 * v9);
                  ++v20;
                  if (v19) {
                    goto LABEL_22;
                  }
                }
              }
              goto LABEL_53;
            }
LABEL_22:
            unint64_t v13 = (v19 - 1) & v19;
            unint64_t v17 = __clz(__rbit64(v19)) + (v9 << 6);
            goto LABEL_23;
          }
        }
      }
LABEL_53:
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v9 << 6);
LABEL_23:
    int64_t v21 = 0;
    uint64_t v22 = *(void *)(v8 + 48) + 8 * v17;
    int v23 = *(_DWORD *)v22;
    uint64_t v24 = *(char *)(v22 + 4);
    uint64_t v25 = 1 << *(unsigned char *)(result + 32);
    if (v25 < 64) {
      uint64_t v26 = ~(-1 << v25);
    }
    else {
      uint64_t v26 = -1;
    }
    unint64_t v27 = v26 & *(void *)(result + 64);
    int64_t v28 = (unint64_t)(v25 + 63) >> 6;
    while (1)
    {
      if (v27)
      {
        unint64_t v29 = __clz(__rbit64(v27));
        v27 &= v27 - 1;
        unint64_t v30 = v29 | (v21 << 6);
        goto LABEL_47;
      }
      int64_t v31 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_55;
      }
      if (v31 >= v28) {
        goto LABEL_7;
      }
      unint64_t v32 = *(void *)(v15 + 8 * v31);
      ++v21;
      if (!v32)
      {
        int64_t v21 = v31 + 1;
        if (v31 + 1 >= v28) {
          goto LABEL_7;
        }
        unint64_t v32 = *(void *)(v15 + 8 * v21);
        if (!v32)
        {
          int64_t v21 = v31 + 2;
          if (v31 + 2 >= v28) {
            goto LABEL_7;
          }
          unint64_t v32 = *(void *)(v15 + 8 * v21);
          if (!v32)
          {
            int64_t v21 = v31 + 3;
            if (v31 + 3 >= v28) {
              goto LABEL_7;
            }
            unint64_t v32 = *(void *)(v15 + 8 * v21);
            if (!v32)
            {
              int64_t v21 = v31 + 4;
              if (v31 + 4 >= v28) {
                goto LABEL_7;
              }
              unint64_t v32 = *(void *)(v15 + 8 * v21);
              if (!v32) {
                break;
              }
            }
          }
        }
      }
LABEL_46:
      unint64_t v27 = (v32 - 1) & v32;
      unint64_t v30 = __clz(__rbit64(v32)) + (v21 << 6);
LABEL_47:
      uint64_t v34 = *(void *)(result + 48) + 8 * v30;
      if (*(_DWORD *)v34 == v23 && dword_251F4A228[*(char *)(v34 + 4)] == dword_251F4A228[v24])
      {
        swift_bridgeObjectRelease();
        swift_release();
        return 1;
      }
    }
    int64_t v33 = v31 + 5;
    if (v33 >= v28) {
      continue;
    }
    break;
  }
  unint64_t v32 = *(void *)(v15 + 8 * v33);
  if (v32)
  {
    int64_t v21 = v33;
    goto LABEL_46;
  }
  while (1)
  {
    int64_t v21 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v21 >= v28) {
      goto LABEL_7;
    }
    unint64_t v32 = *(void *)(v15 + 8 * v21);
    ++v33;
    if (v32) {
      goto LABEL_46;
    }
  }
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

id MatterCommand.hm_matterCommand(for:cluster:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_251A1A930(a2, (uint64_t)v27 + 1);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  int64_t v21 = (void *)sub_251F36D60();
  sub_251A1A930((uint64_t)v27 + 1, (uint64_t)v28);
  sub_251A4DB2C((uint64_t)v28);
  sub_251A4E128((uint64_t)v28);
  int64_t v20 = (void *)sub_251F36D40();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 32))(v27, a3, a4);
  unint64_t v7 = (void *)sub_251F36D60();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 56))(&v24, a3, a4);
  char v8 = v26;
  if (v26 == 255)
  {
    unint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = v24;
    uint64_t v9 = v25;
    v22[0] = v24;
    v22[1] = v25;
    unsigned __int8 v23 = v26;
    unint64_t v11 = MatterCommandFields.asDictionary()();
    sub_251C32408(v10, v9, v8);
  }
  sub_251A1A930((uint64_t)v27 + 1, (uint64_t)v22);
  sub_251A4DB2C((uint64_t)v22);
  uint64_t v12 = *(unsigned __int16 *)(sub_251A4E128((uint64_t)v22) + 8);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  MatterCommand.expectedValues(for:endpointID:)(v13, v12, a3, a4);
  swift_bridgeObjectRelease();
  id v14 = a1;
  if (v11)
  {
    uint64_t v15 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v16 = objc_allocWithZone(MEMORY[0x263F0E4A8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  unint64_t v17 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v16, sel_initWithCommandID_endpointID_clusterID_accessory_commandFields_expectedValues_, v21, v20, v7, a1, v15, v17);

  return v18;
}

unint64_t MatterCommandFields.asDictionary()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D560);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F3A500;
  *(void *)(inited + 32) = sub_251F356F0();
  *(void *)(inited + 40) = v1;
  uint64_t v2 = sub_251F356F0();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  *(void *)(inited + 80) = sub_251F356F0();
  *(void *)(inited + 88) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEE8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_251F38650;
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_251F3A500;
  *(void *)(v6 + 32) = sub_251F356F0();
  *(void *)(v6 + 40) = v7;
  uint64_t v8 = sub_251F35EB0();
  *(void *)(v6 + 72) = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
  *(void *)(v6 + 48) = v8;
  *(void *)(v6 + 80) = sub_251F356F0();
  *(void *)(v6 + 88) = v9;
  unint64_t v10 = sub_251AA3F7C();
  *(void *)(v6 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FD0);
  *(void *)(v6 + 96) = v10;
  *(void *)(v5 + 32) = sub_2519FA1A4(v6);
  *(void *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FC0);
  *(void *)(inited + 96) = v5;
  return sub_2519FA1A4(inited);
}

uint64_t MatterCommand.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  sub_251F36CE0();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 32))(v12, a2, a3);
  sub_251F36CE0();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_251F36CC0();
    sub_251A433B0(a1, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 56))(v12, a2, a3);
  char v8 = v13;
  if (v13 == 255)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v10 = v12[0];
    uint64_t v9 = v12[1];
    sub_251F36CC0();
    sub_251F36CB0();
    MatterAttributeDataBuilder.hash(into:)();
    sub_251C32408(v10, v9, v8);
  }
  (*(void (**)(uint64_t, uint64_t))(a3 + 80))(a2, a3);
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251C6BD1C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return MatterCommandTemplate.init(matterCommand:device:)(a1, a2, a3, a4);
}

uint64_t MatterCommandTemplate.init(matterCommand:device:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_251F36190();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_251E52588();
  if (v15)
  {
    unint64_t v17 = v15;
    uint64_t v18 = v16;
    uint64_t v38 = v9;
    uint64_t v39 = v8;
    long long v40 = v11;
    uint64_t v41 = a4;
    sub_251C6D9A8(a2, (uint64_t)v14);
    unint64_t v19 = *(void (**)(void))(v18 + 16);
    uint64_t v36 = sub_251F36190();
    long long v37 = &v34;
    uint64_t v35 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    int64_t v21 = (char *)&v34 - v20;
    id v22 = a1;
    v19();
    Description = (void (**)(uint64_t *, char *, ValueMetadata *))v17[-1].Description;
    if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))Description[6])(v21, 1, v17) == 1)
    {

      sub_251C1373C(a2);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v36);
      uint64_t v44 = 0;
      long long v42 = 0u;
      long long v43 = 0u;
    }
    else
    {
      *((void *)&v43 + 1) = v17;
      uint64_t v44 = v18;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      Description[4](boxed_opaque_existential_1, v21, v17);

      sub_251C1373C(a2);
    }
    unsigned __int8 v26 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FD8);
    char v27 = swift_dynamicCast();
    uint64_t v24 = *(void *)(a3 - 8);
    int64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
    uint64_t v30 = v38;
    uint64_t v29 = v39;
    if (v27)
    {
      uint64_t v31 = *(void *)(a3 - 8);
      v28(v26, 0, 1, a3);
      uint64_t v32 = v41;
      (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v41, v26, a3);
      return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v28)(v32, 0, 1, a3);
    }
    v28(v26, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v29);
    a4 = v41;
  }
  else
  {

    sub_251C1373C(a2);
    uint64_t v24 = *(void *)(a3 - 8);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(a4, 1, 1, a3);
}

uint64_t MatterCommandFields.contextTag.getter()
{
  return *(void *)v0;
}

uint64_t MatterCommandFields.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  *(void *)a1 = v2;
  char v3 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_251A1A4B8(v2, v3);
}

uint64_t *MatterCommandFields.init(value:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  char v3 = *((unsigned char *)result + 8);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = v3;
  return result;
}

uint64_t MatterCommandFields.hash(into:)()
{
  return MatterAttributeDataBuilder.hash(into:)();
}

BOOL static MatterCommandFields.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    char v2 = *(unsigned char *)(a2 + 16);
    uint64_t v3 = *(void *)(a2 + 8);
    char v4 = *(unsigned char *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 8);
    char v10 = v4;
    uint64_t v7 = v3;
    char v8 = v2;
    return _s13HomeDataModel015MatterAttributeB7BuilderO2eeoiySbAC_ACtFZ_0((uint64_t)&v9, (uint64_t)&v7);
  }
  else
  {
    return 0;
  }
}

uint64_t MatterCommandFields.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251C6C278()
{
  return sub_251F36D00();
}

uint64_t sub_251C6C2E0()
{
  return MatterAttributeDataBuilder.hash(into:)();
}

uint64_t sub_251C6C334()
{
  return sub_251F36D00();
}

BOOL sub_251C6C398(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    char v2 = *(unsigned char *)(a2 + 16);
    uint64_t v3 = *(void *)(a2 + 8);
    char v4 = *(unsigned char *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 8);
    char v10 = v4;
    uint64_t v7 = v3;
    char v8 = v2;
    return _s13HomeDataModel015MatterAttributeB7BuilderO2eeoiySbAC_ACtFZ_0((uint64_t)&v9, (uint64_t)&v7);
  }
  else
  {
    return 0;
  }
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Array<A>.byExecutionOrder()()
{
  swift_bridgeObjectRetain();
  sub_251C6C444(&v0);
}

uint64_t sub_251C6C444(void **a1)
{
  char v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v2 = (void *)sub_251ECDD78(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_251C6C4B0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_251C6C4B0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_134;
    }
    if (v4) {
      return sub_251C6CD50(0, v4, 1, v3);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_142;
  }
  uint64_t v110 = result;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v109 = MEMORY[0x263F8EE78];
    if (v4 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v11 < 2)
      {
LABEL_111:
        swift_bridgeObjectRelease();
        *(void *)(v109 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
LABEL_99:
      uint64_t v101 = *v3;
      while (1)
      {
        unint64_t v102 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_129;
        }
        if (!v101) {
          goto LABEL_141;
        }
        uint64_t v103 = *(void *)&v9[16 * v102 + 32];
        uint64_t v104 = *(void *)&v9[16 * v11 + 24];
        sub_251C6CED0((char *)(v101 + 40 * v103), (char *)(v101 + 40 * *(void *)&v9[16 * v11 + 16]), v101 + 40 * v104, __dst);
        if (v2) {
          goto LABEL_111;
        }
        if (v104 < v103) {
          goto LABEL_130;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_251ECDC38((uint64_t)v9);
        }
        if (v102 >= *((void *)v9 + 2)) {
          goto LABEL_131;
        }
        uint64_t v105 = &v9[16 * v102 + 32];
        *(void *)uint64_t v105 = v103;
        *((void *)v105 + 1) = v104;
        unint64_t v106 = *((void *)v9 + 2);
        if (v11 > v106) {
          goto LABEL_132;
        }
        memmove(&v9[16 * v11 + 16], &v9[16 * v11 + 32], 16 * (v106 - v11));
        *((void *)v9 + 2) = v106 - 1;
        unint64_t v11 = v106 - 1;
        if (v106 <= 2) {
          goto LABEL_111;
        }
      }
    }
    uint64_t v125 = v1;
  }
  else
  {
    uint64_t v125 = v1;
    uint64_t v7 = v6 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEE0);
    uint64_t v8 = sub_251F35B50();
    *(void *)(v8 + 16) = v7;
    uint64_t v109 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v12 = v10++;
    uint64_t v116 = v12;
    if (v10 < v4)
    {
      uint64_t v13 = *v3;
      sub_251A1A4EC(*v3 + 40 * v10, (uint64_t)&v122);
      sub_251A1A4EC(v13 + 40 * v12, (uint64_t)v119);
      uint64_t v14 = v123;
      uint64_t v15 = v124;
      __swift_project_boxed_opaque_existential_1(&v122, v123);
      uint64_t v113 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
      uint64_t v16 = v120;
      uint64_t v17 = v121;
      __swift_project_boxed_opaque_existential_1(v119, v120);
      uint64_t v112 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v119);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v122);
      uint64_t v10 = v12 + 2;
      uint64_t v111 = v13;
      if (v12 + 2 < v4)
      {
        uint64_t v107 = v9;
        uint64_t v18 = v13 + 40 * v12 + 40;
        while (1)
        {
          uint64_t v19 = v18 + 40;
          sub_251A1A4EC(v18 + 40, (uint64_t)&v122);
          sub_251A1A4EC(v18, (uint64_t)v119);
          uint64_t v20 = v123;
          uint64_t v21 = v124;
          __swift_project_boxed_opaque_existential_1(&v122, v123);
          uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
          uint64_t v24 = v120;
          uint64_t v23 = v121;
          __swift_project_boxed_opaque_existential_1(v119, v120);
          BOOL v25 = v22 >= (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v24, v23);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v119);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v122);
          if (v113 < v112 == v25) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v4 == v10)
          {
            uint64_t v10 = v4;
            break;
          }
        }
        uint64_t v9 = v107;
        uint64_t v12 = v116;
      }
      if (v113 < v112)
      {
        if (v10 < v12) {
          goto LABEL_135;
        }
        if (v12 < v10)
        {
          uint64_t v114 = v4;
          uint64_t v26 = 40 * v10 - 40;
          uint64_t v27 = v12;
          uint64_t v28 = 40 * v12;
          uint64_t v29 = v10;
          do
          {
            if (v27 != --v29)
            {
              if (!v111) {
                goto LABEL_140;
              }
              uint64_t v30 = v111 + v28;
              sub_251A1A444((long long *)(v111 + v28), (uint64_t)&v122);
              uint64_t v31 = *(void *)(v111 + v26 + 32);
              long long v32 = *(_OWORD *)(v111 + v26 + 16);
              *(_OWORD *)uint64_t v30 = *(_OWORD *)(v111 + v26);
              *(_OWORD *)(v30 + 16) = v32;
              *(void *)(v30 + 32) = v31;
              sub_251A1A444(&v122, v111 + v26);
            }
            ++v27;
            v26 -= 40;
            v28 += 40;
          }
          while (v27 < v29);
          uint64_t v4 = v114;
          uint64_t v12 = v116;
        }
      }
    }
    if (v10 >= v4) {
      goto LABEL_49;
    }
    if (__OFSUB__(v10, v12)) {
      goto LABEL_133;
    }
    if (v10 - v12 >= v110) {
      goto LABEL_49;
    }
    if (__OFADD__(v12, v110)) {
      goto LABEL_136;
    }
    uint64_t v33 = v12 + v110 >= v4 ? v4 : v12 + v110;
    if (v33 < v12) {
      break;
    }
    if (v10 != v33)
    {
      uint64_t v108 = v9;
      uint64_t v34 = 40 * v10 - 40;
      uint64_t v115 = v33;
      do
      {
        uint64_t v35 = v12;
        uint64_t v36 = v34;
        do
        {
          uint64_t v37 = *v3 + v36;
          sub_251A1A4EC(v37 + 40, (uint64_t)&v122);
          sub_251A1A4EC(v37, (uint64_t)v119);
          uint64_t v38 = v123;
          uint64_t v39 = v124;
          __swift_project_boxed_opaque_existential_1(&v122, v123);
          uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
          uint64_t v41 = v120;
          uint64_t v42 = v121;
          __swift_project_boxed_opaque_existential_1(v119, v120);
          uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 40))(v41, v42);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v119);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v122);
          if (v40 >= v43) {
            break;
          }
          uint64_t v44 = *v3;
          if (!*v3) {
            goto LABEL_138;
          }
          uint64_t v45 = v44 + v36;
          sub_251A1A444((long long *)(v44 + v36 + 40), (uint64_t)&v122);
          long long v46 = *(_OWORD *)(v45 + 16);
          *(_OWORD *)(v45 + 40) = *(_OWORD *)v45;
          *(_OWORD *)(v45 + 56) = v46;
          *(void *)(v45 + 72) = *(void *)(v45 + 32);
          sub_251A1A444(&v122, v45);
          v36 -= 40;
          ++v35;
        }
        while (v10 != v35);
        ++v10;
        v34 += 40;
        uint64_t v12 = v116;
      }
      while (v10 != v115);
      uint64_t v10 = v115;
      uint64_t v9 = v108;
    }
LABEL_49:
    if (v10 < v12) {
      goto LABEL_128;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_251ECD5C4(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v48 = *((void *)v9 + 2);
    unint64_t v47 = *((void *)v9 + 3);
    unint64_t v11 = v48 + 1;
    if (v48 >= v47 >> 1) {
      uint64_t v9 = sub_251ECD5C4((char *)(v47 > 1), v48 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v11;
    uint64_t v49 = v9 + 32;
    uint64_t v50 = &v9[16 * v48 + 32];
    *(void *)uint64_t v50 = v12;
    *((void *)v50 + 1) = v10;
    if (v48)
    {
      uint64_t v117 = v10;
      while (1)
      {
        unint64_t v51 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v56 = &v49[16 * v11];
          uint64_t v57 = *((void *)v56 - 8);
          uint64_t v58 = *((void *)v56 - 7);
          BOOL v62 = __OFSUB__(v58, v57);
          uint64_t v59 = v58 - v57;
          if (v62) {
            goto LABEL_117;
          }
          uint64_t v61 = *((void *)v56 - 6);
          uint64_t v60 = *((void *)v56 - 5);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v54 = v60 - v61;
          char v55 = v62;
          if (v62) {
            goto LABEL_118;
          }
          unint64_t v63 = v11 - 2;
          uint64_t v64 = &v49[16 * v11 - 32];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v62 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v62) {
            goto LABEL_120;
          }
          BOOL v62 = __OFADD__(v54, v67);
          uint64_t v68 = v54 + v67;
          if (v62) {
            goto LABEL_123;
          }
          if (v68 >= v59)
          {
            uint64_t v86 = &v49[16 * v51];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v62 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v62) {
              goto LABEL_127;
            }
            BOOL v79 = v54 < v89;
            goto LABEL_87;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v80 = *((void *)v9 + 4);
            uint64_t v81 = *((void *)v9 + 5);
            BOOL v62 = __OFSUB__(v81, v80);
            uint64_t v73 = v81 - v80;
            char v74 = v62;
            goto LABEL_81;
          }
          uint64_t v53 = *((void *)v9 + 4);
          uint64_t v52 = *((void *)v9 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
        }
        if (v55) {
          goto LABEL_119;
        }
        unint64_t v63 = v11 - 2;
        uint64_t v69 = &v49[16 * v11 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v72 = __OFSUB__(v70, v71);
        uint64_t v73 = v70 - v71;
        char v74 = v72;
        if (v72) {
          goto LABEL_122;
        }
        uint64_t v75 = &v49[16 * v51];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v62 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v62) {
          goto LABEL_125;
        }
        if (__OFADD__(v73, v78)) {
          goto LABEL_126;
        }
        if (v73 + v78 >= v54)
        {
          BOOL v79 = v54 < v78;
LABEL_87:
          if (v79) {
            unint64_t v51 = v63;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v74) {
          goto LABEL_121;
        }
        BOOL v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_124;
        }
        if (v85 < v73) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v90 = v51 - 1;
        if (v51 - 1 >= v11)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        uint64_t v91 = v3;
        uint64_t v92 = *v3;
        if (!*v3) {
          goto LABEL_139;
        }
        uint64_t v93 = v9;
        uint64_t v94 = &v49[16 * v90];
        uint64_t v95 = *(void *)v94;
        unint64_t v96 = v51;
        uint64_t v97 = &v49[16 * v51];
        uint64_t v98 = *((void *)v97 + 1);
        uint64_t v99 = v125;
        sub_251C6CED0((char *)(v92 + 40 * *(void *)v94), (char *)(v92 + 40 * *(void *)v97), v92 + 40 * v98, __dst);
        uint64_t v125 = v99;
        if (v99) {
          goto LABEL_111;
        }
        if (v98 < v95) {
          goto LABEL_114;
        }
        if (v96 > *((void *)v93 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v94 = v95;
        *(void *)&v49[16 * v90 + 8] = v98;
        unint64_t v100 = *((void *)v93 + 2);
        if (v96 >= v100) {
          goto LABEL_116;
        }
        uint64_t v9 = v93;
        unint64_t v11 = v100 - 1;
        memmove(v97, v97 + 16, 16 * (v100 - 1 - v96));
        *((void *)v93 + 2) = v100 - 1;
        uint64_t v3 = v91;
        uint64_t v10 = v117;
        if (v100 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v4 = v3[1];
    if (v10 >= v4)
    {
      uint64_t v2 = v125;
      if (v11 < 2) {
        goto LABEL_111;
      }
      goto LABEL_99;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251C6CD50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v26 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = 40 * a3 - 40;
LABEL_5:
    uint64_t v7 = v26;
    uint64_t v8 = v6;
    while (1)
    {
      uint64_t v9 = *a4 + v8;
      sub_251A1A4EC(v9 + 40, (uint64_t)&v23);
      sub_251A1A4EC(v9, (uint64_t)v20);
      uint64_t v10 = v24;
      uint64_t v11 = v25;
      __swift_project_boxed_opaque_existential_1(&v23, v24);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
      uint64_t v13 = v21;
      uint64_t v14 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
      if (v12 >= v15)
      {
LABEL_4:
        ++v5;
        v6 += 40;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v16 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v17 = v16 + v8;
      sub_251A1A444((long long *)(v16 + v8 + 40), (uint64_t)&v23);
      long long v18 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)(v17 + 40) = *(_OWORD *)v17;
      *(_OWORD *)(v17 + 56) = v18;
      *(void *)(v17 + 72) = *(void *)(v17 + 32);
      uint64_t result = sub_251A1A444(&v23, v17);
      v8 -= 40;
      if (v5 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251C6CED0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v54 = __src;
  uint64_t v53 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -39) {
      goto LABEL_42;
    }
    if (__dst != a2 || &a2[40 * v11] <= __dst) {
      memmove(__dst, a2, 40 * v11);
    }
    uint64_t v26 = &v4[40 * v11];
    uint64_t v52 = v26;
    uint64_t v54 = v6;
    if (__src >= v6 || v10 < 40) {
      goto LABEL_41;
    }
    unint64_t v27 = a3 - 40;
    uint64_t v45 = __src;
    while (1)
    {
      long long v32 = (char *)(v27 + 40);
      sub_251A1A4EC((uint64_t)(v26 - 40), (uint64_t)v49);
      uint64_t v30 = v6 - 40;
      sub_251A1A4EC((uint64_t)(v6 - 40), (uint64_t)v46);
      uint64_t v33 = v50;
      uint64_t v34 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 40))(v33, v34);
      uint64_t v36 = v47;
      uint64_t v37 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 40))(v36, v37);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      if (v35 < v38) {
        break;
      }
      uint64_t v41 = v52;
      uint64_t v26 = v52 - 40;
      v52 -= 40;
      if (v32 < v41 || v27 >= (unint64_t)v41)
      {
        long long v28 = *(_OWORD *)v26;
        long long v29 = *(_OWORD *)(v41 - 24);
        *(void *)(v27 + 32) = *((void *)v41 - 1);
        *(_OWORD *)unint64_t v27 = v28;
        *(_OWORD *)(v27 + 16) = v29;
        uint64_t v30 = v6;
        goto LABEL_29;
      }
      uint64_t v31 = v45;
      if (v32 != v41)
      {
        long long v42 = *(_OWORD *)v26;
        long long v43 = *(_OWORD *)(v41 - 24);
        *(void *)(v27 + 32) = *((void *)v41 - 1);
        *(_OWORD *)unint64_t v27 = v42;
        *(_OWORD *)(v27 + 16) = v43;
      }
      uint64_t v30 = v6;
      if (v26 <= v4) {
        goto LABEL_41;
      }
LABEL_30:
      v27 -= 40;
      uint64_t v6 = v30;
      if (v30 <= v31) {
        goto LABEL_41;
      }
    }
    if (v32 != v6 || v27 >= (unint64_t)v6)
    {
      long long v39 = *(_OWORD *)v30;
      long long v40 = *(_OWORD *)(v6 - 24);
      *(void *)(v27 + 32) = *((void *)v6 - 1);
      *(_OWORD *)unint64_t v27 = v39;
      *(_OWORD *)(v27 + 16) = v40;
    }
    v54 -= 40;
    uint64_t v26 = v52;
LABEL_29:
    uint64_t v31 = v45;
    if (v26 <= v4) {
      goto LABEL_41;
    }
    goto LABEL_30;
  }
  if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[40 * v9];
    uint64_t v52 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        sub_251A1A4EC((uint64_t)v6, (uint64_t)v49);
        sub_251A1A4EC((uint64_t)v4, (uint64_t)v46);
        uint64_t v13 = v50;
        uint64_t v14 = v51;
        __swift_project_boxed_opaque_existential_1(v49, v50);
        uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
        uint64_t v16 = v47;
        uint64_t v17 = v48;
        __swift_project_boxed_opaque_existential_1(v46, v47);
        uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
        uint64_t v19 = v54;
        if (v15 >= v18)
        {
          long long v23 = v53 + 40;
          if (v54 != v53 || v54 >= v23)
          {
            long long v24 = *(_OWORD *)v53;
            long long v25 = *((_OWORD *)v53 + 1);
            *((void *)v54 + 4) = *((void *)v53 + 4);
            *uint64_t v19 = v24;
            v19[1] = v25;
          }
          uint64_t v53 = v23;
          unint64_t v20 = (unint64_t)v6;
        }
        else
        {
          unint64_t v20 = (unint64_t)(v6 + 40);
          if (v54 >= v6 && (unint64_t)v54 < v20 && v54 == v6)
          {
            uint64_t v19 = v6;
          }
          else
          {
            long long v21 = *(_OWORD *)v6;
            long long v22 = *((_OWORD *)v6 + 1);
            *((void *)v54 + 4) = *((void *)v6 + 4);
            *uint64_t v19 = v21;
            v19[1] = v22;
          }
        }
        uint64_t v54 = (char *)v19 + 40;
        uint64_t v4 = v53;
        if ((unint64_t)v53 >= v12) {
          break;
        }
        uint64_t v6 = (char *)v20;
      }
      while (v20 < a3);
    }
LABEL_41:
    sub_251ECD930((void **)&v54, (const void **)&v53, &v52);
    return 1;
  }
LABEL_42:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251C6D2E0()
{
  return 0;
}

uint64_t sub_251C6D698(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_251A1A4B8(a2, a3);
  }
  return result;
}

uint64_t _s13HomeDataModel13MatterCommandPAAE15_expectedValues3for19matterAttributePathSaySDySSypGGSDySo18MTRAttributeIDTypeVAA0djB7BuilderOG_So0lK0CtF_0(uint64_t a1, void *a2)
{
  uint64_t v21 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  int64_t v8 = (void *)MEMORY[0x263F8EE78];
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  for (v5 &= v5 - 1; ; uint64_t v5 = (v10 - 1) & v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D6B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3A500;
    *(void *)(inited + 32) = sub_251F356F0();
    *(void *)(inited + 40) = v13;
    *(void *)(inited + 48) = a2;
    *(void *)(inited + 56) = sub_251F356F0();
    *(void *)(inited + 64) = v14;
    id v15 = a2;
    sub_251AA3F7C();
    sub_251A1A568(0, (unint64_t *)&qword_26B21ECF8);
    uint64_t v16 = sub_251F35540();
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = v16;
    unint64_t v17 = sub_2519FA460(inited);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_251F0F8C8(0, v8[2] + 1, 1, v8);
      int64_t v8 = (void *)result;
    }
    unint64_t v19 = v8[2];
    unint64_t v18 = v8[3];
    if (v19 >= v18 >> 1)
    {
      uint64_t result = (uint64_t)sub_251F0F8C8((void *)(v18 > 1), v19 + 1, 1, v8);
      int64_t v8 = (void *)result;
    }
    long long v8[2] = v19 + 1;
    v8[v19 + 4] = v17;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v22) {
      goto LABEL_27;
    }
    uint64_t v10 = *(void *)(v21 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v22) {
        goto LABEL_27;
      }
      uint64_t v10 = *(void *)(v21 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v22) {
          goto LABEL_27;
        }
        uint64_t v10 = *(void *)(v21 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v22) {
            goto LABEL_27;
          }
          uint64_t v10 = *(void *)(v21 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_20:
    ;
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v22)
  {
LABEL_27:
    swift_release();
    uint64_t v20 = sub_251EEC5F8((uint64_t)v8);
    swift_bridgeObjectRelease();
    return v20;
  }
  uint64_t v10 = *(void *)(v21 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v22) {
      goto LABEL_27;
    }
    uint64_t v10 = *(void *)(v21 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_251C6D9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMatterDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_251C6DA10()
{
  unint64_t result = qword_269BA0FE0;
  if (!qword_269BA0FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0FE0);
  }
  return result;
}

uint64_t dispatch thunk of MatterCommandProvider.defaultCommands()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MatterCommand.init(clusterKind:commandID:expectedValues:commandFields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of MatterCommand.commandID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MatterCommand.clusterKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MatterCommand.executionOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MatterCommand.expectedValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MatterCommand.commandFields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MatterCommand.overridingAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MatterCommand.operationType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MatterCommand.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of MatterCommandTemplate.init(matterCommand:device:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of MatterCommandTemplate.command(with:endpoint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of MatterCommandTemplate.matterCommand(endpoint:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t destroy for MatterCommandFields(uint64_t a1)
{
  return sub_251A4EBDC(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s13HomeDataModel19MatterCommandFieldsVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  sub_251A1A4B8(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for MatterCommandFields(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  sub_251A1A4B8(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v3;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_251A4EBDC(v5, v6);
  return a1;
}

uint64_t assignWithTake for MatterCommandFields(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v5 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_251A4EBDC(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for MatterCommandFields()
{
  return &type metadata for MatterCommandFields;
}

unint64_t StaticEndpoint.onOffCluster.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = type metadata accessor for StaticEndpoint();
  uint64_t v4 = *(void *)(v1 + *(int *)(result + 36));
  if (*(void *)(v4 + 16)
    && (unint64_t result = sub_2519FE614(10), (v5 & 1) != 0)
    && (sub_251A1A930(*(void *)(v4 + 56) + (result << 8), (uint64_t)v8),
        sub_251A1A930((uint64_t)v8, (uint64_t)v9),
        unint64_t result = sub_251A4DB2C((uint64_t)v9),
        result == 1))
  {
    unint64_t result = sub_251A4E128((uint64_t)v9);
    int v6 = *(unsigned __int16 *)(result + 8) | (*(unsigned __int8 *)(result + 10) << 16);
    if (*(unsigned char *)(result + 11)) {
      int v7 = 0x1000000;
    }
    else {
      int v7 = 0;
    }
    *(void *)a1 = *(void *)result;
    *(_DWORD *)(a1 + 8) = v6 | v7;
  }
  else
  {
    *(void *)a1 = 0;
    *(_DWORD *)(a1 + 8) = 0x2000000;
  }
  return result;
}

uint64_t StaticEndpoint.rvcClusterGroup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = &type metadata for HomeKitFeatures;
  unint64_t v27 = sub_251A4DA94();
  LOBYTE(v25) = 4;
  char v3 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v25);
  if ((v3 & 1) == 0)
  {
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if (byte_269BA38B2 != 1) {
      goto LABEL_9;
    }
  }
  uint64_t v4 = *(void *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(void *)(v4 + 16)
    && (unint64_t v5 = sub_2519FE614(23), (v6 & 1) != 0)
    && (sub_251A1A930(*(void *)(v4 + 56) + (v5 << 8), (uint64_t)v24),
        sub_251A1A930((uint64_t)v24, (uint64_t)&v25),
        sub_251A4DB2C((uint64_t)&v25) == 2))
  {
    int v7 = (_OWORD *)sub_251A4E128((uint64_t)&v25);
    long long v9 = v7[1];
    long long v8 = v7[2];
    v21[0] = *v7;
    v21[1] = v9;
    v21[2] = v8;
    long long v10 = v7[6];
    long long v12 = v7[3];
    long long v11 = v7[4];
    v21[5] = v7[5];
    v21[6] = v10;
    v21[3] = v12;
    v21[4] = v11;
    long long v13 = v7[10];
    long long v15 = v7[7];
    long long v14 = v7[8];
    v21[9] = v7[9];
    v21[10] = v13;
    v21[7] = v15;
    v21[8] = v14;
    long long v17 = v7[12];
    long long v16 = v7[13];
    long long v18 = v7[11];
    *(_OWORD *)&v22[12] = *(_OWORD *)((char *)v7 + 220);
    v21[12] = v17;
    *(_OWORD *)int64_t v22 = v16;
    v21[11] = v18;
    nullsub_1(v21);
    sub_251A4ECF0((uint64_t)v21, a1, &qword_269B9ECC0);
    sub_251A1A930((uint64_t)v24, (uint64_t)v23);
    uint64_t v19 = sub_251A4E128((uint64_t)v23);
    return sub_251A4DB38(v19);
  }
  else
  {
LABEL_9:
    sub_251C6E6E0(&v25);
    return sub_251A4ECF0((uint64_t)&v25, a1, &qword_269B9ECC0);
  }
}

double StaticEndpoint.powerSourceCluster.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(void *)(v3 + 16)
    && (unint64_t v4 = sub_2519FE614(2), (v5 & 1) != 0)
    && (sub_251A1A930(*(void *)(v3 + 56) + (v4 << 8), (uint64_t)v16),
        sub_251A1A930((uint64_t)v16, (uint64_t)v17),
        sub_251A4DB2C((uint64_t)v17) == 6))
  {
    uint64_t v6 = sub_251A4E128((uint64_t)v17);
    char v8 = *(unsigned char *)(v6 + 32);
    unint64_t v9 = *(unsigned int *)(v6 + 8) | ((unint64_t)*(unsigned __int8 *)(v6 + 12) << 32);
    uint64_t v10 = 0x1000000000000;
    if (*(unsigned char *)(v6 + 22)) {
      uint64_t v11 = 0x1000000000000;
    }
    else {
      uint64_t v11 = 0;
    }
    unint64_t v12 = *(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned __int8 *)(v6 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v6 + 21) << 40) | v11;
    uint64_t v13 = 0x100000000;
    if (!*(unsigned char *)(v6 + 28)) {
      uint64_t v13 = 0;
    }
    unint64_t v14 = v13 | *(unsigned int *)(v6 + 24) | ((unint64_t)*(unsigned __int8 *)(v6 + 29) << 40);
    if (!*(unsigned char *)(v6 + 30)) {
      uint64_t v10 = 0;
    }
    unint64_t v15 = v14 | v10 | ((unint64_t)*(unsigned __int8 *)(v6 + 31) << 56);
    *(void *)a1 = *(void *)v6;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v12;
    *(void *)(a1 + 24) = v15;
    *(unsigned char *)(a1 + 32) = v8;
  }
  else
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)&double result = 0x300000000;
    *(_OWORD *)(a1 + 16) = xmmword_251F4A2A0;
    *(unsigned char *)(a1 + 32) = 0;
  }
  return result;
}

_OWORD *StaticEndpoint.primaryCluster.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for StaticEndpoint();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_251AC549C(v2);
  double result = (_OWORD *)sub_251A53EB8(v3);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(v3 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == (_OWORD *)(1 << *(unsigned char *)(v3 + 32)))
  {
    double result = (_OWORD *)swift_release();
LABEL_7:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  sub_251A54058((uint64_t)result, v5, 0, v3, v16);
  double result = (_OWORD *)swift_release();
  if (LOBYTE(v16[0]) != 23) {
    goto LABEL_7;
  }
  StaticEndpoint.rvcClusterGroup.getter((uint64_t)v14);
  sub_251A4ECF0((uint64_t)v14, (uint64_t)&v15, &qword_269B9ECC0);
  sub_251A4ECF0((uint64_t)&v15, (uint64_t)v16, &qword_269B9ECC0);
  double result = (_OWORD *)sub_251B72348((uint64_t)v16);
  if (result == 1) {
    goto LABEL_7;
  }
  *(void *)(a1 + 24) = &type metadata for StaticRVCClusterGroup;
  *(void *)(a1 + 32) = &protocol witness table for StaticRVCClusterGroup;
  double result = (_OWORD *)swift_allocObject();
  *(void *)a1 = result;
  long long v7 = v17[0];
  result[13] = v16[12];
  result[14] = v7;
  *(_OWORD *)((char *)result + 236) = *(_OWORD *)((char *)v17 + 12);
  long long v8 = v16[9];
  result[9] = v16[8];
  result[10] = v8;
  long long v9 = v16[11];
  result[11] = v16[10];
  result[12] = v9;
  long long v10 = v16[5];
  result[5] = v16[4];
  result[6] = v10;
  long long v11 = v16[7];
  result[7] = v16[6];
  result[8] = v11;
  long long v12 = v16[1];
  result[1] = v16[0];
  result[2] = v12;
  long long v13 = v16[3];
  result[3] = v16[2];
  result[4] = v13;
  return result;
}

uint64_t StaticEndpoint.onOff.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(void *)(v1 + 16)
    && (unint64_t v2 = sub_2519FE614(10), (v3 & 1) != 0)
    && (sub_251A1A930(*(void *)(v1 + 56) + (v2 << 8), (uint64_t)v5),
        sub_251A1A930((uint64_t)v5, (uint64_t)v6),
        sub_251A4DB2C((uint64_t)v6) == 1))
  {
    return *(unsigned __int8 *)(sub_251A4E128((uint64_t)v6) + 11);
  }
  else
  {
    return 2;
  }
}

uint64_t StaticEndpoint.basicInfoCluster.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(void *)(v3 + 16)
    && (unint64_t v4 = sub_2519FE614(1), (v5 & 1) != 0)
    && (sub_251A1A930(*(void *)(v3 + 56) + (v4 << 8), (uint64_t)v24),
        sub_251A1A930((uint64_t)v24, (uint64_t)v25),
        !sub_251A4DB2C((uint64_t)v25)))
  {
    long long v7 = (long long *)sub_251A4E128((uint64_t)v25);
    long long v8 = v7[3];
    long long v10 = *v7;
    long long v9 = v7[1];
    v21[2] = v7[2];
    v21[3] = v8;
    v21[0] = v10;
    v21[1] = v9;
    long long v11 = v7[7];
    long long v13 = v7[4];
    long long v12 = v7[5];
    v21[6] = v7[6];
    v21[7] = v11;
    v21[4] = v13;
    v21[5] = v12;
    long long v14 = v7[11];
    long long v16 = v7[8];
    long long v15 = v7[9];
    v21[10] = v7[10];
    v21[11] = v14;
    v21[8] = v16;
    v21[9] = v15;
    long long v18 = v7[13];
    long long v17 = v7[14];
    long long v19 = v7[12];
    *(_OWORD *)&v22[12] = *(long long *)((char *)v7 + 236);
    _OWORD v21[13] = v18;
    *(_OWORD *)int64_t v22 = v17;
    v21[12] = v19;
    nullsub_1(v21);
    sub_251A4ECF0((uint64_t)v21, a1, &qword_269B9FE18);
    sub_251A1A930((uint64_t)v24, (uint64_t)v23);
    uint64_t v20 = sub_251A4E128((uint64_t)v23);
    return sub_251BE6894(v20);
  }
  else
  {
    sub_251C6E7B0(v25);
    return sub_251A4ECF0((uint64_t)v25, a1, &qword_269B9FE18);
  }
}

unint64_t StaticEndpoint.doorLockCluster.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = type metadata accessor for StaticEndpoint();
  uint64_t v4 = *(void *)(v1 + *(int *)(result + 36));
  if (*(void *)(v4 + 16)
    && (unint64_t result = sub_2519FE614(21), (v5 & 1) != 0)
    && (sub_251A1A930(*(void *)(v4 + 56) + (result << 8), (uint64_t)v10),
        sub_251A1A930((uint64_t)v10, (uint64_t)v11),
        unint64_t result = sub_251A4DB2C((uint64_t)v11),
        result == 3))
  {
    unint64_t result = sub_251A4E128((uint64_t)v11);
    unint64_t v6 = *(unsigned __int16 *)(result + 8) | ((unint64_t)*(unsigned __int8 *)(result + 10) << 16) | ((unint64_t)*(unsigned int *)(result + 12) << 32);
    int v7 = 0x1000000;
    if (!*(unsigned char *)(result + 19)) {
      int v7 = 0;
    }
    int v8 = *(unsigned __int8 *)(result + 16) | (*(unsigned __int8 *)(result + 17) << 8) | (*(unsigned __int8 *)(result + 18) << 16) | v7;
    char v9 = *(unsigned char *)(result + 20);
    *(void *)a1 = *(void *)result;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 20) = v9;
    *(_DWORD *)(a1 + 16) = v8;
  }
  else
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 768;
  }
  return result;
}

double StaticEndpoint.levelCluster.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(void *)(v3 + 16)
    && (unint64_t v4 = sub_2519FE614(11), (v5 & 1) != 0)
    && (sub_251A1A930(*(void *)(v3 + 56) + (v4 << 8), (uint64_t)v21),
        sub_251A1A930((uint64_t)v21, (uint64_t)v22),
        sub_251A4DB2C((uint64_t)v22) == 4))
  {
    uint64_t v6 = sub_251A4E128((uint64_t)v22);
    char v8 = *(unsigned char *)(v6 + 32);
    uint64_t v9 = 0x10000000000;
    if (!*(unsigned char *)(v6 + 13)) {
      uint64_t v9 = 0;
    }
    unint64_t v10 = *(unsigned int *)(v6 + 8) | ((unint64_t)*(unsigned __int8 *)(v6 + 12) << 32) | v9 | ((unint64_t)*(unsigned __int8 *)(v6 + 14) << 48);
    uint64_t v11 = 0x100000000000000;
    if (!*(unsigned char *)(v6 + 15)) {
      uint64_t v11 = 0;
    }
    unint64_t v12 = v10 | v11;
    uint64_t v13 = 0x10000;
    if (!*(unsigned char *)(v6 + 18)) {
      uint64_t v13 = 0;
    }
    unint64_t v14 = v13 | *(unsigned __int16 *)(v6 + 16) | ((unint64_t)*(unsigned __int8 *)(v6 + 19) << 24);
    uint64_t v15 = 0x100000000;
    if (*(unsigned char *)(v6 + 20)) {
      uint64_t v16 = 0x100000000;
    }
    else {
      uint64_t v16 = 0;
    }
    unint64_t v17 = v14 | v16 | ((unint64_t)*(unsigned __int16 *)(v6 + 22) << 48);
    if (!*(unsigned char *)(v6 + 28)) {
      uint64_t v15 = 0;
    }
    unint64_t v18 = *(unsigned __int8 *)(v6 + 24) | ((unint64_t)*(unsigned __int16 *)(v6 + 26) << 16) | v15 | ((unint64_t)*(unsigned __int8 *)(v6 + 29) << 40);
    uint64_t v19 = 0x1000000000000;
    if (!*(unsigned char *)(v6 + 30)) {
      uint64_t v19 = 0;
    }
    unint64_t v20 = v18 | v19 | ((unint64_t)*(unsigned __int8 *)(v6 + 31) << 56);
    *(void *)a1 = *(void *)v6;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v17;
    *(void *)(a1 + 24) = v20;
    *(unsigned char *)(a1 + 32) = v8;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = xmmword_251F3B8F0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 32) = 0;
  }
  return result;
}

double StaticEndpoint.colorControlCluster.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(void *)(v3 + 16)
    && (unint64_t v4 = sub_2519FE614(16), (v5 & 1) != 0)
    && (sub_251A1A930(*(void *)(v3 + 56) + (v4 << 8), (uint64_t)v15),
        sub_251A1A930((uint64_t)v15, (uint64_t)v16),
        sub_251A4DB2C((uint64_t)v16) == 5))
  {
    uint64_t v6 = sub_251A4E128((uint64_t)v16);
    uint64_t v8 = 0x100000000;
    if (*(unsigned char *)(v6 + 12)) {
      uint64_t v9 = 0x100000000;
    }
    else {
      uint64_t v9 = 0;
    }
    uint64_t v10 = 0x1000000000000;
    if (!*(unsigned char *)(v6 + 14)) {
      uint64_t v10 = 0;
    }
    unint64_t v11 = *(unsigned int *)(v6 + 8) | (unint64_t)v9 | ((unint64_t)*(unsigned __int8 *)(v6 + 13) << 40) | v10 | ((unint64_t)*(unsigned __int8 *)(v6 + 15) << 56);
    int v12 = 0x10000;
    if (!*(unsigned char *)(v6 + 18)) {
      int v12 = 0;
    }
    int v13 = *(unsigned __int8 *)(v6 + 16) | (*(unsigned __int8 *)(v6 + 17) << 8) | v12 | (*(unsigned __int8 *)(v6 + 19) << 24);
    if (!*(unsigned char *)(v6 + 20)) {
      uint64_t v8 = 0;
    }
    unint64_t v14 = v8 | ((unint64_t)*(unsigned __int8 *)(v6 + 21) << 40);
    *(void *)a1 = *(void *)v6;
    *(void *)(a1 + 8) = v11;
    *(_WORD *)(a1 + 20) = WORD2(v14);
    *(_DWORD *)(a1 + 16) = v13;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = xmmword_251F3B8F0;
    *(_WORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
  return result;
}

double sub_251C6E6E0(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 220) = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_251C6E708()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[10])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[26] != 1) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 252, 7);
}

double sub_251C6E7B0(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 236) = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t dispatch thunk of PrimaryCluster.longStateStatusString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PrimaryCluster.shortStateStatusString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PrimaryCluster.errorStateString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_251C6E818()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[6];
  sub_251C7ADC4(0x8000000251F6F3F0);
  uint64_t v3 = *v1;
  uint64_t v4 = v2 + 16;
  sub_251A1A4EC(v2 + 16, (uint64_t)v55);
  if (v3)
  {
    uint64_t v5 = v56;
    uint64_t v6 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    int v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 72);
    uint64_t v8 = swift_unknownObjectRetain();
    v7(v8, v5, v6);
    sub_251A1A4EC((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v47, (uint64_t)v52);
      uint64_t v9 = v53;
      uint64_t v10 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t ObjectType = swift_getObjectType();
      v50[0] = v3;
      (*(void (**)(void *, uint64_t, uint64_t))(v10 + 56))(v50, v9, v10);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      swift_unknownObjectRelease();
      sub_251A1B064((uint64_t)&v47, &qword_269BA1028);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  uint64_t v11 = v1[1];
  sub_251A1A4EC(v4, (uint64_t)v55);
  if (v11)
  {
    uint64_t v12 = v56;
    uint64_t v13 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 72);
    uint64_t v15 = swift_unknownObjectRetain();
    v14(v15, v12, v13);
    sub_251A1A4EC((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v47, (uint64_t)v52);
      uint64_t v16 = v53;
      uint64_t v17 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t ObjectType = swift_getObjectType();
      v50[0] = v11;
      (*(void (**)(void *, uint64_t, uint64_t))(v17 + 56))(v50, v16, v17);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      swift_unknownObjectRelease();
      sub_251A1B064((uint64_t)&v47, &qword_269BA1028);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  uint64_t v18 = v1[2];
  sub_251A1A4EC(v4, (uint64_t)v55);
  if (v18)
  {
    uint64_t v19 = v56;
    uint64_t v20 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 72);
    uint64_t v22 = swift_unknownObjectRetain();
    v21(v22, v19, v20);
    sub_251A1A4EC((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v47, (uint64_t)v52);
      uint64_t v23 = v53;
      uint64_t v24 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t ObjectType = swift_getObjectType();
      v50[0] = v18;
      (*(void (**)(void *, uint64_t, uint64_t))(v24 + 56))(v50, v23, v24);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      swift_unknownObjectRelease();
      sub_251A1B064((uint64_t)&v47, &qword_269BA1028);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  uint64_t v25 = v1[3];
  sub_251A1A4EC(v4, (uint64_t)v55);
  if (v25)
  {
    uint64_t v26 = v56;
    uint64_t v27 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    long long v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 72);
    uint64_t v29 = swift_unknownObjectRetain();
    v28(v29, v26, v27);
    sub_251A1A4EC((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v47, (uint64_t)v52);
      uint64_t v30 = v53;
      uint64_t v31 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t ObjectType = swift_getObjectType();
      v50[0] = v25;
      (*(void (**)(void *, uint64_t, uint64_t))(v31 + 56))(v50, v30, v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      swift_unknownObjectRelease();
      sub_251A1B064((uint64_t)&v47, &qword_269BA1028);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  uint64_t v32 = v1[4];
  sub_251A1A4EC(v4, (uint64_t)v55);
  if (v32)
  {
    uint64_t v33 = v56;
    uint64_t v34 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 72);
    uint64_t v36 = swift_unknownObjectRetain();
    v35(v36, v33, v34);
    sub_251A1A4EC((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v47, (uint64_t)v52);
      uint64_t v37 = v53;
      uint64_t v38 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t ObjectType = swift_getObjectType();
      v50[0] = v32;
      (*(void (**)(void *, uint64_t, uint64_t))(v38 + 56))(v50, v37, v38);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      swift_unknownObjectRelease();
      sub_251A1B064((uint64_t)&v47, &qword_269BA1028);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  uint64_t v39 = v1[5];
  sub_251A1A4EC(v4, (uint64_t)v55);
  if (v39)
  {
    uint64_t v40 = v56;
    uint64_t v41 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    long long v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 72);
    uint64_t v43 = swift_unknownObjectRetain();
    v42(v43, v40, v41);
    sub_251A1A4EC((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v47, (uint64_t)v52);
      uint64_t v44 = v53;
      uint64_t v45 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t ObjectType = swift_getObjectType();
      v50[0] = v39;
      (*(void (**)(void *, uint64_t, uint64_t))(v45 + 56))(v50, v44, v45);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      swift_unknownObjectRelease();
      sub_251A1B064((uint64_t)&v47, &qword_269BA1028);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
}

uint64_t sub_251C6EF34(uint64_t a1, uint64_t a2)
{
  long long v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  sub_251F35C80();
  v3[6] = sub_251F35C70();
  uint64_t v5 = sub_251F35C00();
  v3[7] = v5;
  v3[8] = v4;
  return MEMORY[0x270FA2498](sub_251C6EFD0, v5, v4);
}

uint64_t sub_251C6EFD0()
{
  uint64_t v37 = v0;
  unint64_t v1 = v0[3];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_251F366C0();
    v0[9] = result;
    if (result)
    {
LABEL_3:
      uint64_t v4 = v0[3];
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x2533AB3A0](0);
      }
      else
      {
        if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_37;
        }
        id v5 = *(id *)(v4 + 32);
      }
      uint64_t v6 = v5;
      v0[10] = v5;
      v0[11] = 1;
      id v7 = objc_msgSend(v5, sel_components);
      sub_251A1A568(0, (unint64_t *)&qword_269B9D518);
      unint64_t v8 = sub_251F35AC0();

      v0[2] = MEMORY[0x263F8EE78];
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = sub_251F366C0();
        uint64_t v9 = result;
        if (result) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v9)
        {
LABEL_9:
          if (v9 >= 1)
          {
            uint64_t v34 = v6;
            uint64_t v35 = v0;
            uint64_t v10 = 0;
            uint64_t v11 = v0 + 2;
            do
            {
              if ((v8 & 0xC000000000000001) != 0) {
                id v12 = (id)MEMORY[0x2533AB3A0](v10, v8);
              }
              else {
                id v12 = *(id *)(v8 + 8 * v10 + 32);
              }
              uint64_t v13 = v12;
              id v14 = objc_msgSend(v12, sel_mediaProfile, v34, v35);
              if (v14)
              {
                uint64_t v15 = v14;
                id v16 = objc_msgSend(v14, sel_accessory);

                if (v16)
                {
                  MEMORY[0x2533AA9D0]();
                  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_251F35B10();
                  sub_251F35B70();
                  sub_251F35AE0();
                }
              }
              else
              {
              }
              ++v10;
            }
            while (v9 != v10);
            swift_bridgeObjectRelease();
            uint64_t v17 = *v11;
            uint64_t v6 = v34;
            uint64_t v0 = v35;
            goto LABEL_28;
          }
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
LABEL_28:
      v0[12] = v17;
      swift_bridgeObjectRelease();
      if (qword_269B9C2C0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_251F350A0();
      __swift_project_value_buffer(v19, (uint64_t)qword_269B9DEE0);
      id v20 = v6;
      uint64_t v21 = sub_251F35080();
      os_log_type_t v22 = sub_251F35FD0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v36 = v24;
        *(_DWORD *)uint64_t v23 = 136315138;
        id v25 = objc_msgSend(v20, sel_description);
        uint64_t v26 = sub_251F356F0();
        unint64_t v28 = v27;

        *(void *)(v23 + 4) = sub_251A00E84(v26, v28, &v36);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_2519F3000, v21, v22, "registering for %s", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v24, -1, -1);
        MEMORY[0x2533AC760](v23, -1, -1);
      }
      else
      {
      }
      id v29 = objc_msgSend(v20, sel_uniqueIdentifier);
      uint64_t v30 = sub_251F34DA0();
      v0[13] = v30;
      v0[14] = *(void *)(v30 - 8);
      uint64_t v31 = swift_task_alloc();
      v0[15] = v31;
      sub_251F34D80();

      uint64_t v32 = (void *)swift_task_alloc();
      v0[16] = v32;
      *uint64_t v32 = v0;
      v32[1] = sub_251C6F4E0;
      uint64_t v33 = v0[4];
      return sub_251C72A30(v31, v17, v33);
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    v0[9] = v2;
    if (v2) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_251C6F4E0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 120);
  uint64_t v3 = *(void *)(*v0 + 112);
  uint64_t v4 = *(void *)(*v0 + 104);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return MEMORY[0x270FA2498](sub_251C6F688, v6, v5);
}

void sub_251C6F688()
{
  uint64_t v36 = v0;
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);

  if (v2 == v3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v4 = *(void (**)(void))(v0 + 8);
    v4();
    return;
  }
  uint64_t v5 = *(uint64_t **)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 24);
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v7 = (id)MEMORY[0x2533AB3A0](*(void *)(v0 + 88));
  }
  else
  {
    if ((unint64_t)v5 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_37;
    }
    id v7 = *(id *)(v6 + 8 * (void)v5 + 32);
  }
  uint64_t v8 = v7;
  *(void *)(v0 + 80) = v7;
  *(void *)(v0 + 88) = (char *)v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    if (v10) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
  uint64_t v5 = (uint64_t *)(v0 + 16);
  id v9 = objc_msgSend(v7, sel_components);
  sub_251A1A568(0, (unint64_t *)&qword_269B9D518);
  unint64_t v1 = sub_251F35AC0();

  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  if (v1 >> 62) {
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v10)
  {
LABEL_12:
    if (v10 >= 1)
    {
      uint64_t v33 = v8;
      uint64_t v34 = v0;
      for (uint64_t i = 0; i != v10; ++i)
      {
        if ((v1 & 0xC000000000000001) != 0) {
          id v12 = (id)MEMORY[0x2533AB3A0](i, v1);
        }
        else {
          id v12 = *(id *)(v1 + 8 * i + 32);
        }
        uint64_t v13 = v12;
        id v14 = objc_msgSend(v12, sel_mediaProfile, v33, v34);
        if (v14)
        {
          uint64_t v15 = v14;
          id v16 = objc_msgSend(v14, sel_accessory);

          if (v16)
          {
            MEMORY[0x2533AA9D0]();
            if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_251F35B10();
            }
            sub_251F35B70();
            sub_251F35AE0();
          }
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = *v5;
      uint64_t v8 = v33;
      uint64_t v0 = v34;
      goto LABEL_28;
    }
    __break(1u);
LABEL_37:
    __break(1u);
    return;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x263F8EE78];
LABEL_28:
  *(void *)(v0 + 96) = v17;
  swift_bridgeObjectRelease();
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_251F350A0();
  __swift_project_value_buffer(v18, (uint64_t)qword_269B9DEE0);
  id v19 = v8;
  id v20 = sub_251F35080();
  os_log_type_t v21 = sub_251F35FD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v35 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    id v24 = objc_msgSend(v19, sel_description);
    uint64_t v25 = sub_251F356F0();
    unint64_t v27 = v26;

    *(void *)(v22 + 4) = sub_251A00E84(v25, v27, &v35);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v20, v21, "registering for %s", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    MEMORY[0x2533AC760](v22, -1, -1);
  }
  else
  {
  }
  id v28 = objc_msgSend(v19, sel_uniqueIdentifier);
  uint64_t v29 = sub_251F34DA0();
  *(void *)(v0 + 104) = v29;
  *(void *)(v0 + 112) = *(void *)(v29 - 8);
  uint64_t v30 = swift_task_alloc();
  *(void *)(v0 + 120) = v30;
  sub_251F34D80();

  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_251C6F4E0;
  uint64_t v32 = *(void *)(v0 + 32);
  sub_251C72A30(v30, v17, v32);
}

uint64_t sub_251C6FB80(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  long long v3[4] = v2;
  v3[2] = a1;
  sub_251F35C80();
  v3[5] = sub_251F35C70();
  uint64_t v5 = sub_251F35C00();
  v3[6] = v5;
  v3[7] = v4;
  return MEMORY[0x270FA2498](sub_251C6FC1C, v5, v4);
}

uint64_t sub_251C6FC1C()
{
  uint64_t v36 = v0;
  unint64_t v1 = v0[2];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[8] = v2;
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_251F366C0();
  v0[8] = v2;
  if (!v2) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = 0;
    v0[9] = *MEMORY[0x263F0B0A0];
    while (1)
    {
      v0[10] = v3;
      uint64_t v4 = v0[2];
      if ((v4 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x2533AB3A0]();
      }
      else {
        id v5 = *(id *)(v4 + 8 * v3 + 32);
      }
      uint64_t v2 = (uint64_t)v5;
      v0[11] = v5;
      id v6 = objc_msgSend(v5, sel_category);
      id v7 = objc_msgSend(v6, sel_categoryType);

      uint64_t v8 = sub_251F356F0();
      uint64_t v10 = v9;

      if (v8 == sub_251F356F0() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_20;
      }
      char v13 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_20;
      }
      id v14 = objc_msgSend((id)v2, sel_siriEndpointProfile);
      if (v14) {
        break;
      }

      uint64_t v3 = v0[10] + 1;
      if (v3 == v0[8]) {
        goto LABEL_15;
      }
    }

LABEL_20:
    if (qword_269B9C2C0 == -1) {
      goto LABEL_21;
    }
  }
  swift_once();
LABEL_21:
  uint64_t v17 = sub_251F350A0();
  __swift_project_value_buffer(v17, (uint64_t)qword_269B9DEE0);
  id v18 = (id)v2;
  id v19 = sub_251F35080();
  os_log_type_t v20 = sub_251F35FD0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v35 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    id v23 = objc_msgSend(v18, sel_description);
    uint64_t v24 = sub_251F356F0();
    unint64_t v26 = v25;

    *(void *)(v21 + 4) = sub_251A00E84(v24, v26, &v35);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v19, v20, "registering for %s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v22, -1, -1);
    MEMORY[0x2533AC760](v21, -1, -1);
  }
  else
  {
  }
  id v27 = objc_msgSend(v18, sel_uniqueIdentifier);
  uint64_t v28 = sub_251F34DA0();
  v0[12] = v28;
  v0[13] = *(void *)(v28 - 8);
  uint64_t v29 = swift_task_alloc();
  v0[14] = v29;
  sub_251F34D80();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_251F38640;
  *(void *)(v30 + 32) = v18;
  uint64_t v35 = v30;
  sub_251F35AE0();
  uint64_t v31 = v35;
  v0[15] = v35;
  id v32 = v18;
  uint64_t v33 = (void *)swift_task_alloc();
  v0[16] = v33;
  void *v33 = v0;
  v33[1] = sub_251C700CC;
  uint64_t v34 = v0[3];
  return sub_251C72A30(v29, v31, v34);
}

uint64_t sub_251C700CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v4 = *(void *)(*v0 + 96);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 48);
  return MEMORY[0x270FA2498](sub_251C70274, v6, v5);
}

uint64_t sub_251C70274()
{
  uint64_t v35 = v0;

  uint64_t v1 = *(void *)(v0 + 80) + 1;
  if (v1 == *(void *)(v0 + 64))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 80) = v1;
      uint64_t v4 = *(void *)(v0 + 16);
      if ((v4 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x2533AB3A0]();
      }
      else {
        id v5 = *(id *)(v4 + 8 * v1 + 32);
      }
      uint64_t v6 = v5;
      *(void *)(v0 + 88) = v5;
      id v7 = objc_msgSend(v5, sel_category);
      id v8 = objc_msgSend(v7, sel_categoryType);

      uint64_t v9 = sub_251F356F0();
      uint64_t v11 = v10;

      if (v9 == sub_251F356F0() && v11 == v12)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v14 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_18;
      }
      id v15 = objc_msgSend(v6, sel_siriEndpointProfile);
      if (v15) {
        break;
      }

      uint64_t v1 = *(void *)(v0 + 80) + 1;
      if (v1 == *(void *)(v0 + 64)) {
        goto LABEL_2;
      }
    }

LABEL_18:
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_251F350A0();
    __swift_project_value_buffer(v16, (uint64_t)qword_269B9DEE0);
    id v17 = v6;
    id v18 = sub_251F35080();
    os_log_type_t v19 = sub_251F35FD0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v34 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      id v22 = objc_msgSend(v17, sel_description);
      uint64_t v23 = sub_251F356F0();
      unint64_t v25 = v24;

      *(void *)(v20 + 4) = sub_251A00E84(v23, v25, &v34);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2519F3000, v18, v19, "registering for %s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v21, -1, -1);
      MEMORY[0x2533AC760](v20, -1, -1);
    }
    else
    {
    }
    id v26 = objc_msgSend(v17, sel_uniqueIdentifier);
    uint64_t v27 = sub_251F34DA0();
    *(void *)(v0 + 96) = v27;
    *(void *)(v0 + 104) = *(void *)(v27 - 8);
    uint64_t v28 = swift_task_alloc();
    *(void *)(v0 + 112) = v28;
    sub_251F34D80();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_251F38640;
    *(void *)(v29 + 32) = v17;
    uint64_t v34 = v29;
    sub_251F35AE0();
    uint64_t v30 = v34;
    *(void *)(v0 + 120) = v34;
    id v31 = v17;
    id v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v32;
    *id v32 = v0;
    v32[1] = sub_251C700CC;
    uint64_t v33 = *(void *)(v0 + 24);
    return sub_251C72A30(v28, v30, v33);
  }
}

uint64_t sub_251C706DC(uint64_t a1)
{
  uint64_t v3 = (id *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!*v3) {
    return v4;
  }
  id v5 = *v3;
  id v6 = objc_msgSend(v5, sel_accessories);
  uint64_t v7 = sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v8 = sub_251F35AC0();

  MEMORY[0x270FA5388](v9);
  uint64_t v42 = a1;
  uint64_t v10 = 0;
  uint64_t v11 = sub_251A95638(sub_251C76820, (uint64_t)v41, v8);
  swift_bridgeObjectRelease();
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_251F38640;
    *(void *)(v12 + 32) = v11;
    uint64_t v46 = v12;
    sub_251F35AE0();
    uint64_t v4 = v46;
LABEL_4:

    return v4;
  }
  id v14 = objc_msgSend(v5, sel_mediaSystems);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
  unint64_t v15 = sub_251F35AC0();

  uint64_t v16 = (__objc2_class **)&v43;
  MEMORY[0x270FA5388](v17);
  uint64_t v42 = a1;
  id v18 = sub_251A95638(sub_251C7DDB0, (uint64_t)v41, v15);
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_4;
  }
  uint64_t v19 = (uint64_t)objc_msgSend(v18, sel_components);
  sub_251A1A568(0, (unint64_t *)&qword_269B9D518);
  uint64_t v20 = sub_251F35AC0();

  uint64_t v46 = v4;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0) {
      uint64_t v19 = v20;
    }
    else {
      uint64_t v19 = v20 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_251F366C0();
    if (v21) {
      goto LABEL_9;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x263F8EE78];
    goto LABEL_27;
  }
  unint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v21) {
    goto LABEL_26;
  }
LABEL_9:
  uint64_t v43 = 0;
  uint64_t v44 = v18;
  id v45 = v5;
  if ((uint64_t)v21 < 1)
  {
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v22 = 0;
  uint64_t v16 = &off_26536F000;
  do
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v23 = (id)MEMORY[0x2533AB3A0](v22, v20);
    }
    else {
      id v23 = *(id *)(v20 + 8 * v22 + 32);
    }
    unint64_t v24 = v23;
    id v25 = objc_msgSend(v23, sel_mediaProfile, v43, v44, v45);
    if (v25)
    {
      id v26 = v25;
      id v27 = objc_msgSend(v25, sel_accessory);

      if (v27)
      {
        MEMORY[0x2533AA9D0]();
        if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_251F35B10();
        }
        sub_251F35B70();
        sub_251F35AE0();
      }
    }
    else
    {
    }
    ++v22;
  }
  while (v21 != v22);
  swift_bridgeObjectRelease();
  id v5 = v45;
  uint64_t v28 = v46;
  uint64_t v10 = v43;
  id v18 = v44;
LABEL_27:
  swift_bridgeObjectRelease();
  if (v28 < 0 || (v28 & 0x4000000000000000) != 0) {
    goto LABEL_62;
  }
  uint64_t v29 = v28 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v46 = v29;
    sub_251C7B0DC(&v46);
    if (v10) {
      goto LABEL_67;
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = v46;
    LODWORD(v16) = v46 < 0 || (v46 & 0x4000000000000000) != 0;
    if (v16 != 1) {
      break;
    }
    uint64_t v20 = (uint64_t)v18;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_251F366C0();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_251F366C0();
    swift_release();
    if (v29 < 0)
    {
      __break(1u);
LABEL_67:
      swift_release();
      __break(1u);
LABEL_68:
      uint64_t v19 = (uint64_t)v18;
      id v18 = (void *)v20;
      if ((v19 & 0xC000000000000001) == 0) {
        goto LABEL_42;
      }
      goto LABEL_39;
    }
    if (v38 >= 1) {
      uint64_t v39 = 1;
    }
    else {
      uint64_t v39 = v38;
    }
    if (v38 < 0) {
      uint64_t v29 = 1;
    }
    else {
      uint64_t v29 = v39;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    id v18 = (void *)v19;
    swift_release();
    if (v10 >= v29) {
      goto LABEL_68;
    }
    __break(1u);
LABEL_62:
    unint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v29 = (uint64_t)sub_251A91A70(v40);
    swift_bridgeObjectRelease();
  }
  if (*(uint64_t *)(v46 + 16) >= 1) {
    uint64_t v29 = 1;
  }
  else {
    uint64_t v29 = *(void *)(v46 + 16);
  }
  if ((v46 & 0xC000000000000001) == 0) {
    goto LABEL_42;
  }
LABEL_39:
  if (v29)
  {
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = v30 + 1;
      sub_251F36440();
      uint64_t v30 = v31;
    }
    while (v29 != v31);
  }
LABEL_42:
  if (!v16)
  {
    uint64_t v10 = 0;
    uint64_t v7 = v19 + 32;
    unint64_t v21 = (2 * v29) | 1;
    if (v21) {
      goto LABEL_47;
    }
LABEL_46:
    uint64_t v4 = sub_251A918DC(v19, v7, v10, v21);

    swift_unknownObjectRelease();
    return v4;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_251F366D0();
  uint64_t v7 = v33;
  uint64_t v10 = v34;
  unint64_t v21 = v35;
  swift_release_n();
  uint64_t v19 = v32;
  if ((v21 & 1) == 0) {
    goto LABEL_46;
  }
LABEL_47:
  sub_251F36B40();
  swift_unknownObjectRetain_n();
  uint64_t v36 = swift_dynamicCastClass();
  if (!v36)
  {
    swift_unknownObjectRelease();
    uint64_t v36 = MEMORY[0x263F8EE78];
  }
  uint64_t v37 = *(void *)(v36 + 16);
  swift_release();
  if (__OFSUB__(v21 >> 1, v10)) {
    goto LABEL_64;
  }
  if (v37 != (v21 >> 1) - v10)
  {
LABEL_65:
    swift_unknownObjectRelease();
    goto LABEL_46;
  }
  uint64_t v4 = swift_dynamicCastClass();

  swift_unknownObjectRelease();
  if (!v4)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v4;
}

uint64_t CoordinationDataModel.register(for:isRemoval:withManagers:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 48) = a3;
  *(void *)(v4 + 56) = v3;
  *(unsigned char *)(v4 + 112) = a2;
  *(void *)(v4 + 40) = a1;
  return MEMORY[0x270FA2498](sub_251C70CE4, 0, 0);
}

uint64_t sub_251C70CE4()
{
  sub_251F35C80();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C70D78, v2, v1);
}

uint64_t sub_251C70D78()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  uint64_t v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  uint64_t v3 = *v2;
  *(void *)(v0 + 72) = *v2;
  id v4 = v3;
  return MEMORY[0x270FA2498](sub_251C70E18, 0, 0);
}

uint64_t sub_251C70E18()
{
  uint64_t v1 = *(void **)(v0 + 72);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 40);
    id v3 = objc_msgSend(v1, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v4 = sub_251F35AC0();

    uint64_t v5 = swift_task_alloc();
    *(void *)(v5 + 16) = v2;
    uint64_t v6 = sub_251A95638(sub_251C7DDB0, v5, v4);
    *(void *)(v0 + 80) = v6;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (v6)
    {
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 88) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_251C710B0;
      uint64_t v8 = *(void *)(v0 + 48);
      char v9 = *(unsigned char *)(v0 + 112);
      return sub_251C714CC((uint64_t)v6, v9, v8);
    }
    uint64_t v11 = *(void *)(v0 + 40);
    id v12 = objc_msgSend(*(id *)(v0 + 72), sel_mediaSystems);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
    unint64_t v13 = sub_251F35AC0();

    uint64_t v14 = swift_task_alloc();
    *(void *)(v14 + 16) = v11;
    unint64_t v15 = sub_251A95638(sub_251C7DDB0, v14, v13);
    *(void *)(v0 + 96) = v15;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (v15)
    {
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v16;
      *uint64_t v16 = v0;
      v16[1] = sub_251C71210;
      uint64_t v17 = *(void *)(v0 + 48);
      char v18 = *(unsigned char *)(v0 + 112);
      return sub_251C71D18((uint64_t)v15, v18, v17);
    }
  }
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_251C710B0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C711AC, 0, 0);
}

uint64_t sub_251C711AC()
{
  uint64_t v1 = *(void **)(v0 + 72);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251C71210()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C7130C, 0, 0);
}

uint64_t sub_251C7130C()
{
  uint64_t v1 = *(void **)(v0 + 72);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t CoordinationDataModel.update(for:isRemoval:withManagers:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_251AB3DD4;
  return sub_251C714CC(a1, a2, a3);
}

{
  uint64_t v3;
  void *v7;
  uint64_t v9;

  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_251AB3DD4;
  return sub_251C71D18(a1, a2, a3);
}

uint64_t sub_251C714CC(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 104) = a3;
  *(void *)(v4 + 112) = v3;
  *(unsigned char *)(v4 + 256) = a2;
  *(void *)(v4 + 96) = a1;
  *(void *)(v4 + 120) = type metadata accessor for CoordinationSnapshot.UpdateType();
  *(void *)(v4 + 128) = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = *(void *)(v5 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  *(void *)(v4 + 160) = v6;
  *(void *)(v4 + 168) = *(void *)(v6 - 8);
  *(void *)(v4 + 176) = swift_task_alloc();
  sub_251F35C80();
  *(void *)(v4 + 184) = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  *(void *)(v4 + 192) = v8;
  *(void *)(v4 + 200) = v7;
  return MEMORY[0x270FA2498](sub_251C7165C, v8, v7);
}

uint64_t sub_251C7165C()
{
  int v1 = *(unsigned __int8 *)(v0 + 256);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
  uint64_t v2 = *(void **)(v0 + 96);
  if (v1 == 1)
  {
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 208) = inited;
    *(_OWORD *)(inited + 16) = xmmword_251F38640;
    *(void *)(inited + 32) = v2;
    uint64_t v11 = inited;
    sub_251F35AE0();
    *(void *)(v0 + 216) = v11;
    id v4 = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_251C71800;
    return sub_251C727DC(v11);
  }
  else
  {
    uint64_t v7 = swift_initStackObject();
    *(void *)(v0 + 232) = v7;
    *(_OWORD *)(v7 + 16) = xmmword_251F38640;
    *(void *)(v7 + 32) = v2;
    uint64_t v12 = v7;
    sub_251F35AE0();
    *(void *)(v0 + 240) = v12;
    id v8 = v2;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_251C71BD4;
    uint64_t v10 = *(void *)(v0 + 104);
    return sub_251C6FB80(v12, v10);
  }
}

uint64_t sub_251C71800()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 192);
  return MEMORY[0x270FA2498](sub_251C71944, v3, v2);
}

uint64_t sub_251C71944()
{
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v16 = v0[22];
  uint64_t v17 = v0[21];
  uint64_t v1 = v0[19];
  uint64_t v18 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v14 = v1;
  unint64_t v15 = (uint64_t *)v0[16];
  id v4 = (void *)v0[12];
  uint64_t v5 = __swift_project_value_buffer(v3, (uint64_t)qword_26B21E350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_251F38650;
  id v10 = objc_msgSend(v4, sel_uniqueIdentifier);
  uint64_t v11 = swift_task_alloc();
  sub_251F34D80();

  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v9 + v8, v11, v6);
  swift_task_dealloc();
  *unint64_t v15 = v9;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v14, v3);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_251C71BD4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 192);
  return MEMORY[0x270FA2498](sub_251C7DDD8, v3, v2);
}

uint64_t sub_251C71D18(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 104) = a3;
  *(void *)(v4 + 112) = v3;
  *(unsigned char *)(v4 + 256) = a2;
  *(void *)(v4 + 96) = a1;
  *(void *)(v4 + 120) = type metadata accessor for CoordinationSnapshot.UpdateType();
  *(void *)(v4 + 128) = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = *(void *)(v5 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  *(void *)(v4 + 160) = v6;
  *(void *)(v4 + 168) = *(void *)(v6 - 8);
  *(void *)(v4 + 176) = swift_task_alloc();
  sub_251F35C80();
  *(void *)(v4 + 184) = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  *(void *)(v4 + 192) = v8;
  *(void *)(v4 + 200) = v7;
  return MEMORY[0x270FA2498](sub_251C71EA8, v8, v7);
}

uint64_t sub_251C71EA8()
{
  int v1 = *(unsigned __int8 *)(v0 + 256);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
  uint64_t v2 = *(void **)(v0 + 96);
  if (v1 == 1)
  {
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 208) = inited;
    *(_OWORD *)(inited + 16) = xmmword_251F38640;
    *(void *)(inited + 32) = v2;
    uint64_t v11 = inited;
    sub_251F35AE0();
    *(void *)(v0 + 216) = v11;
    id v4 = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_251C7204C;
    return sub_251C72998(v11);
  }
  else
  {
    uint64_t v7 = swift_initStackObject();
    *(void *)(v0 + 232) = v7;
    *(_OWORD *)(v7 + 16) = xmmword_251F38640;
    *(void *)(v7 + 32) = v2;
    uint64_t v12 = v7;
    sub_251F35AE0();
    *(void *)(v0 + 240) = v12;
    id v8 = v2;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_251C72414;
    uint64_t v10 = *(void *)(v0 + 104);
    return sub_251C6EF34(v12, v10);
  }
}

uint64_t sub_251C7204C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 192);
  return MEMORY[0x270FA2498](sub_251C72190, v3, v2);
}

uint64_t sub_251C72190()
{
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v16 = v0[22];
  uint64_t v17 = v0[21];
  uint64_t v1 = v0[19];
  uint64_t v18 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v14 = v1;
  unint64_t v15 = (uint64_t *)v0[16];
  id v4 = (void *)v0[12];
  uint64_t v5 = __swift_project_value_buffer(v3, (uint64_t)qword_26B21E350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_251F38650;
  id v10 = objc_msgSend(v4, sel_uniqueIdentifier);
  uint64_t v11 = swift_task_alloc();
  sub_251F34D80();

  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v9 + v8, v11, v6);
  swift_task_dealloc();
  *unint64_t v15 = v9;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v14, v3);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_251C72414()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 192);
  return MEMORY[0x270FA2498](sub_251C72558, v3, v2);
}

uint64_t sub_251C72558()
{
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v16 = v0[22];
  uint64_t v17 = v0[21];
  uint64_t v1 = v0[19];
  uint64_t v18 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v14 = v1;
  unint64_t v15 = (uint64_t *)v0[16];
  id v4 = (void *)v0[12];
  uint64_t v5 = __swift_project_value_buffer(v3, (uint64_t)qword_26B21E350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_251F38650;
  id v10 = objc_msgSend(v4, sel_uniqueIdentifier);
  uint64_t v11 = swift_task_alloc();
  sub_251F34D80();

  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v9 + v8, v11, v6);
  swift_task_dealloc();
  *unint64_t v15 = v9;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v14, v3);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_251C727DC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_251F35C80();
  v2[4] = sub_251F35C70();
  uint64_t v4 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C72874, v4, v3);
}

uint64_t sub_251C72874()
{
  uint64_t v12 = v0;
  unint64_t v1 = v0[2];
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_251F366C0();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  unint64_t v5 = v1 & 0xC000000000000001;
  uint64_t v6 = v0[2] + 32;
  do
  {
    if (v5) {
      id v7 = (id)MEMORY[0x2533AB3A0](v4, v0[2]);
    }
    else {
      id v7 = *(id *)(v6 + 8 * v4);
    }
    unint64_t v8 = v7;
    uint64_t v9 = v0[3];
    ++v4;
    id v11 = v7;
    sub_251C73F20(&v11, v9);
  }
  while (v2 != v4);
LABEL_10:
  swift_bridgeObjectRelease();
  id v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251C72998(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_251F35C80();
  v2[4] = sub_251F35C70();
  uint64_t v4 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C7DDCC, v4, v3);
}

uint64_t sub_251C72A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[87] = v3;
  v4[86] = a3;
  v4[85] = a2;
  v4[84] = a1;
  sub_251F35C80();
  v4[88] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v4[89] = v6;
  v4[90] = v5;
  return MEMORY[0x270FA2498](sub_251C72AD8, v6, v5);
}

uint64_t sub_251C72AD8()
{
  uint64_t v122 = v0;
  unint64_t v1 = *(void *)(v0 + 680);
  if (v1)
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    if (v1 >> 62) {
      goto LABEL_55;
    }
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v114 = v2;
        sub_251C7B0DC(&v114);
        uint64_t v4 = v114;
        if (qword_269B9C2C0 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_251F350A0();
        __swift_project_value_buffer(v5, (uint64_t)qword_269B9DEE0);
        swift_retain_n();
        uint64_t v6 = sub_251F35080();
        os_log_type_t v7 = sub_251F35FA0();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          uint64_t v105 = swift_slowAlloc();
          uint64_t v114 = v105;
          *(_DWORD *)uint64_t v8 = 136315138;
          uint64_t v9 = sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
          uint64_t v10 = swift_retain();
          uint64_t v11 = MEMORY[0x2533AAA10](v10, v9);
          unint64_t v13 = v12;
          swift_release();
          *(void *)(v0 + 664) = sub_251A00E84(v11, v13, &v114);
          sub_251F361D0();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl(&dword_2519F3000, v6, v7, "sortedAccessories: %s", v8, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v105, -1, -1);
          MEMORY[0x2533AC760](v8, -1, -1);
        }
        else
        {
          swift_release_n();
        }

        if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
        {
          swift_retain();
          uint64_t result = sub_251F366C0();
          if (!result)
          {
LABEL_62:
            swift_release_n();
            break;
          }
        }
        else
        {
          uint64_t v14 = *(void *)(v4 + 16);
          uint64_t result = swift_retain();
          if (!v14) {
            goto LABEL_62;
          }
        }
        if ((v4 & 0xC000000000000001) != 0)
        {
          id v16 = (id)MEMORY[0x2533AB3A0](0, v4);
        }
        else
        {
          if (!*(void *)(v4 + 16))
          {
            __break(1u);
            return result;
          }
          id v16 = *(id *)(v4 + 32);
        }
        uint64_t v17 = v16;
        swift_release();
        *(void *)(v0 + 728) = v17;
        uint64_t v18 = *(void *)(v0 + 696) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
        swift_beginAccess();
        if (*(void *)(*(void *)v18 + 16))
        {
          uint64_t v19 = *(void *)(v0 + 672);
          swift_bridgeObjectRetain();
          sub_2519FE584(v19);
          if (v20)
          {
            swift_bridgeObjectRelease();

            swift_release();
            break;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v84 = (uint64_t *)v18;
        uint64_t v92 = (long long *)(v0 + 16);
        uint64_t v86 = v0 + 96;
        uint64_t v101 = v0 + 296;
        uint64_t v97 = (long long *)(v0 + 416);
        uint64_t v104 = (void *)(v0 + 456);
        unint64_t v106 = v17;
        uint64_t v99 = (long long *)(v0 + 496);
        uint64_t v88 = (_OWORD *)(v0 + 216);
        uint64_t v94 = (_OWORD *)(v0 + 376);
        BOOL v82 = (void *)(v0 + 536);
        unint64_t v21 = (id *)(v0 + 656);
        unint64_t v22 = *(void *)(v0 + 680) & 0xC000000000000001;
        swift_bridgeObjectRetain();
        uint64_t v23 = 0;
        while (1)
        {
          unint64_t v24 = v21;
          id v25 = v22 ? (id)MEMORY[0x2533AB3A0](v23, v1) : *(id *)(v1 + 8 * v23 + 32);
          id v26 = v25;
          uint64_t v27 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            break;
          }
          unsigned int v28 = objc_msgSend(v25, sel_isReachable);

          if (!v28)
          {
            uint64_t v29 = 2;
            unint64_t v21 = v24;
LABEL_29:
            uint64_t v103 = (void *)v29;
            *(void *)(v0 + 736) = v29;
            uint64_t v30 = *(void *)(v0 + 688);
            swift_bridgeObjectRelease();
            sub_251A1B128(v30, v86, &qword_269BA1038);
            if (*(void *)(v0 + 120))
            {
              sub_251A1A444((long long *)(v0 + 136), (uint64_t)v88);
              __swift_destroy_boxed_opaque_existential_0(v86);
              uint64_t v31 = v0 + 256;
              if (*(void *)(v0 + 240))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
                uint64_t v32 = type metadata accessor for MockTimerManager();
                if (swift_dynamicCast())
                {
                  id v33 = *v21;
                  uint64_t v34 = &off_270270420;
                  goto LABEL_36;
                }
LABEL_35:
                id v35 = objc_allocWithZone((Class)type metadata accessor for _TimerConnectionProvider());
                id v36 = v106;
                id v37 = objc_msgSend(v35, sel_init);
                id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F33FB0]), sel_initForAccessory_withConnectionProvider_, v36, v37);

                uint64_t v32 = sub_251A1A568(0, &qword_269BA1040);
                uint64_t v34 = &protocol witness table for COTimerManager;
LABEL_36:
                uint64_t v38 = *(void *)(v0 + 688);
                *(void *)(v0 + 200) = v32;
                *(void *)(v0 + 208) = v34;
                *(void *)(v0 + 176) = v33;
                sub_251A4ECF0(v0 + 176, v31, &qword_269BA1028);
                sub_251A1B128(v38, (uint64_t)v92, &qword_269BA1038);
                if (*(void *)(v0 + 40))
                {
                  sub_251A1A444(v92, (uint64_t)v94);
                  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
                  if (*(void *)(v0 + 400))
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
                    uint64_t v39 = type metadata accessor for MockAlarmManager();
                    if (swift_dynamicCast())
                    {
                      id v40 = *(id *)(v0 + 648);
                      uint64_t v41 = &off_270273A78;
                      goto LABEL_43;
                    }
LABEL_42:
                    id v42 = objc_allocWithZone((Class)type metadata accessor for _AlarmConnectionProvider());
                    id v43 = v106;
                    id v44 = objc_msgSend(v42, sel_init);
                    id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F33F38]), sel_initForAccessory_withConnectionProvider_, v43, v44);

                    uint64_t v39 = sub_251A1A568(0, &qword_269BA1048);
                    uint64_t v41 = &protocol witness table for COAlarmManager;
LABEL_43:
                    *(void *)(v0 + 360) = v39;
                    *(void *)(v0 + 368) = v41;
                    *(void *)(v0 + 336) = v40;
                    sub_251A4ECF0(v0 + 336, v101, &qword_269B9DF68);
                    sub_251A1B128(v31, (uint64_t)v97, &qword_269BA1028);
                    if (*(void *)(v0 + 440))
                    {
                      sub_251A1A444(v97, (uint64_t)v104);
                      sub_251A1B128(v101, (uint64_t)v99, &qword_269B9DF68);
                      if (*(void *)(v0 + 520))
                      {
                        uint64_t v45 = *(void *)(v0 + 672);
                        sub_251A1A444(v99, (uint64_t)v82);
                        sub_251C744F4(v108, &v114, v104, v82, v45, v106);
                        uint64_t v46 = v108[1];
                        uint64_t v47 = v108[0];
                        *(void *)(v0 + 744) = v108[0];
                        uint64_t v89 = v46;
                        *(void *)(v0 + 752) = v46;
                        uint64_t v48 = v110;
                        uint64_t v85 = v110;
                        uint64_t v87 = v109;
                        *(void *)(v0 + 760) = v109;
                        *(void *)(v0 + 768) = v48;
                        uint64_t v49 = v112;
                        uint64_t v83 = v111;
                        *(void *)(v0 + 776) = v111;
                        *(void *)(v0 + 784) = v49;
                        uint64_t v100 = v113;
                        uint64_t v102 = v49;
                        *(void *)(v0 + 792) = v113;
                        uint64_t v50 = v115;
                        uint64_t v96 = v115;
                        uint64_t v98 = v114;
                        *(void *)(v0 + 800) = v114;
                        *(void *)(v0 + 808) = v50;
                        uint64_t v51 = v117;
                        uint64_t v93 = v117;
                        uint64_t v95 = v116;
                        *(void *)(v0 + 816) = v116;
                        *(void *)(v0 + 824) = v51;
                        uint64_t v52 = v119;
                        uint64_t v80 = v119;
                        uint64_t v81 = v118;
                        *(void *)(v0 + 832) = v118;
                        *(void *)(v0 + 840) = v52;
                        uint64_t v79 = v120;
                        *(void *)(v0 + 848) = v120;
                        uint64_t v53 = sub_251F34DA0();
                        uint64_t v54 = *(void *)(v53 - 8);
                        uint64_t v90 = swift_task_alloc();
                        uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
                        v78(v90, v45, v53);
                        sub_251A1A4CC(v103);
                        swift_retain();
                        sub_251A1A4CC(v103);
                        char v55 = sub_251F35080();
                        os_log_type_t v56 = sub_251F35FD0();
                        if (os_log_type_enabled(v55, v56))
                        {
                          uint64_t v57 = swift_slowAlloc();
                          uint64_t v76 = (void *)swift_slowAlloc();
                          uint64_t v77 = swift_slowAlloc();
                          uint64_t v114 = v77;
                          *(_DWORD *)uint64_t v57 = 136315650;
                          uint64_t v58 = sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
                          uint64_t v59 = swift_retain();
                          uint64_t v60 = MEMORY[0x2533AAA10](v59, v58);
                          os_log_type_t type = v56;
                          uint64_t v61 = v53;
                          unint64_t v63 = v62;
                          swift_release();
                          *(void *)(v0 + 624) = sub_251A00E84(v60, v63, &v114);
                          sub_251F361D0();
                          uint64_t v53 = v61;
                          swift_bridgeObjectRelease();
                          swift_release_n();
                          *(_WORD *)(v57 + 12) = 2080;
                          sub_251AF752C();
                          uint64_t v64 = sub_251F36AB0();
                          *(void *)(v0 + 632) = sub_251A00E84(v64, v65, &v114);
                          sub_251F361D0();
                          swift_bridgeObjectRelease();
                          uint64_t v107 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
                          v107(v90, v61);
                          *(_WORD *)(v57 + 22) = 2112;
                          sub_251C7C8A8();
                          swift_allocError();
                          *uint64_t v66 = v103;
                          sub_251A1A4CC(v103);
                          uint64_t v67 = _swift_stdlib_bridgeErrorToNSError();
                          *(void *)(v0 + 640) = v67;
                          sub_251F361D0();
                          *uint64_t v76 = v67;
                          sub_251A1A4DC(v103);
                          sub_251A1A4DC(v103);
                          _os_log_impl(&dword_2519F3000, v55, type, "start listening to %s for %s with error: %@", (uint8_t *)v57, 0x20u);
                          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
                          swift_arrayDestroy();
                          MEMORY[0x2533AC760](v76, -1, -1);
                          swift_arrayDestroy();
                          MEMORY[0x2533AC760](v77, -1, -1);
                          MEMORY[0x2533AC760](v57, -1, -1);
                        }
                        else
                        {
                          swift_release_n();
                          uint64_t v107 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
                          v107(v90, v53);
                          sub_251A1A4DC(v103);
                          sub_251A1A4DC(v103);
                        }

                        uint64_t v70 = *(void *)(v0 + 672);
                        swift_task_dealloc();
                        uint64_t v91 = swift_task_alloc();
                        v78(v91, v70, v53);
                        swift_beginAccess();
                        sub_251A1A4CC(v103);
                        sub_251A1A4CC(v103);
                        swift_unknownObjectRetain();
                        swift_retain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_retain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                        uint64_t v114 = *v84;
                        *uint64_t v84 = 0x8000000000000000;
                        v121[0] = v98;
                        v121[1] = v96;
                        v121[2] = v95;
                        v121[3] = v93;
                        v121[4] = v81;
                        v121[5] = v80;
                        v121[6] = v79;
                        v121[7] = v47;
                        v121[8] = v89;
                        v121[9] = v87;
                        v121[10] = v85;
                        v121[11] = v83;
                        v121[12] = v102;
                        v121[13] = v100;
                        v121[14] = (uint64_t)v103;
                        v121[15] = (uint64_t)v103;
                        sub_251A0EB9C(v121, v91, isUniquelyReferenced_nonNull_native);
                        *uint64_t v84 = v114;
                        swift_bridgeObjectRelease();
                        v107(v91, v53);
                        swift_endAccess();
                        swift_task_dealloc();
                        BOOL v72 = (void *)swift_task_alloc();
                        *(void *)(v0 + 856) = v72;
                        *BOOL v72 = v0;
                        v72[1] = sub_251C739A8;
                        return sub_251C7C040((uint64_t)v104, (uint64_t)v106);
                      }
                      swift_release();

                      sub_251A1A4DC(v103);
                      swift_release();
                      __swift_destroy_boxed_opaque_existential_0((uint64_t)v104);
                      uint64_t v68 = &qword_269B9DF68;
                      sub_251A1B064(v101, &qword_269B9DF68);
                      sub_251A1B064(v31, &qword_269BA1028);
                      uint64_t v69 = v0 + 496;
                    }
                    else
                    {
                      swift_release();

                      sub_251A1A4DC(v103);
                      swift_release();
                      sub_251A1B064(v101, &qword_269B9DF68);
                      uint64_t v68 = &qword_269BA1028;
                      sub_251A1B064(v31, &qword_269BA1028);
                      uint64_t v69 = v0 + 416;
                    }
                    sub_251A1B064(v69, v68);
                    goto LABEL_58;
                  }
                }
                else
                {
                  sub_251A1B064((uint64_t)v92, &qword_269BA1038);
                  *uint64_t v94 = 0u;
                  *(_OWORD *)(v0 + 392) = 0u;
                  *(void *)(v0 + 408) = 0;
                }
                sub_251A1B064((uint64_t)v94, &qword_269B9DF68);
                goto LABEL_42;
              }
            }
            else
            {
              sub_251A1B064(v86, &qword_269BA1038);
              *uint64_t v88 = 0u;
              *(_OWORD *)(v0 + 232) = 0u;
              *(void *)(v0 + 248) = 0;
              uint64_t v31 = v0 + 256;
            }
            sub_251A1B064((uint64_t)v88, &qword_269BA1028);
            goto LABEL_35;
          }
          ++v23;
          unint64_t v21 = v24;
          if (v27 == v3)
          {
            uint64_t v29 = 0;
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_55:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_251F366C0();
        swift_bridgeObjectRelease();
        if (!v3) {
          break;
        }
        unint64_t v73 = swift_bridgeObjectRetain();
        uint64_t v2 = (uint64_t)sub_251A91A70(v73);
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_release();
LABEL_58:
  char v74 = *(uint64_t (**)(void))(v0 + 8);
  return v74();
}

uint64_t sub_251C739A8(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 536;
  uint64_t v8 = *v1;
  *(unsigned char *)(v3 + 880) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 864) = v5;
  *uint64_t v5 = v8;
  v5[1] = sub_251C73AFC;
  uint64_t v6 = *(void *)(v2 + 728);
  return sub_251C7C43C(v4, v6);
}

uint64_t sub_251C73AFC(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  char v5 = *(unsigned char *)(*v1 + 880);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 872) = v7;
  *os_log_type_t v7 = v6;
  v7[1] = sub_251C73C6C;
  uint64_t v8 = *(void *)(v3 + 672);
  return sub_251C750A4(v8, v5, a1 & 1);
}

uint64_t sub_251C73C6C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 720);
  uint64_t v3 = *(void *)(v1 + 712);
  return MEMORY[0x270FA2498](sub_251C73D8C, v3, v2);
}

uint64_t sub_251C73D8C()
{
  uint64_t v4 = (void *)v0[92];
  uint64_t v1 = (void *)v0[91];
  swift_release();

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_251A1A4DC(v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 67));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 57));
  sub_251A1B064((uint64_t)(v0 + 37), &qword_269B9DF68);
  sub_251A1B064((uint64_t)(v0 + 32), &qword_269BA1028);
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251C73F20(id *a1, uint64_t a2)
{
  id v65 = *a1;
  id v4 = objc_msgSend(v65, sel_uniqueIdentifier);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_251F34D80();

  uint64_t v50 = a2;
  uint64_t v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (!*(void *)(*v8 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_2519FE584((uint64_t)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v27 = v7;
    uint64_t v39 = *(void (**)(char *, uint64_t))(v6 + 8);
    v39((char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    id v25 = v65;
    goto LABEL_11;
  }
  uint64_t v47 = v2;
  unint64_t v12 = (long long *)(*(void *)(v9 + 56) + (v10 << 7));
  long long v14 = v12[2];
  long long v13 = v12[3];
  long long v15 = v12[1];
  long long v53 = *v12;
  long long v54 = v15;
  long long v55 = v14;
  long long v56 = v13;
  long long v16 = v12[4];
  long long v17 = v12[5];
  long long v18 = v12[7];
  long long v59 = v12[6];
  long long v60 = v18;
  long long v57 = v16;
  long long v58 = v17;
  sub_251A1A678((uint64_t)&v53);
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v46 = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v49((char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(_OWORD *)&v61[152] = v53;
  long long v62 = v54;
  long long v63 = v55;
  uint64_t v64 = v56;
  sub_251C6E818();
  uint64_t v19 = *((void *)&v56 + 1);
  uint64_t v20 = v57;
  uint64_t v48 = v5;
  uint64_t v21 = *((void *)&v57 + 1);
  uint64_t v22 = v58;
  uint64_t v23 = *((void *)&v59 + 1);
  id v44 = (uint8_t *)*((void *)&v58 + 1);
  uint64_t v45 = v59;
  sub_251C7ADC4(0x8000000251F6F430);
  v23 += 16;
  sub_251C7BD6C(v19, v23);
  sub_251C7BD6C(v20, v23);
  sub_251C7BD6C(v21, v23);
  uint64_t v24 = v22;
  uint64_t v5 = v48;
  sub_251C7BD6C(v24, v23);
  sub_251C7BD6C((uint64_t)v44, v23);
  sub_251C7BD6C(v45, v23);
  id v25 = v65;
  id v26 = objc_msgSend(v65, sel_uniqueIdentifier);
  MEMORY[0x270FA5388](v26);
  sub_251F34D80();

  swift_beginAccess();
  sub_251BB8B78((uint64_t)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v52);
  v49((char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_251A4ECF0((uint64_t)v52, (uint64_t)v61, &qword_269B9F578);
  swift_endAccess();
  sub_251C7BEC4((uint64_t)v61);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v27 = v7;
  uint64_t v28 = sub_251F350A0();
  __swift_project_value_buffer(v28, (uint64_t)qword_269B9DEE0);
  id v29 = v25;
  uint64_t v30 = sub_251F35080();
  os_log_type_t v31 = sub_251F35FD0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v52[0] = v45;
    id v44 = v32;
    *(_DWORD *)uint64_t v32 = 136315138;
    v43[1] = v32 + 4;
    id v33 = objc_msgSend(v29, sel_description);
    uint64_t v34 = sub_251F356F0();
    unint64_t v36 = v35;

    uint64_t v5 = v48;
    uint64_t v51 = sub_251A00E84(v34, v36, v52);
    sub_251F361D0();

    id v25 = v65;
    swift_bridgeObjectRelease();
    id v37 = v44;
    _os_log_impl(&dword_2519F3000, v30, v31, "unregistering for %s", v44, 0xCu);
    uint64_t v38 = v45;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v38, -1, -1);
    MEMORY[0x2533AC760](v37, -1, -1);

    sub_251A1A774((uint64_t)&v53);
  }
  else
  {

    sub_251A1A774((uint64_t)&v53);
  }
  uint64_t v39 = v49;
LABEL_11:
  id v40 = objc_msgSend(v25, sel_uniqueIdentifier);
  MEMORY[0x270FA5388](v40);
  uint64_t v41 = (char *)v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  swift_beginAccess();
  sub_251BB8B4C((uint64_t)v41);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_251BB8B20((uint64_t)v41);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v39)(v41, v5);
}

uint64_t sub_251C744F4(uint64_t *a1, uint64_t *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v21 = sub_251C74AEC(a3, a5, MEMORY[0x263F33EF8], (uint64_t)&unk_27026DFE0, (uint64_t)sub_251C7DD0C);
  uint64_t v25 = sub_251C74AEC(a3, a5, MEMORY[0x263F33F08], (uint64_t)&unk_27026DF90, (uint64_t)sub_251C7DBA8);
  uint64_t v12 = sub_251C74AEC(a3, a5, MEMORY[0x263F33F18], (uint64_t)&unk_27026DF40, (uint64_t)sub_251C7DB88);
  uint64_t v13 = sub_251C748DC(a3, a5, a6, MEMORY[0x263F33EA8], (uint64_t)&unk_27026DEF0, (uint64_t)sub_251C7D7E0);
  uint64_t v18 = sub_251C748DC(a3, a5, a6, MEMORY[0x263F33EE0], (uint64_t)&unk_27026DEA0, (uint64_t)sub_251C7D63C);
  uint64_t v22 = sub_251C74AEC(a3, a5, MEMORY[0x263F33EC0], (uint64_t)&unk_27026DE50, (uint64_t)sub_251C7D4F0);
  sub_251A1A4EC((uint64_t)a3, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1098);
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_251A1A444(v26, v24 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v23 = sub_251C74CC0(a4, a5, MEMORY[0x263F33D20], (uint64_t)&unk_27026DE00, (uint64_t)sub_251C7D4B4);
  uint64_t v20 = sub_251C74CC0(a4, a5, MEMORY[0x263F33D30], (uint64_t)&unk_27026DDB0, (uint64_t)sub_251C7D384);
  uint64_t v19 = sub_251C74CC0(a4, a5, MEMORY[0x263F33D48], (uint64_t)&unk_27026DD60, (uint64_t)sub_251C7D254);
  uint64_t v17 = sub_251C74E94(a4, a5, a6, MEMORY[0x263F33D50], (uint64_t)&unk_27026DD10, (uint64_t)sub_251C7CD34);
  uint64_t v14 = sub_251C74E94(a4, a5, a6, MEMORY[0x263F33D88], (uint64_t)&unk_27026DCC0, (uint64_t)sub_251C7CAA0);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_251A1A4EC((uint64_t)a4, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10A0);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t result = sub_251A1A444(v26, v15 + 16);
  *a1 = v21;
  a1[1] = v25;
  a1[2] = v12;
  a1[3] = v13;
  a1[4] = v18;
  a1[5] = v22;
  a1[6] = v24;
  *a2 = v23;
  a2[1] = v20;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v14;
  a2[5] = 0;
  a2[6] = v15;
  return result;
}

uint64_t sub_251C748DC(void *a1, uint64_t a2, void *a3, id *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t v8 = v6;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v28 = __swift_project_boxed_opaque_existential_1(a1, v12);
  id v26 = *a4;
  uint64_t v27 = *(void *)(v8 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_251A1A4EC((uint64_t)a1, (uint64_t)v30);
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v15);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v14;
  sub_251A1A444(v30, v19 + 24);
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v19 + v18, (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  *(void *)(v19 + ((v17 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  uint64_t v20 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 48);
  id v21 = v26;
  swift_retain();
  id v22 = a3;
  uint64_t v23 = v20(v21, v27, v29, v19, v12, v13);
  swift_release();
  swift_release();

  return v23;
}

uint64_t sub_251C74AEC(void *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v24 = __swift_project_boxed_opaque_existential_1(a1, v9);
  char v11 = *a3;
  uint64_t v23 = *(void *)(v7 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = sub_251F34DA0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  unint64_t v18 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 48);
  id v19 = v11;
  swift_retain();
  uint64_t v20 = v18(v19, v23, v25, v17, v9, v10);
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_251C74CC0(void *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v24 = __swift_project_boxed_opaque_existential_1(a1, v9);
  char v11 = *a3;
  uint64_t v23 = *(void *)(v7 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = sub_251F34DA0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  unint64_t v18 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 64);
  id v19 = v11;
  swift_retain();
  uint64_t v20 = v18(v19, v23, v25, v17, v9, v10);
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_251C74E94(void *a1, uint64_t a2, void *a3, id *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t v8 = v6;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v28 = __swift_project_boxed_opaque_existential_1(a1, v12);
  id v26 = *a4;
  uint64_t v27 = *(void *)(v8 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_251A1A4EC((uint64_t)a1, (uint64_t)v30);
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v15);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v14;
  sub_251A1A444(v30, v19 + 24);
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v19 + v18, (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  *(void *)(v19 + ((v17 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  uint64_t v20 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 64);
  id v21 = v26;
  swift_retain();
  id v22 = a3;
  uint64_t v23 = v20(v21, v27, v29, v19, v12, v13);
  swift_release();
  swift_release();

  return v23;
}

uint64_t sub_251C750A4(uint64_t a1, char a2, char a3)
{
  *(unsigned char *)(v4 + 345) = a3;
  *(unsigned char *)(v4 + 344) = a2;
  *(void *)(v4 + 264) = a1;
  *(void *)(v4 + 272) = v3;
  sub_251F35C80();
  *(void *)(v4 + 280) = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  *(void *)(v4 + 288) = v6;
  *(void *)(v4 + 296) = v5;
  return MEMORY[0x270FA2498](sub_251C75144, v6, v5);
}

uint64_t sub_251C75144()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  *(void *)(v0 + 304) = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  uint64_t v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!*(void *)(*v3 + 16)) {
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(v0 + 264);
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE584(v5);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_release();
LABEL_13:
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  uint64_t v8 = *(void *)(v0 + 264);
  uint64_t v9 = (long long *)(*(void *)(v4 + 56) + (v6 << 7));
  long long v10 = v9[3];
  long long v12 = *v9;
  long long v11 = v9[1];
  *(_OWORD *)(v0 + 48) = v9[2];
  *(_OWORD *)(v0 + 64) = v10;
  *(_OWORD *)(v0 + 16) = v12;
  *(_OWORD *)(v0 + 32) = v11;
  long long v13 = v9[7];
  long long v15 = v9[4];
  long long v14 = v9[5];
  *(_OWORD *)(v0 + 112) = v9[6];
  *(_OWORD *)(v0 + 128) = v13;
  *(_OWORD *)(v0 + 80) = v15;
  *(_OWORD *)(v0 + 96) = v14;
  sub_251A1A678(v0 + 16);
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_251C706DC(v8);
  unint64_t v17 = v16;
  if (v16 >> 62)
  {
    if (sub_251F366C0()) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
  if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_release();
    sub_251A1A774(v0 + 16);
    goto LABEL_13;
  }
LABEL_5:
  if ((v17 & 0xC000000000000001) != 0)
  {
    MEMORY[0x2533AB3A0](0, v17);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v18)
    {
      __break(1u);
      return result;
    }
  }
  uint64_t v20 = *(void *)(v0 + 128);
  *(void *)(v0 + 312) = v20;
  *(void *)(v0 + 232) = v20;
  id v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v21;
  *id v21 = v0;
  v21[1] = sub_251C7537C;
  uint64_t v22 = *(void *)(v0 + 264);
  char v23 = *(unsigned char *)(v0 + 345);
  return sub_251C75C3C(v0 + 240, v22, v23, (uint64_t *)(v0 + 232));
}

uint64_t sub_251C7537C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v1 + 136);
  *(void *)(v1 + 224) = v3;
  *(void *)(v1 + 328) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 336) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_251C754DC;
  uint64_t v5 = *(void *)(v1 + 264);
  char v6 = *(unsigned char *)(v1 + 344);
  return sub_251C75C3C(v1 + 216, v5, v6, (uint64_t *)(v1 + 224));
}

uint64_t sub_251C754DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *(void *)(v1 + 288);
  return MEMORY[0x270FA2498](sub_251C755FC, v3, v2);
}

uint64_t sub_251C755FC()
{
  uint64_t v51 = v0;
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (id *)(v0 + 216);
  uint64_t v2 = (id *)(qword_26B21FF50 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (*v2)
  {
    unsigned __int8 v3 = objc_msgSend(*v2, sel_hasOptedToHH2);
    uint64_t v4 = (uint64_t)*v1;
    if ((v3 & 1) == 0)
    {
      sub_251A1A4DC(*v1);
      sub_251A1A4DC(*(id *)(v0 + 240));
      uint64_t v4 = 5;
      *uint64_t v1 = (id)5;
      *(void *)(v0 + 240) = 5;
    }
  }
  else
  {
    uint64_t v4 = (uint64_t)*v1;
  }
  uint64_t v5 = *(void **)(v0 + 240);
  uint64_t v48 = v4;
  id v49 = v5;
  sub_251A1A4CC((id)v4);
  sub_251A1A4CC(v5);
  sub_251C764C0(&v46, &v47, (id *)&v48, &v49);
  sub_251A1A4DC(v5);
  sub_251A1A4DC((id)v4);
  sub_251A1A4DC((id)v4);
  sub_251A1A4DC(v5);
  char v7 = v46;
  char v6 = v47;
  *(void *)(v0 + 216) = v46;
  *(void *)(v0 + 240) = v6;
  sub_251A1A4CC(v7);
  sub_251A1A4CC(v6);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_251F350A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_269B9DEE0);
  sub_251A1A4CC(v7);
  sub_251A1A4CC(v6);
  sub_251A1A4CC(v7);
  sub_251A1A4CC(v6);
  uint64_t v9 = sub_251F35080();
  os_log_type_t v10 = sub_251F35FD0();
  uint64_t v42 = (uint64_t)v7;
  uint64_t v43 = (uint64_t)v6;
  if (os_log_type_enabled(v9, v10))
  {
    long long v11 = v7;
    uint64_t v12 = swift_slowAlloc();
    long long v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412546;
    sub_251C7C8A8();
    swift_allocError();
    void *v14 = v6;
    sub_251A1A4CC(v6);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 248) = v15;
    sub_251F361D0();
    *long long v13 = v15;
    sub_251A1A4DC(v6);
    sub_251A1A4DC(v6);
    *(_WORD *)(v12 + 12) = 2112;
    swift_allocError();
    *unint64_t v16 = v11;
    sub_251A1A4CC(v11);
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 256) = v17;
    sub_251F361D0();
    v13[1] = v17;
    sub_251A1A4DC(v11);
    sub_251A1A4DC(v11);
    _os_log_impl(&dword_2519F3000, v9, v10, "updated alarm connection error state %@ timer connection error state %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v13, -1, -1);
    MEMORY[0x2533AC760](v12, -1, -1);
  }
  else
  {
    sub_251A1A4DC(v6);
    sub_251A1A4DC(v6);
    sub_251A1A4DC(v7);
    sub_251A1A4DC(v7);
  }
  uint64_t v18 = *(void **)(v0 + 328);
  uint64_t v20 = *(void *)(v0 + 304);
  uint64_t v19 = *(void **)(v0 + 312);
  uint64_t v21 = *(void *)(v0 + 264);
  uint64_t v22 = *(void *)(v0 + 272);

  char v23 = (id *)(v22 + v20);
  uint64_t v41 = sub_251F34DA0();
  uint64_t v39 = *(void *)(v41 - 8);
  uint64_t v40 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v21, v41);
  sub_251A1A678(v0 + 16);
  sub_251A1A4DC(v18);
  sub_251A1A4DC(v19);
  uint64_t v44 = *(void *)(v0 + 24);
  uint64_t v45 = *(void *)(v0 + 32);
  uint64_t v29 = *(void *)(v0 + 16);
  uint64_t v30 = *(void *)(v0 + 40);
  uint64_t v24 = *(void *)(v0 + 64);
  uint64_t v31 = *(void *)(v0 + 48);
  uint64_t v32 = *(void *)(v0 + 56);
  uint64_t v36 = *(void *)(v0 + 80);
  uint64_t v37 = *(void *)(v0 + 72);
  uint64_t v34 = *(void *)(v0 + 96);
  uint64_t v35 = *(void *)(v0 + 88);
  uint64_t v25 = *(void *)(v0 + 112);
  uint64_t v33 = *(void *)(v0 + 104);
  uint64_t v38 = *(void *)(v0 + 120);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_251A1A678(v0 + 16);
  sub_251A1A4DC(v18);
  sub_251A1A4DC(v19);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v49 = *v23;
  v50[0] = v29;
  *char v23 = (id)0x8000000000000000;
  v50[1] = v44;
  void v50[2] = v45;
  void v50[3] = v30;
  v50[4] = v31;
  v50[5] = v32;
  v50[6] = v24;
  v50[7] = v37;
  v50[8] = v36;
  v50[9] = v35;
  v50[10] = v34;
  v50[11] = v33;
  v50[12] = v25;
  v50[13] = v38;
  v50[14] = v43;
  v50[15] = v42;
  sub_251A0EB9C(v50, v40, isUniquelyReferenced_nonNull_native);
  *char v23 = v49;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
  swift_endAccess();
  sub_251A1A774(v0 + 16);
  sub_251A1A4DC(*(id *)(v0 + 216));
  sub_251A1A4DC(*(id *)(v0 + 240));
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_251C75C3C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  *(unsigned char *)(v5 + 104) = a3;
  *(void *)(v5 + 64) = a1;
  *(void *)(v5 + 72) = a2;
  uint64_t v6 = *a4;
  *(void *)(v5 + 80) = v4;
  *(void *)(v5 + 88) = v6;
  sub_251F35C80();
  *(void *)(v5 + 96) = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C75CE0, v8, v7);
}

void sub_251C75CE0()
{
  uint64_t v2 = *(void **)(v0 + 72);
  swift_release();
  unint64_t v3 = sub_251C706DC((uint64_t)v2);
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_29:
    uint64_t v25 = *(void **)(v0 + 64);
    swift_bridgeObjectRelease();
    *uint64_t v25 = 0;
    goto LABEL_82;
  }
  if (!sub_251F366C0()) {
    goto LABEL_29;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x2533AB3A0](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    id v5 = *(id *)(v4 + 32);
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = &off_26536F000;
  id v8 = objc_msgSend(v6, sel_siriEndpointProfile);
  if (!v8)
  {
LABEL_46:
    uint64_t v35 = (id *)(*(void *)(v0 + 80) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
    swift_beginAccess();
    if (!*v35) {
      goto LABEL_61;
    }
    uint64_t v36 = *(void *)(v0 + 72);
    id v37 = objc_msgSend(*v35, sel_mediaSystems);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
    unint64_t v38 = sub_251F35AC0();

    uint64_t v39 = swift_task_alloc();
    *(void *)(v39 + 16) = v36;
    unint64_t v24 = (unint64_t)sub_251A95638(sub_251C7DDB0, v39, v38);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (!v24)
    {
LABEL_61:
      id v51 = objc_msgSend(v6, sel_softwareVersion);
      if (v51)
      {
        uint64_t v52 = v51;
        uint64_t v53 = (uint64_t)objc_msgSend(v51, sel_majorVersion);

        if (v53 <= 17)
        {
          long long v54 = *(void **)(v0 + 64);

LABEL_78:
          *long long v54 = 4;
          goto LABEL_82;
        }
      }
      int v55 = *(unsigned __int8 *)(v0 + 104);
      if (v55 == 2)
      {
LABEL_67:
        long long v57 = *(void **)(v0 + 88);
        long long v58 = *(void **)(v0 + 64);

        *long long v58 = v57;
        sub_251A1A4CC(v57);
        goto LABEL_82;
      }
      long long v56 = *(void **)(v0 + 88);
      if (v56 == (void *)2)
      {
        sub_251A1A4DC((id)2);
        sub_251A1A4DC((id)2);
        goto LABEL_67;
      }
      sub_251A1A4CC(*(id *)(v0 + 88));
      sub_251A1A4DC(v56);
      sub_251A1A4DC((id)2);
      if ((v55 & 1) == 0)
      {
        id v59 = [v6 (SEL)v7[493]];
        if (v59)
        {
          long long v60 = v59;
          unsigned __int8 v61 = objc_msgSend(v59, sel_isNeedsOnboarding);

          if (v61)
          {
            uint64_t v62 = 0;
LABEL_81:
            **(void **)(v0 + 64) = v62;
            goto LABEL_82;
          }
        }
        else
        {
        }
        uint64_t v62 = 3;
        goto LABEL_81;
      }

      uint64_t v62 = 0;
      goto LABEL_81;
    }
    id v40 = objc_msgSend((id)v24, sel_components);
    sub_251A1A568(0, (unint64_t *)&qword_269B9D518);
    unint64_t v28 = sub_251F35AC0();

    uint64_t v66 = v6;
    if (!(v28 >> 62))
    {
      uint64_t v41 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v41)
      {
LABEL_60:
        swift_bridgeObjectRelease_n();

        uint64_t v6 = v66;
        uint64_t v7 = &off_26536F000;
        goto LABEL_61;
      }
LABEL_50:
      uint64_t v42 = 0;
      while (1)
      {
        if ((v28 & 0xC000000000000001) != 0) {
          id v43 = (id)MEMORY[0x2533AB3A0](v42, v28);
        }
        else {
          id v43 = *(id *)(v28 + 8 * v42 + 32);
        }
        uint64_t v44 = v43;
        uint64_t v45 = v42 + 1;
        if (__OFADD__(v42, 1)) {
          goto LABEL_86;
        }
        id v46 = objc_msgSend(v43, sel_mediaProfile);
        if (!v46) {
          break;
        }
        uint64_t v47 = v46;
        id v48 = objc_msgSend(v46, sel_accessory);

        if (!v48) {
          break;
        }
        id v49 = objc_msgSend(v48, sel_softwareVersion);

        if (!v49) {
          break;
        }
        uint64_t v50 = (uint64_t)objc_msgSend(v49, sel_majorVersion);

        if (v50 < 18)
        {
          swift_bridgeObjectRelease();

          goto LABEL_77;
        }
        ++v42;
        if (v45 == v41) {
          goto LABEL_60;
        }
      }

      swift_bridgeObjectRelease();
LABEL_77:
      long long v54 = *(void **)(v0 + 64);
      swift_bridgeObjectRelease();

      goto LABEL_78;
    }
LABEL_87:
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_251F366C0();
    if (!v41) {
      goto LABEL_60;
    }
    goto LABEL_50;
  }
  uint64_t v2 = v8;
  if (objc_msgSend(v8, sel_isNeedsOnboarding))
  {
    uint64_t v9 = *(void **)(v0 + 64);

    *uint64_t v9 = v2;
    goto LABEL_82;
  }
  uint64_t v10 = (id *)(*(void *)(v0 + 80) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  if (!*v10)
  {
LABEL_45:

    goto LABEL_46;
  }
  uint64_t v66 = v6;
  id v11 = objc_msgSend(*v10, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v1 = sub_251F35AC0();

  unint64_t v67 = MEMORY[0x263F8EE78];
  if (v1 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
    id v65 = v2;
    if (v12) {
      goto LABEL_12;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    unint64_t v24 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_89;
    }
    goto LABEL_34;
  }
  uint64_t v12 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v65 = v2;
  if (!v12) {
    goto LABEL_33;
  }
LABEL_12:
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x2533AB3A0](i, v1);
    }
    else {
      id v14 = *(id *)(v1 + 8 * i + 32);
    }
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_category);
    id v17 = objc_msgSend(v16, sel_categoryType);

    uint64_t v18 = sub_251F356F0();
    uint64_t v20 = v19;

    if (v18 == sub_251F356F0() && v20 == v21)
    {
      swift_bridgeObjectRelease_n();
LABEL_15:
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
      continue;
    }
    char v23 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v24 = v67;
  if ((v67 & 0x8000000000000000) == 0)
  {
LABEL_34:
    if ((v24 & 0x4000000000000000) != 0) {
      goto LABEL_89;
    }
    uint64_t v26 = *(void *)(v24 + 16);
    swift_retain();
    if (v26) {
      goto LABEL_36;
    }
LABEL_44:
    swift_release_n();
    uint64_t v2 = v65;
    uint64_t v6 = v66;
    uint64_t v7 = &off_26536F000;
    goto LABEL_45;
  }
LABEL_89:
  swift_retain();
  uint64_t v26 = sub_251F366C0();
  if (!v26) {
    goto LABEL_44;
  }
LABEL_36:
  uint64_t v27 = 0;
  unint64_t v28 = v24 & 0xC000000000000001;
  while (2)
  {
    if (v28) {
      id v29 = (id)MEMORY[0x2533AB3A0](v27, v24);
    }
    else {
      id v29 = *(id *)(v24 + 8 * v27 + 32);
    }
    uint64_t v30 = v29;
    uint64_t v31 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    id v32 = objc_msgSend(v29, sel_softwareVersion);
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = (uint64_t)objc_msgSend(v32, sel_majorVersion);

      if (v34 < 18) {
        goto LABEL_74;
      }
      ++v27;
      if (v31 == v26) {
        goto LABEL_44;
      }
      continue;
    }
    break;
  }

LABEL_74:
  swift_release();

  long long v63 = *(void **)(v0 + 64);
  swift_release();

  *long long v63 = 4;
LABEL_82:
  uint64_t v64 = *(void (**)(void))(v0 + 8);
  v64();
}

void sub_251C764C0(void *a1, void *a2, id *a3, id *a4)
{
  id v6 = *a3;
  id v7 = *a4;
  switch((unint64_t)*a4)
  {
    case 0uLL:
      if (v6) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 1uLL:
      if (v6 != (id)1) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 2uLL:
      if (v6 != (id)2) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 3uLL:
      if (v6 != (id)3) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 4uLL:
      if (v6 != (id)4) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 5uLL:
      if (v6 != (id)5) {
        goto LABEL_15;
      }
LABEL_13:
      sub_251A1A4DC(*a4);
      uint64_t v8 = (uint64_t)v7;
      goto LABEL_21;
    default:
      if ((unint64_t)v6 >= 6)
      {
        sub_251A1A568(0, (unint64_t *)&qword_26B21ECF8);
        sub_251A1A4CC(v6);
        sub_251A1A4CC(v7);
        char v9 = sub_251F36120();
        sub_251A1A4DC(v7);
        sub_251A1A4DC(v6);
        if (v9) {
          goto LABEL_22;
        }
        id v10 = v7;
        sub_251A1A4DC(v7);
        sub_251A1A4DC((id)4);
      }
      else
      {
LABEL_15:
        sub_251A1A4CC(*a3);
        sub_251A1A4CC(v7);
        sub_251A1A4DC(v7);
        sub_251A1A4DC(v6);
        if (v7 == (id)4 || (sub_251A1A4CC(v7), sub_251A1A4DC(v7), sub_251A1A4DC((id)4), v6 == (id)4))
        {
          sub_251A1A4DC((id)4);
          sub_251A1A4DC((id)4);
          *a1 = 4;
          *a2 = 4;
          return;
        }
      }
      sub_251A1A4CC(v6);
      sub_251A1A4DC(v6);
      uint64_t v8 = 4;
LABEL_21:
      sub_251A1A4DC((id)v8);
LABEL_22:
      *a1 = v6;
      *a2 = v7;
      sub_251A1A4CC(v6);
      sub_251A1A4CC(v7);
      return;
  }
}

uint64_t sub_251C766B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_251C766D0, 0, 0);
}

uint64_t sub_251C766D0()
{
  uint64_t v2 = (unsigned char *)v0[2];
  unint64_t v1 = (void *)v0[3];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(v3, v4) & 1;
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_251C76768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_251C76788, 0, 0);
}

uint64_t sub_251C76788()
{
  uint64_t v2 = (unsigned char *)v0[2];
  unint64_t v1 = (void *)v0[3];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v3, v4) & 1;
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_251C76820(id *a1)
{
  return sub_251C76840(a1) & 1;
}

uint64_t sub_251C76840(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

void sub_251C7694C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2533AC870](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_251C7722C(a1, a3, "Received new timer %s", (uint64_t)&unk_27026E008, (uint64_t)&unk_269BA1130, (void (*)(uint64_t))sub_251C7DDF8);
  }
}

void sub_251C769F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x2533AC870](v7);
  if (v8)
  {
    char v9 = (void *)v8;
    a4(a1, a3);
  }
}

uint64_t sub_251C76A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  id v49 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v47 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v52 = (uint64_t)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_269B9DEE0);
  uint64_t v11 = sub_251F34650();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  uint64_t v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FD0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v43[1] = v43;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v45 = v2;
    uint64_t v20 = v19;
    uint64_t v54 = v19;
    uint64_t v44 = a1;
    *(_DWORD *)uint64_t v18 = 136315138;
    id v46 = (void (*)(char *, uint64_t, uint64_t))a2;
    uint64_t v21 = sub_251F34620();
    uint64_t v53 = sub_251A00E84(v21, v22, &v54);
    a2 = (uint64_t)v46;
    a1 = v44;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _os_log_impl(&dword_2519F3000, v15, v16, "Received timer removal %s", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    uint64_t v3 = v45;
    MEMORY[0x2533AC760](v23, -1, -1);
    MEMORY[0x2533AC760](v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  uint64_t result = sub_251C7D008(a1, a2, MEMORY[0x263F55D28], &qword_269BA0FA8);
  if (result)
  {
    uint64_t v25 = result;
    uint64_t v26 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v52, 1, 1, v26);
    uint64_t v27 = sub_251F34DA0();
    uint64_t v45 = v43;
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void *)(v28 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v30 = (char *)v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v46 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v46(v30, a2, v27);
    sub_251F35C80();
    swift_bridgeObjectRetain();
    id v31 = v3;
    uint64_t v32 = sub_251F35C70();
    uint64_t v33 = a2;
    unint64_t v34 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = MEMORY[0x263F8F500];
    *(void *)(v35 + 16) = v32;
    *(void *)(v35 + 24) = v36;
    *(unsigned char *)(v35 + 32) = 1;
    *(void *)(v35 + 40) = v25;
    *(void *)(v35 + 48) = v31;
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v35 + v34, v30, v27);
    sub_251ACBB48(v52, (uint64_t)&unk_269BA1128, v35);
    uint64_t v37 = swift_release();
    MEMORY[0x270FA5388](v37);
    v43[-2] = v33;
    uint64_t v38 = sub_251A52718((void (*)(uint64_t))sub_251C7DDF8, (uint64_t)&v43[-4], v25);
    swift_bridgeObjectRelease();
    if (qword_26B21E180 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
    __swift_project_value_buffer(v39, (uint64_t)qword_26B21E350);
    uint64_t v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48);
    uint64_t v41 = v49;
    v46(v49, v33, v27);
    *(void *)&v41[v40] = v38;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = v47;
    sub_251F35CF0();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v42, v50);
  }
  return result;
}

void sub_251C770DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2533AC870](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_251C7722C(a1, a3, "Received firing timer state dismissed. Removing %s", (uint64_t)&unk_27026DE78, (uint64_t)&unk_269BA10F0, (void (*)(uint64_t))sub_251C7D61C);
  }
}

void sub_251C77184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2533AC870](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_251C7722C(a1, a3, "Received updated timer %s", (uint64_t)&unk_27026DF68, (uint64_t)&unk_269BA1120, (void (*)(uint64_t))sub_251C7DDF8);
  }
}

uint64_t sub_251C7722C(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v57 = a5;
  long long v58 = a6;
  uint64_t v56 = a4;
  uint64_t v8 = v6;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  unsigned __int8 v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  id v59 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v65 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_251F350A0();
  __swift_project_value_buffer(v15, (uint64_t)qword_269B9DEE0);
  uint64_t v16 = sub_251F34650();
  uint64_t v64 = (void (*)(char *, uint64_t, uint64_t))&v51;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  uint64_t v20 = sub_251F35080();
  os_log_type_t v21 = sub_251F35FD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v53 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v54 = v6;
    uint64_t v25 = v24;
    uint64_t v67 = v24;
    uint64_t v52 = a3;
    *(_DWORD *)uint64_t v23 = 136315138;
    int v55 = (uint64_t *)a2;
    uint64_t v26 = sub_251F34620();
    uint64_t v66 = sub_251A00E84(v26, v27, &v67);
    a2 = (uint64_t)v55;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    _os_log_impl(&dword_2519F3000, v20, v21, v52, v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v25;
    uint64_t v8 = v54;
    MEMORY[0x2533AC760](v28, -1, -1);
    uint64_t v29 = v23;
    a1 = v53;
    MEMORY[0x2533AC760](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }

  uint64_t result = sub_251C7D008(a1, a2, MEMORY[0x263F55D28], &qword_269BA0FA8);
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v65, 1, 1, v32);
    uint64_t v33 = sub_251F34DA0();
    int v55 = &v51;
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(void *)(v34 + 64);
    MEMORY[0x270FA5388](v33);
    uint64_t v36 = (char *)&v51 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    v64(v36, a2, v33);
    sub_251F35C80();
    swift_bridgeObjectRetain();
    id v37 = v8;
    uint64_t v38 = sub_251F35C70();
    uint64_t v39 = a2;
    unint64_t v40 = (*(unsigned __int8 *)(v34 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = MEMORY[0x263F8F500];
    *(void *)(v41 + 16) = v38;
    *(void *)(v41 + 24) = v42;
    *(unsigned char *)(v41 + 32) = 0;
    *(void *)(v41 + 40) = v31;
    *(void *)(v41 + 48) = v37;
    unint64_t v43 = v41 + v40;
    uint64_t v44 = v39;
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v43, v36, v33);
    sub_251ACBB48(v65, v57, v41);
    uint64_t v45 = swift_release();
    MEMORY[0x270FA5388](v45);
    *(&v51 - 2) = v39;
    uint64_t v46 = sub_251A52718(v58, (uint64_t)(&v51 - 4), v31);
    swift_bridgeObjectRelease();
    if (qword_26B21E180 != -1) {
      swift_once();
    }
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
    __swift_project_value_buffer(v47, (uint64_t)qword_26B21E350);
    uint64_t v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48);
    id v49 = v61;
    v64(v61, v44, v33);
    *(void *)&v49[v48] = v46;
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = v59;
    sub_251F35CF0();
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v50, v62);
  }
  return result;
}

void sub_251C77884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2533AC870](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_251C7792C(a1, a3, "Received new alarm %s", (uint64_t)&unk_27026DE28, (uint64_t)&unk_269BA10E8, (void (*)(uint64_t))sub_251C7D4D0);
  }
}

uint64_t sub_251C7792C(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v57 = a5;
  long long v58 = a6;
  uint64_t v56 = a4;
  uint64_t v8 = v6;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  unsigned __int8 v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  id v59 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v65 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_251F350A0();
  __swift_project_value_buffer(v15, (uint64_t)qword_269B9DEE0);
  uint64_t v16 = sub_251F34650();
  uint64_t v64 = &v51;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  uint64_t v20 = sub_251F35080();
  os_log_type_t v21 = sub_251F35FD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v53 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v54 = v6;
    uint64_t v25 = v24;
    uint64_t v67 = v24;
    uint64_t v52 = a3;
    *(_DWORD *)uint64_t v23 = 136315138;
    int v55 = (uint64_t *)a2;
    uint64_t v26 = sub_251F34620();
    uint64_t v66 = sub_251A00E84(v26, v27, &v67);
    a2 = (uint64_t)v55;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    _os_log_impl(&dword_2519F3000, v20, v21, v52, v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v25;
    uint64_t v8 = v54;
    MEMORY[0x2533AC760](v28, -1, -1);
    uint64_t v29 = v23;
    a1 = v53;
    MEMORY[0x2533AC760](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }

  uint64_t result = sub_251C7D008(a1, a2, MEMORY[0x263F55CB0], &qword_269BA0F90);
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v65, 1, 1, v32);
    uint64_t v33 = sub_251F34DA0();
    int v55 = &v51;
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(void *)(v34 + 64);
    MEMORY[0x270FA5388](v33);
    uint64_t v36 = (char *)&v51 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v64 = *(uint64_t **)(v34 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v64)(v36, a2, v33);
    sub_251F35C80();
    swift_bridgeObjectRetain();
    id v37 = v8;
    uint64_t v38 = sub_251F35C70();
    uint64_t v39 = a2;
    unint64_t v40 = (*(unsigned __int8 *)(v34 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = MEMORY[0x263F8F500];
    *(void *)(v41 + 16) = v38;
    *(void *)(v41 + 24) = v42;
    *(unsigned char *)(v41 + 32) = 0;
    *(void *)(v41 + 40) = v31;
    *(void *)(v41 + 48) = v37;
    unint64_t v43 = v41 + v40;
    uint64_t v44 = v39;
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v43, v36, v33);
    sub_251ACBB48(v65, v57, v41);
    uint64_t v45 = swift_release();
    MEMORY[0x270FA5388](v45);
    *(&v51 - 2) = v39;
    uint64_t v46 = sub_251A52940(v58, (uint64_t)(&v51 - 4), v31);
    swift_bridgeObjectRelease();
    if (qword_26B21E180 != -1) {
      swift_once();
    }
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
    __swift_project_value_buffer(v47, (uint64_t)qword_26B21E350);
    uint64_t v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
    id v49 = v61;
    ((void (*)(char *, uint64_t, uint64_t))v64)(v61, v44, v33);
    *(void *)&v49[v48] = v46;
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = v59;
    sub_251F35CF0();
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v50, v62);
  }
  return result;
}

uint64_t sub_251C77F84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  id v49 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v47 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v52 = (uint64_t)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_269B9DEE0);
  uint64_t v11 = sub_251F34650();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  uint64_t v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FD0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v43[1] = v43;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v45 = v2;
    uint64_t v20 = v19;
    uint64_t v54 = v19;
    uint64_t v44 = a1;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v46 = (void (*)(char *, uint64_t, uint64_t))a2;
    uint64_t v21 = sub_251F34620();
    uint64_t v53 = sub_251A00E84(v21, v22, &v54);
    a2 = (uint64_t)v46;
    a1 = v44;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _os_log_impl(&dword_2519F3000, v15, v16, "Received alarm removal %s", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    uint64_t v3 = v45;
    MEMORY[0x2533AC760](v23, -1, -1);
    MEMORY[0x2533AC760](v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  uint64_t result = sub_251C7D008(a1, a2, MEMORY[0x263F55CB0], &qword_269BA0F90);
  if (result)
  {
    uint64_t v25 = result;
    uint64_t v26 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v52, 1, 1, v26);
    uint64_t v27 = sub_251F34DA0();
    uint64_t v45 = v43;
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void *)(v28 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v30 = (char *)v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v46(v30, a2, v27);
    sub_251F35C80();
    swift_bridgeObjectRetain();
    id v31 = v3;
    uint64_t v32 = sub_251F35C70();
    uint64_t v33 = a2;
    unint64_t v34 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = MEMORY[0x263F8F500];
    *(void *)(v35 + 16) = v32;
    *(void *)(v35 + 24) = v36;
    *(unsigned char *)(v35 + 32) = 1;
    *(void *)(v35 + 40) = v25;
    *(void *)(v35 + 48) = v31;
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v35 + v34, v30, v27);
    sub_251ACBB48(v52, (uint64_t)&unk_269BA10E0, v35);
    uint64_t v37 = swift_release();
    MEMORY[0x270FA5388](v37);
    v43[-2] = v33;
    uint64_t v38 = sub_251A52940((void (*)(uint64_t))sub_251C7DDE0, (uint64_t)&v43[-4], v25);
    swift_bridgeObjectRelease();
    if (qword_26B21E180 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
    __swift_project_value_buffer(v39, (uint64_t)qword_26B21E350);
    uint64_t v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
    uint64_t v41 = v49;
    v46(v49, v33, v27);
    *(void *)&v41[v40] = v38;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = v47;
    sub_251F35CF0();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v42, v50);
  }
  return result;
}

void sub_251C785F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2533AC870](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_251C7792C(a1, a3, "Received updated alarm %s", (uint64_t)&unk_27026DD88, (uint64_t)&unk_269BA10D0, (void (*)(uint64_t))sub_251C7DDE0);
  }
}

void sub_251C7869C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(unsigned char *, char *), uint64_t a8)
{
  uint64_t v15 = a2 + 16;
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x2533AC870](v15);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    sub_251C78744(a1, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_251C78744(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(unsigned char *, char *), uint64_t a7)
{
  uint64_t v38 = a6;
  uint64_t v39 = a7;
  uint64_t v36 = a5;
  uint64_t v8 = v7;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v14;
  uint64_t v15 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v33 = sub_251F34650();
  uint64_t v16 = *(void *)(v33 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v33);
  unint64_t v34 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v16 + 16))();
  uint64_t v32 = sub_251F34DA0();
  uint64_t v18 = *(void *)(v32 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v32);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v18 + 16))(v20, a3);
  sub_251A1A4EC(a2, (uint64_t)v40);
  sub_251F35C80();
  id v30 = v8;
  id v31 = a4;
  uint64_t v21 = sub_251F35C70();
  unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v23 = (v17 + *(unsigned __int8 *)(v18 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = MEMORY[0x263F8F500];
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v27;
  *((void *)v26 + 4) = v30;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v26[v22], v34, v33);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v26[v23], v20, v32);
  *(void *)&v26[v24] = v31;
  v38(v40, &v26[v25]);
  *(void *)&v26[(v25 + 47) & 0xFFFFFFFFFFFFFFF8] = ObjectType;
  sub_251ACBB48((uint64_t)v35, v39, (uint64_t)v26);
  return swift_release();
}

void sub_251C78A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(unsigned char *, char *), uint64_t a8)
{
  uint64_t v14 = a2 + 16;
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x2533AC870](v14);
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    sub_251C78B0C(a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_251C78B0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(unsigned char *, char *), uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v31 = a4;
  uint64_t v7 = v6;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v30 = v13;
  uint64_t v14 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a2, v15);
  sub_251A1A4EC(a1, (uint64_t)v35);
  sub_251F35C80();
  id v19 = v7;
  id v29 = a3;
  uint64_t v20 = sub_251F35C70();
  unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (char *)swift_allocObject();
  uint64_t v25 = MEMORY[0x263F8F500];
  *((void *)v24 + 2) = v20;
  *((void *)v24 + 3) = v25;
  *((void *)v24 + 4) = v19;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v24[v21], v18, v15);
  v33(v35, &v24[v22]);
  uint64_t v26 = (uint64_t)v30;
  *(void *)&v24[v23] = v29;
  *(void *)&v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8] = ObjectType;
  sub_251ACBB48(v26, v34, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_251C78D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  void v8[4] = a6;
  long long v8[2] = a4;
  v8[7] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v8[8] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v8[9] = v9;
  v8[10] = *(void *)(v9 - 8);
  v8[11] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  sub_251F35C80();
  v8[15] = sub_251F35C70();
  uint64_t v12 = sub_251F35C00();
  v8[16] = v12;
  v8[17] = v11;
  return MEMORY[0x270FA2498](sub_251C78EFC, v12, v11);
}

uint64_t sub_251C78EFC()
{
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_269B9DEE0);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "Received timer CanDispatchDidUpdate change", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];

  char v7 = sub_251C7D118(v6, v5);
  if (v7 == 2
    || (char v8 = v7, (v9 = objc_msgSend((id)v0[5], sel_siriEndpointProfile)) != 0)
    && (v10 = v9, unsigned __int8 v11 = objc_msgSend(v9, sel_isNeedsOnboarding), v10, (v11 & 1) != 0))
  {
    uint64_t v12 = (void *)swift_task_alloc();
    v0[19] = (uint64_t)v12;
    void *v12 = v0;
    v12[1] = sub_251C79244;
    uint64_t v13 = v0[5];
    uint64_t v14 = v0[6];
    return sub_251C7C040(v14, v13);
  }
  else
  {
    uint64_t v16 = (void *)swift_task_alloc();
    v0[18] = (uint64_t)v16;
    *uint64_t v16 = v0;
    v16[1] = sub_251C79124;
    uint64_t v17 = v0[4];
    return sub_251C750A4(v17, v8 & 1, 2);
  }
}

uint64_t sub_251C79124()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return MEMORY[0x270FA2498](sub_251C7DDD4, v3, v2);
}

uint64_t sub_251C79244(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 160) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_251C793B0;
  uint64_t v6 = *(void *)(v3 + 32);
  return sub_251C750A4(v6, a1 & 1, 2);
}

uint64_t sub_251C793B0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return MEMORY[0x270FA2498](sub_251C7DDD4, v3, v2);
}

uint64_t sub_251C794D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v7[6] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v7[7] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v7[8] = v8;
  v7[9] = *(void *)(v8 - 8);
  v7[10] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v7[11] = v9;
  v7[12] = *(void *)(v9 - 8);
  v7[13] = swift_task_alloc();
  sub_251F35C80();
  v7[14] = sub_251F35C70();
  uint64_t v11 = sub_251F35C00();
  v7[15] = v11;
  v7[16] = v10;
  return MEMORY[0x270FA2498](sub_251C7965C, v11, v10);
}

uint64_t sub_251C7965C()
{
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_269B9DEE0);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "Received timer state reset change", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251C797AC;
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  return sub_251C7C040(v7, v6);
}

uint64_t sub_251C797AC(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 144) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_251C79918;
  uint64_t v6 = *(void *)(v3 + 24);
  return sub_251C750A4(v6, a1 & 1, 2);
}

uint64_t sub_251C79918()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x270FA2498](sub_251C7DDD0, v3, v2);
}

uint64_t sub_251C79A38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_251F34DA0();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, a2);
  uint64_t v15 = sub_251F34D20();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251D9F27C();
  return sub_251E7239C((uint64_t)v9, (uint64_t)v13, (uint64_t)v17, v5, v6, a3);
}

uint64_t sub_251C79C14@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_251F34DA0();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, a2);
  sub_251E3E7B8((uint64_t)v9, (uint64_t)v13, v5, v6, a3);
  uint64_t v15 = type metadata accessor for StaticAlarm();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 0, 1, v15);
}

uint64_t sub_251C79DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  void v8[4] = a6;
  long long v8[2] = a4;
  v8[7] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v8[8] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v8[9] = v9;
  v8[10] = *(void *)(v9 - 8);
  v8[11] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  sub_251F35C80();
  v8[15] = sub_251F35C70();
  uint64_t v12 = sub_251F35C00();
  v8[16] = v12;
  v8[17] = v11;
  return MEMORY[0x270FA2498](sub_251C79F6C, v12, v11);
}

uint64_t sub_251C79F6C()
{
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_269B9DEE0);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "Received alarm CanDispatchDidUpdate change", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];

  char v7 = sub_251C7D118(v6, v5);
  if (v7 == 2
    || (char v8 = v7, (v9 = objc_msgSend((id)v0[5], sel_siriEndpointProfile)) != 0)
    && (v10 = v9, unsigned __int8 v11 = objc_msgSend(v9, sel_isNeedsOnboarding), v10, (v11 & 1) != 0))
  {
    uint64_t v12 = (void *)swift_task_alloc();
    v0[19] = (uint64_t)v12;
    void *v12 = v0;
    v12[1] = sub_251C7A4C8;
    uint64_t v13 = v0[5];
    uint64_t v14 = v0[6];
    return sub_251C7C43C(v14, v13);
  }
  else
  {
    uint64_t v16 = (void *)swift_task_alloc();
    v0[18] = (uint64_t)v16;
    *uint64_t v16 = v0;
    v16[1] = sub_251C7A194;
    uint64_t v17 = v0[4];
    return sub_251C750A4(v17, 2, v8 & 1);
  }
}

uint64_t sub_251C7A194()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return MEMORY[0x270FA2498](sub_251C7A2B4, v3, v2);
}

uint64_t sub_251C7A2B4()
{
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v14 = v0[14];
  uint64_t v15 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = (uint64_t *)v0[8];
  uint64_t v13 = v0[4];
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)qword_26B21E350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_251F38650;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v10 + v9, v13, v7);
  *uint64_t v5 = v10;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_251C7A4C8(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 160) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_251C793B0;
  uint64_t v6 = *(void *)(v3 + 32);
  return sub_251C750A4(v6, 2, a1 & 1);
}

uint64_t sub_251C7A634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v7[6] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v7[7] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v7[8] = v8;
  v7[9] = *(void *)(v8 - 8);
  v7[10] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v7[11] = v9;
  v7[12] = *(void *)(v9 - 8);
  v7[13] = swift_task_alloc();
  sub_251F35C80();
  v7[14] = sub_251F35C70();
  uint64_t v11 = sub_251F35C00();
  v7[15] = v11;
  v7[16] = v10;
  return MEMORY[0x270FA2498](sub_251C7A7C0, v11, v10);
}

uint64_t sub_251C7A7C0()
{
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_269B9DEE0);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "Received alarm state reset change", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251C7A910;
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  return sub_251C7C43C(v7, v6);
}

uint64_t sub_251C7A910(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 144) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_251C7AA7C;
  uint64_t v6 = *(void *)(v3 + 24);
  return sub_251C750A4(v6, 2, a1 & 1);
}

uint64_t sub_251C7AA7C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x270FA2498](sub_251C7AB9C, v3, v2);
}

uint64_t sub_251C7AB9C()
{
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[10];
  uint64_t v14 = v0[13];
  uint64_t v15 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = (uint64_t *)v0[7];
  uint64_t v13 = v0[3];
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)qword_26B21E350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_251F38650;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v10 + v9, v13, v7);
  *uint64_t v5 = v10;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void sub_251C7ADB0()
{
}

void sub_251C7ADC4(unint64_t a1)
{
  uint64_t v3 = MEMORY[0x2533AC870](v1 + 56);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251F350A0();
    __swift_project_value_buffer(v5, (uint64_t)qword_269B9DEE0);
    uint64_t v6 = sub_251F35080();
    os_log_type_t v7 = sub_251F35FD0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v15 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      sub_251A00E84(0xD000000000000010, a1, &v15);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v6, v7, "cancel %s fetch", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v9, -1, -1);
      MEMORY[0x2533AC760](v8, -1, -1);
    }

    objc_msgSend(v4, sel_cancel);
    swift_unknownObjectWeakAssign();
  }
  else
  {
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_251F350A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_269B9DEE0);
    oslog = sub_251F35080();
    os_log_type_t v11 = sub_251F35FD0();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v15 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      sub_251A00E84(0xD000000000000010, a1, &v15);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, oslog, v11, "no %s fetch in flight", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v13, -1, -1);
      MEMORY[0x2533AC760](v12, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_251C7B0DC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_251ECDCD8();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_251C7B158(v6);
  return sub_251F36500();
}

void sub_251C7B158(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_251F36AA0();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_146;
    }
    if (v3) {
      sub_251C7B940(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_154;
  }
  uint64_t v6 = v4;
  unint64_t v106 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    uint64_t v113 = MEMORY[0x263F8EE78];
    uint64_t v111 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_110:
      if (v13 >= 2)
      {
        uint64_t v96 = *v106;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_141;
          }
          if (!v96) {
            goto LABEL_153;
          }
          uint64_t v98 = (uint64_t)v9;
          uint64_t v99 = *(void *)&v9[16 * v97 + 32];
          uint64_t v100 = *(void *)&v9[16 * v13 + 24];
          sub_251C7BA34((id *)(v96 + 8 * v99), (id *)(v96 + 8 * *(void *)&v9[16 * v13 + 16]), v96 + 8 * v100, v111);
          if (v1) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_142;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v101 = (char *)v98;
          }
          else {
            uint64_t v101 = sub_251ECDC38(v98);
          }
          if (v97 >= *((void *)v101 + 2)) {
            goto LABEL_143;
          }
          uint64_t v102 = &v101[16 * v97 + 32];
          *(void *)uint64_t v102 = v99;
          *((void *)v102 + 1) = v100;
          unint64_t v103 = *((void *)v101 + 2);
          if (v13 > v103) {
            goto LABEL_144;
          }
          uint64_t v104 = v101;
          memmove(&v101[16 * v13 + 16], &v101[16 * v13 + 32], 16 * (v103 - v13));
          uint64_t v9 = v104;
          *((void *)v104 + 2) = v103 - 1;
          unint64_t v13 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_123:
      swift_bridgeObjectRelease();
      *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_251F35AE0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    uint64_t v8 = sub_251F35B50();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    uint64_t v111 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v113 = v8;
  }
  uint64_t v108 = v6;
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v107 = *a1 - 8;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  uint64_t v12 = &selRef_unsignedIntegerValue;
  uint64_t v110 = v3;
  uint64_t v112 = *a1;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 >= v3) {
      goto LABEL_42;
    }
    uint64_t v15 = v9;
    uint64_t v16 = *(void **)(v11 + 8 * v14);
    id v17 = *(id *)(v11 + 8 * v10);
    id v18 = v16;
    if (![v17 v12[1]]) {
      break;
    }
    unsigned int v19 = [v18 v12[1]];

    int v20 = v19 ^ 1;
    uint64_t v12 = &selRef_unsignedIntegerValue;
    uint64_t v21 = v14 + 2;
    uint64_t v11 = v112;
    if (v14 + 2 < v110) {
      goto LABEL_23;
    }
LABEL_30:
    uint64_t v9 = v15;
    uint64_t v10 = v21;
    if (v20) {
      goto LABEL_31;
    }
LABEL_42:
    uint64_t v33 = v110;
    if (v10 < v110)
    {
      if (__OFSUB__(v10, v14)) {
        goto LABEL_145;
      }
      if (v10 - v14 < v108)
      {
        if (__OFADD__(v14, v108)) {
          goto LABEL_147;
        }
        if (v14 + v108 < v110) {
          uint64_t v33 = v14 + v108;
        }
        if (v33 < v14)
        {
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (v10 != v33)
        {
          uint64_t v109 = v14;
          uint64_t v105 = v9;
          uint64_t v34 = v107 + 8 * v10;
          do
          {
            uint64_t v35 = v33;
            uint64_t v36 = *(void **)(v11 + 8 * v10);
            uint64_t v37 = v109;
            uint64_t v38 = v34;
            while (1)
            {
              uint64_t v39 = *(void **)v38;
              id v40 = v36;
              id v41 = v39;
              if (![v40 v12[1]])
              {

                uint64_t v11 = v112;
                goto LABEL_52;
              }
              unsigned __int8 v42 = [v41 v12[1]];

              if (v42) {
                break;
              }
              uint64_t v11 = v112;
              if (!v112) {
                goto LABEL_150;
              }
              unint64_t v43 = *(void **)v38;
              uint64_t v36 = *(void **)(v38 + 8);
              *(void *)uint64_t v38 = v36;
              *(void *)(v38 + 8) = v43;
              v38 -= 8;
              ++v37;
              uint64_t v12 = &selRef_unsignedIntegerValue;
              if (v10 == v37) {
                goto LABEL_52;
              }
            }
            uint64_t v11 = v112;
            uint64_t v12 = &selRef_unsignedIntegerValue;
LABEL_52:
            ++v10;
            v34 += 8;
            uint64_t v33 = v35;
          }
          while (v10 != v35);
          uint64_t v10 = v35;
          uint64_t v9 = v105;
          uint64_t v14 = v109;
        }
      }
    }
    if (v10 < v14) {
      goto LABEL_140;
    }
    uint64_t v44 = v9;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v9 = v44;
    }
    else {
      uint64_t v9 = sub_251ECD5C4(0, *((void *)v44 + 2) + 1, 1, v44);
    }
    unint64_t v46 = *((void *)v9 + 2);
    unint64_t v45 = *((void *)v9 + 3);
    unint64_t v13 = v46 + 1;
    uint64_t v11 = v112;
    if (v46 >= v45 >> 1)
    {
      uint64_t v95 = sub_251ECD5C4((char *)(v45 > 1), v46 + 1, 1, v9);
      uint64_t v11 = v112;
      uint64_t v9 = v95;
    }
    *((void *)v9 + 2) = v13;
    uint64_t v47 = v9 + 32;
    uint64_t v48 = &v9[16 * v46 + 32];
    *(void *)uint64_t v48 = v14;
    *((void *)v48 + 1) = v10;
    if (v46)
    {
      while (1)
      {
        unint64_t v49 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v54 = &v47[16 * v13];
          uint64_t v55 = *((void *)v54 - 8);
          uint64_t v56 = *((void *)v54 - 7);
          BOOL v60 = __OFSUB__(v56, v55);
          uint64_t v57 = v56 - v55;
          if (v60) {
            goto LABEL_129;
          }
          uint64_t v59 = *((void *)v54 - 6);
          uint64_t v58 = *((void *)v54 - 5);
          BOOL v60 = __OFSUB__(v58, v59);
          uint64_t v52 = v58 - v59;
          char v53 = v60;
          if (v60) {
            goto LABEL_130;
          }
          unint64_t v61 = v13 - 2;
          uint64_t v62 = &v47[16 * v13 - 32];
          uint64_t v64 = *(void *)v62;
          uint64_t v63 = *((void *)v62 + 1);
          BOOL v60 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          if (v60) {
            goto LABEL_132;
          }
          BOOL v60 = __OFADD__(v52, v65);
          uint64_t v66 = v52 + v65;
          if (v60) {
            goto LABEL_135;
          }
          if (v66 >= v57)
          {
            uint64_t v84 = &v47[16 * v49];
            uint64_t v86 = *(void *)v84;
            uint64_t v85 = *((void *)v84 + 1);
            BOOL v60 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            if (v60) {
              goto LABEL_139;
            }
            BOOL v77 = v52 < v87;
            goto LABEL_98;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v78 = *((void *)v9 + 4);
            uint64_t v79 = *((void *)v9 + 5);
            BOOL v60 = __OFSUB__(v79, v78);
            uint64_t v71 = v79 - v78;
            char v72 = v60;
            goto LABEL_92;
          }
          uint64_t v51 = *((void *)v9 + 4);
          uint64_t v50 = *((void *)v9 + 5);
          BOOL v60 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          char v53 = v60;
        }
        if (v53) {
          goto LABEL_131;
        }
        unint64_t v61 = v13 - 2;
        uint64_t v67 = &v47[16 * v13 - 32];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v70 = __OFSUB__(v68, v69);
        uint64_t v71 = v68 - v69;
        char v72 = v70;
        if (v70) {
          goto LABEL_134;
        }
        unint64_t v73 = &v47[16 * v49];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v60 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v60) {
          goto LABEL_137;
        }
        if (__OFADD__(v71, v76)) {
          goto LABEL_138;
        }
        if (v71 + v76 >= v52)
        {
          BOOL v77 = v52 < v76;
LABEL_98:
          if (v77) {
            unint64_t v49 = v61;
          }
          goto LABEL_100;
        }
LABEL_92:
        if (v72) {
          goto LABEL_133;
        }
        uint64_t v80 = &v47[16 * v49];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v60 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v60) {
          goto LABEL_136;
        }
        if (v83 < v71) {
          goto LABEL_14;
        }
LABEL_100:
        unint64_t v88 = v49 - 1;
        if (v49 - 1 >= v13)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v11) {
          goto LABEL_151;
        }
        uint64_t v89 = v9;
        uint64_t v90 = &v47[16 * v88];
        uint64_t v91 = *(void *)v90;
        uint64_t v92 = &v47[16 * v49];
        uint64_t v93 = *((void *)v92 + 1);
        sub_251C7BA34((id *)(v11 + 8 * *(void *)v90), (id *)(v11 + 8 * *(void *)v92), v11 + 8 * v93, v111);
        if (v1) {
          goto LABEL_123;
        }
        if (v93 < v91) {
          goto LABEL_126;
        }
        if (v49 > *((void *)v89 + 2)) {
          goto LABEL_127;
        }
        *(void *)uint64_t v90 = v91;
        *(void *)&v47[16 * v88 + 8] = v93;
        unint64_t v94 = *((void *)v89 + 2);
        if (v49 >= v94) {
          goto LABEL_128;
        }
        unint64_t v13 = v94 - 1;
        memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
        uint64_t v9 = v89;
        *((void *)v89 + 2) = v94 - 1;
        uint64_t v11 = v112;
        if (v94 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v3 = v110;
    uint64_t v12 = &selRef_unsignedIntegerValue;
    if (v10 >= v110) {
      goto LABEL_110;
    }
  }

  uint64_t v21 = v14 + 2;
  if (v14 + 2 >= v110)
  {
    uint64_t v10 = v14 + 2;
    uint64_t v9 = v15;
    uint64_t v11 = v112;
    goto LABEL_42;
  }
  int v20 = 0;
  uint64_t v11 = v112;
LABEL_23:
  while (2)
  {
    unint64_t v23 = *(void **)(v11 + 8 * v10);
    id v24 = *(id *)(v11 + 8 * v21);
    id v25 = v23;
    if (![v24 v12[1]])
    {

      if (v20)
      {
        uint64_t v9 = v15;
        uint64_t v11 = v112;
        if (v21 < v14) {
          goto LABEL_149;
        }
LABEL_34:
        if (v14 < v21)
        {
          uint64_t v28 = (uint64_t *)(v107 + 8 * v21);
          uint64_t v29 = v21;
          uint64_t v30 = v14;
          uint64_t v31 = (uint64_t *)(v11 + 8 * v14);
          do
          {
            if (v30 != --v29)
            {
              if (!v11) {
                goto LABEL_152;
              }
              uint64_t v32 = *v31;
              *uint64_t v31 = *v28;
              *uint64_t v28 = v32;
            }
            ++v30;
            --v28;
            ++v31;
          }
          while (v30 < v29);
        }
        uint64_t v10 = v21;
        goto LABEL_42;
      }
      goto LABEL_22;
    }
    unsigned int v26 = [v25 v12[1]];

    BOOL v27 = v20 == v26;
    uint64_t v12 = &selRef_unsignedIntegerValue;
    if (!v27)
    {
LABEL_22:
      uint64_t v22 = v21 + 1;
      uint64_t v10 = v21;
      uint64_t v21 = v22;
      uint64_t v11 = v112;
      if (v22 >= v110)
      {
        uint64_t v21 = v22;
        goto LABEL_30;
      }
      continue;
    }
    break;
  }
  uint64_t v9 = v15;
  uint64_t v11 = v112;
  uint64_t v10 = v21;
  if (!v20) {
    goto LABEL_42;
  }
LABEL_31:
  if (v21 >= v14) {
    goto LABEL_34;
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  sub_251F36670();
  __break(1u);
}

void sub_251C7B940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v9 = v6;
    while (1)
    {
      uint64_t v10 = *(void **)v9;
      id v11 = v7;
      id v12 = v10;
      if (!objc_msgSend(v11, sel_isControllable))
      {

LABEL_5:
        ++v4;
        v6 += 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_6;
      }
      unsigned __int8 v13 = objc_msgSend(v12, sel_isControllable);

      if (v13) {
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      uint64_t v14 = *(void **)v9;
      uint64_t v7 = *(void **)(v9 + 8);
      *(void *)uint64_t v9 = v7;
      *(void *)(v9 + 8) = v14;
      v9 -= 8;
      if (v4 == ++v8) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_251C7BA34(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v36 = __src;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v35 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_52;
    }
    if (a4 != a2 || &a2[v12] <= a4) {
      memmove(a4, a2, 8 * v12);
    }
    unint64_t v23 = &a4[v12];
    uint64_t v34 = (char *)v23;
    uint64_t v36 = v5;
    if (v6 >= v5 || v10 < 8)
    {
LABEL_51:
      sub_251ECD7AC(&v36, &v35, &v34);
      return 1;
    }
    id v24 = (id *)(a3 - 8);
    id v25 = v5;
    uint64_t v32 = v6;
    while (1)
    {
      unsigned int v26 = v24 + 1;
      BOOL v27 = *--v25;
      id v28 = *(v23 - 1);
      id v29 = v27;
      if (objc_msgSend(v28, sel_isControllable))
      {
        unsigned __int8 v30 = objc_msgSend(v29, sel_isControllable);

        if ((v30 & 1) == 0)
        {
          if (v26 != v5 || v24 >= v5) {
            id *v24 = *v25;
          }
          uint64_t v36 = v25;
          if (v25 <= v32) {
            goto LABEL_51;
          }
          goto LABEL_48;
        }
      }
      else
      {
      }
      uint64_t v34 = (char *)(v23 - 1);
      if (v26 < v23 || v24 >= v23 || v26 != v23) {
        id *v24 = *(v23 - 1);
      }
      id v25 = v5;
      --v23;
      if (v5 <= v32) {
        goto LABEL_51;
      }
LABEL_48:
      --v24;
      uint64_t v5 = v25;
      if (v23 <= a4) {
        goto LABEL_51;
      }
    }
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4) {
      memmove(a4, __src, 8 * v9);
    }
    unsigned __int8 v13 = &a4[v9];
    uint64_t v34 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      uint64_t v14 = &selRef_unsignedIntegerValue;
      uint64_t v15 = a4;
      while (1)
      {
        uint64_t v16 = v6;
        id v17 = *v15;
        id v18 = *v5;
        id v19 = v17;
        if (![v18 v14[1]]) {
          break;
        }
        unsigned __int8 v20 = [v19 v14[1]];

        if (v20) {
          goto LABEL_20;
        }
        uint64_t v21 = v5 + 1;
        uint64_t v22 = v16;
        if (v16 >= v5 && v16 < v21)
        {
          uint64_t v14 = &selRef_unsignedIntegerValue;
          if (v16 != v5) {
            *uint64_t v16 = *v5;
          }
          goto LABEL_24;
        }
        *uint64_t v16 = *v5;
LABEL_23:
        uint64_t v14 = &selRef_unsignedIntegerValue;
LABEL_24:
        uint64_t v6 = v22 + 1;
        if (v15 < v13)
        {
          uint64_t v5 = v21;
          if ((unint64_t)v21 < a3) {
            continue;
          }
        }
        uint64_t v36 = v6;
        goto LABEL_51;
      }

LABEL_20:
      uint64_t v22 = v16;
      if (v16 != v15) {
        *uint64_t v16 = *v15;
      }
      uint64_t v35 = ++v15;
      uint64_t v21 = v5;
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_52:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251C7BD6C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = result;
    sub_251A1A4EC(a2, (uint64_t)v10);
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
    if (swift_dynamicCast())
    {
      sub_251A1A444(v8, (uint64_t)v11);
      uint64_t v4 = v12;
      uint64_t v5 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 72))(v3, v4, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    }
    else
    {
      uint64_t v9 = 0;
      memset(v8, 0, sizeof(v8));
      sub_251A1B064((uint64_t)v8, &qword_269B9DF68);
    }
    sub_251A1A4EC(a2, (uint64_t)v11);
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v10[3] = swift_getObjectType();
    v10[0] = v3;
    (*(void (**)(void *, uint64_t, uint64_t))(v7 + 56))(v10, v6, v7);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  }
  return result;
}

uint64_t sub_251C7BEC4(uint64_t a1)
{
  return a1;
}

void sub_251C7BF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  if (a7)
  {
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_251A1A4DC(a15);
    sub_251A1A4DC(a16);
  }
}

uint64_t sub_251C7C040(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v2[9] = swift_task_alloc();
  sub_251F35C80();
  v2[10] = sub_251F35C70();
  uint64_t v4 = sub_251F35C00();
  v2[11] = v4;
  v2[12] = v3;
  return MEMORY[0x270FA2498](sub_251C7C108, v4, v3);
}

uint64_t sub_251C7C108()
{
  id v1 = objc_msgSend(*(id *)(v0 + 64), sel_siriEndpointProfile);
  if (v1 && (uint64_t v2 = v1, v3 = objc_msgSend(v1, sel_isNeedsOnboarding), v2, v3))
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v4(1);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 56);
    sub_251F35CB0();
    uint64_t v8 = sub_251F35CD0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
    sub_251A1A4EC(v7, v0 + 16);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = 0;
    sub_251A1A444((long long *)(v0 + 16), v9 + 32);
    uint64_t v10 = sub_251B40140(v6, (uint64_t)&unk_269BA1090, v9);
    *(void *)(v0 + 104) = v10;
    sub_251A1B064(v6, &qword_26B220BB0);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_251C7C2F8;
    uint64_t v12 = MEMORY[0x263F8D4F8];
    return MEMORY[0x270FA1FD0](v0 + 120, v10, v12);
  }
}

uint64_t sub_251C7C2F8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x270FA2498](sub_251C7DDDC, v3, v2);
}

uint64_t sub_251C7C43C(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v2[9] = swift_task_alloc();
  sub_251F35C80();
  v2[10] = sub_251F35C70();
  uint64_t v4 = sub_251F35C00();
  v2[11] = v4;
  v2[12] = v3;
  return MEMORY[0x270FA2498](sub_251C7C504, v4, v3);
}

uint64_t sub_251C7C504()
{
  id v1 = objc_msgSend(*(id *)(v0 + 64), sel_siriEndpointProfile);
  if (v1 && (uint64_t v2 = v1, v3 = objc_msgSend(v1, sel_isNeedsOnboarding), v2, v3))
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v4(1);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 56);
    sub_251F35CB0();
    uint64_t v8 = sub_251F35CD0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
    sub_251A1A4EC(v7, v0 + 16);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = 0;
    sub_251A1A444((long long *)(v0 + 16), v9 + 32);
    uint64_t v10 = sub_251B40140(v6, (uint64_t)&unk_269BA1080, v9);
    *(void *)(v0 + 104) = v10;
    sub_251A1B064(v6, &qword_26B220BB0);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_251C7C6F4;
    uint64_t v12 = MEMORY[0x263F8D4F8];
    return MEMORY[0x270FA1FD0](v0 + 120, v10, v12);
  }
}

uint64_t sub_251C7C6F4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x270FA2498](sub_251C7C838, v3, v2);
}

uint64_t sub_251C7C838()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 120);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

unint64_t sub_251C7C8A8()
{
  unint64_t result = qword_269BA1068;
  if (!qword_269BA1068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269BA1068);
  }
  return result;
}

uint64_t sub_251C7C900(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1 + 32;
  v4[1] = sub_251AB3DD4;
  return MEMORY[0x270FA2498](sub_251C766D0, 0, 0);
}

uint64_t sub_251C7C9B4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1 + 32;
  v4[1] = sub_251AB3DD4;
  return MEMORY[0x270FA2498](sub_251C76788, 0, 0);
}

uint64_t sub_251C7CA64()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251C7CAA0(uint64_t a1)
{
  return sub_251C7CD7C(a1, (uint64_t)&unk_27026DCE8, (uint64_t)sub_251A1A444, (uint64_t)&unk_269BA10B0, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t))sub_251C78A6C);
}

uint64_t sub_251C7CAEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (uint64_t)v1 + v6;
  uint64_t v12 = *(void *)((char *)v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_251AB3DD4;
  return sub_251C7A634(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_251C7CD34(uint64_t a1)
{
  return sub_251C7CD7C(a1, (uint64_t)&unk_27026DD38, (uint64_t)sub_251A1A444, (uint64_t)&unk_269BA10C0, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t))sub_251C7869C);
}

uint64_t sub_251C7CD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return a5(a1, *(void *)(v5 + 16), v5 + 24, v5 + v12, *(void *)(v5 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a3, a4);
}

uint64_t sub_251C7CE48(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34650() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = *(void *)((char *)v1 + v9);
  uint64_t v14 = (uint64_t)v1 + v8;
  uint64_t v15 = (uint64_t)v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_251AB3DD4;
  return sub_251C79DD8(a1, v10, v11, v12, (uint64_t)v1 + v5, v14, v13, v15);
}

uint64_t sub_251C7D008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_251F34640();
  if (!v5)
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_11:
    sub_251A1B064((uint64_t)&v11, &qword_26B21E190);
    return 0;
  }
  uint64_t v6 = v5;
  sub_251F356F0();
  sub_251F363A0();
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_2519FEA74((uint64_t)v10), (v8 & 1) != 0))
  {
    sub_251A0D51C(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_251A1A624((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(a4);
  if (swift_dynamicCast())
  {
    uint64_t result = v10[0];
    if (*(void *)(v10[0] + 16)) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_251C7D118(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_251F34640();
  if (!v3)
  {
    long long v13 = 0u;
    long long v14 = 0u;
LABEL_12:
    sub_251A1B064((uint64_t)&v13, &qword_26B21E190);
    return 2;
  }
  uint64_t v4 = v3;
  sub_251F356F0();
  sub_251F363A0();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_2519FEA74((uint64_t)v12), (v6 & 1) != 0))
  {
    sub_251A0D51C(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_251A1A624((uint64_t)v12);
  if (!*((void *)&v14 + 1)) {
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10C8);
  if ((swift_dynamicCast() & 1) == 0) {
    return 2;
  }
  uint64_t v7 = v12[0];
  if (!*(void *)(v12[0] + 16) || (unint64_t v8 = sub_2519FE584(a2), (v9 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 + 56) + v8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_251C7D254(uint64_t a1)
{
  return sub_251C7DD24(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_251C785F4);
}

uint64_t sub_251C7D270(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v10 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *long long v11 = v2;
  v11[1] = sub_251AB3DD4;
  return sub_251AEDC3C(a1, v5, v6, v7, v8, v9, v10);
}

void sub_251C7D384(uint64_t a1)
{
}

uint64_t sub_251C7D3A0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v10 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *long long v11 = v2;
  v11[1] = sub_251AB3A34;
  return sub_251AEDC3C(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_251C7D4B4(uint64_t a1)
{
  return sub_251C7DD24(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_251C77884);
}

uint64_t sub_251C7D4D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251C79C14(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251C7D4F0(uint64_t a1)
{
  return sub_251C7DD24(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_251C770DC);
}

uint64_t sub_251C7D50C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v10 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *long long v11 = v2;
  v11[1] = sub_251AB3DD4;
  return sub_251AEE424(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_251C7D61C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251C79A38(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251C7D63C(uint64_t a1)
{
  return sub_251C7CD7C(a1, (uint64_t)&unk_27026DEC8, (uint64_t)sub_251A1A444, (uint64_t)&unk_269BA1108, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t))sub_251C78A6C);
}

uint64_t sub_251C7D688(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (uint64_t)v1 + v6;
  uint64_t v12 = *(void *)((char *)v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_251AB3DD4;
  return sub_251C794D0(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_251C7D7E0(uint64_t a1)
{
  return sub_251C7CD7C(a1, (uint64_t)&unk_27026DF18, (uint64_t)sub_251A1A444, (uint64_t)&unk_269BA1118, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t))sub_251C7869C);
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v1 = sub_251F34650();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v13 = v3 | v8 | 7;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  __swift_destroy_boxed_opaque_existential_0(v0 + v11);
  return MEMORY[0x270FA0238](v0, ((v11 + 47) & 0xFFFFFFFFFFFFFFF8) + 8, v13);
}

uint64_t sub_251C7D9C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34650() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = *(void *)((char *)v1 + v9);
  uint64_t v14 = (uint64_t)v1 + v8;
  uint64_t v15 = (uint64_t)v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_251AB3DD4;
  return sub_251C78D68(a1, v10, v11, v12, (uint64_t)v1 + v5, v14, v13, v15);
}

uint64_t sub_251C7DB88(uint64_t a1)
{
  return sub_251C7DD24(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_251C77184);
}

void sub_251C7DBA8(uint64_t a1)
{
}

void sub_251C7DBC0(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(sub_251F34DA0() - 8);
  sub_251C769F4(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251C7DD0C(uint64_t a1)
{
  return sub_251C7DD24(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_251C7694C);
}

uint64_t sub_251C7DD24(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5, v6);
}

uint64_t sub_251C7DDB0(id *a1)
{
  return sub_251C76820(a1) & 1;
}

uint64_t sub_251C7DDE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251C7D4D0(a1, a2);
}

uint64_t sub_251C7DDF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251C7D61C(a1, a2);
}

uint64_t StaticHome.home.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251C7DE30, 0, 0);
}

uint64_t sub_251C7DE30()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C7DEC8, v2, v1);
}

uint64_t sub_251C7DEC8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C7DF60, 0, 0);
}

uint64_t sub_251C7DF60()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C7DFEC, v2, v1);
}

uint64_t sub_251C7DFEC()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C7E060, 0, 0);
}

uint64_t sub_251C7E060()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C7E0F4, v2, v1);
}

uint64_t sub_251C7E0F4()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  id v3 = objc_msgSend(v2, sel_homeFor_, v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

uint64_t StaticHome.actionSetsSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.cameraProfilesSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.residentsSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

void sub_251C7E220(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v66 = a2;
  id v5 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_251F34D80();

  id v6 = objc_msgSend(a1, sel_name);
  uint64_t v7 = sub_251F356F0();
  uint64_t v9 = v8;

  uint64_t v10 = type metadata accessor for StaticHome();
  uint64_t v11 = (uint64_t *)(a3 + *(int *)(v10 + 20));
  *uint64_t v11 = v7;
  v11[1] = v9;
  id v12 = a1;
  uint64_t v65 = (uint64_t (**)(char *, uint64_t, uint64_t))objc_msgSend(v12, sel_roomForEntireHome);
  uint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v14 = sub_2519F9A68(MEMORY[0x263F8EE78]);
  unint64_t v15 = sub_2519F9800(v13);
  unint64_t v16 = sub_2519F9AA4(v13);
  unint64_t v17 = sub_2519F9AE0(v13);
  unint64_t v18 = sub_2519F9B1C(v13);
  unint64_t v19 = sub_2519F9B58(v13);
  uint64_t v20 = v13;
  uint64_t v21 = (int *)v10;
  unint64_t v22 = sub_2519F9B94(v20);
  sub_251CFC418(v12, v65, v14, v15, v16, v17, v18, v19, a3 + *(int *)(v10 + 24), v22);
  id v23 = objc_msgSend(v12, sel_currentUser);
  uint64_t v24 = a3 + v21[7];
  id v25 = v12;
  sub_251D7561C(v23, v25, v24);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  BOOL v27 = *(uint64_t **)(*(void *)(v26 - 8) + 64);
  MEMORY[0x270FA5388](v26 - 8);
  id v28 = (char *)&v60 - (((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v64 = v25;
  id v29 = objc_msgSend(v25, sel_uniqueIdentifier);
  sub_251F34D80();

  uint64_t v30 = sub_251F34DA0();
  uint64_t v65 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v30 - 8);
  uint64_t v31 = v65[7];
  uint64_t v32 = 1;
  uint64_t v33 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v31)(v28, 0, 1, v30);
  uint64_t v62 = v27;
  MEMORY[0x270FA5388](v33);
  id v34 = objc_msgSend(v66, sel_currentHome);
  if (v34)
  {
    uint64_t v35 = v34;
    id v36 = objc_msgSend(v34, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v32 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v31)(v28, v32, 1, v30);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v63 = &v60;
  uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
  id v40 = (char *)&v60 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (uint64_t)&v40[*(int *)(v38 + 56)];
  sub_251A1B128((uint64_t)v28, (uint64_t)v40, &qword_26B21FF90);
  sub_251A1B128((uint64_t)v28, v41, &qword_26B21FF90);
  unsigned __int8 v42 = v65[6];
  uint64_t v43 = v42(v40, 1, v30);
  if (v43 == 1)
  {
    sub_251A1B064((uint64_t)v28, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v28, &qword_26B21FF90);
    int v44 = v42((char *)v41, 1, v30);
    if (v44 == 1) {
      unint64_t v45 = &qword_26B21FF90;
    }
    else {
      unint64_t v45 = &qword_26B21E6B8;
    }
    if (v44 == 1) {
      char v46 = -1;
    }
    else {
      char v46 = 0;
    }
  }
  else
  {
    unint64_t v61 = v28;
    MEMORY[0x270FA5388](v43);
    uint64_t v48 = (char *)&v60 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128((uint64_t)v40, (uint64_t)v48, &qword_26B21FF90);
    uint64_t v49 = v42((char *)v41, 1, v30);
    if (v49 == 1)
    {
      sub_251A1B064((uint64_t)v28, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v61, &qword_26B21FF90);
      ((void (*)(char *, uint64_t))v65[1])(v48, v30);
      unint64_t v45 = &qword_26B21E6B8;
      char v46 = 0;
    }
    else
    {
      uint64_t v62 = &v60;
      uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))v65;
      MEMORY[0x270FA5388](v49);
      uint64_t v52 = (char *)&v60 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
      v50[4](v52, v41, v30);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v46 = sub_251F35650();
      uint64_t v60 = (uint64_t)&v60;
      char v53 = v50[1];
      ((void (*)(char *, uint64_t))v53)(v52, v30);
      unint64_t v45 = &qword_26B21FF90;
      sub_251A1B064((uint64_t)v28, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v61, &qword_26B21FF90);
      ((void (*)(char *, uint64_t))v53)(v48, v30);
    }
  }
  sub_251A1B064((uint64_t)v40, v45);
  *(unsigned char *)(a3 + v21[8]) = v46 & 1;
  id v54 = v64;
  sub_251C809F0(v54, (char *)&v67);
  int v55 = v67;
  *(unsigned char *)(a3 + v21[9]) = v67;
  *(unsigned char *)(a3 + v21[10]) = ((v55 - 1) < 2) & ~v46;
  *(void *)(a3 + v21[11]) = sub_251B1D3D4(0xD000000000000023, 0x8000000251F6F650);
  *(void *)(a3 + v21[12]) = HMHome.sectionsSortOrder.getter();
  *(void *)(a3 + v21[13]) = sub_251B1D3D4(0xD000000000000028, 0x8000000251F6F680);
  *(void *)(a3 + v21[14]) = sub_251B1D3D4(0xD000000000000026, 0x8000000251F6F6B0);
  *(void *)(a3 + v21[15]) = sub_251B1D3D4(0xD000000000000025, 0x8000000251F6F6E0);
  unint64_t v56 = sub_251D238A0();
  if (!v56)
  {
    unint64_t v56 = sub_251D23FF4();
    if (!v56) {
      unint64_t v56 = MEMORY[0x263F8EE78];
    }
  }
  *(void *)(a3 + v21[16]) = v56;
  *(unsigned char *)(a3 + v21[17]) = objc_msgSend(v54, sel_isAutomaticSoftwareUpdateEnabled);
  *(void *)(a3 + v21[18]) = sub_251C9D288(v54);
  *(unsigned char *)(a3 + v21[19]) = objc_msgSend(v54, sel_supportsResidentSelection);
  uint64_t v57 = a3 + v21[20];
  id v58 = objc_msgSend(v54, sel_userSelectedPreferredResident);
  if (v58)
  {
    StaticResident.init(with:home:)(v58, v54, v57);
  }
  else
  {
    uint64_t v59 = type metadata accessor for StaticResident();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v57, 1, 1, v59);
  }
}

uint64_t StaticHome.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticHome.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticHome() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticHome.defaultRoom.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticHome();
  return sub_251C84CE8(v1 + *(int *)(v3 + 24), a1, type metadata accessor for StaticRoom);
}

uint64_t StaticHome.currentStaticUser.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticHome();
  return sub_251C84CE8(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))type metadata accessor for StaticUser);
}

uint64_t StaticHome.isUserAtHome.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticHome() + 32));
}

uint64_t StaticHome.remoteAccessState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticHome();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t StaticHome.nonResponsiveType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticHome();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t StaticHome.sidebarRoomsSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.sectionsSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.servicesSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.colorPickerFavorites.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.supportAutomaticSoftwareUpdate.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticHome() + 68));
}

uint64_t StaticHome.supportsResidentSelection.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticHome() + 76));
}

uint64_t StaticHome.userSelectedResident.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticHome();
  return sub_251A1B128(v1 + *(int *)(v3 + 80), a1, &qword_26B21FDA0);
}

uint64_t StaticHome.init(id:name:defaultRoom:currentStaticUser:isUserAtHome:remoteAccessState:nonResponsiveType:sidebarRoomsSortOrder:sectionsSortOrder:actionSetsSortOrder:servicesSortOrder:cameraProfilesSortOrder:colorPickerFavorites:supportAutomaticSoftwareUpdate:residentsSortOrder:supportsResidentSelection:userSelectedResident:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19)
{
  char v25 = *a7;
  char v26 = *a8;
  uint64_t v27 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a9, a1, v27);
  id v28 = (int *)type metadata accessor for StaticHome();
  id v29 = (void *)(a9 + v28[5]);
  void *v29 = a2;
  v29[1] = a3;
  sub_251C849E4(a4, a9 + v28[6], type metadata accessor for StaticRoom);
  sub_251C849E4(a5, a9 + v28[7], (uint64_t (*)(void))type metadata accessor for StaticUser);
  *(unsigned char *)(a9 + v28[8]) = a6;
  *(unsigned char *)(a9 + v28[9]) = v25;
  *(unsigned char *)(a9 + v28[10]) = v26;
  *(void *)(a9 + v28[11]) = a10;
  *(void *)(a9 + v28[12]) = a11;
  *(void *)(a9 + v28[13]) = a12;
  *(void *)(a9 + v28[14]) = a13;
  *(void *)(a9 + v28[15]) = a14;
  *(void *)(a9 + v28[18]) = a17;
  *(void *)(a9 + v28[16]) = a15;
  *(unsigned char *)(a9 + v28[17]) = a16;
  *(unsigned char *)(a9 + v28[19]) = a18;
  uint64_t v30 = a9 + v28[20];
  return sub_251C8497C(a19, v30);
}

BOOL static StaticHome.RemoteAccessState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL static StaticHome.NonResponsiveType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticHome.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v22 = type metadata accessor for StaticResident();
  uint64_t v4 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v21 = (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v9 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  StaticRoom.hash(into:)(a1);
  sub_251F35610();
  type metadata accessor for StaticUser();
  sub_251F357B0();
  sub_251F35610();
  sub_251F36CB0();
  sub_251F36CB0();
  sub_251F36CC0();
  sub_251F36CB0();
  sub_251F36CB0();
  uint64_t v10 = *(void *)(v1 + v9[11]);
  swift_bridgeObjectRetain();
  sub_251A41A94((uint64_t)a1, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v2 + v9[12]);
  sub_251F36CB0();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = v11 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      v13 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = *(void *)(v2 + v9[13]);
  swift_bridgeObjectRetain();
  sub_251A41A94((uint64_t)a1, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v2 + v9[14]);
  swift_bridgeObjectRetain();
  sub_251A41A94((uint64_t)a1, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v2 + v9[15]);
  swift_bridgeObjectRetain();
  sub_251A41A94((uint64_t)a1, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v2 + v9[16]);
  swift_bridgeObjectRetain();
  sub_251A427D4((uint64_t)a1, v17);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  uint64_t v18 = *(void *)(v2 + v9[18]);
  sub_251F36CC0();
  if (v18)
  {
    swift_bridgeObjectRetain();
    sub_251A41A94((uint64_t)a1, v18);
    swift_bridgeObjectRelease();
  }
  sub_251F36CC0();
  sub_251A1B128(v2 + v9[20], (uint64_t)v8, &qword_26B21FDA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v22) == 1) {
    return sub_251F36CC0();
  }
  uint64_t v20 = v21;
  sub_251C849E4((uint64_t)v8, v21, (uint64_t (*)(void))type metadata accessor for StaticResident);
  sub_251F36CC0();
  StaticResident.hash(into:)((uint64_t)a1);
  return sub_251C84D50(v20, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

unint64_t sub_251C7F2FC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x52746C7561666564;
      break;
    case 3:
    case 5:
    case 6:
    case 8:
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x7441726573557369;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0xD000000000000019;
      break;
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251C7F4D4()
{
  return sub_251C7F2FC(*v0);
}

uint64_t sub_251C7F4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C87F74(a1, a2);
  *a3 = result;
  return result;
}

void sub_251C7F504(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_251C7F510(uint64_t a1)
{
  unint64_t v2 = sub_251C84A4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C7F54C(uint64_t a1)
{
  unint64_t v2 = sub_251C84A4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticHome.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1150);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C84A4C();
  sub_251F36DA0();
  LOBYTE(v12) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticHome();
    LOBYTE(v12) = 1;
    sub_251F369D0();
    LOBYTE(v12) = 2;
    type metadata accessor for StaticRoom(0);
    sub_251C85098(&qword_269B9E098, (void (*)(uint64_t))type metadata accessor for StaticRoom);
    sub_251F36A20();
    LOBYTE(v12) = 3;
    type metadata accessor for StaticUser();
    sub_251C85098(&qword_269B9E0E0, (void (*)(uint64_t))type metadata accessor for StaticUser);
    sub_251F36A20();
    LOBYTE(v12) = 4;
    sub_251F369E0();
    LOBYTE(v12) = *(unsigned char *)(v3 + v9[9]);
    char v13 = 5;
    sub_251C84AA0();
    sub_251F36A20();
    LOBYTE(v12) = *(unsigned char *)(v3 + v9[10]);
    char v13 = 6;
    sub_251C84AF4();
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v9[11]);
    char v13 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
    sub_251AB8C90(&qword_269B9D7E8, &qword_26B21E348);
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v9[12]);
    char v13 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
    sub_251C84C84(&qword_269BA1170);
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v9[13]);
    char v13 = 9;
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v9[14]);
    char v13 = 10;
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v9[15]);
    char v13 = 11;
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v9[16]);
    char v13 = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1178);
    sub_251C84B48(&qword_269BA1180, &qword_269BA1188);
    sub_251F36A20();
    LOBYTE(v12) = 13;
    sub_251F369E0();
    uint64_t v12 = *(void *)(v3 + v9[18]);
    char v13 = 14;
    sub_251F36970();
    LOBYTE(v12) = 15;
    sub_251F369E0();
    LOBYTE(v12) = 16;
    type metadata accessor for StaticResident();
    sub_251C85098(&qword_269B9E128, (void (*)(uint64_t))type metadata accessor for StaticResident);
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticHome.hashValue.getter()
{
  sub_251F36CA0();
  StaticHome.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticHome.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v55 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticUser();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticRoom(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1190);
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = (int *)type metadata accessor for StaticHome();
  MEMORY[0x270FA5388](v62);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_251C84A4C();
  uint64_t v60 = v13;
  uint64_t v17 = v61;
  sub_251F36D90();
  if (v17)
  {
    unint64_t v61 = v17;
    LODWORD(v60) = 0;
    unsigned int v18 = 0;
  }
  else
  {
    unint64_t v61 = v10;
    uint64_t v52 = v5;
    char v53 = v7;
    id v54 = v15;
    uint64_t v19 = sub_251F34DA0();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    LOBYTE(v63) = 0;
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251F36880();
    id v23 = v54;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v54, v22, v19);
    LOBYTE(v63) = 1;
    uint64_t v24 = sub_251F36830();
    char v25 = v62;
    char v26 = (uint64_t *)&v23[v62[5]];
    *char v26 = v24;
    v26[1] = v27;
    LOBYTE(v63) = 2;
    sub_251C85098(&qword_269B9E1B8, (void (*)(uint64_t))type metadata accessor for StaticRoom);
    id v28 = v23;
    uint64_t v29 = (uint64_t)v61;
    sub_251F36880();
    sub_251C849E4(v29, (uint64_t)&v28[v25[6]], type metadata accessor for StaticRoom);
    LOBYTE(v63) = 3;
    sub_251C85098(&qword_269B9E1E8, (void (*)(uint64_t))type metadata accessor for StaticUser);
    uint64_t v30 = (uint64_t)v53;
    sub_251F36880();
    sub_251C849E4(v30, (uint64_t)&v28[v25[7]], (uint64_t (*)(void))type metadata accessor for StaticUser);
    LOBYTE(v63) = 4;
    v28[v25[8]] = sub_251F36840() & 1;
    char v64 = 5;
    sub_251C84BDC();
    sub_251F36880();
    v28[v25[9]] = v63;
    char v64 = 6;
    sub_251C84C30();
    sub_251F36880();
    v28[v25[10]] = v63;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
    char v64 = 7;
    sub_251AB8C90(&qword_269B9D7F8, &qword_269B9CC80);
    sub_251F36880();
    *(void *)&v28[v25[11]] = v63;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
    char v64 = 8;
    sub_251C84C84(&qword_269BA11A8);
    sub_251F36880();
    unint64_t v61 = 0;
    *(void *)&v28[v62[12]] = v63;
    char v64 = 9;
    unsigned __int8 v42 = v61;
    sub_251F36880();
    unint64_t v61 = v42;
    if (v42)
    {
      (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
      LODWORD(v60) = 0;
      unsigned int v18 = 399;
      uint64_t v15 = v54;
    }
    else
    {
      *(void *)&v54[v62[13]] = v63;
      char v64 = 10;
      uint64_t v43 = v61;
      sub_251F36880();
      unint64_t v61 = v43;
      if (v43)
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
        LODWORD(v60) = 0;
        unsigned int v18 = 911;
        uint64_t v15 = v54;
      }
      else
      {
        *(void *)&v54[v62[14]] = v63;
        char v64 = 11;
        int v44 = v61;
        sub_251F36880();
        unint64_t v61 = v44;
        if (v44)
        {
          (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
          LODWORD(v60) = 0;
          unsigned int v18 = 1935;
          uint64_t v15 = v54;
        }
        else
        {
          *(void *)&v54[v62[15]] = v63;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1178);
          char v64 = 12;
          sub_251C84B48(&qword_269BA11B0, &qword_269BA11B8);
          unint64_t v45 = v61;
          sub_251F36880();
          unint64_t v61 = v45;
          if (!v45)
          {
            *(void *)&v54[v62[16]] = v63;
            LOBYTE(v63) = 13;
            char v46 = v61;
            char v47 = sub_251F36840();
            unint64_t v61 = v46;
            if (v46)
            {
              (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
              LODWORD(v58) = 0;
            }
            else
            {
              v54[v62[17]] = v47 & 1;
              char v64 = 14;
              sub_251F367D0();
              unint64_t v61 = 0;
              *(void *)&v54[v62[18]] = v63;
              LOBYTE(v63) = 15;
              uint64_t v48 = v61;
              char v49 = sub_251F36840();
              unint64_t v61 = v48;
              if (!v48)
              {
                v54[v62[19]] = v49 & 1;
                type metadata accessor for StaticResident();
                LOBYTE(v63) = 16;
                sub_251C85098(&qword_269B9E218, (void (*)(uint64_t))type metadata accessor for StaticResident);
                uint64_t v50 = v61;
                sub_251F367D0();
                unint64_t v61 = v50;
                if (!v50)
                {
                  (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
                  uint64_t v51 = (uint64_t)v54;
                  sub_251C8497C(v55, (uint64_t)&v54[v62[20]]);
                  sub_251C84CE8(v51, v56, (uint64_t (*)(void))type metadata accessor for StaticHome);
                  __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
                  return sub_251C84D50(v51, (uint64_t (*)(void))type metadata accessor for StaticHome);
                }
              }
              (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
              LODWORD(v58) = 1;
            }
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
            LOBYTE(v40) = 1;
            int v32 = 1;
            int v33 = 1;
            int v34 = 1;
            int v35 = 1;
            int v36 = 1;
            int v37 = 1;
            LODWORD(v60) = 1;
            int v38 = 1;
            uint64_t v15 = v54;
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
          unsigned int v18 = 3983;
          LODWORD(v60) = 1;
          uint64_t v15 = v54;
        }
      }
    }
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
  int v32 = (v18 >> 2) & 1;
  int v33 = (v18 >> 3) & 1;
  int v34 = (v18 >> 7) & 1;
  int v35 = (v18 >> 8) & 1;
  int v36 = (v18 >> 9) & 1;
  int v37 = (v18 >> 10) & 1;
  if ((v18 & 1) == 0)
  {
    LODWORD(v58) = 0;
    int v38 = 0;
    if ((v18 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  int v38 = 0;
  LODWORD(v58) = 0;
  int v40 = (v18 >> 1) & 1;
LABEL_17:
  uint64_t v41 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v15, v41);
  if ((v40 & 1) == 0)
  {
LABEL_6:
    uint64_t v39 = v62;
    if (v32) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v39 = v62;
  uint64_t result = swift_bridgeObjectRelease();
  if (v32)
  {
LABEL_7:
    uint64_t result = sub_251C84D50((uint64_t)&v15[v39[6]], type metadata accessor for StaticRoom);
    if ((v33 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  if (!v33)
  {
LABEL_8:
    if (v34) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = sub_251C84D50((uint64_t)&v15[v39[7]], (uint64_t (*)(void))type metadata accessor for StaticUser);
  if (v34)
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v35 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  if (!v35)
  {
LABEL_10:
    if (v36) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = swift_bridgeObjectRelease();
  if (v36)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v37 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  if (!v37)
  {
LABEL_12:
    if (v60) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = swift_bridgeObjectRelease();
  if (v60)
  {
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v38 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_26:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v58 & 1) == 0) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_25:
  if (v38) {
    goto LABEL_26;
  }
LABEL_14:
  if (!v58) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251C80940()
{
  sub_251F36CA0();
  StaticHome.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251C80984()
{
  sub_251F36CA0();
  StaticHome.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251C809C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticHome.init(from:)(a1, a2);
}

uint64_t sub_251C809D8(void *a1)
{
  return StaticHome.encode(to:)(a1);
}

uint64_t sub_251C809F0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_residentDevices);
  sub_251C88890();
  unint64_t v5 = sub_251F35AC0();

  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    char v13 = a2;
    if (v6) {
      goto LABEL_3;
    }
LABEL_17:
    char v9 = 1;
LABEL_18:

    uint64_t result = swift_bridgeObjectRelease_n();
    *char v13 = v9;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_251F366C0();
  uint64_t v6 = result;
  char v13 = a2;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    char v9 = 1;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x2533AB3A0](v8, v5);
      }
      else {
        id v10 = *(id *)(v5 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      if (objc_msgSend(v10, sel_isEnabled))
      {
        if (v9 == 3)
        {

          char v9 = 3;
        }
        else
        {
          unsigned __int8 v12 = objc_msgSend(v11, sel_status);

          if (v12) {
            char v9 = 3;
          }
          else {
            char v9 = 2;
          }
        }
      }
      else
      {
      }
      ++v8;
    }
    while (v6 != v8);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t StaticHome.RemoteAccessState.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251C80BA0(uint64_t a1)
{
  unint64_t v2 = sub_251C84E04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C80BDC(uint64_t a1)
{
  unint64_t v2 = sub_251C84E04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C80C18(uint64_t a1)
{
  unint64_t v2 = sub_251C84E58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C80C54(uint64_t a1)
{
  unint64_t v2 = sub_251C84E58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C80C90()
{
  uint64_t result = 0x746553746F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6261706143746F6ELL;
      break;
    case 2:
      uint64_t result = 0x656C6261706163;
      break;
    case 3:
      uint64_t result = 0x6C62616C69617661;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251C80D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C885AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C80D4C(uint64_t a1)
{
  unint64_t v2 = sub_251C84DB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C80D88(uint64_t a1)
{
  unint64_t v2 = sub_251C84DB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C80DC4(uint64_t a1)
{
  unint64_t v2 = sub_251C84EAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C80E00(uint64_t a1)
{
  unint64_t v2 = sub_251C84EAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C80E3C(uint64_t a1)
{
  unint64_t v2 = sub_251C84F00();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C80E78(uint64_t a1)
{
  unint64_t v2 = sub_251C84F00();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticHome.RemoteAccessState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA11C0);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA11C8);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  char v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA11D0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  id v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA11D8);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA11E0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C84DB0();
  sub_251F36DA0();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_251C84EAC();
      uint64_t v17 = v23;
      sub_251F36900();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_251C84E58();
      uint64_t v17 = v26;
      sub_251F36900();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_251C84E04();
      uint64_t v17 = v29;
      sub_251F36900();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_251C84F00();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t StaticHome.RemoteAccessState.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticHome.RemoteAccessState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1210);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1218);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  char v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1220);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1228);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1230);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_251C84DB0();
  uint64_t v19 = v52;
  sub_251F36D90();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  int v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  id v23 = v17;
  uint64_t v24 = sub_251F368E0();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_251F36490();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    void *v29 = &type metadata for StaticHome.RemoteAccessState;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_251C84EAC();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_251F36770();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_251C84E58();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_251F36770();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_251C84E04();
      uint64_t v37 = v52;
      sub_251F36770();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_0(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      int v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_251C84F00();
      uint64_t v26 = v52;
      sub_251F36770();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      int v38 = v47;
LABEL_19:
      *int v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v30);
}

uint64_t sub_251C81970@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticHome.RemoteAccessState.init(from:)(a1, a2);
}

uint64_t sub_251C81988(void *a1)
{
  return StaticHome.RemoteAccessState.encode(to:)(a1);
}

uint64_t StaticHome.NonResponsiveType.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251C819CC()
{
  if (*v0) {
    return 0x616C696176616E75;
  }
  else {
    return 0x6E6F707365726F6ELL;
  }
}

uint64_t sub_251C81A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C88778(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C81A3C(uint64_t a1)
{
  unint64_t v2 = sub_251C84F54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C81A78(uint64_t a1)
{
  unint64_t v2 = sub_251C84F54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C81AB4(uint64_t a1)
{
  unint64_t v2 = sub_251C84FFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C81AF0(uint64_t a1)
{
  unint64_t v2 = sub_251C84FFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C81B2C(uint64_t a1)
{
  unint64_t v2 = sub_251C84FA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C81B68(uint64_t a1)
{
  unint64_t v2 = sub_251C84FA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticHome.NonResponsiveType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1238);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1240);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1248);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C84F54();
  sub_251F36DA0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_251C84FA8();
    uint64_t v14 = v18;
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_251C84FFC();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t StaticHome.NonResponsiveType.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticHome.NonResponsiveType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1268);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1270);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1278);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C84F54();
  uint64_t v11 = v32;
  sub_251F36D90();
  if (v11) {
    goto LABEL_6;
  }
  char v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_251F36490();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *char v22 = &type metadata for StaticHome.NonResponsiveType;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_251C84FA8();
    uint64_t v18 = v14;
    sub_251F36770();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_251C84FFC();
    sub_251F36770();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  unsigned char *v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_251C822E8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticHome.NonResponsiveType.init(from:)(a1, a2);
}

uint64_t sub_251C82300(void *a1)
{
  return StaticHome.NonResponsiveType.encode(to:)(a1);
}

uint64_t StaticHome.set(colorPickerFavorites:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251C82338, 0, 0);
}

uint64_t sub_251C82338()
{
  *(void *)(v0 + 32) = sub_251F35C80();
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C823D0, v2, v1);
}

uint64_t sub_251C823D0()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C82468, 0, 0);
}

uint64_t sub_251C82468()
{
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C824F4, v2, v1);
}

uint64_t sub_251C824F4()
{
  swift_release();
  *(void *)(v0 + 56) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C82568, 0, 0);
}

uint64_t sub_251C82568()
{
  *(void *)(v0 + 64) = sub_251F34D50();
  *(void *)(v0 + 72) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C825FC, v2, v1);
}

uint64_t sub_251C825FC()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = (void *)v0[7];
  swift_release();
  v0[10] = objc_msgSend(v2, sel_homeFor_, v1);

  return MEMORY[0x270FA2498](sub_251C8268C, 0, 0);
}

uint64_t sub_251C8268C()
{
  uint64_t v1 = *(NSObject **)(v0 + 80);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    sub_251D24748(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B21F290);
    uint64_t v1 = sub_251F35080();
    os_log_type_t v4 = sub_251F35FB0();
    if (os_log_type_enabled(v1, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_2519F3000, v1, v4, "While trying to set color picker favorites, couldn't find HMHome", v5, 2u);
      MEMORY[0x2533AC760](v5, -1, -1);
    }
  }

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t StaticHome.turnOffManualSelectionMode()()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_251C827E4, 0, 0);
}

uint64_t sub_251C827E4()
{
  *(void *)(v0 + 128) = sub_251F35C80();
  *(void *)(v0 + 136) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8287C, v2, v1);
}

uint64_t sub_251C8287C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C82914, 0, 0);
}

uint64_t sub_251C82914()
{
  *(void *)(v0 + 144) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C829A0, v2, v1);
}

uint64_t sub_251C829A0()
{
  swift_release();
  *(void *)(v0 + 152) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C82A14, 0, 0);
}

uint64_t sub_251C82A14()
{
  *(void *)(v0 + 160) = sub_251F34D50();
  *(void *)(v0 + 168) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C82AA8, v2, v1);
}

uint64_t sub_251C82AA8()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = (void *)v0[19];
  swift_release();
  v0[22] = objc_msgSend(v2, sel_homeFor_, v1);

  return MEMORY[0x270FA2498](sub_251C82B38, 0, 0);
}

uint64_t sub_251C82B38()
{
  uint64_t v1 = (void *)v0[22];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_userSelectedPreferredResident);

    if (v2)
    {
      uint64_t v3 = v0 + 10;
      if (qword_26B21F2C0 != -1) {
        swift_once();
      }
      uint64_t v4 = (void *)v0[22];
      uint64_t v5 = sub_251F350A0();
      v0[23] = __swift_project_value_buffer(v5, (uint64_t)qword_26B21F290);
      id v6 = v4;
      uint64_t v7 = sub_251F35080();
      os_log_type_t v8 = sub_251F35FD0();
      BOOL v9 = os_log_type_enabled(v7, v8);
      uint64_t v10 = (void *)v0[22];
      if (v9)
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        char v12 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 138412290;
        v0[10] = v10;
        id v13 = v10;
        sub_251F361D0();
        void *v12 = v10;

        _os_log_impl(&dword_2519F3000, v7, v8, "turning off selectPreferredResident on %@", v11, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        uint64_t v14 = v12;
        uint64_t v3 = v0 + 10;
        MEMORY[0x2533AC760](v14, -1, -1);
        MEMORY[0x2533AC760](v11, -1, -1);
      }
      else
      {
      }
      uint64_t v24 = (void *)v0[22];
      v0[2] = v0;
      v0[3] = sub_251C82F84;
      uint64_t v25 = swift_continuation_init();
      v0[10] = MEMORY[0x263EF8330];
      v0[11] = 0x40000000;
      v0[12] = sub_251A5B804;
      v0[13] = &block_descriptor_9;
      v0[14] = v25;
      objc_msgSend(v24, sel_selectPreferredResident_completion_, 0, v3);
      return MEMORY[0x270FA23F0](v0 + 2);
    }
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_251F350A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_26B21F290);
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FD0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    char v16 = v0[22];
    if (v22)
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_2519F3000, v20, v21, "selectPreferredResident already nil", v23, 2u);
      MEMORY[0x2533AC760](v23, -1, -1);
    }
    else
    {

      char v16 = v20;
    }
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_251F350A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B21F290);
    char v16 = sub_251F35080();
    os_log_type_t v17 = sub_251F35FB0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_2519F3000, v16, v17, "turning off selectPreferredResident failed due to missing home", v18, 2u);
      MEMORY[0x2533AC760](v18, -1, -1);
    }
  }

  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_251C82F84()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    id v2 = sub_251C830F8;
  }
  else {
    id v2 = sub_251C83094;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251C83094()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251C830F8()
{
  uint64_t v1 = (void *)v0[22];
  swift_willThrow();
  id v2 = v1;
  uint64_t v3 = sub_251F35080();
  os_log_type_t v4 = sub_251F35FB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (void *)v0[22];
    id v6 = (uint8_t *)swift_slowAlloc();
    char v12 = (void *)swift_slowAlloc();
    *(_DWORD *)id v6 = 138412290;
    v0[10] = v5;
    id v7 = v5;
    sub_251F361D0();
    void *v12 = v5;

    _os_log_impl(&dword_2519F3000, v3, v4, "turning off selectPreferredResident failed on %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v12, -1, -1);
    MEMORY[0x2533AC760](v6, -1, -1);
  }
  else
  {
    os_log_type_t v8 = (void *)v0[22];
  }
  BOOL v9 = (void *)v0[22];
  swift_willThrow();

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t StaticHome.setAutomaticSoftwareUpdateEnabled(enabled:)(char a1)
{
  *(void *)(v2 + 136) = v1;
  *(unsigned char *)(v2 + 264) = a1;
  *(void *)(v2 + 144) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(void *)(v2 + 152) = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  *(void *)(v2 + 160) = v3;
  *(void *)(v2 + 168) = *(void *)(v3 - 8);
  *(void *)(v2 + 176) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C8339C, 0, 0);
}

uint64_t sub_251C8339C()
{
  *(void *)(v0 + 184) = sub_251F35C80();
  *(void *)(v0 + 192) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C83434, v2, v1);
}

uint64_t sub_251C83434()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C834CC, 0, 0);
}

uint64_t sub_251C834CC()
{
  *(void *)(v0 + 200) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C83558, v2, v1);
}

uint64_t sub_251C83558()
{
  swift_release();
  *(void *)(v0 + 208) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C835CC, 0, 0);
}

uint64_t sub_251C835CC()
{
  *(void *)(v0 + 216) = sub_251F34D50();
  *(void *)(v0 + 224) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C83664, v2, v1);
}

uint64_t sub_251C83664()
{
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = (void *)v0[26];
  swift_release();
  v0[29] = objc_msgSend(v2, sel_homeFor_, v1);

  return MEMORY[0x270FA2498](sub_251C836F4, 0, 0);
}

uint64_t sub_251C836F4()
{
  uint64_t v1 = *(void **)(v0 + 232);
  if (v1)
  {
    if (qword_26B21F2C0 != -1)
    {
      swift_once();
      uint64_t v1 = *(void **)(v0 + 232);
    }
    uint64_t v2 = sub_251F350A0();
    *(void *)(v0 + 240) = __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
    id v3 = v1;
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FD0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    id v7 = *(void **)(v0 + 232);
    if (v6)
    {
      int v8 = *(unsigned __int8 *)(v0 + 264);
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109378;
      *(_DWORD *)(v0 + 260) = v8;
      sub_251F361D0();
      *(_WORD *)(v9 + 8) = 2112;
      *(void *)(v0 + 128) = v7;
      id v11 = v7;
      sub_251F361D0();
      void *v10 = v7;

      _os_log_impl(&dword_2519F3000, v4, v5, "setAutomaticSoftwareUpdateEnabled to %{BOOL}d on %@", (uint8_t *)v9, 0x12u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v10, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }
    else
    {
    }
    uint64_t v18 = *(void **)(v0 + 232);
    uint64_t v19 = *(unsigned __int8 *)(v0 + 264);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_251C83A94;
    uint64_t v20 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x263EF8330];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_251A5B804;
    *(void *)(v0 + 104) = &block_descriptor_2;
    *(void *)(v0 + 112) = v20;
    objc_msgSend(v18, sel_updateAutomaticSoftwareUpdateEnabled_completionHandler_, v19, v0 + 80);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B21F290);
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FB0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_2519F3000, v13, v14, "setAutomaticSoftwareUpdateEnabled failed due to missing home", v15, 2u);
      MEMORY[0x2533AC760](v15, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    char v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_251C83A94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    uint64_t v2 = sub_251C83CCC;
  }
  else {
    uint64_t v2 = sub_251C83BA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251C83BA4()
{
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = (void *)v0[19];
  uint64_t v5 = v0[20];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v6, (uint64_t)qword_26B21FF20);
  *uint64_t v4 = v1;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251C83CCC()
{
  uint64_t v1 = *(void **)(v0 + 232);
  swift_willThrow();
  id v2 = v1;
  uint64_t v3 = sub_251F35080();
  os_log_type_t v4 = sub_251F35FB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void **)(v0 + 232);
    int v6 = *(unsigned __int8 *)(v0 + 264);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109378;
    *(_DWORD *)(v0 + 256) = v6;
    sub_251F361D0();
    *(_WORD *)(v7 + 8) = 2112;
    *(void *)(v0 + 120) = v5;
    id v8 = v5;
    sub_251F361D0();
    *uint64_t v13 = v5;

    _os_log_impl(&dword_2519F3000, v3, v4, "setAutomaticSoftwareUpdateEnabled to %{BOOL}d failed on %@", (uint8_t *)v7, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v13, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 232);
  }
  uint64_t v10 = *(void **)(v0 + 232);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  id v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_251C83EB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + *(int *)(type metadata accessor for StaticHome() + 20));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251C83F00()
{
  uint64_t v0 = type metadata accessor for StaticRoom(0);
  MEMORY[0x270FA5388](v0);
  id v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (int *)type metadata accessor for StaticHome();
  __swift_allocate_value_buffer((uint64_t)v3, qword_26B220D30);
  uint64_t v4 = __swift_project_value_buffer((uint64_t)v3, (uint64_t)qword_26B220D30);
  if (qword_26B21FD40 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)qword_26B220CF0);
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  if (qword_26B2200F8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v0, (uint64_t)qword_26B21FF58);
  sub_251C84CE8(v10, (uint64_t)v2, type metadata accessor for StaticRoom);
  if (qword_26B2201C8 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for StaticUser();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_26B220D58);
  sub_251C84CE8(v12, v4 + v3[7], (uint64_t (*)(void))type metadata accessor for StaticUser);
  uint64_t v13 = v4 + v3[20];
  uint64_t v14 = type metadata accessor for StaticResident();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v4, v9, v5);
  uint64_t v15 = (void *)(v4 + v3[5]);
  *uint64_t v15 = 0;
  v15[1] = 0xE000000000000000;
  uint64_t result = sub_251C849E4((uint64_t)v2, v4 + v3[6], type metadata accessor for StaticRoom);
  *(unsigned char *)(v4 + v3[8]) = 0;
  *(unsigned char *)(v4 + v3[9]) = 0;
  *(unsigned char *)(v4 + v3[10]) = 0;
  uint64_t v17 = MEMORY[0x263F8EE78];
  *(void *)(v4 + v3[11]) = MEMORY[0x263F8EE78];
  *(void *)(v4 + v3[12]) = v17;
  *(void *)(v4 + v3[13]) = v17;
  *(void *)(v4 + v3[14]) = v17;
  *(void *)(v4 + v3[15]) = v17;
  *(void *)(v4 + v3[18]) = 0;
  *(void *)(v4 + v3[16]) = v17;
  *(unsigned char *)(v4 + v3[17]) = 1;
  *(unsigned char *)(v4 + v3[19]) = 1;
  return result;
}

uint64_t sub_251C84258(uint64_t a1)
{
  return sub_251C84290(a1, qword_26B220CF0);
}

uint64_t sub_251C84274(uint64_t a1)
{
  return sub_251C84290(a1, qword_269BF3138);
}

uint64_t sub_251C84290(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_251F34DA0();
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  uint64_t v8 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v4, v7, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_251C843B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticResident();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E398);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = &v34[-v16];
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v34[-v18];
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v38 = v5;
  uint64_t v20 = (int *)type metadata accessor for StaticHome();
  uint64_t v21 = v20[5];
  uint64_t v22 = *(void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  BOOL v25 = v22 == *v24 && v23 == v24[1];
  if (v25 || (v26 = sub_251F36B10(), uint64_t result = 0, (v26 & 1) != 0))
  {
    if ((_s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0(a1 + v20[6], a2 + v20[6]) & 1) == 0
      || !_s13HomeDataModel10StaticUserV2eeoiySbAC_ACtFZ_0(a1 + v20[7], a2 + v20[7])
      || *(unsigned __int8 *)(a1 + v20[8]) != *(unsigned __int8 *)(a2 + v20[8])
      || *(unsigned __int8 *)(a1 + v20[9]) != *(unsigned __int8 *)(a2 + v20[9])
      || *(unsigned __int8 *)(a1 + v20[10]) != *(unsigned __int8 *)(a2 + v20[10])
      || (sub_251AB6424(*(void *)(a1 + v20[11]), *(void *)(a2 + v20[11])) & 1) == 0
      || (sub_251AB74BC(*(void **)(a1 + v20[12]), *(void **)(a2 + v20[12])) & 1) == 0
      || (sub_251AB6424(*(void *)(a1 + v20[13]), *(void *)(a2 + v20[13])) & 1) == 0
      || (sub_251AB6424(*(void *)(a1 + v20[14]), *(void *)(a2 + v20[14])) & 1) == 0
      || (sub_251AB6424(*(void *)(a1 + v20[15]), *(void *)(a2 + v20[15])) & 1) == 0
      || (sub_251AB7584(*(void *)(a1 + v20[16]), *(void *)(a2 + v20[16])) & 1) == 0
      || *(unsigned __int8 *)(a1 + v20[17]) != *(unsigned __int8 *)(a2 + v20[17]))
    {
      return 0;
    }
    uint64_t v28 = v20[18];
    uint64_t v29 = *(void *)(a1 + v28);
    uint64_t v30 = *(void *)(a2 + v28);
    uint64_t v37 = v29;
    if (v29)
    {
      if (!v30) {
        return 0;
      }
      uint64_t v36 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v35 = sub_251AB6424(v37, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        return 0;
      }
    }
    else if (v30)
    {
      return 0;
    }
    if (*(unsigned __int8 *)(a1 + v20[19]) == *(unsigned __int8 *)(a2 + v20[19]))
    {
      sub_251A1B128(a1 + v20[20], (uint64_t)v19, &qword_26B21FDA0);
      sub_251A1B128(a2 + v20[20], (uint64_t)v17, &qword_26B21FDA0);
      uint64_t v31 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_251A1B128((uint64_t)v19, (uint64_t)v10, &qword_26B21FDA0);
      sub_251A1B128((uint64_t)v17, v31, &qword_26B21FDA0);
      char v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      if (v32((uint64_t)v10, 1, v4) == 1)
      {
        sub_251A1B064((uint64_t)v17, &qword_26B21FDA0);
        sub_251A1B064((uint64_t)v19, &qword_26B21FDA0);
        if (v32(v31, 1, v4) == 1)
        {
          sub_251A1B064((uint64_t)v10, &qword_26B21FDA0);
          return 1;
        }
        goto LABEL_32;
      }
      sub_251A1B128((uint64_t)v10, (uint64_t)v14, &qword_26B21FDA0);
      if (v32(v31, 1, v4) == 1)
      {
        sub_251A1B064((uint64_t)v17, &qword_26B21FDA0);
        sub_251A1B064((uint64_t)v19, &qword_26B21FDA0);
        sub_251C84D50((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticResident);
LABEL_32:
        sub_251A1B064((uint64_t)v10, &qword_26B21E398);
        return 0;
      }
      sub_251C849E4(v31, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticResident);
      char v33 = _s13HomeDataModel14StaticResidentV2eeoiySbAC_ACtFZ_0((uint64_t)v14, (uint64_t)v7);
      sub_251C84D50((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticResident);
      sub_251A1B064((uint64_t)v17, &qword_26B21FDA0);
      sub_251A1B064((uint64_t)v19, &qword_26B21FDA0);
      sub_251C84D50((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticResident);
      sub_251A1B064((uint64_t)v10, &qword_26B21FDA0);
      if (v33) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StaticHome()
{
  uint64_t result = qword_26B220008;
  if (!qword_26B220008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251C8497C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C849E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_251C84A4C()
{
  unint64_t result = qword_269BA1158;
  if (!qword_269BA1158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1158);
  }
  return result;
}

unint64_t sub_251C84AA0()
{
  unint64_t result = qword_269BA1160;
  if (!qword_269BA1160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1160);
  }
  return result;
}

unint64_t sub_251C84AF4()
{
  unint64_t result = qword_269BA1168;
  if (!qword_269BA1168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1168);
  }
  return result;
}

uint64_t sub_251C84B48(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA1178);
    sub_251C85098(a2, (void (*)(uint64_t))type metadata accessor for ColorPickerFavorite);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251C84BDC()
{
  unint64_t result = qword_269BA1198;
  if (!qword_269BA1198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1198);
  }
  return result;
}

unint64_t sub_251C84C30()
{
  unint64_t result = qword_269BA11A0;
  if (!qword_269BA11A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA11A0);
  }
  return result;
}

uint64_t sub_251C84C84(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21EAB0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251C84CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C84D50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251C84DB0()
{
  unint64_t result = qword_269BA11E8;
  if (!qword_269BA11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA11E8);
  }
  return result;
}

unint64_t sub_251C84E04()
{
  unint64_t result = qword_269BA11F0;
  if (!qword_269BA11F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA11F0);
  }
  return result;
}

unint64_t sub_251C84E58()
{
  unint64_t result = qword_269BA11F8;
  if (!qword_269BA11F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA11F8);
  }
  return result;
}

unint64_t sub_251C84EAC()
{
  unint64_t result = qword_269BA1200;
  if (!qword_269BA1200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1200);
  }
  return result;
}

unint64_t sub_251C84F00()
{
  unint64_t result = qword_269BA1208;
  if (!qword_269BA1208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1208);
  }
  return result;
}

unint64_t sub_251C84F54()
{
  unint64_t result = qword_269BA1250;
  if (!qword_269BA1250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1250);
  }
  return result;
}

unint64_t sub_251C84FA8()
{
  unint64_t result = qword_269BA1258;
  if (!qword_269BA1258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1258);
  }
  return result;
}

unint64_t sub_251C84FFC()
{
  unint64_t result = qword_269BA1260;
  if (!qword_269BA1260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1260);
  }
  return result;
}

uint64_t sub_251C85050()
{
  return sub_251C85098(&qword_269BA1298, (void (*)(uint64_t))type metadata accessor for StaticHome);
}

uint64_t sub_251C85098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251C850E0()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

unint64_t sub_251C8510C()
{
  unint64_t result = qword_269BA12A0;
  if (!qword_269BA12A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12A0);
  }
  return result;
}

unint64_t sub_251C85164()
{
  unint64_t result = qword_269BA12A8;
  if (!qword_269BA12A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12A8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticHome(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v50 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v39 = (void *)(v50 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v68 = v7;
    v8(a1, a2, v7);
    uint64_t v9 = v8;
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = &a1[v10];
    uint64_t v13 = &a2[v10];
    uint64_t v14 = *((void *)v13 + 1);
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = v14;
    uint64_t v15 = &a1[v11];
    uint64_t v16 = &a2[v11];
    swift_bridgeObjectRetain();
    v9(v15, v16, v7);
    id v66 = v9;
    unsigned __int8 v67 = a1;
    uint64_t v17 = v9;
    uint64_t v18 = (int *)type metadata accessor for StaticRoom(0);
    uint64_t v19 = v18[5];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = &v16[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    v15[v18[6]] = v16[v18[6]];
    *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
    uint64_t v23 = v18[8];
    uint64_t v24 = &v15[v23];
    BOOL v25 = &v16[v23];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v24, v25, v7);
    *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
    *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
    *(void *)&v15[v18[11]] = *(void *)&v16[v18[11]];
    *(void *)&v15[v18[12]] = *(void *)&v16[v18[12]];
    *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
    *(void *)&v15[v18[14]] = *(void *)&v16[v18[14]];
    *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
    *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
    *(void *)&v15[v18[17]] = *(void *)&v16[v18[17]];
    *(void *)&v15[v18[18]] = *(void *)&v16[v18[18]];
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)v67 + v26;
    uint64_t v28 = &a2[v26];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = v7;
    v66(v27, v28, v7);
    uint64_t v30 = (int *)type metadata accessor for StaticUser();
    uint64_t v31 = v30[5];
    char v32 = &v27[v31];
    char v33 = &v28[v31];
    uint64_t v34 = *((void *)v33 + 1);
    *(void *)char v32 = *(void *)v33;
    *((void *)v32 + 1) = v34;
    uint64_t v35 = v30[6];
    uint64_t v36 = &v27[v35];
    uint64_t v37 = &v28[v35];
    swift_bridgeObjectRetain();
    uint64_t v38 = v29;
    uint64_t v39 = v67;
    v66(v36, v37, v38);
    v27[v30[7]] = v28[v30[7]];
    v27[v30[8]] = v28[v30[8]];
    uint64_t v40 = a3[9];
    *((unsigned char *)v67 + a3[8]) = a2[a3[8]];
    *((unsigned char *)v67 + v40) = a2[v40];
    uint64_t v41 = a3[11];
    *((unsigned char *)v67 + a3[10]) = a2[a3[10]];
    *(void *)((char *)v67 + v41) = *(void *)&a2[v41];
    uint64_t v42 = a3[13];
    *(void *)((char *)v67 + a3[12]) = *(void *)&a2[a3[12]];
    *(void *)((char *)v67 + v42) = *(void *)&a2[v42];
    uint64_t v43 = a3[15];
    *(void *)((char *)v67 + a3[14]) = *(void *)&a2[a3[14]];
    *(void *)((char *)v67 + v43) = *(void *)&a2[v43];
    uint64_t v44 = a3[17];
    *(void *)((char *)v67 + a3[16]) = *(void *)&a2[a3[16]];
    *((unsigned char *)v67 + v44) = a2[v44];
    uint64_t v45 = a3[19];
    *(void *)((char *)v67 + a3[18]) = *(void *)&a2[a3[18]];
    uint64_t v46 = a3[20];
    __dst = (char *)v67 + v46;
    char v47 = &a2[v46];
    *((unsigned char *)v67 + v45) = a2[v45];
    uint64_t v48 = (int *)type metadata accessor for StaticResident();
    uint64_t v63 = *((void *)v48 - 1);
    char v64 = *(unsigned int (**)(char *, uint64_t, int *))(v63 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v64(v47, 1, v48))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
      memcpy(__dst, v47, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      v66(__dst, v47, v68);
      uint64_t v51 = v48[5];
      uint64_t v52 = &__dst[v51];
      char v53 = &v47[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = v54;
      uint64_t v55 = v48[6];
      char v56 = &__dst[v55];
      uint64_t v57 = &v47[v55];
      uint64_t v58 = *((void *)v57 + 1);
      *(void *)char v56 = *(void *)v57;
      *((void *)v56 + 1) = v58;
      *(void *)&__dst[v48[7]] = *(void *)&v47[v48[7]];
      *(void *)&__dst[v48[8]] = *(void *)&v47[v48[8]];
      *(_WORD *)&__dst[v48[9]] = *(_WORD *)&v47[v48[9]];
      uint64_t v59 = v48[10];
      uint64_t v60 = &__dst[v59];
      unint64_t v61 = &v47[v59];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66(v60, v61, v68);
      (*(void (**)(char *, void, uint64_t, int *))(v63 + 56))(__dst, 0, 1, v48);
    }
  }
  return v39;
}

uint64_t destroy for StaticHome(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v13)((void *)(v4 - 8), a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  v13(v5, v4);
  uint64_t v6 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13(v5 + *(int *)(v6 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[7];
  v13(v7, v4);
  uint64_t v8 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v13(v7 + *(int *)(v8 + 24), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[20];
  uint64_t v10 = type metadata accessor for StaticResident();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10);
  if (!result)
  {
    v13(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v9 + *(int *)(v10 + 40);
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v12, v4);
  }
  return result;
}

uint64_t initializeWithCopy for StaticHome(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v64 = v6;
  v7(a1, a2, v6);
  uint64_t v8 = v7;
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v63 = a1;
  uint64_t v11 = (void *)(a1 + v9);
  uint64_t v12 = (void *)(a2 + v9);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a1 + v10;
  uint64_t v15 = a2 + v10;
  swift_bridgeObjectRetain();
  v8(v14, v15, v6);
  uint64_t v16 = v8;
  uint64_t v62 = v8;
  uint64_t v17 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = (void *)(v14 + v18);
  uint64_t v20 = (void *)(v15 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  *(unsigned char *)(v14 + v17[6]) = *(unsigned char *)(v15 + v17[6]);
  *(void *)(v14 + v17[7]) = *(void *)(v15 + v17[7]);
  uint64_t v22 = v17[8];
  uint64_t v23 = v14 + v22;
  uint64_t v24 = v15 + v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v23, v24, v6);
  *(void *)(v14 + v17[9]) = *(void *)(v15 + v17[9]);
  *(void *)(v14 + v17[10]) = *(void *)(v15 + v17[10]);
  *(void *)(v14 + v17[11]) = *(void *)(v15 + v17[11]);
  *(void *)(v14 + v17[12]) = *(void *)(v15 + v17[12]);
  *(void *)(v14 + v17[13]) = *(void *)(v15 + v17[13]);
  *(void *)(v14 + v17[14]) = *(void *)(v15 + v17[14]);
  *(void *)(v14 + v17[15]) = *(void *)(v15 + v17[15]);
  *(void *)(v14 + v17[16]) = *(void *)(v15 + v17[16]);
  *(void *)(v14 + v17[17]) = *(void *)(v15 + v17[17]);
  *(void *)(v14 + v17[18]) = *(void *)(v15 + v17[18]);
  uint64_t v25 = a3[7];
  uint64_t v26 = v63 + v25;
  uint64_t v27 = a2 + v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v6;
  v62(v26, v27, v6);
  uint64_t v29 = (int *)type metadata accessor for StaticUser();
  uint64_t v30 = v29[5];
  uint64_t v31 = (void *)(v26 + v30);
  char v32 = (void *)(v27 + v30);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = v29[6];
  uint64_t v35 = v26 + v34;
  uint64_t v36 = v27 + v34;
  swift_bridgeObjectRetain();
  v62(v35, v36, v28);
  *(unsigned char *)(v26 + v29[7]) = *(unsigned char *)(v27 + v29[7]);
  *(unsigned char *)(v26 + v29[8]) = *(unsigned char *)(v27 + v29[8]);
  uint64_t v37 = a3[9];
  *(unsigned char *)(v63 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(v63 + v37) = *(unsigned char *)(a2 + v37);
  uint64_t v38 = a3[11];
  *(unsigned char *)(v63 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(v63 + v38) = *(void *)(a2 + v38);
  uint64_t v39 = a3[13];
  *(void *)(v63 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(v63 + v39) = *(void *)(a2 + v39);
  uint64_t v40 = a3[15];
  *(void *)(v63 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(v63 + v40) = *(void *)(a2 + v40);
  uint64_t v41 = a3[17];
  *(void *)(v63 + a3[16]) = *(void *)(a2 + a3[16]);
  *(unsigned char *)(v63 + v41) = *(unsigned char *)(a2 + v41);
  uint64_t v42 = a3[19];
  *(void *)(v63 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v43 = a3[20];
  __dst = (char *)(v63 + v43);
  uint64_t v44 = (char *)(a2 + v43);
  *(unsigned char *)(v63 + v42) = *(unsigned char *)(a2 + v42);
  uint64_t v45 = (int *)type metadata accessor for StaticResident();
  uint64_t v59 = *((void *)v45 - 1);
  uint64_t v60 = *(unsigned int (**)(char *, uint64_t, int *))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v60(v44, 1, v45))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(__dst, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    v62((uint64_t)__dst, (uint64_t)v44, v64);
    uint64_t v47 = v45[5];
    uint64_t v48 = &__dst[v47];
    uint64_t v49 = &v44[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    uint64_t v51 = v45[6];
    uint64_t v52 = &__dst[v51];
    char v53 = &v44[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = *(void *)v53;
    *((void *)v52 + 1) = v54;
    *(void *)&__dst[v45[7]] = *(void *)&v44[v45[7]];
    *(void *)&__dst[v45[8]] = *(void *)&v44[v45[8]];
    *(_WORD *)&__dst[v45[9]] = *(_WORD *)&v44[v45[9]];
    uint64_t v55 = v45[10];
    char v56 = &__dst[v55];
    uint64_t v57 = &v44[v55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62((uint64_t)v56, (uint64_t)v57, v64);
    (*(void (**)(char *, void, uint64_t, int *))(v59 + 56))(__dst, 0, 1, v45);
  }
  return v63;
}

uint64_t assignWithCopy for StaticHome(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  v7(a1 + v11, a2 + v11, v6);
  uint64_t v14 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v15 = v14[5];
  uint64_t v16 = (void *)(v12 + v15);
  uint64_t v17 = (void *)(v13 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + v14[6]) = *(unsigned char *)(v13 + v14[6]);
  *(void *)(v12 + v14[7]) = *(void *)(v13 + v14[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(v12 + v14[8], v13 + v14[8], v6);
  *(void *)(v12 + v14[9]) = *(void *)(v13 + v14[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[10]) = *(void *)(v13 + v14[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[11]) = *(void *)(v13 + v14[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[12]) = *(void *)(v13 + v14[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[13]) = *(void *)(v13 + v14[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[14]) = *(void *)(v13 + v14[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[15]) = *(void *)(v13 + v14[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[16]) = *(void *)(v13 + v14[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[17]) = *(void *)(v13 + v14[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + v14[18]) = *(void *)(v13 + v14[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  v7(a1 + v18, a2 + v18, v6);
  uint64_t v21 = (int *)type metadata accessor for StaticUser();
  uint64_t v22 = v21[5];
  uint64_t v23 = (void *)(v19 + v22);
  uint64_t v24 = (void *)(v20 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = v6;
  v7(v19 + v21[6], v20 + v21[6], v6);
  *(unsigned char *)(v19 + v21[7]) = *(unsigned char *)(v20 + v21[7]);
  *(unsigned char *)(v19 + v21[8]) = *(unsigned char *)(v20 + v21[8]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v25 = a3[20];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for StaticResident();
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
  LODWORD(v20) = v30(v26, 1, v28);
  int v31 = v30(v27, 1, v28);
  if (!v20)
  {
    if (!v31)
    {
      v7((uint64_t)v26, (uint64_t)v27, v51);
      uint64_t v43 = v28[5];
      uint64_t v44 = &v26[v43];
      uint64_t v45 = &v27[v43];
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = *((void *)v45 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v46 = v28[6];
      uint64_t v47 = &v26[v46];
      uint64_t v48 = &v27[v46];
      *(void *)uint64_t v47 = *(void *)v48;
      *((void *)v47 + 1) = *((void *)v48 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v26[v28[8]] = *(void *)&v27[v28[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v26[v28[9]] = *(_WORD *)&v27[v28[9]];
      v7((uint64_t)&v26[v28[10]], (uint64_t)&v27[v28[10]], v51);
      return a1;
    }
    sub_251C84D50((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v31)
  {
LABEL_6:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v26, v27, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  v50(v26, v27, v51);
  uint64_t v32 = v28[5];
  uint64_t v33 = &v26[v32];
  uint64_t v34 = &v27[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  uint64_t v35 = v28[6];
  uint64_t v36 = &v26[v35];
  uint64_t v37 = &v27[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
  *(void *)&v26[v28[8]] = *(void *)&v27[v28[8]];
  *(_WORD *)&v26[v28[9]] = *(_WORD *)&v27[v28[9]];
  uint64_t v38 = v28[10];
  uint64_t v39 = &v26[v38];
  uint64_t v40 = &v27[v38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50(v39, v40, v51);
  (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
  return a1;
}

uint64_t initializeWithTake for StaticHome(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for StaticRoom(0);
  *(_OWORD *)(v9 + v11[5]) = *(_OWORD *)(v10 + v11[5]);
  *(unsigned char *)(v9 + v11[6]) = *(unsigned char *)(v10 + v11[6]);
  *(void *)(v9 + v11[7]) = *(void *)(v10 + v11[7]);
  v7(v9 + v11[8], v10 + v11[8], v6);
  *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  *(void *)(v9 + v11[11]) = *(void *)(v10 + v11[11]);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(void *)(v9 + v11[13]) = *(void *)(v10 + v11[13]);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  *(void *)(v9 + v11[16]) = *(void *)(v10 + v11[16]);
  *(void *)(v9 + v11[17]) = *(void *)(v10 + v11[17]);
  *(void *)(v9 + v11[18]) = *(void *)(v10 + v11[18]);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  uint64_t v15 = (int *)type metadata accessor for StaticUser();
  *(_OWORD *)(v13 + v15[5]) = *(_OWORD *)(v14 + v15[5]);
  v7(v13 + v15[6], v14 + v15[6], v6);
  *(unsigned char *)(v13 + v15[7]) = *(unsigned char *)(v14 + v15[7]);
  *(unsigned char *)(v13 + v15[8]) = *(unsigned char *)(v14 + v15[8]);
  uint64_t v16 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[18];
  uint64_t v22 = a3[19];
  uint64_t v23 = a3[20];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v26 = (int *)type metadata accessor for StaticResident();
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    *(_OWORD *)&v24[v26[5]] = *(_OWORD *)&v25[v26[5]];
    *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
    *(void *)&v24[v26[7]] = *(void *)&v25[v26[7]];
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    *(_WORD *)&v24[v26[9]] = *(_WORD *)&v25[v26[9]];
    v7((uint64_t)&v24[v26[10]], (uint64_t)&v25[v26[10]], v6);
    (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t assignWithTake for StaticHome(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  uint64_t v16 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = (void *)(v14 + v17);
  uint64_t v19 = (uint64_t *)(v15 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v16[6]) = *(unsigned char *)(v15 + v16[6]);
  *(void *)(v14 + v16[7]) = *(void *)(v15 + v16[7]);
  swift_bridgeObjectRelease();
  v7(v14 + v16[8], v15 + v16[8], v6);
  *(void *)(v14 + v16[9]) = *(void *)(v15 + v16[9]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[10]) = *(void *)(v15 + v16[10]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[11]) = *(void *)(v15 + v16[11]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[12]) = *(void *)(v15 + v16[12]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[13]) = *(void *)(v15 + v16[13]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[14]) = *(void *)(v15 + v16[14]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[15]) = *(void *)(v15 + v16[15]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[16]) = *(void *)(v15 + v16[16]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[17]) = *(void *)(v15 + v16[17]);
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[18]) = *(void *)(v15 + v16[18]);
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  v7(a1 + v22, a2 + v22, v6);
  uint64_t v25 = (int *)type metadata accessor for StaticUser();
  uint64_t v26 = v25[5];
  uint64_t v27 = (void *)(v23 + v26);
  uint64_t v28 = (uint64_t *)(v24 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v55 = v6;
  v7(v23 + v25[6], v24 + v25[6], v6);
  *(unsigned char *)(v23 + v25[7]) = *(unsigned char *)(v24 + v25[7]);
  *(unsigned char *)(v23 + v25[8]) = *(unsigned char *)(v24 + v25[8]);
  uint64_t v31 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  uint64_t v32 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v35 = (char *)(a1 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  uint64_t v37 = (int *)type metadata accessor for StaticResident();
  uint64_t v38 = *((void *)v37 - 1);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  LODWORD(v24) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v24)
  {
    if (!v40)
    {
      v7((uint64_t)v35, (uint64_t)v36, v55);
      uint64_t v44 = v37[5];
      uint64_t v45 = &v35[v44];
      uint64_t v46 = &v36[v44];
      uint64_t v48 = *(void *)v46;
      uint64_t v47 = *((void *)v46 + 1);
      *(void *)uint64_t v45 = v48;
      *((void *)v45 + 1) = v47;
      swift_bridgeObjectRelease();
      uint64_t v49 = v37[6];
      uint64_t v50 = &v35[v49];
      uint64_t v51 = &v36[v49];
      uint64_t v53 = *(void *)v51;
      uint64_t v52 = *((void *)v51 + 1);
      *(void *)uint64_t v50 = v53;
      *((void *)v50 + 1) = v52;
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
      v7((uint64_t)&v35[v37[10]], (uint64_t)&v36[v37[10]], v55);
      return a1;
    }
    sub_251C84D50((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    return a1;
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  v41(v35, v36, v55);
  *(_OWORD *)&v35[v37[5]] = *(_OWORD *)&v36[v37[5]];
  *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
  *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
  v41(&v35[v37[10]], &v36[v37[10]], v55);
  (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticHome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C86E80);
}

uint64_t sub_251C86E80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = type metadata accessor for StaticRoom(0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[6];
LABEL_11:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_12;
  }
  uint64_t v16 = type metadata accessor for StaticUser();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[7];
    goto LABEL_11;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[20];
  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for StaticHome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C87068);
}

uint64_t sub_251C87068(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = type metadata accessor for StaticRoom(0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[6];
LABEL_9:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = type metadata accessor for StaticUser();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[20];
  return v18(v20, a2, a2, v19);
}

void sub_251C8723C()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StaticRoom(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StaticUser();
      if (v2 <= 0x3F)
      {
        sub_251C873C0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_251C873C0()
{
  if (!qword_26B21FDA8)
  {
    type metadata accessor for StaticResident();
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B21FDA8);
    }
  }
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState()
{
  return &type metadata for StaticHome.RemoteAccessState;
}

ValueMetadata *type metadata accessor for StaticHome.NonResponsiveType()
{
  return &type metadata for StaticHome.NonResponsiveType;
}

unsigned char *_s13HomeDataModel10StaticHomeV17NonResponsiveTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C8750CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticHome.NonResponsiveType.CodingKeys()
{
  return &type metadata for StaticHome.NonResponsiveType.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.NonResponsiveType.NoresponseCodingKeys()
{
  return &type metadata for StaticHome.NonResponsiveType.NoresponseCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.NonResponsiveType.UnavailableCodingKeys()
{
  return &type metadata for StaticHome.NonResponsiveType.UnavailableCodingKeys;
}

unsigned char *_s13HomeDataModel10StaticHomeV17RemoteAccessStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C87630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.CodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.NotSetCodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.NotSetCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.NotCapableCodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.NotCapableCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.CapableCodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.CapableCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.AvailableCodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.AvailableCodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticHome.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StaticHome.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C87804);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticHome.CodingKeys()
{
  return &type metadata for StaticHome.CodingKeys;
}

unint64_t sub_251C87840()
{
  unint64_t result = qword_269BA12B0;
  if (!qword_269BA12B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12B0);
  }
  return result;
}

unint64_t sub_251C87898()
{
  unint64_t result = qword_269BA12B8;
  if (!qword_269BA12B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12B8);
  }
  return result;
}

unint64_t sub_251C878F0()
{
  unint64_t result = qword_269BA12C0;
  if (!qword_269BA12C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12C0);
  }
  return result;
}

unint64_t sub_251C87948()
{
  unint64_t result = qword_269BA12C8;
  if (!qword_269BA12C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12C8);
  }
  return result;
}

unint64_t sub_251C879A0()
{
  unint64_t result = qword_269BA12D0;
  if (!qword_269BA12D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12D0);
  }
  return result;
}

unint64_t sub_251C879F8()
{
  unint64_t result = qword_269BA12D8;
  if (!qword_269BA12D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12D8);
  }
  return result;
}

unint64_t sub_251C87A50()
{
  unint64_t result = qword_269BA12E0;
  if (!qword_269BA12E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12E0);
  }
  return result;
}

unint64_t sub_251C87AA8()
{
  unint64_t result = qword_269BA12E8;
  if (!qword_269BA12E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12E8);
  }
  return result;
}

unint64_t sub_251C87B00()
{
  unint64_t result = qword_269BA12F0;
  if (!qword_269BA12F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12F0);
  }
  return result;
}

unint64_t sub_251C87B58()
{
  unint64_t result = qword_269BA12F8;
  if (!qword_269BA12F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA12F8);
  }
  return result;
}

unint64_t sub_251C87BB0()
{
  unint64_t result = qword_269BA1300;
  if (!qword_269BA1300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1300);
  }
  return result;
}

unint64_t sub_251C87C08()
{
  unint64_t result = qword_269BA1308;
  if (!qword_269BA1308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1308);
  }
  return result;
}

unint64_t sub_251C87C60()
{
  unint64_t result = qword_269BA1310;
  if (!qword_269BA1310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1310);
  }
  return result;
}

unint64_t sub_251C87CB8()
{
  unint64_t result = qword_269BA1318;
  if (!qword_269BA1318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1318);
  }
  return result;
}

unint64_t sub_251C87D10()
{
  unint64_t result = qword_269BA1320;
  if (!qword_269BA1320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1320);
  }
  return result;
}

unint64_t sub_251C87D68()
{
  unint64_t result = qword_269BA1328;
  if (!qword_269BA1328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1328);
  }
  return result;
}

unint64_t sub_251C87DC0()
{
  unint64_t result = qword_269BA1330;
  if (!qword_269BA1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1330);
  }
  return result;
}

unint64_t sub_251C87E18()
{
  unint64_t result = qword_269BA1338;
  if (!qword_269BA1338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1338);
  }
  return result;
}

unint64_t sub_251C87E70()
{
  unint64_t result = qword_269BA1340;
  if (!qword_269BA1340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1340);
  }
  return result;
}

unint64_t sub_251C87EC8()
{
  unint64_t result = qword_269BA1348;
  if (!qword_269BA1348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1348);
  }
  return result;
}

unint64_t sub_251C87F20()
{
  unint64_t result = qword_269BA1350;
  if (!qword_269BA1350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1350);
  }
  return result;
}

uint64_t sub_251C87F74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x52746C7561666564 && a2 == 0xEB000000006D6F6FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6F450 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7441726573557369 && a2 == 0xEC000000656D6F48 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6F470 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6F490 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F6F4B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6F4D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F6F4F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6F510 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000251F6F530 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F6F550 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000251F6F570 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F6F590 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000251F6F5B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F6F5D0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

uint64_t sub_251C885AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746553746F6ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6261706143746F6ELL && a2 == 0xEA0000000000656CLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6261706163 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251C88778(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F707365726F6ELL && a2 == 0xEA00000000006573;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_251C88890()
{
  unint64_t result = qword_26B21EB18;
  if (!qword_26B21EB18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21EB18);
  }
  return result;
}

unsigned __int8 *static IconSymbol.defaultSymbol(serviceKind:)@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = *result - 3;
  if (v2 > 0x31) {
    *a2 = 88;
  }
  else {
    *a2 = byte_251F4B096[(char)v2];
  }
  return result;
}

uint64_t IconSymbol.offStateSymbolName.getter()
{
  return IconSymbol.rawValue.getter();
}

uint64_t IconSymbol.onStateSymbolName.getter()
{
  uint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 5:
      uint64_t result = 0xD000000000000019;
      break;
    case 6:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 0xB:
      uint64_t result = 0x2E746361746E6F63;
      break;
    case 0x10:
      return result;
    case 0x12:
      uint64_t result = 0xD000000000000013;
      break;
    case 0x13:
      uint64_t result = 0x65706F2E6B636F6CLL;
      break;
    case 0x14:
      uint64_t result = 0x6B7365642E6E6166;
      break;
    case 0x18:
    case 0x19:
    case 0x40:
    case 0x55:
      uint64_t result = 0xD000000000000010;
      break;
    case 0x1A:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 0x1B:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x1F:
      uint64_t result = 0x6C7562746867696CLL;
      break;
    case 0x27:
      uint64_t result = 0x6C6C69662E63696DLL;
      break;
    case 0x3A:
      uint64_t result = 0xD000000000000015;
      break;
    case 0x3C:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 0x3D:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 0x41:
    case 0x42:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 0x43:
      uint64_t result = 0x656C6B6E69727073;
      break;
    case 0x44:
      uint64_t result = 0xD000000000000013;
      break;
    case 0x45:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 0x4C:
      uint64_t result = 0x612E776F646E6977;
      break;
    case 0x4D:
    case 0x4E:
      uint64_t result = 0x632E776F646E6977;
      break;
    case 0x50:
      uint64_t result = 0xD000000000000016;
      break;
    case 0x51:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x52:
      uint64_t result = 0x736E696174727563;
      break;
    case 0x53:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x54:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x56:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x57:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      uint64_t result = IconSymbol.rawValue.getter();
      break;
  }
  return result;
}

unint64_t IconSymbol.slashOffSymbolName.getter()
{
  if (*v0 == 31) {
    return 0xD000000000000014;
  }
  else {
    return 0;
  }
}

void IconSymbol.offStateSymbolRenderingMode.getter(unsigned char *a1@<X8>)
{
  unsigned int v2 = *v1 - 28;
  if (v2 > 0x13) {
    *a1 = 0;
  }
  else {
    *a1 = byte_251F4B0C8[(char)v2];
  }
}

void IconSymbol.onStateSymbolRenderingMode.getter(unsigned char *a1@<X8>)
{
  unsigned int v2 = *v1 - 27;
  BOOL v3 = v2 > 0x2C;
  uint64_t v4 = (1 << v2) & 0x1000000000C1;
  if (v3 || v4 == 0) {
    *a1 = 2;
  }
  else {
    *a1 = 0;
  }
}

uint64_t static IconSymbol.defaultSymbol(for:subKind:)@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, unsigned char *a3@<X8>)
{
  unsigned __int8 v4 = *a1;
  uint64_t v5 = *a2;
  v10[1] = *a1;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v6 == 0x8000000251F65130)
  {
    uint64_t result = swift_bridgeObjectRelease();
    LOBYTE(v8) = 21;
    switch(v5)
    {
      case 2:
        LOBYTE(v8) = 65;
        break;
      case 3:
        LOBYTE(v8) = 59;
        break;
      case 5:
        goto LABEL_8;
      default:
        break;
    }
  }
  else
  {
    char v9 = sub_251F36B10();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v9 & 1) == 0 || v5 == 5)
    {
LABEL_8:
      v10[0] = v4;
      uint64_t result = (uint64_t)static IconSymbol.defaultSymbol(serviceKind:)(v10, &v11);
      LOBYTE(v8) = v11;
    }
    else
    {
      unint64_t v8 = 0x153B411515uLL >> (8 * v5);
    }
  }
  *a3 = v8;
  return result;
}

uint64_t IconSymbol.rawValue.getter()
{
  uint64_t result = 0xD00000000000001DLL;
  switch(*v0)
  {
    case 1:
      return 0xD000000000000011;
    case 2:
      return 0x6964656D2E697161;
    case 3:
      return 0xD000000000000016;
    case 4:
      unint64_t v2 = 0x2E6F65646976;
      goto LABEL_83;
    case 5:
      return 0xD000000000000014;
    case 6:
      return 0xD000000000000015;
    case 7:
      return 0xD000000000000010;
    case 8:
      return 0xD00000000000001ALL;
    case 9:
      return 0xD000000000000011;
    case 0xA:
      return 0x696C65646E616863;
    case 0xB:
      return 0xD000000000000013;
    case 0xC:
      return 0xD00000000000001ELL;
    case 0xD:
      return 0xD000000000000011;
    case 0xE:
      return 0x6B7365642E6E6166;
    case 0xF:
      return 0x7365642E706D616CLL;
    case 0x10:
      return 0xD000000000000016;
    case 0x11:
      return 0xD000000000000013;
    case 0x12:
      return 0xD000000000000015;
    case 0x13:
      return 0x6C69662E6B636F6CLL;
    case 0x14:
      return 0x6564616C626E6166;
    case 0x15:
      uint64_t v3 = 0x746F67697073;
      return v3 & 0xFFFFFFFFFFFFLL | 0x662E000000000000;
    case 0x16:
      return 0x6F6F6C662E6E6166;
    case 0x17:
      return 0x6F6C662E706D616CLL;
    case 0x18:
      return 0xD000000000000012;
    case 0x19:
      return 0xD000000000000012;
    case 0x1A:
      return 0xD00000000000001DLL;
    case 0x1B:
      return 0xD000000000000016;
    case 0x1C:
      return 0xD00000000000001CLL;
    case 0x1D:
      return 0x79746964696D7568;
    case 0x1E:
      return 0xD000000000000012;
    case 0x1F:
      return 0x6C7562746867696CLL;
    case 0x20:
      return 0xD000000000000010;
    case 0x21:
      return 0xD000000000000012;
    case 0x22:
    case 0x29:
    case 0x2A:
    case 0x2B:
    case 0x2C:
    case 0x2D:
    case 0x2E:
    case 0x2F:
    case 0x30:
      return 0xD000000000000017;
    case 0x23:
      return 0xD000000000000010;
    case 0x24:
      return 0xD000000000000011;
    case 0x25:
      return 0xD000000000000022;
    case 0x26:
      return 0xD000000000000012;
    case 0x27:
      return 0x73616C732E63696DLL;
    case 0x28:
      return 0xD000000000000014;
    case 0x31:
      return 0xD000000000000016;
    case 0x32:
      return 0xD00000000000001FLL;
    case 0x33:
      return 0xD000000000000013;
    case 0x34:
      return 0xD000000000000015;
    case 0x35:
      return 0xD000000000000013;
    case 0x36:
      return 0xD000000000000013;
    case 0x37:
      return 0xD000000000000015;
    case 0x38:
      return 0x6174732E6E6F6F6DLL;
    case 0x39:
      return 0x2E78616D2E6E7573;
    case 0x3A:
      return 0xD000000000000015;
    case 0x3B:
      uint64_t v3 = 0x7265776F6873;
      return v3 & 0xFFFFFFFFFFFFLL | 0x662E000000000000;
    case 0x3C:
      return 0xD00000000000001DLL;
    case 0x3D:
      return 0xD00000000000001ELL;
    case 0x3E:
      uint64_t v4 = 1802464627;
      goto LABEL_82;
    case 0x3F:
      return 0xD000000000000014;
    case 0x40:
      return 0xD000000000000012;
    case 0x41:
      return 0x656C6B6E69727073;
    case 0x42:
      return 0xD000000000000016;
    case 0x43:
      return 0xD00000000000001BLL;
    case 0x44:
      return 0xD000000000000014;
    case 0x45:
      return 0xD00000000000001BLL;
    case 0x46:
      return 0x6261742E706D616CLL;
    case 0x47:
      return 30324;
    case 0x48:
      return 0x656D6F6D72656874;
    case 0x49:
      return 0xD000000000000012;
    case 0x4A:
      return 0xD000000000000010;
    case 0x4B:
      return 1684957559;
    case 0x4C:
      return 0xD000000000000014;
    case 0x4D:
      return 0xD000000000000016;
    case 0x4E:
      return 0xD000000000000015;
    case 0x4F:
      return 0xD00000000000001FLL;
    case 0x50:
      return 0xD000000000000018;
    case 0x51:
      return 0xD000000000000016;
    case 0x52:
      return 0x736E696174727563;
    case 0x53:
      return 0xD000000000000013;
    case 0x54:
      return 0xD000000000000013;
    case 0x55:
      return 0xD000000000000012;
    case 0x56:
      return 0xD000000000000018;
    case 0x57:
      return 0xD000000000000016;
    case 0x58:
      uint64_t v4 = 1937076072;
LABEL_82:
      unint64_t v2 = v4 & 0xFFFF0000FFFFFFFFLL | 0x2E6500000000;
LABEL_83:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6966000000000000;
      break;
    default:
      return result;
  }
  return result;
}

HomeDataModel::IconSymbol_optional __swiftcall IconSymbol.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_251F36B50();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 71;
  switch(v3)
  {
    case 0:
      goto LABEL_73;
    case 1:
      char v5 = 1;
      goto LABEL_73;
    case 2:
      char v5 = 2;
      goto LABEL_73;
    case 3:
      char v5 = 3;
      goto LABEL_73;
    case 4:
      char v5 = 4;
      goto LABEL_73;
    case 5:
      char v5 = 5;
      goto LABEL_73;
    case 6:
      char v5 = 6;
      goto LABEL_73;
    case 7:
      char v5 = 7;
      goto LABEL_73;
    case 8:
      char v5 = 8;
      goto LABEL_73;
    case 9:
      char v5 = 9;
      goto LABEL_73;
    case 10:
      char v5 = 10;
      goto LABEL_73;
    case 11:
      char v5 = 11;
      goto LABEL_73;
    case 12:
      char v5 = 12;
      goto LABEL_73;
    case 13:
      char v5 = 13;
      goto LABEL_73;
    case 14:
      char v5 = 14;
      goto LABEL_73;
    case 15:
      char v5 = 15;
      goto LABEL_73;
    case 16:
      char v5 = 16;
      goto LABEL_73;
    case 17:
      char v5 = 17;
      goto LABEL_73;
    case 18:
      char v5 = 18;
      goto LABEL_73;
    case 19:
      char v5 = 19;
      goto LABEL_73;
    case 20:
      char v5 = 20;
      goto LABEL_73;
    case 21:
      char v5 = 21;
      goto LABEL_73;
    case 22:
      char v5 = 22;
      goto LABEL_73;
    case 23:
      char v5 = 23;
      goto LABEL_73;
    case 24:
      char v5 = 24;
      goto LABEL_73;
    case 25:
      char v5 = 25;
      goto LABEL_73;
    case 26:
      char v5 = 26;
      goto LABEL_73;
    case 27:
      char v5 = 27;
      goto LABEL_73;
    case 28:
      char v5 = 28;
      goto LABEL_73;
    case 29:
      char v5 = 29;
      goto LABEL_73;
    case 30:
      char v5 = 30;
      goto LABEL_73;
    case 31:
      char v5 = 31;
      goto LABEL_73;
    case 32:
      char v5 = 32;
      goto LABEL_73;
    case 33:
      char v5 = 33;
      goto LABEL_73;
    case 34:
      char v5 = 34;
      goto LABEL_73;
    case 35:
      char v5 = 35;
      goto LABEL_73;
    case 36:
      char v5 = 36;
      goto LABEL_73;
    case 37:
      char v5 = 37;
      goto LABEL_73;
    case 38:
      char v5 = 38;
      goto LABEL_73;
    case 39:
      char v5 = 39;
      goto LABEL_73;
    case 40:
      char v5 = 40;
      goto LABEL_73;
    case 41:
      char v5 = 41;
      goto LABEL_73;
    case 42:
      char v5 = 42;
      goto LABEL_73;
    case 43:
      char v5 = 43;
      goto LABEL_73;
    case 44:
      char v5 = 44;
      goto LABEL_73;
    case 45:
      char v5 = 45;
      goto LABEL_73;
    case 46:
      char v5 = 46;
      goto LABEL_73;
    case 47:
      char v5 = 47;
      goto LABEL_73;
    case 48:
      char v5 = 48;
      goto LABEL_73;
    case 49:
      char v5 = 49;
      goto LABEL_73;
    case 50:
      char v5 = 50;
      goto LABEL_73;
    case 51:
      char v5 = 51;
      goto LABEL_73;
    case 52:
      char v5 = 52;
      goto LABEL_73;
    case 53:
      char v5 = 53;
      goto LABEL_73;
    case 54:
      char v5 = 54;
      goto LABEL_73;
    case 55:
      char v5 = 55;
      goto LABEL_73;
    case 56:
      char v5 = 56;
      goto LABEL_73;
    case 57:
      char v5 = 57;
      goto LABEL_73;
    case 58:
      char v5 = 58;
      goto LABEL_73;
    case 59:
      char v5 = 59;
      goto LABEL_73;
    case 60:
      char v5 = 60;
      goto LABEL_73;
    case 61:
      char v5 = 61;
      goto LABEL_73;
    case 62:
      char v5 = 62;
      goto LABEL_73;
    case 63:
      char v5 = 63;
      goto LABEL_73;
    case 64:
      char v5 = 64;
      goto LABEL_73;
    case 65:
      char v5 = 65;
      goto LABEL_73;
    case 66:
      char v5 = 66;
      goto LABEL_73;
    case 67:
      char v5 = 67;
      goto LABEL_73;
    case 68:
      char v5 = 68;
      goto LABEL_73;
    case 69:
      char v5 = 69;
      goto LABEL_73;
    case 70:
      char v5 = 70;
LABEL_73:
      char v6 = v5;
      break;
    case 71:
      break;
    case 72:
      char v6 = 72;
      break;
    case 73:
      char v6 = 73;
      break;
    case 74:
      char v6 = 74;
      break;
    case 75:
      char v6 = 75;
      break;
    case 76:
      char v6 = 76;
      break;
    case 77:
      char v6 = 77;
      break;
    case 78:
      char v6 = 78;
      break;
    case 79:
      char v6 = 79;
      break;
    case 80:
      char v6 = 80;
      break;
    case 81:
      char v6 = 81;
      break;
    case 82:
      char v6 = 82;
      break;
    case 83:
      char v6 = 83;
      break;
    case 84:
      char v6 = 84;
      break;
    case 85:
      char v6 = 85;
      break;
    case 86:
      char v6 = 86;
      break;
    case 87:
      char v6 = 87;
      break;
    case 88:
      char v6 = 88;
      break;
    default:
      char v6 = 89;
      break;
  }
  *unint64_t v2 = v6;
  return result;
}

unsigned char *static IconSymbol.defaultSymbol(subKind:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 0x153B411515uLL >> (8 * *result);
  return result;
}

unsigned __int8 *static IconSymbol.defaultSymbol(deviceType:)@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  int v2 = *result;
  unsigned int v3 = v2 - 4;
  unsigned int v4 = v2 - 21;
  if (v2 == 23) {
    char v5 = 53;
  }
  else {
    char v5 = 88;
  }
  if (v4 < 2) {
    char v5 = 19;
  }
  if (v3 < 4) {
    char v5 = 31;
  }
  *a2 = v5;
  return result;
}

void *static IconSymbol.symbolSetForServiceKind(for:)(unsigned char *a1)
{
  if (*a1 == 30) {
    return &unk_270263210;
  }
  else {
    return (void *)MEMORY[0x263F8EE78];
  }
}

unsigned __int8 *static IconSymbol.defaultSymbol(actionSetKind:)@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  unsigned int v2 = *result;
  if (v2 >= 4) {
    char v3 = 88;
  }
  else {
    char v3 = 0x38393736u >> (8 * v2);
  }
  *a2 = v3;
  return result;
}

void *static IconSymbol.exampleSymbolSetForTestingAndPreviews()()
{
  return &unk_270263238;
}

char *static IconSymbol.convertFromCAPackageIcon(iconIdentifier:)@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = byte_251F4B0DC[*result];
  return result;
}

char *static IconSymbol.convertToCAPackageIcon(iconSymbol:)@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v2 = *result;
  if (v2 > 0x58) {
    *a2 = 59;
  }
  else {
    *a2 = byte_251F4B117[v2];
  }
  return result;
}

HomeDataModel::IconSymbol_optional sub_251C89D90(Swift::String *a1)
{
  return IconSymbol.init(rawValue:)(*a1);
}

uint64_t sub_251C89D9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IconSymbol.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_251C89DC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_251DB3378(*a1, *a2);
}

unint64_t sub_251C89DD4()
{
  unint64_t result = qword_269BA1358;
  if (!qword_269BA1358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1358);
  }
  return result;
}

uint64_t sub_251C89E28()
{
  return sub_251F36D00();
}

uint64_t sub_251C89E90()
{
  IconSymbol.rawValue.getter();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251C89EF4()
{
  return sub_251F36D00();
}

uint64_t sub_251C89F58()
{
  return sub_251F35A30();
}

uint64_t sub_251C89FB8()
{
  return sub_251F359D0();
}

uint64_t getEnumTagSinglePayload for IconSymbol(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xA8) {
    goto LABEL_17;
  }
  if (a2 + 88 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 88) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 88;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 88;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 88;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x59;
  int v8 = v6 - 89;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for IconSymbol(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 88 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 88) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xA8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xA7)
  {
    unsigned int v6 = ((a2 - 168) >> 8) + 1;
    *unint64_t result = a2 + 88;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C8A164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 88;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconSymbol()
{
  return &type metadata for IconSymbol;
}

unint64_t sub_251C8A19C()
{
  unint64_t result = qword_269BA1360;
  if (!qword_269BA1360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1360);
  }
  return result;
}

uint64_t sub_251C8A1F0()
{
  type metadata accessor for StaticHome();
  *(void *)(v0 + 56) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C8A27C, 0, 0);
}

uint64_t sub_251C8A27C()
{
  *(void *)(v0 + 64) = sub_251F35C80();
  *(void *)(v0 + 72) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8A314, v2, v1);
}

uint64_t sub_251C8A314()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251C8A37C, 0, 0);
}

uint64_t sub_251C8A37C()
{
  *(void *)(v0 + 80) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8A408, v2, v1);
}

uint64_t sub_251C8A408()
{
  swift_release();
  swift_beginAccess();
  *(void *)(v0 + 88) = qword_26B21F258;
  return MEMORY[0x270FA2498](sub_251C8A498, 0, 0);
}

uint64_t sub_251C8A498()
{
  unint64_t v1 = v0[11];
  if (v1 < 3)
  {
    v0[15] = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    uint64_t v4 = v3;
    uint64_t v5 = sub_251C8A8BC;
    uint64_t v6 = v2;
    uint64_t v7 = v4;
LABEL_11:
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  if (v1 == 3)
  {
    if (qword_269B9C2E8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251C8ABA8;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  if (v1 != 4) {
    return sub_251F36680();
  }
  type metadata accessor for DataModel();
  int v8 = (void *)swift_task_alloc();
  v0[12] = v8;
  *int v8 = v0;
  v8[1] = sub_251C8A668;
  return static DataModel.sharedAsync(coverages:)(0);
}

uint64_t sub_251C8A668(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C8A768, 0, 0);
}

uint64_t sub_251C8A768()
{
  *(void *)(v0 + 112) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8A7F4, v2, v1);
}

uint64_t sub_251C8A7F4()
{
  uint64_t v1 = (char *)v0[13];
  swift_release();
  swift_getKeyPath();
  v0[6] = v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome];
  id v3 = v2;

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void *))v0[1];
  return v4(v2);
}

uint64_t sub_251C8A8BC()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C8A954, 0, 0);
}

uint64_t sub_251C8A954()
{
  *(void *)(v0 + 128) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8A9E0, v2, v1);
}

uint64_t sub_251C8A9E0()
{
  swift_release();
  *(void *)(v0 + 136) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C8AA54, 0, 0);
}

uint64_t sub_251C8AA54()
{
  *(void *)(v0 + 144) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8AAE0, v2, v1);
}

uint64_t sub_251C8AAE0()
{
  uint64_t v1 = v0[17];
  swift_release();
  swift_getKeyPath();
  v0[5] = v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  id v3 = v2;
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void *))v0[1];
  return v4(v2);
}

uint64_t sub_251C8ABA8()
{
  type metadata accessor for WidgetDataModel();
  swift_initStaticObject();
  id v3 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251C8AC60;
  return v3();
}

uint64_t sub_251C8AC60(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  swift_retain();
  return MEMORY[0x270FA2498](sub_251C8AD70, 0, 0);
}

uint64_t sub_251C8AD70()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v1 = swift_task_alloc();
  v0[21] = v1;
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[22] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251C8AE88;
  uint64_t v4 = v0[7];
  return WidgetSnapshotModerator.find(home:orRecommended:)(v4, v1, 1);
}

uint64_t sub_251C8AE88()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  if (v0)
  {
    swift_release();

    sub_251B55B48(v3);
    uint64_t v4 = sub_251C8B3C0;
  }
  else
  {
    sub_251B55B48(v3);
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = sub_251C8AFFC;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_251C8AFFC()
{
  *(void *)(v0 + 184) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8B088, v2, v1);
}

uint64_t sub_251C8B088()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C8B120, 0, 0);
}

uint64_t sub_251C8B120()
{
  *(void *)(v0 + 192) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8B1AC, v2, v1);
}

uint64_t sub_251C8B1AC()
{
  swift_release();
  *(void *)(v0 + 200) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C8B220, 0, 0);
}

uint64_t sub_251C8B220()
{
  *(void *)(v0 + 208) = sub_251F34D50();
  *(void *)(v0 + 216) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8B2B4, v2, v1);
}

uint64_t sub_251C8B2B4()
{
  uint64_t v1 = (void *)v0[26];
  uint64_t v2 = (void *)v0[25];
  uint64_t v3 = v0[7];
  swift_release();
  v0[28] = objc_msgSend(v2, sel_homeFor_, v1);

  sub_251C8B42C(v3);
  return MEMORY[0x270FA2498](sub_251C8B358, 0, 0);
}

uint64_t sub_251C8B358()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251C8B3C0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_251C8B42C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticHome();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251C8B490()
{
  return MEMORY[0x270FA2498](sub_251C8B4AC, 0, 0);
}

uint64_t sub_251C8B4AC()
{
  *(void *)(v0 + 88) = sub_251F35C80();
  *(void *)(v0 + 96) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8B544, v2, v1);
}

uint64_t sub_251C8B544()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251C8B5AC, 0, 0);
}

uint64_t sub_251C8B5AC()
{
  *(void *)(v0 + 104) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8B638, v2, v1);
}

uint64_t sub_251C8B638()
{
  swift_release();
  swift_beginAccess();
  *(void *)(v0 + 112) = qword_26B21F258;
  return MEMORY[0x270FA2498](sub_251C8B6C8, 0, 0);
}

uint64_t sub_251C8B6C8()
{
  unint64_t v1 = v0[14];
  if (v1 < 3)
  {
    v0[18] = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    uint64_t v4 = v3;
    uint64_t v5 = sub_251C8BAC4;
    uint64_t v6 = v2;
    uint64_t v7 = v4;
LABEL_11:
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  if (v1 == 3)
  {
    if (qword_269B9C2E8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251C8BD8C;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  if (v1 != 4) {
    return sub_251F36680();
  }
  type metadata accessor for DataModel();
  int v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  *int v8 = v0;
  v8[1] = sub_251C8B898;
  return static DataModel.sharedAsync(coverages:)(0);
}

uint64_t sub_251C8B898(uint64_t a1)
{
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C8B998, 0, 0);
}

uint64_t sub_251C8B998()
{
  *(void *)(v0 + 136) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8BA24, v2, v1);
}

uint64_t sub_251C8BA24()
{
  uint64_t v1 = *(char **)(v0 + 128);
  swift_release();
  uint64_t v2 = (id *)&v1[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  swift_beginAccess();
  id v3 = *v2;
  id v4 = *v2;

  uint64_t v5 = *(uint64_t (**)(id))(v0 + 8);
  return v5(v3);
}

uint64_t sub_251C8BAC4()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C8BB5C, 0, 0);
}

uint64_t sub_251C8BB5C()
{
  *(void *)(v0 + 152) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8BBE8, v2, v1);
}

uint64_t sub_251C8BBE8()
{
  swift_release();
  *(void *)(v0 + 160) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C8BC5C, 0, 0);
}

uint64_t sub_251C8BC5C()
{
  *(void *)(v0 + 168) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C8BCE8, v2, v1);
}

uint64_t sub_251C8BCE8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_release();
  uint64_t v2 = (id *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  id v3 = *v2;
  uint64_t v6 = *(uint64_t (**)(id))(v0 + 8);
  id v4 = *v2;
  return v6(v3);
}

uint64_t sub_251C8BD8C()
{
  type metadata accessor for WidgetDataModel();
  swift_initStaticObject();
  id v3 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251C8BE44;
  return v3();
}

uint64_t sub_251C8BE44(uint64_t a1)
{
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_retain();
  return MEMORY[0x270FA2498](sub_251C8BF54, 0, 0);
}

uint64_t sub_251C8BF54()
{
  id v1 = *(id *)(*(void *)(v0 + 184) + 184);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(id))(v0 + 8);
  return v2(v1);
}

uint64_t Action.CharacteristicAction.serviceID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Action.CharacteristicAction.characteristicKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Action.CharacteristicAction(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for Action.CharacteristicAction(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA1388);
}

uint64_t Action.CharacteristicAction.targetValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Action.CharacteristicAction(0) + 24);
  uint64_t v4 = *(void *)v3;
  unint64_t v5 = *(void *)(v3 + 8);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  char v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  return sub_251B2ED7C(v4, v5, v6);
}

uint64_t Action.CharacteristicAction.targetValue.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for Action.CharacteristicAction(0) + 24);
  uint64_t result = sub_251A580B4(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = v4;
  return result;
}

uint64_t (*Action.CharacteristicAction.targetValue.modify())(void)
{
  return nullsub_1;
}

uint64_t Action.CharacteristicAction.originalActionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Action.CharacteristicAction(0) + 28);
  return sub_251A1E280(v3, a1);
}

uint64_t Action.CharacteristicAction.init(serviceID:characteristicKind:targetValue:originalActionID:serviceName:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v10 = *a2;
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  char v13 = *((unsigned char *)a3 + 16);
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a7, a1, v14);
  uint64_t v16 = (int *)type metadata accessor for Action.CharacteristicAction(0);
  *(unsigned char *)(a7 + v16[5]) = v10;
  uint64_t v17 = a7 + v16[6];
  *(void *)uint64_t v17 = v12;
  *(void *)(v17 + 8) = v11;
  *(unsigned char *)(v17 + 16) = v13;
  sub_251A1E280(a4, a7 + v16[7]);
  if (qword_269B9C338 != -1) {
    swift_once();
  }
  char v18 = byte_269B9FF88;
  sub_251A1B064(a4, &qword_26B21FF90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  if (v18)
  {
    uint64_t v21 = a5;
    uint64_t v20 = a6;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v22 = (void *)(a7 + v16[8]);
  *uint64_t v22 = v21;
  v22[1] = v20;
  return result;
}

void Action.CharacteristicAction.init(action:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = type metadata accessor for Action.CharacteristicAction(0);
  MEMORY[0x270FA5388](v62);
  char v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_characteristic);
  id v8 = objc_msgSend(a1, sel_targetValue);
  v58[3] = swift_getObjectType();
  v58[0] = v8;
  static CharacteristicKind.Value.typedValue(for:value:)(v7, (uint64_t)v58, (uint64_t)&v59);
  sub_251A1B064((uint64_t)v58, &qword_26B21E190);
  char v9 = v61;
  if (v61 == 255)
  {
    type metadata accessor for Action.CharacteristicAction.Error(0);
    sub_251C8F25C(&qword_269BA1378, (void (*)(uint64_t))type metadata accessor for Action.CharacteristicAction.Error);
    swift_allocError();
    uint64_t v17 = v16;
    *uint64_t v16 = objc_msgSend(a1, sel_targetValue);
    v17[1] = a1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    uint64_t v11 = v59;
    unint64_t v10 = v60;
    sub_251B2ED7C(v59, v60, v61);
    id v12 = objc_msgSend(v7, sel_service);
    if (v12)
    {
      id v13 = v12;
      if (qword_269B9C338 != -1) {
        swift_once();
      }
      uint64_t v56 = v11;
      unint64_t v57 = v10;
      uint64_t v53 = v2;
      id v54 = v13;
      uint64_t v51 = a2;
      id v55 = a1;
      if (byte_269B9FF88 == 1)
      {
        id v14 = objc_msgSend(v13, sel_name);
        uint64_t v46 = sub_251F356F0();
        uint64_t v49 = v15;

        id v13 = v54;
      }
      else
      {
        uint64_t v46 = 0;
        uint64_t v49 = 0;
      }
      id v20 = objc_msgSend(v13, sel_uniqueIdentifier);
      uint64_t v21 = sub_251F34DA0();
      uint64_t v50 = &v45;
      uint64_t v22 = *(void *)(v21 - 8);
      MEMORY[0x270FA5388](v21);
      uint64_t v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      id v52 = v7;
      id v25 = objc_msgSend(v7, sel_characteristicType);
      uint64_t v26 = sub_251F356F0();
      uint64_t v28 = v27;

      v29._countAndFlagsBits = v26;
      v29._object = v28;
      CharacteristicKind.init(rawValue:)(v29);
      int v30 = LOBYTE(v58[0]);
      if (LOBYTE(v58[0]) == 174) {
        int v30 = 0;
      }
      int v47 = v30;
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v48 = &v45;
      MEMORY[0x270FA5388](v31 - 8);
      uint64_t v33 = (char *)&v45 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v34 = v56;
      unint64_t v35 = v57;
      sub_251B2ED7C(v56, v57, v9);
      id v36 = objc_msgSend(v55, sel_uniqueIdentifier);
      sub_251F34D80();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v6, v24, v21);
      uint64_t v37 = v62;
      v6[*(int *)(v62 + 20)] = v47;
      uint64_t v38 = &v6[*(int *)(v37 + 24)];
      *(void *)uint64_t v38 = v34;
      *((void *)v38 + 1) = v35;
      v38[16] = v9;
      sub_251A1E280((uint64_t)v33, (uint64_t)&v6[*(int *)(v37 + 28)]);
      LOBYTE(v36) = byte_269B9FF88;
      sub_251A1B064((uint64_t)v33, &qword_26B21FF90);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
      if (v36)
      {
        uint64_t v39 = v51;
        uint64_t v40 = v49;
        uint64_t v41 = v46;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = 0;
        uint64_t v40 = 0;
        uint64_t v39 = v51;
      }
      uint64_t v42 = &v6[*(int *)(v62 + 32)];
      *(void *)uint64_t v42 = v41;
      *((void *)v42 + 1) = v40;
      sub_251C8C918((uint64_t)v6, v39);

      uint64_t v44 = v56;
      unint64_t v43 = v57;
      sub_251C8C904(v56, v57, v9);

      sub_251C8C904(v44, v43, v9);
    }
    else
    {
      type metadata accessor for Action.CharacteristicAction.Error(0);
      sub_251C8F25C(&qword_269BA1378, (void (*)(uint64_t))type metadata accessor for Action.CharacteristicAction.Error);
      swift_allocError();
      *char v18 = v7;
      v18[1] = a1;
      swift_storeEnumTagMultiPayload();
      id v19 = v7;
      swift_willThrow();
      sub_251C8C904(v11, v10, v9);
      sub_251C8C904(v11, v10, v9);
    }
  }
}

uint64_t type metadata accessor for Action.CharacteristicAction.Error(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA1398);
}

uint64_t sub_251C8C904(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_251A580B4(result, a2, a3);
  }
  return result;
}

uint64_t sub_251C8C918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Action.CharacteristicAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t Action.CharacteristicAction.Error.description.getter()
{
  uint64_t v1 = type metadata accessor for Action.CharacteristicAction(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Action.CharacteristicAction.Error(0);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251C8F2A4(v0, (uint64_t)v6, type metadata accessor for Action.CharacteristicAction.Error);
  unint64_t v7 = 0xD000000000000046;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = *(void **)v6;
      id v8 = (void *)*((void *)v6 + 1);
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      id v12 = objc_msgSend(v11, sel_description);
      sub_251F356F0();

      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      id v13 = objc_msgSend(v8, sel_description);
      sub_251F356F0();

      sub_251F35800();
      goto LABEL_4;
    case 2u:
      sub_251C8C918((uint64_t)v6, (uint64_t)v3);
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      LOBYTE(v22) = v3[*(int *)(v1 + 20)];
      sub_251F36640();
      unint64_t v7 = v19;
      sub_251C8F30C((uint64_t)v3, type metadata accessor for Action.CharacteristicAction);
      break;
    case 3u:
      uint64_t v14 = *(void *)v6;
      unint64_t v15 = *((void *)v6 + 1);
      char v16 = v6[16];
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      sub_251F36400();
      unint64_t v22 = v19;
      unint64_t v23 = v20;
      sub_251F35800();
      unint64_t v19 = v14;
      unint64_t v20 = v15;
      char v21 = v16;
      CharacteristicKind.Value.description.getter();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251A580B4(v14, v15, v16);
      unint64_t v7 = v22;
      break;
    case 4u:
      return v7;
    default:
      unint64_t v9 = *(void *)v6;
      id v8 = (void *)*((void *)v6 + 1);
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      unint64_t v22 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF78);
      sub_251F36640();
      sub_251F35800();
      id v10 = objc_msgSend(v8, sel_description);
      sub_251F356F0();

      sub_251F35800();
      swift_unknownObjectRelease();
LABEL_4:

      swift_bridgeObjectRelease();
      unint64_t v7 = v19;
      break;
  }
  return v7;
}

uint64_t Action.CharacteristicAction.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v3 = (int *)type metadata accessor for Action.CharacteristicAction(0);
  LOBYTE(v15) = *(unsigned char *)(v0 + v3[5]);
  CharacteristicKind.rawValue.getter();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(v0 + v3[6]);
  char v5 = *((unsigned char *)v4 + 16);
  long long v15 = *v4;
  char v16 = v5;
  CharacteristicKind.Value.hash(into:)();
  uint64_t v6 = v0 + v3[7];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v6, (uint64_t)v9);
  uint64_t v10 = *(void *)(v2 - 8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v2);
  if (v11 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v11);
    id v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, v2);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v2);
  }
  if (!*(void *)(v1 + v3[8] + 8)) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t Action.CharacteristicAction.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_251F36CA0();
  uint64_t v2 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v3 = (int *)type metadata accessor for Action.CharacteristicAction(0);
  LOBYTE(v15) = *(unsigned char *)(v0 + v3[5]);
  CharacteristicKind.rawValue.getter();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(v0 + v3[6]);
  char v5 = *((unsigned char *)v4 + 16);
  long long v15 = *v4;
  char v16 = v5;
  CharacteristicKind.Value.hash(into:)();
  uint64_t v6 = v0 + v3[7];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v6, (uint64_t)v9);
  uint64_t v10 = *(void *)(v2 - 8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v2);
  if (v11 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v11);
    id v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, v2);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v2);
  }
  if (*(void *)(v1 + v3[8] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  return sub_251F36D00();
}

uint64_t sub_251C8D308(uint64_t a1, int *a2)
{
  uint64_t v4 = v2;
  sub_251F36CA0();
  uint64_t v5 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  LOBYTE(v17) = *(unsigned char *)(v2 + a2[5]);
  CharacteristicKind.rawValue.getter();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (long long *)(v2 + a2[6]);
  char v7 = *((unsigned char *)v6 + 16);
  long long v17 = *v6;
  char v18 = v7;
  CharacteristicKind.Value.hash(into:)();
  uint64_t v8 = v2 + a2[7];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v8, (uint64_t)v11);
  uint64_t v12 = *(void *)(v5 - 8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v5);
  if (v13 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v13);
    long long v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, v5);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v5);
  }
  if (*(void *)(v4 + a2[8] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  return sub_251F36D00();
}

uint64_t Action.CharacteristicAction.staticCharacteristic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26B21FF50;
  swift_getKeyPath();
  v8[1] = v5;
  sub_251C8F25C((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v6 = v5 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251C8F2A4(v6, (uint64_t)v4, type metadata accessor for StateSnapshot);
  Action.CharacteristicAction.staticCharacteristic(in:)((uint64_t)v4, a1);
  return sub_251C8F30C((uint64_t)v4, type metadata accessor for StateSnapshot);
}

uint64_t Action.CharacteristicAction.staticCharacteristic(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + *(int *)(type metadata accessor for StateSnapshot(0) + 60));
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_2519FE584(v3), (v12 & 1) != 0))
  {
    sub_251C8F2A4(*(void *)(v10 + 56) + *(void *)(v7 + 72) * v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v13 = type metadata accessor for Action.CharacteristicAction(0);
    uint64_t v14 = *(void *)&v9[*(int *)(v6 + 112)];
    if (*(void *)(v14 + 16))
    {
      uint64_t v15 = *(unsigned __int8 *)(v3 + *(int *)(v13 + 20));
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_2519FE568(v15);
      if (v17)
      {
        unint64_t v18 = v16;
        uint64_t v19 = *(void *)(v14 + 56);
        uint64_t v20 = type metadata accessor for StaticCharacteristic();
        uint64_t v21 = *(void *)(v20 - 8);
        sub_251C8F2A4(v19 + *(void *)(v21 + 72) * v18, a2, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a2, 0, 1, v20);
      }
      else
      {
        uint64_t v26 = type metadata accessor for StaticCharacteristic();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a2, 1, 1, v26);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 1, 1, v25);
    }
    return sub_251C8F30C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    uint64_t v22 = type metadata accessor for StaticCharacteristic();
    unint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return v23(a2, 1, 1, v22);
  }
}

uint64_t Action.CharacteristicAction.containingStaticService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26B21FF50;
  swift_getKeyPath();
  v18[1] = v7;
  sub_251C8F25C((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v8 = v7 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251C8F2A4(v8, (uint64_t)v6, type metadata accessor for StateSnapshot);
  uint64_t v9 = *(void *)&v6[*(int *)(v4 + 60)];
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_2519FE584(v2), (v11 & 1) != 0))
  {
    unint64_t v12 = v10;
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v14 = type metadata accessor for StaticService();
    uint64_t v15 = *(void *)(v14 - 8);
    sub_251C8F2A4(v13 + *(void *)(v15 + 72) * v12, a1, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
  }
  else
  {
    uint64_t v16 = type metadata accessor for StaticService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  return sub_251C8F30C((uint64_t)v6, type metadata accessor for StateSnapshot);
}

uint64_t Action.CharacteristicAction.containingStaticService(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(type metadata accessor for StateSnapshot(0) + 60));
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_2519FE584(v2), (v6 & 1) != 0))
  {
    unint64_t v7 = v5;
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v9 = type metadata accessor for StaticService();
    uint64_t v16 = *(void *)(v9 - 8);
    sub_251C8F2A4(v8 + *(void *)(v16 + 72) * v7, a2, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v11 = a2;
    uint64_t v12 = 0;
    uint64_t v13 = v9;
  }
  else
  {
    uint64_t v14 = type metadata accessor for StaticService();
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v13 = v14;
    uint64_t v11 = a2;
    uint64_t v12 = 1;
  }
  return v10(v11, v12, 1, v13);
}

void *Action.CharacteristicAction.characteristic.getter()
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B21FF50;
  uint64_t v1 = (void *)sub_251F34D50();
  id v2 = objc_msgSend(v0, sel_serviceFor_, v1);

  if (!v2) {
    return 0;
  }
  type metadata accessor for Action.CharacteristicAction(0);
  uint64_t v3 = HMService.subscript.getter();

  return v3;
}

uint64_t Action.CharacteristicAction.init(service:characteristicKind:targetValue:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a4;
  unint64_t v7 = (int *)type metadata accessor for Action.CharacteristicAction(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *a2;
  uint64_t v11 = *a3;
  uint64_t v33 = a3[1];
  uint64_t v34 = v11;
  LODWORD(v8) = *((unsigned __int8 *)a3 + 16);
  int v31 = v10;
  int v32 = v8;
  uint64_t v12 = sub_251F34DA0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v16(v15, a1, v12);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v19, 1, 1, v12);
  uint64_t v20 = *(int *)(type metadata accessor for StaticService() + 20);
  uint64_t v36 = a1;
  uint64_t v21 = (uint64_t *)(a1 + v20);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  v16(v9, (uint64_t)v15, v12);
  v9[v7[5]] = v31;
  uint64_t v24 = &v9[v7[6]];
  uint64_t v25 = v33;
  *(void *)uint64_t v24 = v34;
  *((void *)v24 + 1) = v25;
  v24[16] = v32;
  sub_251A1E280((uint64_t)v19, (uint64_t)&v9[v7[7]]);
  uint64_t v26 = qword_269B9C338;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  char v27 = byte_269B9FF88;
  sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    uint64_t v22 = 0;
  }
  uint64_t v28 = &v9[v7[8]];
  *(void *)uint64_t v28 = v23;
  *((void *)v28 + 1) = v22;
  sub_251C8C918((uint64_t)v9, v35);
  return sub_251C8F30C(v36, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t *Action.CharacteristicAction.createAction()()
{
  uint64_t v1 = v0;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_26B21FF50;
  uint64_t v3 = (void *)sub_251F34D50();
  id v4 = objc_msgSend(v2, sel_serviceFor_, v3);

  if (v4
    && (type metadata accessor for Action.CharacteristicAction(0),
        unint64_t v5 = HMService.subscript.getter(),
        v4,
        v5))
  {
    uint64_t v1 = Action.CharacteristicAction.createAction(characteristic:)(v5);
  }
  else
  {
    type metadata accessor for Action.CharacteristicAction.Error(0);
    sub_251C8F25C(&qword_269BA1378, (void (*)(uint64_t))type metadata accessor for Action.CharacteristicAction.Error);
    swift_allocError();
    sub_251C8F2A4((uint64_t)v1, v6, type metadata accessor for Action.CharacteristicAction);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t *Action.CharacteristicAction.createAction(characteristic:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  id v6 = objc_msgSend(a1, sel_characteristicType);
  uint64_t v7 = sub_251F356F0();
  uint64_t v9 = v8;

  v10._countAndFlagsBits = v7;
  v10._object = v9;
  CharacteristicKind.init(rawValue:)(v10);
  if (v61 == 174) {
    char v11 = 0;
  }
  else {
    char v11 = v61;
  }
  uint64_t v12 = type metadata accessor for Action.CharacteristicAction(0);
  char v13 = *(unsigned char *)(v4 + *(int *)(v12 + 20));
  LOBYTE(v61) = v11;
  char v63 = v13;
  unint64_t v14 = CharacteristicKind.rawValue.getter();
  uint64_t v16 = v15;
  if (v14 == CharacteristicKind.rawValue.getter() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v18 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
LABEL_20:
      type metadata accessor for Action.CharacteristicAction.Error(0);
      sub_251C8F25C(&qword_269BA1378, (void (*)(uint64_t))type metadata accessor for Action.CharacteristicAction.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
LABEL_21:
      swift_willThrow();
      return v3;
    }
  }
  uint64_t v54 = v12;
  unint64_t v57 = v2;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  unint64_t v60 = &v51;
  uint64_t v20 = *(void *)(*(void *)(v19 - 8) + 64);
  MEMORY[0x270FA5388](v19 - 8);
  id v21 = objc_msgSend(a1, sel_service);
  uint64_t v56 = (uint64_t *)a1;
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = objc_msgSend(v21, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v24 = sub_251F34DA0();
    uint64_t v25 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))((char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v24);
  }
  else
  {
    uint64_t v24 = sub_251F34DA0();
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))((char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v24);
  }
  uint64_t v59 = &v51;
  MEMORY[0x270FA5388](v25);
  uint64_t v53 = (char *)((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (char *)((char *)&v51 - v53);
  sub_251F34DA0();
  uint64_t v27 = *(void *)(v24 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v55 = v4;
  v28(v26, v4, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v26, 0, 1, v24);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v58 = &v51;
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  int v32 = (char *)&v51 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (uint64_t)&v32[*(int *)(v30 + 56)];
  sub_251A1E280((uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v32);
  sub_251A1E280((uint64_t)v26, v33);
  uint64_t v3 = *(uint64_t **)(v27 + 48);
  uint64_t v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v3)(v32, 1, v24);
  if (v34 == 1)
  {
    sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
    sub_251A1B064((uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21FF90);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v33, 1, v24) == 1)
    {
      sub_251A1B064((uint64_t)v32, &qword_26B21FF90);
      uint64_t v35 = v55;
      uint64_t v3 = v56;
      uint64_t v36 = v54;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  uint64_t v52 = (uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)((char *)&v51 - v53);
  sub_251A1E280((uint64_t)v32, (char *)&v51 - v53);
  uint64_t v38 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v3)(v33, 1, v24);
  if (v38 == 1)
  {
    uint64_t v3 = &qword_26B21FF90;
    sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
    sub_251A1B064(v52, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v24);
LABEL_16:
    sub_251A1B064((uint64_t)v32, &qword_26B21E6B8);
    goto LABEL_20;
  }
  uint64_t v53 = (char *)&v51;
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v51 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v40, v33, v24);
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  char v41 = sub_251F35650();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v27 + 8);
  v42(v40, v24);
  sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
  sub_251A1B064(v52, &qword_26B21FF90);
  v42(v37, v24);
  sub_251A1B064((uint64_t)v32, &qword_26B21FF90);
  uint64_t v35 = v55;
  uint64_t v3 = v56;
  uint64_t v36 = v54;
  if ((v41 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_18:
  unint64_t v43 = (long long *)(v35 + *(int *)(v36 + 24));
  char v44 = *((unsigned char *)v43 + 16);
  long long v61 = *v43;
  char v62 = v44;
  uint64_t v45 = CharacteristicKind.Value.rawObjectValue.getter();
  if (!v45)
  {
    type metadata accessor for Action.CharacteristicAction.Error(0);
    sub_251C8F25C(&qword_269BA1378, (void (*)(uint64_t))type metadata accessor for Action.CharacteristicAction.Error);
    swift_allocError();
    uint64_t v3 = *(uint64_t **)v43;
    unint64_t v48 = *((void *)v43 + 1);
    char v49 = *((unsigned char *)v43 + 16);
    *(void *)uint64_t v50 = *(void *)v43;
    *(void *)(v50 + 8) = v48;
    *(unsigned char *)(v50 + 16) = v49;
    swift_storeEnumTagMultiPayload();
    sub_251B2ED7C((uint64_t)v3, v48, v49);
    goto LABEL_21;
  }
  uint64_t v46 = (void *)v45;
  uint64_t v3 = (uint64_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E290]), sel_initWithCharacteristic_targetValue_, v3, v45);

  return v3;
}

uint64_t *Action.CharacteristicAction.createAction(in:)()
{
  uint64_t v1 = (uint64_t *)v0;
  sub_251B61F54(v0);
  if (!v2) {
    goto LABEL_5;
  }
  uint64_t v3 = v2;
  type metadata accessor for Action.CharacteristicAction(0);
  uint64_t v4 = HMService.subscript.getter();
  if (!v4)
  {

LABEL_5:
    type metadata accessor for Action.CharacteristicAction.Error(0);
    sub_251C8F25C(&qword_269BA1378, (void (*)(uint64_t))type metadata accessor for Action.CharacteristicAction.Error);
    swift_allocError();
    sub_251C8F2A4(v0, v6, type metadata accessor for Action.CharacteristicAction);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v1;
  }
  unint64_t v5 = v4;
  uint64_t v1 = Action.CharacteristicAction.createAction(characteristic:)(v4);

  return v1;
}

uint64_t Action.CharacteristicAction.debugDescription.getter()
{
  sub_251F36400();
  sub_251F35800();
  uint64_t v1 = type metadata accessor for Action.CharacteristicAction(0);
  sub_251F36640();
  sub_251F35800();
  if (*(void *)(v0 + *(int *)(v1 + 32) + 8))
  {
    swift_bridgeObjectRetain();
    sub_251F35800();
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
  }
  else
  {
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
    sub_251F36AB0();
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  uint64_t v3 = *(void *)v2;
  unint64_t v5 = *(void *)(v2 + 8);
  char v6 = *(unsigned char *)(v2 + 16);
  sub_251B2ED7C(*(void *)v2, v5, v6);
  CharacteristicKind.Value.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251A580B4(v3, v5, v6);
  sub_251F35800();
  return 0;
}

uint64_t _s13HomeDataModel6ActionO014CharacteristicD0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for Action.CharacteristicAction(0);
  uint64_t v5 = v4[5];
  char v6 = *(unsigned char *)(a1 + v5);
  LOBYTE(v5) = *(unsigned char *)(a2 + v5);
  LOBYTE(v51) = v6;
  LOBYTE(v49) = v5;
  unint64_t v7 = CharacteristicKind.rawValue.getter();
  uint64_t v9 = v8;
  if (v7 != CharacteristicKind.rawValue.getter()) {
    goto LABEL_5;
  }
  if (v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_5:
    char v11 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v11 & 1) == 0) {
      return result;
    }
  }
  uint64_t v13 = v4[6];
  char v14 = *(unsigned char *)(a1 + v13 + 16);
  long long v51 = *(_OWORD *)(a1 + v13);
  char v52 = v14;
  uint64_t v15 = (long long *)(a2 + v13);
  char v16 = *((unsigned char *)v15 + 16);
  long long v49 = *v15;
  char v50 = v16;
  if ((_s13HomeDataModel18CharacteristicKindO5ValueO2eeoiySbAE_AEtFZ_0((uint64_t)&v51, (uint64_t)&v49) & 1) == 0) {
    return 0;
  }
  uint64_t v17 = a1 + v4[7];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  int v47 = v42;
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v17, (uint64_t)v20);
  uint64_t v46 = v42;
  unint64_t v43 = v4;
  uint64_t v21 = MEMORY[0x270FA5388](a2 + v4[7]);
  char v44 = (char *)((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v21, (uint64_t)v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v45 = v42;
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (uint64_t)&v25[*(int *)(v23 + 56)];
  sub_251A1E280((uint64_t)v20, (uint64_t)v25);
  uint64_t v48 = v26;
  sub_251A1E280((uint64_t)v20, v26);
  uint64_t v27 = sub_251F34DA0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t v30 = v29(v25, 1, v27);
  if (v30 != 1)
  {
    v42[1] = v42;
    MEMORY[0x270FA5388](v30);
    uint64_t v31 = (char *)((char *)v42 - v44);
    sub_251A1E280((uint64_t)v25, (char *)v42 - v44);
    uint64_t v32 = v29((char *)v48, 1, v27);
    if (v32 != 1)
    {
      char v44 = (char *)v42;
      MEMORY[0x270FA5388](v32);
      uint64_t v34 = v31;
      uint64_t v35 = (char *)v42 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v35, v48, v27);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      LODWORD(v48) = sub_251F35650();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v35, v27);
      sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
      v36(v34, v27);
      sub_251A1B064((uint64_t)v25, &qword_26B21FF90);
      if ((v48 & 1) == 0) {
        return 0;
      }
      goto LABEL_14;
    }
    sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
LABEL_12:
    sub_251A1B064((uint64_t)v25, &qword_26B21E6B8);
    return 0;
  }
  sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
  if (v29((char *)v48, 1, v27) != 1) {
    goto LABEL_12;
  }
  sub_251A1B064((uint64_t)v25, &qword_26B21FF90);
LABEL_14:
  uint64_t v37 = v43[8];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = *(void *)(a1 + v37 + 8);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  if (v39)
  {
    if (v41 && (*v38 == *v40 && v39 == v41 || (sub_251F36B10() & 1) != 0)) {
      return 1;
    }
  }
  else if (!v41)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_251C8F25C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251C8F2A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C8F30C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251C8F36C()
{
  return sub_251C8F25C(&qword_269BA1380, (void (*)(uint64_t))type metadata accessor for Action.CharacteristicAction);
}

char *_s20CharacteristicActionVwCP(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v24(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = *(void *)&a2[v9];
    unint64_t v12 = *(void *)&a2[v9 + 8];
    char v13 = a2[v9 + 16];
    sub_251B2ED7C(v11, v12, v13);
    *(void *)uint64_t v10 = v11;
    *((void *)v10 + 1) = v12;
    v10[16] = v13;
    uint64_t v14 = a3[7];
    uint64_t v15 = &a1[v14];
    char v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v14], 1, v7))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v24(v15, v16, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s20CharacteristicActionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  char v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  sub_251A580B4(*(void *)(a1 + *(int *)(a2 + 24)), *(void *)(a1 + *(int *)(a2 + 24) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 24) + 16));
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  return swift_bridgeObjectRelease();
}

char *_s20CharacteristicActionVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v22(a1, a2, v6);
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = *(void *)&a2[v8];
  unint64_t v11 = *(void *)&a2[v8 + 8];
  char v12 = a2[v8 + 16];
  sub_251B2ED7C(v10, v11, v12);
  *(void *)uint64_t v9 = v10;
  *((void *)v9 + 1) = v11;
  unsigned char v9[16] = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v13], 1, v6))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v22(v14, v15, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20CharacteristicActionVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v28(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)v10;
  unint64_t v12 = *(void *)(v10 + 8);
  char v13 = *(unsigned char *)(v10 + 16);
  sub_251B2ED7C(*(void *)v10, v12, v13);
  uint64_t v14 = *(void *)v9;
  unint64_t v15 = *(void *)(v9 + 8);
  *(void *)uint64_t v9 = v11;
  *(void *)(v9 + 8) = v12;
  char v16 = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v9 + 16) = v13;
  sub_251A580B4(v14, v15, v16);
  uint64_t v29 = a3;
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v21 = v20(a1 + v17, 1, v6);
  int v22 = v20((uint64_t)v19, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      v28((uint64_t)v18, (uint64_t)v19, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v18, v6);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v18, v19, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
LABEL_7:
  uint64_t v24 = v29[8];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *_s20CharacteristicActionVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  uint64_t v12 = a3[7];
  char v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v12], 1, v6))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v8(v13, v14, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  }
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  return a1;
}

uint64_t _s20CharacteristicActionVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v28(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 16);
  uint64_t v12 = *(void *)v9;
  unint64_t v13 = *(void *)(v9 + 8);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  char v14 = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v9 + 16) = v11;
  sub_251A580B4(v12, v13, v14);
  uint64_t v29 = a3;
  uint64_t v15 = a3[7];
  char v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v19 = v18(a1 + v15, 1, v6);
  int v20 = v18((uint64_t)v17, 1, v6);
  if (!v19)
  {
    if (!v20)
    {
      v28((uint64_t)v16, (uint64_t)v17, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v16, v17, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
LABEL_7:
  uint64_t v22 = v29[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20CharacteristicActionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C8FE54);
}

uint64_t sub_251C8FE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t _s20CharacteristicActionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C8FF90);
}

uint64_t sub_251C8FF90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_251C900A8()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251A24BB4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *_s20CharacteristicActionV5ErrorOwCP(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void *)a2;
        uint64_t v8 = (void *)*((void *)a2 + 1);
        *a1 = v7;
        a1[1] = (uint64_t)v8;
        swift_unknownObjectRetain();
        id v9 = v8;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v12 = *(void **)a2;
        unint64_t v13 = (void *)*((void *)a2 + 1);
        *a1 = (uint64_t)v12;
        a1[1] = (uint64_t)v13;
        id v14 = v12;
        id v15 = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v16 = sub_251F34DA0();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v36 = *(void (**)(uint64_t *, char *, uint64_t))(v17 + 16);
        v36(a1, a2, v16);
        uint64_t v18 = (int *)type metadata accessor for Action.CharacteristicAction(0);
        *((unsigned char *)a1 + v18[5]) = a2[v18[5]];
        uint64_t v19 = v18[6];
        int v20 = (char *)a1 + v19;
        uint64_t v21 = &a2[v19];
        uint64_t v22 = *(void *)v21;
        unint64_t v23 = *((void *)v21 + 1);
        char v24 = v21[16];
        sub_251B2ED7C(*(void *)v21, v23, v24);
        *(void *)int v20 = v22;
        *((void *)v20 + 1) = v23;
        v20[16] = v24;
        uint64_t v25 = v18[7];
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = &a2[v25];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v25], 1, v16))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          v36((uint64_t *)v26, v27, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
        }
        uint64_t v32 = v18[8];
        uint64_t v33 = (uint64_t *)((char *)a1 + v32);
        uint64_t v34 = &a2[v32];
        uint64_t v35 = *((void *)v34 + 1);
        void *v33 = *(void *)v34;
        v33[1] = v35;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v29 = *(void *)a2;
        unint64_t v30 = *((void *)a2 + 1);
        char v31 = a2[16];
        sub_251B2ED7C(v29, v30, v31);
        *a1 = v29;
        a1[1] = v30;
        *((unsigned char *)a1 + 16) = v31;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void _s20CharacteristicActionV5ErrorOwxx(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_unknownObjectRelease();
      goto LABEL_4;
    case 1u:

LABEL_4:
      uint64_t v2 = *(void **)(a1 + 8);

      break;
    case 2u:
      uint64_t v3 = sub_251F34DA0();
      uint64_t v4 = *(void *)(v3 - 8);
      int v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v5(a1, v3);
      uint64_t v6 = type metadata accessor for Action.CharacteristicAction(0);
      sub_251A580B4(*(void *)(a1 + *(int *)(v6 + 24)), *(void *)(a1 + *(int *)(v6 + 24) + 8), *(unsigned char *)(a1 + *(int *)(v6 + 24) + 16));
      uint64_t v7 = a1 + *(int *)(v6 + 28);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3)) {
        v5(v7, v3);
      }
      swift_bridgeObjectRelease();
      break;
    case 3u:
      id v8 = *(id *)a1;
      unint64_t v9 = *(void *)(a1 + 8);
      char v10 = *(unsigned char *)(a1 + 16);
      sub_251A580B4((uint64_t)v8, v9, v10);
      break;
    default:
      return;
  }
}

uint64_t *_s20CharacteristicActionV5ErrorOwcp(uint64_t *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = (void *)*((void *)a2 + 1);
      *a1 = v6;
      a1[1] = (uint64_t)v7;
      swift_unknownObjectRetain();
      id v8 = v7;
      goto LABEL_10;
    case 1u:
      unint64_t v9 = *(void **)a2;
      char v10 = (void *)*((void *)a2 + 1);
      *a1 = (uint64_t)v9;
      a1[1] = (uint64_t)v10;
      id v11 = v9;
      id v12 = v10;
      goto LABEL_10;
    case 2u:
      uint64_t v13 = sub_251F34DA0();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v34 = *(void (**)(uint64_t *, char *, uint64_t))(v14 + 16);
      v34(a1, a2, v13);
      id v15 = (int *)type metadata accessor for Action.CharacteristicAction(0);
      *((unsigned char *)a1 + v15[5]) = a2[v15[5]];
      uint64_t v16 = v15[6];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = &a2[v16];
      uint64_t v19 = *(void *)v18;
      unint64_t v20 = *((void *)v18 + 1);
      char v21 = v18[16];
      sub_251B2ED7C(*(void *)v18, v20, v21);
      *(void *)uint64_t v17 = v19;
      *((void *)v17 + 1) = v20;
      v17[16] = v21;
      uint64_t v22 = v15[7];
      unint64_t v23 = (char *)a1 + v22;
      char v24 = &a2[v22];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&a2[v22], 1, v13))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        v34((uint64_t *)v23, v24, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
      }
      uint64_t v29 = v15[8];
      unint64_t v30 = (uint64_t *)((char *)a1 + v29);
      char v31 = &a2[v29];
      uint64_t v32 = *((void *)v31 + 1);
      *unint64_t v30 = *(void *)v31;
      v30[1] = v32;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 3u:
      uint64_t v26 = *(void *)a2;
      unint64_t v27 = *((void *)a2 + 1);
      char v28 = a2[16];
      sub_251B2ED7C(v26, v27, v28);
      *a1 = v26;
      a1[1] = v27;
      *((unsigned char *)a1 + 16) = v28;
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *_s20CharacteristicActionV5ErrorOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251C8F30C((uint64_t)a1, type metadata accessor for Action.CharacteristicAction.Error);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        uint64_t v6 = (void *)a2[1];
        a1[1] = (uint64_t)v6;
        swift_unknownObjectRetain();
        id v7 = v6;
        goto LABEL_11;
      case 1u:
        id v8 = (void *)*a2;
        *a1 = *a2;
        unint64_t v9 = (void *)a2[1];
        a1[1] = (uint64_t)v9;
        id v10 = v8;
        id v11 = v9;
        goto LABEL_11;
      case 2u:
        uint64_t v12 = sub_251F34DA0();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v32 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16);
        v32(a1, a2, v12);
        uint64_t v14 = (int *)type metadata accessor for Action.CharacteristicAction(0);
        *((unsigned char *)a1 + v14[5]) = *((unsigned char *)a2 + v14[5]);
        uint64_t v15 = v14[6];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = *(void *)v17;
        unint64_t v19 = *((void *)v17 + 1);
        char v20 = v17[16];
        sub_251B2ED7C(*(void *)v17, v19, v20);
        *(void *)uint64_t v16 = v18;
        *((void *)v16 + 1) = v19;
        v16[16] = v20;
        uint64_t v21 = v14[7];
        uint64_t v22 = (char *)a1 + v21;
        unint64_t v23 = (char *)a2 + v21;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))((char *)a2 + v21, 1, v12))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          v32((uint64_t *)v22, (uint64_t *)v23, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
        }
        uint64_t v28 = v14[8];
        uint64_t v29 = (uint64_t *)((char *)a1 + v28);
        unint64_t v30 = (char *)a2 + v28;
        void *v29 = *(void *)v30;
        v29[1] = *((void *)v30 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 3u:
        uint64_t v25 = *a2;
        unint64_t v26 = a2[1];
        char v27 = *((unsigned char *)a2 + 16);
        sub_251B2ED7C(v25, v26, v27);
        *a1 = v25;
        a1[1] = v26;
        *((unsigned char *)a1 + 16) = v27;
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *_s20CharacteristicActionV5ErrorOwtk(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_251F34DA0();
    uint64_t v7 = *(void *)(v6 - 8);
    id v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v8(a1, a2, v6);
    unint64_t v9 = (int *)type metadata accessor for Action.CharacteristicAction(0);
    a1[v9[5]] = a2[v9[5]];
    uint64_t v10 = v9[6];
    id v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    v11[16] = v12[16];
    *(_OWORD *)id v11 = *(_OWORD *)v12;
    uint64_t v13 = v9[7];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v13], 1, v6))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v8(v14, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
    }
    *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *_s20CharacteristicActionV5ErrorOwta(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251C8F30C((uint64_t)a1, type metadata accessor for Action.CharacteristicAction.Error);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_251F34DA0();
      uint64_t v7 = *(void *)(v6 - 8);
      id v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v8(a1, a2, v6);
      unint64_t v9 = (int *)type metadata accessor for Action.CharacteristicAction(0);
      a1[v9[5]] = a2[v9[5]];
      uint64_t v10 = v9[6];
      id v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      v11[16] = v12[16];
      *(_OWORD *)id v11 = *(_OWORD *)v12;
      uint64_t v13 = v9[7];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v13], 1, v6))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v8(v14, v15, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      }
      *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_251C90FC4()
{
  uint64_t result = type metadata accessor for Action.CharacteristicAction(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t StaticRVCClusterGroup.ErrorState.rawValue.getter()
{
  int v1 = *v0;
  if (v1 >= 0) {
    return v1;
  }
  else {
    return (v1 & 0x7Fu) + 64;
  }
}

BOOL static StaticRVCClusterGroup.ErrorState.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((v2 & 0x80u) == 0) {
    BOOL v4 = v3 >= 0;
  }
  else {
    BOOL v4 = v3 < 0;
  }
  return v2 == v3 && v4;
}

void ModeClusterSemanticTag.id.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

HomeDataModel::ModeClusterSemanticTag::Common_optional __swiftcall ModeClusterSemanticTag.Common.init(rawValue:)(Swift::UInt16 rawValue)
{
  char v2 = rawValue;
  if (rawValue >= 0xAu) {
    char v2 = 10;
  }
  *int v1 = v2;
  return (HomeDataModel::ModeClusterSemanticTag::Common_optional)rawValue;
}

uint64_t ModeClusterSemanticTag.Common.rawValue.getter()
{
  return *v0;
}

uint64_t sub_251C910D0()
{
  return sub_251F36D00();
}

uint64_t sub_251C91118()
{
  return sub_251F36CD0();
}

uint64_t sub_251C91144()
{
  return sub_251F36D00();
}

HomeDataModel::ModeClusterSemanticTag::Common_optional sub_251C91188(Swift::UInt16 *a1)
{
  return ModeClusterSemanticTag.Common.init(rawValue:)(*a1);
}

void sub_251C91190(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_251C9119C()
{
  return sub_251F35A70();
}

uint64_t sub_251C911FC()
{
  return sub_251F35A10();
}

HomeDataModel::ModeClusterSemanticTag::RVCRun_optional __swiftcall ModeClusterSemanticTag.RVCRun.init(rawValue:)(Swift::UInt16 rawValue)
{
  char v2 = rawValue;
  if (rawValue - 0x4000 >= 3) {
    char v2 = 3;
  }
  *int v1 = v2;
  return (HomeDataModel::ModeClusterSemanticTag::RVCRun_optional)rawValue;
}

uint64_t ModeClusterSemanticTag.RVCRun.rawValue.getter()
{
  return *v0 | 0x4000u;
}

uint64_t sub_251C91278()
{
  return sub_251F36CD0();
}

HomeDataModel::ModeClusterSemanticTag::RVCRun_optional sub_251C912AC(Swift::UInt16 *a1)
{
  return ModeClusterSemanticTag.RVCRun.init(rawValue:)(*a1);
}

void sub_251C912B4(_WORD *a1@<X8>)
{
  *a1 = *v1 | 0x4000;
}

uint64_t sub_251C912C4()
{
  return sub_251F35A70();
}

uint64_t sub_251C91324()
{
  return sub_251F35A10();
}

uint64_t sub_251C91374()
{
  return sub_251F36D00();
}

uint64_t sub_251C913BC()
{
  return sub_251F36D00();
}

uint64_t sub_251C91400()
{
  return sub_251F35A70();
}

uint64_t sub_251C91460()
{
  return sub_251F35A10();
}

uint64_t ModeClusterSemanticTag.init(rawValue:for:)@<X0>(uint64_t result@<X0>, unsigned __int8 *a2@<X1>, unsigned char *a3@<X8>)
{
  if ((unsigned __int16)result >= 0xAu)
  {
    unsigned int v3 = *a2;
    int v4 = result + 64;
    if ((unsigned __int16)(result - 0x4000) < 3u)
    {
      int v5 = result | 0xFFFFFF80;
    }
    else
    {
      int v4 = 240;
      int v5 = 240;
    }
    if (v3 != 24) {
      int v4 = v5;
    }
    if (v3 - 26 >= 2) {
      unsigned int v6 = v4;
    }
    else {
      unsigned int v6 = 240;
    }
    if (v3 >= 0x18) {
      uint64_t result = v6;
    }
    else {
      uint64_t result = 240;
    }
  }
  *a3 = result;
  return result;
}

uint64_t ModeClusterSemanticTag.rawValue.getter()
{
  unsigned int v1 = *v0;
  if (v1 >> 6) {
    return v1 & 0x3F | 0x4000;
  }
  else {
    return *v0;
  }
}

uint64_t ModeClusterSemanticTag.hash(into:)()
{
  sub_251F36CD0();
  return sub_251F357B0();
}

uint64_t sub_251C915E8()
{
  uint64_t v1 = 0x6E7552637672;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E61656C43637672;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F6D6D6F63;
  }
}

uint64_t sub_251C9163C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C9611C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C91664(uint64_t a1)
{
  unint64_t v2 = sub_251C9408C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C916A0(uint64_t a1)
{
  unint64_t v2 = sub_251C9408C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C916DC(uint64_t a1)
{
  unint64_t v2 = sub_251C94230();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C91718(uint64_t a1)
{
  unint64_t v2 = sub_251C94230();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C91754(uint64_t a1)
{
  unint64_t v2 = sub_251C940E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C91790(uint64_t a1)
{
  unint64_t v2 = sub_251C940E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C917CC(uint64_t a1)
{
  unint64_t v2 = sub_251C94188();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C91808(uint64_t a1)
{
  unint64_t v2 = sub_251C94188();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ModeClusterSemanticTag.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA13A8);
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA13B0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA13B8);
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA13C0);
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C9408C();
  sub_251F36DA0();
  if (v16 >> 6)
  {
    char v17 = v16 & 0x3F;
    if (v16 >> 6 == 1)
    {
      char v33 = 1;
      sub_251C94188();
      uint64_t v18 = v29;
      sub_251F36900();
      char v32 = v17;
      sub_251C941DC();
      uint64_t v19 = v25;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v19);
    }
    else
    {
      char v35 = 2;
      sub_251C940E0();
      uint64_t v18 = v29;
      sub_251F36900();
      char v34 = v17;
      sub_251C94134();
      uint64_t v22 = v27;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v22);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v18);
  }
  else
  {
    char v31 = 0;
    sub_251C94230();
    uint64_t v20 = v29;
    sub_251F36900();
    char v30 = v16;
    sub_251C94284();
    sub_251F36A20();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v20);
  }
}

uint64_t ModeClusterSemanticTag.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t ModeClusterSemanticTag.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v34 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1400);
  uint64_t v33 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  char v35 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1408);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  uint64_t v32 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1410);
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1418);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_251C9408C();
  uint64_t v16 = v37;
  sub_251F36D90();
  if (v16) {
    goto LABEL_9;
  }
  char v17 = v35;
  uint64_t v37 = v12;
  uint64_t v18 = sub_251F368E0();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v21 = sub_251F36490();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v23 = &type metadata for ModeClusterSemanticTag;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v11);
LABEL_9:
    uint64_t v24 = (uint64_t)v36;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  if (*(unsigned char *)(v18 + 32))
  {
    if (*(unsigned char *)(v18 + 32) == 1)
    {
      char v41 = 1;
      sub_251C94188();
      sub_251F36770();
      sub_251C9432C();
      uint64_t v19 = v31;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v11);
      char v20 = v40 | 0x40;
    }
    else
    {
      char v43 = 2;
      sub_251C940E0();
      sub_251F36770();
      sub_251C942D8();
      uint64_t v26 = v29;
      sub_251F36880();
      uint64_t v27 = v37;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v11);
      char v20 = v42 | 0x80;
    }
  }
  else
  {
    char v39 = 0;
    sub_251C94230();
    sub_251F36770();
    sub_251C94380();
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v11);
    char v20 = v38;
  }
  uint64_t v24 = (uint64_t)v36;
  unsigned char *v34 = v20;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_251C92358()
{
  sub_251F36CD0();
  return sub_251F357B0();
}

uint64_t sub_251C92410()
{
  return sub_251F36D00();
}

uint64_t sub_251C924C0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ModeClusterSemanticTag.init(from:)(a1, a2);
}

uint64_t sub_251C924D8(void *a1)
{
  return ModeClusterSemanticTag.encode(to:)(a1);
}

uint64_t sub_251C924F0()
{
  return sub_251F35A60();
}

uint64_t sub_251C92550()
{
  return sub_251F35A00();
}

uint64_t StaticRVCClusterGroup.OperationalState.RVC.init(rawValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = (result - 64);
  if (v2 >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_251C925C4@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticRVCClusterGroup.OperationalState.RVC.init(rawValue:)(*a1, a2);
}

uint64_t sub_251C925CC()
{
  return sub_251F35A60();
}

uint64_t sub_251C9262C()
{
  return sub_251F35A00();
}

uint64_t StaticRVCClusterGroup.OperationalState.init(rawValue:for:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X8>)
{
  if (result >= 4u)
  {
    if ((result - 64) >= 3u) {
      unsigned int v3 = -4;
    }
    else {
      unsigned int v3 = result + 64;
    }
    if (*a2 == 23) {
      uint64_t result = v3;
    }
    else {
      uint64_t result = 252;
    }
  }
  *a3 = result;
  return result;
}

uint64_t sub_251C926BC()
{
  if (*v0) {
    return 6518386;
  }
  else {
    return 0x6E6F6D6D6F63;
  }
}

uint64_t sub_251C926EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C96264(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C92714(uint64_t a1)
{
  unint64_t v2 = sub_251C943D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C92750(uint64_t a1)
{
  unint64_t v2 = sub_251C943D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C9278C(uint64_t a1)
{
  unint64_t v2 = sub_251C944D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C927C8(uint64_t a1)
{
  unint64_t v2 = sub_251C944D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C92804(uint64_t a1)
{
  unint64_t v2 = sub_251C94428();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C92840(uint64_t a1)
{
  unint64_t v2 = sub_251C94428();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRVCClusterGroup.OperationalState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1438);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1440);
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1448);
  uint64_t v8 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C943D4();
  sub_251F36DA0();
  if (v11 < 0)
  {
    char v14 = v11 & 0x7F;
    char v26 = 1;
    sub_251C94428();
    uint64_t v15 = v18;
    uint64_t v16 = v22;
    sub_251F36900();
    char v25 = v14;
    sub_251C9447C();
    uint64_t v17 = v20;
    sub_251F36A20();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  }
  else
  {
    char v24 = 0;
    sub_251C944D0();
    uint64_t v12 = v22;
    sub_251F36900();
    char v23 = v11;
    sub_251C94524();
    sub_251F36A20();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v12);
  }
}

uint64_t StaticRVCClusterGroup.OperationalState.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticRVCClusterGroup.OperationalState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1478);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1480);
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1488);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_251C943D4();
  uint64_t v14 = v27;
  sub_251F36D90();
  if (!v14)
  {
    uint64_t v15 = v25;
    uint64_t v27 = v10;
    uint64_t v16 = sub_251F368E0();
    if (*(void *)(v16 + 16) == 1)
    {
      if (*(unsigned char *)(v16 + 32))
      {
        char v31 = 1;
        sub_251C94428();
        sub_251F36770();
        sub_251C94578();
        sub_251F36880();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v15);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v9);
        char v21 = v30 | 0x80;
      }
      else
      {
        char v29 = 0;
        sub_251C944D0();
        sub_251F36770();
        sub_251C945CC();
        sub_251F36880();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v9);
        char v21 = v28;
      }
      *uint64_t v22 = v21;
    }
    else
    {
      uint64_t v17 = sub_251F36490();
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      *uint64_t v19 = &type metadata for StaticRVCClusterGroup.OperationalState;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
}

uint64_t sub_251C930F0()
{
  return sub_251F36D00();
}

uint64_t sub_251C93180@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticRVCClusterGroup.OperationalState.init(from:)(a1, a2);
}

uint64_t sub_251C93198(void *a1)
{
  return StaticRVCClusterGroup.OperationalState.encode(to:)(a1);
}

unsigned char *StaticRVCClusterGroup.SimpleOperationalState.init(with:)@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  int v2 = (char)*result;
  if (v2 >= 0) {
    BOOL v3 = *result != 1;
  }
  else {
    BOOL v3 = (v2 & 0x7Fu) - 1 < 2;
  }
  *a2 = v3;
  return result;
}

BOOL static StaticRVCClusterGroup.SimpleOperationalState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticRVCClusterGroup.SimpleOperationalState.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251C93224()
{
  if (*v0) {
    return 1701602409;
  }
  else {
    return 0x676E696E6E7572;
  }
}

uint64_t sub_251C93258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C96340(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C93280(uint64_t a1)
{
  unint64_t v2 = sub_251C94620();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C932BC(uint64_t a1)
{
  unint64_t v2 = sub_251C94620();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C932F8(uint64_t a1)
{
  unint64_t v2 = sub_251C94674();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C93334(uint64_t a1)
{
  unint64_t v2 = sub_251C94674();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C93370(uint64_t a1)
{
  unint64_t v2 = sub_251C946C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C933AC(uint64_t a1)
{
  unint64_t v2 = sub_251C946C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRVCClusterGroup.SimpleOperationalState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA14A0);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA14A8);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA14B0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C94620();
  sub_251F36DA0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_251C94674();
    uint64_t v14 = v18;
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_251C946C8();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t StaticRVCClusterGroup.SimpleOperationalState.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticRVCClusterGroup.SimpleOperationalState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA14D0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA14D8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA14E0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C94620();
  uint64_t v11 = v32;
  sub_251F36D90();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_251F36490();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *char v22 = &type metadata for StaticRVCClusterGroup.SimpleOperationalState;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_251C94674();
    uint64_t v18 = v14;
    sub_251F36770();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_251C946C8();
    sub_251F36770();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  unsigned char *v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_251C93B2C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticRVCClusterGroup.SimpleOperationalState.init(from:)(a1, a2);
}

uint64_t sub_251C93B44(void *a1)
{
  return StaticRVCClusterGroup.SimpleOperationalState.encode(to:)(a1);
}

void static StaticRVCClusterGroup.ErrorState.noError.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticRVCClusterGroup.ErrorState.Common.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = result;
  if ((result & 0xFC) != 0) {
    char v2 = 4;
  }
  *a2 = v2;
  return result;
}

uint64_t StaticRVCClusterGroup.ErrorState.Common.rawValue.getter()
{
  return *v0;
}

uint64_t sub_251C93B84@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  return StaticRVCClusterGroup.ErrorState.Common.init(rawValue:)(*a1, a2);
}

uint64_t sub_251C93B8C()
{
  return sub_251F35A60();
}

uint64_t sub_251C93BEC()
{
  return sub_251F35A00();
}

uint64_t StaticRVCClusterGroup.ErrorState.RVC.init(rawValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = (result - 64);
  if (v2 >= 9) {
    LOBYTE(v2) = 9;
  }
  *a2 = v2;
  return result;
}

uint64_t StaticRVCClusterGroup.ErrorState.RVC.rawValue.getter()
{
  return *v0 + 64;
}

uint64_t sub_251C93C64()
{
  return sub_251F36D00();
}

uint64_t sub_251C93CAC()
{
  return sub_251F36CC0();
}

uint64_t sub_251C93CDC()
{
  return sub_251F36D00();
}

uint64_t sub_251C93D20@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticRVCClusterGroup.ErrorState.RVC.init(rawValue:)(*a1, a2);
}

void sub_251C93D28(unsigned char *a1@<X8>)
{
  *a1 = *v1 + 64;
}

uint64_t sub_251C93D38()
{
  return sub_251F35A60();
}

uint64_t sub_251C93D98()
{
  return sub_251F35A00();
}

uint64_t StaticRVCClusterGroup.ErrorState.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if ((result & 0xFC) != 0) {
    char v2 = -16;
  }
  else {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t StaticRVCClusterGroup.ErrorState.init(rawValue:for:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X8>)
{
  if (result >= 4u)
  {
    if ((result - 64) >= 9u) {
      unsigned int v3 = -16;
    }
    else {
      unsigned int v3 = result + 64;
    }
    if (*a2 == 23) {
      uint64_t result = v3;
    }
    else {
      uint64_t result = 240;
    }
  }
  *a3 = result;
  return result;
}

uint64_t _s13HomeDataModel21StaticRVCClusterGroupV16OperationalStateO4hash4intoys6HasherVz_tF_0()
{
  sub_251F36CC0();
  return sub_251F357B0();
}

uint64_t sub_251C93EB4@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  return StaticRVCClusterGroup.ErrorState.init(rawValue:)(*a1, a2);
}

void sub_251C93EBC(unsigned char *a1@<X8>)
{
  int v2 = *v1;
  if (v2 < 0) {
    LOBYTE(v2) = (v2 & 0x7F) + 64;
  }
  *a1 = v2;
}

BOOL sub_251C93ED8(unsigned __int8 *a1, char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((v2 & 0x80u) == 0) {
    BOOL v4 = v3 >= 0;
  }
  else {
    BOOL v4 = v3 < 0;
  }
  return v2 == v3 && v4;
}

uint64_t sub_251C93F04()
{
  return sub_251F36D00();
}

uint64_t sub_251C93F88()
{
  return sub_251F35A60();
}

uint64_t sub_251C93FE8()
{
  return sub_251F35A00();
}

BOOL _s13HomeDataModel22ModeClusterSemanticTagO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  unsigned int v4 = v2 >> 6;
  BOOL v6 = v3 < 0x40 && v2 == v3;
  int v7 = v3 & 0xC0;
  char v8 = v3 ^ v2;
  BOOL v9 = (v8 & 0x3F) == 0;
  if (v7 != 64) {
    BOOL v9 = 0;
  }
  BOOL v10 = (v8 & 0x3F) == 0;
  if (v7 != 128) {
    BOOL v10 = 0;
  }
  if (v4 == 1) {
    BOOL v10 = v9;
  }
  if (v4) {
    return v10;
  }
  else {
    return v6;
  }
}

unint64_t sub_251C9408C()
{
  unint64_t result = qword_269BA13C8;
  if (!qword_269BA13C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA13C8);
  }
  return result;
}

unint64_t sub_251C940E0()
{
  unint64_t result = qword_269BA13D0;
  if (!qword_269BA13D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA13D0);
  }
  return result;
}

unint64_t sub_251C94134()
{
  unint64_t result = qword_269BA13D8;
  if (!qword_269BA13D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA13D8);
  }
  return result;
}

unint64_t sub_251C94188()
{
  unint64_t result = qword_269BA13E0;
  if (!qword_269BA13E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA13E0);
  }
  return result;
}

unint64_t sub_251C941DC()
{
  unint64_t result = qword_269BA13E8;
  if (!qword_269BA13E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA13E8);
  }
  return result;
}

unint64_t sub_251C94230()
{
  unint64_t result = qword_269BA13F0;
  if (!qword_269BA13F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA13F0);
  }
  return result;
}

unint64_t sub_251C94284()
{
  unint64_t result = qword_269BA13F8;
  if (!qword_269BA13F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA13F8);
  }
  return result;
}

unint64_t sub_251C942D8()
{
  unint64_t result = qword_269BA1420;
  if (!qword_269BA1420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1420);
  }
  return result;
}

unint64_t sub_251C9432C()
{
  unint64_t result = qword_269BA1428;
  if (!qword_269BA1428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1428);
  }
  return result;
}

unint64_t sub_251C94380()
{
  unint64_t result = qword_269BA1430;
  if (!qword_269BA1430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1430);
  }
  return result;
}

unint64_t sub_251C943D4()
{
  unint64_t result = qword_269BA1450;
  if (!qword_269BA1450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1450);
  }
  return result;
}

unint64_t sub_251C94428()
{
  unint64_t result = qword_269BA1458;
  if (!qword_269BA1458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1458);
  }
  return result;
}

unint64_t sub_251C9447C()
{
  unint64_t result = qword_269BA1460;
  if (!qword_269BA1460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1460);
  }
  return result;
}

unint64_t sub_251C944D0()
{
  unint64_t result = qword_269BA1468;
  if (!qword_269BA1468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1468);
  }
  return result;
}

unint64_t sub_251C94524()
{
  unint64_t result = qword_269BA1470;
  if (!qword_269BA1470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1470);
  }
  return result;
}

unint64_t sub_251C94578()
{
  unint64_t result = qword_269BA1490;
  if (!qword_269BA1490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1490);
  }
  return result;
}

unint64_t sub_251C945CC()
{
  unint64_t result = qword_269BA1498;
  if (!qword_269BA1498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1498);
  }
  return result;
}

unint64_t sub_251C94620()
{
  unint64_t result = qword_269BA14B8;
  if (!qword_269BA14B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA14B8);
  }
  return result;
}

unint64_t sub_251C94674()
{
  unint64_t result = qword_269BA14C0;
  if (!qword_269BA14C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA14C0);
  }
  return result;
}

unint64_t sub_251C946C8()
{
  unint64_t result = qword_269BA14C8;
  if (!qword_269BA14C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA14C8);
  }
  return result;
}

unint64_t sub_251C94720()
{
  unint64_t result = qword_269BA14E8;
  if (!qword_269BA14E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA14E8);
  }
  return result;
}

unint64_t sub_251C94778()
{
  unint64_t result = qword_269BA14F0;
  if (!qword_269BA14F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA14F0);
  }
  return result;
}

unint64_t sub_251C947D0()
{
  unint64_t result = qword_269BA14F8;
  if (!qword_269BA14F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA14F8);
  }
  return result;
}

unint64_t sub_251C94828()
{
  unint64_t result = qword_269BA1500;
  if (!qword_269BA1500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1500);
  }
  return result;
}

unint64_t sub_251C94880()
{
  unint64_t result = qword_269BA1508;
  if (!qword_269BA1508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1508);
  }
  return result;
}

unint64_t sub_251C948D8()
{
  unint64_t result = qword_269BA1510;
  if (!qword_269BA1510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1510);
  }
  return result;
}

unint64_t sub_251C94930()
{
  unint64_t result = qword_269BA1518;
  if (!qword_269BA1518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1518);
  }
  return result;
}

unint64_t sub_251C94988()
{
  unint64_t result = qword_269BA1520;
  if (!qword_269BA1520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1520);
  }
  return result;
}

unint64_t sub_251C949E0()
{
  unint64_t result = qword_269BA1528;
  if (!qword_269BA1528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1528);
  }
  return result;
}

unint64_t sub_251C94A38()
{
  unint64_t result = qword_269BA1530;
  if (!qword_269BA1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1530);
  }
  return result;
}

unint64_t sub_251C94A90()
{
  unint64_t result = qword_269BA1538;
  if (!qword_269BA1538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1538);
  }
  return result;
}

unint64_t sub_251C94AE8()
{
  unint64_t result = qword_269BA1540;
  if (!qword_269BA1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1540);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModeClusterSemanticTag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE) {
    goto LABEL_17;
  }
  if (a2 + 242 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 242) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 242;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 242;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 242;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 2) & 0xC | (*a1 >> 6)) ^ 0xF;
  if (v6 >= 0xD) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ModeClusterSemanticTag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 242 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 242) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD)
  {
    unsigned int v6 = ((a2 - 14) >> 8) + 1;
    *unint64_t result = a2 - 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C94CB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 16 * (((-a2 >> 2) & 3) - 4 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_251C94CDC(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

unsigned char *sub_251C94CE8(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_251C94CF8(unsigned char *result, char a2)
{
  *unint64_t result = *result & 0xF | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for ModeClusterSemanticTag()
{
  return &type metadata for ModeClusterSemanticTag;
}

unsigned char *storeEnumTagSinglePayload for ModeClusterSemanticTag.Common(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C94DE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModeClusterSemanticTag.Common()
{
  return &type metadata for ModeClusterSemanticTag.Common;
}

ValueMetadata *type metadata accessor for ModeClusterSemanticTag.RVCRun()
{
  return &type metadata for ModeClusterSemanticTag.RVCRun;
}

ValueMetadata *type metadata accessor for ModeClusterSemanticTag.RVCClean()
{
  return &type metadata for ModeClusterSemanticTag.RVCClean;
}

uint64_t _s16OperationalStateOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x3F) {
    goto LABEL_17;
  }
  if (a2 + 193 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 193) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 193;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 193;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 193;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 0x3E | (*a1 >> 7)) ^ 0x3F;
  if (v6 >= 0x3E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *_s16OperationalStateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 193 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 193) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3E)
  {
    unsigned int v6 = ((a2 - 63) >> 8) + 1;
    *unint64_t result = a2 - 63;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C94FC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

unsigned char *sub_251C94FE8(unsigned char *result, char a2)
{
  *unint64_t result = *result & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.OperationalState()
{
  return &type metadata for StaticRVCClusterGroup.OperationalState;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.OperationalState.Common()
{
  return &type metadata for StaticRVCClusterGroup.OperationalState.Common;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.OperationalState.RVC()
{
  return &type metadata for StaticRVCClusterGroup.OperationalState.RVC;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.SimpleOperationalState()
{
  return &type metadata for StaticRVCClusterGroup.SimpleOperationalState;
}

uint64_t _s10ErrorStateOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF) {
    goto LABEL_17;
  }
  if (a2 + 241 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 241) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 241;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 241;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 241;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 3) & 0xE | (*a1 >> 7)) ^ 0xF;
  if (v6 >= 0xE) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *_s10ErrorStateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 241 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 241) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE)
  {
    unsigned int v6 = ((a2 - 15) >> 8) + 1;
    *unint64_t result = a2 - 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C951BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 16 * (((-a2 >> 1) & 7) - 8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_251C951E4(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_251C951F0(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_251C95200(unsigned char *result, char a2)
{
  *unint64_t result = *result & 0xF | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.ErrorState()
{
  return &type metadata for StaticRVCClusterGroup.ErrorState;
}

unsigned char *_s10ErrorStateO6CommonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C952F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.ErrorState.Common()
{
  return &type metadata for StaticRVCClusterGroup.ErrorState.Common;
}

unsigned char *_s10ErrorStateO3RVCOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C953F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.ErrorState.RVC()
{
  return &type metadata for StaticRVCClusterGroup.ErrorState.RVC;
}

ValueMetadata *_s22SimpleOperationalStateO10CodingKeysOMa()
{
  return &_s22SimpleOperationalStateO10CodingKeysON;
}

ValueMetadata *_s22SimpleOperationalStateO17RunningCodingKeysOMa()
{
  return &_s22SimpleOperationalStateO17RunningCodingKeysON;
}

ValueMetadata *_s22SimpleOperationalStateO14IdleCodingKeysOMa()
{
  return &_s22SimpleOperationalStateO14IdleCodingKeysON;
}

unsigned char *_s22SimpleOperationalStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C95528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16OperationalStateO10CodingKeysOMa()
{
  return &_s16OperationalStateO10CodingKeysON;
}

ValueMetadata *_s16OperationalStateO16CommonCodingKeysOMa()
{
  return &_s16OperationalStateO16CommonCodingKeysON;
}

ValueMetadata *_s16OperationalStateO13RvcCodingKeysOMa()
{
  return &_s16OperationalStateO13RvcCodingKeysON;
}

unsigned char *_s13HomeDataModel22ModeClusterSemanticTagO6RVCRunOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C95650);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModeClusterSemanticTag.CodingKeys()
{
  return &type metadata for ModeClusterSemanticTag.CodingKeys;
}

ValueMetadata *type metadata accessor for ModeClusterSemanticTag.CommonCodingKeys()
{
  return &type metadata for ModeClusterSemanticTag.CommonCodingKeys;
}

ValueMetadata *type metadata accessor for ModeClusterSemanticTag.RvcRunCodingKeys()
{
  return &type metadata for ModeClusterSemanticTag.RvcRunCodingKeys;
}

unsigned char *_s16OperationalStateO16CommonCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251C95744);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModeClusterSemanticTag.RvcCleanCodingKeys()
{
  return &type metadata for ModeClusterSemanticTag.RvcCleanCodingKeys;
}

unint64_t sub_251C95780()
{
  unint64_t result = qword_269BA1548;
  if (!qword_269BA1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1548);
  }
  return result;
}

unint64_t sub_251C957D8()
{
  unint64_t result = qword_269BA1550;
  if (!qword_269BA1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1550);
  }
  return result;
}

unint64_t sub_251C95830()
{
  unint64_t result = qword_269BA1558;
  if (!qword_269BA1558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1558);
  }
  return result;
}

unint64_t sub_251C95888()
{
  unint64_t result = qword_269BA1560;
  if (!qword_269BA1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1560);
  }
  return result;
}

unint64_t sub_251C958E0()
{
  unint64_t result = qword_269BA1568;
  if (!qword_269BA1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1568);
  }
  return result;
}

unint64_t sub_251C95938()
{
  unint64_t result = qword_269BA1570;
  if (!qword_269BA1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1570);
  }
  return result;
}

unint64_t sub_251C95990()
{
  unint64_t result = qword_269BA1578;
  if (!qword_269BA1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1578);
  }
  return result;
}

unint64_t sub_251C959E8()
{
  unint64_t result = qword_269BA1580;
  if (!qword_269BA1580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1580);
  }
  return result;
}

unint64_t sub_251C95A40()
{
  unint64_t result = qword_269BA1588;
  if (!qword_269BA1588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1588);
  }
  return result;
}

unint64_t sub_251C95A98()
{
  unint64_t result = qword_269BA1590;
  if (!qword_269BA1590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1590);
  }
  return result;
}

unint64_t sub_251C95AF0()
{
  unint64_t result = qword_269BA1598;
  if (!qword_269BA1598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1598);
  }
  return result;
}

unint64_t sub_251C95B48()
{
  unint64_t result = qword_269BA15A0;
  if (!qword_269BA15A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15A0);
  }
  return result;
}

unint64_t sub_251C95BA0()
{
  unint64_t result = qword_269BA15A8;
  if (!qword_269BA15A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15A8);
  }
  return result;
}

unint64_t sub_251C95BF8()
{
  unint64_t result = qword_269BA15B0;
  if (!qword_269BA15B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15B0);
  }
  return result;
}

unint64_t sub_251C95C50()
{
  unint64_t result = qword_269BA15B8;
  if (!qword_269BA15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15B8);
  }
  return result;
}

unint64_t sub_251C95CA8()
{
  unint64_t result = qword_269BA15C0;
  if (!qword_269BA15C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15C0);
  }
  return result;
}

unint64_t sub_251C95D00()
{
  unint64_t result = qword_269BA15C8;
  if (!qword_269BA15C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15C8);
  }
  return result;
}

unint64_t sub_251C95D58()
{
  unint64_t result = qword_269BA15D0;
  if (!qword_269BA15D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15D0);
  }
  return result;
}

unint64_t sub_251C95DB0()
{
  unint64_t result = qword_269BA15D8;
  if (!qword_269BA15D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15D8);
  }
  return result;
}

unint64_t sub_251C95E08()
{
  unint64_t result = qword_269BA15E0;
  if (!qword_269BA15E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15E0);
  }
  return result;
}

unint64_t sub_251C95E60()
{
  unint64_t result = qword_269BA15E8;
  if (!qword_269BA15E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15E8);
  }
  return result;
}

unint64_t sub_251C95EB8()
{
  unint64_t result = qword_269BA15F0;
  if (!qword_269BA15F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15F0);
  }
  return result;
}

unint64_t sub_251C95F10()
{
  unint64_t result = qword_269BA15F8;
  if (!qword_269BA15F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA15F8);
  }
  return result;
}

unint64_t sub_251C95F68()
{
  unint64_t result = qword_269BA1600;
  if (!qword_269BA1600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1600);
  }
  return result;
}

unint64_t sub_251C95FC0()
{
  unint64_t result = qword_269BA1608;
  if (!qword_269BA1608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1608);
  }
  return result;
}

unint64_t sub_251C96018()
{
  unint64_t result = qword_269BA1610;
  if (!qword_269BA1610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1610);
  }
  return result;
}

unint64_t sub_251C96070()
{
  unint64_t result = qword_269BA1618;
  if (!qword_269BA1618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1618);
  }
  return result;
}

unint64_t sub_251C960C8()
{
  unint64_t result = qword_269BA1620;
  if (!qword_269BA1620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1620);
  }
  return result;
}

uint64_t sub_251C9611C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E7552637672 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E61656C43637672 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251C96264(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6518386 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251C96340(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E696E6E7572 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701602409 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_251C96424()
{
  unint64_t result = qword_269BA1628;
  if (!qword_269BA1628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1628);
  }
  return result;
}

unint64_t sub_251C96478()
{
  unint64_t result = qword_269BA1630;
  if (!qword_269BA1630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1630);
  }
  return result;
}

unint64_t sub_251C964CC()
{
  unint64_t result = qword_269BA1638;
  if (!qword_269BA1638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1638);
  }
  return result;
}

unint64_t sub_251C96520()
{
  unint64_t result = qword_269BA1640;
  if (!qword_269BA1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1640);
  }
  return result;
}

unint64_t sub_251C96574()
{
  unint64_t result = qword_269BA1648;
  if (!qword_269BA1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1648);
  }
  return result;
}

unint64_t sub_251C965C8()
{
  unint64_t result = qword_269BA1650;
  if (!qword_269BA1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1650);
  }
  return result;
}

unint64_t sub_251C9661C()
{
  unint64_t result = qword_269BA1658;
  if (!qword_269BA1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1658);
  }
  return result;
}

unint64_t sub_251C96670()
{
  unint64_t result = qword_269BA1660;
  if (!qword_269BA1660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1660);
  }
  return result;
}

uint64_t SignificantEvent.init(id:reason:dateOfOccurrence:confidenceLevel:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = *a2;
  char v9 = *a4;
  uint64_t v10 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t v11 = (int *)type metadata accessor for SignificantEvent();
  *(unsigned char *)(a5 + v11[5]) = v8;
  uint64_t v12 = a5 + v11[6];
  uint64_t v13 = sub_251F34D20();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a3, v13);
  *(unsigned char *)(a5 + v11[7]) = v9;
  return result;
}

uint64_t type metadata accessor for SignificantEvent()
{
  uint64_t result = qword_269BA1690;
  if (!qword_269BA1690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *static SignificantEvent.Reason.allCases.getter()
{
  return &unk_270263260;
}

void sub_251C9683C(void *a1@<X8>)
{
  *a1 = &unk_270263260;
}

BOOL static SignificantEvent.ConfidenceLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SignificantEvent.ConfidenceLevel.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t SignificantEvent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SignificantEvent.reason.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SignificantEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t SignificantEvent.dateOfOccurrence.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignificantEvent() + 24);
  uint64_t v4 = sub_251F34D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SignificantEvent.confidenceLevel.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SignificantEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t SignificantEvent.hash(into:)()
{
  sub_251F34DA0();
  sub_251BC96A0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95C8]);
  sub_251F35610();
  uint64_t v1 = type metadata accessor for SignificantEvent();
  sub_251F36CB0();
  sub_251F34D20();
  sub_251BC96A0(&qword_269B9CF80, MEMORY[0x270FA9220]);
  sub_251F35610();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 28)) == 4) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36CB0();
}

uint64_t SignificantEvent.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251BC96A0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95C8]);
  sub_251F35610();
  uint64_t v1 = type metadata accessor for SignificantEvent();
  sub_251F36CB0();
  sub_251F34D20();
  sub_251BC96A0(&qword_269B9CF80, MEMORY[0x270FA9220]);
  sub_251F35610();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 28)) == 4)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CB0();
  }
  return sub_251F36D00();
}

uint64_t sub_251C96BEC(uint64_t a1, uint64_t a2)
{
  sub_251F34DA0();
  sub_251BC96A0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95C8]);
  sub_251F35610();
  sub_251F36CB0();
  sub_251F34D20();
  sub_251BC96A0(&qword_269B9CF80, MEMORY[0x270FA9220]);
  sub_251F35610();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 28)) == 4) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36CB0();
}

uint64_t sub_251C96CE0(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251BC96A0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95C8]);
  sub_251F35610();
  sub_251F36CB0();
  sub_251F34D20();
  sub_251BC96A0(&qword_269B9CF80, MEMORY[0x270FA9220]);
  sub_251F35610();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 28)) == 4)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CB0();
  }
  return sub_251F36D00();
}

uint64_t _s13HomeDataModel16SignificantEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SignificantEvent();
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = v4;
  if ((sub_251F34CD0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(v5 + 28);
  int v7 = *(unsigned __int8 *)(a1 + v6);
  int v8 = *(unsigned __int8 *)(a2 + v6);
  if (v7 == 4)
  {
    if (v8 != 4) {
      return 0;
    }
  }
  else if (v8 == 4 || v7 != v8)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_251C96E80()
{
  unint64_t result = qword_269BA1668;
  if (!qword_269BA1668)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA1670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1668);
  }
  return result;
}

unint64_t sub_251C96EE0()
{
  unint64_t result = qword_269BA1678;
  if (!qword_269BA1678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1678);
  }
  return result;
}

unint64_t sub_251C96F38()
{
  unint64_t result = qword_269BA1680;
  if (!qword_269BA1680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1680);
  }
  return result;
}

unint64_t sub_251C96F90()
{
  unint64_t result = qword_269BA1688;
  if (!qword_269BA1688)
  {
    type metadata accessor for SignificantEvent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1688);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SignificantEvent(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_251F34D20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for SignificantEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_251F34D20();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for SignificantEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for SignificantEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for SignificantEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SignificantEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignificantEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C9751C);
}

uint64_t sub_251C9751C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_251F34D20();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 4u) {
    int v14 = 4;
  }
  else {
    int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  }
  unsigned int v15 = v14 - 4;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 4u) {
    return v15;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SignificantEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C9764C);
}

uint64_t sub_251C9764C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_251F34D20();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 4;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_251C9775C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F34D20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SignificantEvent.Reason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C97900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignificantEvent.Reason()
{
  return &type metadata for SignificantEvent.Reason;
}

unsigned char *storeEnumTagSinglePayload for SignificantEvent.ConfidenceLevel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C97A04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignificantEvent.ConfidenceLevel()
{
  return &type metadata for SignificantEvent.ConfidenceLevel;
}

void sub_251C97A44(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_251C97AB0()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269BF3150);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BF3150);
  return sub_251F35090();
}

id static HMHomeManager.ActiveAssertion.== infix(_:_:)(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

id sub_251C97B5C(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

void HMHomeManager.takeAssertion(reason:)(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  id v4 = v3;
  if (qword_269B9C3B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_251F350A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_269BF3150);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_251F35080();
  os_log_type_t v10 = sub_251F35FD0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_251A00E84(a1, a2, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v9, v10, "Taking assertion for reason %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v12, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = (void *)sub_251F356C0();
  id v14 = objc_msgSend(v4, sel__beginActiveAssertionWithReason_, v13);

  *a3 = v14;
}

uint64_t HMHomeManager.releaseAssertion(_:)(uint64_t *a1)
{
  unint64_t v2 = v1;
  uint64_t v3 = *a1;
  if (qword_269B9C3B0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269BF3150);
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_2519F3000, v5, v6, "Releasing provided assertion.", v7, 2u);
    MEMORY[0x2533AC760](v7, -1, -1);
  }

  objc_msgSend(v2, sel__endActiveAssertion_, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_251C97E84()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_251C97EC4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251C97EE4, 0, 0);
}

uint64_t sub_251C97EE4()
{
  _s11CancellableCMa();
  uint64_t v1 = swift_allocObject();
  v0[2].i64[0] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA16A8);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = 0;
  uint64_t v3 = swift_task_alloc();
  v0[2].i64[1] = v3;
  int8x16_t v4 = v0[1];
  *(void *)(v3 + 16) = v1;
  *(int8x16_t *)(v3 + 24) = vextq_s8(v4, v4, 8uLL);
  v0[3].i64[0] = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251C98044;
  return MEMORY[0x270FA2338]();
}

uint64_t sub_251C98044()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251C981CC;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_251C98168;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251C98168()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251C981CC()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251C98244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[10] = a2;
  return MEMORY[0x270FA2498](sub_251C98268, 0, 0);
}

uint64_t sub_251C98268()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[3] = sub_251C98314;
  uint64_t v3 = swift_continuation_init();
  sub_251C98538(v3, v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251C98314()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 104) = v1;
  if (v1)
  {
    swift_willThrow();
    uint64_t v2 = sub_251C984B4;
  }
  else
  {
    uint64_t v2 = sub_251C98430;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251C98430()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  *(void *)(v1 + 24) = 0;
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251C984B4()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  *(void *)(v1 + 24) = 0;
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251C98538(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_269B9C3B0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F350A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_269BF3150);
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_251A00E84(0xD000000000000010, 0x8000000251F6FB00, aBlock);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v7, v8, "%s Sending homed request to refresh graph with local process", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }

  uint64_t v11 = (void *)sub_251F34C70();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  aBlock[4] = (uint64_t)sub_251C98D94;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_251C97A44;
  aBlock[3] = (uint64_t)&block_descriptor_32;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  id v14 = objc_msgSend(a3, sel__refreshBeforeDate_completionHandler_, v11, v13);
  _Block_release(v13);

  uint64_t v15 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
  os_unfair_lock_lock(v15);
  *(void *)(a2 + 24) = v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v15);
  return swift_unknownObjectRelease();
}

uint64_t sub_251C987C4(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_269B9C3B0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_269BF3150);
    id v4 = a1;
    id v5 = a1;
    uint64_t v6 = sub_251F35080();
    os_log_type_t v7 = sub_251F35FB0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v22 = v10;
      *(_DWORD *)uint64_t v8 = 136315394;
      sub_251A00E84(0xD000000000000010, 0x8000000251F6FB00, &v22);
      sub_251F361D0();
      *(_WORD *)(v8 + 12) = 2112;
      id v11 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_251F361D0();
      *uint64_t v9 = v21;

      _os_log_impl(&dword_2519F3000, v6, v7, "%s HMHomeManager returned error: %@", (uint8_t *)v8, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v10, -1, -1);
      MEMORY[0x2533AC760](v8, -1, -1);
    }
    else
    {
    }
    sub_251C98D9C();
    uint64_t v18 = swift_allocError();
    *uint64_t v19 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    swift_allocError();
    *uint64_t v20 = v18;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (qword_269B9C3B0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_269BF3150);
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FD0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v22 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_251A00E84(0xD000000000000010, 0x8000000251F6FB00, &v22);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v13, v14, "%s Finished refreshing with homed", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v16, -1, -1);
      MEMORY[0x2533AC760](v15, -1, -1);
    }

    return swift_continuation_throwingResume();
  }
}

uint64_t sub_251C98BA4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    id v2 = (os_unfair_lock_s *)(*(void *)(result + 16) + 16);
    os_unfair_lock_lock(v2);
    uint64_t v3 = *(void **)(v1 + 24);
    swift_unknownObjectRetain();
    os_unfair_lock_unlock(v2);
    if (v3)
    {
      objc_msgSend(v3, sel_cancel);
      swift_unknownObjectRelease();
    }
    os_unfair_lock_lock(v2);
    *(void *)(v1 + 24) = 0;
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v2);
    return swift_release();
  }
  return result;
}

ValueMetadata *type metadata accessor for HMHomeManager.ActiveAssertion()
{
  return &type metadata for HMHomeManager.ActiveAssertion;
}

uint64_t _s11CancellableCMa()
{
  return self;
}

uint64_t sub_251C98C90()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_251AB3A34;
  *(void *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 80) = v4;
  return MEMORY[0x270FA2498](sub_251C98268, 0, 0);
}

uint64_t sub_251C98D44()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251C98D7C()
{
  return sub_251C98BA4();
}

uint64_t sub_251C98D84()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251C98D94(void *a1)
{
  return sub_251C987C4(a1);
}

unint64_t sub_251C98D9C()
{
  unint64_t result = qword_269BA16C0;
  if (!qword_269BA16C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA16C0);
  }
  return result;
}

ValueMetadata *_s5ErrorOMa_0()
{
  return &_s5ErrorON_0;
}

uint64_t StaticResident.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticResident.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticResident() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for StaticResident()
{
  uint64_t result = qword_26B21F6C0;
  if (!qword_26B21F6C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticResident.init(with:home:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for StaticResident();
  uint64_t v46 = *((void *)v6 - 1);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a2, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v10 = sub_251F35AC0();

  id v11 = a1;
  uint64_t v12 = sub_251C9D524(v10, v11);
  swift_bridgeObjectRelease();

  sub_251C9BB4C(v12, (__int16 *)&v48);
  __int16 v13 = v48;
  if ((~(unsigned __int16)v48 & 0xFEFC) == 0)
  {

    os_log_type_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v46 + 56);
    return v14(a3, 1, 1, v6);
  }
  id v16 = objc_msgSend(v11, sel_uniqueIdentifier);
  sub_251F34D80();

  if (v12)
  {
    id v17 = objc_msgSend(v12, sel_room);
    if (v17)
    {
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v17, sel_name);

      uint64_t v20 = sub_251F356F0();
      uint64_t v22 = v21;

      uint64_t v23 = (uint64_t *)&v8[v6[6]];
      *uint64_t v23 = v20;
      v23[1] = v22;
    }
    else
    {
      char v26 = &v8[v6[6]];
      *(void *)char v26 = 0;
      *((void *)v26 + 1) = 0;
    }
    id v25 = objc_msgSend(v12, sel_configuredName);
    if (!v25)
    {
      uint64_t v45 = a3;
      id v31 = v12;
      id v32 = objc_msgSend(v31, sel_category);
      id v33 = objc_msgSend(v32, sel_categoryType);

      uint64_t v34 = sub_251F356F0();
      uint64_t v36 = v35;

      uint64_t v28 = sub_251D47B58(v34, v36);
      uint64_t v30 = v37;
      swift_bridgeObjectRelease();
      if (v30)
      {
      }
      else
      {
        id v38 = objc_msgSend(v31, sel_name);
        uint64_t v28 = sub_251F356F0();
        uint64_t v30 = v39;
      }
      a3 = v45;
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v24 = &v8[v6[6]];
    *(void *)uint64_t v24 = 0;
    *((void *)v24 + 1) = 0;
    id v25 = objc_msgSend(v11, sel_name);
  }
  uint64_t v27 = v25;
  uint64_t v28 = sub_251F356F0();
  uint64_t v30 = v29;

LABEL_16:
  char v40 = (uint64_t *)&v8[v6[5]];
  *char v40 = v28;
  v40[1] = v30;
  *(_WORD *)&v8[v6[9]] = v13;
  unsigned __int8 v41 = objc_msgSend(v11, sel_status);
  uint64_t v42 = MEMORY[0x263F8EE88];
  uint64_t v48 = MEMORY[0x263F8EE88];
  if (v41) {
    sub_251A62AF4(&v47, 1);
  }
  if ((v41 & 2) != 0) {
    sub_251A62AF4(&v47, 0);
  }
  *(void *)&v8[v6[7]] = v48;
  uint64_t v48 = v42;
  if (objc_msgSend(v11, sel_supportsResidentSelection))
  {
    sub_251A62C30();
    uint64_t v42 = v48;
  }
  *(void *)&v8[v6[8]] = v42;
  id v43 = objc_msgSend(a2, sel_uniqueIdentifier);
  sub_251F34D80();

  sub_251C9D648((uint64_t)v8, a3);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v46 + 56))(a3, 0, 1, v6);
}

BOOL static StaticResident.Status.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticResident.Status.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251C99388()
{
  if (*v0) {
    return 0x6C62616863616572;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t sub_251C993C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C9FA28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C993F0(uint64_t a1)
{
  unint64_t v2 = sub_251C9D6AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C9942C(uint64_t a1)
{
  unint64_t v2 = sub_251C9D6AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C99468(uint64_t a1)
{
  unint64_t v2 = sub_251C9D754();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C994A4(uint64_t a1)
{
  unint64_t v2 = sub_251C9D754();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C994E0(uint64_t a1)
{
  unint64_t v2 = sub_251C9D700();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C9951C(uint64_t a1)
{
  unint64_t v2 = sub_251C9D700();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticResident.Status.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA16C8);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA16D0);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA16D8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C9D6AC();
  sub_251F36DA0();
  __int16 v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_251C9D700();
    os_log_type_t v14 = v18;
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_251C9D754();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t StaticResident.Status.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticResident.Status.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA16F8);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1700);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1708);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C9D6AC();
  id v11 = v32;
  sub_251F36D90();
  if (v11) {
    goto LABEL_6;
  }
  id v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  os_log_type_t v14 = v10;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_251F36490();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *char v22 = &type metadata for StaticResident.Status;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_251C9D700();
    uint64_t v18 = v14;
    sub_251F36770();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_251C9D754();
    sub_251F36770();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  unsigned char *v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_251C99C9C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticResident.Status.init(from:)(a1, a2);
}

uint64_t sub_251C99CB4(void *a1)
{
  return StaticResident.Status.encode(to:)(a1);
}

uint64_t static StaticResident.Capability.== infix(_:_:)()
{
  return 1;
}

uint64_t StaticResident.Capability.hash(into:)()
{
  return sub_251F36CB0();
}

unint64_t sub_251C99CFC()
{
  return 0xD000000000000018;
}

uint64_t sub_251C99D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C9FB28(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_251C99D44(uint64_t a1)
{
  unint64_t v2 = sub_251C9D7A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C99D80(uint64_t a1)
{
  unint64_t v2 = sub_251C9D7A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C99DBC(uint64_t a1)
{
  unint64_t v2 = sub_251C9D7FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C99DF8(uint64_t a1)
{
  unint64_t v2 = sub_251C9D7FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticResident.Capability.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1710);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1718);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C9D7A8();
  sub_251F36DA0();
  sub_251C9D7FC();
  sub_251F36900();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t StaticResident.Capability.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticResident.Capability.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1730);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1738);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C9D7A8();
  sub_251F36D90();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_251F368E0() + 16) == 1)
    {
      sub_251C9D7FC();
      sub_251F36770();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_251F36490();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      *uint64_t v13 = &type metadata for StaticResident.Capability;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251C9A330(void *a1)
{
  return StaticResident.Capability.init(from:)(a1);
}

uint64_t sub_251C9A348(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1710);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1718);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C9D7A8();
  sub_251F36DA0();
  sub_251C9D7FC();
  sub_251F36900();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t StaticResident.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticResident() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticResident.status.getter()
{
  type metadata accessor for StaticResident();
  return swift_bridgeObjectRetain();
}

uint64_t StaticResident.capabilities.getter()
{
  type metadata accessor for StaticResident();
  return swift_bridgeObjectRetain();
}

uint64_t StaticResident.specialMediaCategory.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticResident();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t StaticResident.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticResident() + 40);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticResident.init(id:name:roomName:status:capabilities:specialMediaCategory:homeId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __int16 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  __int16 v17 = *a8;
  uint64_t v18 = sub_251F34DA0();
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v25)((void *)(v18 - 8), a9, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for StaticResident();
  uint64_t v20 = (void *)(a9 + v19[5]);
  *uint64_t v20 = a2;
  v20[1] = a3;
  char v21 = (void *)(a9 + v19[6]);
  *char v21 = a4;
  v21[1] = a5;
  *(void *)(a9 + v19[7]) = a6;
  *(void *)(a9 + v19[8]) = a7;
  *(_WORD *)(a9 + v19[9]) = v17;
  uint64_t v22 = a9 + v19[10];
  return v25(v22, a10, v18);
}

uint64_t StaticResident.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = (int *)type metadata accessor for StaticResident();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + v4[6] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v5 = *(void *)(v1 + v4[7]);
  swift_bridgeObjectRetain();
  sub_251A5504C(a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + v4[8]);
  swift_bridgeObjectRetain();
  sub_251A5587C(a1, v6);
  swift_bridgeObjectRelease();
  unsigned int v7 = *(unsigned __int16 *)(v2 + v4[9]);
  if (!(v7 >> 14))
  {
    sub_251F36CB0();
    goto LABEL_8;
  }
  if (v7 >> 14 != 1)
  {
LABEL_8:
    sub_251F36CB0();
    return sub_251F35610();
  }
  sub_251F36CB0();
  sub_251F36CC0();
  sub_251F36CC0();
  return sub_251F35610();
}

unint64_t sub_251C9A998(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 3:
      unint64_t result = 0x737574617473;
      break;
    case 4:
      unint64_t result = 0x696C696261706163;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x6449656D6F68;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251C9AA70()
{
  return sub_251C9A998(*v0);
}

uint64_t sub_251C9AA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C9FBB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C9AAA0(uint64_t a1)
{
  unint64_t v2 = sub_251C9D850();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C9AADC(uint64_t a1)
{
  unint64_t v2 = sub_251C9D850();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticResident.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1740);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C9D850();
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticResident();
    LOBYTE(v13) = 1;
    sub_251F369D0();
    LOBYTE(v13) = 2;
    sub_251F36910();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1750);
    sub_251C9D9F4(&qword_269BA1758, &qword_269BA1750, (void (*)(void))sub_251C9D8A4);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1768);
    sub_251C9D9F4(&qword_269BA1770, &qword_269BA1768, (void (*)(void))sub_251C9D8F8);
    sub_251F36A20();
    LOWORD(v13) = *(_WORD *)(v3 + v9[9]);
    char v12 = 5;
    sub_251C9D94C();
    sub_251F36A20();
    LOBYTE(v13) = 6;
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticResident.hashValue.getter()
{
  sub_251F36CA0();
  StaticResident.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t StaticResident.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1788);
  uint64_t v4 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for StaticResident();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C9D850();
  uint64_t v37 = v6;
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v33 = v9;
  char v34 = a1;
  uint64_t v35 = v4;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  LOBYTE(v40) = 0;
  uint64_t v13 = sub_251A1A8EC(&qword_269B9CC80);
  os_log_type_t v14 = v37;
  sub_251F36880();
  uint64_t v31 = v13;
  uint64_t v32 = v11;
  uint64_t v15 = v11 + 32;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v17 = (uint64_t)v33;
  uint64_t v18 = v15;
  v16(v33, (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  LOBYTE(v40) = 1;
  uint64_t v19 = sub_251F36830();
  uint64_t v30 = (void (*)(uint64_t, char *, uint64_t))v16;
  uint64_t v20 = (uint64_t *)(v17 + v7[5]);
  *uint64_t v20 = v19;
  v20[1] = v21;
  LOBYTE(v40) = 2;
  uint64_t v22 = sub_251F36790();
  v29[0] = v18;
  v29[1] = v12;
  uint64_t v23 = (uint64_t *)(v17 + v7[6]);
  *uint64_t v23 = v22;
  v23[1] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1750);
  char v39 = 3;
  sub_251C9D9F4(&qword_269BA1790, &qword_269BA1750, (void (*)(void))sub_251C9D9A0);
  sub_251F36880();
  *(void *)(v17 + v7[7]) = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1768);
  char v39 = 4;
  sub_251C9D9F4(&qword_269BA17A0, &qword_269BA1768, (void (*)(void))sub_251C9DA60);
  sub_251F36880();
  *(void *)(v17 + v7[8]) = v40;
  char v39 = 5;
  sub_251C9DAB4();
  uint64_t v25 = sub_251F36880();
  *(_WORD *)(v17 + v7[9]) = v40;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v40) = 6;
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v38);
  v30(v17 + v7[10], v27, v10);
  sub_251C9DB08(v17, v36);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  return sub_251C9DB6C(v17);
}

uint64_t sub_251C9B55C()
{
  sub_251F36CA0();
  StaticResident.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251C9B5A0()
{
  sub_251F36CA0();
  StaticResident.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251C9B5DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticResident.init(from:)(a1, a2);
}

uint64_t sub_251C9B5F4(void *a1)
{
  return StaticResident.encode(to:)(a1);
}

uint64_t StaticResident.iconSymbol.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F218);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(_WORD *)(inited + 32) = *(_WORD *)(v0 + *(int *)(type metadata accessor for StaticResident() + 36));
  uint64_t v2 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
  swift_setDeallocating();
  return v2;
}

uint64_t sub_251C9B690(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v3, sel_device);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v10 = sub_251F34DA0();
    uint64_t v11 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v10);
  }
  else
  {
    uint64_t v10 = sub_251F34DA0();
    uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v10);
  }
  uint64_t v38 = &v33;
  MEMORY[0x270FA5388](v11);
  unint64_t v36 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = (char *)&v33 - v36;
  id v13 = objc_msgSend(a2, sel_device);
  id v14 = objc_msgSend(v13, sel_uniqueIdentifier);

  sub_251F34D80();
  sub_251F34DA0();
  uint64_t v15 = *(void *)(v10 - 8);
  uint64_t v35 = v5;
  uint64_t v16 = v15;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v10);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v37 = &v33;
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (uint64_t)&v20[*(int *)(v18 + 56)];
  sub_251A1B128((uint64_t)v6, (uint64_t)v20, &qword_26B21FF90);
  sub_251A1B128((uint64_t)v12, v21, &qword_26B21FF90);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v23 = v22(v20, 1, v10);
  if (v23 == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v6, &qword_26B21FF90);
    int v24 = v22((char *)v21, 1, v10);
    if (v24 == 1) {
      uint64_t v25 = &qword_26B21FF90;
    }
    else {
      uint64_t v25 = &qword_26B21E6B8;
    }
    if (v24 == 1) {
      char v26 = -1;
    }
    else {
      char v26 = 0;
    }
  }
  else
  {
    uint64_t v33 = (uint64_t)&v33;
    char v34 = v6;
    MEMORY[0x270FA5388](v23);
    uint64_t v27 = (char *)&v33 - v36;
    sub_251A1B128((uint64_t)v20, (uint64_t)&v33 - v36, &qword_26B21FF90);
    uint64_t v28 = v22((char *)v21, 1, v10);
    if (v28 == 1)
    {
      sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v34, &qword_26B21FF90);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v27, v10);
      uint64_t v25 = &qword_26B21E6B8;
      char v26 = 0;
    }
    else
    {
      MEMORY[0x270FA5388](v28);
      uint64_t v30 = (char *)&v33 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v30, v21, v10);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v26 = sub_251F35650();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v16 + 8);
      v31(v30, v10);
      uint64_t v25 = &qword_26B21FF90;
      sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v34, &qword_26B21FF90);
      v31(v27, v10);
    }
  }
  sub_251A1B064((uint64_t)v20, v25);
  return v26 & 1;
}

void sub_251C9BB4C(void *a1@<X0>, __int16 *a2@<X8>)
{
  if (a1)
  {
    id v3 = a1;
    id v4 = objc_msgSend(v3, sel_category);
    id v5 = objc_msgSend(v4, sel_categoryType);

    uint64_t v6 = sub_251F356F0();
    uint64_t v8 = v7;

    if (sub_251F356F0() == v6 && v9 == v8)
    {

      swift_bridgeObjectRelease_n();
      __int16 v12 = -32767;
    }
    else
    {
      char v11 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v11)
      {
        swift_bridgeObjectRelease();

        __int16 v12 = -32767;
      }
      else
      {
        if (sub_251F356F0() == v6 && v13 == v8)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v15 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0)
          {

            __int16 v12 = -260;
            goto LABEL_20;
          }
        }
        id v16 = objc_msgSend(v3, sel_homePodVariant);

        if ((unint64_t)v16 >= 4) {
          __int16 v12 = 1;
        }
        else {
          __int16 v12 = (__int16)v16;
        }
      }
    }
  }
  else
  {
    __int16 v12 = -32766;
  }
LABEL_20:
  *a2 = v12;
}

uint64_t StaticResident.setAsPreferredResident(requireAutoUpdate:)(char a1)
{
  *(void *)(v2 + 160) = v1;
  *(unsigned char *)(v2 + 288) = a1;
  return MEMORY[0x270FA2498](sub_251C9BCEC, 0, 0);
}

uint64_t sub_251C9BCEC()
{
  *(void *)(v0 + 168) = sub_251F35C80();
  *(void *)(v0 + 176) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C9BD84, v2, v1);
}

uint64_t sub_251C9BD84()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C9BE1C, 0, 0);
}

uint64_t sub_251C9BE1C()
{
  *(void *)(v0 + 184) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C9BEA8, v2, v1);
}

uint64_t sub_251C9BEA8()
{
  swift_release();
  *(void *)(v0 + 192) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C9BF1C, 0, 0);
}

uint64_t sub_251C9BF1C()
{
  *(void *)(v0 + 200) = sub_251F34D50();
  *(void *)(v0 + 208) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C9BFB0, v2, v1);
}

uint64_t sub_251C9BFB0()
{
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = (void *)v0[24];
  swift_release();
  v0[27] = objc_msgSend(v2, sel_residentFor_, v1);

  return MEMORY[0x270FA2498](sub_251C9C040, 0, 0);
}

uint64_t sub_251C9C040()
{
  if (v0[27])
  {
    v0[28] = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251C9C1C8, v2, v1);
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B21F290);
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FB0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_2519F3000, v4, v5, "calling setAsPreferredResident failed due to missing resident", v6, 2u);
      MEMORY[0x2533AC760](v6, -1, -1);
    }

    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_251C9C1C8()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251C9C230, 0, 0);
}

uint64_t sub_251C9C230()
{
  *(void *)(v0 + 232) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C9C2BC, v2, v1);
}

uint64_t sub_251C9C2BC()
{
  swift_release();
  *(void *)(v0 + 240) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C9C330, 0, 0);
}

uint64_t sub_251C9C330()
{
  type metadata accessor for StaticResident();
  *(void *)(v0 + 248) = sub_251F34D50();
  *(void *)(v0 + 256) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C9C3D4, v2, v1);
}

uint64_t sub_251C9C3D4()
{
  uint64_t v1 = (void *)v0[31];
  uint64_t v2 = (void *)v0[30];
  swift_release();
  v0[33] = objc_msgSend(v2, sel_homeFor_, v1);

  return MEMORY[0x270FA2498](sub_251C9C464, 0, 0);
}

uint64_t sub_251C9C464()
{
  uint64_t v1 = *(void **)(v0 + 264);
  if (!v1)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_251F350A0();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B21F290);
    uint64_t v8 = sub_251F35080();
    os_log_type_t v9 = sub_251F35FB0();
    BOOL v10 = os_log_type_enabled(v8, v9);
    char v11 = *(NSObject **)(v0 + 216);
    if (v10)
    {
      __int16 v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)__int16 v12 = 0;
      _os_log_impl(&dword_2519F3000, v8, v9, "calling setAsPreferredResident failed due to missing home", v12, 2u);
      MEMORY[0x2533AC760](v12, -1, -1);
      uint64_t v13 = v8;
    }
    else
    {
      uint64_t v13 = *(NSObject **)(v0 + 216);
      char v11 = v8;
    }
    goto LABEL_30;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v2 = swift_task_alloc();
  id v3 = objc_msgSend(v1, sel_userSelectedPreferredResident);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v6 = sub_251F34DA0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 0, 1, v6);
  }
  else
  {
    uint64_t v6 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
  }
  id v14 = *(void **)(v0 + 216);
  uint64_t v15 = swift_task_alloc();
  id v16 = objc_msgSend(v14, sel_uniqueIdentifier);
  sub_251F34D80();

  sub_251F34DA0();
  uint64_t v17 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v6);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8) - 8;
  uint64_t v19 = swift_task_alloc();
  uint64_t v20 = v19 + *(int *)(v18 + 56);
  sub_251A1B128(v2, v19, &qword_26B21FF90);
  sub_251A1B128(v15, v20, &qword_26B21FF90);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v21(v19, 1, v6) == 1)
  {
    sub_251A1B064(v15, &qword_26B21FF90);
    sub_251A1B064(v2, &qword_26B21FF90);
    if (v21(v20, 1, v6) == 1)
    {
      sub_251A1B064(v19, &qword_26B21FF90);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
LABEL_17:
      if (qword_26B21F2C0 != -1) {
        swift_once();
      }
      uint64_t v25 = *(void **)(v0 + 216);
      uint64_t v26 = sub_251F350A0();
      __swift_project_value_buffer(v26, (uint64_t)qword_26B21F290);
      id v27 = v25;
      char v11 = sub_251F35080();
      os_log_type_t v28 = sub_251F35FD0();
      BOOL v29 = os_log_type_enabled(v11, v28);
      uint64_t v13 = *(NSObject **)(v0 + 264);
      uint64_t v30 = *(void **)(v0 + 216);
      if (v29)
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        unint64_t v57 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 138412290;
        *(void *)(v0 + 152) = v30;
        uint64_t v32 = v30;
        sub_251F361D0();
        *unint64_t v57 = v30;

        _os_log_impl(&dword_2519F3000, v11, v28, "selectPreferredResident already set to %@", v31, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v57, -1, -1);
        MEMORY[0x2533AC760](v31, -1, -1);

        char v11 = v32;
      }
      else
      {
      }
LABEL_30:

      uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
      return v53();
    }
    goto LABEL_14;
  }
  uint64_t v22 = swift_task_alloc();
  sub_251A1B128(v19, v22, &qword_26B21FF90);
  if (v21(v20, 1, v6) == 1)
  {
    sub_251A1B064(v15, &qword_26B21FF90);
    sub_251A1B064(v2, &qword_26B21FF90);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v6);
    swift_task_dealloc();
LABEL_14:
    sub_251A1B064(v19, &qword_26B21E6B8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    goto LABEL_21;
  }
  uint64_t v23 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v23, v20, v6);
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  char v56 = sub_251F35650();
  int v24 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v24(v23, v6);
  sub_251A1B064(v15, &qword_26B21FF90);
  sub_251A1B064(v2, &qword_26B21FF90);
  v24(v22, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_251A1B064(v19, &qword_26B21FF90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v56) {
    goto LABEL_17;
  }
LABEL_21:
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void **)(v0 + 264);
  char v34 = *(void **)(v0 + 216);
  uint64_t v35 = sub_251F350A0();
  *(void *)(v0 + 272) = __swift_project_value_buffer(v35, (uint64_t)qword_26B21F290);
  id v36 = v34;
  id v37 = v33;
  id v38 = v36;
  id v39 = v37;
  uint64_t v40 = sub_251F35080();
  os_log_type_t v41 = sub_251F35FD0();
  BOOL v42 = os_log_type_enabled(v40, v41);
  id v43 = *(void **)(v0 + 264);
  uint64_t v44 = *(void **)(v0 + 216);
  if (v42)
  {
    os_log_type_t type = v41;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 138412546;
    *(void *)(v0 + 136) = v44;
    uint64_t v58 = v40;
    id v47 = v44;
    sub_251F361D0();
    *uint64_t v46 = v44;

    *(_WORD *)(v45 + 12) = 2112;
    *(void *)(v0 + 144) = v43;
    id v48 = v43;
    uint64_t v40 = v58;
    sub_251F361D0();
    v46[1] = v43;

    _os_log_impl(&dword_2519F3000, v58, type, "calling selectPreferredResident for %@ on %@", (uint8_t *)v45, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v46, -1, -1);
    MEMORY[0x2533AC760](v45, -1, -1);
  }
  else
  {
  }
  long long v49 = *(void **)(v0 + 264);
  char v50 = *(void **)(v0 + 216);
  uint64_t v51 = *(unsigned __int8 *)(v0 + 288);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_251C9CDC8;
  uint64_t v52 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_251A5B804;
  *(void *)(v0 + 104) = &block_descriptor_10;
  *(void *)(v0 + 112) = v52;
  objc_msgSend(v49, sel_selectPreferredResident_requireAutoUpdate_completion_, v50, v51, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_251C9CDC8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 280) = v1;
  if (v1) {
    uint64_t v2 = sub_251C9CF48;
  }
  else {
    uint64_t v2 = sub_251C9CED8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251C9CED8()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = (void *)v0[27];

  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251C9CF48()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = (void *)v0[27];
  swift_willThrow();

  id v3 = v2;
  id v4 = v1;
  id v5 = v3;
  id v6 = v4;
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v20 = (void *)v0[33];
    os_log_type_t v9 = (void *)v0[27];
    uint64_t v10 = swift_slowAlloc();
    char v11 = (void *)swift_slowAlloc();
    v0[15] = v9;
    *(_DWORD *)uint64_t v10 = 138412546;
    id v12 = v9;
    sub_251F361D0();
    *char v11 = v9;

    *(_WORD *)(v10 + 12) = 2112;
    v0[16] = v20;
    id v13 = v20;
    sub_251F361D0();
    v11[1] = v20;

    _os_log_impl(&dword_2519F3000, v7, v8, "selectPreferredResident failed for %@ on %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }
  else
  {
    id v14 = (void *)v0[33];
    uint64_t v15 = (void *)v0[27];
  }
  id v16 = (void *)v0[33];
  uint64_t v17 = (void *)v0[27];
  swift_willThrow();

  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t _s13HomeDataModel14StaticResidentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  id v4 = (int *)type metadata accessor for StaticResident();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  os_log_type_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_251F36B10() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = v4[6];
  char v11 = (void *)(a1 + v10);
  uint64_t v12 = *(void *)(a1 + v10 + 8);
  id v13 = (void *)(a2 + v10);
  uint64_t v14 = v13[1];
  if (v12)
  {
    if (!v14) {
      return 0;
    }
    BOOL v15 = *v11 == *v13 && v12 == v14;
    if (!v15 && (sub_251F36B10() & 1) == 0) {
      return 0;
    }
  }
  else if (v14)
  {
    return 0;
  }
  if ((sub_251B0693C(*(void *)(a1 + v4[7]), *(void *)(a2 + v4[7])) & 1) != 0
    && (sub_251B06B20(*(void *)(a1 + v4[8]), *(void *)(a2 + v4[8])) & 1) != 0)
  {
    uint64_t v16 = v4[9];
    __int16 v19 = *(_WORD *)(a1 + v16);
    unsigned __int16 v18 = *(_WORD *)(a2 + v16);
    if (_s13HomeDataModel15StaticAccessoryV20SpecialMediaCategoryO2eeoiySbAE_AEtFZ_0(&v19, &v18)) {
      return sub_251F34D70() & 1;
    }
  }
  return 0;
}

uint64_t sub_251C9D288(void *a1)
{
  if (!objc_msgSend(a1, sel_supportsResidentSelection)) {
    return 0;
  }
  uint64_t v2 = objc_msgSend(a1, sel_autoSelectedPreferredResidents);
  if (!v2) {
    return (uint64_t)v2;
  }
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB18);
  unint64_t v3 = sub_251F35AC0();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
LABEL_5:
  __int16 v19 = (void *)MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E084(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v2 = v19;
    unint64_t v18 = v3 & 0xC000000000000001;
    uint64_t v6 = sub_251F34DA0();
    uint64_t v7 = 0;
    uint64_t v17 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = *(void *)(v8 + 64);
    uint64_t v16 = v8 + 32;
    unint64_t v10 = v3;
    do
    {
      MEMORY[0x270FA5388](v6);
      if (v18) {
        id v11 = (id)MEMORY[0x2533AB3A0](v7, v3);
      }
      else {
        id v11 = *(id *)(v3 + 8 * v7 + 32);
      }
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_uniqueIdentifier, v16);
      sub_251F34D80();

      __int16 v19 = v2;
      unint64_t v15 = v2[2];
      unint64_t v14 = v2[3];
      if (v15 >= v14 >> 1)
      {
        sub_251A3E084(v14 > 1, v15 + 1, 1);
        uint64_t v2 = v19;
      }
      ++v7;
      v2[2] = v15 + 1;
      uint64_t v6 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v2+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v15, (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
      unint64_t v3 = v10;
    }
    while (v4 != v7);
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

void *sub_251C9D524(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_251F366C0())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      uint64_t v12 = v7;
      char v10 = sub_251C9B690(&v12, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return v8;
      }
      if (v10)
      {
        swift_bridgeObjectRelease();
        return v8;
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_251C9D648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticResident();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_251C9D6AC()
{
  unint64_t result = qword_269BA16E0;
  if (!qword_269BA16E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA16E0);
  }
  return result;
}

unint64_t sub_251C9D700()
{
  unint64_t result = qword_269BA16E8;
  if (!qword_269BA16E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA16E8);
  }
  return result;
}

unint64_t sub_251C9D754()
{
  unint64_t result = qword_269BA16F0;
  if (!qword_269BA16F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA16F0);
  }
  return result;
}

unint64_t sub_251C9D7A8()
{
  unint64_t result = qword_269BA1720;
  if (!qword_269BA1720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1720);
  }
  return result;
}

unint64_t sub_251C9D7FC()
{
  unint64_t result = qword_269BA1728;
  if (!qword_269BA1728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1728);
  }
  return result;
}

unint64_t sub_251C9D850()
{
  unint64_t result = qword_269BA1748;
  if (!qword_269BA1748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1748);
  }
  return result;
}

unint64_t sub_251C9D8A4()
{
  unint64_t result = qword_269BA1760;
  if (!qword_269BA1760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1760);
  }
  return result;
}

unint64_t sub_251C9D8F8()
{
  unint64_t result = qword_269BA1778;
  if (!qword_269BA1778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1778);
  }
  return result;
}

unint64_t sub_251C9D94C()
{
  unint64_t result = qword_269BA1780;
  if (!qword_269BA1780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1780);
  }
  return result;
}

unint64_t sub_251C9D9A0()
{
  unint64_t result = qword_269BA1798;
  if (!qword_269BA1798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1798);
  }
  return result;
}

uint64_t sub_251C9D9F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251C9DA60()
{
  unint64_t result = qword_269BA17A8;
  if (!qword_269BA17A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17A8);
  }
  return result;
}

unint64_t sub_251C9DAB4()
{
  unint64_t result = qword_269BA17B0;
  if (!qword_269BA17B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17B0);
  }
  return result;
}

uint64_t sub_251C9DB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticResident();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C9DB6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticResident();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_251C9DBCC()
{
  unint64_t result = qword_26B21F088;
  if (!qword_26B21F088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F088);
  }
  return result;
}

unint64_t sub_251C9DC24()
{
  unint64_t result = qword_269BA17C0;
  if (!qword_269BA17C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17C0);
  }
  return result;
}

unint64_t sub_251C9DC7C()
{
  unint64_t result = qword_269BA17C8;
  if (!qword_269BA17C8)
  {
    type metadata accessor for StaticResident();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17C8);
  }
  return result;
}

uint64_t sub_251C9DCD4()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

char *initializeBufferWithCopyOfBuffer for StaticResident(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    id v11 = &a1[v9];
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *(void *)id v11 = *v12;
    *((void *)v11 + 1) = v13;
    unint64_t v14 = &a1[v10];
    unint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = v15[1];
    *(void *)unint64_t v14 = *v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = a3[8];
    *(void *)&a1[a3[7]] = *(uint64_t *)((char *)a2 + a3[7]);
    *(void *)&a1[v17] = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[10];
    *(_WORD *)&a1[a3[9]] = *(_WORD *)((char *)a2 + a3[9]);
    __int16 v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v19, v20, v7);
  }
  return a1;
}

uint64_t destroy for StaticResident(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 40);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for StaticResident(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  id v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  unint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v18, v19, v6);
  return a1;
}

uint64_t assignWithCopy for StaticResident(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v7(a1 + a3[10], a2 + a3[10], v6);
  return a1;
}

uint64_t initializeWithTake for StaticResident(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v7(a1 + v10, a2 + v10, v6);
  return a1;
}

uint64_t assignWithTake for StaticResident(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  unint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v7(a1 + v18, a2 + v18, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticResident(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C9E354);
}

uint64_t sub_251C9E354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticResident(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C9E42C);
}

uint64_t sub_251C9E42C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251C9E4EC()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticResident.Status()
{
  return &type metadata for StaticResident.Status;
}

ValueMetadata *type metadata accessor for StaticResident.Capability()
{
  return &type metadata for StaticResident.Capability;
}

unsigned char *storeEnumTagSinglePayload for StaticResident.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C9E69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticResident.CodingKeys()
{
  return &type metadata for StaticResident.CodingKeys;
}

unsigned char *_s13HomeDataModel14StaticResidentV10CapabilityOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251C9E770);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticResident.Capability.CodingKeys()
{
  return &type metadata for StaticResident.Capability.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticResident.Capability.SupportResidentSelectionCodingKeys()
{
  return &type metadata for StaticResident.Capability.SupportResidentSelectionCodingKeys;
}

unsigned char *_s13HomeDataModel14StaticResidentV6StatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C9E884);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticResident.Status.CodingKeys()
{
  return &type metadata for StaticResident.Status.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticResident.Status.PrimaryCodingKeys()
{
  return &type metadata for StaticResident.Status.PrimaryCodingKeys;
}

ValueMetadata *type metadata accessor for StaticResident.Status.ReachableCodingKeys()
{
  return &type metadata for StaticResident.Status.ReachableCodingKeys;
}

unint64_t sub_251C9E8E0()
{
  unint64_t result = qword_269BA17D0;
  if (!qword_269BA17D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17D0);
  }
  return result;
}

unint64_t sub_251C9E938()
{
  unint64_t result = qword_269BA17D8;
  if (!qword_269BA17D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17D8);
  }
  return result;
}

unint64_t sub_251C9E990()
{
  unint64_t result = qword_269BA17E0;
  if (!qword_269BA17E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17E0);
  }
  return result;
}

unint64_t sub_251C9E9E8()
{
  unint64_t result = qword_269BA17E8;
  if (!qword_269BA17E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17E8);
  }
  return result;
}

unint64_t sub_251C9EA40()
{
  unint64_t result = qword_269BA17F0;
  if (!qword_269BA17F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17F0);
  }
  return result;
}

unint64_t sub_251C9EA98()
{
  unint64_t result = qword_269BA17F8;
  if (!qword_269BA17F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA17F8);
  }
  return result;
}

unint64_t sub_251C9EAF0()
{
  unint64_t result = qword_269BA1800;
  if (!qword_269BA1800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1800);
  }
  return result;
}

unint64_t sub_251C9EB48()
{
  unint64_t result = qword_269BA1808;
  if (!qword_269BA1808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1808);
  }
  return result;
}

unint64_t sub_251C9EBA0()
{
  unint64_t result = qword_269BA1810;
  if (!qword_269BA1810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1810);
  }
  return result;
}

unint64_t sub_251C9EBF8()
{
  unint64_t result = qword_269BA1818;
  if (!qword_269BA1818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1818);
  }
  return result;
}

unint64_t sub_251C9EC50()
{
  unint64_t result = qword_269BA1820;
  if (!qword_269BA1820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1820);
  }
  return result;
}

unint64_t sub_251C9ECA8()
{
  unint64_t result = qword_269BA1828;
  if (!qword_269BA1828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1828);
  }
  return result;
}

unint64_t sub_251C9ED00()
{
  unint64_t result = qword_269BA1830;
  if (!qword_269BA1830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1830);
  }
  return result;
}

unint64_t sub_251C9ED58()
{
  unint64_t result = qword_269BA1838;
  if (!qword_269BA1838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1838);
  }
  return result;
}

unint64_t sub_251C9EDB0()
{
  unint64_t result = qword_269BA1840;
  if (!qword_269BA1840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1840);
  }
  return result;
}

unint64_t sub_251C9EE04(unint64_t a1, void *a2)
{
  int v3 = v2;
  id v27 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for StaticResident();
  uint64_t v23 = *(void *)(v26 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v26);
  uint64_t v25 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_251F366C0())
  {
    uint64_t v21 = v3;
    unint64_t v24 = a1 & 0xC000000000000001;
    int v3 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t v13 = 4;
    unint64_t v14 = a1;
    while (1)
    {
      id v15 = v24 ? (id)MEMORY[0x2533AB3A0](v13 - 4, a1) : *(id *)(a1 + 8 * v13);
      a1 = (unint64_t)v15;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      StaticResident.init(with:home:)(v15, v27, (uint64_t)v7);
      if ((*v3)(v7, 1, v26) == 1)
      {
        sub_251A1B064((uint64_t)v7, &qword_26B21FDA0);
      }
      else
      {
        uint64_t v17 = v22;
        sub_251C9D648((uint64_t)v7, v22);
        sub_251C9D648(v17, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_251F0F5FC(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_251F0F5FC(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_251C9D648(v25, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19);
      }
      a1 = v14;
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251C9F100(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  id v48 = a3;
  uint64_t v7 = type metadata accessor for StaticResident();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FD30);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  id v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  os_log_type_t v41 = v16;
  BOOL v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FD30);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251C9D648((uint64_t)v43, (uint64_t)v11);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A124B4();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01F80(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251C9D648((uint64_t)v42, v39);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251C9FED8(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    char v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251C9D648((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251C9F4EC(void *a1)
{
  if (objc_msgSend(a1, sel_supportsResidentSelection))
  {
    id v2 = objc_msgSend(a1, sel_autoSelectedPreferredResidents);
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (v2)
    {
      uint64_t v4 = v2;
      sub_251A1A568(0, (unint64_t *)&qword_26B21EB18);
      unint64_t v5 = sub_251F35AC0();
    }
    else
    {
      unint64_t v5 = MEMORY[0x263F8EE78];
    }
    id v25 = a1;
    uint64_t v9 = 0;
    unint64_t v26 = sub_251C9EE04(v5, v25);
    swift_bridgeObjectRelease();

    int64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v44 = 0;
      uint64_t v46 = v3;
      sub_251A3E1B0(0, v27, 0);
      uint64_t v12 = v3;
      uint64_t v28 = 0;
      uint64_t v45 = *(void *)(type metadata accessor for StaticResident() - 8);
      uint64_t v29 = *(unsigned __int8 *)(v45 + 80);
      unint64_t v43 = v26;
      unint64_t v30 = v26 + ((v29 + 32) & ~v29);
      do
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FD30);
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v33 = MEMORY[0x270FA5388](v31 - 8);
        uint64_t v35 = (char *)&v42 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v36 = (uint64_t)&v35[*(int *)(v33 + 56)];
        sub_251C9DB08(v30 + *(void *)(v45 + 72) * v28, v36);
        uint64_t v37 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        uint64_t v46 = v12;
        unint64_t v39 = *(void *)(v12 + 16);
        unint64_t v38 = *(void *)(v12 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_251A3E1B0(v38 > 1, v39 + 1, 1);
          uint64_t v12 = v46;
        }
        ++v28;
        *(void *)(v12 + 16) = v39 + 1;
        sub_251C9FE70((uint64_t)v35, v12+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v39);
      }
      while (v27 != v28);
      goto LABEL_16;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  id v6 = objc_msgSend(a1, sel_residentDevices);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB18);
  unint64_t v7 = sub_251F35AC0();

  id v8 = a1;
  uint64_t v9 = 0;
  unint64_t v10 = sub_251C9EE04(v7, v8);
  swift_bridgeObjectRelease();

  int64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    goto LABEL_18;
  }
  uint64_t v44 = 0;
  uint64_t v46 = MEMORY[0x263F8EE78];
  sub_251A3E1B0(0, v11, 0);
  uint64_t v12 = v46;
  uint64_t v13 = 0;
  uint64_t v45 = *(void *)(type metadata accessor for StaticResident() - 8);
  uint64_t v14 = *(unsigned __int8 *)(v45 + 80);
  unint64_t v43 = v10;
  unint64_t v15 = v10 + ((v14 + 32) & ~v14);
  do
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FD30);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = MEMORY[0x270FA5388](v16 - 8);
    uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v21 = (uint64_t)&v20[*(int *)(v18 + 56)];
    sub_251C9DB08(v15 + *(void *)(v45 + 72) * v13, v21);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v46 = v12;
    unint64_t v24 = *(void *)(v12 + 16);
    unint64_t v23 = *(void *)(v12 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_251A3E1B0(v23 > 1, v24 + 1, 1);
      uint64_t v12 = v46;
    }
    ++v13;
    *(void *)(v12 + 16) = v24 + 1;
    sub_251C9FE70((uint64_t)v20, v12+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v24);
  }
  while (v11 != v13);
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v9 = v44;
  if (*(void *)(v12 + 16))
  {
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1C0);
    uint64_t v40 = sub_251F36700();
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v40 = MEMORY[0x263F8EE80];
LABEL_20:
  uint64_t v46 = v40;
  sub_251C9F100(v12, 1, &v46);
  swift_bridgeObjectRelease();
  if (!v9) {
    return v46;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251C9FA28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972616D697270 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C62616863616572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251C9FB28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6FB20)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_251F36B10();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_251C9FBB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C696261706163 && a2 == 0xEC00000073656974 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F6FB40 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_251C9FE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FD30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C9FED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticResident();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t MatterDeviceType.rawValue.getter()
{
  return dword_251F4D5D4[*v0];
}

uint64_t static MatterDeviceType.primaryDeviceType(for:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_251AC549C(v2);
  sub_251ABD888(v3, a1);
  return swift_release();
}

uint64_t MatterDeviceType.description.getter()
{
  return sub_251F35770();
}

Swift::Bool __swiftcall MatterDeviceType.contains(cluster:)(HomeDataModel::ClusterKind cluster)
{
  int v2 = *(unsigned __int8 *)cluster;
  unsigned int v3 = *v1;
  BOOL v4 = (0x186CE0u >> v3) & 1;
  if (v3 >= 0x15) {
    LOBYTE(v4) = 0;
  }
  BOOL v5 = v3 >= 0x15;
  BOOL v6 = (0x187EF0u >> v3) & 1;
  if (v5) {
    LOBYTE(v6) = 0;
  }
  if (v2 != 10) {
    LOBYTE(v6) = 0;
  }
  if (v2 == 11) {
    return v4;
  }
  else {
    return v6;
  }
}

BOOL MatterDeviceType.isUtility.getter()
{
  return *v0 < 3u;
}

HomeDataModel::MatterDeviceType_optional __swiftcall MatterDeviceType.init(rawValue:)(Swift::UInt32 rawValue)
{
  if ((int)rawValue <= 513)
  {
    char v2 = 9;
    switch(rawValue)
    {
      case 0x100u:
        *unint64_t v1 = 4;
        break;
      case 0x101u:
        *unint64_t v1 = 5;
        break;
      case 0x102u:
      case 0x108u:
      case 0x109u:
LABEL_17:
        *unint64_t v1 = 27;
        break;
      case 0x103u:
LABEL_30:
        *unint64_t v1 = v2;
        break;
      case 0x104u:
        *unint64_t v1 = 10;
        break;
      case 0x105u:
        *unint64_t v1 = 11;
        break;
      case 0x106u:
        *unint64_t v1 = 25;
        break;
      case 0x107u:
        *unint64_t v1 = 26;
        break;
      case 0x10Au:
        *unint64_t v1 = 12;
        break;
      case 0x10Bu:
        *unint64_t v1 = 13;
        break;
      case 0x10Cu:
        *unint64_t v1 = 6;
        break;
      case 0x10Du:
        *unint64_t v1 = 7;
        break;
      default:
        char v2 = 0;
        switch(rawValue)
        {
          case 0xAu:
            *unint64_t v1 = 21;
            break;
          case 0xBu:
            *unint64_t v1 = 22;
            break;
          case 0xCu:
          case 0xDu:
          case 0xEu:
          case 0x10u:
          case 0x12u:
          case 0x14u:
          case 0x17u:
          case 0x18u:
          case 0x19u:
          case 0x1Au:
          case 0x1Bu:
          case 0x1Cu:
          case 0x1Du:
          case 0x1Eu:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
          case 0x22u:
          case 0x23u:
          case 0x24u:
          case 0x25u:
          case 0x26u:
          case 0x28u:
          case 0x29u:
          case 0x2Au:
            goto LABEL_17;
          case 0xFu:
            *unint64_t v1 = 8;
            break;
          case 0x11u:
            char v2 = 1;
            goto LABEL_30;
          case 0x13u:
            *unint64_t v1 = 2;
            break;
          case 0x15u:
            *unint64_t v1 = 24;
            break;
          case 0x16u:
            goto LABEL_30;
          case 0x27u:
            *unint64_t v1 = 3;
            break;
          case 0x2Bu:
            *unint64_t v1 = 18;
            break;
          default:
            if (rawValue != 116) {
              goto LABEL_17;
            }
            *unint64_t v1 = 23;
            break;
        }
        break;
    }
  }
  else
  {
    switch(rawValue)
    {
      case 0x300u:
        *unint64_t v1 = 14;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x301u:
        *unint64_t v1 = 15;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x302u:
        goto LABEL_17;
      case 0x303u:
        *unint64_t v1 = 19;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x304u:
        *unint64_t v1 = 20;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      default:
        if (rawValue == 514)
        {
          *unint64_t v1 = 16;
        }
        else
        {
          if (rawValue != 515) {
            goto LABEL_17;
          }
          *unint64_t v1 = 17;
        }
        break;
    }
  }
  return (HomeDataModel::MatterDeviceType_optional)rawValue;
}

HomeDataModel::MatterDeviceType_optional sub_251CA02F4(Swift::UInt32 *a1)
{
  return MatterDeviceType.init(rawValue:)(*a1);
}

void sub_251CA02FC(_DWORD *a1@<X8>)
{
  *a1 = dword_251F4D5D4[*v1];
}

uint64_t sub_251CA0314()
{
  return sub_251F36D00();
}

uint64_t sub_251CA0364()
{
  return sub_251F36CE0();
}

uint64_t sub_251CA039C()
{
  return sub_251F36D00();
}

BOOL sub_251CA03E8(char *a1, char *a2)
{
  return dword_251F4D5D4[*a1] == dword_251F4D5D4[*a2];
}

uint64_t sub_251CA040C()
{
  return sub_251F35A80();
}

uint64_t sub_251CA046C()
{
  return sub_251F35A20();
}

uint64_t sub_251CA04BC()
{
  swift_beginAccess();
  switch(qword_26B21F258)
  {
    case 0:
    case 1:
      if (qword_269B9C3C0 == -1) {
        goto LABEL_5;
      }
      goto LABEL_6;
    case 2:
    case 3:
    case 4:
      if (qword_269B9C3C8 == -1) {
        goto LABEL_5;
      }
LABEL_6:
      swift_once();
LABEL_5:
      uint64_t result = swift_bridgeObjectRetain();
      qword_269BA1848 = result;
      return result;
    default:
      sub_251F36680();
      __break(1u);
      JUMPOUT(0x251CA05F8);
  }
}

uint64_t static MatterDeviceType.contextSupported.getter()
{
  if (qword_269B9C3B8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_251CA0668()
{
  uint64_t result = sub_251C099D0((uint64_t)&unk_27025FAB0);
  qword_269BA1850 = result;
  return result;
}

uint64_t sub_251CA0690()
{
  uint64_t result = sub_251C099D0((uint64_t)&unk_27025FA88);
  qword_269BA1858 = result;
  return result;
}

uint64_t MatterDeviceType.homeAppSupported.getter()
{
  char v1 = *v0;
  if (qword_269B9C3C0 != -1) {
    swift_once();
  }
  if (sub_251DB4820(v1, qword_269BA1850)) {
    return 1;
  }
  if (qword_269B9C4B0 != -1) {
    swift_once();
  }
  return byte_269BA38B0;
}

void MatterDeviceType.umbrellaCategory.getter(unsigned char *a1@<X8>)
{
  unsigned int v2 = *v1 - 4;
  if (v2 > 0x16) {
    *a1 = 7;
  }
  else {
    *a1 = byte_251F4D640[(char)v2];
  }
}

unint64_t sub_251CA0794()
{
  unint64_t result = qword_269BA1860;
  if (!qword_269BA1860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1860);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MatterDeviceType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE6) {
    goto LABEL_17;
  }
  if (a2 + 26 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 26) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 26;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 26;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 26;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1B;
  int v8 = v6 - 27;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MatterDeviceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 26 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 26) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE5)
  {
    unsigned int v6 = ((a2 - 230) >> 8) + 1;
    *unint64_t result = a2 + 26;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251CA0944);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 26;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterDeviceType()
{
  return &type metadata for MatterDeviceType;
}

unint64_t sub_251CA097C()
{
  unint64_t result = qword_269BA1868;
  if (!qword_269BA1868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1868);
  }
  return result;
}

uint64_t StatusItem.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  uint64_t v9 = sub_251F34DA0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a3, v8, v9);
  return sub_251CA1330((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
}

void StatusItem.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void sub_251CA0AD8(unsigned char *a1@<X8>)
{
}

BOOL static StatusItemPriority.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StatusItemPriority.hash(into:)()
{
  return sub_251F36CB0();
}

BOOL static StatusItemPriority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t StatusItemPriority.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StatusItem.label.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  uint64_t v8 = *(void *)&v7[*(int *)(v5 + 32)];
  swift_bridgeObjectRetain();
  sub_251CA1330((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  return v8;
}

uint64_t StatusItem.valueString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  uint64_t v8 = *(void *)&v7[*(int *)(v5 + 36)];
  swift_bridgeObjectRetain();
  sub_251CA1330((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  return v8;
}

unint64_t sub_251CA0D40()
{
  unint64_t result = qword_269BA1870;
  if (!qword_269BA1870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1870);
  }
  return result;
}

uint64_t dispatch thunk of StatusItem.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of StatusItem.dataHolder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of StatusItem.filter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StatusItem.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t *initializeBufferWithCopyOfBuffer for TilesFilter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TilesFilter(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(off_26536E870[(int)result - 1]);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for TilesFilter(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for TilesFilter(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251CA1330((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251CA1330(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for TilesFilter()
{
  uint64_t result = qword_269BA1878;
  if (!qword_269BA1878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for TilesFilter(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for TilesFilter(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251CA1330((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_251CA16E8()
{
  sub_251CA182C();
  if (v0 <= 0x3F)
  {
    sub_251CA1898(319, &qword_269BA1890, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
    if (v1 <= 0x3F)
    {
      sub_251CA1898(319, &qword_269BA1898, (void (*)(uint64_t))type metadata accessor for StaticService);
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_251CA182C()
{
  if (!qword_269BA1888)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CF78);
    unint64_t v0 = sub_251F34EE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269BA1888);
    }
  }
}

void sub_251CA1898(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_251F34EE0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StatusItemPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251CA19C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusItemPriority()
{
  return &type metadata for StatusItemPriority;
}

uint64_t HMActionSet.shouldShowInDashboard.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  unint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    if (swift_dynamicCast()) {
      return v8;
    }
  }
  id v4 = objc_msgSend(v0, sel_applicationData);
  uint64_t v5 = (void *)sub_251F356C0();
  id v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  if (v6 && (__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50), swift_dynamicCast())) {
    return v8;
  }
  else {
    return 1;
  }
}

void HMActionSet.shouldShowInDashboard.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  uint64_t v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251CA1D2C;
  void v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  unsigned __int8 v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_33;
  unsigned __int8 v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

uint64_t sub_251CA1CF4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251CA1D2C(uint64_t a1)
{
  return sub_251CA2AB8(a1, *(void **)(v1 + 16));
}

void (*HMActionSet.shouldShowInDashboard.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMActionSet.shouldShowInDashboard.getter() & 1;
  return sub_251CA1D94;
}

void sub_251CA1D94(uint64_t a1)
{
}

BOOL HMActionSet.hasSetDashboardVisibility.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  unint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3) {
    swift_unknownObjectRelease();
  }
  return v3 != 0;
}

uint64_t HMActionSet.icon.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = (void *)sub_251F356C0();
  id v5 = objc_msgSend(v3, sel_objectForKeyedSubscript_, v4);

  if (v5
    && (id v20 = v5, __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v7 = v21;
    uint64_t v6 = v22;
    uint64_t result = swift_bridgeObjectRetain_n();
    char v9 = 2;
    char v10 = 2;
    uint64_t v11 = v22;
    uint64_t v12 = v21;
    char v13 = 2;
    uint64_t v14 = v22;
    uint64_t v15 = v21;
    char v16 = 2;
    uint64_t v17 = v22;
    uint64_t v18 = v21;
  }
  else
  {
    id v19 = objc_msgSend(v1, sel_actionSetType);
    sub_251F356F0();

    HMActionSet.ActionSetKind.init(rawValue:)((char *)&v20);
    uint64_t result = Icon.init(actionSetKind:)(&v20, (uint64_t)&v21);
    uint64_t v18 = v21;
    uint64_t v17 = v22;
    char v16 = v23;
    uint64_t v15 = v24;
    uint64_t v14 = v25;
    char v13 = v26;
    uint64_t v12 = v27;
    uint64_t v11 = v28;
    char v10 = v29;
    uint64_t v7 = v30;
    uint64_t v6 = v31;
    char v9 = v32;
  }
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v16;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v14;
  *(unsigned char *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 88) = v9;
  return result;
}

uint64_t sub_251CA1FEC@<X0>(uint64_t a1@<X8>)
{
  HMActionSet.icon.getter((uint64_t)v13);
  uint64_t v2 = v13[1];
  char v3 = v14;
  uint64_t v4 = v15;
  uint64_t v5 = v16;
  char v6 = v17;
  uint64_t v7 = v18;
  uint64_t v8 = v19;
  char v9 = v20;
  uint64_t v11 = v21;
  uint64_t result = v22;
  char v12 = v23;
  *(void *)a1 = v13[0];
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = result;
  *(unsigned char *)(a1 + 88) = v12;
  return result;
}

void sub_251CA2060()
{
}

void HMActionSet.icon.setter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_251F356C0();
  char v3 = (void *)sub_251F356C0();
  objc_msgSend(v1, sel_setObject_forKeyedSubscript_, v2, v3);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  id v4 = objc_msgSend(v0, sel_applicationData);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  void v8[4] = sub_251CA354C;
  v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  long long v8[2] = sub_251C97A44;
  v8[3] = &block_descriptor_6_0;
  char v6 = _Block_copy(v8);
  id v7 = v0;
  swift_release();
  objc_msgSend(v7, sel_updateApplicationData_completionHandler_, v4, v6);
  _Block_release(v6);
}

void (*HMActionSet.icon.modify(void *a1))(void **a1, char a2)
{
  char v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[12] = v1;
  HMActionSet.icon.getter((uint64_t)v3);
  return sub_251CA2314;
}

void sub_251CA2314(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    HMActionSet.icon.setter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    HMActionSet.icon.setter();
  }
  free(v2);
}

uint64_t HMActionSet.iconTint.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  id v2 = objc_msgSend(v1, sel_dictionary);

  uint64_t v3 = sub_251F35550();
  *(void *)&long long v10 = 0xD00000000000001FLL;
  *((void *)&v10 + 1) = 0x8000000251F6FC40;
  sub_251F363A0();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_2519FEA74((uint64_t)v9), (v5 & 1) != 0))
  {
    sub_251A0D51C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_251A1A624((uint64_t)v9);
  if (*((void *)&v11 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA18A0);
    if (swift_dynamicCast()) {
      uint64_t v6 = v8;
    }
    else {
      uint64_t v6 = 0;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v10);
    uint64_t v6 = 0;
  }
  return Color.init(_:)(v6);
}

void HMActionSet.iconTint.setter(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    unint64_t v2 = Color.colorDictionary.getter();
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = objc_msgSend(v1, sel_applicationData);
      sub_251CA275C(v3);
      swift_bridgeObjectRelease();
      char v5 = (void *)sub_251F35540();
      uint64_t v6 = (void *)sub_251F356C0();
      objc_msgSend(v4, sel_setObject_forKeyedSubscript_, v5, v6);

      swift_bridgeObjectRelease();
      id v7 = objc_msgSend(v1, sel_applicationData);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v1;
      v11[4] = sub_251CA354C;
      v11[5] = v8;
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 1107296256;
      long long v11[2] = sub_251C97A44;
      void v11[3] = &block_descriptor_12_0;
      char v9 = _Block_copy(v11);
      id v10 = v1;
      swift_release();
      objc_msgSend(v10, sel_updateApplicationData_completionHandler_, v7, v9);
      swift_release();
      _Block_release(v9);
      swift_release();
    }
    else
    {
      swift_release_n();
    }
  }
}

unint64_t sub_251CA275C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9F0);
    unint64_t v2 = (void *)sub_251F36700();
  }
  else
  {
    unint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  id v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D538];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_251A1E630();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_251A0D578(v6, v7);
    sub_251A0D578(v7, v40);
    sub_251A0D578(v40, &v38);
    unint64_t result = sub_2519FE798(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      char v12 = v7;
      char v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      char v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *char v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      id v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_251A0D578(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_251A0D578(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251CA2AB8(uint64_t a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  unint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21FF20);
  *unint64_t v5 = objc_msgSend(a2, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void (*HMActionSet.iconTint.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = HMActionSet.iconTint.getter();
  return sub_251CA2CAC;
}

void sub_251CA2CAC(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = swift_retain();
    HMActionSet.iconTint.setter(v2);
    swift_release();
  }
  else
  {
    HMActionSet.iconTint.setter(*a1);
  }
}

void HMActionSet.statusIcon.setter()
{
}

void (*HMActionSet.statusIcon.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[12] = v1;
  HMActionSet.icon.getter((uint64_t)v3);
  return sub_251CA2314;
}

void (*HMActionSet.statusIconTint.modify(uint64_t *a1))(uint64_t *, char)
{
  a1[1] = v1;
  *a1 = HMActionSet.iconTint.getter();
  return sub_251CA2E14;
}

void (*HMActionSet.tileIconTint.modify(uint64_t *a1))(uint64_t *, char)
{
  a1[1] = v1;
  *a1 = HMActionSet.iconTint.getter();
  return sub_251CA2E14;
}

unint64_t HMActionSet.iconSymbol.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_applicationData);
  uint64_t v3 = (void *)sub_251F356C0();
  unint64_t v4 = (unint64_t)objc_msgSend(v2, sel_objectForKeyedSubscript_, v3);

  if (!v4)
  {

LABEL_6:
    uint64_t v5 = 0;
    goto LABEL_7;
  }
  unint64_t v15 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  if ((swift_dynamicCast() & 1) == 0)
  {

    unint64_t v4 = 0;
    goto LABEL_6;
  }
  unint64_t v4 = v13;
  uint64_t v5 = v14;

LABEL_7:
  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = (void *)sub_251F356C0();
  id v8 = objc_msgSend(v6, sel_objectForKeyedSubscript_, v7);

  if (!v8
    || (unint64_t v15 = (unint64_t)v8,
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50),
        !swift_dynamicCast()))
  {

    if (!v5) {
      goto LABEL_18;
    }
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRetain();
    if (sub_251F35870())
    {
      swift_bridgeObjectRelease();
      unint64_t v4 = sub_251CA3248();
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      if (!v10)
      {
LABEL_20:
        unint64_t v4 = 0x69662E6573756F68;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return v4;
  }

  if (v5) {
    goto LABEL_13;
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = v13;
    goto LABEL_14;
  }
LABEL_18:
  id v11 = objc_msgSend(v1, sel_actionSetType);
  sub_251F356F0();

  HMActionSet.ActionSetKind.init(rawValue:)((char *)&v13);
  unint64_t v4 = 0xD000000000000013;
  switch((char)v13)
  {
    case 0:
      return v4;
    case 1:
      unint64_t v4 = 0xD000000000000015;
      break;
    case 2:
      unint64_t v4 = 0x2E78616D2E6E7573;
      break;
    case 3:
      unint64_t v4 = 0x6174732E6E6F6F6DLL;
      break;
    case 7:
      goto LABEL_20;
    default:
      unint64_t v4 = 0x69662E6573756F68;
      break;
  }
  return v4;
}

uint64_t HMActionSet.backupTint.getter()
{
  if (qword_269B9C508 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

unint64_t sub_251CA3248()
{
  swift_bridgeObjectRetain();
  int v0 = _s13HomeDataModel24LegacyHFImageIdentifiersO8rawValueACSgSS_tcfC_0() - 61;
  unint64_t result = 0x2E78616D2E6E7573;
  switch(v0)
  {
    case 0:
      unint64_t result = 0xD000000000000013;
      break;
    case 1:
      unint64_t result = 0x702E676E69797266;
      break;
    case 2:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x696E6B2E6B726F66;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x2E6E726F63706F70;
      break;
    case 8:
      unint64_t result = 0x69662E7472616568;
      break;
    case 9:
      unint64_t result = 0x6174732E6E6F6F6DLL;
      break;
    case 10:
      return result;
    default:
      unint64_t result = 0x69662E6573756F68;
      break;
  }
  return result;
}

uint64_t sub_251CA3428@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMActionSet.shouldShowInDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_251CA3458(char *a1)
{
}

uint64_t sub_251CA3488@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HMActionSet.iconTint.getter();
  *a1 = result;
  return result;
}

void sub_251CA34B4()
{
  uint64_t v0 = swift_retain();
  HMActionSet.iconTint.setter(v0);
}

uint64_t sub_251CA34E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HMActionSet.iconTint.getter();
  *a1 = result;
  return result;
}

void keypath_set_23Tm()
{
  uint64_t v0 = swift_retain();
  HMActionSet.iconTint.setter(v0);
}

void static StatusIcon.defaultIcon.getter(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1493434368;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_251CA3580()
{
  unsigned int v1 = *v0;
  switch(*((unsigned char *)v0 + 2))
  {
    case 1:
      sub_251F36CB0();
      if (v1 == 27) {
        goto LABEL_10;
      }
      sub_251F36CC0();
      uint64_t result = sub_251F36CE0();
      break;
    case 2:
      sub_251F36CB0();
      if (!(v1 >> 14))
      {
        sub_251F36CB0();
        goto LABEL_13;
      }
      if (v1 >> 14 != 1) {
        goto LABEL_13;
      }
      sub_251F36CB0();
      sub_251F36CC0();
      uint64_t result = sub_251F36CC0();
      break;
    case 3:
      sub_251F36CB0();
      if (v1 != 7) {
        goto LABEL_3;
      }
      goto LABEL_10;
    case 4:
LABEL_13:
      uint64_t result = sub_251F36CB0();
      break;
    default:
      sub_251F36CB0();
      ServiceKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      if (v1 >> 8 == 5)
      {
LABEL_10:
        uint64_t result = sub_251F36CC0();
      }
      else
      {
LABEL_3:
        sub_251F36CC0();
        sub_251F357B0();
        uint64_t result = swift_bridgeObjectRelease();
      }
      break;
  }
  return result;
}

uint64_t sub_251CA38E4(void *a1)
{
  id v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1910);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v4);
  os_log_type_t v41 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1918);
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v6);
  long long v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1920);
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1928);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1930);
  uint64_t v33 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1938);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v45 = v17;
  uint64_t v46 = v18;
  MEMORY[0x270FA5388](v17);
  int64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v44 = *v2;
  uint64_t v21 = *((unsigned __int8 *)v2 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251CA6F60();
  sub_251F36DA0();
  switch(v21)
  {
    case 1:
      char v56 = 2;
      sub_251CA70B0();
      uint64_t v27 = v45;
      sub_251F36900();
      char v54 = v44;
      sub_251AC5A7C();
      uint64_t v28 = v35;
      sub_251F36970();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v28);
      goto LABEL_9;
    case 2:
      char v57 = 3;
      sub_251CA705C();
      BOOL v29 = v38;
      uint64_t v27 = v45;
      sub_251F36900();
      __int16 v55 = v44;
      sub_251C9D94C();
      uint64_t v30 = v40;
      sub_251F36A20();
      uint64_t v31 = v39;
      goto LABEL_8;
    case 3:
      char v59 = 4;
      sub_251CA6FB4();
      BOOL v29 = v41;
      uint64_t v27 = v45;
      sub_251F36900();
      char v58 = v44;
      sub_251CA7008();
      uint64_t v30 = v43;
      sub_251F36970();
      uint64_t v31 = v42;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v20, v27);
      break;
    case 4:
      char v48 = 0;
      sub_251CA7200();
      uint64_t v32 = v45;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v14);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v20, v32);
      break;
    default:
      char v53 = 1;
      sub_251CA7104();
      uint64_t v22 = v45;
      sub_251F36900();
      char v23 = BYTE1(v44);
      char v52 = v44;
      char v51 = 0;
      sub_251CA7158();
      uint64_t v24 = v37;
      uint64_t v25 = v47;
      sub_251F36A20();
      if (!v25)
      {
        char v50 = v23;
        char v49 = 1;
        sub_251CA71AC();
        sub_251F36970();
      }
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v24);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v20, v22);
      break;
  }
  return result;
}

uint64_t sub_251CA3F6C@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  char v49 = a2;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1988);
  uint64_t v48 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  char v52 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1990);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  MEMORY[0x270FA5388](v4);
  char v51 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1998);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  MEMORY[0x270FA5388](v7);
  char v50 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA19A0);
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA19A8);
  uint64_t v40 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA19B0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  char v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_251CA6F60();
  uint64_t v19 = v54;
  sub_251F36D90();
  if (v19) {
    goto LABEL_10;
  }
  uint64_t v54 = v11;
  uint64_t v21 = v51;
  int64_t v20 = v52;
  uint64_t v22 = sub_251F368E0();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v25 = v14;
    uint64_t v26 = sub_251F36490();
    swift_allocError();
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v28 = &type metadata for StatusIcon.StatusIconPayload;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v25);
LABEL_10:
    uint64_t v35 = (uint64_t)v53;
    return __swift_destroy_boxed_opaque_existential_0(v35);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      uint64_t v54 = v22;
      char v60 = 1;
      sub_251CA7104();
      sub_251F36770();
      char v58 = 0;
      sub_251CA72A8();
      uint64_t v29 = v42;
      sub_251F36880();
      uint64_t v37 = v14;
      __int16 v38 = v59;
      char v56 = 1;
      sub_251CA72FC();
      sub_251F367D0();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v37);
      char v24 = 0;
      __int16 v23 = v38 | (v57 << 8);
      break;
    case 2:
      char v63 = 2;
      sub_251CA70B0();
      uint64_t v30 = v50;
      sub_251F36770();
      sub_251AC5BEC();
      uint64_t v31 = v44;
      sub_251F367D0();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      __int16 v23 = v61;
      char v24 = 1;
      break;
    case 3:
      char v64 = 3;
      sub_251CA705C();
      sub_251F36770();
      sub_251C9DAB4();
      uint64_t v32 = v46;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      __int16 v23 = v62;
      char v24 = 2;
      break;
    case 4:
      uint64_t v54 = v22;
      char v66 = 4;
      sub_251CA6FB4();
      uint64_t v33 = v17;
      sub_251F36770();
      sub_251CA7254();
      uint64_t v34 = v41;
      sub_251F367D0();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v33, v14);
      __int16 v23 = v65;
      char v24 = 3;
      break;
    default:
      char v55 = 0;
      sub_251CA7200();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      __int16 v23 = 0;
      char v24 = 4;
      break;
  }
  uint64_t v35 = (uint64_t)v53;
  uint64_t v39 = v49;
  *char v49 = v23;
  *((unsigned char *)v39 + 2) = v24;
  return __swift_destroy_boxed_opaque_existential_0(v35);
}

uint64_t sub_251CA48A4(uint64_t a1)
{
  unint64_t v2 = sub_251CA6FB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CA48E0(uint64_t a1)
{
  unint64_t v2 = sub_251CA6FB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_251CA491C()
{
  unint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65636976726573;
      break;
    case 2:
      unint64_t result = 0x72657474616DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x65536E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251CA49C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251CA6B44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251CA49EC(uint64_t a1)
{
  unint64_t v2 = sub_251CA6F60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CA4A28(uint64_t a1)
{
  unint64_t v2 = sub_251CA6F60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251CA4A64(uint64_t a1)
{
  unint64_t v2 = sub_251CA70B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CA4AA0(uint64_t a1)
{
  unint64_t v2 = sub_251CA70B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251CA4ADC(uint64_t a1)
{
  unint64_t v2 = sub_251CA7200();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CA4B18(uint64_t a1)
{
  unint64_t v2 = sub_251CA7200();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251CA4B54()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_251CA4B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251CA6D50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251CA4B98(uint64_t a1)
{
  unint64_t v2 = sub_251CA7104();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CA4BD4(uint64_t a1)
{
  unint64_t v2 = sub_251CA7104();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251CA4C10(uint64_t a1)
{
  unint64_t v2 = sub_251CA705C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CA4C4C(uint64_t a1)
{
  unint64_t v2 = sub_251CA705C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251CA4C8C()
{
  return sub_251F36D00();
}

uint64_t sub_251CA4CE4()
{
  return sub_251F36D00();
}

uint64_t sub_251CA4D34@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_251CA3F6C(a1, a2);
}

uint64_t sub_251CA4D4C(void *a1)
{
  return sub_251CA38E4(a1);
}

void StatusIcon.customIconSymbol.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

uint64_t StatusIcon.customIconSymbolString.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StatusIcon.tileOnIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251CA4EE8(1, 0, a1);
}

uint64_t sub_251CA4DAC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  unsigned int v5 = *v3;
  int v6 = *((unsigned __int8 *)v3 + 2);
  char v7 = *((unsigned char *)v3 + 3);
  uint64_t v8 = *((void *)v3 + 1);
  uint64_t v9 = *((void *)v3 + 2);
  if (v6 == 2 && (v5 >> 14 < 2 || (v5 >> 14 == 2 ? (BOOL v10 = v5 == 32769) : (BOOL v10 = 0), v10)))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F218);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(_WORD *)(inited + 32) = v5;
    uint64_t v18 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
    uint64_t v20 = v19;
    uint64_t result = swift_setDeallocating();
    *(void *)a3 = v18;
    *(void *)(a3 + 8) = v20;
    *(unsigned char *)(a3 + 16) = 0;
  }
  else
  {
    uint64_t v11 = (unsigned __int8 *)(a2 & 1);
    unint64_t v12 = sub_251CA4F24(a1 & 1, a2 & 1);
    uint64_t v14 = v13;
    __int16 v22 = v5;
    char v23 = v6;
    char v24 = v7;
    uint64_t v25 = v8;
    uint64_t v26 = v9;
    uint64_t result = (uint64_t)sub_251CA5278(v11, &v21);
    char v16 = v21;
    *(void *)a3 = v12;
    *(void *)(a3 + 8) = v14;
    *(unsigned char *)(a3 + 16) = v16;
  }
  return result;
}

uint64_t StatusIcon.tileOffIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251CA4EE8(1, 1, a1);
}

uint64_t StatusIcon.accessoryControlOnIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251CA4EE8(0, 0, a1);
}

uint64_t StatusIcon.accessoryControlOffIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251CA4EE8(0, 1, a1);
}

uint64_t sub_251CA4EE8@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_251CA4DAC(a1, a2, a3);
}

unint64_t sub_251CA4F24(char a1, char a2)
{
  int v4 = *((unsigned __int8 *)v2 + 3);
  if (v4 != 89)
  {
    if ((a2 & 1) == 0)
    {
      unsigned __int8 v13 = *((unsigned char *)v2 + 3);
      return IconSymbol.onStateSymbolName.getter();
    }
LABEL_32:
    unsigned __int8 v13 = v4;
    return IconSymbol.rawValue.getter();
  }
  unsigned int v5 = *v2;
  int v6 = *((unsigned __int8 *)v2 + 2);
  if (v6 != 3)
  {
    if (v6 == 1)
    {
      LOBYTE(v4) = 53;
      switch(*v2)
      {
        case 4u:
        case 5u:
        case 6u:
        case 7u:
          LOBYTE(v4) = 31;
          goto LABEL_32;
        case 0x15u:
        case 0x16u:
          LOBYTE(v4) = 19;
          goto LABEL_32;
        case 0x17u:
          goto LABEL_32;
        case 0x1Bu:
          return 0;
        default:
          LOBYTE(v4) = 88;
          goto LABEL_32;
      }
    }
    if (*((unsigned char *)v2 + 2)) {
      return 0;
    }
    unsigned __int8 v13 = *v2;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v8 == 0x8000000251F65130)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v10 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
LABEL_19:
        if ((a2 & 1) == 0)
        {
          unsigned __int8 v13 = v5;
          static IconSymbol.defaultSymbol(serviceKind:)(&v13, &v12);
          return IconSymbol.onStateSymbolName.getter();
        }
        if ((a1 & 1) == 0)
        {
          unsigned __int8 v12 = v5;
          static IconSymbol.defaultSymbol(serviceKind:)(&v12, &v13);
          if (v13 == 31) {
            return 0xD000000000000014;
          }
        }
        unsigned __int8 v13 = v5;
        static IconSymbol.defaultSymbol(serviceKind:)(&v13, &v12);
        return IconSymbol.rawValue.getter();
      }
    }
    if (v5 >> 8 != 5)
    {
      if ((a2 & 1) == 0)
      {
        unsigned __int8 v13 = 47;
        unsigned __int8 v12 = BYTE1(v5);
        static IconSymbol.defaultSymbol(for:subKind:)(&v13, &v12, &v11);
        return IconSymbol.onStateSymbolName.getter();
      }
      unsigned __int8 v13 = 47;
      unsigned __int8 v12 = BYTE1(v5);
      static IconSymbol.defaultSymbol(for:subKind:)(&v13, &v12, &v11);
      return IconSymbol.rawValue.getter();
    }
    goto LABEL_19;
  }
  unint64_t result = 0xD000000000000013;
  switch(*v2)
  {
    case 0u:
      return result;
    case 1u:
      unint64_t result = 0xD000000000000015;
      break;
    case 2u:
      unint64_t result = 0x2E78616D2E6E7573;
      break;
    case 3u:
      unint64_t result = 0x6174732E6E6F6F6DLL;
      break;
    case 7u:
      return 0;
    default:
      unint64_t result = 0x69662E6573756F68;
      break;
  }
  return result;
}

unsigned __int8 *sub_251CA5278@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  int v4 = *(unsigned __int8 *)(v2 + 3);
  if (v4 != 89)
  {
    if (result)
    {
      if ((v4 - 41) < 7 || v4 == 28) {
        goto LABEL_21;
      }
    }
    else
    {
      unsigned int v9 = v4 - 27;
      BOOL v6 = v9 > 0x2C;
      uint64_t v10 = (1 << v9) & 0x1000000000C1;
      if (v6 || v10 == 0) {
        goto LABEL_21;
      }
    }
    *a2 = 0;
    return result;
  }
  if (*(unsigned char *)(v2 + 2))
  {
LABEL_21:
    char v13 = 2;
    goto LABEL_22;
  }
  if ((result & 1) == 0)
  {
    unsigned __int8 v15 = *(_WORD *)v2;
    unint64_t result = static IconSymbol.defaultSymbol(serviceKind:)(&v15, &v16);
    unsigned int v5 = v16 - 27;
    BOOL v6 = v5 > 0x2C;
    uint64_t v7 = (1 << v5) & 0x1000000000C1;
    if (!v6 && v7 != 0) {
      goto LABEL_26;
    }
    goto LABEL_21;
  }
  unsigned __int8 v17 = *(_WORD *)v2;
  unint64_t result = static IconSymbol.defaultSymbol(serviceKind:)(&v17, &v18);
  unsigned int v14 = v18 - 28;
  if (v14 > 0x13)
  {
LABEL_26:
    char v13 = 0;
    goto LABEL_22;
  }
  char v13 = byte_251F4E15E[(char)v14];
LABEL_22:
  *a2 = v13;
  return result;
}

HomeDataModel::IconSymbol __swiftcall StatusIcon.defaultIconSymbol()()
{
  int v2 = *((unsigned __int8 *)v1 + 2);
  if (v2 == 3)
  {
    char v5 = 54;
    switch(*v1)
    {
      case 0u:
        goto LABEL_15;
      case 1u:
        *uint64_t v0 = 55;
        return result;
      case 2u:
        *uint64_t v0 = 57;
        return result;
      case 3u:
        char v5 = 56;
LABEL_15:
        *uint64_t v0 = v5;
        break;
      case 7u:
        goto LABEL_9;
      default:
        *uint64_t v0 = 88;
        break;
    }
  }
  else
  {
    if (v2 == 1)
    {
      char v6 = 53;
      switch(*v1)
      {
        case 4u:
        case 5u:
        case 6u:
        case 7u:
          char v6 = 31;
          break;
        case 0x15u:
        case 0x16u:
          char v6 = 19;
          break;
        case 0x17u:
          break;
        default:
          goto LABEL_9;
      }
    }
    else
    {
      if (!*((unsigned char *)v1 + 2))
      {
        unsigned __int16 v3 = *v1;
        unsigned __int8 v7 = HIBYTE(*v1);
        unsigned __int8 v8 = v3;
        return static IconSymbol.defaultSymbol(for:subKind:)(&v8, &v7, v0);
      }
LABEL_9:
      char v6 = 88;
    }
    *uint64_t v0 = v6;
  }
  return result;
}

uint64_t StatusIcon.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 3);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_251CA3580();
  if (v1 != 89)
  {
    sub_251F36CC0();
    IconSymbol.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  if (!v2) {
    return sub_251F36CC0();
  }
LABEL_3:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251CA560C()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000016;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64616F6C796170;
  }
}

uint64_t sub_251CA566C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251CA6E14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251CA5694(uint64_t a1)
{
  unint64_t v2 = sub_251CA638C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CA56D0(uint64_t a1)
{
  unint64_t v2 = sub_251CA638C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StatusIcon.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA18A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v7 = *v1;
  char v8 = *((unsigned char *)v1 + 2);
  int v13 = *((unsigned __int8 *)v1 + 3);
  uint64_t v9 = *((void *)v1 + 1);
  v12[0] = *((void *)v1 + 2);
  v12[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251CA638C();
  sub_251F36DA0();
  __int16 v18 = v7;
  char v19 = v8;
  char v20 = 0;
  sub_251CA63E0();
  uint64_t v10 = v14;
  sub_251F36A20();
  if (!v10)
  {
    char v17 = v13;
    char v16 = 1;
    sub_251CA6434();
    sub_251F36970();
    char v15 = 2;
    sub_251F36910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StatusIcon.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 3);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_251F36CA0();
  sub_251CA3580();
  if (v1 != 89)
  {
    sub_251F36CC0();
    IconSymbol.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_251F36CC0();
    return sub_251F36D00();
  }
  sub_251F36CC0();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t StatusIcon.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA18C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251CA638C();
  sub_251F36D90();
  if (!v2)
  {
    char v23 = 0;
    sub_251CA6488();
    sub_251F36880();
    __int16 v9 = v21;
    char v10 = v22;
    char v19 = 1;
    sub_251CA64DC();
    sub_251F367D0();
    int v17 = v20;
    char v18 = 2;
    uint64_t v12 = sub_251F36790();
    int v13 = v8;
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    *(_WORD *)a2 = v9;
    *(unsigned char *)(a2 + 2) = v10;
    *(unsigned char *)(a2 + 3) = v17;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251CA5C00()
{
  int v1 = *(unsigned __int8 *)(v0 + 3);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_251CA3580();
  if (v1 != 89)
  {
    sub_251F36CC0();
    IconSymbol.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  if (!v2) {
    return sub_251F36CC0();
  }
LABEL_3:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251CA5D08()
{
  int v1 = *(unsigned __int8 *)(v0 + 3);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_251F36CA0();
  sub_251CA3580();
  if (v1 != 89)
  {
    sub_251F36CC0();
    IconSymbol.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_251F36CC0();
    return sub_251F36D00();
  }
  sub_251F36CC0();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251CA5DFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StatusIcon.init(from:)(a1, a2);
}

uint64_t sub_251CA5E14(void *a1)
{
  return StatusIcon.encode(to:)(a1);
}

uint64_t StatusIcon.Info.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void StatusIcon.Info.renderingMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

BOOL static StatusIcon.Info.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_251F36B10();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t StatusIcon.Info.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t StatusIcon.Info.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251CA5F88(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 2);
  switch(*((unsigned char *)a1 + 2))
  {
    case 1:
      if (v4 != 1) {
        return 0;
      }
      if (*a1 == 27)
      {
        if (*a2 != 27) {
          return 0;
        }
      }
      else if (*a2 == 27 || dword_251F4E174[(char)v2] != dword_251F4E174[(char)v3])
      {
        return 0;
      }
      return 1;
    case 2:
      if (v4 != 2) {
        return 0;
      }
      if (!(v2 >> 14)) {
        return (v3 & 0xC000) == 0 && (v3 ^ v2) == 0;
      }
      if (v2 >> 14 == 1) {
        return (v3 & 0xC000) == 0x4000
      }
            && ((v2 & 1) == 0) != (v3 & 1)
            && ((((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8)) & 1) != 0;
      switch(*a1)
      {
        case 0x8000u:
          return v3 == 0x8000;
        case 0x8001u:
          int v13 = 32769;
          break;
        case 0x8002u:
          int v13 = 32770;
          break;
        case 0x8003u:
          int v13 = 32771;
          break;
        default:
          int v13 = 33024;
          break;
      }
      return v3 == v13;
    case 3:
      if (v4 != 3) {
        return 0;
      }
      if (*a1 == 7)
      {
        if (*a2 != 7) {
          return 0;
        }
      }
      else if (*a2 == 7 || (sub_251DB3434(*a1, *a2) & 1) == 0)
      {
        return 0;
      }
      return 1;
    case 4:
      return v4 == 4 && v3 == 0;
    default:
      if (*((unsigned char *)a2 + 2)) {
        return 0;
      }
      unint64_t v5 = ServiceKind.rawValue.getter();
      uint64_t v7 = v6;
      if (v5 == ServiceKind.rawValue.getter() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v11 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
      if (v2 >> 8 != 5) {
        return v3 >> 8 != 5 && (sub_251DB36AC(SBYTE1(v2), SBYTE1(v3)) & 1) != 0;
      }
      return v3 >> 8 == 5;
  }
}

BOOL _s13HomeDataModel10StatusIconV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 2);
  int v3 = *(unsigned __int8 *)(a1 + 3);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unsigned __int16 v6 = *(_WORD *)a2;
  char v7 = *(unsigned char *)(a2 + 2);
  int v8 = *(unsigned __int8 *)(a2 + 3);
  uint64_t v10 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  unsigned __int16 v19 = *(_WORD *)a1;
  char v20 = v2;
  unsigned __int16 v17 = v6;
  char v18 = v7;
  if ((sub_251CA5F88(&v19, &v17) & 1) == 0) {
    return 0;
  }
  if (v3 == 89)
  {
    if (v8 != 89) {
      return 0;
    }
  }
  else
  {
    if (v8 == 89) {
      return 0;
    }
    uint64_t v11 = IconSymbol.rawValue.getter();
    uint64_t v13 = v12;
    if (v11 == IconSymbol.rawValue.getter() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v15 & 1) == 0) {
        return result;
      }
    }
  }
  if (v5) {
    return v9 && (v4 == v10 && v5 == v9 || (sub_251F36B10() & 1) != 0);
  }
  return !v9;
}

unint64_t sub_251CA638C()
{
  unint64_t result = qword_269BA18B0;
  if (!qword_269BA18B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18B0);
  }
  return result;
}

unint64_t sub_251CA63E0()
{
  unint64_t result = qword_269BA18B8;
  if (!qword_269BA18B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18B8);
  }
  return result;
}

unint64_t sub_251CA6434()
{
  unint64_t result = qword_269BA18C0;
  if (!qword_269BA18C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18C0);
  }
  return result;
}

unint64_t sub_251CA6488()
{
  unint64_t result = qword_269BA18D0;
  if (!qword_269BA18D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18D0);
  }
  return result;
}

unint64_t sub_251CA64DC()
{
  unint64_t result = qword_269BA18D8;
  if (!qword_269BA18D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18D8);
  }
  return result;
}

unint64_t sub_251CA6534()
{
  unint64_t result = qword_269BA18E0;
  if (!qword_269BA18E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18E0);
  }
  return result;
}

unint64_t sub_251CA658C()
{
  unint64_t result = qword_269BA18E8;
  if (!qword_269BA18E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18E8);
  }
  return result;
}

uint64_t destroy for ServiceArea.Map()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel11ServiceAreaV3MapVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StatusIcon(uint64_t a1, __int16 *a2)
{
  __int16 v3 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v3;
  *(unsigned char *)(a1 + 3) = *((unsigned char *)a2 + 3);
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServiceArea.Map(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StatusIcon(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusIcon(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon()
{
  return &type metadata for StatusIcon;
}

ValueMetadata *type metadata accessor for StatusIcon.Info()
{
  return &type metadata for StatusIcon.Info;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for StatusIcon.StatusIconPayload(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    if ((a2 + 33554180) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776964;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776964;
      }
    }
  }
  unsigned int v4 = *((unsigned __int8 *)a1 + 2);
  if (v4 <= 4) {
    int v5 = -1;
  }
  else {
    int v5 = v4 ^ 0xFF;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusIcon.StatusIconPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554180) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFB) {
    int v3 = 0;
  }
  if (a2 > 0xFB)
  {
    *(_WORD *)unint64_t result = a2 - 252;
    *(unsigned char *)(result + 2) = (a2 - 252) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 252) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 2) = -(char)a2;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_251CA68A0(unsigned __int16 *a1)
{
  if (*((unsigned __int8 *)a1 + 2) <= 3u) {
    return *((unsigned __int8 *)a1 + 2);
  }
  else {
    return *a1 + 4;
  }
}

uint64_t sub_251CA68B8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_WORD *)unint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 2) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload()
{
  return &type metadata for StatusIcon.StatusIconPayload;
}

unsigned char *storeEnumTagSinglePayload for StatusIcon.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251CA69ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.CodingKeys()
{
  return &type metadata for StatusIcon.CodingKeys;
}

unint64_t sub_251CA69E8()
{
  unint64_t result = qword_269BA18F0;
  if (!qword_269BA18F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18F0);
  }
  return result;
}

unint64_t sub_251CA6A40()
{
  unint64_t result = qword_269BA18F8;
  if (!qword_269BA18F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA18F8);
  }
  return result;
}

unint64_t sub_251CA6A98()
{
  unint64_t result = qword_269BA1900;
  if (!qword_269BA1900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1900);
  }
  return result;
}

unint64_t sub_251CA6AF0()
{
  unint64_t result = qword_269BA1908;
  if (!qword_269BA1908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1908);
  }
  return result;
}

uint64_t sub_251CA6B44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636976726573 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72657474616DLL && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F6FB40 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251CA6D50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251CA6E14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F6FD20 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000251F6FD40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_251CA6F60()
{
  unint64_t result = qword_269BA1940;
  if (!qword_269BA1940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1940);
  }
  return result;
}

unint64_t sub_251CA6FB4()
{
  unint64_t result = qword_269BA1948;
  if (!qword_269BA1948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1948);
  }
  return result;
}

unint64_t sub_251CA7008()
{
  unint64_t result = qword_269BA1950;
  if (!qword_269BA1950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1950);
  }
  return result;
}

unint64_t sub_251CA705C()
{
  unint64_t result = qword_269BA1958;
  if (!qword_269BA1958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1958);
  }
  return result;
}

unint64_t sub_251CA70B0()
{
  unint64_t result = qword_269BA1960;
  if (!qword_269BA1960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1960);
  }
  return result;
}

unint64_t sub_251CA7104()
{
  unint64_t result = qword_269BA1968;
  if (!qword_269BA1968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1968);
  }
  return result;
}

unint64_t sub_251CA7158()
{
  unint64_t result = qword_269BA1970;
  if (!qword_269BA1970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1970);
  }
  return result;
}

unint64_t sub_251CA71AC()
{
  unint64_t result = qword_269BA1978;
  if (!qword_269BA1978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1978);
  }
  return result;
}

unint64_t sub_251CA7200()
{
  unint64_t result = qword_269BA1980;
  if (!qword_269BA1980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1980);
  }
  return result;
}

unint64_t sub_251CA7254()
{
  unint64_t result = qword_269BA19B8;
  if (!qword_269BA19B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19B8);
  }
  return result;
}

unint64_t sub_251CA72A8()
{
  unint64_t result = qword_269BA19C0;
  if (!qword_269BA19C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19C0);
  }
  return result;
}

unint64_t sub_251CA72FC()
{
  unint64_t result = qword_269BA19C8;
  if (!qword_269BA19C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StatusIcon.StatusIconPayload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251CA741CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.CodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.NoneCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.NoneCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StatusIcon.StatusIconPayload.ServiceCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251CA7530);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.ServiceCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.ServiceCodingKeys;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.MatterCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.MatterCodingKeys;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.SpecialMediaCategoryCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.SpecialMediaCategoryCodingKeys;
}

unsigned char *_s13HomeDataModel10StatusIconV17StatusIconPayloadO16MatterCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251CA7628);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.ActionSetCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.ActionSetCodingKeys;
}

unint64_t sub_251CA7664()
{
  unint64_t result = qword_269BA19D0;
  if (!qword_269BA19D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19D0);
  }
  return result;
}

unint64_t sub_251CA76BC()
{
  unint64_t result = qword_269BA19D8;
  if (!qword_269BA19D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19D8);
  }
  return result;
}

unint64_t sub_251CA7714()
{
  unint64_t result = qword_269BA19E0;
  if (!qword_269BA19E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19E0);
  }
  return result;
}

unint64_t sub_251CA776C()
{
  unint64_t result = qword_269BA19E8;
  if (!qword_269BA19E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19E8);
  }
  return result;
}

unint64_t sub_251CA77C4()
{
  unint64_t result = qword_269BA19F0;
  if (!qword_269BA19F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19F0);
  }
  return result;
}

unint64_t sub_251CA781C()
{
  unint64_t result = qword_269BA19F8;
  if (!qword_269BA19F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA19F8);
  }
  return result;
}

unint64_t sub_251CA7874()
{
  unint64_t result = qword_269BA1A00;
  if (!qword_269BA1A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A00);
  }
  return result;
}

unint64_t sub_251CA78CC()
{
  unint64_t result = qword_269BA1A08;
  if (!qword_269BA1A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A08);
  }
  return result;
}

unint64_t sub_251CA7924()
{
  unint64_t result = qword_269BA1A10;
  if (!qword_269BA1A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A10);
  }
  return result;
}

unint64_t sub_251CA797C()
{
  unint64_t result = qword_269BA1A18;
  if (!qword_269BA1A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A18);
  }
  return result;
}

unint64_t sub_251CA79D4()
{
  unint64_t result = qword_269BA1A20;
  if (!qword_269BA1A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A20);
  }
  return result;
}

unint64_t sub_251CA7A2C()
{
  unint64_t result = qword_269BA1A28;
  if (!qword_269BA1A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A28);
  }
  return result;
}

unint64_t sub_251CA7A84()
{
  unint64_t result = qword_269BA1A30;
  if (!qword_269BA1A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A30);
  }
  return result;
}

unint64_t sub_251CA7ADC()
{
  unint64_t result = qword_269BA1A38;
  if (!qword_269BA1A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A38);
  }
  return result;
}

unint64_t sub_251CA7B34()
{
  unint64_t result = qword_269BA1A40;
  if (!qword_269BA1A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A40);
  }
  return result;
}

unint64_t sub_251CA7B8C()
{
  unint64_t result = qword_269BA1A48;
  if (!qword_269BA1A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A48);
  }
  return result;
}

unint64_t sub_251CA7BE4()
{
  unint64_t result = qword_269BA1A50;
  if (!qword_269BA1A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A50);
  }
  return result;
}

void static CharacteristicWriteBehavior.batched.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t CharacteristicWriteBehavior.rawValue.getter()
{
  return *(void *)v0;
}

HomeDataModel::CharacteristicWriteBehavior __swiftcall CharacteristicWriteBehavior.init(rawValue:)(HomeDataModel::CharacteristicWriteBehavior rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static CharacteristicWriteBehavior.ephemeral.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static CharacteristicWriteBehavior.optimistic.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static CharacteristicWriteBehavior.widgetManager.getter(void *a1@<X8>)
{
  *a1 = 1024;
}

unint64_t sub_251CA7C7C()
{
  unint64_t result = qword_269BA1A58;
  if (!qword_269BA1A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A58);
  }
  return result;
}

unint64_t sub_251CA7CD4()
{
  unint64_t result = qword_269BA1A60;
  if (!qword_269BA1A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A60);
  }
  return result;
}

unint64_t sub_251CA7D2C()
{
  unint64_t result = qword_269BA1A68;
  if (!qword_269BA1A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A68);
  }
  return result;
}

unint64_t sub_251CA7D84()
{
  unint64_t result = qword_269BA1A70;
  if (!qword_269BA1A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA1A70);
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicWriteBehavior()
{
  return &type metadata for CharacteristicWriteBehavior;
}

void sub_251CA7DE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  if ((*(unsigned char *)(v0 + v2) & 1) == 0)
  {
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B21F6E8);
    swift_retain_n();
    unsigned int v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FD0();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v10 = v7;
      *(_DWORD *)unsigned int v6 = 136315138;
      uint64_t v8 = sub_251F36430();
      sub_251A00E84(v8, v9, &v10);
      sub_251F361D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v4, v5, "%s beginning hold", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v7, -1, -1);
      MEMORY[0x2533AC760](v6, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  *(unsigned char *)(v1 + v2) = 1;
}

void sub_251CA7FD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  os_log_type_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v7 = *(void *)(updated - 8);
  uint64_t v8 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v32 - v11;
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 144)) = 0;
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 128);
  swift_beginAccess();
  uint64_t v14 = *(void *)(*(void *)v13 + 16);
  if (v14)
  {
    sub_251CBCD48(*(void *)v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * (v14 - 1), (uint64_t)v12, type metadata accessor for StateSnapshot.UpdateType);
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_251F350A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B21F6E8);
    swift_retain_n();
    uint64_t v16 = sub_251F35080();
    os_log_type_t v17 = sub_251F35FD0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v34 = v5;
      uint64_t v19 = v18;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v38 = v33;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v36 = v2;
      uint64_t v20 = sub_251F36430();
      uint64_t v35 = v3;
      uint64_t v37 = sub_251A00E84(v20, v21, &v38);
      sub_251F361D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2048;
      uint64_t v22 = *(void *)(*(void *)v13 + 16);
      swift_release();
      uint64_t v37 = v22;
      uint64_t v3 = v35;
      uint64_t v2 = v36;
      sub_251F361D0();
      swift_release();
      _os_log_impl(&dword_2519F3000, v16, v17, "%s ended hold with %ld buffered elements", (uint8_t *)v19, 0x16u);
      uint64_t v23 = v33;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v23, -1, -1);
      uint64_t v24 = v19;
      os_log_type_t v5 = v34;
      MEMORY[0x2533AC760](v24, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_251CBCD48((uint64_t)v12, (uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
    sub_251F35CF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_251CBCCE8((uint64_t)v12, type metadata accessor for StateSnapshot.UpdateType);
  }
  else
  {
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_251F350A0();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B21F6E8);
    swift_retain_n();
    uint64_t v26 = sub_251F35080();
    os_log_type_t v27 = sub_251F35FD0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v38 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = sub_251F36430();
      uint64_t v37 = sub_251A00E84(v30, v31, &v38);
      sub_251F361D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v26, v27, "%s ended hold with no buffered elements", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v29, -1, -1);
      MEMORY[0x2533AC760](v28, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t DataModel.rebuildSnapshot(for:includingMatterSnapshot:coverage:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 96) = a4;
  *(void *)(v5 + 104) = v4;
  *(unsigned char *)(v5 + 200) = a3;
  *(void *)(v5 + 80) = a1;
  *(void *)(v5 + 88) = a2;
  *(void *)(v5 + 112) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(void *)(v5 + 120) = swift_task_alloc();
  *(void *)(v5 + 128) = sub_251F35C80();
  *(void *)(v5 + 136) = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  *(void *)(v5 + 144) = v7;
  *(void *)(v5 + 152) = v6;
  return MEMORY[0x270FA2498](sub_251CA866C, v7, v6);
}

uint64_t sub_251CA866C()
{
  uint64_t v1 = (void **)(*(void *)(v0 + 104) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v2 = *v1;
  *(void *)(v0 + 160) = *v1;
  if (v2)
  {
    if (*(unsigned char *)(v0 + 200) == 1)
    {
      uint64_t v3 = *(void *)(v0 + 88);
      id v4 = v2;
      *(void *)(v0 + 168) = sub_251F35C70();
      uint64_t v5 = swift_task_alloc();
      *(void *)(v0 + 176) = v5;
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v6;
      void *v6 = v0;
      v6[1] = sub_251CA8AA0;
      return MEMORY[0x270FA2158]();
    }
    else
    {
      uint64_t v17 = qword_26B21E6F8;
      id v18 = v2;
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v20 = *(void **)(v0 + 88);
      uint64_t v19 = *(void *)(v0 + 96);
      **(void **)(v0 + 120) = v20;
      swift_storeEnumTagMultiPayload();
      id v21 = v20;
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_251CA8F28;
      uint64_t v23 = *(void *)(v0 + 120);
      uint64_t v24 = *(void *)(v0 + 80);
      uint64_t v25 = *(void *)(v0 + 88);
      return sub_251F2AD24(v24, v23, (uint64_t)v18, v25, v19);
    }
  }
  else
  {
    swift_release();
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void **)(v0 + 88);
    uint64_t v8 = sub_251F350A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B21F290);
    id v9 = v7;
    uint64_t v10 = sub_251F35080();
    os_log_type_t v11 = sub_251F35FB0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void **)(v0 + 88);
    if (v12)
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      *(void *)(v0 + 64) = v13;
      id v16 = v13;
      sub_251F361D0();
      *uint64_t v15 = v13;

      _os_log_impl(&dword_2519F3000, v10, v11, "skipping rebuildSnapshot for %@ due to missing homeManager", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v15, -1, -1);
      MEMORY[0x2533AC760](v14, -1, -1);
    }
    else
    {

      uint64_t v10 = *(NSObject **)(v0 + 88);
    }
    uint64_t v26 = *(void *)(v0 + 80);

    uint64_t v27 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
}

uint64_t sub_251CA8AA0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_251CA8C00, v3, v2);
}

uint64_t sub_251CA8C00()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B21FF50;
  id v2 = objc_msgSend(*(id *)(v0 + 88), sel_uniqueIdentifier);
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  sub_251F34D80();

  swift_getKeyPath();
  *(void *)(v0 + 72) = v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_2519FE584(v5);
    uint64_t v9 = *(void *)(v0 + 80);
    if (v10)
    {
      unint64_t v11 = v8;
      uint64_t v12 = *(void *)(v7 + 56);
      uint64_t v13 = type metadata accessor for StateSnapshot(0);
      uint64_t v14 = *(void *)(v13 - 8);
      sub_251CBCD48(v12 + *(void *)(v14 + 72) * v11, v9, type metadata accessor for StateSnapshot);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    }
    else
    {
      uint64_t v17 = type metadata accessor for StateSnapshot(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v16 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  }

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_251CA8F28()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 120);
  swift_task_dealloc();
  sub_251CBCCE8(v2, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_251CA9080, v4, v3);
}

uint64_t sub_251CA9080()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = v0[10];
  swift_release();

  uint64_t v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

Swift::Void __swiftcall DataModel.homeManagerDidUpdateHomes(_:)(HMHomeManager a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_251F350A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_26B21F290);
  uint64_t v9 = a1.super.isa;
  char v10 = sub_251F35080();
  os_log_type_t v11 = sub_251F35FD0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v28 = v2;
    uint64_t v29 = ObjectType;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v31 = v14;
    *(_DWORD *)uint64_t v12 = 136315394;
    id v15 = [(objc_class *)v9 currentHome];
    if (v15)
    {
      uint64_t v16 = v15;
      id v17 = objc_msgSend(v15, sel_name);

      uint64_t v18 = sub_251F356F0();
      unint64_t v20 = v19;
    }
    else
    {
      unint64_t v20 = 0xE400000000000000;
      uint64_t v18 = 1701736302;
    }
    uint64_t v30 = sub_251A00E84(v18, v20, &v31);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    id v21 = objc_msgSend(self, sel_currentThread);
    uint64_t v30 = (uint64_t)v21;
    sub_251F361D0();
    *uint64_t v13 = v21;
    _os_log_impl(&dword_2519F3000, v10, v11, "DataModel: homeManagerDidUpdateHomes(), current is: %s, current thread is %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v12, -1, -1);

    uint64_t v2 = v28;
    uint64_t ObjectType = v29;
  }
  else
  {
  }
  uint64_t v22 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 1, 1, v22);
  sub_251F35C80();
  uint64_t v23 = v9;
  id v24 = v2;
  uint64_t v25 = sub_251F35C70();
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = MEMORY[0x263F8F500];
  void v26[2] = v25;
  v26[3] = v27;
  v26[4] = v24;
  v26[5] = v23;
  v26[6] = ObjectType;
  sub_251ACBB48((uint64_t)v7, (uint64_t)&unk_269BA1AA8, (uint64_t)v26);
  swift_release();
}

uint64_t sub_251CA94D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  sub_251F35C80();
  v5[10] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  v5[11] = v7;
  v5[12] = v6;
  return MEMORY[0x270FA2498](sub_251CA9568, v7, v6);
}

uint64_t sub_251CA9568()
{
  swift_beginAccess();
  if (qword_26B21F248)
  {
    uint64_t v1 = (void **)(v0[8] + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
    uint64_t result = swift_beginAccess();
    uint64_t v3 = *v1;
    v0[13] = *v1;
    if (v3)
    {
      uint64_t v4 = qword_26B21F398;
      id v5 = v3;
      if (v4 != -1) {
        swift_once();
      }
      uint64_t v6 = qword_26B21F5E0;
      v0[14] = qword_26B21F5E0;
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)swift_task_alloc();
      v0[15] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_251CA9760;
      return DataModel.loadUpHomeSnapshots(homeManager:coverages:)((uint64_t)v5, v6);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_26B21F500 != -1) {
      swift_once();
    }
    uint64_t v8 = (void *)swift_task_alloc();
    v0[16] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_251CA9988;
    uint64_t v9 = v0[9];
    return sub_251C0DE08(v9);
  }
  return result;
}

uint64_t sub_251CA9760()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 104);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 88);
  return MEMORY[0x270FA2498](sub_251CA98BC, v4, v3);
}

uint64_t sub_251CA98BC()
{
  if (qword_26B21F500 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251CA9988;
  uint64_t v2 = *(void *)(v0 + 72);
  return sub_251C0DE08(v2);
}

uint64_t sub_251CA9988()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x270FA2498](sub_251B71A40, v3, v2);
}

Swift::Void __swiftcall DataModel.homeManagerDidUpdatePrimaryHome(_:)(HMHomeManager a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (__objc2_class **)swift_getObjectType();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B21F2C0 != -1) {
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v8 = sub_251F350A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B21F290);
    uint64_t v9 = a1.super.isa;
    uint64_t v10 = sub_251F35080();
    int v11 = sub_251F35FD0();
    if (!os_log_type_enabled(v10, (os_log_type_t)v11))
    {

      goto LABEL_22;
    }
    int v41 = v11;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v42 = (void *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v45 = v43;
    *(_DWORD *)uint64_t v12 = 136315650;
    id v13 = [(objc_class *)v9 homes];
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    a1.super.isa = (Class)sub_251F35AC0();

    if ((unint64_t)a1.super.isa >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_251F366C0();
    }
    else
    {
      uint64_t v14 = *(void *)(((unint64_t)a1.super.isa & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = 1701736302;
    if (!v14) {
      break;
    }
    uint64_t v38 = v2;
    uint64_t v39 = v7;
    uint64_t v40 = ObjectType;
    uint64_t v2 = (void *)((unint64_t)a1.super.isa & 0xC000000000000001);
    uint64_t v7 = 4;
    uint64_t ObjectType = &off_26536F000;
    while (1)
    {
      id v16 = v2 ? (id)MEMORY[0x2533AB3A0](v7 - 4, a1.super.isa) : *((id *)a1.super.isa + v7);
      id v17 = v16;
      uint64_t v18 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v16, sel_isPrimary))
      {
        swift_bridgeObjectRelease_n();
        id v21 = objc_msgSend(v17, sel_name);

        uint64_t v20 = sub_251F356F0();
        unint64_t v19 = v22;

        goto LABEL_17;
      }

      ++v7;
      if (v18 == v14)
      {
        swift_bridgeObjectRelease_n();
        unint64_t v19 = 0xE400000000000000;
        uint64_t v20 = 1701736302;
LABEL_17:
        uint64_t v7 = v39;
        uint64_t ObjectType = v40;
        uint64_t v2 = v38;
        uint64_t v15 = 1701736302;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  swift_bridgeObjectRelease_n();
  unint64_t v19 = 0xE400000000000000;
  uint64_t v20 = 1701736302;
LABEL_18:
  uint64_t v44 = sub_251A00E84(v20, v19, &v45);
  sub_251F361D0();

  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 12) = 2080;
  id v23 = [(objc_class *)v9 currentHome];
  if (v23)
  {
    id v24 = v23;
    id v25 = objc_msgSend(v23, sel_name);

    uint64_t v26 = sub_251F356F0();
    unint64_t v28 = v27;

    uint64_t v15 = v26;
  }
  else
  {
    unint64_t v28 = 0xE400000000000000;
  }
  uint64_t v44 = sub_251A00E84(v15, v28, &v45);
  sub_251F361D0();

  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 22) = 2112;
  id v29 = objc_msgSend(self, sel_currentThread);
  uint64_t v44 = (uint64_t)v29;
  sub_251F361D0();
  uint64_t v30 = v42;
  *uint64_t v42 = v29;
  _os_log_impl(&dword_2519F3000, v10, (os_log_type_t)v41, "DataModel: homeManagerDidUpdatePrimaryHome, primary is: %s, current is: %s, current thread is %@", (uint8_t *)v12, 0x20u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
  swift_arrayDestroy();
  MEMORY[0x2533AC760](v30, -1, -1);
  uint64_t v31 = v43;
  swift_arrayDestroy();
  MEMORY[0x2533AC760](v31, -1, -1);
  MEMORY[0x2533AC760](v12, -1, -1);

LABEL_22:
  uint64_t v32 = sub_251F35CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v7, 1, 1, v32);
  sub_251F35C80();
  uint64_t v33 = v9;
  id v34 = v2;
  uint64_t v35 = sub_251F35C70();
  uint64_t v36 = (void *)swift_allocObject();
  uint64_t v37 = MEMORY[0x263F8F500];
  v36[2] = v35;
  v36[3] = v37;
  v36[4] = v34;
  v36[5] = v33;
  v36[6] = ObjectType;
  sub_251ACBB48(v7, (uint64_t)&unk_269BA1AB8, (uint64_t)v36);
  swift_release();
}

uint64_t sub_251CAA07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[7] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[8] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  sub_251F35C80();
  v5[12] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  v5[13] = v8;
  v5[14] = v7;
  return MEMORY[0x270FA2498](sub_251CAA1A4, v8, v7);
}

uint64_t sub_251CAA1A4()
{
  swift_beginAccess();
  if (qword_26B21F248)
  {
    sub_251B7E4DC();
    if (qword_26B21F500 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)swift_task_alloc();
    v0[15] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_251CAA2E8;
    uint64_t v2 = v0[6];
    return sub_251C0DE08(v2);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_251CAA2E8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x270FA2498](sub_251CAA408, v3, v2);
}

uint64_t sub_251CAA408()
{
  swift_release();
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v4, (uint64_t)qword_26B21FF20);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

Swift::Void __swiftcall DataModel.homeManagerDidUpdateCurrentHome(_:)(HMHomeManager a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_251F35C80();
  id v7 = v1;
  uint64_t v8 = sub_251F35C70();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8F500];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v7;
  v9[5] = ObjectType;
  sub_251ACBB48((uint64_t)v5, (uint64_t)&unk_269BA1AD0, (uint64_t)v9);
  swift_release();
}

uint64_t sub_251CAA6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  sub_251F35C80();
  *(void *)(v4 + 48) = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAA758, v6, v5);
}

uint64_t sub_251CAA758()
{
  swift_release();
  swift_beginAccess();
  if (qword_26B21F248) {
    sub_251B7E4DC();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall DataModel.homeManager(_:didAdd:)(HMHomeManager _, HMHome didAdd)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_251F35C80();
  uint64_t v10 = didAdd.super.isa;
  uint64_t v11 = _.super.isa;
  id v12 = v2;
  uint64_t v13 = sub_251F35C70();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v10;
  v14[5] = v11;
  v14[6] = v12;
  v14[7] = ObjectType;
  sub_251ACBB48((uint64_t)v8, (uint64_t)&unk_269BA1AE0, (uint64_t)v14);
  swift_release();
}

uint64_t sub_251CAAA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[22] = a5;
  v6[23] = a6;
  v6[21] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v6[24] = v7;
  v6[25] = *(void *)(v7 - 8);
  v6[26] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  v6[27] = v8;
  v6[28] = *(void *)(v8 - 8);
  v6[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v6[30] = swift_task_alloc();
  v6[31] = type metadata accessor for StateSnapshot.UpdateType(0);
  v6[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  sub_251F35C80();
  v6[35] = sub_251F35C70();
  uint64_t v10 = sub_251F35C00();
  v6[36] = v10;
  v6[37] = v9;
  return MEMORY[0x270FA2498](sub_251CAAC80, v10, v9);
}

uint64_t sub_251CAAC80()
{
  uint64_t v18 = v0;
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_269B9FFD8);
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[21];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[19] = sub_251A00E84(0xD000000000000016, 0x8000000251F70280, &v17);
    sub_251F361D0();
    *(_WORD *)(v8 + 12) = 2080;
    id v9 = objc_msgSend(v7, sel_name);
    uint64_t v10 = sub_251F356F0();
    unint64_t v12 = v11;

    v0[20] = sub_251A00E84(v10, v12, &v17);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v4, v5, "%s adding home: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v16, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
  }
  if (qword_26B21F500 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)swift_task_alloc();
  v0[38] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_251CAAF3C;
  uint64_t v14 = v0[22];
  return sub_251C0DE08(v14);
}

uint64_t sub_251CAAF3C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *(void *)(v1 + 288);
  return MEMORY[0x270FA2498](sub_251CAB05C, v3, v2);
}

uint64_t sub_251CAB05C()
{
  uint64_t v70 = v0;
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v4 = *(void **)(v0 + 168);
  uint64_t v3 = *(void **)(v0 + 176);
  swift_release();
  id v5 = objc_msgSend(v4, sel_uniqueIdentifier);
  sub_251F34DA0();
  uint64_t v64 = swift_task_alloc();
  sub_251F34D80();

  *uint64_t v1 = v4;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  unsigned __int8 v61 = *v7;
  (*v7)(v2, 1, 1, v6);
  uint64_t v8 = qword_26B21F398;
  unsigned __int8 v67 = v4;
  id v9 = v4;
  id v10 = v3;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)(v0 + 264);
  unint64_t v12 = *(void **)(v0 + 272);
  uint64_t v13 = *(void *)(v0 + 256);
  uint64_t v15 = *(void **)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 184);
  uint64_t v16 = *(void **)(v0 + 168);
  uint64_t v17 = qword_26B21F5E0;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v13, v15, v16, v11, v17, v12);
  v61((uint64_t)v12, 0, 1, v6);
  swift_getKeyPath();
  *(void *)(v0 + 128) = v14;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  *(void *)(v0 + 144) = v14;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  swift_beginAccess();
  sub_2519F7C18((uint64_t)v12, v64);
  swift_endAccess();
  *(void *)(v0 + 136) = v14;
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  swift_task_dealloc();
  *(void *)(v0 + 40) = &type metadata for HomeAppFeatures;
  *(void *)(v0 + 48) = sub_251A23FFC();
  *(unsigned char *)(v0 + 16) = 1;
  LOBYTE(v11) = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v11)
  {
    if (qword_26B21E388 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void *)(v0 + 240);
    uint64_t v66 = *(void *)(v0 + 184);
    uint64_t v19 = *(void **)(v0 + 168);
    uint64_t v20 = qword_26B21E178;
    uint64_t v21 = MEMORY[0x263F8EE78];
    unint64_t v68 = sub_251A19AD0(MEMORY[0x263F8EE78]);
    id v22 = v19;
    HMHome.matterAccessories.getter();
    unint64_t v24 = v23;
    unint64_t v25 = sub_251A19474(v21);
    id v26 = v22;
    uint64_t v27 = sub_251CB6A40(v25, v24, (uint64_t)v26, (uint64_t)&v68);

    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v26, sel_matterControllerID);
    uint64_t v29 = sub_251F356F0();
    uint64_t v31 = v30;

    sub_251A2CD48(v29, v31, v27, v69);
    uint64_t v63 = v69[1];
    uint64_t v65 = v69[0];
    uint64_t v32 = v69[3];
    uint64_t v62 = v69[2];
    id v33 = objc_msgSend(v26, sel_matterControllerID);
    uint64_t v34 = sub_251F356F0();
    uint64_t v36 = v35;

    unint64_t v37 = v68;
    uint64_t v38 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v18, 1, 1, v38);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v20;
    v39[5] = v37;
    v39[6] = v34;
    v39[7] = v36;
    swift_retain();
    sub_251ACBB48(v18, (uint64_t)&unk_269BA2160, (uint64_t)v39);
    swift_release();
    id v40 = objc_msgSend(v26, sel_matterControllerID);
    uint64_t v41 = sub_251F356F0();
    uint64_t v43 = v42;

    uint64_t v44 = (void *)(v66 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v69[0] = *v44;
    *uint64_t v44 = 0x8000000000000000;
    sub_251A0DF3C(v65, v63, v62, v32, v41, v43, isUniquelyReferenced_nonNull_native);
    *uint64_t v44 = v69[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (qword_26B21FD70 != -1) {
      swift_once();
    }
    uint64_t v47 = *(void *)(v0 + 224);
    uint64_t v46 = *(void *)(v0 + 232);
    uint64_t v48 = *(void *)(v0 + 216);
    char v49 = *(void **)(v0 + 168);
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
    __swift_project_value_buffer(v50, (uint64_t)qword_26B21FCF8);
    *(void *)(v0 + 104) = v67;
    *(void *)(v0 + 112) = 0;
    *(unsigned char *)(v0 + 120) = 0;
    id v51 = v49;
    sub_251F35CF0();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  char v52 = *(void **)(v0 + 256);
  uint64_t v54 = *(void *)(v0 + 200);
  uint64_t v53 = *(void *)(v0 + 208);
  uint64_t v55 = *(void *)(v0 + 192);
  char v56 = *(void **)(v0 + 168);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v57, (uint64_t)qword_26B21FF20);
  *char v52 = v67;
  swift_storeEnumTagMultiPayload();
  id v58 = v56;
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v59 = *(uint64_t (**)(void))(v0 + 8);
  return v59();
}

Swift::Void __swiftcall DataModel.homeManager(_:didRemove:)(HMHomeManager _, HMHome didRemove)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_251F35C80();
  uint64_t v8 = didRemove.super.isa;
  id v9 = v2;
  uint64_t v10 = sub_251F35C70();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8F500];
  long long v11[2] = v10;
  void v11[3] = v12;
  v11[4] = v8;
  v11[5] = v9;
  sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269BA1AF0, (uint64_t)v11);
  swift_release();
}

uint64_t sub_251CABA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v5[20] = swift_task_alloc();
  sub_251F35C80();
  v5[21] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CABAD0, v7, v6);
}

uint64_t sub_251CABAD0()
{
  uint64_t v26 = v0;
  swift_release();
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_269B9FFD8);
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void **)(v0 + 144);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v25[0] = v24;
    *(_DWORD *)uint64_t v8 = 136315394;
    *(void *)(v0 + 128) = sub_251A00E84(0xD000000000000019, 0x8000000251F70260, v25);
    sub_251F361D0();
    *(_WORD *)(v8 + 12) = 2080;
    id v9 = objc_msgSend(v7, sel_name);
    uint64_t v10 = sub_251F356F0();
    unint64_t v12 = v11;

    *(void *)(v0 + 136) = sub_251A00E84(v10, v12, v25);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v4, v5, "%s removing home: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 160);
  id v15 = objc_msgSend(*(id *)(v0 + 144), sel_uniqueIdentifier);
  sub_251F34DA0();
  uint64_t v16 = swift_task_alloc();
  sub_251F34D80();

  uint64_t v17 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
  swift_getKeyPath();
  *(void *)(v0 + 112) = v13;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  *(void *)(v0 + 120) = v13;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  swift_beginAccess();
  sub_2519F7C18(v14, v16);
  swift_endAccess();
  *(void *)(v0 + 104) = v13;
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  swift_task_dealloc();
  *(void *)(v0 + 40) = &type metadata for HomeAppFeatures;
  *(void *)(v0 + 48) = sub_251A23FFC();
  *(unsigned char *)(v0 + 16) = 1;
  LOBYTE(v15) = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v15)
  {
    id v18 = objc_msgSend(*(id *)(v0 + 144), sel_matterControllerID);
    uint64_t v19 = sub_251F356F0();
    uint64_t v21 = v20;

    swift_beginAccess();
    sub_251BB87B8(v19, v21, (uint64_t)v25);
    swift_bridgeObjectRelease();
    sub_251A4EB8C(v25[0], v25[1]);
    swift_endAccess();
  }
  swift_task_dealloc();
  id v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

Swift::Void __swiftcall DataModel.homeManagerWillStartBatchNotifications(_:)(HMHomeManager a1)
{
}

uint64_t sub_251CAC134()
{
  return MEMORY[0x270FA2498](sub_251CAC150, 0, 0);
}

uint64_t sub_251CAC150()
{
  *(void *)(v0 + 16) = sub_251F35C80();
  *(void *)(v0 + 24) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAC1E8, v2, v1);
}

uint64_t sub_251CAC1E8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CAC280, 0, 0);
}

uint64_t sub_251CAC280()
{
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAC30C, v2, v1);
}

uint64_t sub_251CAC30C()
{
  swift_release();
  *(void *)(v0 + 40) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CAC380, 0, 0);
}

uint64_t sub_251CAC380()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotBatchManager);
  *(void *)(v0 + 48) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_251CAC404, v1, 0);
}

uint64_t sub_251CAC404()
{
  sub_251CA7DE8();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall DataModel.homeManagerDidEndBatchNotifications(_:)(HMHomeManager a1)
{
}

uint64_t sub_251CAC50C()
{
  return MEMORY[0x270FA2498](sub_251CAC528, 0, 0);
}

uint64_t sub_251CAC528()
{
  *(void *)(v0 + 16) = sub_251F35C80();
  *(void *)(v0 + 24) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAC5C0, v2, v1);
}

uint64_t sub_251CAC5C0()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CAC658, 0, 0);
}

uint64_t sub_251CAC658()
{
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAC6E4, v2, v1);
}

uint64_t sub_251CAC6E4()
{
  swift_release();
  *(void *)(v0 + 40) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CAC758, 0, 0);
}

uint64_t sub_251CAC758()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotBatchManager);
  *(void *)(v0 + 48) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_251CAC7DC, v1, 0);
}

uint64_t sub_251CAC7DC()
{
  sub_251CA7FD8();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall DataModel.homeDidUpdateName(_:)(HMHome a1)
{
}

Swift::Void __swiftcall DataModel.homeDidUpdateAccessControl(forCurrentUser:)(HMHome forCurrentUser)
{
}

Swift::Void __swiftcall DataModel.home(_:didAdd:)(HMHome _, HMAccessory didAdd)
{
  uint64_t v3 = v2;
  id v54 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  unint64_t v11 = (HMHome *)&v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v53 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v52 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_251F350A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_269B9FFD8);
  id v15 = didAdd.super.isa;
  uint64_t v16 = sub_251F35080();
  os_log_type_t v17 = sub_251F35FD0();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v49 = updated;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v50 = v8;
    uint64_t v47 = (void *)v21;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v56 = v48;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v55 = sub_251A00E84(0x643A5F28656D6F68, 0xEF293A6464416469, &v56);
    sub_251F361D0();
    *(_WORD *)(v20 + 12) = 2112;
    int v46 = v18;
    uint64_t v55 = (uint64_t)v15;
    id v22 = v11;
    unint64_t v23 = v15;
    sub_251F361D0();
    uint64_t v24 = v47;
    void *v47 = v15;

    unint64_t v11 = v22;
    _os_log_impl(&dword_2519F3000, v16, (os_log_type_t)v46, "%s %@", (uint8_t *)v20, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    uint64_t v8 = v50;
    MEMORY[0x2533AC760](v24, -1, -1);
    uint64_t v25 = v48;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v25, -1, -1);
    MEMORY[0x2533AC760](v20, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v26, (uint64_t)qword_26B21FF20);
  v11->super.isa = _.super.isa;
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = _.super.isa;
  id v28 = v52;
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v28, v12);
  id v58 = &type metadata for HomeAppFeatures;
  unint64_t v59 = sub_251A23FFC();
  LOBYTE(v56) = 1;
  char v29 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v56);
  uint64_t v30 = MEMORY[0x263F8F500];
  if (v29)
  {
    id v31 = [(objc_class *)v15 hdm_matterNodeID];
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v56 = 0;
      char v57 = 1;
      sub_251F36D80();

      if ((v57 & 1) == 0)
      {
        uint64_t v33 = sub_251F35CD0();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
        sub_251F35C80();
        uint64_t v34 = v15;
        uint64_t v35 = v27;
        id v36 = v54;
        uint64_t v37 = sub_251F35C70();
        uint64_t v38 = (void *)swift_allocObject();
        v38[2] = v37;
        void v38[3] = v30;
        v38[4] = v36;
        v38[5] = v34;
        uint64_t v39 = ObjectType;
        v38[6] = v35;
        v38[7] = v39;
        sub_251ACBB48((uint64_t)v8, (uint64_t)&unk_269BA1B18, (uint64_t)v38);
        swift_release();
      }
    }
  }
  uint64_t v40 = sub_251F35CD0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v8, 1, 1, v40);
  sub_251F35C80();
  uint64_t v41 = v15;
  id v42 = v54;
  uint64_t v43 = sub_251F35C70();
  uint64_t v44 = (void *)swift_allocObject();
  v44[2] = v43;
  v44[3] = v30;
  v44[4] = v42;
  v44[5] = v41;
  sub_251ACBB48((uint64_t)v8, (uint64_t)&unk_269BA1B08, (uint64_t)v44);
  swift_release();
}

uint64_t sub_251CACFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  sub_251F35C80();
  v6[11] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAD0C4, v9, v8);
}

uint64_t sub_251CAD0C4()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();
  sub_251ECF2FC(v1);
  if (qword_26B21FD70 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  os_log_type_t v5 = *(void **)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
  __swift_project_value_buffer(v6, (uint64_t)qword_26B21FCF8);
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 0;
  id v7 = v5;
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_251CAD1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  sub_251F35C80();
  v5[7] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAD288, v7, v6);
}

uint64_t sub_251CAD288()
{
  swift_release();
  swift_beginAccess();
  if (qword_26B21F248)
  {
    uint64_t v1 = *(void **)(v0 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_251F38640;
    *(void *)(v2 + 32) = v1;
    v6._rawValue = (void *)v2;
    sub_251F35AE0();
    id v3 = v1;
    DataModel.registerForAccessories(_:)(v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

Swift::Void __swiftcall DataModel.home(_:didRemove:)(HMHome _, HMAccessory didRemove)
{
  id v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v49 = (HMHome *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v48 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269B9FFD8);
  uint64_t v14 = didRemove.super.isa;
  id v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FD0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    isa = _.super.isa;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    int v46 = v9;
    id v42 = (void *)v19;
    uint64_t v43 = swift_slowAlloc();
    v52[0] = v43;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v45 = v3;
    uint64_t v51 = sub_251A00E84(0xD000000000000012, 0x8000000251F6FD60, v52);
    sub_251F361D0();
    *(_WORD *)(v18 + 12) = 2112;
    uint64_t v51 = (uint64_t)v14;
    uint64_t v20 = ObjectType;
    uint64_t v21 = v14;
    id v3 = v45;
    sub_251F361D0();
    id v22 = v42;
    *id v42 = v14;

    uint64_t ObjectType = v20;
    _os_log_impl(&dword_2519F3000, v15, v16, "%s %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    uint64_t v9 = v46;
    MEMORY[0x2533AC760](v22, -1, -1);
    uint64_t v23 = v43;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    uint64_t v24 = v18;
    _.super.isa = isa;
    MEMORY[0x2533AC760](v24, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v25, (uint64_t)qword_26B21FF20);
  v49->super.isa = _.super.isa;
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = _.super.isa;
  uint64_t v27 = v47;
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v11);
  void v52[3] = (uint64_t)&type metadata for HomeAppFeatures;
  v52[4] = sub_251A23FFC();
  LOBYTE(v52[0]) = 1;
  char v28 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
  uint64_t v29 = MEMORY[0x263F8F500];
  if (v28)
  {
    uint64_t v30 = sub_251F35CD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v9, 1, 1, v30);
    sub_251F35C80();
    id v31 = v14;
    uint64_t v32 = v26;
    id v33 = v3;
    uint64_t v34 = sub_251F35C70();
    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = v34;
    v35[3] = v29;
    v35[4] = v33;
    v35[5] = v31;
    v35[6] = v32;
    v35[7] = ObjectType;
    sub_251ACBB48((uint64_t)v9, (uint64_t)&unk_269BA1B38, (uint64_t)v35);
    swift_release();
  }
  uint64_t v36 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v9, 1, 1, v36);
  sub_251F35C80();
  uint64_t v37 = v14;
  id v38 = v3;
  uint64_t v39 = sub_251F35C70();
  uint64_t v40 = (void *)swift_allocObject();
  _OWORD v40[2] = v39;
  v40[3] = v29;
  v40[4] = v38;
  v40[5] = v37;
  sub_251ACBB48((uint64_t)v9, (uint64_t)&unk_269BA1B28, (uint64_t)v40);
  swift_release();
}

uint64_t sub_251CAD994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  sub_251F35C80();
  v6[11] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CADA90, v9, v8);
}

uint64_t sub_251CADA90()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();
  sub_251ECF66C(v1);
  if (qword_26B21FD70 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  os_log_type_t v5 = *(void **)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
  __swift_project_value_buffer(v6, (uint64_t)qword_26B21FCF8);
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 0;
  id v7 = v5;
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_251CADBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  sub_251F35C80();
  v5[7] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CADC54, v7, v6);
}

uint64_t sub_251CADC54()
{
  swift_release();
  swift_beginAccess();
  if (qword_26B21F248)
  {
    uint64_t v1 = *(void **)(v0 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_251F38640;
    *(void *)(v2 + 32) = v1;
    v6._rawValue = (void *)v2;
    sub_251F35AE0();
    id v3 = v1;
    DataModel.unregisterForAccessories(_:)(v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

Swift::Void __swiftcall DataModel.home(_:didAdd:)(HMHome _, HMUser didAdd)
{
}

Swift::Void __swiftcall DataModel.home(_:didRemove:)(HMHome _, HMUser didRemove)
{
}

Swift::Void __swiftcall DataModel.home(_:didAdd:)(HMHome _, HMRoom didAdd)
{
}

Swift::Void __swiftcall DataModel.home(_:didRemove:)(HMHome _, HMRoom didRemove)
{
}

Swift::Void __swiftcall DataModel.home(_:didAdd:)(HMHome _, HMZone didAdd)
{
}

Swift::Void __swiftcall DataModel.home(_:didRemove:)(HMHome _, HMZone didRemove)
{
}

Swift::Void __swiftcall DataModel.home(_:didUpdateNameFor:)(HMHome _, HMZone didUpdateNameFor)
{
}

Swift::Void __swiftcall DataModel.home(_:didAdd:to:)(HMHome _, HMRoom didAdd, HMZone to)
{
}

Swift::Void __swiftcall DataModel.home(_:didRemove:from:)(HMHome _, HMRoom didRemove, HMZone from)
{
}

Swift::Void __swiftcall DataModel.home(_:didAdd:)(HMHome _, HMServiceGroup didAdd)
{
}

Swift::Void __swiftcall DataModel.home(_:didRemove:)(HMHome _, HMServiceGroup didRemove)
{
}

Swift::Void __swiftcall DataModel.home(_:didUpdateNameFor:)(HMHome _, HMServiceGroup didUpdateNameFor)
{
}

Swift::Void __swiftcall DataModel.home(_:didAdd:to:)(HMHome _, HMService didAdd, HMServiceGroup to)
{
}

Swift::Void __swiftcall DataModel.home(_:didRemove:from:)(HMHome _, HMService didRemove, HMServiceGroup from)
{
}

Swift::Void __swiftcall DataModel.home(_:didAdd:)(HMHome _, HMActionSet didAdd)
{
}

Swift::Void __swiftcall DataModel.home(_:didRemove:)(HMHome _, HMActionSet didRemove)
{
}

Swift::Void __swiftcall DataModel.home(_:didUpdateNameFor:)(HMHome _, HMActionSet didUpdateNameFor)
{
}

Swift::Void __swiftcall DataModel.home(_:didUpdateActionsFor:)(HMHome _, HMActionSet didUpdateActionsFor)
{
}

Swift::Void __swiftcall DataModel.home(_:didAdd:)(HMHome _, HMTrigger didAdd)
{
}

Swift::Void __swiftcall DataModel.home(_:didRemove:)(HMHome _, HMTrigger didRemove)
{
}

Swift::Void __swiftcall DataModel.home(_:didUpdateNameFor:)(HMHome _, HMTrigger didUpdateNameFor)
{
}

Swift::Void __swiftcall DataModel.home(_:didUpdate:)(HMHome _, HMTrigger didUpdate)
{
}

Swift::Void __swiftcall DataModel.home(_:didUnblockAccessory:)(HMHome _, HMAccessory didUnblockAccessory)
{
}

uint64_t DataModel.home(_:didAdd:)(void *a1, void *a2)
{
  return sub_251CB8FC4(a1, a2, 0x643A5F28656D6F68, 0xEF293A6464416469, "%s %@");
}

uint64_t DataModel.home(_:didRemove:)(void *a1, void *a2)
{
  return sub_251CB8FC4(a1, a2, 0xD000000000000012, 0x8000000251F6FD60, "%s %@");
}

Swift::Void __swiftcall DataModel.home(_:didUpdateAutomaticSoftwareUpdateEnabled:)(HMHome _, Swift::Bool didUpdateAutomaticSoftwareUpdateEnabled)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  os_log_type_t v5 = (HMHome *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21FF20);
  v5->super.isa = _.super.isa;
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = _.super.isa;
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

Swift::Void __swiftcall DataModel.home(_:didUpdateApplicationDataFor:)(HMHome _, HMRoom didUpdateApplicationDataFor)
{
}

Swift::Void __swiftcall DataModel.home(_:didUpdateApplicationDataFor:)(HMHome _, HMServiceGroup didUpdateApplicationDataFor)
{
}

Swift::Void __swiftcall DataModel.home(_:didUpdateApplicationDataFor:)(HMHome _, HMActionSet didUpdateApplicationDataFor)
{
}

uint64_t _s13HomeDataModel0bC0C38homeDidUpdateSupportsResidentSelectionyySo6HMHomeCF_0(void *a1)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v9, (uint64_t)qword_26B21FF20);
  *uint64_t v4 = a1;
  swift_storeEnumTagMultiPayload();
  id v10 = a1;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DataModel.userActionPredictionController(_:didUpdate:)(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = 0;
  v8[3] = 0;
  void v8[4] = a1;
  v8[5] = a2;
  id v9 = a1;
  swift_bridgeObjectRetain();
  sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269BA1B48, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_251CAFD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x270FA2498](sub_251CAFDB0, 0, 0);
}

uint64_t sub_251CAFDB0()
{
  *(void *)(v0 + 56) = sub_251F35C80();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAFE48, v2, v1);
}

uint64_t sub_251CAFE48()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CAFEE0, 0, 0);
}

uint64_t sub_251CAFEE0()
{
  *(void *)(v0 + 72) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CAFF6C, v2, v1);
}

uint64_t sub_251CAFF6C()
{
  swift_release();
  *(void *)(v0 + 80) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CAFFE0, 0, 0);
}

uint64_t sub_251CAFFE0()
{
  *(void *)(v0 + 88) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB006C, v2, v1);
}

uint64_t sub_251CB006C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  uint64_t v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v3 = *v2;
  *(void *)(v0 + 96) = *v2;
  id v4 = v3;
  return MEMORY[0x270FA2498](sub_251CB010C, 0, 0);
}

uint64_t sub_251CB010C()
{
  if (v0[12])
  {
    v0[13] = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251CB01D0, v2, v1);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_251CB01D0()
{
  swift_release();
  if (qword_26B21F500 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CB0268, 0, 0);
}

uint64_t sub_251CB0268()
{
  *(void *)(v0 + 112) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB02F4, v2, v1);
}

uint64_t sub_251CB02F4()
{
  uint64_t v1 = v0[12];
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251CB03A0;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return RecommendationsModerator.updateUserActionPredictions(manager:for:predictions:)(v1, v3, v4);
}

uint64_t sub_251CB03A0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A8E61C, 0, 0);
}

Swift::Void __swiftcall DataModel.accessoryDidUpdateReachability(_:)(HMAccessory a1)
{
  uint64_t v2 = v1;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_251F350A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_269B9FFD8);
  id v15 = a1.super.isa;
  os_log_type_t v16 = sub_251F35080();
  os_log_type_t v17 = sub_251F35FD0();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v39 = v10;
    uint64_t v20 = v19;
    uint64_t v36 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v42 = v37;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v40 = v6;
    uint64_t v41 = sub_251A00E84(0xD000000000000022, 0x8000000251F6FD80, &v42);
    id v38 = v2;
    sub_251F361D0();
    *(_WORD *)(v20 + 12) = 2112;
    os_log_t v35 = v16;
    uint64_t v41 = (uint64_t)v15;
    uint64_t v21 = v15;
    int v34 = v18;
    uint64_t v22 = v8;
    uint64_t v23 = v21;
    uint64_t v2 = v38;
    uint64_t v6 = v40;
    sub_251F361D0();
    uint64_t v24 = v36;
    *uint64_t v36 = v15;

    uint64_t v8 = v22;
    os_log_t v25 = v35;
    _os_log_impl(&dword_2519F3000, v35, (os_log_type_t)v34, "%s %@", (uint8_t *)v20, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    uint64_t v26 = v37;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v26, -1, -1);
    uint64_t v27 = v20;
    id v10 = v39;
    MEMORY[0x2533AC760](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = sub_251F35CD0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v13, 1, 1, v28);
  uint64_t v29 = (void *)swift_allocObject();
  void v29[2] = 0;
  v29[3] = 0;
  v29[4] = v15;
  v29[5] = v2;
  uint64_t v30 = v15;
  id v31 = v2;
  sub_251ACBB48((uint64_t)v13, (uint64_t)&unk_269BA1B58, (uint64_t)v29);
  swift_release();
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v32, (uint64_t)qword_26B21FF20);
  void *v6 = [(objc_class *)v30 home];
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_251CB0B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v5[4] = a4;
  v5[5] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v5[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CB0BA0, 0, 0);
}

uint64_t sub_251CB0BA0()
{
  os_log_type_t v16 = v0;
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_269B9FFD8);
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[4];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[2] = sub_251A00E84(0xD000000000000022, 0x8000000251F6FD80, &v15);
    sub_251F361D0();
    *(_WORD *)(v8 + 12) = 2112;
    v0[3] = v7;
    id v9 = v7;
    sub_251F361D0();
    *uint64_t v13 = v7;

    _os_log_impl(&dword_2519F3000, v4, v5, "%s - will fetch all characteristics for accessory: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
  }
  v0[7] = sub_251F35C80();
  v0[8] = sub_251F35C70();
  uint64_t v11 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB0E30, v11, v10);
}

uint64_t sub_251CB0E30()
{
  uint64_t v2 = (void *)v0[5];
  uint64_t v1 = v0[6];
  id v3 = (void *)v0[4];
  swift_release();
  uint64_t v4 = sub_251F35CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  id v5 = v3;
  id v6 = v2;
  uint64_t v7 = sub_251F35C70();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8F500];
  long long v8[2] = v7;
  v8[3] = v9;
  void v8[4] = v6;
  v8[5] = v5;
  sub_251ACBB48(v1, (uint64_t)&unk_269B9EE78, (uint64_t)v8);
  swift_release();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

Swift::Void __swiftcall DataModel.accessoryDidUpdateServices(_:)(HMAccessory a1)
{
}

Swift::Void __swiftcall DataModel.accessory(_:service:didUpdateValueFor:)(HMAccessory _, HMService service, HMCharacteristic didUpdateValueFor)
{
}

uint64_t sub_251CB10D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[28] = a4;
  v5[29] = a5;
  v5[30] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[31] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v5[32] = v6;
  v5[33] = *(void *)(v6 - 8);
  v5[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  v5[35] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StaticCharacteristic();
  v5[36] = v7;
  v5[37] = *(void *)(v7 - 8);
  v5[38] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  v5[39] = swift_task_alloc();
  v5[40] = type metadata accessor for StateSnapshot(0);
  v5[41] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CB12B4, 0, 0);
}

uint64_t sub_251CB12B4()
{
  sub_251F35C80();
  *(void *)(v0 + 336) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB1348, v2, v1);
}

uint64_t sub_251CB1348()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[28];
  swift_release();
  swift_getKeyPath();
  v0[25] = v2;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251CBCD48(v3, v1, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251CB1448, 0, 0);
}

uint64_t sub_251CB1448()
{
  id v1 = objc_msgSend(*(id *)(v0 + 232), sel_service);
  uint64_t v2 = *(void *)(v0 + 328);
  if (!v1) {
    goto LABEL_39;
  }
  uint64_t v3 = *(void *)(v2 + *(int *)(*(void *)(v0 + 320) + 60));
  id v4 = objc_msgSend(v1, sel_uniqueIdentifier);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = swift_task_alloc();
  sub_251F34D80();

  if (!*(void *)(v3 + 16))
  {
    uint64_t v9 = *(void *)(v0 + 312);
    goto LABEL_7;
  }
  unint64_t v8 = sub_2519FE584(v7);
  uint64_t v9 = *(void *)(v0 + 312);
  if ((v10 & 1) == 0)
  {
LABEL_7:
    uint64_t v13 = type metadata accessor for StaticService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
    goto LABEL_8;
  }
  unint64_t v11 = v8;
  id v106 = v1;
  uint64_t v12 = *(void *)(v3 + 56);
  uint64_t v13 = type metadata accessor for StaticService();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v12 + *(void *)(v14 + 72) * v11;
  id v1 = v106;
  sub_251CBCD48(v15, v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
LABEL_8:
  uint64_t v16 = *(void *)(v0 + 312);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v5);
  type metadata accessor for StaticService();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v16, 1, v13) == 1)
  {
    uint64_t v17 = *(void *)(v0 + 328);
    uint64_t v18 = *(void *)(v0 + 312);

    swift_task_dealloc();
    sub_251A1B064(v18, qword_26B21EE20);
LABEL_10:
    uint64_t v2 = v17;
    goto LABEL_39;
  }
  uint64_t v19 = *(void *)(v0 + 312);
  uint64_t v20 = *(void **)(v0 + 232);
  uint64_t v21 = *(void *)(v19 + *(int *)(v13 + 112));
  swift_bridgeObjectRetain();
  sub_251CBCCE8(v19, (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  id v22 = objc_msgSend(v20, sel_characteristicType);
  uint64_t v23 = sub_251F356F0();
  os_log_t v25 = v24;

  v26._countAndFlagsBits = v23;
  v26._object = v25;
  CharacteristicKind.init(rawValue:)(v26);
  if (v108 == 174)
  {
    uint64_t v27 = *(void *)(v0 + 328);

    swift_bridgeObjectRelease();
LABEL_38:
    uint64_t v2 = v27;
    goto LABEL_39;
  }
  if (*(void *)(v21 + 16) && (unint64_t v28 = sub_2519FE568(v108), (v29 & 1) != 0))
  {
    sub_251CBCD48(*(void *)(v21 + 56) + *(void *)(*(void *)(v0 + 296) + 72) * v28, *(void *)(v0 + 280), (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = 1;
  }
  uint64_t v32 = *(void *)(v0 + 288);
  uint64_t v31 = *(void *)(v0 + 296);
  uint64_t v33 = *(void *)(v0 + 280);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v33, v30, 1, v32);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1, v32) == 1)
  {
    sub_251A1B064(*(void *)(v0 + 280), &qword_26B21F108);
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    int v34 = *(void **)(v0 + 232);
    uint64_t v35 = sub_251F350A0();
    __swift_project_value_buffer(v35, (uint64_t)qword_26B21F290);
    id v36 = v34;
    uint64_t v37 = sub_251F35080();
    os_log_type_t v38 = sub_251F35FD0();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v40 = *(void **)(v0 + 232);
    uint64_t v107 = v1;
    if (v39)
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      *(void *)(v0 + 184) = v40;
      id v43 = v40;
      sub_251F361D0();
      *uint64_t v42 = v40;

      _os_log_impl(&dword_2519F3000, v37, v38, "update for:  %@", v41, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v42, -1, -1);
      MEMORY[0x2533AC760](v41, -1, -1);
    }
    else
    {

      uint64_t v37 = *(NSObject **)(v0 + 232);
    }

    if (qword_26B2200D8 != -1) {
      swift_once();
    }
    uint64_t v63 = *(void *)(v0 + 264);
    uint64_t v64 = *(void *)(v0 + 272);
    uint64_t v65 = *(void *)(v0 + 248);
    uint64_t v100 = *(void *)(v0 + 256);
    uint64_t v102 = *(void *)(v0 + 328);
    uint64_t v66 = *(void **)(v0 + 232);
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
    __swift_project_value_buffer(v67, (uint64_t)qword_26B21FF20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2118);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(void *)(inited + 32) = v66;
    *(void *)(inited + 40) = 1;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(unsigned char *)(inited + 64) = 3;
    id v69 = v66;
    *(void *)uint64_t v65 = sub_2519FA028(inited);
    *(void *)(v65 + 8) = 0;
    *(unsigned char *)(v65 + 16) = 1;
    swift_storeEnumTagMultiPayload();
    sub_251F35CF0();

    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v100);
    uint64_t v2 = v102;
  }
  else
  {
    uint64_t v44 = *(void *)(v0 + 304);
    uint64_t v45 = *(void *)(v0 + 288);
    int v46 = *(void **)(v0 + 232);
    sub_251B4C984(*(void *)(v0 + 280), v44);
    int v47 = *(unsigned __int8 *)(v44 + *(int *)(v45 + 32) + 24);
    id v48 = objc_msgSend(v46, sel_valueUpdatedTime);
    uint64_t v49 = sub_251F34D20();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = swift_task_alloc();
    sub_251F34CE0();

    sub_251BC96A0(&qword_269BA2120, MEMORY[0x270FA9220]);
    char v52 = sub_251F35630();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v49);
    swift_task_dealloc();
    if (v47 == 1)
    {
      if (qword_26B21F2C0 != -1) {
        swift_once();
      }
      uint64_t v53 = *(void **)(v0 + 232);
      uint64_t v54 = sub_251F350A0();
      __swift_project_value_buffer(v54, (uint64_t)qword_26B21F290);
      id v55 = v53;
      uint64_t v56 = sub_251F35080();
      os_log_type_t v57 = sub_251F35FD0();
      BOOL v58 = os_log_type_enabled(v56, v57);
      unint64_t v59 = *(void **)(v0 + 232);
      if (v58)
      {
        char v60 = (uint8_t *)swift_slowAlloc();
        unsigned __int8 v61 = (void *)swift_slowAlloc();
        *(_DWORD *)char v60 = 138412290;
        *(void *)(v0 + 216) = v59;
        id v62 = v59;
        sub_251F361D0();
        *unsigned __int8 v61 = v59;

        _os_log_impl(&dword_2519F3000, v56, v57, "skip update for: %@", v60, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v61, -1, -1);
        MEMORY[0x2533AC760](v60, -1, -1);
      }
      else
      {
      }
      uint64_t v27 = *(void *)(v0 + 328);
      uint64_t v80 = *(void *)(v0 + 304);

      sub_251CBCCE8(v80, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      goto LABEL_38;
    }
    if ((v52 & 1) == 0)
    {
      if (qword_26B21F2C0 != -1) {
        swift_once();
      }
      uint64_t v83 = *(void **)(v0 + 232);
      uint64_t v84 = sub_251F350A0();
      __swift_project_value_buffer(v84, (uint64_t)qword_26B21F290);
      id v85 = v83;
      uint64_t v86 = sub_251F35080();
      os_log_type_t v87 = sub_251F35FD0();
      BOOL v88 = os_log_type_enabled(v86, v87);
      uint64_t v89 = *(void **)(v0 + 232);
      if (v88)
      {
        uint64_t v90 = (uint8_t *)swift_slowAlloc();
        unint64_t v103 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v90 = 138412290;
        *(void *)(v0 + 192) = v89;
        id v91 = v89;
        sub_251F361D0();
        *unint64_t v103 = v89;

        _os_log_impl(&dword_2519F3000, v86, v87, "out of date update for: %@", v90, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v103, -1, -1);
        MEMORY[0x2533AC760](v90, -1, -1);
      }
      else
      {
      }
      uint64_t v17 = *(void *)(v0 + 328);
      uint64_t v99 = *(void *)(v0 + 304);

      sub_251CBCCE8(v99, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      goto LABEL_10;
    }
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v70 = *(void **)(v0 + 232);
    uint64_t v71 = sub_251F350A0();
    __swift_project_value_buffer(v71, (uint64_t)qword_26B21F290);
    id v72 = v70;
    unint64_t v73 = sub_251F35080();
    os_log_type_t v74 = sub_251F35FD0();
    BOOL v75 = os_log_type_enabled(v73, v74);
    uint64_t v76 = *(void **)(v0 + 232);
    if (v75)
    {
      BOOL v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = (void *)swift_slowAlloc();
      *(_DWORD *)BOOL v77 = 138412290;
      *(void *)(v0 + 208) = v76;
      id v79 = v76;
      sub_251F361D0();
      *uint64_t v78 = v76;

      _os_log_impl(&dword_2519F3000, v73, v74, "update for:  %@", v77, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v78, -1, -1);
      MEMORY[0x2533AC760](v77, -1, -1);
    }
    else
    {

      unint64_t v73 = *(NSObject **)(v0 + 232);
    }

    if (qword_26B2200D8 != -1) {
      swift_once();
    }
    uint64_t v104 = *(void *)(v0 + 304);
    buf = *(uint8_t **)(v0 + 328);
    uint64_t v92 = *(void *)(v0 + 264);
    uint64_t v93 = *(void *)(v0 + 272);
    uint64_t v94 = *(void *)(v0 + 248);
    uint64_t v101 = *(void *)(v0 + 256);
    uint64_t v95 = *(void **)(v0 + 232);
    uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
    __swift_project_value_buffer(v96, (uint64_t)qword_26B21FF20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2118);
    uint64_t v97 = swift_initStackObject();
    *(_OWORD *)(v97 + 16) = xmmword_251F38650;
    *(void *)(v97 + 32) = v95;
    *(void *)(v97 + 40) = 1;
    *(void *)(v97 + 48) = 0;
    *(void *)(v97 + 56) = 0;
    *(unsigned char *)(v97 + 64) = 3;
    id v98 = v95;
    *(void *)uint64_t v94 = sub_2519FA028(v97);
    *(void *)(v94 + 8) = 0;
    *(unsigned char *)(v94 + 16) = 1;
    swift_storeEnumTagMultiPayload();
    sub_251F35CF0();

    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v101);
    sub_251CBCCE8(v104, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v2 = (uint64_t)buf;
  }
LABEL_39:
  sub_251CBCCE8(v2, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v81 = *(uint64_t (**)(void))(v0 + 8);
  return v81();
}

Swift::Void __swiftcall DataModel.accessory(_:didUpdateAssociatedServiceTypeFor:)(HMAccessory _, HMService didUpdateAssociatedServiceTypeFor)
{
}

Swift::Void __swiftcall DataModel.accessory(_:didAdd:)(HMAccessory _, HMAccessoryProfile didAdd)
{
}

Swift::Void __swiftcall DataModel.accessory(_:didRemove:)(HMAccessory _, HMAccessoryProfile didRemove)
{
}

Swift::Void __swiftcall DataModel.accessory(_:didUpdateFirmwareVersion:)(HMAccessory _, Swift::String didUpdateFirmwareVersion)
{
}

uint64_t DataModel.accessorySettingsDataSource(_:didReceiveSettingsUpdatesForAccessoryWithIdentifier:settings:)()
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v5, (uint64_t)qword_26B21FF20);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t _s13HomeDataModel0bC0C11homeManager_9didUpdateySo06HMHomeE0C_So0hE19AuthorizationStatusVtF_0()
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v5, (uint64_t)qword_26B21FF20);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id DataModel.softwareUpdateController(_:accessory:didReceiveUpdate:)(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_251CBB828(a2, a3);
}

id sub_251CB32D4(uint64_t a1, void *a2)
{
  id v64 = a2;
  uint64_t v67 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v59 = &v55[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t updated = (unsigned char *)type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v5 = &v55[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21FF20);
  unint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
  uint64_t v12 = v11[12];
  uint64_t v13 = v11[16];
  uint64_t v14 = v11[20];
  uint64_t v15 = sub_251F34DA0();
  uint64_t v61 = *(void *)(v15 - 8);
  uint64_t v62 = v15;
  uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v61 + 16);
  uint64_t v66 = v61 + 16;
  v65(v5, v67);
  uint64_t v16 = v64;
  *(void *)&v5[v12] = v64;
  *(void *)&v5[v13] = 0;
  *(void *)&v5[v14] = 0;
  swift_storeEnumTagMultiPayload();
  id v17 = v16;
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  id result = objc_msgSend(v17, sel_documentationMetadata);
  if (result)
  {
    uint64_t v19 = result;
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_251F350A0();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_26B21F290);
    uint64_t updated = v55;
    uint64_t v22 = v61;
    uint64_t v23 = *(void *)(v61 + 64);
    MEMORY[0x270FA5388](v21);
    uint64_t v24 = v67;
    uint64_t v25 = v62;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v65)(&v55[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)], v67, v62);
    id v26 = v17;
    id v27 = v19;
    id v28 = v26;
    id v29 = v27;
    uint64_t v30 = sub_251F35080();
    os_log_type_t v31 = sub_251F35FD0();
    int v32 = v31;
    BOOL v33 = os_log_type_enabled(v30, v31);
    id v64 = v29;
    if (v33)
    {
      uint64_t v34 = swift_slowAlloc();
      os_log_t v57 = v30;
      uint64_t v35 = v34;
      uint64_t v58 = swift_slowAlloc();
      uint64_t v69 = v58;
      *(_DWORD *)uint64_t v35 = 136315650;
      int v56 = v32;
      id v36 = objc_msgSend(v29, sel_description);
      uint64_t v37 = sub_251F356F0();
      unint64_t v39 = v38;

      uint64_t v68 = sub_251A00E84(v37, v39, &v69);
      sub_251F361D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      id v40 = objc_msgSend(v28, sel_description);
      uint64_t v41 = sub_251F356F0();
      unint64_t v43 = v42;

      uint64_t v44 = v41;
      uint64_t v22 = v61;
      uint64_t v68 = sub_251A00E84(v44, v43, &v69);
      sub_251F361D0();

      uint64_t v25 = v62;
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2080;
      sub_251BC96A0((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA95C8]);
      uint64_t v45 = sub_251F36AB0();
      uint64_t v68 = sub_251A00E84(v45, v46, &v69);
      uint64_t v24 = v67;
      sub_251F361D0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(&v55[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)], v25);
      os_log_t v47 = v57;
      _os_log_impl(&dword_2519F3000, v57, (os_log_type_t)v56, "Start documentation fetch with metadata: %s softwareUpdate: %s for: %s", (uint8_t *)v35, 0x20u);
      uint64_t v48 = v58;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v48, -1, -1);
      MEMORY[0x2533AC760](v35, -1, -1);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(&v55[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)], v25);
    }
    uint64_t v49 = sub_251F35CD0();
    uint64_t v50 = (uint64_t)v59;
    uint64_t v51 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v59, 1, 1, v49);
    MEMORY[0x270FA5388](v51);
    ((void (*)(unsigned char *, uint64_t, uint64_t))v65)(&v55[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)], v24, v25);
    unint64_t v52 = (*(unsigned __int8 *)(v22 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v53 = (char *)swift_allocObject();
    *((void *)v53 + 2) = 0;
    *((void *)v53 + 3) = 0;
    *((void *)v53 + 4) = v64;
    *((void *)v53 + 5) = v28;
    (*(void (**)(char *, unsigned char *, uint64_t))(v22 + 32))(&v53[v52], &v55[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)], v25);
    *(void *)&v53[(v23 + v52 + 7) & 0xFFFFFFFFFFFFFFF8] = ObjectType;
    id v54 = v28;
    sub_251ACBB48(v50, (uint64_t)&unk_269BA20E8, (uint64_t)v53);
    return (id)swift_release();
  }
  return result;
}

id DataModel.softwareUpdateController(_:accessory:didFailUpdate:withError:timestamp:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return sub_251CBBB5C(a2, a3, a4);
}

uint64_t DataModel.softwareUpdateController(_:accessory:didUpdateProgress:)(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_251CBBF24(a2, a3);
}

uint64_t sub_251CB3DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v6[11] = type metadata accessor for StateSnapshot.UpdateType(0);
  v6[12] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v6[13] = v7;
  v6[14] = *(void *)(v7 - 8);
  v6[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CB3ECC, 0, 0);
}

uint64_t sub_251CB3ECC()
{
  *(void *)(v0 + 128) = sub_251F35C80();
  *(void *)(v0 + 136) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB3F64, v2, v1);
}

uint64_t sub_251CB3F64()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CB3FFC, 0, 0);
}

uint64_t sub_251CB3FFC()
{
  *(void *)(v0 + 144) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB4088, v2, v1);
}

uint64_t sub_251CB4088()
{
  swift_release();
  *(void *)(v0 + 152) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CB40FC, 0, 0);
}

uint64_t sub_251CB40FC()
{
  *(void *)(v0 + 160) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB4188, v2, v1);
}

uint64_t sub_251CB4188()
{
  uint64_t v1 = v0[19];
  swift_release();
  swift_getKeyPath();
  v0[2] = v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  v0[21] = v2;
  id v3 = v2;
  return MEMORY[0x270FA2498](sub_251CB4250, 0, 0);
}

uint64_t sub_251CB4250()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[8];
  uint64_t v3 = swift_task_alloc();
  v0[22] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[23] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA20F0);
  *uint64_t v4 = v0;
  v4[1] = sub_251CB4358;
  return MEMORY[0x270FA2360](v0 + 3, 0, 0, 0xD00000000000001FLL, 0x8000000251F6FEC0, sub_251CBCAF0, v3, v5);
}

uint64_t sub_251CB4358()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251CB4994;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_251CB4474;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CB4474()
{
  uint64_t v53 = v0;
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = qword_26B21F2C0;
    uint64_t v50 = *(void *)(v0 + 24);
    id v3 = v1;
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v5 = *(void **)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v6 = sub_251F350A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B21F290);
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = swift_task_alloc();
    uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v49(v9, v4, v7);
    id v10 = v3;
    id v11 = v5;
    id v12 = v10;
    id v13 = v11;
    uint64_t v14 = sub_251F35080();
    os_log_type_t v15 = sub_251F35FD0();
    BOOL v16 = os_log_type_enabled(v14, v15);
    id v17 = *(void **)(v0 + 72);
    uint64_t v51 = v7;
    if (v16)
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v52 = v45;
      *(_DWORD *)uint64_t v18 = 136315650;
      uint64_t v47 = v9;
      id v19 = objc_msgSend(v12, sel_description);
      os_log_type_t type = v15;
      uint64_t v20 = sub_251F356F0();
      log = v14;
      unint64_t v22 = v21;

      *(void *)(v0 + 40) = sub_251A00E84(v20, v22, &v52);
      sub_251F361D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v18 + 12) = 2080;
      id v23 = objc_msgSend(v17, sel_description);
      uint64_t v24 = sub_251F356F0();
      unint64_t v26 = v25;

      *(void *)(v0 + 48) = sub_251A00E84(v24, v26, &v52);
      sub_251F361D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v18 + 22) = 2080;
      sub_251BC96A0((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA95C8]);
      uint64_t v27 = sub_251F36AB0();
      *(void *)(v0 + 56) = sub_251A00E84(v27, v28, &v52);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v47, v7);
      _os_log_impl(&dword_2519F3000, log, type, "Received documentation: %s softwareUpdate: %s for: %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v45, -1, -1);
      MEMORY[0x2533AC760](v18, -1, -1);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
    }
    swift_task_dealloc();
    if (qword_26B2200D8 != -1) {
      swift_once();
    }
    uint64_t v29 = *(void *)(v0 + 112);
    *(void *)typea = *(void *)(v0 + 120);
    unint64_t v46 = *(void **)(v0 + 168);
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v48 = *(void *)(v0 + 104);
    uint64_t v31 = *(void *)(v0 + 80);
    int v32 = *(void **)(v0 + 72);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
    __swift_project_value_buffer(v33, (uint64_t)qword_26B21FF20);
    uint64_t v34 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
    uint64_t v35 = v34[12];
    uint64_t v36 = v34[16];
    uint64_t v37 = v34[20];
    v49(v30, v31, v51);
    *(void *)(v30 + v35) = v32;
    *(void *)(v30 + v36) = 0;
    *(void *)(v30 + v37) = v50;
    swift_storeEnumTagMultiPayload();
    id v38 = v12;
    id v39 = v32;
    sub_251F35CF0();

    (*(void (**)(os_log_type_t *, uint64_t))(v29 + 8))(*(os_log_type_t **)typea, v48);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_251CB4994()
{
  swift_task_dealloc();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 192);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v12;
    sub_251F361D0();
    void *v10 = v12;

    _os_log_impl(&dword_2519F3000, v5, v6, "Documentation fetch error: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

void sub_251CB4BBC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA20F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  if (a2)
  {
    id v9 = objc_msgSend(a2, sel_softwareUpdateController);
    if (v9)
    {
      id v10 = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
      unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v12 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      aBlock[4] = sub_251CBCB8C;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_251B93654;
      aBlock[3] = &block_descriptor_34;
      id v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v10, sel_fetchDocumentationFromMetadata_completion_, a3, v13);
      _Block_release(v13);
    }
  }
}

uint64_t sub_251CB4D94(void *a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA20F8);
    return sub_251F35C10();
  }
  else
  {
    id v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA20F8);
    return sub_251F35C20();
  }
}

uint64_t DataModel.overrideSoftwareUpdateState(for:state:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v7);
  int v32 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v35 = *a2;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_251F350A0();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B21F290);
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v31(v13, a1, v10);
  uint64_t v14 = sub_251F35080();
  int v15 = sub_251F35FD0();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    int v28 = v15;
    uint64_t v29 = v27;
    uint64_t v30 = a1;
    v27[1] = updated;
    uint64_t v16 = swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    uint64_t v37 = v27[0];
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_251BC96A0((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA95C8]);
    uint64_t v17 = sub_251F36AB0();
    uint64_t v36 = sub_251A00E84(v17, v18, &v37);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v16 + 12) = 2080;
    switch(v35)
    {
      case 2:
        unint64_t v19 = 0xE400000000000000;
        uint64_t v20 = 1701736302;
        break;
      case 3:
        unint64_t v19 = 0xE900000000000065;
        uint64_t v20 = 0x6C62616C69617661;
        break;
      case 4:
        unint64_t v19 = 0xEB00000000676E69;
        uint64_t v20 = 0x64616F6C6E776F64;
        break;
      case 5:
        uint64_t v20 = 0x64616F6C6E776F64;
        uint64_t v21 = v27[0];
        unint64_t v19 = 0xEA00000000006465;
        goto LABEL_15;
      case 6:
        uint64_t v20 = 0x6574736575716572;
        goto LABEL_13;
      case 7:
        uint64_t v20 = 0x656C6C6174736E69;
LABEL_13:
        unint64_t v19 = 0xE900000000000064;
        break;
      default:
        unint64_t v19 = 0xEA0000000000676ELL;
        uint64_t v20 = 0x696C6C6174736E69;
        break;
    }
    uint64_t v21 = v27[0];
LABEL_15:
    uint64_t v36 = sub_251A00E84(v20, v19, &v37);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v14, (os_log_type_t)v28, "on device update for: .softwareUpdateOverride(uuid: %s, state: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v16, -1, -1);

    a1 = v30;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v22 = v34;
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v23, (uint64_t)qword_26B21FF20);
  uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60) + 48);
  v31(v6, a1, v10);
  v6[v24] = v35;
  swift_storeEnumTagMultiPayload();
  unint64_t v25 = v32;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v25, v22);
}

uint64_t sub_251CB5378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v4[5] = swift_task_alloc();
  sub_251F35C80();
  v4[6] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB5444, v6, v5);
}

uint64_t sub_251CB5444()
{
  uint64_t v1 = v0[5];
  id v2 = (void *)v0[3];
  id v3 = (void *)v0[4];
  swift_release();
  uint64_t v4 = sub_251F35CD0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v1, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  v6[3] = 0;
  v6[4] = v2;
  v6[5] = v3;
  id v7 = v2;
  id v8 = v3;
  sub_251CD16D0(v1, (uint64_t)&unk_269BA2178, (uint64_t)v6);
  sub_251A1B064(v1, &qword_26B220BB0);
  v5(v1, 1, 1, v4);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  id v10 = v7;
  sub_251CD16D0(v1, (uint64_t)&unk_269BA2188, (uint64_t)v9);
  sub_251A1B064(v1, &qword_26B220BB0);
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_251CB55DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  long long v5[4] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[5] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v5[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CB569C, 0, 0);
}

uint64_t sub_251CB569C()
{
  *(void *)(v0 + 56) = sub_251F35C80();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB5734, v2, v1);
}

uint64_t sub_251CB5734()
{
  swift_release();
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CB57CC, 0, 0);
}

uint64_t sub_251CB57CC()
{
  *(void *)(v0 + 72) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB5858, v2, v1);
}

uint64_t sub_251CB5858()
{
  swift_release();
  *(void *)(v0 + 80) = qword_26B21E638;
  return MEMORY[0x270FA2498](sub_251CB58CC, 0, 0);
}

uint64_t sub_251CB58CC()
{
  uint64_t v1 = (void *)v0[2];
  *(void *)v0[5] = v1;
  swift_storeEnumTagMultiPayload();
  id v2 = v1;
  id v3 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v3;
  *id v3 = v0;
  v3[1] = sub_251CB5988;
  uint64_t v5 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  return sub_251F2AD24(v4, v5, v6, v7, 0);
}

uint64_t sub_251CB5988()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  sub_251CBCCE8(v2, type metadata accessor for StateSnapshot.UpdateType);
  sub_251CBCCE8(v1, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251CB5AE4, 0, 0);
}

uint64_t sub_251CB5AE4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CB5B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 72) = a4;
  return MEMORY[0x270FA2498](sub_251CB5B6C, 0, 0);
}

uint64_t sub_251CB5B6C()
{
  *(void *)(v0 + 80) = sub_251F35C80();
  *(void *)(v0 + 88) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB5C04, v2, v1);
}

uint64_t sub_251CB5C04()
{
  swift_release();
  if (qword_26B21E388 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CB5C9C, 0, 0);
}

uint64_t sub_251CB5C9C()
{
  *(void *)(v0 + 96) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CB5D28, v2, v1);
}

uint64_t sub_251CB5D28()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 0;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251CB5E04;
  uint64_t v4 = *(void *)(v0 + 72);
  return sub_251B5A374(v0 + 16, v0 + 48, v4);
}

uint64_t sub_251CB5E04()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 72);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251BEEE5C, 0, 0);
}

uint64_t DataModel.refresh(for:)(uint64_t a1)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F350A0();
  __swift_project_value_buffer(v5, (uint64_t)qword_26B21F290);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_251F35080();
  os_log_type_t v7 = sub_251F35FD0();
  if (os_log_type_enabled(v6, v7))
  {
    v14[1] = updated;
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)id v8 = 136315138;
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    sub_251AD2B44();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F35E50();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v14[2] = sub_251A00E84(v10, v12, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v6, v7, "on device update for: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v9, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(void *)uint64_t v4 = a1;
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_251CBC3E0((uint64_t)v4);
  return sub_251CBCCE8((uint64_t)v4, type metadata accessor for StateSnapshot.UpdateType);
}

uint64_t DataModel.residentDevice(_:didUpdate:)(void *a1)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v9, (uint64_t)qword_26B21FF20);
  *uint64_t v4 = objc_msgSend(a1, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_251CB657C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  id v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *id v8 = v3;
  v8[1] = sub_251AB3DD4;
  return sub_251CB5378(a1, a2, v7, v6);
}

uint64_t sub_251CB6638()
{
  return objectdestroyTm_3(56);
}

uint64_t sub_251CB6640(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251CA94D0(a1, v4, v5, v6, v7);
}

uint64_t sub_251CB6708()
{
  return objectdestroyTm_3(56);
}

uint64_t sub_251CB6710(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251CAA07C(a1, v4, v5, v6, v7);
}

uint64_t sub_251CB67D8()
{
  return objectdestroy_27Tm_0(48);
}

uint64_t sub_251CB67E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3DD4;
  return sub_251CAA6C0(a1, v4, v5, v6);
}

uint64_t sub_251CB68A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251CAAA84(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251CB6978()
{
  return objectdestroyTm_3(48);
}

uint64_t sub_251CB6980(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251CABA08(a1, v4, v5, v7, v6);
}

uint64_t sub_251CB6A40(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v29 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v28 = (uint64_t)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1;
  if (a2 >> 62) {
    goto LABEL_25;
  }
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_251F366C0())
  {
    v27[0] = a4;
    v27[1] = (uint64_t)v5;
    uint64_t v5 = &off_26536F000;
    for (uint64_t i = 4; ; ++i)
    {
      a1 = i - 4;
      id v13 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](i - 4, a2) : *(id *)(a2 + 8 * i);
      uint64_t v14 = v13;
      a4 = i - 3;
      if (__OFADD__(a1, 1)) {
        break;
      }
      if ((_s13HomeDataModel19MatterStateSnapshotV17allowSnapshotting9accessorySbSo11HMAccessoryC_tFZ_0(v13) & 1) == 0) {
        goto LABEL_4;
      }
      id v15 = [v14 (SEL)v5[243]];
      if (!v15) {
        goto LABEL_4;
      }
      uint64_t v16 = v15;
      uint64_t v31 = 0;
      char v32 = 1;
      sub_251F36D80();

      if ((v32 & 1) == 0 && (v30 = v31, (id v17 = sub_251D90BA4(v14)) != 0))
      {
        uint64_t v19 = (uint64_t)v17;
        unint64_t v20 = v18;
        uint64_t v33 = &type metadata for HomeKitFeatures;
        unint64_t v34 = sub_251A4DA94();
        LOBYTE(v31) = 4;
        char v21 = sub_251F34F60();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v31);
        if (v21) {
          goto LABEL_19;
        }
        if (qword_269B9C4C0 != -1) {
          swift_once();
        }
        if (byte_269BA38B2 == 1
          || (uint64_t v33 = &type metadata for HomeAppFeatures,
              unint64_t v34 = sub_251A23FFC(),
              LOBYTE(v31) = 2,
              char v22 = sub_251F34F60(),
              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v31),
              (v22 & 1) != 0))
        {
LABEL_19:
          swift_unknownObjectRetain();
          id v23 = v14;
          uint64_t v24 = v28;
          StaticMatterDevice.init(device:accessory:)(v19, v20, v23, v28);
        }
        else
        {
          swift_unknownObjectRetain();
          id v25 = v14;
          uint64_t v24 = v28;
          StaticMatterDevice.init(device:accessory:limitedSnapshotController:)(v19, v20, v25, v27[0], v28);
        }
        sub_2519F822C(v24, v30);

        swift_unknownObjectRelease();
        uint64_t v5 = &off_26536F000;
      }
      else
      {
LABEL_4:
      }
      if (a4 == v11)
      {
        swift_bridgeObjectRelease();
        return v35;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_251CB6D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_251F35CD0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_26B220BB0);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_251F35CC0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (*(void *)(v9 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_251F35C00();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    void v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_251CB6F54(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_251F350A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_269B9FFD8);
  id v13 = a1;
  uint64_t v14 = sub_251F35080();
  os_log_type_t v15 = sub_251F35FD0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = v11;
    uint64_t v18 = v17;
    uint64_t v31 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v36 = v32;
    *(_DWORD *)uint64_t v18 = 136315394;
    os_log_t v30 = v14;
    uint64_t v35 = sub_251A00E84(v34, a3, &v36);
    sub_251F361D0();
    *(_WORD *)(v18 + 12) = 2112;
    LODWORD(v34) = v16;
    uint64_t v35 = (uint64_t)v13;
    uint64_t v19 = v9;
    uint64_t v20 = v8;
    id v21 = v13;
    sub_251F361D0();
    char v22 = v31;
    *uint64_t v31 = v13;

    uint64_t v8 = v20;
    uint64_t v9 = v19;
    os_log_t v23 = v30;
    _os_log_impl(&dword_2519F3000, v30, (os_log_type_t)v34, "%s %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v22, -1, -1);
    uint64_t v24 = v32;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    uint64_t v25 = v18;
    uint64_t v11 = v33;
    MEMORY[0x2533AC760](v25, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v26, (uint64_t)qword_26B21FF20);
  *uint64_t v7 = v13;
  swift_storeEnumTagMultiPayload();
  id v27 = v13;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_251CB72FC()
{
  return objectdestroyTm_3(48);
}

uint64_t sub_251CB7304(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251CAD1F0(a1, v4, v5, v7, v6);
}

uint64_t sub_251CB73C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251CACFC8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251CB749C()
{
  return objectdestroyTm_3(48);
}

uint64_t sub_251CB74A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251CADBBC(a1, v4, v5, v7, v6);
}

uint64_t sub_251CB7568(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251CAD994(a1, v4, v5, v6, v7, v8);
}

uint64_t _s13HomeDataModel0bC0C4home_9didUpdate3forySo6HMHomeC_So6HMRoomCSo11HMAccessoryCtF_0(void *a1, void *a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v52 = (os_log_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v51 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_251F350A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_269B9FFD8);
  id v15 = a2;
  id v16 = a3;
  id v17 = v15;
  id v18 = v16;
  uint64_t v19 = sub_251F35080();
  os_log_type_t v20 = sub_251F35FD0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  id v53 = v18;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v47 = v12;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v49 = v6;
    uint64_t v25 = (void *)v24;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v55 = v45;
    *(_DWORD *)uint64_t v23 = 136315650;
    uint64_t v46 = updated;
    uint64_t v54 = sub_251A00E84(0xD000000000000016, 0x8000000251F701F0, &v55);
    uint64_t v48 = a1;
    sub_251F361D0();
    *(_WORD *)(v23 + 12) = 2112;
    os_log_t v44 = v19;
    uint64_t v54 = (uint64_t)v17;
    id v26 = v17;
    sub_251F361D0();
    *uint64_t v25 = v17;

    *(_WORD *)(v23 + 22) = 2112;
    uint64_t v54 = (uint64_t)v53;
    id v27 = v53;
    a1 = v48;
    sub_251F361D0();
    v25[1] = v53;

    os_log_t v28 = v44;
    _os_log_impl(&dword_2519F3000, v44, v20, "%s %@ %@", (uint8_t *)v23, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    uint64_t v29 = v25;
    uint64_t v6 = v49;
    MEMORY[0x2533AC760](v29, -1, -1);
    uint64_t v30 = v45;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v30, -1, -1);
    uint64_t v31 = v23;
    uint64_t v12 = v47;
    MEMORY[0x2533AC760](v31, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v32, (uint64_t)qword_26B21FF20);
  *uint64_t v52 = a1;
  swift_storeEnumTagMultiPayload();
  id v33 = a1;
  uint64_t v34 = v50;
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v12);
  uint64_t v58 = &type metadata for HomeKitFeatures;
  unint64_t v59 = sub_251A4DA94();
  LOBYTE(v55) = 4;
  char v35 = sub_251F34F60();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v55);
  if (v35) {
    goto LABEL_12;
  }
  if (qword_269B9C4C0 != -1) {
    uint64_t result = swift_once();
  }
  if (byte_269BA38B2 == 1)
  {
LABEL_12:
    uint64_t v37 = sub_251F35F60();
    if (v38)
    {
      if (qword_26B21FD70 != -1) {
        swift_once();
      }
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
      __swift_project_value_buffer(v42, (uint64_t)qword_26B21FCF8);
      uint64_t v55 = (uint64_t)a1;
      int v56 = 0;
      char v57 = 0;
      id v43 = v33;
    }
    else
    {
      uint64_t v39 = v37;
      if (qword_26B21FD70 != -1) {
        swift_once();
      }
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
      __swift_project_value_buffer(v40, (uint64_t)qword_26B21FCF8);
      uint64_t v55 = v39;
      int v56 = a1;
      char v57 = 1;
      id v41 = v33;
    }
    sub_251F35CF0();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t _s13HomeDataModel0bC0C4home_16didUpdateNameForySo6HMHomeC_So6HMRoomCtF_0(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v42 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_251F350A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_269B9FFD8);
  id v13 = a2;
  uint64_t v14 = sub_251F35080();
  os_log_type_t v15 = sub_251F35FD0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v37 = v10;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v39 = v4;
    char v35 = (void *)v19;
    uint64_t v36 = swift_slowAlloc();
    v44[0] = v36;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v38 = v5;
    uint64_t v43 = sub_251A00E84(0xD000000000000019, 0x8000000251F70170, v44);
    int v34 = v16;
    sub_251F361D0();
    *(_WORD *)(v18 + 12) = 2112;
    uint64_t v43 = (uint64_t)v13;
    os_log_type_t v20 = v7;
    id v21 = v13;
    uint64_t v5 = v38;
    sub_251F361D0();
    uint64_t v22 = v35;
    *char v35 = v13;

    uint64_t v7 = v20;
    uint64_t v23 = v14;
    _os_log_impl(&dword_2519F3000, v14, (os_log_type_t)v34, "%s room %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    uint64_t v4 = v39;
    MEMORY[0x2533AC760](v22, -1, -1);
    uint64_t v24 = v36;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    uint64_t v25 = v18;
    uint64_t v10 = v37;
    MEMORY[0x2533AC760](v25, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v26, (uint64_t)qword_26B21FF20);
  *uint64_t v42 = a1;
  swift_storeEnumTagMultiPayload();
  id v27 = a1;
  os_log_t v28 = v40;
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v28, v10);
  uint64_t v46 = &type metadata for HomeKitFeatures;
  unint64_t v47 = sub_251A4DA94();
  LOBYTE(v44[0]) = 4;
  char v29 = sub_251F34F60();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  if (v29) {
    goto LABEL_12;
  }
  if (qword_269B9C4C0 != -1) {
    uint64_t result = swift_once();
  }
  if (byte_269BA38B2 == 1)
  {
LABEL_12:
    if (qword_26B21FD70 != -1) {
      swift_once();
    }
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
    __swift_project_value_buffer(v31, (uint64_t)qword_26B21FCF8);
    v44[0] = (uint64_t)a1;
    v44[1] = 0;
    char v45 = 0;
    id v32 = v27;
    sub_251F35CF0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_251CB81A4(void *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, const char *a6)
{
  unint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v36 = a4;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v11 = (uint64_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v40 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v39 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_251F350A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_269B9FFD8);
  id v15 = a2;
  id v16 = a3;
  id v17 = v15;
  id v18 = v16;
  uint64_t v19 = sub_251F35080();
  os_log_type_t v20 = sub_251F35FD0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    int v34 = v11;
    uint64_t v22 = v21;
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v42 = v33;
    *(_DWORD *)uint64_t v22 = 136315650;
    char v35 = a1;
    uint64_t v41 = sub_251A00E84(v36, v37, &v42);
    uint64_t v36 = v12;
    sub_251F361D0();
    *(_WORD *)(v22 + 12) = 2112;
    uint64_t v41 = (uint64_t)v17;
    id v24 = v17;
    unint64_t v37 = updated;
    id v25 = v24;
    sub_251F361D0();
    *uint64_t v23 = v17;

    *(_WORD *)(v22 + 22) = 2112;
    uint64_t v41 = (uint64_t)v18;
    id v26 = v18;
    a1 = v35;
    uint64_t v12 = v36;
    sub_251F361D0();
    v23[1] = v18;

    _os_log_impl(&dword_2519F3000, v19, v20, v38, (uint8_t *)v22, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    uint64_t v27 = v33;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v27, -1, -1);
    uint64_t v28 = v22;
    uint64_t v11 = v34;
    MEMORY[0x2533AC760](v28, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v29, (uint64_t)qword_26B21FF20);
  *uint64_t v11 = a1;
  swift_storeEnumTagMultiPayload();
  id v30 = a1;
  uint64_t v31 = v39;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v31, v12);
}

uint64_t _s13HomeDataModel0bC0C4home_17didEncounterError3forySo6HMHomeC_s0G0_pSo11HMAccessoryCtF_0(void *a1, void *a2, void *a3)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v8 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269B9FFD8);
  id v14 = a2;
  id v15 = a3;
  id v16 = a2;
  id v17 = v15;
  id v18 = sub_251F35080();
  os_log_type_t v19 = sub_251F35FD0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v37 = v10;
    uint64_t v21 = v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v40 = a1;
    uint64_t v23 = (void *)v22;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v42 = v35;
    *(_DWORD *)uint64_t v21 = 136315650;
    uint64_t v39 = updated;
    uint64_t v41 = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F70130, &v42);
    uint64_t v38 = v9;
    sub_251F361D0();
    *(_WORD *)(v21 + 12) = 2112;
    id v24 = a2;
    uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v36 = v8;
    id v26 = v12;
    uint64_t v27 = v25;
    uint64_t v41 = v25;
    sub_251F361D0();
    *uint64_t v23 = v27;

    *(_WORD *)(v21 + 22) = 2112;
    uint64_t v41 = (uint64_t)v17;
    id v28 = v17;
    uint64_t v9 = v38;
    sub_251F361D0();
    v23[1] = v17;

    uint64_t v12 = v26;
    uint64_t v8 = v36;
    _os_log_impl(&dword_2519F3000, v18, v19, "%s error %@ accessory %@", (uint8_t *)v21, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    uint64_t v29 = v23;
    a1 = v40;
    MEMORY[0x2533AC760](v29, -1, -1);
    uint64_t v30 = v35;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v30, -1, -1);
    uint64_t v31 = v21;
    uint64_t v10 = v37;
    MEMORY[0x2533AC760](v31, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v32, (uint64_t)qword_26B21FF20);
  *uint64_t v8 = a1;
  swift_storeEnumTagMultiPayload();
  id v33 = a1;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t _s13HomeDataModel0bC0C4home_9didUpdateySo6HMHomeC_So0G8HubStateVtF_0(void *a1, uint64_t a2)
{
  id v24 = a1;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_269B9FFD8);
  uint64_t v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FD0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v9;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v23 = v5;
    uint64_t v25 = sub_251A00E84(0xD000000000000012, 0x8000000251F70110, &v26);
    uint64_t v5 = v23;
    sub_251F361D0();
    *(_WORD *)(v14 + 12) = 2048;
    uint64_t v25 = a2;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v11, v12, "%s homeHubState %lu", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    uint64_t v16 = v14;
    uint64_t v9 = v22;
    MEMORY[0x2533AC760](v16, -1, -1);
  }

  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v17, (uint64_t)qword_26B21FF20);
  id v18 = v24;
  *uint64_t v5 = v24;
  swift_storeEnumTagMultiPayload();
  id v19 = v18;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t _s13HomeDataModel0bC0C30homeDidUpdateSupportedFeaturesyySo6HMHomeCF_0(void *a1)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_251F350A0();
  __swift_project_value_buffer(v9, (uint64_t)qword_269B9FFD8);
  uint64_t v10 = sub_251F35080();
  os_log_type_t v11 = sub_251F35FD0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = a1;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = v5;
    uint64_t v15 = v14;
    uint64_t v23 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v22 = sub_251A00E84(0xD000000000000022, 0x8000000251F700E0, &v23);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v10, v11, "%s", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v20;
    MEMORY[0x2533AC760](v15, -1, -1);
    uint64_t v16 = v13;
    a1 = v21;
    MEMORY[0x2533AC760](v16, -1, -1);
  }

  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v17, (uint64_t)qword_26B21FF20);
  *uint64_t v4 = a1;
  swift_storeEnumTagMultiPayload();
  id v18 = a1;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_251CB8FC4(void *a1, void *a2, uint64_t a3, unint64_t a4, const char *a5)
{
  unint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v30 = a3;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v8 = (void **)((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  unint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269B9FFD8);
  uint64_t v14 = a2;
  uint64_t v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FD0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    id v28 = v12;
    uint64_t v18 = v17;
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v35 = v27;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v29 = a1;
    uint64_t v34 = sub_251A00E84(v30, v31, &v35);
    unint64_t v31 = v10;
    sub_251F361D0();
    *(_WORD *)(v18 + 12) = 2112;
    uint64_t v34 = (uint64_t)v14;
    id v19 = v14;
    unint64_t v10 = v31;
    a1 = v29;
    sub_251F361D0();
    uint64_t v20 = v26;
    *uint64_t v26 = v14;

    uint64_t v14 = v15;
    _os_log_impl(&dword_2519F3000, v15, v16, v32, (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v20, -1, -1);
    uint64_t v21 = v27;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    uint64_t v22 = v18;
    uint64_t v12 = v28;
    MEMORY[0x2533AC760](v22, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v23, (uint64_t)qword_26B21FF20);
  *uint64_t v8 = a1;
  swift_storeEnumTagMultiPayload();
  id v24 = a1;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t _s13HomeDataModel0bC0C024homeDidUpdateApplicationB0yySo6HMHomeCF_0(void *a1)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v4 = (void *)((char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_251F350A0();
  __swift_project_value_buffer(v9, (uint64_t)qword_269B9FFD8);
  id v10 = a1;
  uint64_t v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FD0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v35 = v6;
    uint64_t v15 = v14;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v15 = 136315650;
    int v32 = v13;
    uint64_t v38 = sub_251A00E84(0xD000000000000020, 0x8000000251F700B0, &v39);
    sub_251F361D0();
    uint64_t v34 = v8;
    *(_WORD *)(v15 + 12) = 2080;
    id v16 = objc_msgSend(v10, sel_name);
    uint64_t v37 = updated;
    id v17 = v16;
    uint64_t v18 = sub_251F356F0();
    uint64_t v36 = v5;
    unint64_t v20 = v19;

    uint64_t v38 = sub_251A00E84(v18, v20, &v39);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    v31[1] = v15 + 24;
    id v21 = objc_msgSend(v10, sel_applicationData);
    id v22 = objc_msgSend(v21, sel_dictionary);

    sub_251F35550();
    uint64_t v23 = sub_251F35560();
    unint64_t v25 = v24;
    uint64_t v8 = v34;
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_251A00E84(v23, v25, &v39);
    sub_251F361D0();

    uint64_t v5 = v36;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v11, (os_log_type_t)v32, "%s - new application data for home %s — %s", (uint8_t *)v15, 0x20u);
    uint64_t v26 = v33;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v26, -1, -1);
    uint64_t v27 = v15;
    uint64_t v6 = v35;
    MEMORY[0x2533AC760](v27, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v28, (uint64_t)qword_26B21FF20);
  *uint64_t v4 = v10;
  swift_storeEnumTagMultiPayload();
  id v29 = v10;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_251CB97C0(void *a1, void *a2, const char *a3)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v8 = (void *)((char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269B9FFD8);
  id v14 = a2;
  uint64_t v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FD0();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v41 = v12;
    uint64_t v19 = v18;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v47 = v40;
    *(_DWORD *)uint64_t v19 = 136315650;
    char v45 = a1;
    uint64_t v46 = sub_251A00E84(0xD000000000000024, 0x8000000251F70080, &v47);
    int v39 = v17;
    sub_251F361D0();
    uint64_t v38 = a3;
    *(_WORD *)(v19 + 12) = 2080;
    id v20 = objc_msgSend(v14, sel_name);
    uint64_t v44 = updated;
    id v21 = v20;
    uint64_t v22 = sub_251F356F0();
    uint64_t v42 = v10;
    uint64_t v43 = v9;
    uint64_t v23 = v22;
    unint64_t v25 = v24;

    uint64_t v46 = sub_251A00E84(v23, v25, &v47);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2080;
    v37[1] = v19 + 24;
    id v26 = objc_msgSend(v14, sel_applicationData);
    id v27 = objc_msgSend(v26, sel_dictionary);

    sub_251F35550();
    uint64_t v10 = v42;
    uint64_t v28 = sub_251F35560();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v31 = v28;
    a1 = v45;
    uint64_t v46 = sub_251A00E84(v31, v30, &v47);
    sub_251F361D0();

    uint64_t v9 = v43;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v15, (os_log_type_t)v39, v38, (uint8_t *)v19, 0x20u);
    uint64_t v32 = v40;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v32, -1, -1);
    uint64_t v33 = v19;
    os_log_type_t v12 = v41;
    MEMORY[0x2533AC760](v33, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v34, (uint64_t)qword_26B21FF20);
  *uint64_t v8 = a1;
  swift_storeEnumTagMultiPayload();
  id v35 = a1;
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_251CB9C40()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_251AB3DD4;
  *(_OWORD *)(v2 + 40) = v3;
  return MEMORY[0x270FA2498](sub_251CAFDB0, 0, 0);
}

id _s13HomeDataModel0bC0C22accessoryDidUpdateNameyySo11HMAccessoryCF_0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v42 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v41 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_269B9FFD8);
  id v12 = a1;
  uint64_t v13 = sub_251F35080();
  os_log_type_t v14 = sub_251F35FD0();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v39 = v9;
    uint64_t v17 = v16;
    uint64_t v37 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v44 = v38;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v40 = v2;
    uint64_t v43 = sub_251A00E84(0xD00000000000001ALL, 0x8000000251F70060, &v44);
    os_log_t v36 = v13;
    sub_251F361D0();
    *(_WORD *)(v17 + 12) = 2112;
    int v35 = v15;
    uint64_t v43 = (uint64_t)v12;
    uint64_t v18 = v5;
    id v19 = v12;
    uint64_t v2 = v40;
    sub_251F361D0();
    id v20 = v37;
    *uint64_t v37 = v12;

    uint64_t v5 = v18;
    os_log_t v21 = v36;
    _os_log_impl(&dword_2519F3000, v36, (os_log_type_t)v35, "%s %@", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v20, -1, -1);
    uint64_t v22 = v38;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v22, -1, -1);
    uint64_t v23 = v17;
    uint64_t v9 = v39;
    MEMORY[0x2533AC760](v23, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v24, (uint64_t)qword_26B21FF20);
  *uint64_t v8 = objc_msgSend(v12, sel_home);
  swift_storeEnumTagMultiPayload();
  unint64_t v25 = v41;
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v25, v9);
  uint64_t v47 = &type metadata for HomeKitFeatures;
  unint64_t v48 = sub_251A4DA94();
  LOBYTE(v44) = 4;
  char v26 = sub_251F34F60();
  id result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);
  if (v26) {
    goto LABEL_12;
  }
  if (qword_269B9C4C0 != -1) {
    id result = (id)swift_once();
  }
  if (byte_269BA38B2 == 1)
  {
LABEL_12:
    id result = objc_msgSend(v12, sel_home);
    if (result)
    {
      uint64_t v28 = (uint64_t)result;
      uint64_t v29 = sub_251F35F60();
      if (v30)
      {
        if (qword_26B21FD70 != -1) {
          swift_once();
        }
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
        __swift_project_value_buffer(v33, (uint64_t)qword_26B21FCF8);
        uint64_t v44 = v28;
        uint64_t v45 = 0;
        char v46 = 0;
      }
      else
      {
        uint64_t v31 = v29;
        if (qword_26B21FD70 != -1) {
          swift_once();
        }
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
        __swift_project_value_buffer(v32, (uint64_t)qword_26B21FCF8);
        uint64_t v44 = v31;
        uint64_t v45 = v28;
        char v46 = 1;
      }
      sub_251F35CF0();
      return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t sub_251CBA2C8()
{
  return objectdestroyTm_3(48);
}

uint64_t sub_251CBA2D0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251CB0B0C(a1, v4, v5, v7, v6);
}

uint64_t _s13HomeDataModel0bC0C9accessory_16didUpdateNameForySo11HMAccessoryC_So9HMServiceCtF_0(void *a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_269B9FFD8);
  id v12 = a1;
  id v13 = a2;
  id v14 = v12;
  id v15 = v13;
  uint64_t v16 = sub_251F35080();
  os_log_type_t v17 = sub_251F35FD0();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    os_log_t v33 = v16;
    os_log_t v21 = (void *)v20;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v39 = v34;
    *(_DWORD *)uint64_t v19 = 136315650;
    uint64_t v37 = updated;
    uint64_t v38 = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F70020, &v39);
    os_log_t v36 = v6;
    sub_251F361D0();
    *(_WORD *)(v19 + 12) = 2112;
    int v35 = v10;
    uint64_t v38 = (uint64_t)v14;
    id v22 = v14;
    int v32 = v18;
    uint64_t v23 = v8;
    uint64_t v24 = v7;
    id v25 = v22;
    sub_251F361D0();
    *os_log_t v21 = v14;

    *(_WORD *)(v19 + 22) = 2112;
    uint64_t v38 = (uint64_t)v15;
    id v26 = v15;
    uint64_t v6 = v36;
    uint64_t v7 = v24;
    uint64_t v8 = v23;
    sub_251F361D0();
    v21[1] = v15;

    uint64_t v10 = v35;
    os_log_t v27 = v33;
    _os_log_impl(&dword_2519F3000, v33, (os_log_type_t)v32, "%s %@ %@", (uint8_t *)v19, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    uint64_t v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    MEMORY[0x2533AC760](v19, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v29, (uint64_t)qword_26B21FF20);
  void *v6 = objc_msgSend(v14, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_251CBA7A8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = HMService.supportedCharacteristicKinds.getter();
  id v10 = objc_msgSend(a2, sel_characteristicType);
  uint64_t v11 = sub_251F356F0();
  id v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  CharacteristicKind.init(rawValue:)(v14);
  if (v23 == 174) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v23;
  }
  char v16 = sub_251DB3DEC(v15, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v18 = sub_251F35CD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = 0;
    v19[3] = 0;
    v19[4] = v3;
    v19[5] = a2;
    v19[6] = ObjectType;
    id v20 = v3;
    id v21 = a2;
    sub_251ACBB48((uint64_t)v8, (uint64_t)&unk_269BA2110, (uint64_t)v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_251CBA93C(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_251F350A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_269B9FFD8);
  id v13 = a1;
  Swift::String v14 = sub_251F35080();
  os_log_type_t v15 = sub_251F35FD0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    int v32 = v16;
    unint64_t v18 = a3;
    uint64_t v19 = v17;
    uint64_t v31 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v36 = v33;
    *(_DWORD *)uint64_t v19 = 136315394;
    os_log_t v30 = v14;
    uint64_t v20 = sub_251A00E84(v34, v18, &v36);
    uint64_t v34 = updated;
    uint64_t v35 = v20;
    sub_251F361D0();
    *(_WORD *)(v19 + 12) = 2112;
    uint64_t v35 = (uint64_t)v13;
    id v21 = v11;
    uint64_t v22 = v8;
    id v23 = v13;
    sub_251F361D0();
    uint64_t v24 = v31;
    *uint64_t v31 = v13;

    uint64_t v8 = v22;
    uint64_t v11 = v21;
    os_log_t v25 = v30;
    _os_log_impl(&dword_2519F3000, v30, (os_log_type_t)v32, "%s %@", (uint8_t *)v19, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    uint64_t v26 = v33;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v26, -1, -1);
    MEMORY[0x2533AC760](v19, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v27, (uint64_t)qword_26B21FF20);
  *uint64_t v7 = objc_msgSend(v13, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id _s13HomeDataModel0bC0C029accessoryDidUpdateApplicationB0yySo11HMAccessoryCF_0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v8 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v49 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v48 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_269B9FFD8);
  id v12 = a1;
  id v13 = sub_251F35080();
  os_log_type_t v14 = sub_251F35FD0();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v44 = updated;
    uint64_t v17 = v16;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v51 = v42;
    *(_DWORD *)uint64_t v17 = 136315650;
    uint64_t v47 = v2;
    uint64_t v50 = sub_251A00E84(0xD000000000000025, 0x8000000251F6FF50, &v51);
    sub_251F361D0();
    uint64_t v43 = v9;
    *(_WORD *)(v17 + 12) = 2080;
    id v18 = objc_msgSend(v12, sel_name);
    uint64_t v46 = v3;
    id v19 = v18;
    uint64_t v20 = sub_251F356F0();
    int v41 = v15;
    uint64_t v21 = v20;
    uint64_t v45 = v5;
    unint64_t v23 = v22;

    uint64_t v50 = sub_251A00E84(v21, v23, &v51);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    id v24 = objc_msgSend(v12, sel_applicationData, v17 + 24);
    id v25 = objc_msgSend(v24, sel_dictionary);

    sub_251F35550();
    uint64_t v5 = v45;
    uint64_t v26 = sub_251F35560();
    unint64_t v28 = v27;
    uint64_t v9 = v43;
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_251A00E84(v26, v28, &v51);
    sub_251F361D0();

    uint64_t v2 = v47;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v13, (os_log_type_t)v41, "%s - new application data for accessory %s — %s", (uint8_t *)v17, 0x20u);
    uint64_t v29 = v42;
    uint64_t v3 = v46;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v29, -1, -1);
    MEMORY[0x2533AC760](v17, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v30, (uint64_t)qword_26B21FF20);
  *uint64_t v8 = objc_msgSend(v12, sel_home);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = v48;
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v9);
  uint64_t v54 = &type metadata for HomeKitFeatures;
  unint64_t v55 = sub_251A4DA94();
  LOBYTE(v51) = 4;
  char v32 = sub_251F34F60();
  id result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)&v51);
  if (v32) {
    goto LABEL_12;
  }
  if (qword_269B9C4C0 != -1) {
    id result = (id)swift_once();
  }
  if (byte_269BA38B2 == 1)
  {
LABEL_12:
    id result = objc_msgSend(v12, sel_home);
    if (result)
    {
      uint64_t v34 = (uint64_t)result;
      uint64_t v35 = sub_251F35F60();
      if (v36)
      {
        if (qword_26B21FD70 != -1) {
          swift_once();
        }
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
        __swift_project_value_buffer(v39, (uint64_t)qword_26B21FCF8);
        uint64_t v51 = v34;
        uint64_t v52 = 0;
        char v53 = 0;
      }
      else
      {
        uint64_t v37 = v35;
        if (qword_26B21FD70 != -1) {
          swift_once();
        }
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
        __swift_project_value_buffer(v38, (uint64_t)qword_26B21FCF8);
        uint64_t v51 = v37;
        uint64_t v52 = v34;
        char v53 = 1;
      }
      sub_251F35CF0();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t _s13HomeDataModel0bC0C9accessory_020didUpdateApplicationB3ForySo11HMAccessoryC_So9HMServiceCtF_0(void *a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_269B9FFD8);
  id v12 = a2;
  id v13 = sub_251F35080();
  os_log_type_t v14 = sub_251F35FD0();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    char v36 = a1;
    uint64_t v17 = v16;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v41 = v34;
    *(_DWORD *)uint64_t v17 = 136315650;
    int v33 = v15;
    uint64_t v40 = sub_251A00E84(0xD000000000000029, 0x8000000251F6FF20, &v41);
    uint64_t v38 = v7;
    sub_251F361D0();
    uint64_t v35 = v10;
    *(_WORD *)(v17 + 12) = 2080;
    id v18 = objc_msgSend(v12, sel_name);
    uint64_t v39 = updated;
    id v19 = v18;
    uint64_t v20 = sub_251F356F0();
    uint64_t v37 = v8;
    unint64_t v22 = v21;

    uint64_t v40 = sub_251A00E84(v20, v22, &v41);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    id v23 = objc_msgSend(v12, sel_applicationData, v17 + 24);
    id v24 = objc_msgSend(v23, sel_dictionary);

    sub_251F35550();
    uint64_t v25 = sub_251F35560();
    unint64_t v27 = v26;
    uint64_t v10 = v35;
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_251A00E84(v25, v27, &v41);
    uint64_t v7 = v38;
    sub_251F361D0();

    uint64_t v8 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v13, (os_log_type_t)v33, "%s - new application data for service %s — %s", (uint8_t *)v17, 0x20u);
    uint64_t v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    uint64_t v29 = v17;
    a1 = v36;
    MEMORY[0x2533AC760](v29, -1, -1);
  }
  else
  {
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v30, (uint64_t)qword_26B21FF20);
  void *v6 = objc_msgSend(a1, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_251CBB828(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F350A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_269B9FFD8);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  id v11 = a2;
  id v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FD0();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v30 = v27;
    uint64_t v16 = v15;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v34 = v29;
    *(_DWORD *)uint64_t v16 = 136315394;
    int v28 = v14;
    id v17 = objc_msgSend(v11, sel_description);
    uint64_t v32 = v3;
    id v18 = v17;
    uint64_t v19 = sub_251F356F0();
    uint64_t v31 = a1;
    uint64_t v20 = v19;
    unint64_t v22 = v21;

    uint64_t v33 = sub_251A00E84(v20, v22, &v34);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    sub_251BC96A0((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA95C8]);
    uint64_t v23 = sub_251F36AB0();
    uint64_t v33 = sub_251A00E84(v23, v24, &v34);
    a1 = v31;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl(&dword_2519F3000, v12, (os_log_type_t)v28, "Received softwareUpdate: %s for: %s", (uint8_t *)v16, 0x16u);
    uint64_t v25 = v29;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v25, -1, -1);
    MEMORY[0x2533AC760](v16, -1, -1);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }

  return sub_251CB32D4(a1, v11);
}

id sub_251CBBB5C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_251F350A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_269B9FFD8);
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  id v13 = a3;
  id v14 = a2;
  id v15 = a3;
  id v16 = v14;
  id v17 = sub_251F35080();
  os_log_type_t v18 = sub_251F35FD0();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = a1;
    uint64_t v21 = v20;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v42 = v37;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v36 = v17;
    swift_getErrorValue();
    int v35 = v19;
    uint64_t v22 = sub_251F36BF0();
    uint64_t v24 = sub_251A00E84(v22, v23, &v42);
    uint64_t v39 = v4;
    uint64_t v40 = v24;
    uint64_t v34 = &v41;
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 12) = 2080;
    id v25 = objc_msgSend(v16, sel_description);
    uint64_t v26 = sub_251F356F0();
    unint64_t v28 = v27;

    uint64_t v40 = sub_251A00E84(v26, v28, &v42);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    sub_251BC96A0((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA95C8]);
    uint64_t v29 = sub_251F36AB0();
    uint64_t v40 = sub_251A00E84(v29, v30, &v42);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v17 = v36;
    _os_log_impl(&dword_2519F3000, v36, (os_log_type_t)v35, "Received error:%s softwareUpdate: %s for: %s", (uint8_t *)v21, 0x20u);
    uint64_t v31 = v37;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    uint64_t v32 = v21;
    a1 = v38;
    MEMORY[0x2533AC760](v32, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  return sub_251CB32D4(a1, v16);
}

uint64_t sub_251CBBF24(uint64_t a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C358 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_251F350A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_269B9FFD8);
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v43 = v10 + 16;
  v42(v12, a1, v9);
  id v13 = a2;
  id v14 = sub_251F35080();
  os_log_type_t v15 = sub_251F35FD0();
  int v16 = v15;
  BOOL v17 = os_log_type_enabled(v14, v15);
  uint64_t v45 = a1;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    os_log_t v39 = v14;
    uint64_t v19 = v18;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v50 = v40;
    *(_DWORD *)uint64_t v19 = 136315394;
    int v38 = v16;
    id v20 = objc_msgSend(v13, sel_description);
    uint64_t v21 = sub_251F356F0();
    uint64_t v41 = v37;
    uint64_t v22 = v21;
    unint64_t v24 = v23;

    uint64_t v49 = sub_251A00E84(v22, v24, &v50);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    sub_251BC96A0((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA95C8]);
    uint64_t v25 = sub_251F36AB0();
    uint64_t v49 = sub_251A00E84(v25, v26, &v50);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    os_log_t v27 = v39;
    _os_log_impl(&dword_2519F3000, v39, (os_log_type_t)v38, "Received softwareUpdateProgress: %s for: %s", (uint8_t *)v19, 0x16u);
    uint64_t v28 = v40;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    MEMORY[0x2533AC760](v19, -1, -1);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v29, (uint64_t)qword_26B21FF20);
  unint64_t v30 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
  uint64_t v31 = v30[12];
  uint64_t v32 = v30[16];
  uint64_t v33 = v30[20];
  v42(v5, v45, v9);
  *(void *)&v5[v31] = 0;
  *(void *)&v5[v32] = v13;
  *(void *)&v5[v33] = 0;
  swift_storeEnumTagMultiPayload();
  id v34 = v13;
  int v35 = v44;
  sub_251F35CF0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v46 + 8))(v35, v47);
}

uint64_t sub_251CBC3E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v7 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - v10;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_251F350A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_26B21F290);
  sub_251CBCD48(a1, (uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
  id v13 = sub_251F35080();
  os_log_type_t v14 = sub_251F35FD0();
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    unint64_t v24 = v9;
    uint64_t v17 = v16;
    uint64_t v28 = v16;
    uint64_t v25 = v5;
    uint64_t v26 = a1;
    *(_DWORD *)os_log_type_t v15 = 136315138;
    unint64_t v18 = StateSnapshot.UpdateType.description.getter();
    uint64_t v27 = sub_251A00E84(v18, v19, &v28);
    uint64_t v5 = v25;
    a1 = v26;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CBCCE8((uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_2519F3000, v13, v14, "on device update for: %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v17;
    uint64_t v9 = v24;
    MEMORY[0x2533AC760](v20, -1, -1);
    MEMORY[0x2533AC760](v15, -1, -1);
  }
  else
  {
    sub_251CBCCE8((uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
  }

  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v21, (uint64_t)qword_26B21FF20);
  sub_251CBCD48(a1, (uint64_t)v9, type metadata accessor for StateSnapshot.UpdateType);
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t objectdestroy_38Tm()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251CBC7A4()
{
  return objectdestroyTm_3(48);
}

uint64_t objectdestroy_14Tm()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_251CBC800()
{
  return objectdestroy_27Tm_0(48);
}

uint64_t sub_251CBC808(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3A34;
  return sub_251CAA6C0(a1, v4, v5, v6);
}

uint64_t sub_251CBC8C8()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_251CBC9B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_251AB3DD4;
  return sub_251CB3DD4(a1, v5, v6, v7, v8, v9);
}

void sub_251CBCAF0(uint64_t a1)
{
  sub_251CB4BBC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251CBCAF8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA20F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251CBCB8C(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA20F8);
  return sub_251CB4D94(a1, a2);
}

uint64_t sub_251CBCC10()
{
  return objectdestroyTm_3(56);
}

uint64_t sub_251CBCC18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251CB10D4(a1, v4, v5, v6, v7);
}

uint64_t sub_251CBCCE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251CBCD48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251CBCDB0()
{
  return objectdestroyTm_3(48);
}

uint64_t sub_251CBCDB8()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251CBCDF0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  return MEMORY[0x270FA2498](sub_251CAC528, 0, 0);
}

uint64_t sub_251CBCE94()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  return MEMORY[0x270FA2498](sub_251CAC150, 0, 0);
}

uint64_t sub_251CBCF38()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251CBCF70()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_251CBCFC0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_251AB3DD4;
  return sub_251B5B4B0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_251CBD094()
{
  return objectdestroyTm_3(48);
}

uint64_t sub_251CBD09C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251CB55DC(a1, v4, v5, v7, v6);
}

uint64_t sub_251CBD15C()
{
  return objectdestroy_27Tm_0(40);
}

uint64_t sub_251CBD164()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_251AB3DD4;
  v3[9] = v2;
  return MEMORY[0x270FA2498](sub_251CB5B6C, 0, 0);
}

uint64_t sub_251CBD220(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    sub_251AD2B44();
    sub_251F35E90();
    uint64_t v2 = v37;
    uint64_t v36 = v38;
    uint64_t v4 = v39;
    uint64_t v5 = v40;
    unint64_t v6 = v41;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v36 = a2 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    uint64_t v5 = 0;
  }
  int64_t v35 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v2 < 0)
    {
      if (!sub_251F36340()) {
        goto LABEL_44;
      }
      sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v15 = v42;
      swift_unknownObjectRelease();
      uint64_t v14 = v5;
      uint64_t v12 = v6;
      if (!v42) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v12 = (v6 - 1) & v6;
        unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
        uint64_t v14 = v5;
      }
      else
      {
        int64_t v16 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_47;
        }
        if (v16 >= v35) {
          goto LABEL_44;
        }
        unint64_t v17 = *(void *)(v36 + 8 * v16);
        uint64_t v14 = v5 + 1;
        if (!v17)
        {
          uint64_t v14 = v5 + 2;
          if (v5 + 2 >= v35) {
            goto LABEL_44;
          }
          unint64_t v17 = *(void *)(v36 + 8 * v14);
          if (!v17)
          {
            uint64_t v14 = v5 + 3;
            if (v5 + 3 >= v35) {
              goto LABEL_44;
            }
            unint64_t v17 = *(void *)(v36 + 8 * v14);
            if (!v17)
            {
              uint64_t v14 = v5 + 4;
              if (v5 + 4 >= v35) {
                goto LABEL_44;
              }
              unint64_t v17 = *(void *)(v36 + 8 * v14);
              if (!v17)
              {
                uint64_t v14 = v5 + 5;
                if (v5 + 5 >= v35) {
                  goto LABEL_44;
                }
                unint64_t v17 = *(void *)(v36 + 8 * v14);
                if (!v17)
                {
                  uint64_t v18 = v5 + 6;
                  while (v35 != v18)
                  {
                    unint64_t v17 = *(void *)(v36 + 8 * v18++);
                    if (v17)
                    {
                      uint64_t v14 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_251A1E630();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        uint64_t v12 = (v17 - 1) & v17;
        unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
      }
      id v15 = *(id *)(*(void *)(v2 + 48) + 8 * v13);
      if (!v15) {
        goto LABEL_44;
      }
    }
    id v19 = v15;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = a1;
    unint64_t v22 = sub_2519FE68C((uint64_t)v19);
    uint64_t v23 = a1[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (a1[3] >= v25)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v21) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_251A127FC();
        if (v26) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_251A023CC(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_2519FE68C((uint64_t)v19);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_48;
      }
      unint64_t v22 = v27;
      if (v26)
      {
LABEL_8:
        uint64_t v11 = a1[7] + 32 * v22;
        sub_251A1A5A4(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(unsigned char *)(v11 + 24));
        *(void *)uint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        *(unsigned char *)(v11 + 24) = 0;
        *(void *)(v11 + 16) = 0;
        goto LABEL_9;
      }
    }
    a1[(v22 >> 6) + 8] |= 1 << v22;
    *(void *)(a1[6] + 8 * v22) = v19;
    uint64_t v29 = a1[7] + 32 * v22;
    *(void *)uint64_t v29 = 0;
    *(void *)(v29 + 8) = 0;
    *(unsigned char *)(v29 + 24) = 0;
    *(void *)(v29 + 16) = 0;
    uint64_t v30 = a1[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_46;
    }
    a1[2] = v32;
    id v33 = v19;
LABEL_9:

    swift_bridgeObjectRelease();
    uint64_t v5 = v14;
    unint64_t v6 = v12;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251CBD638(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    sub_251AD2B44();
    sub_251F35E90();
    uint64_t v2 = v37;
    uint64_t v36 = v38;
    uint64_t v4 = v39;
    uint64_t v5 = v40;
    unint64_t v6 = v41;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v36 = a2 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    uint64_t v5 = 0;
  }
  int64_t v35 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v2 < 0)
    {
      if (!sub_251F36340()) {
        goto LABEL_44;
      }
      sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v15 = v42;
      swift_unknownObjectRelease();
      uint64_t v14 = v5;
      uint64_t v12 = v6;
      if (!v42) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v12 = (v6 - 1) & v6;
        unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
        uint64_t v14 = v5;
      }
      else
      {
        int64_t v16 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_47;
        }
        if (v16 >= v35) {
          goto LABEL_44;
        }
        unint64_t v17 = *(void *)(v36 + 8 * v16);
        uint64_t v14 = v5 + 1;
        if (!v17)
        {
          uint64_t v14 = v5 + 2;
          if (v5 + 2 >= v35) {
            goto LABEL_44;
          }
          unint64_t v17 = *(void *)(v36 + 8 * v14);
          if (!v17)
          {
            uint64_t v14 = v5 + 3;
            if (v5 + 3 >= v35) {
              goto LABEL_44;
            }
            unint64_t v17 = *(void *)(v36 + 8 * v14);
            if (!v17)
            {
              uint64_t v14 = v5 + 4;
              if (v5 + 4 >= v35) {
                goto LABEL_44;
              }
              unint64_t v17 = *(void *)(v36 + 8 * v14);
              if (!v17)
              {
                uint64_t v14 = v5 + 5;
                if (v5 + 5 >= v35) {
                  goto LABEL_44;
                }
                unint64_t v17 = *(void *)(v36 + 8 * v14);
                if (!v17)
                {
                  uint64_t v18 = v5 + 6;
                  while (v35 != v18)
                  {
                    unint64_t v17 = *(void *)(v36 + 8 * v18++);
                    if (v17)
                    {
                      uint64_t v14 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_251A1E630();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        uint64_t v12 = (v17 - 1) & v17;
        unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
      }
      id v15 = *(id *)(*(void *)(v2 + 48) + 8 * v13);
      if (!v15) {
        goto LABEL_44;
      }
    }
    id v19 = v15;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = a1;
    unint64_t v22 = sub_2519FE68C((uint64_t)v19);
    uint64_t v23 = a1[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (a1[3] >= v25)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v21) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_251A127FC();
        if (v26) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_251A023CC(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_2519FE68C((uint64_t)v19);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_48;
      }
      unint64_t v22 = v27;
      if (v26)
      {
LABEL_8:
        uint64_t v11 = a1[7] + 32 * v22;
        sub_251A1A5A4(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(unsigned char *)(v11 + 24));
        *(void *)(v11 + 8) = 0;
        *(void *)(v11 + 16) = 0;
        *(void *)uint64_t v11 = 1;
        *(unsigned char *)(v11 + 24) = 3;
        goto LABEL_9;
      }
    }
    a1[(v22 >> 6) + 8] |= 1 << v22;
    *(void *)(a1[6] + 8 * v22) = v19;
    uint64_t v29 = a1[7] + 32 * v22;
    *(void *)(v29 + 8) = 0;
    *(void *)(v29 + 16) = 0;
    *(void *)uint64_t v29 = 1;
    *(unsigned char *)(v29 + 24) = 3;
    uint64_t v30 = a1[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_46;
    }
    a1[2] = v32;
    id v33 = v19;
LABEL_9:

    swift_bridgeObjectRelease();
    uint64_t v5 = v14;
    unint64_t v6 = v12;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251CBDA5C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_251A1A568(0, &qword_269B9DA90);
  uint64_t v2 = sub_251F35AC0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t DataModel.fetchAllCharacteristicsValues(for:)(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_251F35C80();
  v3[8] = sub_251F35C70();
  uint64_t v5 = sub_251F35C00();
  v3[9] = v5;
  v3[10] = v4;
  return MEMORY[0x270FA2498](sub_251CBDB7C, v5, v4);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_251F35C80();
  v3[8] = sub_251F35C70();
  uint64_t v5 = sub_251F35C00();
  v3[9] = v5;
  v3[10] = v4;
  return MEMORY[0x270FA2498](sub_251CBE6C8, v5, v4);
}

uint64_t sub_251CBDB7C()
{
  uint64_t v1 = (void **)(v0[7] + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[11] = *v1;
  if (v2)
  {
    uint64_t v71 = v0;
    uint64_t v3 = (void *)v0[6];
    id v70 = v2;
    id v4 = objc_msgSend(v3, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v5 = sub_251F35AC0();

    unint64_t v6 = v5;
    unint64_t v85 = MEMORY[0x263F8EE78];
    unint64_t v72 = v5;
    if (v5 >> 62) {
      goto LABEL_75;
    }
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (uint64_t i = v7; i; uint64_t i = sub_251F366C0())
    {
      uint64_t v9 = 0;
      unint64_t v10 = v6 & 0xC000000000000001;
      unint64_t v67 = v6 + 32;
      unint64_t v68 = v6 & 0xC000000000000001;
      uint64_t v69 = i;
      while (1)
      {
        if (v10)
        {
          unint64_t v11 = v6;
          uint64_t v12 = v9;
          id v13 = (id)MEMORY[0x2533AB3A0](v9, v11);
          BOOL v14 = __OFADD__(v12, 1);
          uint64_t v15 = v12 + 1;
          if (v14) {
            goto LABEL_74;
          }
        }
        else
        {
          uint64_t v16 = v9;
          id v13 = *(id *)(v67 + 8 * v9);
          BOOL v14 = __OFADD__(v16, 1);
          uint64_t v15 = v16 + 1;
          if (v14) {
            goto LABEL_74;
          }
        }
        unint64_t v73 = v13;
        uint64_t v74 = v15;
        id v17 = objc_msgSend(v13, sel_services);
        sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
        unint64_t v18 = sub_251F35AC0();

        unint64_t v86 = MEMORY[0x263F8EE78];
        if (v18 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_251F366C0();
          if (!v19)
          {
LABEL_63:
            swift_bridgeObjectRelease_n();
            unint64_t v54 = MEMORY[0x263F8EE78];
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v19) {
            goto LABEL_63;
          }
        }
        uint64_t v20 = 0;
        unint64_t v77 = v18;
        unint64_t v78 = v18 & 0xC000000000000001;
        unint64_t v75 = v18 + 32;
        uint64_t v76 = v19;
LABEL_14:
        id v21 = v78 ? (id)MEMORY[0x2533AB3A0](v20, v18) : *(id *)(v75 + 8 * v20);
        id v82 = v21;
        BOOL v14 = __OFADD__(v20, 1);
        uint64_t v22 = v20 + 1;
        if (v14) {
          break;
        }
        uint64_t v79 = v22;
        id v23 = objc_msgSend(v21, sel_serviceType);
        uint64_t v24 = sub_251F356F0();
        char v26 = v25;

        v27._countAndFlagsBits = v24;
        v27._object = v26;
        ServiceKind.init(rawValue:)(v27);
        uint64_t v28 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
        unint64_t v87 = MEMORY[0x263F8EE78];
        uint64_t v80 = v28 + 56;
        uint64_t v29 = -1 << *(unsigned char *)(v28 + 32);
        if (-v29 < 64) {
          uint64_t v30 = ~(-1 << -(char)v29);
        }
        else {
          uint64_t v30 = -1;
        }
        uint64_t v31 = v30 & *(void *)(v28 + 56);
        int64_t v81 = (unint64_t)(63 - v29) >> 6;
        int64_t v32 = 0;
        swift_bridgeObjectRetain();
LABEL_23:
        while (v31)
        {
          v31 &= v31 - 1;
LABEL_43:
          id v36 = objc_msgSend(v82, sel_characteristics);
          sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
          unint64_t v37 = sub_251F35AC0();

          if (v37 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v38 = sub_251F366C0();
            if (v38) {
              goto LABEL_45;
            }
LABEL_22:
            swift_bridgeObjectRelease_n();
          }
          else
          {
            uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v38) {
              goto LABEL_22;
            }
LABEL_45:
            uint64_t v83 = v31;
            int64_t v84 = v32;
            uint64_t v39 = 0;
            while (1)
            {
              if ((v37 & 0xC000000000000001) != 0) {
                id v40 = (id)MEMORY[0x2533AB3A0](v39, v37);
              }
              else {
                id v40 = *(id *)(v37 + 8 * v39 + 32);
              }
              unint64_t v41 = v40;
              uint64_t v42 = v39 + 1;
              if (__OFADD__(v39, 1))
              {
                __break(1u);
                goto LABEL_71;
              }
              id v43 = objc_msgSend(v40, sel_characteristicType);
              uint64_t v44 = sub_251F356F0();
              uint64_t v46 = v45;

              v47._countAndFlagsBits = v44;
              v47._object = v46;
              CharacteristicKind.init(rawValue:)(v47);
              unint64_t v48 = CharacteristicKind.rawValue.getter();
              uint64_t v50 = v49;
              if (v48 == CharacteristicKind.rawValue.getter() && v50 == v51) {
                break;
              }
              char v52 = sub_251F36B10();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v52) {
                goto LABEL_56;
              }

              ++v39;
              if (v42 == v38)
              {
                swift_bridgeObjectRelease_n();
                uint64_t v31 = v83;
                int64_t v32 = v84;
                goto LABEL_23;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_56:
            uint64_t v53 = swift_bridgeObjectRelease_n();
            MEMORY[0x2533AA9D0](v53);
            uint64_t v31 = v83;
            if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_251F35B10();
            }
            sub_251F35B70();
            sub_251F35AE0();
            int64_t v32 = v84;
          }
        }
        int64_t v33 = v32 + 1;
        if (__OFADD__(v32, 1))
        {
LABEL_71:
          __break(1u);
          break;
        }
        if (v33 < v81)
        {
          uint64_t v34 = *(void *)(v80 + 8 * v33);
          ++v32;
          if (!v34)
          {
            int64_t v32 = v33 + 1;
            if (v33 + 1 >= v81) {
              goto LABEL_13;
            }
            uint64_t v34 = *(void *)(v80 + 8 * v32);
            if (!v34)
            {
              int64_t v32 = v33 + 2;
              if (v33 + 2 >= v81) {
                goto LABEL_13;
              }
              uint64_t v34 = *(void *)(v80 + 8 * v32);
              if (!v34)
              {
                int64_t v32 = v33 + 3;
                if (v33 + 3 >= v81) {
                  goto LABEL_13;
                }
                uint64_t v34 = *(void *)(v80 + 8 * v32);
                if (!v34)
                {
                  int64_t v32 = v33 + 4;
                  if (v33 + 4 >= v81) {
                    goto LABEL_13;
                  }
                  uint64_t v34 = *(void *)(v80 + 8 * v32);
                  if (!v34)
                  {
                    int64_t v35 = v33 + 5;
                    if (v35 >= v81) {
                      goto LABEL_13;
                    }
                    uint64_t v34 = *(void *)(v80 + 8 * v35);
                    if (!v34)
                    {
                      while (1)
                      {
                        int64_t v32 = v35 + 1;
                        if (__OFADD__(v35, 1)) {
                          goto LABEL_73;
                        }
                        if (v32 >= v81) {
                          goto LABEL_13;
                        }
                        uint64_t v34 = *(void *)(v80 + 8 * v32);
                        ++v35;
                        if (v34) {
                          goto LABEL_42;
                        }
                      }
                    }
                    int64_t v32 = v35;
                  }
                }
              }
            }
          }
LABEL_42:
          uint64_t v31 = (v34 - 1) & v34;
          goto LABEL_43;
        }
LABEL_13:
        swift_release();
        swift_bridgeObjectRelease();

        sub_251ED584C(v87);
        unint64_t v18 = v77;
        uint64_t v20 = v79;
        if (v79 != v76) {
          goto LABEL_14;
        }
        swift_bridgeObjectRelease_n();
        unint64_t v54 = v86;
LABEL_64:

        sub_251ED584C(v54);
        unint64_t v10 = v68;
        uint64_t v9 = v74;
        unint64_t v6 = v72;
        if (v74 == v69)
        {
          swift_bridgeObjectRelease_n();
          unint64_t v55 = v85;
          goto LABEL_77;
        }
      }
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      swift_bridgeObjectRetain();
      unint64_t v6 = v72;
    }
    swift_bridgeObjectRelease_n();
    unint64_t v55 = MEMORY[0x263F8EE78];
LABEL_77:
    if (v55 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (v64 > 0) {
        goto LABEL_79;
      }
    }
    else if (*(uint64_t *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
    {
LABEL_79:
      uint64_t v60 = sub_251EE1268(v55);
      v71[12] = v60;
      swift_bridgeObjectRelease();
      uint64_t v61 = (void *)swift_task_alloc();
      v71[13] = v61;
      *uint64_t v61 = v71;
      v61[1] = sub_251CBE430;
      uint64_t v62 = v71[5];
      uint64_t v63 = v71[6];
      return DataModel._fetchCharacteristicValue(home:homeManager:characteristics:timeout:)(v62, v63, (uint64_t)v70, v60, 0, 1);
    }
    uint64_t v0 = v71;
    uint64_t v65 = v71[5];
    swift_bridgeObjectRelease();

    swift_release();
    uint64_t v66 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 1, 1, v66);
  }
  else
  {
    uint64_t v56 = v0[5];
    swift_release();
    uint64_t v57 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
  }
  uint64_t v58 = (uint64_t (*)(void))v0[1];
  return v58();
}

uint64_t sub_251CBE430()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    unint64_t v5 = sub_251CBE5B8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    unint64_t v5 = sub_251CBE54C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251CBE54C()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251CBE5B8()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251CBE6C8()
{
  uint64_t v1 = (void **)(v0[7] + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[11] = *v1;
  if (!v2)
  {
    uint64_t v40 = v0[5];
    swift_release();
    uint64_t v41 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
    goto LABEL_70;
  }
  unint64_t v54 = v0;
  uint64_t v3 = (void *)v0[6];
  id v53 = v2;
  id v4 = objc_msgSend(v3, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v5 = sub_251F35AC0();

  unint64_t v65 = MEMORY[0x263F8EE78];
  if (v5 >> 62) {
    goto LABEL_59;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_60:
    swift_bridgeObjectRelease_n();
    unint64_t v42 = MEMORY[0x263F8EE78];
    goto LABEL_61;
  }
  while (1)
  {
    uint64_t v7 = 0;
    unint64_t v57 = v5;
    unint64_t v58 = v5 & 0xC000000000000001;
    unint64_t v55 = v5 + 32;
    uint64_t v56 = v6;
LABEL_6:
    id v8 = v58 ? (id)MEMORY[0x2533AB3A0](v7, v5) : *(id *)(v55 + 8 * v7);
    id v62 = v8;
    BOOL v9 = __OFADD__(v7, 1);
    uint64_t v10 = v7 + 1;
    if (!v9) {
      break;
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_251F366C0();
    if (!v6) {
      goto LABEL_60;
    }
  }
  uint64_t v59 = v10;
  id v11 = objc_msgSend(v8, sel_serviceType);
  unint64_t v5 = sub_251F356F0();
  id v13 = v12;

  v14._countAndFlagsBits = v5;
  v14._object = v13;
  ServiceKind.init(rawValue:)(v14);
  uint64_t v15 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
  unint64_t v66 = MEMORY[0x263F8EE78];
  uint64_t v60 = v15 + 56;
  uint64_t v16 = -1 << *(unsigned char *)(v15 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  uint64_t v18 = v17 & *(void *)(v15 + 56);
  int64_t v61 = (unint64_t)(63 - v16) >> 6;
  int64_t v19 = 0;
  swift_bridgeObjectRetain();
LABEL_15:
  while (v18)
  {
    v18 &= v18 - 1;
LABEL_35:
    id v23 = objc_msgSend(v62, sel_characteristics);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    unint64_t v24 = sub_251F35AC0();

    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_251F366C0();
      if (v25) {
        goto LABEL_37;
      }
LABEL_14:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v25) {
        goto LABEL_14;
      }
LABEL_37:
      uint64_t v63 = v18;
      int64_t v64 = v19;
      uint64_t v26 = 0;
      while (1)
      {
        if ((v24 & 0xC000000000000001) != 0) {
          id v27 = (id)MEMORY[0x2533AB3A0](v26, v24);
        }
        else {
          id v27 = *(id *)(v24 + 8 * v26 + 32);
        }
        uint64_t v28 = v27;
        uint64_t v29 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_55;
        }
        id v30 = objc_msgSend(v27, sel_characteristicType);
        uint64_t v31 = sub_251F356F0();
        int64_t v33 = v32;

        v34._countAndFlagsBits = v31;
        v34._object = v33;
        CharacteristicKind.init(rawValue:)(v34);
        unint64_t v35 = CharacteristicKind.rawValue.getter();
        unint64_t v5 = v36;
        if (v35 == CharacteristicKind.rawValue.getter() && v5 == v37) {
          break;
        }
        char v38 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v38) {
          goto LABEL_48;
        }

        ++v26;
        if (v29 == v25)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v18 = v63;
          int64_t v19 = v64;
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_48:
      uint64_t v39 = swift_bridgeObjectRelease_n();
      MEMORY[0x2533AA9D0](v39);
      unint64_t v5 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v63;
      int64_t v19 = v64;
      if (v5 >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      sub_251F35AE0();
    }
  }
  int64_t v20 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_57;
  }
  if (v20 < v61)
  {
    uint64_t v21 = *(void *)(v60 + 8 * v20);
    ++v19;
    if (!v21)
    {
      int64_t v19 = v20 + 1;
      if (v20 + 1 >= v61) {
        goto LABEL_5;
      }
      uint64_t v21 = *(void *)(v60 + 8 * v19);
      if (!v21)
      {
        int64_t v19 = v20 + 2;
        if (v20 + 2 >= v61) {
          goto LABEL_5;
        }
        uint64_t v21 = *(void *)(v60 + 8 * v19);
        if (!v21)
        {
          int64_t v19 = v20 + 3;
          if (v20 + 3 >= v61) {
            goto LABEL_5;
          }
          uint64_t v21 = *(void *)(v60 + 8 * v19);
          if (!v21)
          {
            int64_t v19 = v20 + 4;
            if (v20 + 4 >= v61) {
              goto LABEL_5;
            }
            uint64_t v21 = *(void *)(v60 + 8 * v19);
            if (!v21)
            {
              int64_t v22 = v20 + 5;
              if (v22 >= v61) {
                goto LABEL_5;
              }
              uint64_t v21 = *(void *)(v60 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  int64_t v19 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_58;
                  }
                  if (v19 >= v61) {
                    goto LABEL_5;
                  }
                  uint64_t v21 = *(void *)(v60 + 8 * v19);
                  ++v22;
                  if (v21) {
                    goto LABEL_34;
                  }
                }
              }
              int64_t v19 = v22;
            }
          }
        }
      }
    }
LABEL_34:
    uint64_t v18 = (v21 - 1) & v21;
    goto LABEL_35;
  }
LABEL_5:
  swift_release();
  swift_bridgeObjectRelease();

  sub_251ED584C(v66);
  unint64_t v5 = v57;
  uint64_t v7 = v59;
  if (v59 != v56) {
    goto LABEL_6;
  }
LABEL_55:
  swift_bridgeObjectRelease_n();
  unint64_t v42 = v65;
LABEL_61:
  if (!(v42 >> 62))
  {
    if (*(uint64_t *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0) {
      goto LABEL_63;
    }
LABEL_68:
    uint64_t v0 = v54;
    goto LABEL_69;
  }
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (v49 <= 0) {
    goto LABEL_68;
  }
LABEL_63:
  uint64_t v0 = v54;
  id v43 = objc_msgSend((id)v54[6], sel_home);
  v54[12] = v43;
  if (v43)
  {
    uint64_t v44 = (uint64_t)v43;
    uint64_t v45 = sub_251EE1268(v42);
    v54[13] = v45;
    swift_bridgeObjectRelease();
    uint64_t v46 = (void *)swift_task_alloc();
    v54[14] = v46;
    *uint64_t v46 = v54;
    v46[1] = sub_251CBEE60;
    uint64_t v47 = v54[5];
    return DataModel._fetchCharacteristicValue(home:homeManager:characteristics:timeout:)(v47, v44, (uint64_t)v53, v45, 0, 1);
  }
LABEL_69:
  uint64_t v50 = v0[5];
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v51 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 1, 1, v51);
LABEL_70:
  char v52 = (uint64_t (*)(void))v0[1];
  return v52();
}

uint64_t sub_251CBEE60()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    unint64_t v5 = sub_251CBEFEC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    unint64_t v5 = sub_251CBEF7C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251CBEF7C()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = (void *)v0[12];
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251CBEFEC()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[11];
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t DataModel.reloadCharacteristics(matching:for:fetchId:timeoutSeconds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 144) = a6;
  *(void *)(v7 + 72) = a5;
  *(void *)(v7 + 80) = v6;
  *(void *)(v7 + 56) = a3;
  *(void *)(v7 + 64) = a4;
  *(void *)(v7 + 40) = a1;
  *(void *)(v7 + 48) = a2;
  *(void *)(v7 + 88) = sub_251F35C80();
  *(void *)(v7 + 96) = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 112) = v8;
  return MEMORY[0x270FA2498](sub_251CBF118, v9, v8);
}

uint64_t sub_251CBF118()
{
  uint64_t v32 = v0;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  id v3 = v1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35F90();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = *(void *)(v0 + 64);
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v28 = *(void *)(v0 + 48);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v31 = v29;
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24) = sub_251A00E84(v9, v8, &v31);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    if (v28)
    {
      id v11 = objc_msgSend(v4, sel_name);
      uint64_t v12 = sub_251F356F0();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE400000000000000;
      uint64_t v12 = 1819047278;
    }
    *(void *)(v0 + 32) = sub_251A00E84(v12, v14, &v31);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    MEMORY[0x2533AC760](v29, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  if (*(void *)(v0 + 48))
  {
    uint64_t v15 = *(void *)(v0 + 80);
    char v16 = *(unsigned char *)(v0 + 144);
    uint64_t v17 = *(void *)(v0 + 72);
    long long v30 = *(_OWORD *)(v0 + 56);
    uint64_t v18 = *(void *)(v0 + 40);
    id v19 = v4;
    uint64_t v20 = sub_251F35C70();
    *(void *)(v0 + 120) = v20;
    uint64_t v21 = swift_task_alloc();
    *(void *)(v0 + 128) = v21;
    *(void *)(v21 + 16) = v15;
    *(void *)(v21 + 24) = v18;
    *(void *)(v21 + 32) = v19;
    *(_OWORD *)(v21 + 40) = v30;
    *(void *)(v21 + 56) = v17;
    *(unsigned char *)(v21 + 64) = v16 & 1;
    int64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v22;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E320);
    *int64_t v22 = v0;
    v22[1] = sub_251CBF518;
    uint64_t v24 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA2318](v0 + 16, v20, v24, 0xD00000000000003BLL, 0x8000000251F702A0, sub_251CC826C, v21, v23);
  }
  else
  {
    swift_release();
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0()) {
      sub_251C0A680(MEMORY[0x263F8EE78]);
    }
    else {
      uint64_t v25 = MEMORY[0x263F8EE88];
    }
    uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v26(v25);
  }
}

uint64_t sub_251CBF518()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x270FA2498](sub_251CBF678, v3, v2);
}

uint64_t sub_251CBF678()
{
  uint64_t v1 = (void *)v0[6];
  swift_release();

  uint64_t v2 = v0[2];
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_251CBF6E4(uint64_t a1, uint64_t a2, unsigned char *a3, NSObject *a4, uint64_t a5, unint64_t a6, uint64_t a7, char a8)
{
  uint64_t v21 = a2;
  uint64_t v22 = a7;
  uint64_t v20 = a4;
  int v12 = a8 & 1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2250);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  swift_bridgeObjectRetain();
  DataModel.reloadCharacteristics(matching:for:fetchId:timeoutSeconds:completion:)(a3, v20, a5, a6, v22, v12, (uint64_t)sub_251CC9320, v17);
  return swift_release();
}

uint64_t sub_251CBF868(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B21F290);
  swift_bridgeObjectRetain_n();
  unint64_t v8 = sub_251F35080();
  os_log_type_t v9 = sub_251F35F90();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v27 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_251A00E84(a3, a4, &v27);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1)
    {
LABEL_5:
      id v12 = a1;
      swift_bridgeObjectRetain();
      id v13 = a1;
      swift_bridgeObjectRetain();
      id v14 = a1;
      uint64_t v15 = sub_251F35080();
      os_log_type_t v16 = sub_251F35F90();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v27 = v18;
        *(_DWORD *)uint64_t v17 = 136315394;
        swift_bridgeObjectRetain();
        sub_251A00E84(a3, a4, &v27);
        sub_251F361D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v17 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v19 = sub_251F36BF0();
        sub_251A00E84(v19, v20, &v27);
        sub_251F361D0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_2519F3000, v15, v16, "...{%s} returned error %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v18, -1, -1);
        MEMORY[0x2533AC760](v17, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_251F35080();
  os_log_type_t v22 = sub_251F35F90();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_bridgeObjectRetain();
    sub_251A00E84(a3, a4, &v27);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v21, v22, "...{%s} returned NO error", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    MEMORY[0x2533AC760](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_12:
  uint64_t v27 = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2250);
  return sub_251F35C20();
}

uint64_t DataModel.reloadCharacteristics(matching:for:fetchId:timeoutSeconds:completion:)(unsigned char *a1, NSObject *a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v207 = a8;
  LODWORD(v213) = a6;
  int v214 = a2;
  id ObjectType = (id)swift_getObjectType();
  uint64_t v13 = sub_251F350A0();
  uint64_t v205 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v202 = (char *)&v192 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v201 = (char *)&v192 - v16;
  if (qword_26B21F2C0 != -1) {
    goto LABEL_53;
  }
  while (1)
  {
    uint64_t v17 = __swift_project_value_buffer(v13, (uint64_t)qword_26B21F290);
    swift_bridgeObjectRetain_n();
    uint64_t v211 = v17;
    uint64_t v18 = sub_251F35080();
    os_log_type_t v19 = sub_251F35F90();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v212 = a1;
    uint64_t v208 = (void (*)(void, uint64_t))a7;
    uint64_t v206 = v13;
    uint64_t v203 = a5;
    if (v20)
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      double v22 = COERCE_DOUBLE(swift_slowAlloc());
      double aBlock = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&v228[0] = sub_251A00E84(a3, a4, (uint64_t *)&aBlock);
      a1 = v212;
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      swift_arrayDestroy();
      MEMORY[0x2533AC760](*(void *)&v22, -1, -1);
      MEMORY[0x2533AC760](v21, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_251F35080();
    int v24 = sub_251F35F90();
    BOOL v25 = os_log_type_enabled(v23, (os_log_type_t)v24);
    double v26 = MEMORY[0x263F8EE78];
    uint64_t v210 = (uint8_t *)a4;
    uint64_t v209 = a3;
    if (v25)
    {
      LODWORD(v200) = v24;
      uint64_t v27 = swift_slowAlloc();
      *(double *)&unint64_t v199 = COERCE_DOUBLE(swift_slowAlloc());
      double aBlock = *(double *)&v199;
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)&v228[0] = sub_251A00E84(a3, a4, (uint64_t *)&aBlock);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2080;
      int64_t v28 = *((void *)a1 + 2);
      uint64_t v29 = MEMORY[0x263F8EE78];
      if (v28)
      {
        *(void *)&v228[0] = MEMORY[0x263F8EE78];
        sub_251A3DEDC(0, v28, 0);
        uint64_t v29 = *(void *)&v228[0];
        long long v30 = (uint64_t *)(a1 + 40);
        do
        {
          uint64_t v32 = *(v30 - 1);
          uint64_t v31 = *v30;
          *(void *)&v228[0] = v29;
          unint64_t v34 = *(void *)(v29 + 16);
          unint64_t v33 = *(void *)(v29 + 24);
          swift_bridgeObjectRetain();
          if (v34 >= v33 >> 1)
          {
            sub_251A3DEDC(v33 > 1, v34 + 1, 1);
            uint64_t v29 = *(void *)&v228[0];
          }
          v30 += 5;
          *(void *)(v29 + 16) = v34 + 1;
          uint64_t v35 = v29 + 16 * v34;
          *(void *)(v35 + 32) = v32;
          *(void *)(v35 + 40) = v31;
          --v28;
        }
        while (v28);
        a4 = (unint64_t)v210;
        a3 = v209;
        a1 = v212;
      }
      *(void *)&v228[0] = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
      sub_251A1E590((unint64_t *)&qword_26B21EAB8, &qword_26B21EAB0);
      uint64_t v36 = sub_251F35620();
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      *(void *)&v228[0] = sub_251A00E84(v36, v38, (uint64_t *)&aBlock);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v23, LOBYTE(v200), "...{%s} will process fetch specifications %s", (uint8_t *)v27, 0x16u);
      uint64_t v39 = v199;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v39, -1, -1);
      MEMORY[0x2533AC760](v27, -1, -1);

      double v26 = MEMORY[0x263F8EE78];
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    double aBlock = v26;
    a5 = *((uint64_t *)a1 + 2);
    if (*(double *)&a5 == 0.0) {
      break;
    }
    a3 = (uint64_t)(a1 + 32);
    swift_bridgeObjectRetain();
    a1 = 0;
    uint64_t v13 = 0;
    while (1)
    {
      uint64_t v41 = a3 + 40 * (void)a1;
      long long v42 = *(_OWORD *)(v41 + 16);
      v228[0] = *(_OWORD *)v41;
      v228[1] = v42;
      uint64_t v229 = *(void *)(v41 + 32);
      sub_251CC8280((uint64_t)v228);
      id v43 = [v214 accessories];
      sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
      a4 = sub_251F35AC0();

      uint64_t v221 = *(void *)&v26;
      if (a4 >> 62) {
        break;
      }
      uint64_t v44 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v44) {
        goto LABEL_20;
      }
LABEL_16:
      swift_bridgeObjectRelease_n();
      unint64_t v40 = *(void *)&v26;
LABEL_17:
      ++a1;
      sub_251CC82D4((uint64_t)v228);
      sub_251ED584C(v40);
      if (a1 == (unsigned char *)a5)
      {
        swift_bridgeObjectRelease();
        double v48 = aBlock;
        a4 = (unint64_t)v210;
        a3 = v209;
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_251F366C0();
    if (!v44) {
      goto LABEL_16;
    }
LABEL_20:
    a7 = 4;
    while (1)
    {
      id v45 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](a7 - 4, a4) : *(id *)(a4 + 8 * a7);
      uint64_t v46 = v45;
      uint64_t v47 = a7 - 3;
      if (__OFADD__(a7 - 4, 1)) {
        break;
      }
      uint64_t v218 = (uint64_t)v45;
      sub_251CC6064((id *)&v218, (unint64_t *)v228, v216);

      sub_251ED584C(v216[0]);
      ++a7;
      if (v47 == v44)
      {
        swift_bridgeObjectRelease_n();
        unint64_t v40 = v221;
        double v26 = MEMORY[0x263F8EE78];
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_53:
    swift_once();
  }
  double v48 = v26;
LABEL_31:
  uint64_t v49 = *(void *)&v48 >> 62;
  if (*(void *)&v48 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v64) {
      goto LABEL_33;
    }
LABEL_55:
    swift_bridgeObjectRelease();
    if ((*(void *)&v26 & 0xC000000000000000) == 0)
    {
      uint64_t v65 = MEMORY[0x263F8EE88];
      unint64_t v66 = v208;
LABEL_57:
      v66(0, v65);
      return swift_bridgeObjectRelease();
    }
LABEL_132:
    uint64_t v189 = sub_251F366C0();
    unint64_t v66 = v208;
    if (v189)
    {
      sub_251C0A680(MEMORY[0x263F8EE78]);
      uint64_t v65 = v190;
    }
    else
    {
      uint64_t v65 = MEMORY[0x263F8EE88];
    }
    goto LABEL_57;
  }
  if (!*(void *)((*(void *)&v48 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_55;
  }
LABEL_33:
  unint64_t v50 = swift_bridgeObjectRetain();
  sub_251EE1268(v50);
  double v200 = v48;
  swift_bridgeObjectRelease();
  uint64_t v51 = swift_bridgeObjectRetain();
  double v52 = COERCE_DOUBLE(sub_251A920B4(v51));
  swift_bridgeObjectRelease();
  double aBlock = v52;
  sub_251CC6D88((uint64_t *)&aBlock);
  uint64_t v193 = v49;
  swift_bridgeObjectRelease();
  unint64_t v53 = *(void *)&aBlock;
  if ((*(void *)&aBlock & 0x8000000000000000) != 0 || (*(void *)&aBlock & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v54 = sub_251F366C0();
    if (!v54) {
      goto LABEL_59;
    }
LABEL_36:
    if (v54 >= 1)
    {
      uint64_t v55 = 0;
      unint64_t v56 = v53 & 0xC000000000000001;
      do
      {
        if (v56) {
          double v57 = COERCE_DOUBLE(MEMORY[0x2533AB3A0](v55, v53));
        }
        else {
          *(void *)&double v57 = *(id *)(v53 + 8 * v55 + 32);
        }
        double v58 = v57;
        ++v55;
        double aBlock = v57;
        sub_251CC8324((void **)&aBlock, v53, a3, a4);
      }
      while (v54 != v55);
      swift_release();
      double aBlock = MEMORY[0x263F8EE78];
      uint64_t v59 = self;
      swift_retain();
      for (uint64_t i = 0; i != v54; ++i)
      {
        if (v56) {
          id v61 = (id)MEMORY[0x2533AB3A0](i, v53);
        }
        else {
          id v61 = *(id *)(v53 + 8 * i + 32);
        }
        id v62 = v61;
        id v63 = objc_msgSend(v59, sel_readRequestWithCharacteristic_, v61);

        if (v63)
        {
          MEMORY[0x2533AA9D0]();
          if (*(void *)((*(void *)&aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&aBlock & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
            sub_251F35B10();
          sub_251F35B70();
          sub_251F35AE0();
        }
      }
      swift_release();
      a4 = (unint64_t)v210;
      a3 = v209;
      goto LABEL_60;
    }
    __break(1u);
    goto LABEL_132;
  }
  uint64_t v54 = *(void *)(*(void *)&aBlock + 16);
  swift_retain();
  if (v54) {
    goto LABEL_36;
  }
LABEL_59:
  swift_release();
LABEL_60:
  sub_251A1A568(0, &qword_269BA2218);
  uint64_t v67 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v68 = objc_msgSend(self, sel_characteristicBatchRequestWithReadRequests_, v67);

  if (!v68)
  {
    swift_release();
    swift_bridgeObjectRelease();
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0())
    {
      sub_251C0A680(MEMORY[0x263F8EE78]);
      uint64_t v85 = v191;
    }
    else
    {
      uint64_t v85 = MEMORY[0x263F8EE88];
    }
    v208(0, v85);
    return swift_bridgeObjectRelease();
  }
  uint64_t v69 = swift_allocObject();
  uint64_t v70 = sub_251EE1268(v53);
  swift_release();
  *(void *)(v69 + 16) = v70;
  unint64_t v197 = (uint64_t *)(v69 + 16);
  uint64_t v71 = a3;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = 0;
  uint64_t v194 = v72 + 16;
  *(double *)&uint64_t v73 = COERCE_DOUBLE(swift_allocObject());
  *(void *)(v73 + 16) = 0;
  uint64_t v74 = (double *)swift_allocObject();
  *((void *)v74 + 2) = v69;
  *((void *)v74 + 3) = v71;
  *((void *)v74 + 4) = a4;
  v74[5] = *(double *)&v73;
  *((void *)v74 + 6) = ObjectType;
  uint64_t v226 = sub_251CC888C;
  uint64_t v227 = v74;
  id ObjectType = v68;
  double aBlock = MEMORY[0x263EF8330];
  uint64_t v223 = 1107296256;
  BOOL v224 = sub_251CBDA5C;
  uint64_t v225 = &block_descriptor_35;
  unint64_t v75 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  uint64_t v198 = v69;
  swift_retain();
  unint64_t v199 = (void **)v73;
  swift_retain();
  swift_release();
  objc_msgSend(ObjectType, sel_setProgressHandler_, v75);
  _Block_release(v75);
  uint64_t v76 = swift_allocObject();
  *(unsigned char *)(v76 + 16) = 0;
  uint64_t v212 = (unsigned char *)(v76 + 16);
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = v72;
  *(void *)(v77 + 24) = v76;
  uint64_t v226 = sub_251CC88EC;
  uint64_t v227 = (void *)v77;
  id v78 = ObjectType;
  double aBlock = MEMORY[0x263EF8330];
  uint64_t v223 = 1107296256;
  BOOL v224 = sub_251C97A44;
  uint64_t v225 = &block_descriptor_23_1;
  uint64_t v79 = _Block_copy(&aBlock);
  uint64_t v196 = v72;
  swift_retain();
  uint64_t v195 = v76;
  swift_retain();
  swift_release();
  objc_msgSend(v78, sel_setCompletionHandler_, v79);
  _Block_release(v79);
  swift_bridgeObjectRetain_n();
  uint64_t v80 = sub_251F35080();
  os_log_type_t v81 = sub_251F35F90();
  BOOL v82 = os_log_type_enabled(v80, v81);
  uint64_t v192 = v73 + 16;
  if (v82)
  {
    uint64_t v83 = (uint8_t *)swift_slowAlloc();
    double v84 = COERCE_DOUBLE(swift_slowAlloc());
    double aBlock = v84;
    *(_DWORD *)uint64_t v83 = 136315138;
    id v78 = ObjectType;
    swift_bridgeObjectRetain();
    uint64_t v221 = sub_251A00E84(v209, a4, (uint64_t *)&aBlock);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](*(void *)&v84, -1, -1);
    MEMORY[0x2533AC760](v83, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  double v87 = *(double *)&v203;
  -[NSObject performBatchCharacteristicRequest:](v214, sel_performBatchCharacteristicRequest_, v78, v192);
  uint64_t v88 = sub_251F34D20();
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v90 = *(void *)(v89 + 64);
  MEMORY[0x270FA5388](v88);
  unint64_t v91 = (v90 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251F34D10();
  sub_251F34C40();
  double v93 = v92;
  uint64_t v94 = *(void (**)(char *, uint64_t))(v89 + 8);
  v94((char *)&v192 - v91, v88);
  id v95 = (id)swift_beginAccess();
  double v96 = v87;
  while (2)
  {
    MEMORY[0x270FA5388](v95);
    sub_251F34D10();
    sub_251F34C40();
    double v98 = v97;
    v94((char *)&v192 - v91, v88);
    double v99 = v98 - v93;
    if (v213)
    {
      if (v99 >= -1.0) {
        break;
      }
      goto LABEL_70;
    }
    if (v99 < v87)
    {
LABEL_70:
      id v95 = objc_msgSend(self, sel_sleepForTimeInterval_, 0.02);
      if (*v212 != 1) {
        continue;
      }
      swift_bridgeObjectRelease();
      uint64_t v100 = v205;
      uint64_t v101 = v201;
      uint64_t v102 = v206;
      (*(void (**)(char *, uint64_t, uint64_t))(v205 + 16))(v201, v211, v206);
      unint64_t v111 = (unint64_t)v210;
      swift_bridgeObjectRetain_n();
      uint64_t v104 = v198;
      swift_retain_n();
      swift_retain();
      uint64_t v112 = sub_251F35080();
      LODWORD(v211) = sub_251F35FD0();
      if (os_log_type_enabled(v112, (os_log_type_t)v211))
      {
        int v214 = v112;
        uint64_t v113 = swift_slowAlloc();
        *(double *)&uint64_t v203 = COERCE_DOUBLE(swift_slowAlloc());
        uint64_t v217 = v203;
        *(_DWORD *)uint64_t v113 = 136315906;
        swift_bridgeObjectRetain();
        double aBlock = COERCE_DOUBLE(sub_251A00E84(v209, v111, &v217));
        sub_251F361D0();
        uint64_t v114 = swift_bridgeObjectRelease_n();
        *(_WORD *)(v113 + 12) = 2048;
        MEMORY[0x270FA5388](v114);
        sub_251F34D10();
        sub_251F34C40();
        double v116 = v115;
        v94((char *)&v192 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0), v88);
        double aBlock = v116 - v93;
        sub_251F361D0();
        *(_WORD *)(v113 + 22) = 2048;
        swift_beginAccess();
        double aBlock = *((double *)v199 + 2);
        sub_251F361D0();
        swift_release();
        uint64_t v210 = (uint8_t *)v113;
        *(_WORD *)(v113 + 32) = 2080;
        uint64_t v117 = v197;
        swift_beginAccess();
        uint64_t v118 = *v117;
        unint64_t v213 = v118 & 0xC000000000000001;
        if ((v118 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v119 = sub_251F36300();
        }
        else
        {
          uint64_t v119 = *(void *)(v118 + 16);
          swift_bridgeObjectRetain();
        }
        uint64_t v128 = v214;
        if (v119)
        {
          unint64_t v215 = (void *)MEMORY[0x263F8EE78];
          uint64_t v123 = &v215;
          sub_251A3DEDC(0, v119 & ~(v119 >> 63), 0);
          if (v213)
          {
            uint64_t v129 = sub_251F362A0();
            unsigned __int8 v131 = 1;
          }
          else
          {
            uint64_t v129 = sub_251B72004(v118);
            unsigned __int8 v131 = v160 & 1;
          }
          uint64_t v218 = v129;
          uint64_t v219 = v130;
          unsigned __int8 v220 = v131;
          if (v119 < 0) {
            goto LABEL_138;
          }
          uint64_t v161 = v118 & 0xFFFFFFFFFFFFFF8;
          if (v118 < 0) {
            uint64_t v161 = v118;
          }
          uint64_t v212 = (unsigned char *)v161;
          do
          {
            while (1)
            {
              uint64_t v167 = v218;
              uint64_t v168 = v219;
              uint64_t v169 = v220;
              sub_251A54534(v218, v219, v220, v118);
              uint64_t v171 = v170;
              id v172 = objc_msgSend(v170, sel_description);
              uint64_t v173 = sub_251F356F0();
              uint64_t v175 = v174;

              uint64_t v123 = v215;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_251A3DEDC(0, v123[2] + 1, 1);
                uint64_t v123 = v215;
              }
              unint64_t v177 = v123[2];
              unint64_t v176 = v123[3];
              if (v177 >= v176 >> 1)
              {
                sub_251A3DEDC(v176 > 1, v177 + 1, 1);
                uint64_t v123 = v215;
              }
              v123[2] = v177 + 1;
              uint64_t v178 = &v123[2 * v177];
              v178[4] = v173;
              v178[5] = v175;
              if (v213) {
                break;
              }
              uint64_t v162 = sub_251A53F5C(v167, v168, v169, v118);
              uint64_t v164 = v163;
              char v166 = v165;
              sub_251A4ECE4(v167, v168, v169);
              uint64_t v218 = v162;
              uint64_t v219 = v164;
              unsigned __int8 v220 = v166 & 1;
              uint64_t v128 = v214;
              if (!--v119) {
                goto LABEL_128;
              }
            }
            if ((v169 & 1) == 0) {
              goto LABEL_140;
            }
            if (sub_251F362C0()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            uint64_t v128 = v214;
            __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2220);
            uint64_t v179 = (void (*)(double *, void))sub_251F35E80();
            sub_251F36370();
            v179(&aBlock, 0);
            --v119;
          }
          while (v119);
LABEL_128:
          sub_251A4ECE4(v218, v219, v220);
          swift_bridgeObjectRelease();
          uint64_t v132 = v215;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v132 = (void *)MEMORY[0x263F8EE78];
        }
        unint64_t v180 = v210;
        uint64_t v181 = MEMORY[0x2533AAA10](v132, MEMORY[0x263F8D310]);
        unint64_t v183 = v182;
        swift_bridgeObjectRelease();
        double aBlock = COERCE_DOUBLE(sub_251A00E84(v181, v183, &v217));
        sub_251F361D0();
        uint64_t v184 = v198;
        swift_release_n();
        uint64_t v104 = v184;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2519F3000, v128, (os_log_type_t)v211, "...{%s} fetch completed in %fs, got %ld results, nilCharacteristics = %s", v180, 0x2Au);
        uint64_t v185 = v203;
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v185, -1, -1);
        MEMORY[0x2533AC760](v180, -1, -1);

        (*(void (**)(char *, uint64_t))(v205 + 8))(v201, v206);
        goto LABEL_130;
      }

      swift_release_n();
      swift_release();
LABEL_83:
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
      goto LABEL_130;
    }
    break;
  }
  uint64_t v100 = v205;
  uint64_t v101 = v202;
  uint64_t v102 = v206;
  (*(void (**)(char *, uint64_t, uint64_t))(v205 + 16))(v202, v211, v206);
  unint64_t v103 = (unint64_t)v210;
  swift_bridgeObjectRetain_n();
  uint64_t v104 = v198;
  swift_retain_n();
  double v105 = v200;
  swift_bridgeObjectRetain();
  id v106 = v199;
  swift_retain();
  uint64_t v107 = sub_251F35080();
  LODWORD(v211) = sub_251F35FB0();
  if (!os_log_type_enabled(v107, (os_log_type_t)v211))
  {

    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease_n();
    goto LABEL_83;
  }
  uint64_t v108 = swift_slowAlloc();
  *(double *)&uint64_t v203 = COERCE_DOUBLE(swift_slowAlloc());
  uint64_t v217 = v203;
  *(_DWORD *)uint64_t v108 = 136316162;
  swift_bridgeObjectRetain();
  double aBlock = COERCE_DOUBLE(sub_251A00E84(v209, v103, &v217));
  sub_251F361D0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v108 + 12) = 2048;
  double v109 = -1.0;
  if ((v213 & 1) == 0) {
    double v109 = v96;
  }
  double aBlock = v109;
  sub_251F361D0();
  *(_WORD *)(v108 + 22) = 2048;
  swift_beginAccess();
  double aBlock = *((double *)v106 + 2);
  sub_251F361D0();
  swift_release();
  *(_WORD *)(v108 + 32) = 2048;
  if (v193)
  {
    swift_bridgeObjectRetain();
    double v110 = COERCE_DOUBLE(sub_251F366C0());
    swift_bridgeObjectRelease();
  }
  else
  {
    double v110 = *(double *)((*(void *)&v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  double aBlock = v110;
  sub_251F361D0();
  swift_bridgeObjectRelease();
  uint64_t v210 = (uint8_t *)v108;
  *(_WORD *)(v108 + 42) = 2080;
  uint64_t v120 = v197;
  swift_beginAccess();
  uint64_t v121 = *v120;
  int v214 = (*v120 & 0xC000000000000001);
  if (v214)
  {
    swift_bridgeObjectRetain();
    uint64_t v122 = sub_251F36300();
    if (v122) {
      goto LABEL_87;
    }
LABEL_90:
    swift_bridgeObjectRelease();
    uint64_t v127 = (void *)MEMORY[0x263F8EE78];
LABEL_112:
    uint64_t v154 = v210;
    uint64_t v155 = MEMORY[0x2533AAA10](v127, MEMORY[0x263F8D310]);
    unint64_t v157 = v156;
    swift_bridgeObjectRelease();
    double aBlock = COERCE_DOUBLE(sub_251A00E84(v155, v157, &v217));
    sub_251F361D0();
    uint64_t v158 = v198;
    swift_release_n();
    uint64_t v104 = v158;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v107, (os_log_type_t)v211, "...{%s} fetch timed out after %fs, got %ld results of %ld requested, nilCharacteristics = %s", v154, 0x34u);
    uint64_t v159 = v203;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v159, -1, -1);
    MEMORY[0x2533AC760](v154, -1, -1);

    (*(void (**)(char *, uint64_t))(v205 + 8))(v202, v206);
LABEL_130:
    swift_beginAccess();
    uint64_t v186 = *(void **)(v196 + 16);
    swift_beginAccess();
    uint64_t v187 = *(void *)(v104 + 16);
    id v188 = v186;
    swift_bridgeObjectRetain();
    v208(v186, v187);
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  uint64_t v122 = *(void *)(v121 + 16);
  swift_bridgeObjectRetain();
  if (!v122) {
    goto LABEL_90;
  }
LABEL_87:
  unint64_t v215 = (void *)MEMORY[0x263F8EE78];
  uint64_t v123 = &v215;
  sub_251A3DEDC(0, v122 & ~(v122 >> 63), 0);
  if (v214)
  {
    uint64_t v124 = sub_251F362A0();
    unsigned __int8 v126 = 1;
  }
  else
  {
    uint64_t v124 = sub_251B72004(v121);
    unsigned __int8 v126 = v133 & 1;
  }
  uint64_t v218 = v124;
  uint64_t v219 = v125;
  unsigned __int8 v220 = v126;
  if ((v122 & 0x8000000000000000) == 0)
  {
    uint64_t v134 = v121 & 0xFFFFFFFFFFFFFF8;
    if (v121 < 0) {
      uint64_t v134 = v121;
    }
    uint64_t v212 = (unsigned char *)v134;
    unint64_t v213 = v121;
    do
    {
      while (1)
      {
        char v140 = v107;
        uint64_t v141 = v218;
        uint64_t v142 = v219;
        uint64_t v143 = v220;
        sub_251A54534(v218, v219, v220, v121);
        uint64_t v145 = v144;
        id v146 = objc_msgSend(v144, sel_description);
        uint64_t v147 = sub_251F356F0();
        uint64_t v149 = v148;

        uint64_t v123 = v215;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251A3DEDC(0, v123[2] + 1, 1);
          uint64_t v123 = v215;
        }
        unint64_t v151 = v123[2];
        unint64_t v150 = v123[3];
        if (v151 >= v150 >> 1)
        {
          sub_251A3DEDC(v150 > 1, v151 + 1, 1);
          uint64_t v123 = v215;
        }
        v123[2] = v151 + 1;
        uint64_t v152 = &v123[2 * v151];
        v152[4] = v147;
        v152[5] = v149;
        if (v214) {
          break;
        }
        uint64_t v121 = v213;
        uint64_t v135 = sub_251A53F5C(v141, v142, v143, v213);
        uint64_t v137 = v136;
        char v139 = v138;
        sub_251A4ECE4(v141, v142, v143);
        uint64_t v218 = v135;
        uint64_t v219 = v137;
        unsigned __int8 v220 = v139 & 1;
        uint64_t v107 = v140;
        if (!--v122) {
          goto LABEL_111;
        }
      }
      uint64_t v121 = v213;
      if ((v143 & 1) == 0) {
        goto LABEL_139;
      }
      if (sub_251F362C0()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      uint64_t v107 = v140;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2220);
      uint64_t v153 = (void (*)(double *, void))sub_251F35E80();
      sub_251F36370();
      v153(&aBlock, 0);
      --v122;
    }
    while (v122);
LABEL_111:
    sub_251A4ECE4(v218, v219, v220);
    swift_bridgeObjectRelease();
    uint64_t v127 = v215;
    goto LABEL_112;
  }
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  swift_release();
  __break(1u);
LABEL_140:
  swift_release();
  __break(1u);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t DataModel.characteristics(matching:for:filterOutHiddenStatusAccessories:)(uint64_t a1, id a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v2;
  uint64_t v8 = *(void *)(a1 + 32);
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  id v3 = objc_msgSend(a2, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v4 = sub_251F35AC0();

  sub_251CC8280((uint64_t)v7);
  uint64_t v5 = sub_251CC8128(v4, (unint64_t *)v7);
  sub_251CC82D4((uint64_t)v7);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_251CC1BC0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v11 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    if (!v12) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_13;
    }
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_23:
    swift_once();
    goto LABEL_17;
  }
  uint64_t v13 = 0;
  uint64_t v14 = a2 + 16;
  do
  {
    if ((v11 & 0xC000000000000001) != 0) {
      uint64_t v15 = (objc_class *)MEMORY[0x2533AB3A0](v13, v11);
    }
    else {
      uint64_t v15 = (objc_class *)*(id *)(v11 + 8 * v13 + 32);
    }
    uint64_t v16 = v15;
    ++v13;
    uint64_t v24 = (uint64_t)v15;
    sub_251CC8AB0((void **)&v24, v14, a3, a4, a5);
  }
  while (v12 != v13);
LABEL_13:
  swift_bridgeObjectRelease();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_251F350A0();
  __swift_project_value_buffer(v17, (uint64_t)qword_26B21F290);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v11 = sub_251F35080();
  LOBYTE(v12) = sub_251F35FD0();
  if (!os_log_type_enabled((os_log_t)v11, (os_log_type_t)v12))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v5 = swift_slowAlloc();
  uint64_t v6 = swift_slowAlloc();
  v25[0] = v6;
  *(_DWORD *)uint64_t v5 = 136315394;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_251A00E84(a3, a4, v25);
  sub_251F361D0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v5 + 12) = 2080;
  swift_beginAccess();
  if (qword_269B9C3D0 != -1) {
    goto LABEL_23;
  }
LABEL_17:
  uint64_t v18 = (void *)qword_269BA21F0;
  os_log_type_t v19 = (void *)sub_251F35EB0();
  id v20 = objc_msgSend(v18, sel_stringForObjectValue_, v19);

  if (v20)
  {
    uint64_t v21 = sub_251F356F0();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xE000000000000000;
  }
  sub_251A00E84(v21, v23, v25);
  sub_251F361D0();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_2519F3000, (os_log_t)v11, (os_log_type_t)v12, "...{%s} fetch progress - %s", (uint8_t *)v5, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2533AC760](v6, -1, -1);
  MEMORY[0x2533AC760](v5, -1, -1);
}

uint64_t sub_251CC1F34(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v6 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;
  id v7 = a1;

  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t DataModel._fetchCharacteristicValue(home:homeManager:characteristics:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 392) = a6;
  *(void *)(v6 + 112) = a4;
  *(void *)(v6 + 120) = a5;
  *(void *)(v6 + 96) = a2;
  *(void *)(v6 + 104) = a3;
  *(void *)(v6 + 88) = a1;
  uint64_t v7 = sub_251F35030();
  *(void *)(v6 + 128) = v7;
  *(void *)(v6 + 136) = *(void *)(v7 - 8);
  *(void *)(v6 + 144) = swift_task_alloc();
  *(void *)(v6 + 152) = swift_task_alloc();
  uint64_t v8 = sub_251F34FE0();
  *(void *)(v6 + 160) = v8;
  *(void *)(v6 + 168) = *(void *)(v8 - 8);
  *(void *)(v6 + 176) = swift_task_alloc();
  *(void *)(v6 + 184) = swift_task_alloc();
  *(void *)(v6 + 192) = swift_task_alloc();
  *(void *)(v6 + 200) = swift_task_alloc();
  *(void *)(v6 + 208) = swift_task_alloc();
  *(void *)(v6 + 216) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(void *)(v6 + 224) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StateSnapshot(0);
  *(void *)(v6 + 232) = v9;
  *(void *)(v6 + 240) = *(void *)(v9 - 8);
  *(void *)(v6 + 248) = swift_task_alloc();
  *(void *)(v6 + 256) = swift_task_alloc();
  sub_251F35C80();
  *(void *)(v6 + 264) = sub_251F35C70();
  uint64_t v11 = sub_251F35C00();
  *(void *)(v6 + 272) = v11;
  *(void *)(v6 + 280) = v10;
  return MEMORY[0x270FA2498](sub_251CC21FC, v11, v10);
}

uint64_t sub_251CC21FC()
{
  uint64_t v1 = v0[14];
  unint64_t v28 = v1 & 0xC000000000000001;
  if ((v1 & 0xC000000000000001) != 0)
  {
    if (v1 >= 0) {
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v2 = sub_251F36300();
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      goto LABEL_17;
    }
    uint64_t v4 = v2;
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_251F36520();
    uint64_t v30 = sub_251F362A0();
    uint64_t v31 = v5;
    unsigned __int8 v32 = 1;
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v4)
  {
LABEL_17:
    v0[36] = v3;
    sub_251A1A568(0, &qword_269BA2218);
    swift_bridgeObjectRetain();
    os_log_type_t v19 = (void *)sub_251F35AA0();
    swift_bridgeObjectRelease();
    v0[37] = objc_msgSend(self, sel_characteristicBatchRequestWithReadRequests_, v19);

    if (qword_26B21E6F8 != -1) {
      swift_once();
    }
    uint64_t v20 = v0[28];
    uint64_t v21 = v0[14];
    unint64_t v22 = (void *)sub_2519FA028(MEMORY[0x263F8EE78]);
    *(void *)uint64_t v20 = sub_251CBD220(v22, v21);
    *(void *)(v20 + 8) = 0;
    *(unsigned char *)(v20 + 16) = 1;
    swift_storeEnumTagMultiPayload();
    unint64_t v23 = (void *)swift_task_alloc();
    v0[38] = v23;
    *unint64_t v23 = v0;
    v23[1] = sub_251CC25A4;
    uint64_t v24 = v0[32];
    uint64_t v25 = v0[28];
    uint64_t v27 = v0[12];
    uint64_t v26 = v0[13];
    return sub_251F2AD24(v24, v25, v26, v27, 0);
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_251F36520();
  uint64_t v30 = sub_251B72004(v1);
  uint64_t v31 = v6;
  unsigned __int8 v32 = v7 & 1;
LABEL_9:
  uint64_t v8 = self;
  while (1)
  {
    while (1)
    {
      sub_251A54534(v30, v31, v32, v0[14]);
      uint64_t v15 = v14;
      id v16 = objc_msgSend(v8, sel_readRequestWithCharacteristic_, v14);

      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      uint64_t result = sub_251F36500();
      if (v28) {
        break;
      }
      uint64_t v9 = sub_251A53F5C(v30, v31, v32, v0[14]);
      uint64_t v11 = v10;
      char v13 = v12;
      sub_251A4ECE4(v30, v31, v32);
      uint64_t v30 = v9;
      uint64_t v31 = v11;
      unsigned __int8 v32 = v13 & 1;
      if (!--v4) {
        goto LABEL_16;
      }
    }
    if ((v32 & 1) == 0) {
      break;
    }
    if (sub_251F362C0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2220);
    uint64_t v18 = (void (*)(void *, void))sub_251F35E80();
    sub_251F36370();
    v18(v0 + 2, 0);
    if (!--v4)
    {
LABEL_16:
      sub_251A4ECE4(v30, v31, v32);
      uint64_t v3 = v29;
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251CC25A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  uint64_t v3 = *(void *)(*v0 + 224);
  swift_task_dealloc();
  sub_251CC8A50(v3, type metadata accessor for StateSnapshot.UpdateType);
  sub_251CC8A50(v2, type metadata accessor for StateSnapshot);
  uint64_t v4 = *(void *)(v1 + 280);
  uint64_t v5 = *(void *)(v1 + 272);
  return MEMORY[0x270FA2498](sub_251CC272C, v5, v4);
}

uint64_t sub_251CC272C()
{
  uint64_t v56 = v0;
  if (qword_26B21ED30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F35020();
  *(void *)(v0 + 312) = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ED40);
  sub_251F34FD0();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35000();
  os_signpost_type_t v3 = sub_251F36060();
  char v4 = sub_251F36170();
  unint64_t v5 = *(void *)(v0 + 288);
  if (v4)
  {
    os_signpost_type_t v47 = v3;
    uint64_t v6 = *(void *)(v0 + 168);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    uint64_t v8 = v6 + 16;
    uint64_t v7 = v9;
    v9(*(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 160));
    uint64_t v10 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v54 = v46;
    *(_DWORD *)uint64_t v10 = 134218242;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_251F366C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 72) = v11;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v12 = MEMORY[0x263F8EE78];
    log = v2;
    if (v11)
    {
      uint64_t v55 = MEMORY[0x263F8EE78];
      uint64_t result = sub_251A3E084(0, v11 & ~(v11 >> 63), 0);
      if (v11 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v44 = v10;
      uint64_t v45 = v8;
      uint64_t v12 = v55;
      unint64_t v52 = v5 & 0xC000000000000001;
      uint64_t v49 = *(void *)(v0 + 288) + 32;
      uint64_t v50 = v0;
      uint64_t v14 = 0;
      uint64_t v51 = sub_251F34DA0();
      uint64_t v15 = *(void *)(v51 - 8);
      do
      {
        uint64_t v16 = v11;
        uint64_t v17 = swift_task_alloc();
        if (v52) {
          id v18 = (id)MEMORY[0x2533AB3A0](v14, *(void *)(v50 + 288));
        }
        else {
          id v18 = *(id *)(v49 + 8 * v14);
        }
        os_log_type_t v19 = v18;
        id v20 = objc_msgSend(v18, sel_characteristic, v44, v45);
        id v21 = objc_msgSend(v20, sel_uniqueIdentifier);

        sub_251F34D80();
        uint64_t v55 = v12;
        unint64_t v23 = *(void *)(v12 + 16);
        unint64_t v22 = *(void *)(v12 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_251A3E084(v22 > 1, v23 + 1, 1);
          uint64_t v12 = v55;
        }
        ++v14;
        *(void *)(v12 + 16) = v23 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v12+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v23, v17, v51);
        swift_task_dealloc();
        uint64_t v11 = v16;
      }
      while (v16 != v14);
      uint64_t v0 = v50;
      uint64_t v10 = v44;
      uint64_t v8 = v45;
    }
    unint64_t v26 = v8 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 168);
    uint64_t v53 = *(void *)(v0 + 160);
    uint64_t v29 = sub_251F34DA0();
    uint64_t v30 = MEMORY[0x2533AAA10](v12, v29);
    uint64_t v31 = (uint8_t *)v10;
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = sub_251A00E84(v30, v33, &v54);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v34 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, log, v47, v34, "BatchReadRequest", "count: %ld %s", v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v46, -1, -1);
    MEMORY[0x2533AC760](v31, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v53);
    uint64_t v25 = v7;
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 168);
    swift_bridgeObjectRelease_n();

    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    unint64_t v26 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v35 = *(void *)(v0 + 208);
  uint64_t v36 = *(void *)(v0 + 192);
  uint64_t v37 = *(void *)(v0 + 160);
  uint64_t v38 = *(void *)(v0 + 168);
  char v39 = *(unsigned char *)(v0 + 392);
  *(void *)(v0 + 320) = v25;
  *(void *)(v0 + 328) = v26;
  v25(v36, v35, v37);
  sub_251F35060();
  swift_allocObject();
  *(void *)(v0 + 336) = sub_251F35050();
  unint64_t v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  *(void *)(v0 + 344) = v40;
  *(void *)(v0 + 352) = (v38 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v40(v35, v37);
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_251CC2CB0;
  uint64_t v42 = *(void *)(v0 + 296);
  uint64_t v43 = *(void *)(v0 + 120);
  return sub_251AD3C38(v42, v43, v39 & 1);
}

uint64_t sub_251CC2CB0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 272);
    uint64_t v4 = *(void *)(v2 + 280);
    unint64_t v5 = sub_251CC32F4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 272);
    uint64_t v4 = *(void *)(v2 + 280);
    unint64_t v5 = sub_251CC2DD8;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251CC2DD8()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[14];
  uint64_t v3 = (void *)sub_2519FA028(MEMORY[0x263F8EE78]);
  *(void *)uint64_t v1 = sub_251CBD638(v3, v2);
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[47] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251CC2ECC;
  uint64_t v5 = v0[31];
  uint64_t v6 = v0[28];
  uint64_t v8 = v0[12];
  uint64_t v7 = v0[13];
  return sub_251F2AD24(v5, v6, v7, v8, 0);
}

uint64_t sub_251CC2ECC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 224);
  swift_task_dealloc();
  sub_251CC8A50(v2, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v3 = *(void *)(v1 + 280);
  uint64_t v4 = *(void *)(v1 + 272);
  return MEMORY[0x270FA2498](sub_251CC3024, v4, v3);
}

uint64_t sub_251CC3024()
{
  swift_release();
  uint64_t v1 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v2 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 136);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x263F90238])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 128));
      uint64_t v6 = "";
    }
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    id v21 = *(void **)(v0 + 296);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v13 = *(void *)(v0 + 160);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320))(v11, v12, v13);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v1, v2, v15, "BatchReadRequest", v6, v14, 2u);
    MEMORY[0x2533AC760](v14, -1, -1);

    v10(v12, v13);
    swift_release();
    v10(v11, v13);
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 160);

    v7(v8, v9);
    swift_release();
  }
  uint64_t v16 = *(void *)(v0 + 232);
  uint64_t v17 = *(void *)(v0 + 240);
  uint64_t v18 = *(void *)(v0 + 88);
  sub_251C0ACDC(*(void *)(v0 + 248), v18, type metadata accessor for StateSnapshot);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v18, 0, 1, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_251CC32F4()
{
  uint64_t v1 = v0;
  os_signpost_type_t v2 = (void *)(v0 + 176);
  uint64_t v3 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v4 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v5 = *(void *)(v1 + 136);
    uint64_t v6 = *(void *)(v1 + 144);
    uint64_t v7 = *(void *)(v1 + 128);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v6, v7) == *MEMORY[0x263F90238])
    {
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v1 + 136) + 8))(*(void *)(v1 + 144), *(void *)(v1 + 128));
      uint64_t v8 = "";
    }
    os_signpost_type_t v2 = (void *)(v1 + 192);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v1 + 344);
    uint64_t v9 = *(void *)(v1 + 176);
    uint64_t v10 = *(void *)(v1 + 160);
    (*(void (**)(void, uint64_t, uint64_t))(v1 + 320))(*(void *)(v1 + 192), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v3, v4, v12, "BatchReadRequest", v8, v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);

    v29(v9, v10);
  }
  else
  {
  }
  uint64_t v13 = *(void **)(v1 + 368);
  (*(void (**)(void, void))(v1 + 344))(*v2, *(void *)(v1 + 160));
  *(void *)(v1 + 64) = v13;
  id v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
  if (swift_dynamicCast())
  {
    unint64_t v15 = *(void *)(v1 + 112);
    uint64_t v16 = *(void *)(v1 + 48);
    uint64_t v17 = *(void **)(v1 + 56);
    swift_bridgeObjectRetain();
    id v18 = v17;

    unint64_t v19 = sub_2519FA028(MEMORY[0x263F8EE78]);
    swift_bridgeObjectRetain();
    sub_251CC7C6C(v19, v15, v16);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v21 = sub_2519FA028(MEMORY[0x263F8EE78]);
  }
  uint64_t v22 = *(void *)(v1 + 224);
  *(void *)uint64_t v22 = v21;
  *(void *)(v22 + 8) = 0;
  *(unsigned char *)(v22 + 16) = 1;
  swift_storeEnumTagMultiPayload();
  unint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v1 + 384) = v23;
  *unint64_t v23 = v1;
  v23[1] = sub_251CC3604;
  uint64_t v24 = *(void *)(v1 + 256);
  uint64_t v25 = *(void *)(v1 + 224);
  uint64_t v27 = *(void *)(v1 + 96);
  uint64_t v26 = *(void *)(v1 + 104);
  return sub_251F2AD24(v24, v25, v26, v27, 0);
}

uint64_t sub_251CC3604()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  uint64_t v3 = *(void *)(*v0 + 224);
  swift_task_dealloc();
  sub_251CC8A50(v3, type metadata accessor for StateSnapshot.UpdateType);
  sub_251CC8A50(v2, type metadata accessor for StateSnapshot);
  uint64_t v4 = *(void *)(v1 + 280);
  uint64_t v5 = *(void *)(v1 + 272);
  return MEMORY[0x270FA2498](sub_251CC378C, v5, v4);
}

uint64_t sub_251CC378C()
{
  uint64_t v1 = *(void **)(v0 + 296);
  swift_release();
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t DataModel.fetchCharacteristicValue(for:characteristicsKindMap:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 64) = a4;
  *(void *)(v6 + 72) = v5;
  *(unsigned char *)(v6 + 200) = a5;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 56) = a3;
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 80) = sub_251F35C80();
  *(void *)(v6 + 88) = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  *(void *)(v6 + 96) = v8;
  *(void *)(v6 + 104) = v7;
  return MEMORY[0x270FA2498](sub_251CC3948, v8, v7);
}

uint64_t sub_251CC3948()
{
  uint64_t v1 = (void **)(v0[9] + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[14] = *v1;
  if (v2)
  {
    id v3 = v2;
    return MEMORY[0x270FA2498](sub_251CC3A64, 0, 0);
  }
  else
  {
    uint64_t v4 = v0[5];
    swift_release();
    uint64_t v5 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_251CC3A64()
{
  *(void *)(v0 + 120) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC3AF0, v2, v1);
}

uint64_t sub_251CC3AF0()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CC3B88, 0, 0);
}

uint64_t sub_251CC3B88()
{
  *(void *)(v0 + 128) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC3C14, v2, v1);
}

uint64_t sub_251CC3C14()
{
  swift_release();
  *(void *)(v0 + 136) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CC3C88, 0, 0);
}

uint64_t sub_251CC3C88()
{
  *(void *)(v0 + 144) = sub_251F34D50();
  *(void *)(v0 + 152) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC3D20, v2, v1);
}

uint64_t sub_251CC3D20()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (void *)v0[17];
  swift_release();
  v0[20] = objc_msgSend(v2, sel_homeFor_, v1);

  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  return MEMORY[0x270FA2498](sub_251CC3DAC, v3, v4);
}

uint64_t sub_251CC3DAC()
{
  if (*(void *)(v0 + 160))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_251CC3ED0;
    uint64_t v2 = *(void *)(v0 + 56);
    return sub_251CC42BC(v2);
  }
  else
  {

    uint64_t v4 = *(void *)(v0 + 40);
    swift_release();
    uint64_t v5 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_251CC3ED0(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = *(void *)(*v1 + 112);
  char v6 = *(unsigned char *)(*v1 + 200);
  uint64_t v7 = *v1;
  v4[22] = a1;
  swift_task_dealloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v4[23] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_251CC4070;
  uint64_t v9 = v3[20];
  uint64_t v10 = v3[8];
  uint64_t v11 = v3[5];
  return DataModel._fetchCharacteristicValue(home:homeManager:characteristics:timeout:)(v11, v9, v5, a1, v10, v6 & 1);
}

uint64_t sub_251CC4070()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_251CC4234;
  }
  else {
    uint64_t v5 = sub_251CC41AC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251CC41AC()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = (void *)v0[14];
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251CC4234()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = (void *)v0[14];
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251CC42BC(uint64_t a1)
{
  v1[3] = a1;
  long long v1[4] = *(void *)(type metadata accessor for StaticService() - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2240);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = sub_251F35C80();
  v1[9] = sub_251F35C70();
  uint64_t v3 = sub_251F35C00();
  v1[10] = v3;
  v1[11] = v2;
  return MEMORY[0x270FA2498](sub_251CC43F0, v3, v2);
}

uint64_t sub_251CC43F0()
{
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0()) {
    sub_251C0A680(MEMORY[0x263F8EE78]);
  }
  else {
    uint64_t v1 = MEMORY[0x263F8EE88];
  }
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  *(void *)(v0 + 16) = v1;
  char v4 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v0 + 176) = v4;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << v4;
  if (-(-1 << v4) < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v2 + 64);
  *(void *)(v0 + 96) = 0;
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = 0;
    unint64_t v9 = __clz(__rbit64(v7));
    uint64_t v10 = (v7 - 1) & v7;
LABEL_7:
    uint64_t v11 = *(void *)(v0 + 48);
    sub_251CC8980(*(void *)(v2 + 48) + *(void *)(v3 + 72) * v9, v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v12 = *(void *)(v2 + 56);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2248);
    *(void *)(v11 + *(int *)(v13 + 48)) = *(void *)(v12 + 8 * v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  unint64_t v14 = 63 - v6;
  if ((unint64_t)(63 - v6) <= 0x7F)
  {
    uint64_t v8 = 0;
  }
  else
  {
    unint64_t v15 = *(void *)(v2 + 72);
    if (v15)
    {
      uint64_t v8 = 1;
LABEL_11:
      uint64_t v10 = (v15 - 1) & v15;
      unint64_t v9 = __clz(__rbit64(v15)) + (v8 << 6);
      goto LABEL_7;
    }
    if (v14 < 0xC0)
    {
      uint64_t v8 = 1;
    }
    else
    {
      unint64_t v15 = *(void *)(v2 + 80);
      if (v15)
      {
        uint64_t v8 = 2;
        goto LABEL_11;
      }
      if (v14 < 0x100)
      {
        uint64_t v8 = 2;
      }
      else
      {
        unint64_t v15 = *(void *)(v2 + 88);
        if (v15)
        {
          uint64_t v8 = 3;
          goto LABEL_11;
        }
        if (v14 < 0x140)
        {
          uint64_t v8 = 3;
        }
        else
        {
          unint64_t v15 = *(void *)(v2 + 96);
          if (v15)
          {
            uint64_t v8 = 4;
            goto LABEL_11;
          }
          uint64_t v25 = 0;
          uint64_t v26 = v14 >> 6;
          uint64_t v27 = 5;
          if (v26 > 5) {
            uint64_t v27 = v26;
          }
          uint64_t v28 = v27 - 5;
          while (v28 != v25)
          {
            unint64_t v15 = *(void *)(v2 + 104 + 8 * v25++);
            if (v15)
            {
              uint64_t v8 = v25 + 4;
              goto LABEL_11;
            }
          }
          uint64_t v8 = v26 - 1;
        }
      }
    }
  }
  uint64_t v16 = *(void *)(v0 + 48);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2248);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v10 = 0;
LABEL_14:
  *(void *)(v0 + 104) = v8;
  *(void *)(v0 + 112) = v10;
  uint64_t v18 = *(void *)(v0 + 56);
  sub_251CC89E8(*(void *)(v0 + 48), v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2248);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19) == 1)
  {
    swift_release();
    swift_release();
    uint64_t v20 = *(void *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v21(v20);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 56);
    uint64_t v24 = *(void *)(v0 + 40);
    *(void *)(v0 + 120) = *(void *)(v23 + *(int *)(v19 + 48));
    sub_251C0ACDC(v23, v24, (uint64_t (*)(void))type metadata accessor for StaticService);
    return MEMORY[0x270FA2498](sub_251CC4798, 0, 0);
  }
}

uint64_t sub_251CC4798()
{
  *(void *)(v0 + 128) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC4824, v2, v1);
}

uint64_t sub_251CC4824()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CC48BC, 0, 0);
}

uint64_t sub_251CC48BC()
{
  *(void *)(v0 + 136) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC4948, v2, v1);
}

uint64_t sub_251CC4948()
{
  swift_release();
  *(void *)(v0 + 144) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CC49BC, 0, 0);
}

uint64_t sub_251CC49BC()
{
  *(void *)(v0 + 152) = sub_251F34D50();
  *(void *)(v0 + 160) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC4A54, v2, v1);
}

uint64_t sub_251CC4A54()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[18];
  swift_release();
  v0[21] = objc_msgSend(v2, sel_serviceFor_, v1);

  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  return MEMORY[0x270FA2498](sub_251CC4AE0, v3, v4);
}

uint64_t sub_251CC4AE0()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 40);
  id v5 = v1;
  sub_251CC7F8C(v2, (uint64_t)v1);

  sub_251CC8A50(v4, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v6 = (uint64_t (*)())swift_bridgeObjectRelease();
  int64_t v10 = *(void *)(v0 + 104);
  unint64_t v9 = *(void *)(v0 + 112);
  *(void *)(v0 + 96) = v3;
  if (v9)
  {
    uint64_t v11 = (v9 - 1) & v9;
    unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
    uint64_t v13 = *(void *)(v0 + 24);
LABEL_3:
    uint64_t v14 = *(void *)(v0 + 48);
    sub_251CC8980(*(void *)(v13 + 48) + *(void *)(*(void *)(v0 + 32) + 72) * v12, v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v15 = *(void *)(v13 + 56);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2248);
    *(void *)(v14 + *(int *)(v16 + 48)) = *(void *)(v15 + 8 * v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 0, 1, v16);
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  int64_t v17 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  int64_t v18 = (unint64_t)((1 << *(unsigned char *)(v0 + 176)) + 63) >> 6;
  if (v17 < v18)
  {
    uint64_t v13 = *(void *)(v0 + 24);
    uint64_t v19 = v13 + 64;
    unint64_t v20 = *(void *)(v13 + 64 + 8 * v17);
    if (v20)
    {
LABEL_7:
      uint64_t v11 = (v20 - 1) & v20;
      unint64_t v12 = __clz(__rbit64(v20)) + (v17 << 6);
      int64_t v10 = v17;
      goto LABEL_3;
    }
    int64_t v21 = v10 + 2;
    ++v10;
    if (v17 + 1 < v18)
    {
      unint64_t v20 = *(void *)(v19 + 8 * v21);
      if (v20)
      {
LABEL_10:
        int64_t v17 = v21;
        goto LABEL_7;
      }
      int64_t v10 = v17 + 1;
      if (v17 + 2 < v18)
      {
        unint64_t v20 = *(void *)(v19 + 8 * (v17 + 2));
        if (v20)
        {
          v17 += 2;
          goto LABEL_7;
        }
        int64_t v21 = v17 + 3;
        int64_t v10 = v17 + 2;
        if (v17 + 3 < v18)
        {
          unint64_t v20 = *(void *)(v19 + 8 * v21);
          if (v20) {
            goto LABEL_10;
          }
          while (1)
          {
            int64_t v17 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              break;
            }
            if (v17 >= v18)
            {
              int64_t v10 = v18 - 1;
              goto LABEL_21;
            }
            unint64_t v20 = *(void *)(v19 + 8 * v17);
            ++v21;
            if (v20) {
              goto LABEL_7;
            }
          }
LABEL_30:
          __break(1u);
          return MEMORY[0x270FA2498](v6, v7, v8);
        }
      }
    }
  }
LABEL_21:
  uint64_t v22 = *(void *)(v0 + 48);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2248);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v11 = 0;
LABEL_22:
  *(void *)(v0 + 104) = v10;
  *(void *)(v0 + 112) = v11;
  uint64_t v24 = *(void *)(v0 + 56);
  sub_251CC89E8(*(void *)(v0 + 48), v24);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2248);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) != 1)
  {
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v30 = *(void *)(v0 + 40);
    *(void *)(v0 + 120) = *(void *)(v29 + *(int *)(v25 + 48));
    sub_251C0ACDC(v29, v30, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v6 = sub_251CC4798;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
  swift_release();
  swift_release();
  uint64_t v26 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v27(v26);
}

uint64_t DataModel.fetchProfileContent(for:profileBags:profileKind:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  *(void *)(v5 + 136) = a3;
  *(void *)(v5 + 144) = v4;
  *(void *)(v5 + 120) = a1;
  *(void *)(v5 + 128) = a2;
  *(void *)(v5 + 152) = *(void *)(type metadata accessor for StaticLightProfile() - 8);
  *(void *)(v5 + 160) = swift_task_alloc();
  *(void *)(v5 + 168) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(void *)(v5 + 176) = swift_task_alloc();
  *(unsigned char *)(v5 + 296) = *a4;
  *(void *)(v5 + 184) = sub_251F35C80();
  *(void *)(v5 + 192) = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  *(void *)(v5 + 200) = v8;
  *(void *)(v5 + 208) = v7;
  return MEMORY[0x270FA2498](sub_251CC4FB8, v8, v7);
}

uint64_t sub_251CC4FB8()
{
  uint64_t v1 = (void **)(v0[18] + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[27] = *v1;
  if (v2)
  {
    id v3 = v2;
    return MEMORY[0x270FA2498](sub_251CC50E8, 0, 0);
  }
  else
  {
    uint64_t v4 = v0[15];
    swift_release();
    uint64_t v5 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_251CC50E8()
{
  *(void *)(v0 + 224) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC5174, v2, v1);
}

uint64_t sub_251CC5174()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CC520C, 0, 0);
}

uint64_t sub_251CC520C()
{
  *(void *)(v0 + 232) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC5298, v2, v1);
}

uint64_t sub_251CC5298()
{
  swift_release();
  *(void *)(v0 + 240) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CC530C, 0, 0);
}

uint64_t sub_251CC530C()
{
  *(void *)(v0 + 248) = sub_251F34D50();
  *(void *)(v0 + 256) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CC53A4, v2, v1);
}

uint64_t sub_251CC53A4()
{
  uint64_t v1 = (void *)v0[31];
  uint64_t v2 = (void *)v0[30];
  swift_release();
  v0[33] = objc_msgSend(v2, sel_homeFor_, v1);

  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  return MEMORY[0x270FA2498](sub_251CC5430, v3, v4);
}

uint64_t sub_251CC5430()
{
  if (!v0[33])
  {

    uint64_t v16 = v0[15];
    swift_release();
    uint64_t v17 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
LABEL_31:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = (uint64_t (*)(void))v0[1];
    return v46();
  }
  char v1 = *((unsigned char *)v0 + 296);
  uint64_t v2 = MEMORY[0x263F8EE78];
  v0[13] = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v3 = v0;
    uint64_t v4 = v0[18];
    swift_release();
    swift_getKeyPath();
    v3[14] = v4;
    sub_251AD2C08();
    sub_251F34F10();
    swift_release();
    uint64_t v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots);
    swift_beginAccess();
    uint64_t v6 = *v5;
    if (*(void *)(v6 + 16))
    {
      uint64_t v7 = v3[16];
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_2519FE584(v7);
      uint64_t v9 = v3[15];
      if (v10)
      {
        unint64_t v11 = v8;
        uint64_t v12 = *(void *)(v6 + 56);
        uint64_t v13 = type metadata accessor for StateSnapshot(0);
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = v12 + *(void *)(v14 + 72) * v11;
        uint64_t v0 = v48;
        sub_251CC8980(v15, v9, type metadata accessor for StateSnapshot);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
      }
      else
      {
        uint64_t v0 = v3;
        uint64_t v44 = type metadata accessor for StateSnapshot(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v9, 1, 1, v44);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = v3[15];
      uint64_t v39 = type metadata accessor for StateSnapshot(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
      uint64_t v0 = v3;
    }
    uint64_t v45 = (void *)v0[27];

    goto LABEL_31;
  }
  uint64_t v18 = v0[17];
  uint64_t v51 = v2;
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v20 = v18 + 32;
    swift_bridgeObjectRetain();
    do
    {
      v20 += 16;
      uint64_t v21 = swift_bridgeObjectRetain();
      sub_251ED6D48(v21);
      --v19;
    }
    while (v19);
    uint64_t v22 = v48;
    swift_bridgeObjectRelease();
    uint64_t v2 = v51;
    uint64_t v23 = *(void *)(v51 + 16);
    if (v23)
    {
LABEL_11:
      uint64_t v24 = v22[19];
      uint64_t v25 = v2 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      uint64_t v26 = *(void *)(v24 + 72);
      swift_bridgeObjectRetain();
      unint64_t v49 = MEMORY[0x263F8EE78];
      uint64_t v47 = v26;
      do
      {
        uint64_t v27 = v22[20];
        sub_251CC8980(v25, v27, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
        uint64_t v28 = sub_251F34DA0();
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v30 = swift_task_alloc();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v31 = swift_task_alloc();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v31, v27, v28);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v28);
        sub_251CC8A50(v27, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v28) == 1)
        {
          sub_251B55B48(v31);
        }
        else
        {
          unint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
          v32(v30, v31, v28);
          swift_task_dealloc();
          uint64_t v33 = swift_task_alloc();
          v32(v33, v30, v28);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v34 = v49;
          }
          else {
            unint64_t v34 = sub_251F0F4DC(0, *(void *)(v49 + 16) + 1, 1, v49);
          }
          unint64_t v36 = *(void *)(v34 + 16);
          unint64_t v35 = *(void *)(v34 + 24);
          if (v36 >= v35 >> 1) {
            unint64_t v34 = sub_251F0F4DC(v35 > 1, v36 + 1, 1, v34);
          }
          *(void *)(v34 + 16) = v36 + 1;
          unint64_t v49 = v34;
          v32(v34+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v36, v33, v28);
          uint64_t v26 = v47;
          uint64_t v22 = v48;
        }
        swift_task_dealloc();
        swift_task_dealloc();
        v25 += v26;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      uint64_t v37 = v49;
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v22 = v48;
    uint64_t v23 = *(void *)(v2 + 16);
    if (v23) {
      goto LABEL_11;
    }
  }
  uint64_t v37 = MEMORY[0x263F8EE78];
LABEL_25:
  sub_251ED7700(v37);
  v22[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D9E0);
  uint64_t v40 = sub_251A1E590((unint64_t *)&qword_269B9D9E8, &qword_269B9D9E0);
  void v22[2] = v2;
  v22[6] = v40;
  uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B9F9F0 + dword_269B9F9F0);
  uint64_t v41 = (void *)swift_task_alloc();
  v22[34] = v41;
  *uint64_t v41 = v22;
  v41[1] = sub_251CC5AEC;
  uint64_t v42 = v22[16];
  return v50(v42, (uint64_t)(v22 + 2));
}

uint64_t sub_251CC5AEC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_251CC5FB8;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_251CC5C10;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251CC5C10()
{
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[16];
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298) + 48);
  uint64_t v5 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v2, v3, v5);
  uint64_t v6 = sub_251EE04F8(v0[13]);
  swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = v6;
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[36] = (uint64_t)v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251CC5D88;
  uint64_t v8 = v0[33];
  uint64_t v9 = v0[22];
  uint64_t v10 = v0[15];
  return sub_251F2AD24(v10, v9, v1, v8, 0);
}

uint64_t sub_251CC5D88()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 176);
  swift_task_dealloc();
  sub_251CC8A50(v2, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v3 = *(void *)(v1 + 208);
  uint64_t v4 = *(void *)(v1 + 200);
  return MEMORY[0x270FA2498](sub_251CC5EE0, v4, v3);
}

uint64_t sub_251CC5EE0()
{
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 120);

  swift_release();
  uint64_t v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_251CC5FB8()
{
  uint64_t v1 = *(void **)(v0 + 216);

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251CC6064@<X0>(id *a1@<X0>, unint64_t *a2@<X1>, void *a3@<X8>)
{
  id v4 = objc_msgSend(*a1, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v5 = sub_251F35AC0();

  unint64_t v6 = v5;
  uint64_t v110 = MEMORY[0x263F8EE78];
  uint64_t v93 = (uint64_t)a2;
  unint64_t v97 = v5;
  if (v5 >> 62) {
    goto LABEL_98;
  }
  uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_251CC8280((uint64_t)a2);
  swift_bridgeObjectRetain();
  uint64_t v8 = v7;
  if (!v7)
  {
LABEL_99:
    swift_bridgeObjectRelease_n();
    uint64_t v87 = MEMORY[0x263F8EE78];
    goto LABEL_100;
  }
LABEL_3:
  unint64_t v9 = 0;
  unint64_t v96 = v6 & 0xC000000000000001;
  uint64_t v113 = *(void *)(v93 + 16);
  unint64_t v90 = v6 + 32;
  uint64_t v91 = v6 & 0xFFFFFFFFFFFFFF8;
  double v92 = (char *)(v113 + 32);
  uint64_t v94 = v8;
  uint64_t v95 = *(void *)(v113 + 16);
  do
  {
    if (v96)
    {
      unint64_t v10 = v6;
      unint64_t v11 = v9;
      id v12 = (id)MEMORY[0x2533AB3A0](v9, v10);
    }
    else
    {
      if (v9 >= *(void *)(v91 + 16)) {
        goto LABEL_97;
      }
      unint64_t v11 = v9;
      id v12 = *(id *)(v90 + 8 * v9);
    }
    id v104 = v12;
    BOOL v13 = __OFADD__(v11, 1);
    unint64_t v14 = v11 + 1;
    if (v13) {
      goto LABEL_96;
    }
    unint64_t v98 = v14;
    swift_bridgeObjectRetain();
    id v15 = objc_msgSend(v104, sel_serviceType);
    a2 = (unint64_t *)sub_251F356F0();
    uint64_t v17 = v16;

    v18._countAndFlagsBits = (uint64_t)a2;
    v18._object = v17;
    ServiceKind.init(rawValue:)(v18);
    if (v109 == 53) {
      char v19 = 0;
    }
    else {
      char v19 = v109;
    }
    uint64_t v20 = v95;
    if (!v95)
    {
      sub_251CC8954((uint64_t)&v113);

      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = v92;
    while (1)
    {
      char v22 = *v21++;
      LOBYTE(v109) = v22;
      LOBYTE(v107) = v19;
      unint64_t v23 = ServiceKind.rawValue.getter();
      uint64_t v25 = v24;
      a2 = (unint64_t *)&v107;
      if (v23 == ServiceKind.rawValue.getter() && v25 == v26) {
        break;
      }
      a2 = v26;
      char v28 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_24;
      }
      if (!--v20)
      {
        sub_251CC8954((uint64_t)&v113);
        uint64_t v29 = &v113;
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_24:
    sub_251CC8954((uint64_t)&v113);
    sub_251CC8954((uint64_t)&v113);
    uint64_t v30 = v93;
    uint64_t v31 = *(void *)(v93 + 24);
    v112[0] = v31;
    uint64_t v32 = *(void *)(v31 + 16);
    if (!v32) {
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    uint64_t v33 = (unint64_t *)objc_msgSend(v104, sel_associatedServiceType);
    if (v33)
    {
      a2 = v33;
      uint64_t v34 = sub_251F356F0();
      unint64_t v36 = v35;

      v37._countAndFlagsBits = v34;
      v37._object = v36;
      ServiceKind.init(rawValue:)(v37);
      if (v109 == 53) {
        char v38 = 0;
      }
      else {
        char v38 = v109;
      }
    }
    else
    {
      char v38 = 0;
    }
    uint64_t v39 = v31 + 32;
    swift_bridgeObjectRetain();
    uint64_t v40 = 0;
    do
    {
      uint64_t v41 = v40 + 1;
      if (__OFADD__(v40, 1)) {
        goto LABEL_95;
      }
      LOBYTE(v109) = *(unsigned char *)(v39 + v40);
      LOBYTE(v107) = v38;
      unint64_t v42 = ServiceKind.rawValue.getter();
      uint64_t v44 = v43;
      unint64_t v45 = ServiceKind.rawValue.getter();
      a2 = v46;
      if (v42 == v45 && v44 == v46)
      {
        swift_bridgeObjectRelease_n();
LABEL_39:
        sub_251CC8954((uint64_t)v112);
        sub_251CC8954((uint64_t)v112);
        uint64_t v30 = v93;
LABEL_40:
        uint64_t v48 = *(void *)(v30 + 32);
        uint64_t v111 = v48;
        unint64_t v49 = MEMORY[0x263F8EE78];
        unint64_t v109 = MEMORY[0x263F8EE78];
        uint64_t v101 = *(void *)(v48 + 16);
        if (!v101)
        {
          swift_bridgeObjectRetain();
          unint64_t v71 = v49;
LABEL_66:
          sub_251CC8954((uint64_t)&v111);
          unint64_t v109 = v49;
          if (!(v71 >> 62))
          {
            uint64_t v72 = *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v72) {
              goto LABEL_68;
            }
LABEL_88:

            swift_bridgeObjectRelease();
            a2 = (unint64_t *)&v110;
            sub_251ED584C(v49);
            goto LABEL_5;
          }
          swift_bridgeObjectRetain();
          uint64_t v72 = sub_251F366C0();
          swift_bridgeObjectRelease();
          if (!v72) {
            goto LABEL_88;
          }
LABEL_68:
          unint64_t v73 = 0;
          uint64_t v102 = v71 & 0xFFFFFFFFFFFFFF8;
          unint64_t v103 = v71 & 0xC000000000000001;
          while (2)
          {
            if (v103)
            {
              id v74 = (id)MEMORY[0x2533AB3A0](v73, v71);
            }
            else
            {
              if (v73 >= *(void *)(v102 + 16)) {
                goto LABEL_93;
              }
              id v74 = *(id *)(v71 + 8 * v73 + 32);
            }
            id v75 = v74;
            unint64_t v76 = v73 + 1;
            if (__OFADD__(v73, 1)) {
              goto LABEL_94;
            }
            uint64_t v77 = (unint64_t *)objc_msgSend(v74, sel_service);
            if (v77)
            {
              a2 = v77;
              id v106 = v75;
              id v78 = objc_msgSend(v77, sel_applicationData);
              uint64_t v79 = (void *)sub_251F356C0();
              id v80 = objc_msgSend(v78, sel_objectForKeyedSubscript_, v79);

              id v81 = objc_msgSend(a2, sel_accessory);
              if (v81)
              {
                BOOL v82 = v81;
                id v83 = objc_msgSend(v81, sel_applicationData);
                uint64_t v84 = v72;
                unint64_t v85 = v71;
                unint64_t v86 = (void *)sub_251F356C0();
                id v100 = objc_msgSend(v83, sel_objectForKeyedSubscript_, v86);

                unint64_t v71 = v85;
                uint64_t v72 = v84;

                if (v80)
                {
                  id v107 = v80;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
                  if ((swift_dynamicCast() & 1) != 0 && (v108 & 1) == 0)
                  {

                    swift_unknownObjectRelease();
LABEL_71:
                    ++v73;
                    if (v76 == v72)
                    {
                      unint64_t v49 = v109;
                      goto LABEL_88;
                    }
                    continue;
                  }
                }
                if (v100)
                {
                  id v107 = v100;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
                  if (swift_dynamicCast())
                  {
                    if ((v108 & 1) == 0)
                    {

                      goto LABEL_71;
                    }
                  }
                }
              }
              else
              {

                swift_unknownObjectRelease();
              }
            }
            break;
          }
          a2 = &v109;
          sub_251F364F0();
          sub_251F36530();
          sub_251F36540();
          sub_251F36500();
          goto LABEL_71;
        }
        uint64_t v99 = v48 + 32;
        swift_bridgeObjectRetain_n();
        uint64_t v50 = 0;
        uint64_t v51 = v104;
LABEL_44:
        char v105 = *(unsigned char *)(v99 + v50);
        a2 = (unint64_t *)objc_msgSend(v51, sel_characteristics);
        sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
        unint64_t v52 = sub_251F35AC0();

        if (v52 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v53 = sub_251F366C0();
          if (!v53)
          {
LABEL_42:
            swift_bridgeObjectRelease_n();
            goto LABEL_43;
          }
        }
        else
        {
          uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v53) {
            goto LABEL_42;
          }
        }
        uint64_t v54 = 4;
        while (1)
        {
          a2 = (unint64_t *)(v54 - 4);
          id v55 = (v52 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x2533AB3A0](v54 - 4, v52)
              : *(id *)(v52 + 8 * v54);
          uint64_t v56 = v55;
          uint64_t v57 = v54 - 3;
          if (__OFADD__(a2, 1)) {
            break;
          }
          id v58 = objc_msgSend(v55, sel_characteristicType);
          uint64_t v59 = sub_251F356F0();
          id v61 = v60;

          v62._countAndFlagsBits = v59;
          v62._object = v61;
          CharacteristicKind.init(rawValue:)(v62);
          char v63 = (char)v107;
          if (v107 == 174) {
            char v63 = 0;
          }
          LOBYTE(v107) = v63;
          char v108 = v105;
          unint64_t v64 = CharacteristicKind.rawValue.getter();
          unint64_t v66 = v65;
          unint64_t v67 = CharacteristicKind.rawValue.getter();
          a2 = v68;
          if (v64 == v67 && v66 == v68)
          {
            swift_bridgeObjectRelease_n();
LABEL_59:
            uint64_t v70 = swift_bridgeObjectRelease_n();
            a2 = &v109;
            MEMORY[0x2533AA9D0](v70);
            if (*(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_251F35B10();
            }
            sub_251F35B70();
            sub_251F35AE0();
LABEL_43:
            ++v50;
            uint64_t v51 = v104;
            if (v50 == v101)
            {
              sub_251CC8954((uint64_t)&v111);
              unint64_t v71 = v109;
              unint64_t v49 = MEMORY[0x263F8EE78];
              goto LABEL_66;
            }
            goto LABEL_44;
          }
          char v69 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v69) {
            goto LABEL_59;
          }

          ++v54;
          if (v57 == v53) {
            goto LABEL_42;
          }
        }
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        sub_251CC8280((uint64_t)a2);
        swift_bridgeObjectRetain();
        unint64_t v6 = v97;
        uint64_t v8 = sub_251F366C0();
        if (!v8) {
          goto LABEL_99;
        }
        goto LABEL_3;
      }
      char v47 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v47) {
        goto LABEL_39;
      }
      ++v40;
    }
    while (v41 != v32);
    sub_251CC8954((uint64_t)v112);
    uint64_t v29 = v112;
LABEL_37:
    sub_251CC8954((uint64_t)v29);

LABEL_5:
    unint64_t v6 = v97;
    unint64_t v9 = v98;
  }
  while (v98 != v94);
  swift_bridgeObjectRelease_n();
  uint64_t v87 = v110;
LABEL_100:
  uint64_t result = sub_251CC82D4(v93);
  *a3 = v87;
  return result;
}

void DataModel.characteristics(matching:from:)(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v4;
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 48) = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_251CC8280((uint64_t)v7);
  sub_251EDF240(a2, (uint64_t)sub_251CC894C, v5);
}

uint64_t sub_251CC6A80(id *a1, uint64_t a2)
{
  uint64_t result = (uint64_t)objc_msgSend(*a1, sel_service);
  if (result)
  {
    long long v4 = (void *)result;
    uint64_t v34 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    id v5 = objc_msgSend(v4, sel_serviceType);
    uint64_t v6 = sub_251F356F0();
    uint64_t v8 = v7;

    v9._countAndFlagsBits = v6;
    v9._object = v8;
    ServiceKind.init(rawValue:)(v9);
    uint64_t v10 = *(void *)(v34 + 16);
    if (v10)
    {
      unint64_t v11 = (char *)(v34 + 32);
      swift_bridgeObjectRetain();
      while (1)
      {
        char v12 = *v11++;
        LOBYTE(v33) = v12;
        unint64_t v13 = ServiceKind.rawValue.getter();
        uint64_t v15 = v14;
        if (v13 == ServiceKind.rawValue.getter() && v15 == v16) {
          break;
        }
        char v18 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_14;
        }
        if (!--v10)
        {
          sub_251CC8954((uint64_t)&v34);
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_14:
      sub_251CC8954((uint64_t)&v34);
      sub_251CC8954((uint64_t)&v34);
      uint64_t v33 = *(void *)(a2 + 24);
      uint64_t v19 = *(void *)(v33 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain();
        id v20 = objc_msgSend(v4, sel_associatedServiceType);
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = sub_251F356F0();
          uint64_t v24 = v23;

          v25._countAndFlagsBits = v22;
          v25._object = v24;
          ServiceKind.init(rawValue:)(v25);
        }
        uint64_t result = swift_bridgeObjectRetain();
        for (uint64_t i = 0; ; ++i)
        {
          uint64_t v27 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          unint64_t v28 = ServiceKind.rawValue.getter();
          uint64_t v30 = v29;
          if (v28 == ServiceKind.rawValue.getter() && v30 == v31)
          {
            swift_bridgeObjectRelease_n();
LABEL_26:
            sub_251CC8954((uint64_t)&v33);

            sub_251CC8954((uint64_t)&v33);
            return 1;
          }
          char v32 = sub_251F36B10();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v32) {
            goto LABEL_26;
          }
          if (v27 == v19)
          {
            sub_251CC8954((uint64_t)&v33);

            sub_251CC8954((uint64_t)&v33);
            return 0;
          }
        }
        __break(1u);
      }
      else
      {

        return 1;
      }
    }
    else
    {
LABEL_11:
      sub_251CC8954((uint64_t)&v34);

      return 0;
    }
  }
  return result;
}

id sub_251CC6D38()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A28]), sel_init);
  id result = objc_msgSend(v0, sel_setFormatWidth_, 4);
  qword_269BA21F0 = (uint64_t)v0;
  return result;
}

uint64_t sub_251CC6D88(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_251ECE8D4();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_251CC6E04(v6);
  return sub_251F36500();
}

uint64_t sub_251CC6E04(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_150;
    }
    if (v3) {
      return sub_251CC76D0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_158;
  }
  uint64_t v120 = result;
  uint64_t v117 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    uint64_t v133 = MEMORY[0x263F8EE78];
    uint64_t v128 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_116:
      if (v11 >= 2)
      {
        uint64_t v111 = *v117;
        do
        {
          unint64_t v112 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_145;
          }
          if (!v111) {
            goto LABEL_157;
          }
          uint64_t v113 = *(void *)&v8[16 * v112 + 32];
          uint64_t v114 = *(void *)&v8[16 * v11 + 24];
          sub_251CC7854((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(void *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1) {
            break;
          }
          if (v114 < v113) {
            goto LABEL_146;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_251ECDC38((uint64_t)v8);
          }
          if (v112 >= *((void *)v8 + 2)) {
            goto LABEL_147;
          }
          double v115 = &v8[16 * v112 + 32];
          *(void *)double v115 = v113;
          *((void *)v115 + 1) = v114;
          unint64_t v116 = *((void *)v8 + 2);
          if (v11 > v116) {
            goto LABEL_148;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((void *)v8 + 2) = v116 - 1;
          unint64_t v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_251F35AE0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    uint64_t v7 = sub_251F35B50();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v133 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v118 = *a1 + 16;
  uint64_t v119 = *a1 - 8;
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  uint64_t v125 = v3;
  uint64_t v129 = *a1;
  while (2)
  {
    uint64_t v12 = v9 + 1;
    uint64_t v124 = v9;
    if (v9 + 1 >= v3) {
      goto LABEL_45;
    }
    uint64_t v121 = v8;
    unint64_t v13 = *(void **)(v10 + 8 * v9);
    id v14 = *(id *)(v10 + 8 * v12);
    id v15 = v13;
    id v16 = objc_msgSend(v14, sel_description);
    uint64_t v17 = sub_251F356F0();
    uint64_t v19 = v18;

    id v20 = objc_msgSend(v15, sel_description);
    uint64_t v21 = sub_251F356F0();
    uint64_t v23 = v22;

    if (v17 == v21 && v19 == v23) {
      int v126 = 0;
    }
    else {
      int v126 = sub_251F36B10();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v12 = v9 + 2;
    uint64_t v3 = v125;
    if (v9 + 2 >= v125) {
      goto LABEL_36;
    }
    Swift::String v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      uint64_t v130 = v12;
      uint64_t v27 = *(v25 - 1);
      id v28 = *v25;
      id v29 = v27;
      id v30 = objc_msgSend(v28, sel_description);
      uint64_t v31 = sub_251F356F0();
      uint64_t v33 = v32;

      id v34 = objc_msgSend(v29, sel_description);
      uint64_t v35 = sub_251F356F0();
      uint64_t v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if (v126)
        {
          uint64_t v8 = v121;
          uint64_t v9 = v124;
          uint64_t v3 = v125;
          uint64_t v10 = v129;
          uint64_t v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      int v26 = sub_251F36B10();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v126 ^ v26)) {
        break;
      }
LABEL_25:
      uint64_t v12 = v130 + 1;
      ++v25;
      uint64_t v3 = v125;
      if (v125 == v130 + 1)
      {
        uint64_t v12 = v125;
        goto LABEL_35;
      }
    }
    uint64_t v3 = v125;
    uint64_t v12 = v130;
LABEL_35:
    uint64_t v9 = v124;
LABEL_36:
    uint64_t v8 = v121;
    uint64_t v10 = v129;
    if (v126)
    {
LABEL_37:
      if (v12 < v9) {
        goto LABEL_151;
      }
      if (v9 < v12)
      {
        uint64_t v39 = (uint64_t *)(v119 + 8 * v12);
        uint64_t v40 = v12;
        uint64_t v41 = v9;
        unint64_t v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10) {
              goto LABEL_156;
            }
            uint64_t v43 = *v42;
            *unint64_t v42 = *v39;
            uint64_t *v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3) {
      goto LABEL_68;
    }
    if (__OFSUB__(v12, v9)) {
      goto LABEL_149;
    }
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9) {
        goto LABEL_144;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_251ECD5C4(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v63 = *((void *)v8 + 2);
      unint64_t v62 = *((void *)v8 + 3);
      unint64_t v11 = v63 + 1;
      if (v63 >= v62 >> 1) {
        uint64_t v8 = sub_251ECD5C4((char *)(v62 > 1), v63 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v11;
      unint64_t v64 = v8 + 32;
      uint64_t v65 = &v8[16 * v63 + 32];
      *(void *)uint64_t v65 = v9;
      *((void *)v65 + 1) = v12;
      uint64_t v132 = v12;
      if (!v63)
      {
        unint64_t v11 = 1;
LABEL_14:
        uint64_t v3 = v125;
        uint64_t v9 = v132;
        if (v132 >= v125) {
          goto LABEL_116;
        }
        continue;
      }
      while (1)
      {
        unint64_t v66 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v71 = &v64[16 * v11];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_133;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_134;
          }
          unint64_t v78 = v11 - 2;
          uint64_t v79 = &v64[16 * v11 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_136;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_139;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_143;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v95 = *((void *)v8 + 4);
            uint64_t v96 = *((void *)v8 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_99;
          }
          uint64_t v68 = *((void *)v8 + 4);
          uint64_t v67 = *((void *)v8 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_135;
        }
        unint64_t v78 = v11 - 2;
        uint64_t v84 = &v64[16 * v11 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_138;
        }
        unint64_t v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_141;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_142;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_105:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v89) {
          goto LABEL_137;
        }
        unint64_t v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_140;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_107:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10) {
          goto LABEL_155;
        }
        id v106 = &v64[16 * v105];
        uint64_t v107 = *(void *)v106;
        char v108 = &v64[16 * v66];
        uint64_t v109 = *((void *)v108 + 1);
        sub_251CC7854((void **)(v10 + 8 * *(void *)v106), (id *)(v10 + 8 * *(void *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1) {
          goto LABEL_127;
        }
        if (v109 < v107) {
          goto LABEL_130;
        }
        if (v66 > *((void *)v8 + 2)) {
          goto LABEL_131;
        }
        *(void *)id v106 = v107;
        *(void *)&v64[16 * v105 + 8] = v109;
        unint64_t v110 = *((void *)v8 + 2);
        if (v66 >= v110) {
          goto LABEL_132;
        }
        unint64_t v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((void *)v8 + 2) = v110 - 1;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    break;
  }
  if (__OFADD__(v9, v120)) {
    goto LABEL_152;
  }
  if (v9 + v120 >= v3) {
    uint64_t v44 = v3;
  }
  else {
    uint64_t v44 = v9 + v120;
  }
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      uint64_t v122 = v8;
      uint64_t v123 = v44;
      uint64_t v45 = v119 + 8 * v12;
      do
      {
        char v47 = *(void **)(v10 + 8 * v12);
        uint64_t v127 = v45;
        uint64_t v131 = v12;
        while (1)
        {
          uint64_t v48 = *(void **)v45;
          id v49 = v47;
          id v50 = v48;
          id v51 = objc_msgSend(v49, sel_description);
          uint64_t v52 = sub_251F356F0();
          uint64_t v54 = v53;

          id v55 = objc_msgSend(v50, sel_description);
          uint64_t v56 = sub_251F356F0();
          uint64_t v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v10 = v129;
            uint64_t v46 = v131;
            goto LABEL_56;
          }
          char v60 = sub_251F36B10();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = v129;
          if ((v60 & 1) == 0) {
            break;
          }
          if (!v129) {
            goto LABEL_154;
          }
          id v61 = *(void **)v45;
          char v47 = *(void **)(v45 + 8);
          *(void *)uint64_t v45 = v47;
          *(void *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          uint64_t v46 = v131;
          if (v131 == v9) {
            goto LABEL_56;
          }
        }
        uint64_t v46 = v131;
LABEL_56:
        uint64_t v12 = v46 + 1;
        uint64_t v45 = v127 + 8;
        uint64_t v9 = v124;
      }
      while (v12 != v123);
      uint64_t v12 = v123;
      uint64_t v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251CC76D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v23 = result;
  if (a3 != a2)
  {
    uint64_t v25 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v6 = *(void **)(v25 + 8 * a3);
    uint64_t v7 = v23;
    uint64_t v24 = v4;
    uint64_t v26 = a3;
    while (1)
    {
      uint64_t v8 = *(void **)v4;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_description);
      uint64_t v12 = sub_251F356F0();
      uint64_t v14 = v13;

      id v15 = objc_msgSend(v10, sel_description);
      uint64_t v16 = sub_251F356F0();
      uint64_t v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        uint64_t v4 = v24 + 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v20 = sub_251F36B10();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = v26;
      if ((v20 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v25) {
        break;
      }
      uint64_t v21 = *(void **)v4;
      uint64_t v6 = *(void **)(v4 + 8);
      *(void *)uint64_t v4 = v6;
      *(void *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251CC7854(void **__src, id *a2, id *a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  id v61 = __src;
  char v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    id v51 = v4;
    uint64_t v31 = &v4[v13];
    uint64_t v59 = v31;
    id v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_251ECD7AC(&v61, &v60, &v59);
      return 1;
    }
    uint64_t v32 = v6;
    uint64_t v56 = v7;
    while (1)
    {
      uint64_t v52 = v31;
      uint64_t v54 = v6;
      uint64_t v58 = v5;
      id v34 = *--v31;
      uint64_t v33 = v34;
      uint64_t v35 = *--v32;
      id v36 = v33;
      id v37 = v35;
      id v38 = objc_msgSend(v36, sel_description);
      uint64_t v39 = sub_251F356F0();
      uint64_t v41 = v40;

      id v42 = objc_msgSend(v37, sel_description);
      uint64_t v43 = sub_251F356F0();
      uint64_t v45 = v44;

      if (v39 == v43 && v41 == v45) {
        break;
      }
      char v47 = sub_251F36B10();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = v58;
      uint64_t v5 = v58 - 1;
      if ((v47 & 1) == 0) {
        goto LABEL_46;
      }
      unint64_t v49 = (unint64_t)v56;
      uint64_t v31 = v52;
      if (v58 != v54 || v5 >= v54) {
        *uint64_t v5 = *v32;
      }
      id v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        uint64_t v6 = v32;
        if (v31 > v51) {
          continue;
        }
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v48 = v58;
    uint64_t v5 = v58 - 1;
LABEL_46:
    uint64_t v32 = v54;
    unint64_t v49 = (unint64_t)v56;
    uint64_t v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52) {
      *uint64_t v5 = *v31;
    }
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v53 = &v4[v10];
    uint64_t v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      uint64_t v57 = v5;
      while (1)
      {
        id v55 = v7;
        uint64_t v14 = v6;
        id v15 = *v4;
        id v16 = *v6;
        id v17 = v15;
        id v18 = objc_msgSend(v16, sel_description);
        uint64_t v19 = sub_251F356F0();
        uint64_t v21 = v20;

        id v22 = objc_msgSend(v17, sel_description);
        uint64_t v23 = sub_251F356F0();
        uint64_t v25 = v24;

        if (v19 == v23 && v21 == v25) {
          break;
        }
        char v27 = sub_251F36B10();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0) {
          goto LABEL_23;
        }
        id v28 = v14 + 1;
        id v29 = v55;
        id v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14) {
          uint64_t *v55 = *v14;
        }
LABEL_26:
        uint64_t v7 = v29 + 1;
        if (v4 < v53)
        {
          uint64_t v6 = v28;
          if (v28 < v30) {
            continue;
          }
        }
        id v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      id v29 = v55;
      id v30 = v57;
      if (v55 != v4) {
        uint64_t *v55 = *v4;
      }
      char v60 = ++v4;
      id v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

void sub_251CC7C6C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v6 = a2;
  uint64_t v24 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    sub_251AD2B44();
    sub_251F35E90();
    unint64_t v6 = (unint64_t)v23[1];
    id v22 = v23[2];
    uint64_t v7 = v23[3];
    int64_t v8 = (char *)v23[4];
    unint64_t v9 = (unint64_t)v23[5];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
    id v22 = (void *)(a2 + 56);
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)v11;
    int64_t v8 = 0;
  }
  int64_t v21 = ((unint64_t)v7 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_251F36340()) {
    goto LABEL_35;
  }
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v14 = v23[0];
  swift_unknownObjectRelease();
  int64_t v15 = (int64_t)v8;
  uint64_t v16 = v9;
  if (!v14) {
    goto LABEL_35;
  }
  while (1)
  {
    v23[0] = v14;
    sub_251AD41A8(&v24, v23, a3);
    if (v4)
    {

      swift_bridgeObjectRelease();
      sub_251A1E630();
      return;
    }

    int64_t v8 = (char *)v15;
    unint64_t v9 = v16;
    if ((v6 & 0x8000000000000000) != 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v9) {
      break;
    }
    uint64_t v16 = (v9 - 1) & v9;
    unint64_t v17 = __clz(__rbit64(v9)) | ((void)v8 << 6);
    int64_t v15 = (int64_t)v8;
LABEL_24:
    id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
    if (!v14) {
      goto LABEL_35;
    }
  }
  int64_t v15 = (int64_t)(v8 + 1);
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = v22[v15];
  if (v18)
  {
LABEL_23:
    uint64_t v16 = (v18 - 1) & v18;
    unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  int64_t v19 = (int64_t)(v8 + 2);
  if ((uint64_t)(v8 + 2) >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = v22[v19];
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = (int64_t)(v8 + 3);
  if ((uint64_t)(v8 + 3) >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = v22[v19];
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = (int64_t)(v8 + 4);
  if ((uint64_t)(v8 + 4) >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = v22[v19];
  if (v18)
  {
LABEL_22:
    int64_t v15 = v19;
    goto LABEL_23;
  }
  int64_t v15 = (int64_t)(v8 + 5);
  if ((uint64_t)(v8 + 5) >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = v22[v15];
  if (v18) {
    goto LABEL_23;
  }
  uint64_t v20 = v8 + 6;
  while ((char *)v21 != v20)
  {
    unint64_t v18 = v22[(void)v20++];
    if (v18)
    {
      int64_t v15 = (int64_t)(v20 - 1);
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_251A1E630();
}

void sub_251CC7F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    while (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      if (a2)
      {
LABEL_20:
        char v17 = *(unsigned char *)(*(void *)(a1 + 48) + v11);
        int64_t v15 = HMService.subscript.getter();
        if (v15)
        {
          sub_251A62CF4(&v16, v15);
        }
      }
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v8) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v9);
    if (!v13) {
      break;
    }
LABEL_19:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    if (a2) {
      goto LABEL_20;
    }
  }
  int64_t v14 = v9 + 1;
  if (v9 + 1 >= v8) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v9 + 2;
  if (v9 + 2 >= v8) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v9 + 3;
  if (v9 + 3 >= v8) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v9 + 4;
  if (v9 + 4 >= v8)
  {
LABEL_26:
    swift_release();
    return;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
LABEL_18:
    int64_t v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_251CC8128(unint64_t a1, unint64_t *a2)
{
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_251F366C0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](i - 4, a1) : *(id *)(a1 + 8 * i);
      int64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v12 = v7;
      sub_251CC6064(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_251ED584C(v11);
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251CC826C(uint64_t a1)
{
  return sub_251CBF6E4(a1, *(void *)(v1 + 16), *(unsigned char **)(v1 + 24), *(NSObject **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
}

uint64_t sub_251CC8280(uint64_t a1)
{
  return a1;
}

uint64_t sub_251CC82D4(uint64_t a1)
{
  return a1;
}

void sub_251CC8324(void **a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = *a1;
  if (a2 >> 62) {
    goto LABEL_33;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = a2 & 0xC000000000000001;
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v8 = (id)MEMORY[0x2533AB3A0](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        id v8 = *(id *)(a2 + 32);
      }
      uint64_t v9 = v8;
      sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      char v10 = sub_251F36120();

      if (v10) {
        break;
      }
      if (v6 == 1) {
        return;
      }
      if (v7)
      {
        id v23 = (id)MEMORY[0x2533AB3A0](1, a2);
      }
      else
      {
        if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          return;
        }
        id v23 = *(id *)(a2 + 40);
      }
      uint64_t v25 = v23;
      char v26 = sub_251F36120();

      if (v26) {
        break;
      }
      uint64_t v27 = 1;
      while (1)
      {
        unint64_t v31 = v27 + 1;
        if (__OFADD__(v27, 1)) {
          break;
        }
        if (v31 == v6) {
          return;
        }
        if (v7)
        {
          id v28 = (id)MEMORY[0x2533AB3A0](v27 + 1, a2);
        }
        else
        {
          if ((v31 & 0x8000000000000000) != 0) {
            goto LABEL_37;
          }
          if (v31 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_38;
          }
          id v28 = *(id *)(a2 + 32 + 8 * v31);
        }
        id v29 = v28;
        char v30 = sub_251F36120();

        ++v27;
        if (v30) {
          goto LABEL_7;
        }
      }
      __break(1u);
LABEL_33:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (!v6) {
        return;
      }
    }
LABEL_7:
    if (qword_26B21F2C0 == -1) {
      goto LABEL_8;
    }
LABEL_39:
    swift_once();
LABEL_8:
    uint64_t v11 = sub_251F350A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B21F290);
    swift_bridgeObjectRetain_n();
    id v12 = v5;
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35F90();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      id v16 = (void *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v35 = v32;
      *(_DWORD *)uint64_t v15 = 136315650;
      swift_bridgeObjectRetain();
      sub_251A00E84(a3, a4, &v35);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2080;
      if (qword_269B9C3D0 != -1) {
        swift_once();
      }
      char v17 = (void *)qword_269BA21F0;
      unint64_t v18 = (void *)sub_251F35EB0();
      id v19 = objc_msgSend(v17, sel_stringForObjectValue_, v18);

      if (v19)
      {
        uint64_t v20 = sub_251F356F0();
        unint64_t v22 = v21;
      }
      else
      {
        uint64_t v20 = 0;
        unint64_t v22 = 0xE000000000000000;
      }
      sub_251A00E84(v20, v22, &v35);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2112;
      id v24 = v12;
      sub_251F361D0();
      *id v16 = v12;

      _os_log_impl(&dword_2519F3000, v13, v14, "...{%s)} [%s] will fetch '%@'", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v32, -1, -1);
      MEMORY[0x2533AC760](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_251CC87C4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251CC87FC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251CC8834()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251CC8844()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_251CC888C(uint64_t a1)
{
  sub_251CC1BC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_251CC889C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251CC88AC()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251CC88EC(void *a1)
{
  return sub_251CC1F34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251CC88FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_251CC894C(id *a1)
{
  return sub_251CC6A80(a1, v1 + 16);
}

uint64_t sub_251CC8954(uint64_t a1)
{
  return a1;
}

uint64_t sub_251CC8980(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251CC89E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251CC8A50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251CC8AB0(void **a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v46 = a3;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  unint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v43 = *(v44 - 1);
  MEMORY[0x270FA5388](v44);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v14 = *a1;
  if (objc_msgSend(v14, sel_value))
  {
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    swift_unknownObjectRelease();
    if (v15)
    {
      id v16 = objc_msgSend(v14, sel_request);
      id v17 = objc_msgSend(v16, sel_characteristic);

      swift_beginAccess();
      unint64_t v18 = (void *)sub_251B23410(v17);
      swift_endAccess();

      if (qword_26B2200D8 != -1) {
        swift_once();
      }
      uint64_t v19 = __swift_project_value_buffer(v8, (uint64_t)qword_26B21FF20);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v19, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2118);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_251F38650;
      id v21 = objc_msgSend(v14, sel_request);
      id v22 = objc_msgSend(v21, sel_characteristic);

      *(void *)(inited + 32) = v22;
      *(void *)(inited + 40) = 1;
      *(void *)(inited + 48) = 0;
      *(void *)(inited + 56) = 0;
      *(unsigned char *)(inited + 64) = 3;
      *(void *)unint64_t v7 = sub_2519FA028(inited);
      *((void *)v7 + 1) = 0;
      v7[16] = 1;
      swift_storeEnumTagMultiPayload();
      sub_251F35CF0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      (*(void (**)(char *, void *))(v43 + 8))(v13, v44);
    }
  }
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  id v23 = (void *)(v48 + 16);
  uint64_t v24 = sub_251F350A0();
  __swift_project_value_buffer(v24, (uint64_t)qword_26B21F290);
  id v25 = v14;
  unint64_t v26 = v47;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v27 = v25;
  id v28 = sub_251F35080();
  int v29 = sub_251F35FD0();
  if (!os_log_type_enabled(v28, (os_log_type_t)v29))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  unint64_t v7 = (char *)swift_slowAlloc();
  uint64_t v44 = (void *)swift_slowAlloc();
  id v25 = (id)swift_slowAlloc();
  v50[0] = (uint64_t)v25;
  *(_DWORD *)unint64_t v7 = 136315906;
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_251A00E84(v46, v26, v50);
  sub_251F361D0();
  swift_bridgeObjectRelease_n();
  *((_WORD *)v7 + 6) = 2080;
  swift_beginAccess();
  if (qword_269B9C3D0 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    char v30 = (void *)qword_269BA21F0;
    unint64_t v31 = (void *)sub_251F35EB0();
    id v32 = objc_msgSend(v30, sel_stringForObjectValue_, v31);

    uint64_t updated = (uint64_t)v25;
    LODWORD(v43) = v29;
    if (v32)
    {
      uint64_t v33 = sub_251F356F0();
      unint64_t v35 = v34;
    }
    else
    {
      uint64_t v33 = 0;
      unint64_t v35 = 0xE000000000000000;
    }
    uint64_t v51 = sub_251A00E84(v33, v35, v50);
    sub_251F361D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v7 + 11) = 2112;
    id v36 = objc_msgSend(v27, sel_request);
    id v37 = objc_msgSend(v36, sel_characteristic);

    uint64_t v51 = (uint64_t)v37;
    sub_251F361D0();
    id v38 = v44;
    *uint64_t v44 = v37;

    *((_WORD *)v7 + 16) = 2112;
    id v39 = objc_msgSend(v27, sel_value);
    id v25 = (id)updated;
    int v29 = v43;
    if (!v39) {
      goto LABEL_17;
    }
    self;
    uint64_t v40 = swift_dynamicCastObjCClass();
    if (!v40)
    {
      swift_unknownObjectRelease();
LABEL_17:
      uint64_t v40 = sub_251F356C0();
    }
    uint64_t v51 = v40;
    sub_251F361D0();
    v38[1] = v40;

    _os_log_impl(&dword_2519F3000, v28, (os_log_type_t)v29, "...{%s} [%s] fetched characteristic '%@' response %@", (uint8_t *)v7, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v38, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v25, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);

LABEL_19:
    uint64_t result = swift_beginAccess();
    if (!__OFADD__(*v23, 1)) {
      break;
    }
    __break(1u);
LABEL_22:
    swift_once();
  }
  ++*v23;
  return result;
}

uint64_t sub_251CC9250()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2250);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251CC9320(void *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2250);
  uint64_t v5 = *(void *)(v2 + 16);
  unint64_t v6 = *(void *)(v2 + 24);
  return sub_251CBF868(a1, a2, v5, v6);
}

uint64_t sub_251CC93B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

uint64_t static ClimateSummarizer.temperatureAverageString(_:)(double a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2330);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  double v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(a1);
  id v6 = objc_msgSend(self, sel_celsius);
  sub_251CCD0F8();
  sub_251F345C0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2340);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2348);
  MEMORY[0x270FA5388](v11 - 8);
  sub_251F345F0();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2350);
  MEMORY[0x270FA5388](v12 - 8);
  sub_251F34AB0();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2358);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ClimateSummarizer.temperatureNumberFormatStyle.getter();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2360);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  uint64_t v17 = sub_251F34DE0();
  MEMORY[0x270FA5388](v17 - 8);
  sub_251F34DC0();
  sub_251F34600();
  uint64_t v18 = sub_251F345E0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v18;
}

uint64_t static ClimateSummarizer.climateSummary(from:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  double v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v22 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v22 - v9;
  static ClimateSummarizer.temperatureGaugeData(from:)(a1, (uint64_t)&v22 - v9);
  uint64_t v11 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v10, 1, v11) == 1)
  {
    sub_251A1B064((uint64_t)v10, &qword_269B9C9E0);
  }
  else
  {
    uint64_t v13 = &v10[*(int *)(v11 + 28)];
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *((void *)v13 + 1);
    swift_bridgeObjectRetain();
    sub_251CCDF78((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    if (v14) {
      return v15;
    }
  }
  static ClimateSummarizer.humidityGaugeData(from:addPercentageSign:)(a1, 1, (uint64_t)v8);
  if (v12(v8, 1, v11) == 1)
  {
    sub_251A1B064((uint64_t)v8, &qword_269B9C9E0);
  }
  else
  {
    uint64_t v16 = &v8[*(int *)(v11 + 28)];
    uint64_t v15 = *(void *)v16;
    uint64_t v17 = *((void *)v16 + 1);
    swift_bridgeObjectRetain();
    sub_251CCDF78((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    if (v17) {
      return v15;
    }
  }
  static ClimateSummarizer.airQualityGaugeData(from:)(a1, (uint64_t)v5);
  if (v12(v5, 1, v11) == 1)
  {
    sub_251A1B064((uint64_t)v5, &qword_269B9C9E0);
    return 0;
  }
  else
  {
    uint64_t v18 = &v5[*(int *)(v11 + 28)];
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *((void *)v18 + 1);
    swift_bridgeObjectRetain();
    sub_251CCDF78((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    if (v20) {
      return v19;
    }
    else {
      return 0;
    }
  }
}

uint64_t static ClimateSummarizer.temperatureGaugeData(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_251F38650;
  if (qword_269B9C3E0 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_269BA2268;
  uint64_t v6 = qword_269BA2270;
  uint64_t v7 = unk_269BA2278;
  uint64_t v8 = qword_269BA2280;
  *(void *)(v4 + 32) = qword_269BA2260;
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = v6;
  *(void *)(v4 + 56) = v7;
  *(void *)(v4 + 64) = v8;
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v5);
  v37[8] = 1;
  id v38 = &v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251CCD60C, (uint64_t)v37, a1);
  uint64_t v10 = sub_251EE0F50(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = _s13HomeDataModel17ValueAccumulatorsV12doubleValues4fromSaySdGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
    uint64_t v15 = type metadata accessor for IconTextValueStringDataHolder();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
    return swift_bridgeObjectRelease();
  }
  if (v12 == 1)
  {
    uint64_t v13 = 0;
    double v14 = 0.0;
  }
  else
  {
    uint64_t v13 = v12 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v17 = (double *)(v11 + 40);
    double v14 = 0.0;
    uint64_t v18 = v12 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v14 = v14 + *(v17 - 1) + *v17;
      v17 += 2;
      v18 -= 2;
    }
    while (v18);
    if (v12 == v13) {
      goto LABEL_12;
    }
  }
  uint64_t v19 = v12 - v13;
  uint64_t v20 = (double *)(v11 + 8 * v13 + 32);
  do
  {
    double v21 = *v20++;
    double v14 = v14 + v21;
    --v19;
  }
  while (v19);
LABEL_12:
  double v22 = v14 / (double)v12;
  uint64_t v23 = _s13HomeDataModel17ClimateSummarizerV15temperatureIconySSSaySdGFZ_0(v11);
  uint64_t v25 = v24;
  uint64_t v26 = static String.hfLocalized(_:)(0xD000000000000020, 0x8000000251F70380);
  uint64_t v28 = v27;
  uint64_t v29 = static ClimateSummarizer.temperatureRangeString(_:)(v11);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  sub_251F34D90();
  id v32 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v33 = (uint64_t *)(a2 + v32[5]);
  uint64_t *v33 = v23;
  v33[1] = v25;
  unint64_t v34 = (uint64_t *)(a2 + v32[6]);
  uint64_t *v34 = v26;
  v34[1] = v28;
  unint64_t v35 = (uint64_t *)(a2 + v32[7]);
  *unint64_t v35 = v29;
  v35[1] = v31;
  uint64_t v36 = a2 + v32[8];
  *(double *)uint64_t v36 = v22;
  *(_OWORD *)(v36 + 8) = xmmword_251F4E460;
  *(unsigned char *)(v36 + 24) = 1;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v32 - 1) + 56))(a2, 0, 1, v32);
}

uint64_t static ClimateSummarizer.humidityGaugeData(from:addPercentageSign:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_251F38650;
  if (qword_269B9C3F0 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_269BA22B8;
  uint64_t v8 = qword_269BA22C0;
  uint64_t v9 = unk_269BA22C8;
  uint64_t v10 = qword_269BA22D0;
  *(void *)(v6 + 32) = qword_269BA22B0;
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = v8;
  *(void *)(v6 + 56) = v9;
  *(void *)(v6 + 64) = v10;
  uint64_t v38 = v6;
  MEMORY[0x270FA5388](v7);
  v36[8] = 1;
  id v37 = &v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251CCD60C, (uint64_t)v36, a1);
  uint64_t v12 = sub_251EE0F50(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = _s13HomeDataModel17ValueAccumulatorsV12doubleValues4fromSaySdGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
    uint64_t v17 = type metadata accessor for IconTextValueStringDataHolder();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 1, 1, v17);
    return swift_bridgeObjectRelease();
  }
  if (v14 == 1)
  {
    uint64_t v15 = 0;
    double v16 = 0.0;
  }
  else
  {
    uint64_t v15 = v14 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v19 = (double *)(v13 + 40);
    double v16 = 0.0;
    uint64_t v20 = v14 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v16 = v16 + *(v19 - 1) + *v19;
      v19 += 2;
      v20 -= 2;
    }
    while (v20);
    if (v14 == v15) {
      goto LABEL_12;
    }
  }
  uint64_t v21 = v14 - v15;
  double v22 = (double *)(v13 + 8 * v15 + 32);
  do
  {
    double v23 = *v22++;
    double v16 = v16 + v23;
    --v21;
  }
  while (v21);
LABEL_12:
  double v24 = v16 / (double)v14;
  uint64_t v25 = static String.hfLocalized(_:)(0xD00000000000001DLL, 0x8000000251F703B0);
  uint64_t v27 = v26;
  uint64_t v28 = _s13HomeDataModel17ClimateSummarizerV19humidityRangeString_17addPercentageSignSSSgSaySdG_SbtFZ_0(v13, a2 & 1);
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  sub_251F34D90();
  uint64_t v31 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v32 = a3 + v31[5];
  strcpy((char *)v32, "humidity.fill");
  *(_WORD *)(v32 + 14) = -4864;
  uint64_t v33 = (uint64_t *)(a3 + v31[6]);
  uint64_t *v33 = v25;
  v33[1] = v27;
  unint64_t v34 = (uint64_t *)(a3 + v31[7]);
  uint64_t *v34 = v28;
  v34[1] = v30;
  uint64_t v35 = a3 + v31[8];
  *(double *)uint64_t v35 = v24;
  *(_OWORD *)(v35 + 8) = xmmword_251F4E470;
  *(unsigned char *)(v35 + 24) = 1;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v31 - 1) + 56))(a3, 0, 1, v31);
}

uint64_t static ClimateSummarizer.airQualityGaugeData(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_251F38650;
  if (qword_269B9C3E8 != -1) {
    swift_once();
  }
  uint64_t v5 = unk_269BA2290;
  uint64_t v6 = qword_269BA2298;
  uint64_t v7 = unk_269BA22A0;
  uint64_t v8 = qword_269BA22A8;
  *(void *)(v4 + 32) = qword_269BA2288;
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = v6;
  *(void *)(v4 + 56) = v7;
  *(void *)(v4 + 64) = v8;
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v5);
  v30[8] = 1;
  uint64_t v31 = &v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251CCD60C, (uint64_t)v30, a1);
  uint64_t v10 = sub_251EE0F50(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = _s13HomeDataModel17ValueAccumulatorsV9intValues4fromSaySiGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(v10);
  swift_bridgeObjectRelease();
  if (!v11[2] || (uint64_t v12 = sub_251CCD74C((uint64_t)v11), (v13 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = type metadata accessor for IconTextValueStringDataHolder();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a2, 1, 1, v29);
  }
  else
  {
    if (__OFSUB__(6, v12))
    {
      __break(1u);
      JUMPOUT(0x251CCA314);
    }
    unint64_t v14 = 0xE700000000000000;
    uint64_t v15 = 0x776F6C2E697161;
    switch(v12)
    {
      case 1:
        break;
      case 5:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x686769682E697161;
        break;
      default:
        uint64_t v15 = 0x6964656D2E697161;
        unint64_t v14 = 0xEA00000000006D75;
        break;
    }
    double v16 = (double)(6 - v12);
    uint64_t v17 = static String.hfLocalized(_:)(0xD00000000000001FLL, 0x8000000251F703D0);
    uint64_t v19 = v18;
    uint64_t v20 = _s13HomeDataModel17ClimateSummarizerV21airQualityRangeStringySSSgSaySiGFZ_0((uint64_t)v11);
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    sub_251F34D90();
    double v23 = (int *)type metadata accessor for IconTextValueStringDataHolder();
    double v24 = (uint64_t *)(a2 + v23[5]);
    uint64_t *v24 = v15;
    v24[1] = v14;
    uint64_t v25 = (uint64_t *)(a2 + v23[6]);
    *uint64_t v25 = v17;
    v25[1] = v19;
    uint64_t v26 = (uint64_t *)(a2 + v23[7]);
    *uint64_t v26 = v20;
    v26[1] = v22;
    uint64_t v27 = a2 + v23[8];
    *(double *)uint64_t v27 = v16;
    *(_OWORD *)(v27 + 8) = xmmword_251F4E480;
    *(unsigned char *)(v27 + 24) = 1;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v23 - 1) + 56))(a2, 0, 1, v23);
  }
}

double static ClimateSummarizer.doubleAverage(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    double v3 = 0.0;
    return v3 / (double)v1;
  }
  if (v1 == 1)
  {
    uint64_t v2 = 0;
    double v3 = 0.0;
LABEL_8:
    uint64_t v6 = v1 - v2;
    uint64_t v7 = (double *)(a1 + 8 * v2 + 32);
    do
    {
      double v8 = *v7++;
      double v3 = v3 + v8;
      --v6;
    }
    while (v6);
    return v3 / (double)v1;
  }
  uint64_t v2 = v1 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v4 = (double *)(a1 + 40);
  double v3 = 0.0;
  uint64_t v5 = v1 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v3 = v3 + *(v4 - 1) + *v4;
    v4 += 2;
    v5 -= 2;
  }
  while (v5);
  if (v1 != v2) {
    goto LABEL_8;
  }
  return v3 / (double)v1;
}

uint64_t static ClimateSummarizer.temperatureRangeString(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0x9380E29380E2;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v3)
  {
    uint64_t v6 = (double *)(a1 + 40);
    uint64_t v7 = v3;
    double v4 = *(double *)(a1 + 32);
    do
    {
      double v8 = *v6++;
      double v9 = v8;
      if (v8 < v4) {
        double v4 = v9;
      }
      --v7;
    }
    while (v7);
    uint64_t v10 = (double *)(a1 + 40);
    do
    {
      double v11 = *v10++;
      double v12 = v11;
      if (v2 < v11) {
        double v2 = v12;
      }
      --v3;
    }
    while (v3);
  }
  else
  {
    double v4 = *(double *)(a1 + 32);
  }
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2330);
  uint64_t v103 = v92;
  uint64_t v110 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v14 = v13;
  unint64_t v15 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v109 = (char *)v92 - v15;
  _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(v4);
  double v16 = self;
  id v17 = objc_msgSend(v16, sel_celsius);
  unint64_t v112 = sub_251CCD0F8();
  uint64_t v18 = sub_251F345C0();
  uint64_t v102 = v92;
  uint64_t v108 = v14;
  MEMORY[0x270FA5388](v18);
  unint64_t v105 = (char *)v15;
  uint64_t v107 = (char *)v92 - v15;
  _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(v2);
  id v19 = objc_msgSend(v16, sel_celsius);
  sub_251F345C0();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2360);
  id v106 = (uint64_t (*)(char *, uint64_t))v92;
  uint64_t v111 = *(void *)(v20 - 8);
  uint64_t v21 = *(void **)(v111 + 64);
  MEMORY[0x270FA5388](v20);
  unint64_t v101 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v22 = (char *)v92 - v101;
  uint64_t v23 = static ClimateSummarizer.temperatureNumberFormatStyle.getter();
  uint64_t v100 = v92;
  MEMORY[0x270FA5388](v23);
  double v24 = (char *)v92 - v15;
  uint64_t v25 = sub_251F34DE0();
  uint64_t v26 = *(void *)(*(void *)(v25 - 8) + 64);
  MEMORY[0x270FA5388](v25 - 8);
  unint64_t v99 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251F34DC0();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2350);
  unint64_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
  MEMORY[0x270FA5388](v27 - 8);
  unint64_t v96 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251F34AB0();
  uint64_t v29 = (void *)sub_251F36000();
  uint64_t v30 = v98;
  sub_251F34610();

  uint64_t v31 = v30;
  sub_251F345D0();
  uint64_t v33 = v32;
  unint64_t v34 = *(void (**)(char *, uint64_t))(v110 + 8);
  v110 += 8;
  v34(v24, v31);
  uint64_t v114 = v33;
  unint64_t v97 = (char *)sub_251F34A60();
  unint64_t v94 = v35;
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v111 + 8);
  v111 += 8;
  uint64_t v37 = v36(v22, v20);
  uint64_t v95 = v92;
  uint64_t v100 = v21;
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = (char *)v92 - v101;
  uint64_t v39 = static ClimateSummarizer.temperatureNumberFormatStyle.getter();
  uint64_t v93 = v92;
  uint64_t v40 = MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)((char *)v92 - v105);
  uint64_t v104 = v26;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = sub_251F34DC0();
  unint64_t v99 = v28;
  MEMORY[0x270FA5388](v42);
  sub_251F34AB0();
  uint64_t v43 = (void *)sub_251F36000();
  sub_251F34610();

  sub_251F345D0();
  uint64_t v45 = v44;
  uint64_t v46 = v31;
  id v106 = (uint64_t (*)(char *, uint64_t))v34;
  v34(v41, v31);
  unint64_t v47 = v94;
  uint64_t v114 = v45;
  uint64_t v48 = sub_251F34A60();
  uint64_t v50 = v49;
  unint64_t v101 = v20;
  unint64_t v105 = (char *)v36;
  v36(v38, v20);
  if (v97 == (char *)v48 && v47 == v50)
  {
    uint64_t v51 = swift_bridgeObjectRelease_n();
  }
  else
  {
    char v52 = sub_251F36B10();
    swift_bridgeObjectRelease();
    uint64_t v51 = swift_bridgeObjectRelease();
    if ((v52 & 1) == 0)
    {
      v92[0] = v92;
      uint64_t v114 = 0;
      unint64_t v115 = 0xE000000000000000;
      uint64_t v67 = MEMORY[0x270FA5388](v51);
      unint64_t v97 = (char *)((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v69 = (char *)((char *)v92 - v97);
      MEMORY[0x270FA5388](v67);
      unint64_t v96 = (v70 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v71 = sub_251F34DC0();
      unint64_t v72 = v99;
      MEMORY[0x270FA5388](v71);
      uint64_t v95 = (void *)((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34AB0();
      uint64_t v73 = (void *)sub_251F36000();
      sub_251F34610();

      sub_251F345D0();
      uint64_t v75 = v74;
      uint64_t v76 = v106(v69, v46);
      uint64_t v113 = v75;
      BOOL v77 = v100;
      MEMORY[0x270FA5388](v76);
      unint64_t v94 = ((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF0;
      unint64_t v78 = (char *)v92 - v94;
      static ClimateSummarizer.temperatureNumberFormatStyle.getter();
      uint64_t v93 = (void *)sub_251CCDD08();
      v92[1] = sub_251CCDD5C();
      unint64_t v79 = v101;
      sub_251F35530();
      ((void (*)(char *, unint64_t))v105)(v78, v79);
      sub_251F35800();
      swift_bridgeObjectRelease();
      uint64_t v80 = sub_251F35800();
      v92[0] = v92;
      uint64_t v81 = MEMORY[0x270FA5388](v80);
      uint64_t v82 = (char *)((char *)v92 - v97);
      MEMORY[0x270FA5388](v81);
      uint64_t v83 = sub_251F34DC0();
      uint64_t v84 = v107;
      MEMORY[0x270FA5388](v83);
      sub_251F34AB0();
      uint64_t v85 = (void *)sub_251F36000();
      sub_251F34610();

      sub_251F345D0();
      uint64_t v87 = v86;
      uint64_t v88 = (void (*)(char *, uint64_t))v106;
      uint64_t v89 = v106(v82, v46);
      uint64_t v113 = v87;
      MEMORY[0x270FA5388](v89);
      unint64_t v90 = (char *)v92 - v94;
      static ClimateSummarizer.temperatureNumberFormatStyle.getter();
      sub_251F35530();
      ((void (*)(char *, unint64_t))v105)(v90, v79);
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      uint64_t v5 = v114;
      v88(v84, v46);
      v88(v109, v46);
      return v5;
    }
  }
  unint64_t v97 = (char *)v92;
  uint64_t v114 = 0;
  unint64_t v115 = 0xE000000000000000;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  id v55 = (char *)v92 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  uint64_t v56 = sub_251F34DC0();
  MEMORY[0x270FA5388](v56);
  sub_251F34AB0();
  uint64_t v57 = (void *)sub_251F36000();
  uint64_t v58 = v46;
  uint64_t v59 = v107;
  sub_251F34610();

  sub_251F345D0();
  uint64_t v61 = v60;
  unint64_t v62 = (void (*)(char *, uint64_t))v106;
  uint64_t v63 = v106(v55, v58);
  uint64_t v113 = v61;
  MEMORY[0x270FA5388](v63);
  uint64_t v65 = (char *)v92 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ClimateSummarizer.temperatureNumberFormatStyle.getter();
  sub_251CCDD08();
  sub_251CCDD5C();
  unint64_t v66 = v101;
  sub_251F35530();
  ((void (*)(char *, unint64_t))v105)(v65, v66);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v5 = v114;
  v62(v59, v58);
  v62(v109, v58);
  return v5;
}

uint64_t static ClimateSummarizer.airQualityAverage(_:)(uint64_t a1)
{
  return sub_251CCD74C(a1);
}

uint64_t static ClimateSummarizer.airQualityIcon(_:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0x6964656D2E697161;
  }
  uint64_t v2 = a1 - 1;
  uint64_t result = 0x776F6C2E697161;
  switch(v2)
  {
    case 0:
      return result;
    case 4:
      uint64_t result = 0x686769682E697161;
      break;
    default:
      return 0x6964656D2E697161;
  }
  return result;
}

uint64_t static ClimateSummarizer.airQualityString(_:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  switch(a1)
  {
    case 1:
      uint64_t v2 = 0xD000000000000028;
      uint64_t v3 = "HFCharacteristicValueAirQualityExcellent";
      goto LABEL_8;
    case 2:
      uint64_t v5 = "HFCharacteristicValueAirQualityGood";
      goto LABEL_10;
    case 3:
      uint64_t v5 = "HFCharacteristicValueAirQualityFair";
      goto LABEL_10;
    case 4:
      uint64_t v2 = 0xD000000000000027;
      uint64_t v3 = "HFCharacteristicValueAirQualityInferior";
LABEL_8:
      unint64_t v6 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      break;
    case 5:
      uint64_t v5 = "HFCharacteristicValueAirQualityPoor";
LABEL_10:
      unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      uint64_t v2 = 0xD000000000000023;
      break;
    default:
      return 0;
  }
  return static String.hfLocalized(_:)(v2, v6);
}

uint64_t sub_251CCB13C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    double v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v5 < v2) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

uint64_t static ClimateSummarizer.temperatureNumberFormatStyle.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2360);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_251F34DE0();
  MEMORY[0x270FA5388](v4 - 8);
  sub_251F34DC0();
  sub_251CCDD08();
  sub_251F34A70();
  uint64_t v5 = sub_251F34AD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = sub_251CCD0F8();
  MEMORY[0x270FA5388](v9);
  sub_251F34DC0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2350);
  MEMORY[0x270FA5388](v10 - 8);
  sub_251F34AB0();
  double v11 = (void *)sub_251F36000();
  id v12 = objc_msgSend(self, sel_celsius);
  sub_251F36120();

  sub_251F34AC0();
  MEMORY[0x2533A99C0](v8, v0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static ClimateSummarizer.preferredTemperatureUnit.getter()
{
  sub_251CCD0F8();
  uint64_t v0 = sub_251F34DE0();
  MEMORY[0x270FA5388](v0 - 8);
  sub_251F34DC0();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2350);
  MEMORY[0x270FA5388](v1 - 8);
  sub_251F34AB0();
  return sub_251F36000();
}

uint64_t static ClimateSummarizer.strippedTemperatureString(_:)(double a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2330);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(a1);
  id v6 = objc_msgSend(self, sel_celsius);
  sub_251CCD0F8();
  uint64_t v7 = sub_251F345C0();
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_251F34DE0();
  MEMORY[0x270FA5388](v8 - 8);
  sub_251F34DC0();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2350);
  MEMORY[0x270FA5388](v9 - 8);
  sub_251F34AB0();
  uint64_t v10 = (void *)sub_251F36000();
  sub_251F34610();

  sub_251F345D0();
  uint64_t v12 = v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v5, v2);
  v20[1] = v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2360);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ClimateSummarizer.temperatureNumberFormatStyle.getter();
  sub_251CCDD08();
  sub_251CCDD5C();
  sub_251F35530();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v18 = v21;
  v13(v5, v2);
  return v18;
}

double NSUnitTemperature.preferredStepSize.getter()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_fahrenheit);
  sub_251CCD0F8();
  char v2 = sub_251F36120();

  if (v2) {
    return 0.555555556;
  }
  id v4 = objc_msgSend(v0, sel_celsius);
  sub_251F36120();

  return 0.5;
}

uint64_t sub_251CCB908()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_251F3DAB0;
  if (qword_269B9C3E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_269BA2268;
  uint64_t v2 = qword_269BA2270;
  uint64_t v3 = unk_269BA2278;
  uint64_t v4 = qword_269BA2280;
  *(void *)(v0 + 32) = qword_269BA2260;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = qword_269B9C3E8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = unk_269BA2290;
  uint64_t v7 = qword_269BA2298;
  uint64_t v8 = unk_269BA22A0;
  uint64_t v9 = qword_269BA22A8;
  *(void *)(v0 + 72) = qword_269BA2288;
  *(void *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = v7;
  *(void *)(v0 + 96) = v8;
  *(void *)(v0 + 104) = v9;
  uint64_t v10 = qword_269B9C3F0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_269BA22B8;
  uint64_t v12 = qword_269BA22C0;
  uint64_t v13 = unk_269BA22C8;
  uint64_t v14 = qword_269BA22D0;
  *(void *)(v0 + 112) = qword_269BA22B0;
  *(void *)(v0 + 120) = v11;
  *(void *)(v0 + 128) = v12;
  *(void *)(v0 + 136) = v13;
  *(void *)(v0 + 144) = v14;
  qword_269BA2258 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ClimateSummarizer.allClimateSummaryFetchSpecifications.getter()
{
  return sub_251CCBF98(&qword_269B9C3D8);
}

void sub_251CCBAD8()
{
  qword_269BA2260 = 0xD000000000000013;
  *(void *)algn_269BA2268 = 0x8000000251F70490;
  qword_269BA2270 = (uint64_t)&unk_270262EA0;
  unk_269BA2278 = MEMORY[0x263F8EE78];
  qword_269BA2280 = (uint64_t)&unk_270262EC8;
}

uint64_t static ClimateSummarizer.temperatureSensorsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C3E0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_269BA2268;
  uint64_t v3 = qword_269BA2270;
  uint64_t v4 = unk_269BA2278;
  uint64_t v5 = qword_269BA2280;
  *a1 = qword_269BA2260;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251CCBBC0()
{
  qword_269BA2288 = 0xD000000000000013;
  unk_269BA2290 = 0x8000000251F70430;
  qword_269BA2298 = (uint64_t)&unk_270262F40;
  unk_269BA22A0 = MEMORY[0x263F8EE78];
  qword_269BA22A8 = (uint64_t)&unk_270262F68;
}

uint64_t static ClimateSummarizer.airQualitySensorsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C3E8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269BA2290;
  uint64_t v3 = qword_269BA2298;
  uint64_t v4 = unk_269BA22A0;
  uint64_t v5 = qword_269BA22A8;
  *a1 = qword_269BA2288;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251CCBCA8()
{
  qword_269BA22B0 = 0xD000000000000010;
  *(void *)algn_269BA22B8 = 0x8000000251F70450;
  qword_269BA22C0 = (uint64_t)&unk_270262EF0;
  unk_269BA22C8 = MEMORY[0x263F8EE78];
  qword_269BA22D0 = (uint64_t)&unk_270262F18;
}

uint64_t static ClimateSummarizer.humiditySensorsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C3F0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_269BA22B8;
  uint64_t v3 = qword_269BA22C0;
  uint64_t v4 = unk_269BA22C8;
  uint64_t v5 = qword_269BA22D0;
  *a1 = qword_269BA22B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251CCBD90()
{
  qword_269BA22D8 = 0xD000000000000017;
  unk_269BA22E0 = 0x8000000251F70410;
  qword_269BA22E8 = (uint64_t)&unk_270263980;
  unk_269BA22F0 = MEMORY[0x263F8EE78];
  qword_269BA22F8 = (uint64_t)&unk_2702639A8;
}

uint64_t static ClimateSummarizer.carbonMonoxideSensorsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C3F8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269BA22E0;
  uint64_t v3 = qword_269BA22E8;
  uint64_t v4 = unk_269BA22F0;
  uint64_t v5 = qword_269BA22F8;
  *a1 = qword_269BA22D8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251CCBE78()
{
  qword_269BA2300 = 0xD000000000000016;
  *(void *)algn_269BA2308 = 0x8000000251F703F0;
  qword_269BA2310 = (uint64_t)&unk_2702639D0;
  unk_269BA2318 = MEMORY[0x263F8EE78];
  qword_269BA2320 = (uint64_t)&unk_2702639F8;
}

uint64_t static ClimateSummarizer.carbonDioxideSensorsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C400 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_269BA2308;
  uint64_t v3 = qword_269BA2310;
  uint64_t v4 = unk_269BA2318;
  uint64_t v5 = qword_269BA2320;
  *a1 = qword_269BA2300;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251CCBF60()
{
  qword_269BA2328 = (uint64_t)&unk_270263A20;
}

uint64_t static ClimateSummarizer.climateSensorServiceKinds.getter()
{
  return sub_251CCBF98(&qword_269B9C408);
}

uint64_t sub_251CCBF98(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_251CCBFE4(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticAccessory(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = *(void *)(a1 + *(int *)(MEMORY[0x270FA5388](v8 - 8) + 88));
  uint64_t v20 = a1;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)v19, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a2;
  *(void *)&long long v25 = v12;
  *((void *)&v25 + 1) = sub_251CCDDCC;
  uint64_t v26 = v13;
  *(unsigned char *)(swift_allocObject() + 16) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2378);
  sub_251F366B0();
  swift_release();
  long long v21 = v23;
  uint64_t v22 = v24;
  *(void *)(swift_allocObject() + 16) = a4;
  swift_bridgeObjectRetain();
  sub_251F366B0();
  swift_release();
  uint64_t v14 = v26;
  long long v18 = v25;
  sub_251CCDF10(a1, (uint64_t)&v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 16], type metadata accessor for StaticAccessory);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  sub_251CCDEA8((uint64_t)&v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 16], v16 + v15, type metadata accessor for StaticAccessory);
  long long v25 = v18;
  uint64_t v26 = v14;
  uint64_t v27 = sub_251CCDE30;
  uint64_t v28 = v16;
  swift_bridgeObjectRetain();
  return sub_251EDCEA0((uint64_t *)&v25);
}

uint64_t sub_251CCC28C(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticAccessory(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = *(void *)(a1 + *(int *)(MEMORY[0x270FA5388](v8 - 8) + 88));
  uint64_t v20 = a1;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)v19, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a2;
  *(void *)&long long v25 = v12;
  *((void *)&v25 + 1) = sub_251CCE5C0;
  uint64_t v26 = v13;
  *(unsigned char *)(swift_allocObject() + 16) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2378);
  sub_251F366B0();
  swift_release();
  long long v21 = v23;
  uint64_t v22 = v24;
  *(void *)(swift_allocObject() + 16) = a4;
  swift_bridgeObjectRetain();
  sub_251F366B0();
  swift_release();
  uint64_t v14 = v26;
  long long v18 = v25;
  sub_251CCDF10(a1, (uint64_t)&v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 16], type metadata accessor for StaticAccessory);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  sub_251CCDEA8((uint64_t)&v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 16], v16 + v15, type metadata accessor for StaticAccessory);
  long long v25 = v18;
  uint64_t v26 = v14;
  uint64_t v27 = sub_251CCE4EC;
  uint64_t v28 = v16;
  swift_bridgeObjectRetain();
  return sub_251EDCEA0((uint64_t *)&v25);
}

uint64_t sub_251CCC534(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = type metadata accessor for StaticService();
  uint64_t v4 = MEMORY[0x270FA5388](v46);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v50 = (uint64_t)&v43 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    return 0;
  }
  uint64_t v45 = v7;
  uint64_t v51 = a2 + 32;
  uint64_t v43 = a2;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  LOBYTE(v12) = 0;
  uint64_t v44 = a1;
  uint64_t v47 = v10;
  uint64_t v48 = v9;
  do
  {
    uint64_t v13 = (void *)(v51 + 40 * v11);
    uint64_t v14 = v13[1];
    uint64_t v15 = v13[2];
    uint64_t v17 = v13[3];
    uint64_t v16 = v13[4];
    sub_251CCDF10(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v12)
    {
      sub_251CCDF78((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v12 = 1;
    }
    else
    {
      uint64_t v18 = *(void *)(v15 + 16);
      if (v18)
      {
        uint64_t v19 = v16;
        char v20 = v9[*(int *)(v46 + 88)];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v49 = v19;
        swift_bridgeObjectRetain();
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = v14;
          char v55 = *(unsigned char *)(v15 + v21 + 32);
          char v54 = v20;
          unint64_t v23 = ServiceKind.rawValue.getter();
          uint64_t v25 = v24;
          if (v23 == ServiceKind.rawValue.getter() && v25 == v26) {
            break;
          }
          char v28 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28) {
            goto LABEL_18;
          }
          uint64_t v14 = v22;
          if (v18 == ++v21)
          {
            swift_bridgeObjectRelease_n();
            a1 = v44;
            uint64_t v10 = v47;
            uint64_t v9 = v48;
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_18:
        swift_bridgeObjectRelease_n();
        uint64_t v30 = v50;
        sub_251CCDF10((uint64_t)v48, v50, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v31 = *(void *)(v17 + 16);
        uint64_t v32 = v45;
        sub_251CCDF10(v30, v45, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v31)
        {
          if (*(unsigned char *)(v32 + *(int *)(v46 + 96)) == 53) {
            char v33 = 0;
          }
          else {
            char v33 = *(unsigned char *)(v32 + *(int *)(v46 + 96));
          }
          swift_bridgeObjectRetain_n();
          uint64_t v34 = 0;
          while (1)
          {
            char v53 = *(unsigned char *)(v17 + v34 + 32);
            char v52 = v33;
            unint64_t v35 = ServiceKind.rawValue.getter();
            uint64_t v37 = v36;
            if (v35 == ServiceKind.rawValue.getter() && v37 == v38) {
              break;
            }
            char v40 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v40) {
              goto LABEL_32;
            }
            if (v31 == ++v34)
            {
              uint64_t v12 = 0;
              goto LABEL_33;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_32:
          uint64_t v12 = 1;
LABEL_33:
          a1 = v44;
          uint64_t v32 = v45;
          uint64_t v10 = v47;
          swift_bridgeObjectRelease_n();
        }
        else
        {
          uint64_t v12 = 1;
          a1 = v44;
          uint64_t v10 = v47;
        }
        sub_251CCDF78(v32, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251CCDF78(v50, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v41 = (uint64_t)v48;
        sub_251CCDF78((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StaticService);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = (char *)v41;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v10 = v47;
LABEL_16:
        uint64_t v29 = v50;
        sub_251CCDF10((uint64_t)v9, v50, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251CCDF78(v29, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251CCDF78((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = 0;
      }
    }
    ++v11;
  }
  while (v11 != v10);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_251CCC9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a3;
  uint64_t v66 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticCharacteristic();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v57 = (uint64_t)v48 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v56 = (uint64_t)v48 - v16;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v67 = MEMORY[0x263F8EE78];
  uint64_t v50 = *(void *)(a2 + 16);
  if (v50)
  {
    uint64_t v18 = a2 + 32;
    uint64_t v19 = a2;
    char v20 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v55 = v8;
    uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    v48[1] = v19;
    uint64_t v49 = v18;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    while (1)
    {
      uint64_t v24 = (void *)(v49 + 40 * v22);
      uint64_t v25 = v24[4];
      uint64_t v65 = *(void *)(v25 + 16);
      if (v65) {
        break;
      }
      uint64_t v23 = MEMORY[0x263F8EE78];
LABEL_4:
      ++v22;
      sub_251ED6B94(v23);
      if (v22 == v50)
      {
        swift_bridgeObjectRelease();
        return v67;
      }
    }
    uint64_t v54 = v22;
    uint64_t v26 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v28 = v24[3];
    uint64_t v64 = *(int *)(type metadata accessor for StaticService() + 112);
    uint64_t v53 = v26;
    swift_bridgeObjectRetain();
    uint64_t v52 = v27;
    swift_bridgeObjectRetain();
    uint64_t v51 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    uint64_t v29 = 0;
    uint64_t v62 = v25;
    unint64_t v63 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v30 = *(void *)(v66 + v64);
      if (*(void *)(v30 + 16))
      {
        uint64_t v31 = *(unsigned __int8 *)(v25 + v29 + 32);
        swift_bridgeObjectRetain();
        unint64_t v32 = sub_2519FE568(v31);
        if (v33)
        {
          sub_251CCDF10(*(void *)(v30 + 56) + *(void *)(v55 + 72) * v32, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v34 = 0;
        }
        else
        {
          uint64_t v34 = 1;
        }
        (*v20)(v6, v34, 1, v7);
        swift_bridgeObjectRelease();
        if ((*v21)(v6, 1, v7) != 1)
        {
          unint64_t v35 = v20;
          uint64_t v36 = v7;
          uint64_t v37 = v21;
          uint64_t v38 = v60;
          sub_251CCDEA8((uint64_t)v6, v60, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v39 = v57;
          sub_251CCDF10(v61, v57, type metadata accessor for StaticAccessory);
          char v40 = v13;
          uint64_t v41 = v59;
          sub_251CCDF10(v66, v39 + *(int *)(v59 + 20), (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v42 = *(int *)(v41 + 24);
          uint64_t v13 = v40;
          sub_251CCDEA8(v38, v39 + v42, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v43 = v56;
          sub_251CCDEA8(v39, v56, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          sub_251CCDEA8(v43, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v21 = v37;
            uint64_t v7 = v36;
            char v20 = v35;
            uint64_t v25 = v62;
            unint64_t v44 = v63;
          }
          else
          {
            unint64_t v44 = sub_251F0FD44(0, *(void *)(v63 + 16) + 1, 1, v63);
            uint64_t v21 = v37;
            uint64_t v7 = v36;
            char v20 = v35;
            uint64_t v25 = v62;
          }
          unint64_t v46 = *(void *)(v44 + 16);
          unint64_t v45 = *(void *)(v44 + 24);
          if (v46 >= v45 >> 1) {
            unint64_t v44 = sub_251F0FD44(v45 > 1, v46 + 1, 1, v44);
          }
          *(void *)(v44 + 16) = v46 + 1;
          unint64_t v47 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
          unint64_t v63 = v44;
          sub_251CCDEA8((uint64_t)v13, v44 + v47 + *(void *)(v58 + 72) * v46, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          goto LABEL_9;
        }
      }
      else
      {
        (*v20)(v6, 1, 1, v7);
      }
      sub_251A1B064((uint64_t)v6, &qword_26B21F108);
LABEL_9:
      if (v65 == ++v29)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v22 = v54;
        uint64_t v23 = v63;
        goto LABEL_4;
      }
    }
  }
  return result;
}

uint64_t sub_251CCCF4C@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_251CCBFE4(a1, a2, a3, *a4);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

double _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(double a1)
{
  sub_251CCD0F8();
  uint64_t v2 = sub_251F34DE0();
  MEMORY[0x270FA5388](v2 - 8);
  sub_251F34DC0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2350);
  MEMORY[0x270FA5388](v3 - 8);
  sub_251F34AB0();
  uint64_t v4 = (void *)sub_251F36000();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_fahrenheit);
  char v7 = sub_251F36120();

  if (v7)
  {
    double v8 = 0.555555556;
  }
  else
  {
    id v9 = objc_msgSend(v5, sel_celsius);
    sub_251F36120();

    double v8 = 0.5;
    uint64_t v4 = v9;
  }

  return v8 * round(a1 / v8);
}

unint64_t sub_251CCD0F8()
{
  unint64_t result = qword_269BA2338;
  if (!qword_269BA2338)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269BA2338);
  }
  return result;
}

uint64_t _s13HomeDataModel17ClimateSummarizerV19humidityRangeString_17addPercentageSignSSSgSaySdG_SbtFZ_0(uint64_t result, int a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return 0;
  }
  double v3 = *(double *)(result + 32);
  uint64_t v4 = v2 - 1;
  if (v4)
  {
    id v6 = (double *)(result + 40);
    uint64_t v7 = v4;
    double v5 = *(double *)(result + 32);
    do
    {
      double v8 = *v6++;
      double v9 = v8;
      if (v8 < v5) {
        double v5 = v9;
      }
      --v7;
    }
    while (v7);
    uint64_t v10 = (double *)(result + 40);
    do
    {
      double v11 = *v10++;
      double v12 = v11;
      if (v3 < v11) {
        double v3 = v12;
      }
      --v4;
    }
    while (v4);
  }
  else
  {
    double v5 = *(double *)(result + 32);
  }
  double v13 = round(v5);
  if (v13 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if ((*(void *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_43;
  }
  double v14 = round(v3);
  if ((*(void *)&v14 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_43;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v14 < 9.22337204e18)
  {
    HIDWORD(v46) = a2;
    uint64_t v15 = (uint64_t)v13;
    uint64_t v16 = (uint64_t)v14;
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A28]), sel_init);
    objc_msgSend(v17, sel_setNumberStyle_, 1);
    objc_msgSend(v17, sel_setUsesSignificantDigits_, 0);
    uint64_t v18 = sub_251F34DE0();
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x270FA5388](v18);
    uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34DD0();
    uint64_t v22 = (void *)sub_251F34DB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    objc_msgSend(v17, sel_setLocale_, v22);

    if (v15 != v16)
    {
      uint64_t v27 = (void *)sub_251F35EB0();
      id v28 = objc_msgSend(v17, sel_stringFromNumber_, v27);

      if (v28)
      {
        uint64_t v29 = sub_251F356F0();
        uint64_t v31 = v30;
      }
      else
      {
        uint64_t v47 = v15;
        uint64_t v29 = sub_251F36AB0();
        uint64_t v31 = v34;
      }
      unint64_t v35 = (void *)sub_251F35EB0();
      id v36 = objc_msgSend(v17, sel_stringFromNumber_, v35);

      if (v36)
      {
        uint64_t v37 = sub_251F356F0();
        uint64_t v39 = v38;
      }
      else
      {
        uint64_t v47 = v16;
        uint64_t v37 = sub_251F36AB0();
        uint64_t v39 = v40;
      }
      if ((v46 & 0x100000000) != 0) {
        uint64_t v41 = 0xD000000000000025;
      }
      else {
        uint64_t v41 = 0xD00000000000001BLL;
      }
      if ((v46 & 0x100000000) != 0) {
        uint64_t v42 = 0x8000000251F704B0;
      }
      else {
        uint64_t v42 = 0x8000000251F6D7C0;
      }
      static String.hfLocalized(_:)(v41, v42);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_251F3A500;
      uint64_t v44 = MEMORY[0x263F8D310];
      *(void *)(v43 + 56) = MEMORY[0x263F8D310];
      unint64_t v45 = sub_251B44770();
      *(void *)(v43 + 32) = v29;
      *(void *)(v43 + 40) = v31;
      *(void *)(v43 + 96) = v44;
      *(void *)(v43 + 104) = v45;
      *(void *)(v43 + 64) = v45;
      *(void *)(v43 + 72) = v37;
      *(void *)(v43 + 80) = v39;
      uint64_t v26 = sub_251F35720();

      swift_bridgeObjectRelease();
      return v26;
    }
    if ((v46 & 0x100000000) != 0)
    {
      id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A28]), sel_init);
      objc_msgSend(v23, sel_setNumberStyle_, 3);
      uint64_t v24 = (void *)sub_251F35DC0();
      id v25 = objc_msgSend(v23, sel_stringFromNumber_, v24);

      if (v25)
      {
        uint64_t v26 = sub_251F356F0();

        return v26;
      }
    }
    else
    {
      unint64_t v32 = (void *)sub_251F35EB0();
      id v33 = objc_msgSend(v17, sel_stringFromNumber_, v32);

      if (v33)
      {
        uint64_t v26 = sub_251F356F0();

        return v26;
      }
    }
    return 0;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_251CCD60C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251CCD710(a1, a2);
}

uint64_t _s13HomeDataModel17ClimateSummarizerV15temperatureIconySSSaySdGFZ_0(uint64_t a1)
{
  uint64_t result = 0xD000000000000012;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v4 = 0;
      double v5 = 0.0;
    }
    else
    {
      uint64_t v4 = v3 & 0x7FFFFFFFFFFFFFFELL;
      id v6 = (double *)(a1 + 40);
      double v5 = 0.0;
      uint64_t v7 = v3 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v5 = v5 + *(v6 - 1) + *v6;
        v6 += 2;
        v7 -= 2;
      }
      while (v7);
      if (v3 == v4) {
        goto LABEL_10;
      }
    }
    uint64_t v8 = v3 - v4;
    double v9 = (double *)(a1 + 8 * v4 + 32);
    do
    {
      double v10 = *v9++;
      double v5 = v5 + v10;
      --v8;
    }
    while (v8);
LABEL_10:
    double v11 = v5 / (double)v3;
    if (v11 >= 15.0)
    {
      if (v11 >= 21.0) {
        return 0xD000000000000010;
      }
    }
    else
    {
      return 0x656D6F6D72656874;
    }
  }
  return result;
}

uint64_t sub_251CCD710@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_251CCBFE4(a1, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17), **(void **)(v2 + 24));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_251CCD74C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    int64_t v9 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v9) {
      goto LABEL_11;
    }
LABEL_18:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v8 = *(void *)(a1 + 8 * v4 + 32);
    if (v8)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_251A3E2C0(0, *(void *)(v5 + 16) + 1, 1);
      }
      unint64_t v7 = *(void *)(v5 + 16);
      unint64_t v6 = *(void *)(v5 + 24);
      if (v7 >= v6 >> 1) {
        sub_251A3E2C0(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v5 + 16) = v7 + 1;
      *(void *)(v5 + 8 * v7 + 32) = v8;
    }
    ++v4;
  }
  while (v1 != v4);
  swift_bridgeObjectRelease();
  int64_t v9 = *(void *)(v5 + 16);
  if (!v9) {
    goto LABEL_18;
  }
LABEL_11:
  uint64_t v24 = v2;
  sub_251A3E2E0(0, v9, 0);
  uint64_t v10 = 0;
  unint64_t v11 = *(void *)(v24 + 16);
  unint64_t v12 = v11;
  do
  {
    uint64_t v13 = *(void *)(v5 + 8 * v10 + 32);
    unint64_t v14 = *(void *)(v24 + 24);
    unint64_t v15 = v12 + 1;
    if (v12 >= v14 >> 1) {
      sub_251A3E2E0(v14 > 1, v12 + 1, 1);
    }
    ++v10;
    *(void *)(v24 + 16) = v15;
    *(double *)(v24 + 8 * v12++ + 32) = (double)v13;
  }
  while (v9 != v10);
  unint64_t v16 = v9 + v11;
  if (v9 + v11 < 2)
  {
    unint64_t v17 = 0;
    double v18 = 0.0;
    do
    {
LABEL_22:
      double v22 = *(double *)(v24 + 32 + 8 * v17++);
      double v18 = v18 + v22;
    }
    while (v15 != v17);
    goto LABEL_23;
  }
  unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = (double *)(v24 + 40);
  double v18 = 0.0;
  unint64_t v21 = v16 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    double v18 = v18 + *(v20 - 1) + *v20;
    v20 += 2;
    v21 -= 2;
  }
  while (v21);
  if (v16 != v17) {
    goto LABEL_22;
  }
LABEL_23:
  swift_release();
  uint64_t result = swift_release();
  double v23 = round(fmax(fmin(v18 / (double)v9, 5.0), 1.0));
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v23 < 9.22337204e18) {
    return (uint64_t)v23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel17ClimateSummarizerV21airQualityRangeStringySSSgSaySiGFZ_0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  int64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    if (v1 >= 5)
    {
      int64x2_t v6 = vdupq_n_s64(v2);
      unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
      unint64_t v7 = (int64x2_t *)(a1 + 56);
      unint64_t v8 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v9 = v6;
      do
      {
        int64x2_t v6 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v6, v7[-1]), (int8x16_t)v7[-1], (int8x16_t)v6);
        int64x2_t v9 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v9, *v7), *(int8x16_t *)v7, (int8x16_t)v9);
        v7 += 2;
        v8 -= 4;
      }
      while (v8);
      int8x16_t v10 = vbslq_s8((int8x16_t)vcgtq_s64(v9, v6), (int8x16_t)v6, (int8x16_t)v9);
      uint64_t v11 = vextq_s8(v10, v10, 8uLL).u64[0];
      int8x8_t v4 = vbsl_s8((int8x8_t)vcgtd_s64(v11, v10.i64[0]), *(int8x8_t *)v10.i8, (int8x8_t)v11);
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL)) {
        goto LABEL_13;
      }
    }
    else
    {
      unint64_t v5 = 1;
      int8x8_t v4 = *(int8x8_t *)(a1 + 32);
    }
    unint64_t v12 = v1 - v5;
    uint64_t v13 = (int8x8_t *)(a1 + 8 * v5 + 32);
    do
    {
      int8x8_t v15 = *v13++;
      int8x8_t v14 = v15;
      if (*(void *)&v15 < *(void *)&v4) {
        int8x8_t v4 = v14;
      }
      --v12;
    }
    while (v12);
LABEL_13:
    if (v1 >= 5)
    {
      unint64_t v16 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int64x2_t v17 = vdupq_n_s64(v2);
      double v18 = (int64x2_t *)(a1 + 56);
      unint64_t v19 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v20 = v17;
      do
      {
        int64x2_t v17 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v17, v18[-1]), (int8x16_t)v17, (int8x16_t)v18[-1]);
        int64x2_t v20 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v20, *v18), (int8x16_t)v20, *(int8x16_t *)v18);
        v18 += 2;
        v19 -= 4;
      }
      while (v19);
      int8x16_t v21 = vbslq_s8((int8x16_t)vcgtq_s64(v17, v20), (int8x16_t)v17, (int8x16_t)v20);
      uint64_t v22 = vextq_s8(v21, v21, 8uLL).u64[0];
      int64_t v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v21.i64[0], v22), *(int8x8_t *)v21.i8, (int8x8_t)v22);
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL)) {
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v16 = 1;
    }
    unint64_t v23 = v1 - v16;
    uint64_t v24 = (int64_t *)(a1 + 8 * v16 + 32);
    do
    {
      int64_t v26 = *v24++;
      int64_t v25 = v26;
      if (v2 <= v26) {
        int64_t v2 = v25;
      }
      --v23;
    }
    while (v23);
    goto LABEL_22;
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 32);
LABEL_22:
  switch((unint64_t)v4)
  {
    case 1uLL:
      uint64_t v27 = 0xD000000000000028;
      id v28 = "HFCharacteristicValueAirQualityExcellent";
      goto LABEL_27;
    case 2uLL:
      uint64_t v29 = "HFCharacteristicValueAirQualityGood";
      goto LABEL_29;
    case 3uLL:
      uint64_t v29 = "HFCharacteristicValueAirQualityFair";
      goto LABEL_29;
    case 4uLL:
      uint64_t v27 = 0xD000000000000027;
      id v28 = "HFCharacteristicValueAirQualityInferior";
LABEL_27:
      unint64_t v30 = (unint64_t)(v28 - 32) | 0x8000000000000000;
      break;
    case 5uLL:
      uint64_t v29 = "HFCharacteristicValueAirQualityPoor";
LABEL_29:
      unint64_t v30 = (unint64_t)(v29 - 32) | 0x8000000000000000;
      uint64_t v27 = 0xD000000000000023;
      break;
    default:
      return 0;
  }
  uint64_t v31 = static String.hfLocalized(_:)(v27, v30);
  uint64_t v33 = v32;
  switch(v2)
  {
    case 1:
      uint64_t v34 = 0xD000000000000028;
      unint64_t v35 = "HFCharacteristicValueAirQualityExcellent";
      goto LABEL_37;
    case 2:
      id v36 = "HFCharacteristicValueAirQualityGood";
      goto LABEL_39;
    case 3:
      id v36 = "HFCharacteristicValueAirQualityFair";
      goto LABEL_39;
    case 4:
      uint64_t v34 = 0xD000000000000027;
      unint64_t v35 = "HFCharacteristicValueAirQualityInferior";
LABEL_37:
      unint64_t v37 = (unint64_t)(v35 - 32) | 0x8000000000000000;
      break;
    case 5:
      id v36 = "HFCharacteristicValueAirQualityPoor";
LABEL_39:
      unint64_t v37 = (unint64_t)(v36 - 32) | 0x8000000000000000;
      uint64_t v34 = 0xD000000000000023;
      break;
    default:
      swift_bridgeObjectRelease();
      return 0;
  }
  if (v31 == static String.hfLocalized(_:)(v34, v37) && v33 == v38 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
  }
  return v31;
}

unint64_t sub_251CCDD08()
{
  unint64_t result = qword_269BA2368;
  if (!qword_269BA2368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2368);
  }
  return result;
}

unint64_t sub_251CCDD5C()
{
  unint64_t result = qword_269BA2370;
  if (!qword_269BA2370)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA2360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2370);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateSummarizer()
{
  return &type metadata for ClimateSummarizer;
}

uint64_t sub_251CCDDBC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251CCDDCC(uint64_t a1)
{
  return sub_251E0FE4C(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251CCDDD4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251CCDDE4(uint64_t a1)
{
  return sub_251E0FF1C(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_251CCDDEC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251CCDE24(uint64_t a1)
{
  return sub_251CCC534(a1, *(void *)(v1 + 16));
}

uint64_t sub_251CCDE30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StaticAccessory(0) - 8);
  uint64_t result = sub_251CCC9D4(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
  *a2 = result;
  return result;
}

uint64_t sub_251CCDEA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251CCDF10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251CCDF78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251CCDFD8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251CCDFE8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251CCDFF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  v4[2] = a1;
  return sub_251AF7AC8(0, (void (*)(uint64_t *__return_ptr, char *, void *))sub_251CCE5A4, (uint64_t)v4, v2) & 1;
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v1 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  swift_bridgeObjectRelease();
  uint64_t v22 = (v2 + 24) & ~v2;
  uint64_t v3 = v0 + v22;
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  int64x2_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v0 + v22, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v22 + v1[6];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v23 = v2;
  uint64_t v24 = v0;
  if (swift_getEnumCaseMultiPayload() == 1) {
    v6(v7, v4);
  }
  else {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v3 + v1[7];
  uint64_t v9 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v6(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v3 + v1[8];
  uint64_t v11 = sub_251F34D20();
  uint64_t v20 = *(void *)(v11 - 8);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (!v12(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v10, v11);
  }
  v6(v3 + v1[11], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v3 + v1[21];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4)) {
    v6(v13, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v3 + v1[28];
  uint64_t v15 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v6(v14, v4);
    uint64_t v16 = v14 + *(int *)(v15 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v12(v18, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_19;
      }
      v6(v16, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v24, v22 + v21, v23 | 7);
}

uint64_t sub_251CCE4EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StaticAccessory(0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v9[2] = a1;
  v9[3] = v7;
  uint64_t result = sub_251B0A9B8((void (*)(uint64_t *__return_ptr, void *))sub_251CCE588, (uint64_t)v9, v6);
  *a2 = result;
  return result;
}

uint64_t sub_251CCE588@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_251E10420(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_251CCE5A4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_251E0FFEC(a1, a2, *(void *)(v3 + 16), a3);
}

id COTimerManager.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251CCE5E4(a1, a2, a3, (SEL *)&selRef_addTimer_);
}

id COTimerManager.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251CCE5E4(a1, a2, a3, (SEL *)&selRef_updateTimer_);
}

id sub_251CCE5E4(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v7 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_251A1A568(0, (unint64_t *)&qword_269BA2380);
  swift_dynamicCast();
  uint64_t v8 = v12;
  id v9 = objc_msgSend(v4, *a4, v12);

  return v9;
}

id COTimerManager.remove<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251CCE5E4(a1, a2, a3, (SEL *)&selRef_removeTimer_);
}

Swift::String __swiftcall COTimerManager.description()()
{
  v7.super_class = (Class)MEMORY[0x263F33FB0];
  id v0 = objc_msgSendSuper2(&v7, sel_description);
  uint64_t v1 = sub_251F356F0();
  uint64_t v3 = v2;

  uint64_t v4 = v1;
  uint64_t v5 = v3;
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

id sub_251CCE770()
{
  id v1 = objc_msgSend(*v0, sel_timers);
  return v1;
}

id sub_251CCE7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COTimerManager.add<A>(_:)(a1, a2, a3);
}

id sub_251CCE7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COTimerManager.update<A>(_:)(a1, a2, a3);
}

id sub_251CCE7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COTimerManager.remove<A>(_:)(a1, a2, a3);
}

id sub_251CCE814()
{
  id v1 = *v0;
  uint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_dismissTimerWithIdentifier_, v2);

  return v3;
}

id sub_251CCE864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_super v7 = *v4;
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  long long v11[2] = sub_251DE01DC;
  void v11[3] = &block_descriptor_36;
  uint64_t v8 = _Block_copy(v11);
  swift_retain();
  id v9 = objc_msgSend(v7, sel_addObserverForName_queue_usingBlock_, a1, a2, v8);
  _Block_release(v8);
  swift_release();
  return v9;
}

uint64_t sub_251CCE944(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  objc_msgSend(v2, sel_removeObserver_, sub_251F36B00());
  return swift_unknownObjectRelease();
}

uint64_t sub_251CCE9A4()
{
  id v1 = objc_msgSend(*v0, sel_description);
  uint64_t v2 = sub_251F356F0();

  return v2;
}

id sub_251CCE9FC()
{
  id v1 = *v0;
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  uint64_t v2 = (void *)sub_251F35AA0();
  id v3 = objc_msgSend(v1, sel_timersForAccessories_, v2);

  return v3;
}

id sub_251CCEA70(uint64_t a1)
{
  id v2 = objc_msgSend(*v1, sel_timersForAccessory_, a1);
  return v2;
}

id sub_251CCEAAC()
{
  return objc_msgSend(*v0, sel__canDispatchForAssociatedAccessory);
}

uint64_t sub_251CCEAD0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  swift_getObjectType();
  id v6 = sub_251CD06B4((uint64_t)a1, a2);

  uint64_t result = swift_unknownObjectRelease();
  *a3 = v6;
  return result;
}

uint64_t dispatch thunk of HomeTimerManager.timers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeTimerManager.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of HomeTimerManager.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of HomeTimerManager.remove<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of HomeTimerManager.dismissTimer(withIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of HomeTimerManager.addObserver(forName:queue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of HomeTimerManager.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HomeTimerManager.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of HomeTimerManager.timers(forAccessories:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HomeTimerManager.timers(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of HomeTimerManager._canDispatchForAssociatedAccessory()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HomeTimerManager.init(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

void *sub_251CCEC20(void *a1)
{
  id v2 = (void *)v1;
  *(unsigned char *)(v1 + 16) = 0;
  uint64_t v4 = MEMORY[0x263F8EE78];
  v2[4] = MEMORY[0x263F8EE78];
  v2[5] = sub_251A1A32C(v4);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08970]), sel_init);
  v2[3] = v5;
  sub_251A1A568(0, &qword_269BA0FC8);
  id v6 = v5;
  objc_super v7 = (void *)MEMORY[0x2533AB010](v4);
  id v8 = a1;
  objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_251CCED04()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_keyEnumerator);
  id v2 = objc_msgSend(v1, sel_allObjects);

  uint64_t v3 = sub_251F35AC0();
  if (!*(void *)(v3 + 16))
  {
    long long v6 = 0u;
    long long v7 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_251A0D51C(v3 + 32, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  if (!*((void *)&v7 + 1))
  {
LABEL_7:
    sub_251A1B064((uint64_t)&v6, &qword_26B21E190);
    return 0;
  }
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_251CCEE0C(unint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08970]), sel_init);
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(self, sel_futureWithResult_, v3);

    return (uint64_t)v11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_251F366C0();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    long long v7 = *(void **)(v1 + 24);
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x2533AB3A0](v6, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v6 + 32);
      }
      id v9 = v8;
      ++v6;
      id v10 = objc_msgSend(v7, sel_objectForKey_, v8);
      objc_msgSend(v3, sel_setObject_forKey_, v10, v9);
    }
    while (v4 != v6);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_251CCEF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_251CCED04();
  if (v6)
  {
    long long v7 = (void *)v6;
    uint64_t v8 = *(void *)(v2 + 40);
    if (*(void *)(v8 + 16) && (unint64_t v9 = sub_2519FF060(0), (v10 & 1) != 0))
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v13 = v11 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_251A1A4EC(v13, (uint64_t)v24);
          if (sub_251CCF638((uint64_t)v24, a1, a2)) {
            break;
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
          v13 += 40;
          if (!--v12)
          {
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        sub_251A1A444(v24, (uint64_t)&v25);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_18:
        uint64_t v27 = 0;
        long long v25 = 0u;
        long long v26 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v26 + 1))
      {
        sub_251A1B064((uint64_t)&v25, &qword_269B9DF08);
        sub_251CD0660();
        uint64_t v22 = (void *)swift_allocError();
        *uint64_t v23 = 0xD000000000000010;
        v23[1] = 0x8000000251F70590;
        id v17 = (id)sub_251F34A20();
        id v18 = objc_msgSend(self, sel_futureWithError_, v17);

        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v27 = 0;
      long long v25 = 0u;
      long long v26 = 0u;
    }
    sub_251A1B064((uint64_t)&v25, &qword_269B9DF08);
    uint64_t v14 = *(void **)(v3 + 24);
    id v15 = objc_msgSend(v14, sel_objectForKey_, v7);
    if (!v15)
    {
      sub_251A1A568(0, &qword_269BA0FC8);
      id v15 = (id)MEMORY[0x2533AB010](MEMORY[0x263F8EE78]);
    }
    id v16 = objc_msgSend(v15, sel_arrayByAddingObject_, sub_251F36B00());
    swift_unknownObjectRelease();
    if (v16)
    {
      objc_msgSend(v14, sel_setObject_forKey_, v16, v7);

      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
      id v18 = objc_msgSend(self, sel_futureWithResult_, v17);

LABEL_14:
      return (uint64_t)v18;
    }
    __break(1u);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
    id v21 = objc_msgSend(self, sel_futureWithResult_, v20);

    return (uint64_t)v21;
  }
  return result;
}

id sub_251CCF298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251CCF2F0(a1, a2, a3, 1u, 0x8000000251F70570, (uint64_t (*)(_OWORD *))sub_251CD0704);
}

id sub_251CCF2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251CCF2F0(a1, a2, a3, 2u, 0x8000000251F70550, (uint64_t (*)(_OWORD *))sub_251CD063C);
}

id sub_251CCF2F0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t (*a6)(_OWORD *))
{
  uint64_t v10 = v6;
  uint64_t v13 = sub_251CCED04();
  if (!v13)
  {
    id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
    id v29 = objc_msgSend(self, sel_futureWithResult_, v28);

    return v29;
  }
  uint64_t v14 = (void *)v13;
  uint64_t v15 = *(void *)(v6 + 40);
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_2519FF060(a4), (v17 & 1) != 0))
  {
    uint64_t v35 = a5;
    uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = v18 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_251A1A4EC(v20, (uint64_t)v36);
        if (sub_251CCF638((uint64_t)v36, a1, a2)) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
        v20 += 40;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      sub_251A1A444(v36, (uint64_t)&v37);
      swift_bridgeObjectRelease();
      uint64_t v30 = v35;
      if (*((void *)&v38 + 1))
      {
LABEL_18:
        sub_251A1B064((uint64_t)&v37, &qword_269B9DF08);
        sub_251CD0660();
        uint64_t v31 = (void *)swift_allocError();
        *uint64_t v32 = 0xD000000000000013;
        v32[1] = v30;
        uint64_t v33 = (void *)sub_251F34A20();
        id v34 = objc_msgSend(self, sel_futureWithError_, v33);

        return v34;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_15:
      uint64_t v30 = v35;
      uint64_t v39 = 0;
      long long v37 = 0u;
      long long v38 = 0u;
      swift_bridgeObjectRelease();
      if (*((void *)&v38 + 1)) {
        goto LABEL_18;
      }
    }
  }
  else
  {
    uint64_t v39 = 0;
    long long v37 = 0u;
    long long v38 = 0u;
  }
  sub_251A1B064((uint64_t)&v37, &qword_269B9DF08);
  id v21 = *(void **)(v10 + 24);
  id v22 = objc_msgSend(v21, sel_objectForKey_, v14);
  if (v22)
  {
    id v23 = (id)MEMORY[0x270FA5388](v22);
    sub_251C35C2C(a6);
    uint64_t v24 = (void *)sub_251F35AA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setObject_forKey_, v24, v14);
  }
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
  id v26 = objc_msgSend(self, sel_futureWithResult_, v25);

  return v26;
}

uint64_t sub_251CCF638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  long long v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_251A1A4EC(v5, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
  swift_dynamicCast();
  char v8 = sub_251F35650();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8 & 1;
}

BOOL sub_251CCF754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a2;
  uint64_t v16 = a3;
  sub_251A0D51C(a1, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
  swift_dynamicCast();
  uint64_t v5 = v18;
  uint64_t v6 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
  MEMORY[0x270FA5388](v11);
  (*(void (**)(uint64_t, uint64_t))(a4 + 64))(v16, a4);
  sub_251A9FE88();
  char v12 = sub_251F35650();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13((char *)v15 - v10, v7);
  v13((char *)v15 - v10, v7);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  return (v12 & 1) == 0;
}

void sub_251CCF924(uint64_t a1)
{
  sub_251A0D51C(a1, (uint64_t)v7);
  type metadata accessor for MockObserver();
  if (swift_dynamicCast())
  {
    swift_beginAccess();
    id v2 = v6;
    uint64_t v3 = sub_251CD0128((unint64_t *)(v1 + 32));

    unint64_t v4 = *(void *)(v1 + 32);
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (v5 >= v3) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v5 >= v3)
      {
LABEL_4:
        sub_251D39874(v3, v5);
        swift_endAccess();

        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_251CCFA34()
{
  uint64_t v1 = v0;
  sub_251F36400();
  swift_bridgeObjectRelease();
  v12[0] = 0xD00000000000001FLL;
  v12[1] = 0x8000000251F70530;
  id v2 = (void *)sub_251CCED04();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_uniqueIdentifier);

    uint64_t v5 = sub_251F34DA0();
    uint64_t v6 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v5);
    uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    sub_251F34D40();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  id v9 = *(id *)(v1 + 24);
  id v10 = objc_msgSend(v9, sel_description);
  sub_251F356F0();

  sub_251F35800();
  swift_bridgeObjectRelease();
  return v12[0];
}

uint64_t sub_251CCFC20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MockTimerManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for MockTimerManager.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251CCFD58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MockTimerManager.Action()
{
  return &type metadata for MockTimerManager.Action;
}

unint64_t sub_251CCFD94()
{
  unint64_t result = qword_269BA2388;
  if (!qword_269BA2388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2388);
  }
  return result;
}

id sub_251CCFDE8()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 24), sel_objectEnumerator);
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v1, sel_allObjects);

    sub_251F35AC0();
  }
  unsigned int v4 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_futureWithResult_, v4);

  return v5;
}

uint64_t sub_251CCFEBC(uint64_t a1, uint64_t a2)
{
  return sub_251CCEF6C(a1, a2);
}

id sub_251CCFEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251CCF298(a1, a2, a3);
}

id sub_251CCFF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251CCF2C4(a1, a2, a3);
}

id sub_251CCFF28()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
  id v1 = objc_msgSend(self, sel_futureWithResult_, v0);

  return v1;
}

id sub_251CCFF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251CD04F8(a3, a4);
}

void sub_251CCFFBC(uint64_t a1)
{
}

uint64_t sub_251CCFFE0()
{
  return sub_251CCFA34();
}

uint64_t sub_251CD0004(unint64_t a1)
{
  return sub_251CCEE0C(a1);
}

id sub_251CD0028(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(*(void *)v1 + 24), sel_objectForKey_, a1);
  if (!v2)
  {
    sub_251A1A568(0, &qword_269BA0FC8);
    id v2 = (id)MEMORY[0x2533AB010](MEMORY[0x263F8EE78]);
  }
  id v3 = objc_msgSend(self, sel_futureWithResult_, v2);

  return v3;
}

uint64_t sub_251CD00C4()
{
  return *(unsigned __int8 *)(*(void *)v0 + 16);
}

void *sub_251CD00D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for MockTimerManager();
  uint64_t v4 = swift_allocObject();
  unint64_t result = sub_251CCEC20(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_251CD0128(unint64_t *a1)
{
  unint64_t v2 = *a1;
  if (*a1 >> 62) {
    goto LABEL_62;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
LABEL_3:
    sub_251A1A568(0, (unint64_t *)&qword_26B21ECF8);
    unint64_t v4 = 0;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
      unsigned int v6 = v5;
      char v7 = sub_251F36120();

      if (v7) {
        break;
      }
      unint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_251F366C0();
        if (!v3) {
          goto LABEL_10;
        }
        goto LABEL_3;
      }
      ++v4;
      if (v8 == v3) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else if (!(*a1 >> 62))
    {
      if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_16:
        for (unint64_t i = v4 + 5; ; ++i)
        {
          unint64_t v2 = i - 4;
          unint64_t v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v13 = (id)MEMORY[0x2533AB3A0](i - 4);
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_52;
            }
            if (v2 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_53;
            }
            id v13 = *(id *)(v12 + 8 * i);
          }
          uint64_t v14 = v13;
          char v15 = sub_251F36120();

          if (v15) {
            goto LABEL_42;
          }
          if (v2 != v4) {
            break;
          }
LABEL_41:
          if (__OFADD__(v4++, 1)) {
            goto LABEL_55;
          }
LABEL_42:
          unint64_t v28 = i - 3;
          if (__OFADD__(v2, 1)) {
            goto LABEL_54;
          }
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v29 = sub_251F366C0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v29 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v28 == v29) {
            return v4;
          }
        }
        unint64_t v16 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v17 = (id)MEMORY[0x2533AB3A0](v4, *a1);
          unint64_t v16 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_27:
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_58;
            }
            if (v2 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_59;
            }
            id v18 = *(id *)(v16 + 8 * i);
            goto LABEL_30;
          }
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v4 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v17 = *(id *)(v16 + 8 * v4 + 32);
          if ((v16 & 0xC000000000000001) == 0) {
            goto LABEL_27;
          }
        }
        id v18 = (id)MEMORY[0x2533AB3A0](i - 4, v16);
        unint64_t v16 = *a1;
LABEL_30:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v16;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v16 & 0x8000000000000000) != 0
          || (v16 & 0x4000000000000000) != 0)
        {
          sub_251A925F4(v16);
          unint64_t v16 = v20;
          *a1 = v20;
        }
        id v21 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
        *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v18;

        sub_251F35AE0();
        unint64_t v22 = *a1;
        int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v22;
        if (!v23 || (v22 & 0x8000000000000000) != 0 || (v22 & 0x4000000000000000) != 0)
        {
          sub_251A925F4(v22);
          unint64_t v22 = v24;
          *a1 = v24;
        }
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_60;
        }
        uint64_t v25 = v22 & 0xFFFFFFFFFFFFFF8;
        if (v2 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_61;
        }
        id v26 = *(void **)(v25 + 8 * i);
        *(void *)(v25 + 8 * i) = v17;

        sub_251F35AE0();
        goto LABEL_41;
      }
      return v4;
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10 != v31) {
      goto LABEL_16;
    }
    return v4;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (!(*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_251F366C0();
  swift_bridgeObjectRelease();
  return v30;
}

id sub_251CD04F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unsigned int v6 = (objc_class *)type metadata accessor for MockObserver();
  char v7 = (char *)objc_allocWithZone(v6);
  unint64_t v8 = (uint64_t *)&v7[OBJC_IVAR____TtC13HomeDataModel12MockObserver_block];
  *unint64_t v8 = 0;
  v8[1] = 0;
  swift_retain();
  id v9 = v7;
  sub_251F34D90();
  uint64_t v10 = *v8;
  *unint64_t v8 = a1;
  v8[1] = a2;
  swift_retain();
  sub_251A27C7C(v10);

  v14.receiver = v9;
  v14.super_class = v6;
  id v11 = objc_msgSendSuper2(&v14, sel_init);
  swift_release();
  swift_beginAccess();
  id v12 = v11;
  MEMORY[0x2533AA9D0]();
  if (*(void *)((*(void *)(v3 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_251F35B10();
  sub_251F35B70();
  sub_251F35AE0();
  swift_endAccess();
  return v12;
}

BOOL sub_251CD063C(uint64_t a1)
{
  return sub_251CCF754(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_251CD0660()
{
  unint64_t result = qword_269BA2390;
  if (!qword_269BA2390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2390);
  }
  return result;
}

id sub_251CD06B4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return objc_msgSend(v4, sel_initForAccessory_withConnectionProvider_, a1, a2);
}

BOOL sub_251CD0704(uint64_t a1)
{
  return sub_251CD063C(a1);
}

unint64_t MatterMetadataKey.rawValue.getter()
{
  unint64_t result = 0x4E79616C70736944;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44496D6F6F52;
      break;
    case 2:
      unint64_t result = 0x6E6564496E6F6349;
      break;
    case 3:
      unint64_t result = 0x657469726F766146;
      break;
    case 4:
      unint64_t result = 0x61446E4F776F6853;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0x657A6953656C6954;
      break;
    case 7:
      unint64_t result = 0x746169636F737341;
      break;
    case 8:
      unint64_t result = 0x496564756C636E49;
      break;
    case 9:
      unint64_t result = 0x6564644165746144;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251CD0894@<X0>(unsigned __int16 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  id v5 = v4;
  swift_beginAccess();
  id v10 = objc_getAssociatedObject(v5, &unk_269BA2399);
  swift_endAccess();
  if (v10)
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_251ABBD00((uint64_t)&v18, (uint64_t)v20);
  sub_251AA82A4((uint64_t)v20, (uint64_t)&v18);
  if (!*((void *)&v19 + 1))
  {
    sub_251A9090C((uint64_t)&v18);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA23A8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    uint64_t result = sub_251A9090C((uint64_t)v20);
    *a4 = 0u;
    a4[1] = 0u;
    return result;
  }
  if (!*(void *)(v17 + 16) || (unint64_t v11 = sub_2519FE5CC(a1), (v12 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v13 = *(void *)(*(void *)(v17 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_2519FE798(a2, a3);
    if (v15)
    {
      sub_251A0D51C(*(void *)(v13 + 56) + 32 * v14, (uint64_t)a4);
    }
    else
    {
      *a4 = 0u;
      a4[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a4 = 0u;
    a4[1] = 0u;
  }
  swift_bridgeObjectRelease();
  return sub_251A9090C((uint64_t)v20);
}

uint64_t sub_251CD0A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  id v4 = v3;
  swift_beginAccess();
  id v8 = objc_getAssociatedObject(v4, &unk_269BA2398);
  swift_endAccess();
  if (v8)
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_251ABBD00((uint64_t)&v13, (uint64_t)v15);
  sub_251AA82A4((uint64_t)v15, (uint64_t)&v13);
  if (!*((void *)&v14 + 1))
  {
    sub_251A9090C((uint64_t)&v13);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    uint64_t result = sub_251A9090C((uint64_t)v15);
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_2519FE798(a1, a2);
    if (v10)
    {
      sub_251A0D51C(*(void *)(v12 + 56) + 32 * v9, (uint64_t)a3);
    }
    else
    {
      *a3 = 0u;
      a3[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  swift_bridgeObjectRelease();
  return sub_251A9090C((uint64_t)v15);
}

HomeDataModel::MatterMetadataKey_optional __swiftcall MatterMetadataKey.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_251CD0C1C(unsigned __int8 *a1, char *a2)
{
  return sub_251DB2D9C(*a1, *a2);
}

unint64_t sub_251CD0C2C()
{
  unint64_t result = qword_269BA23A0;
  if (!qword_269BA23A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA23A0);
  }
  return result;
}

uint64_t sub_251CD0C80()
{
  return sub_251F36D00();
}

uint64_t sub_251CD0CC8()
{
  return sub_251AA9B28();
}

uint64_t sub_251CD0CD0()
{
  return sub_251F36D00();
}

HomeDataModel::MatterMetadataKey_optional sub_251CD0D14(Swift::String *a1)
{
  return MatterMetadataKey.init(rawValue:)(*a1);
}

unint64_t sub_251CD0D20@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MatterMetadataKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for MatterMetadataKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251CD0E14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterMetadataKey()
{
  return &type metadata for MatterMetadataKey;
}

uint64_t sub_251CD0E4C(unsigned __int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_beginAccess();
  id v10 = objc_getAssociatedObject(v4, &unk_269BA2399);
  swift_endAccess();
  if (v10)
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_251ABBD00((uint64_t)v22, (uint64_t)&v23);
  if (!v24)
  {
    sub_251A9090C((uint64_t)&v23);
LABEL_9:
    unint64_t v11 = sub_251A19D40(MEMORY[0x263F8EE78]);
    if (!*(void *)(v11 + 16)) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA23A8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  unint64_t v11 = v20;
  if (!*(void *)(v20 + 16)) {
    goto LABEL_12;
  }
LABEL_10:
  unint64_t v12 = sub_2519FE5CC(a1);
  if (v13)
  {
    unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
    unint64_t v21 = v14;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v14 = sub_2519FA1A4(MEMORY[0x263F8EE78]);
  unint64_t v21 = v14;
LABEL_13:
  sub_251AA82A4(a4, (uint64_t)&v23);
  if (v24)
  {
    sub_251A0D578(&v23, v22);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A0E23C(v22, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t v16 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_251A9090C((uint64_t)&v23);
    sub_251BB8A1C(a2, a3, v22);
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)v22);
    uint64_t v16 = v21;
  }
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v23 = v11;
  sub_251A0E230(v16, a1, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  long long v18 = (void *)sub_251F35540();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  objc_setAssociatedObject(v5, &unk_269BA2399, v18, (void *)0x301);
  swift_endAccess();

  return swift_bridgeObjectRelease();
}

void sub_251CD10F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  swift_beginAccess();
  id v8 = objc_getAssociatedObject(v4, &unk_269BA2398);
  swift_endAccess();
  if (v8)
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_251ABBD00((uint64_t)v12, (uint64_t)&v13);
  if (v14)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    if (swift_dynamicCast())
    {
      unint64_t v9 = v15;
      goto LABEL_9;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v13);
  }
  unint64_t v9 = sub_2519FA1A4(MEMORY[0x263F8EE78]);
LABEL_9:
  unint64_t v15 = v9;
  sub_251AA82A4(a3, (uint64_t)&v13);
  if (v14)
  {
    sub_251A0D578(&v13, v12);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A0E23C(v12, a1, a2, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_251A9090C((uint64_t)&v13);
    sub_251BB8A1C(a1, a2, v12);
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)v12);
  }
  unint64_t v11 = (void *)sub_251F35540();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  objc_setAssociatedObject(v4, &unk_269BA2398, v11, (void *)0x301);
  swift_endAccess();
}

uint64_t sub_251CD1300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v32 = *(void *)(v40 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v40);
  id v36 = (_WORD *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  char v7 = (_WORD *)((char *)&v32 - v6);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (_WORD *)((char *)&v32 - v8);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v37 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (v13)
  {
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v15 << 6);
LABEL_23:
    uint64_t v21 = *(void *)(v37 + 56);
    __int16 v22 = *(_WORD *)(*(void *)(v37 + 48) + 2 * v17);
    long long v23 = (int *)(type metadata accessor for StaticEndpoint() - 8);
    uint64_t v24 = v21 + *(void *)(*(void *)v23 + 72) * v17;
    uint64_t v25 = v40;
    sub_251CF2C44(v24, (uint64_t)v9 + *(int *)(v40 + 48), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    *unint64_t v9 = v22;
    sub_251BB6DD8((uint64_t)v9, (uint64_t)v7);
    uint64_t v26 = *(int *)(v25 + 48);
    uint64_t v27 = (uint64_t)v36 + v26;
    *id v36 = *v7;
    sub_251CF2C44((uint64_t)v7 + v26, v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v28 = *(void *)(v27 + v23[11]);
    if (*(void *)(v28 + 16))
    {
      unint64_t v29 = sub_2519FE614(2);
      if (v30)
      {
        sub_251A1A930(*(void *)(v28 + 56) + (v29 << 8), (uint64_t)v38);
        sub_251A1A930((uint64_t)v38, (uint64_t)v39);
        if (sub_251A4DB2C((uint64_t)v39) == 6)
        {
          sub_251A4E128((uint64_t)v39);
          sub_251CF2CAC(v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          swift_release();
          uint64_t v31 = v33;
          sub_251BB6DD8((uint64_t)v7, v33);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v31, 0, 1, v40);
        }
      }
    }
    sub_251CF2CAC(v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t result = sub_251A1B064((uint64_t)v7, &qword_26B21F4C8);
  }
  int64_t v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 >= v35) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v18);
  ++v15;
  if (v19) {
    goto LABEL_22;
  }
  int64_t v15 = v18 + 1;
  if (v18 + 1 >= v35) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v15);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v15 = v18 + 2;
  if (v18 + 2 >= v35) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v15);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v15 = v18 + 3;
  if (v18 + 3 >= v35) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v15);
  if (v19)
  {
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_23;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v35)
  {
LABEL_27:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v33, 1, 1, v40);
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v35) {
      goto LABEL_27;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251CD16D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a1, (uint64_t)v10, &qword_26B220BB0);
  uint64_t v11 = sub_251F35CD0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_251A1B064((uint64_t)v10, &qword_26B220BB0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_251F35C00();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_251F35CC0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  int64_t v18 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    int64_t v18 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  void v20[2] = v18;
  void v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t AccessoryDetailsBasicInfo.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251CF2C44(v1, a1, type metadata accessor for AccessoryDetails.Payload);
}

uint64_t AccessoryDetailsBasicInfo.commit()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251CD192C, 0, 0);
}

uint64_t sub_251CD192C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251CD1A10;
  uint64_t v4 = MEMORY[0x263F8EE60] + 8;
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2158](v3, v4, v5, 0, 0, &unk_269BA23C0, v2, v6);
}

uint64_t sub_251CD1A10()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BEEE5C, 0, 0);
}

uint64_t sub_251CD1B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  uint64_t v4 = *(void *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  long long v3[4] = v4;
  v3[5] = *(void *)(v4 + 64);
  v3[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CD1C1C, 0, 0);
}

uint64_t sub_251CD1C1C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[3];
  uint64_t v15 = sub_251F35CD0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v5(v2, 1, 1, v15);
  sub_251CF2C44(v4, v1, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  sub_251CF39E4(v1, v6 + v13, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_251CD16D0(v2, (uint64_t)&unk_269BA24C0, v6);
  sub_251A1B064(v2, &qword_26B220BB0);
  v5(v2, 1, 1, v15);
  sub_251CF2C44(v4, v1, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  sub_251CF39E4(v1, v7 + v13, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_251CD16D0(v2, (uint64_t)&unk_269BA24D0, v7);
  sub_251A1B064(v2, &qword_26B220BB0);
  v5(v2, 1, 1, v15);
  sub_251CF2C44(v4, v1, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  sub_251CF39E4(v1, v8 + v13, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_251CD16D0(v2, (uint64_t)&unk_269BA24E0, v8);
  sub_251A1B064(v2, &qword_26B220BB0);
  v5(v2, 1, 1, v15);
  sub_251CF2C44(v4, v1, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  sub_251CF39E4(v1, v9 + v13, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_251CD16D0(v2, (uint64_t)&unk_269BA24F0, v9);
  sub_251A1B064(v2, &qword_26B220BB0);
  v5(v2, 1, 1, v15);
  sub_251CF2C44(v4, v1, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  sub_251CF39E4(v1, v10 + v13, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_251CD16D0(v2, (uint64_t)&unk_269BA2500, v10);
  sub_251A1B064(v2, &qword_26B220BB0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v14 + 8);
  return v11();
}

uint64_t sub_251CD2010(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_251AB3DD4;
  return sub_251CD1B28(a1, a2, v6);
}

uint64_t sub_251CD20C0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitName()();
}

uint64_t AccessoryDetailsBasicInfo.commitName()()
{
  v1[10] = v0;
  type metadata accessor for StaticEndpoint();
  v1[11] = swift_task_alloc();
  type metadata accessor for StaticServiceGroup();
  v1[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  v1[13] = swift_task_alloc();
  v1[14] = type metadata accessor for StateSnapshot(0);
  v1[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  v1[16] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for StaticService();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  v1[21] = v3;
  v1[22] = *(void *)(v3 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = type metadata accessor for AccessoryDetailsBasicInfo();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CD2400, 0, 0);
}

uint64_t sub_251CD2400()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0[10];
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(v0[29] + 20));
  uint64_t v3 = *v2;
  v0[32] = *v2;
  unint64_t v4 = v2[1];
  v0[33] = v4;
  if (v4)
  {
    uint64_t v23 = v3;
    uint64_t v5 = qword_269B9C350;
    swift_bridgeObjectRetain();
    if (v5 != -1)
    {
      swift_once();
      uint64_t v1 = v0[10];
    }
    uint64_t v6 = v0[31];
    uint64_t v7 = sub_251F350A0();
    v0[34] = __swift_project_value_buffer(v7, (uint64_t)qword_269B9FFC0);
    sub_251CF2C44(v1, v6, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_251F35080();
    os_log_type_t v9 = sub_251F35FD0();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = v0[31];
    if (v10)
    {
      uint64_t v12 = v0[28];
      uint64_t v13 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v24 = v22;
      *(_DWORD *)uint64_t v13 = 136315394;
      swift_bridgeObjectRetain();
      v0[8] = sub_251A00E84(v23, v4, &v24);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2080;
      sub_251CF2C44(v11, v12, type metadata accessor for AccessoryDetails.Payload);
      sub_251E7876C(v12);
      unint64_t v25 = 0xD000000000000019;
      unint64_t v26 = 0x8000000251F705D0;
      sub_251F35800();
      swift_bridgeObjectRelease();
      uint64_t v14 = v25;
      unint64_t v15 = v26;
      sub_251CF2CAC(v12, type metadata accessor for AccessoryDetails.Payload);
      v0[9] = sub_251A00E84(v14, v15, &v24);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251CF2CAC(v11, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
      _os_log_impl(&dword_2519F3000, v8, v9, "Write new name: %s to staticServiceGroup %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v22, -1, -1);
      MEMORY[0x2533AC760](v13, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_251CF2CAC(v11, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    }

    sub_251CF2C44(v0[10], v0[27], type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_251CF39E4(v0[27], v0[19], (uint64_t (*)(void))type metadata accessor for StaticService);
        unint64_t v19 = (void *)swift_task_alloc();
        v0[39] = v19;
        *unint64_t v19 = v0;
        v19[1] = sub_251CD3120;
        uint64_t result = StaticService.set(displayName:)(v23, v4);
        break;
      case 2u:
        sub_251CF39E4(v0[27], v0[12], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        int64_t v20 = (void *)swift_task_alloc();
        v0[48] = v20;
        *int64_t v20 = v0;
        v20[1] = sub_251CD3C34;
        uint64_t result = StaticServiceGroup.set(displayName:)(v23, v4);
        break;
      case 3u:
        sub_251CF39E4(v0[27], v0[11], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v21 = (void *)swift_task_alloc();
        v0[50] = v21;
        *uint64_t v21 = v0;
        v21[1] = sub_251CD3E7C;
        uint64_t result = StaticEndpoint.set(name:)(v23, v4);
        break;
      default:
        sub_251CF39E4(v0[27], v0[25], type metadata accessor for StaticAccessory);
        int64_t v18 = (void *)swift_task_alloc();
        v0[35] = v18;
        *int64_t v18 = v0;
        v18[1] = sub_251CD2AC0;
        uint64_t result = StaticAccessory.set(displayName:)(v23, v4);
        break;
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  return result;
}

uint64_t sub_251CD2AC0()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251CD40C0;
  }
  else {
    uint64_t v2 = sub_251CD2BD4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD2BD4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  StaticAccessory.primaryStaticService.getter(v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v5 = v0[16];
  if (v4 == 1)
  {
    sub_251CF2CAC(v0[25], type metadata accessor for StaticAccessory);
    swift_bridgeObjectRelease();
    sub_251A1B064(v5, qword_26B21EE20);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  sub_251CF39E4(v0[16], v0[20], (uint64_t (*)(void))type metadata accessor for StaticService);
  if (StaticAccessory.hasVisibleServices(minCount:)(2))
  {
    uint64_t v6 = v0[25];
    uint64_t v7 = v0[20];
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v8 = v6;
LABEL_7:
    sub_251CF2CAC(v8, type metadata accessor for StaticAccessory);
    goto LABEL_8;
  }
  uint64_t v9 = v0[25];
  uint64_t v10 = v0[33];
  if (*(unsigned char *)(v9 + *(int *)(v0[21] + 100)))
  {
    uint64_t v11 = v0[20];
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v8 = v9;
    goto LABEL_7;
  }
  uint64_t v14 = (void *)swift_task_alloc();
  v0[37] = v14;
  void *v14 = v0;
  v14[1] = sub_251CD2EB8;
  uint64_t v15 = v0[32];
  return StaticService.set(displayName:)(v15, v10);
}

uint64_t sub_251CD2EB8()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251CD4434;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_251CD2FD4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD2FD4()
{
  uint64_t v1 = v0[25];
  sub_251CF2CAC(v0[20], (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251CF2CAC(v1, type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251CD3120()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251CD47C8;
  }
  else {
    uint64_t v2 = sub_251CD3234;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD3234()
{
  *(void *)(v0 + 328) = sub_251F35C80();
  *(void *)(v0 + 336) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CD32CC, v2, v1);
}

uint64_t sub_251CD32CC()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CD3364, 0, 0);
}

uint64_t sub_251CD3364()
{
  *(void *)(v0 + 344) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CD33F0, v2, v1);
}

uint64_t sub_251CD33F0()
{
  swift_release();
  *(void *)(v0 + 352) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CD3464, 0, 0);
}

uint64_t sub_251CD3464()
{
  *(void *)(v0 + 360) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CD34F0, v2, v1);
}

uint64_t sub_251CD34F0()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = v0[15];
  swift_release();
  swift_getKeyPath();
  v0[7] = v1;
  sub_251CE90D0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251CF2C44(v3, v2, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251CD3620, 0, 0);
}

uint64_t sub_251CD3620()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = *(void *)(v1 + *(int *)(v0[14] + 32));
  swift_bridgeObjectRetain();
  sub_251CF2CAC(v1, type metadata accessor for StateSnapshot);
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_2519FE584(v0[19] + *(int *)(v0[17] + 44)), (v4 & 1) != 0))
  {
    sub_251CF2C44(*(void *)(v2 + 56) + *(void *)(v0[22] + 72) * v3, v0[13], type metadata accessor for StaticAccessory);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[21];
  uint64_t v7 = v0[22];
  uint64_t v8 = v0[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v5, 1, v6);
  swift_bridgeObjectRelease();
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
  uint64_t v10 = v0[13];
  if (v9 == 1)
  {
    sub_251CF2CAC(v0[19], (uint64_t (*)(void))type metadata accessor for StaticService);
    swift_bridgeObjectRelease();
    sub_251A1B064(v10, &qword_26B21F240);
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  uint64_t v12 = v0[23];
  uint64_t v11 = v0[24];
  sub_251CF39E4(v0[13], v11, type metadata accessor for StaticAccessory);
  Swift::Bool v13 = StaticAccessory.hasVisibleServices(minCount:)(2);
  sub_251CF2C44(v11, v12, type metadata accessor for StaticAccessory);
  if (v13)
  {
    uint64_t v14 = v0[23];
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v14, type metadata accessor for StaticAccessory);
LABEL_11:
    uint64_t v18 = v0[19];
    sub_251CF2CAC(v0[24], type metadata accessor for StaticAccessory);
    sub_251CF2CAC(v18, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_12;
  }
  uint64_t v15 = v0[23];
  char v16 = *(unsigned char *)(v15 + *(int *)(v0[21] + 100));
  sub_251CF2CAC(v15, type metadata accessor for StaticAccessory);
  uint64_t v17 = v0[33];
  if (v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v21 = (void *)swift_task_alloc();
  v0[46] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_251CD39CC;
  uint64_t v22 = v0[32];
  return StaticAccessory.set(displayName:)(v22, v17);
}

uint64_t sub_251CD39CC()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251CD4B3C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_251CD3AE8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD3AE8()
{
  uint64_t v1 = v0[19];
  sub_251CF2CAC(v0[24], type metadata accessor for StaticAccessory);
  sub_251CF2CAC(v1, (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251CD3C34()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251CD4ED0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_251CD3D50;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD3D50()
{
  sub_251CF2CAC(*(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD3E7C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251CD3F94, 0, 0);
}

uint64_t sub_251CD3F94()
{
  sub_251CF2CAC(*(void *)(v0 + 88), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD40C0()
{
  uint64_t v21 = v0;
  sub_251CF2CAC(v0[25], type metadata accessor for StaticAccessory);
  uint64_t v1 = (void *)v0[36];
  sub_251CF2C44(v0[10], v0[30], (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FB0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[32];
    unint64_t v5 = v0[33];
    uint64_t v6 = v0[30];
    uint64_t v16 = v6;
    uint64_t v7 = v0[28];
    uint64_t v17 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[5] = sub_251A00E84(v4, v5, &v18);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_251CF2C44(v6, v7, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v7);
    unint64_t v19 = 0xD000000000000019;
    unint64_t v20 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v10 = v19;
    unint64_t v11 = v20;
    sub_251CF2CAC(v7, type metadata accessor for AccessoryDetails.Payload);
    v0[6] = sub_251A00E84(v10, v11, &v18);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v16, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v2, v3, "Error commit name: %s for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v9, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
    uint64_t v12 = v17;
  }
  else
  {
    uint64_t v13 = v0[30];
    swift_bridgeObjectRelease_n();
    sub_251CF2CAC(v13, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t v12 = v1;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_251CD4434()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0[25];
  sub_251CF2CAC(v0[20], (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251CF2CAC(v1, type metadata accessor for StaticAccessory);
  uint64_t v2 = (void *)v0[38];
  sub_251CF2C44(v0[10], v0[30], (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  swift_bridgeObjectRetain();
  os_log_type_t v3 = sub_251F35080();
  os_log_type_t v4 = sub_251F35FB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[32];
    unint64_t v6 = v0[33];
    uint64_t v7 = v0[30];
    uint64_t v17 = v7;
    uint64_t v8 = v0[28];
    uint64_t v18 = v2;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    v0[5] = sub_251A00E84(v5, v6, &v19);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    sub_251CF2C44(v7, v8, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v8);
    unint64_t v20 = 0xD000000000000019;
    unint64_t v21 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v11 = v20;
    unint64_t v12 = v21;
    sub_251CF2CAC(v8, type metadata accessor for AccessoryDetails.Payload);
    v0[6] = sub_251A00E84(v11, v12, &v19);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v3, v4, "Error commit name: %s for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
    uint64_t v13 = v18;
  }
  else
  {
    uint64_t v14 = v0[30];
    swift_bridgeObjectRelease_n();
    sub_251CF2CAC(v14, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t v13 = v2;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_251CD47C8()
{
  unint64_t v21 = v0;
  sub_251CF2CAC(v0[19], (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v1 = (void *)v0[40];
  sub_251CF2C44(v0[10], v0[30], (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FB0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[32];
    unint64_t v5 = v0[33];
    uint64_t v6 = v0[30];
    uint64_t v16 = v6;
    uint64_t v7 = v0[28];
    uint64_t v17 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[5] = sub_251A00E84(v4, v5, &v18);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_251CF2C44(v6, v7, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v7);
    unint64_t v19 = 0xD000000000000019;
    unint64_t v20 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v10 = v19;
    unint64_t v11 = v20;
    sub_251CF2CAC(v7, type metadata accessor for AccessoryDetails.Payload);
    v0[6] = sub_251A00E84(v10, v11, &v18);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v16, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v2, v3, "Error commit name: %s for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v9, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
    unint64_t v12 = v17;
  }
  else
  {
    uint64_t v13 = v0[30];
    swift_bridgeObjectRelease_n();
    sub_251CF2CAC(v13, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    unint64_t v12 = v1;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_251CD4B3C()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0[19];
  sub_251CF2CAC(v0[24], type metadata accessor for StaticAccessory);
  sub_251CF2CAC(v1, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v2 = (void *)v0[47];
  sub_251CF2C44(v0[10], v0[30], (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  swift_bridgeObjectRetain();
  os_log_type_t v3 = sub_251F35080();
  os_log_type_t v4 = sub_251F35FB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[32];
    unint64_t v6 = v0[33];
    uint64_t v7 = v0[30];
    uint64_t v17 = v7;
    uint64_t v8 = v0[28];
    uint64_t v18 = v2;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    v0[5] = sub_251A00E84(v5, v6, &v19);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    sub_251CF2C44(v7, v8, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v8);
    unint64_t v20 = 0xD000000000000019;
    unint64_t v21 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v11 = v20;
    unint64_t v12 = v21;
    sub_251CF2CAC(v8, type metadata accessor for AccessoryDetails.Payload);
    v0[6] = sub_251A00E84(v11, v12, &v19);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v3, v4, "Error commit name: %s for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
    uint64_t v13 = v18;
  }
  else
  {
    uint64_t v14 = v0[30];
    swift_bridgeObjectRelease_n();
    sub_251CF2CAC(v14, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t v13 = v2;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_251CD4ED0()
{
  unint64_t v21 = v0;
  sub_251CF2CAC(v0[12], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v1 = (void *)v0[49];
  sub_251CF2C44(v0[10], v0[30], (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FB0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[32];
    unint64_t v5 = v0[33];
    uint64_t v6 = v0[30];
    uint64_t v16 = v6;
    uint64_t v7 = v0[28];
    uint64_t v17 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[5] = sub_251A00E84(v4, v5, &v18);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_251CF2C44(v6, v7, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v7);
    unint64_t v19 = 0xD000000000000019;
    unint64_t v20 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v10 = v19;
    unint64_t v11 = v20;
    sub_251CF2CAC(v7, type metadata accessor for AccessoryDetails.Payload);
    v0[6] = sub_251A00E84(v10, v11, &v18);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v16, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v2, v3, "Error commit name: %s for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v9, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
    unint64_t v12 = v17;
  }
  else
  {
    uint64_t v13 = v0[30];
    swift_bridgeObjectRelease_n();
    sub_251CF2CAC(v13, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    unint64_t v12 = v1;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_251CD5244()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitRoom()();
}

uint64_t AccessoryDetailsBasicInfo.commitRoom()()
{
  v1[6] = v0;
  type metadata accessor for StaticEndpoint();
  v1[7] = swift_task_alloc();
  type metadata accessor for StaticServiceGroup();
  v1[8] = swift_task_alloc();
  type metadata accessor for StaticService();
  v1[9] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = type metadata accessor for AccessoryDetailsBasicInfo();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  v1[17] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CD5510, 0, 0);
}

uint64_t sub_251CD5510()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  sub_251A1B128(v0[6] + *(int *)(v0[14] + 24), v3, &qword_269B9D138);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[14];
    uint64_t v5 = v0[6];
    sub_251A1B064(v0[17], &qword_269B9D138);
    if (*(void *)(v5 + *(int *)(v4 + 28) + 8))
    {
      uint64_t v6 = (void *)swift_task_alloc();
      v0[31] = v6;
      void *v6 = v0;
      v6[1] = sub_251CD65D8;
      return sub_251CE02B4();
    }
    else
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v26 = (uint64_t (*)(void))v0[1];
      return v26();
    }
  }
  else
  {
    sub_251CF39E4(v0[17], v0[22], type metadata accessor for StaticRoom);
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v9 = v0[21];
    uint64_t v8 = v0[22];
    uint64_t v10 = v0[16];
    uint64_t v11 = v0[6];
    uint64_t v12 = sub_251F350A0();
    v0[23] = __swift_project_value_buffer(v12, (uint64_t)qword_269B9FFC0);
    sub_251CF2C44(v8, v9, type metadata accessor for StaticRoom);
    sub_251CF2C44(v11, v10, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FD0();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = v0[21];
    uint64_t v17 = v0[16];
    if (v15)
    {
      uint64_t v18 = v0[13];
      uint64_t v19 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = v33;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v20 = StaticRoom.description.getter();
      v0[4] = sub_251A00E84(v20, v21, &v34);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251CF2CAC(v16, type metadata accessor for StaticRoom);
      *(_WORD *)(v19 + 12) = 2080;
      sub_251CF2C44(v17, v18, type metadata accessor for AccessoryDetails.Payload);
      sub_251E7876C(v18);
      unint64_t v35 = 0xD000000000000019;
      unint64_t v36 = 0x8000000251F705D0;
      sub_251F35800();
      swift_bridgeObjectRelease();
      uint64_t v22 = v35;
      unint64_t v23 = v36;
      sub_251CF2CAC(v18, type metadata accessor for AccessoryDetails.Payload);
      v0[5] = sub_251A00E84(v22, v23, &v34);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
      _os_log_impl(&dword_2519F3000, v13, v14, "Write %s to dataModel room for %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v33, -1, -1);
      MEMORY[0x2533AC760](v19, -1, -1);
    }
    else
    {
      sub_251CF2CAC(v0[21], type metadata accessor for StaticRoom);
      sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    }

    sub_251CF2C44(v0[6], v0[12], type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_251CF39E4(v0[12], v0[9], (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v27 = (void *)swift_task_alloc();
        v0[26] = v27;
        *uint64_t v27 = v0;
        v27[1] = sub_251CD5F18;
        uint64_t v28 = v0[22];
        uint64_t result = StaticService.set(staticRoom:)(v28);
        break;
      case 2u:
        sub_251CF39E4(v0[12], v0[8], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        unint64_t v29 = (void *)swift_task_alloc();
        v0[28] = v29;
        void *v29 = v0;
        v29[1] = sub_251CD6160;
        uint64_t v30 = v0[22];
        uint64_t result = StaticServiceGroup.set(staticRoom:)(v30);
        break;
      case 3u:
        sub_251CF39E4(v0[12], v0[7], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v31 = (void *)swift_task_alloc();
        v0[30] = v31;
        *uint64_t v31 = v0;
        v31[1] = sub_251CD63A8;
        uint64_t v32 = v0[22];
        uint64_t result = StaticEndpoint.set(roomID:)(v32);
        break;
      default:
        sub_251CF39E4(v0[12], v0[10], type metadata accessor for StaticAccessory);
        uint64_t v24 = (void *)swift_task_alloc();
        v0[24] = v24;
        void *v24 = v0;
        v24[1] = sub_251CD5CD0;
        uint64_t v25 = v0[22];
        uint64_t result = StaticAccessory.set(staticRoom:)(v25);
        break;
    }
  }
  return result;
}

uint64_t sub_251CD5CD0()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251CD6848;
  }
  else {
    uint64_t v2 = sub_251CD5DE4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD5DE4()
{
  uint64_t v1 = v0[22];
  sub_251CF2CAC(v0[10], type metadata accessor for StaticAccessory);
  sub_251CF2CAC(v1, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251CD5F18()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251CD6C14;
  }
  else {
    uint64_t v2 = sub_251CD602C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD602C()
{
  uint64_t v1 = v0[22];
  sub_251CF2CAC(v0[9], (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251CF2CAC(v1, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251CD6160()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251CD6FE0;
  }
  else {
    uint64_t v2 = sub_251CD6274;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD6274()
{
  uint64_t v1 = v0[22];
  sub_251CF2CAC(v0[8], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  sub_251CF2CAC(v1, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251CD63A8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251CD64A4, 0, 0);
}

uint64_t sub_251CD64A4()
{
  uint64_t v1 = v0[22];
  sub_251CF2CAC(v0[7], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251CF2CAC(v1, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251CD65D8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251CD6848()
{
  uint64_t v27 = v0;
  sub_251CF2CAC(v0[10], type metadata accessor for StaticAccessory);
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[6];
  sub_251CF2C44(v0[22], v0[20], type metadata accessor for StaticRoom);
  sub_251CF2C44(v3, v2, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v23 = v0[22];
    uint64_t v6 = v0[20];
    uint64_t v7 = v0[15];
    uint64_t v20 = v7;
    uint64_t v8 = v0[13];
    id v22 = v1;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v21;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = StaticRoom.description.getter();
    v0[2] = sub_251A00E84(v10, v11, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v6, type metadata accessor for StaticRoom);
    *(_WORD *)(v9 + 12) = 2080;
    sub_251CF2C44(v7, v8, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v8);
    unint64_t v25 = 0xD000000000000019;
    unint64_t v26 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25;
    unint64_t v13 = v26;
    sub_251CF2CAC(v8, type metadata accessor for AccessoryDetails.Payload);
    v0[3] = sub_251A00E84(v12, v13, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v20, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v4, v5, "Error committing room: %s for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);

    uint64_t v14 = v23;
  }
  else
  {
    uint64_t v15 = v0[22];
    uint64_t v16 = v0[20];
    uint64_t v17 = v0[15];

    sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    sub_251CF2CAC(v16, type metadata accessor for StaticRoom);
    uint64_t v14 = v15;
  }
  sub_251CF2CAC(v14, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_251CD6C14()
{
  uint64_t v27 = v0;
  sub_251CF2CAC(v0[9], (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[6];
  sub_251CF2C44(v0[22], v0[20], type metadata accessor for StaticRoom);
  sub_251CF2C44(v3, v2, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v23 = v0[22];
    uint64_t v6 = v0[20];
    uint64_t v7 = v0[15];
    uint64_t v20 = v7;
    uint64_t v8 = v0[13];
    id v22 = v1;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v21;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = StaticRoom.description.getter();
    v0[2] = sub_251A00E84(v10, v11, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v6, type metadata accessor for StaticRoom);
    *(_WORD *)(v9 + 12) = 2080;
    sub_251CF2C44(v7, v8, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v8);
    unint64_t v25 = 0xD000000000000019;
    unint64_t v26 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25;
    unint64_t v13 = v26;
    sub_251CF2CAC(v8, type metadata accessor for AccessoryDetails.Payload);
    v0[3] = sub_251A00E84(v12, v13, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v20, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v4, v5, "Error committing room: %s for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);

    uint64_t v14 = v23;
  }
  else
  {
    uint64_t v15 = v0[22];
    uint64_t v16 = v0[20];
    uint64_t v17 = v0[15];

    sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    sub_251CF2CAC(v16, type metadata accessor for StaticRoom);
    uint64_t v14 = v15;
  }
  sub_251CF2CAC(v14, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_251CD6FE0()
{
  uint64_t v27 = v0;
  sub_251CF2CAC(v0[8], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[6];
  sub_251CF2C44(v0[22], v0[20], type metadata accessor for StaticRoom);
  sub_251CF2C44(v3, v2, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v23 = v0[22];
    uint64_t v6 = v0[20];
    uint64_t v7 = v0[15];
    uint64_t v20 = v7;
    uint64_t v8 = v0[13];
    id v22 = v1;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v21;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = StaticRoom.description.getter();
    v0[2] = sub_251A00E84(v10, v11, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v6, type metadata accessor for StaticRoom);
    *(_WORD *)(v9 + 12) = 2080;
    sub_251CF2C44(v7, v8, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v8);
    unint64_t v25 = 0xD000000000000019;
    unint64_t v26 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25;
    unint64_t v13 = v26;
    sub_251CF2CAC(v8, type metadata accessor for AccessoryDetails.Payload);
    v0[3] = sub_251A00E84(v12, v13, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v20, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v4, v5, "Error committing room: %s for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);

    uint64_t v14 = v23;
  }
  else
  {
    uint64_t v15 = v0[22];
    uint64_t v16 = v0[20];
    uint64_t v17 = v0[15];

    sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    sub_251CF2CAC(v16, type metadata accessor for StaticRoom);
    uint64_t v14 = v15;
  }
  sub_251CF2CAC(v14, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_251CD73AC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitShouldShowInDashboard()();
}

uint64_t AccessoryDetailsBasicInfo.commitShouldShowInDashboard()()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for AccessoryDetailsBasicInfo();
  v1[7] = swift_task_alloc();
  type metadata accessor for StaticEndpoint();
  v1[8] = swift_task_alloc();
  type metadata accessor for StaticServiceGroup();
  v1[9] = swift_task_alloc();
  type metadata accessor for StaticService();
  v1[10] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[11] = swift_task_alloc();
  v1[12] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CD75C0, 0, 0);
}

uint64_t sub_251CD75C0()
{
  int v1 = *(unsigned __int8 *)(*(void *)(v0 + 40) + *(int *)(*(void *)(v0 + 48) + 32));
  *(unsigned char *)(v0 + 176) = v1;
  if (v1 == 2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    int v4 = v1 & 1;
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251F350A0();
    *(void *)(v0 + 120) = __swift_project_value_buffer(v5, (uint64_t)qword_269B9FFC0);
    uint64_t v6 = sub_251F35080();
    os_log_type_t v7 = sub_251F35FD0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 67109120;
      *(_DWORD *)(v0 + 172) = v4;
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v6, v7, "Write %{BOOL}d to dataModel shouldShowInDashboard", v8, 8u);
      MEMORY[0x2533AC760](v8, -1, -1);
    }

    sub_251CF2C44(*(void *)(v0 + 40), *(void *)(v0 + 112), type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_251CF39E4(*(void *)(v0 + 112), *(void *)(v0 + 80), (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v10 = (void *)swift_task_alloc();
        *(void *)(v0 + 144) = v10;
        void *v10 = v0;
        v10[1] = sub_251CD7C28;
        uint64_t result = StaticService.set(showInDashboard:)(v4);
        break;
      case 2u:
        sub_251CF39E4(*(void *)(v0 + 112), *(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        unint64_t v11 = (void *)swift_task_alloc();
        *(void *)(v0 + 152) = v11;
        *unint64_t v11 = v0;
        v11[1] = sub_251CD7DEC;
        uint64_t result = StaticServiceGroup.set(showInDashboard:)(v4);
        break;
      case 3u:
        sub_251CF39E4(*(void *)(v0 + 112), *(void *)(v0 + 64), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v12 = (void *)swift_task_alloc();
        *(void *)(v0 + 160) = v12;
        void *v12 = v0;
        v12[1] = sub_251CD7FB0;
        uint64_t result = StaticEndpoint.set(shouldShowInDashboard:)(v4);
        break;
      default:
        sub_251CF39E4(*(void *)(v0 + 112), *(void *)(v0 + 88), type metadata accessor for StaticAccessory);
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 128) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_251CD7A4C;
        uint64_t result = StaticAccessory.set(showInDashboard:)(v4);
        break;
    }
  }
  return result;
}

uint64_t sub_251CD7A4C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251CD8174;
  }
  else {
    uint64_t v2 = sub_251CD7B60;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD7B60()
{
  sub_251CF2CAC(*(void *)(v0 + 88), type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD7C28()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251CD7D24, 0, 0);
}

uint64_t sub_251CD7D24()
{
  sub_251CF2CAC(*(void *)(v0 + 80), (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD7DEC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251CD7EE8, 0, 0);
}

uint64_t sub_251CD7EE8()
{
  sub_251CF2CAC(*(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD7FB0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251CD80AC, 0, 0);
}

uint64_t sub_251CD80AC()
{
  sub_251CF2CAC(*(void *)(v0 + 64), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD8174()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 56);
  sub_251CF2CAC(*(void *)(v0 + 88), type metadata accessor for StaticAccessory);
  sub_251CF2C44(v2, v4, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  id v5 = v3;
  id v6 = v3;
  os_log_type_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v22 = *(void *)(v0 + 56);
    int v11 = *(unsigned char *)(v0 + 176) & 1;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = v24;
    *(_DWORD *)uint64_t v12 = 136315650;
    os_log_type_t type = v8;
    *(void *)(v0 + 16) = v9;
    id v13 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    uint64_t v14 = sub_251F35770();
    *(void *)(v0 + 24) = sub_251A00E84(v14, v15, &v25);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 12) = 1024;
    *(_DWORD *)(v0 + 168) = v11;
    sub_251F361D0();
    *(_WORD *)(v12 + 18) = 2080;
    sub_251CF2C44(v22, v10, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v10);
    unint64_t v26 = 0xD000000000000019;
    unint64_t v27 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v16 = v26;
    unint64_t v17 = v27;
    sub_251CF2CAC(v10, type metadata accessor for AccessoryDetails.Payload);
    *(void *)(v0 + 32) = sub_251A00E84(v16, v17, &v25);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v22, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v7, type, "Error '%s' committing showInDashboard: %{BOOL}d for %s", (uint8_t *)v12, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    MEMORY[0x2533AC760](v12, -1, -1);
  }
  else
  {
    uint64_t v18 = *(void **)(v0 + 136);
    uint64_t v19 = *(void *)(v0 + 56);

    sub_251CF2CAC(v19, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v1 + 8);
  return v20();
}

uint64_t sub_251CD8514()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitIsFavorite()();
}

uint64_t AccessoryDetailsBasicInfo.commitIsFavorite()()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for AccessoryDetailsBasicInfo();
  v1[7] = swift_task_alloc();
  type metadata accessor for StaticEndpoint();
  v1[8] = swift_task_alloc();
  type metadata accessor for StaticService();
  v1[9] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CD86FC, 0, 0);
}

uint64_t sub_251CD86FC()
{
  int v1 = *(unsigned __int8 *)(*(void *)(v0 + 40) + *(int *)(*(void *)(v0 + 48) + 36));
  *(unsigned char *)(v0 + 160) = v1;
  if (v1 == 2)
  {
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    int v2 = v1 & 1;
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_251F350A0();
    *(void *)(v0 + 112) = __swift_project_value_buffer(v3, (uint64_t)qword_269B9FFC0);
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FD0();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v6 = 67109120;
      *(_DWORD *)(v0 + 156) = v2;
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v4, v5, "Write %{BOOL}d to dataModel isFavorite", v6, 8u);
      MEMORY[0x2533AC760](v6, -1, -1);
    }

    sub_251CF2C44(*(void *)(v0 + 40), *(void *)(v0 + 104), type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_251CF39E4(*(void *)(v0 + 104), *(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 136) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_251CD8CCC;
        uint64_t result = StaticService.set(favorite:)(v2);
        break;
      case 2u:
        sub_251CF2CAC(*(void *)(v0 + 104), type metadata accessor for AccessoryDetails.Payload);
        goto LABEL_14;
      case 3u:
        sub_251CF39E4(*(void *)(v0 + 104), *(void *)(v0 + 64), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        int v11 = (void *)swift_task_alloc();
        *(void *)(v0 + 144) = v11;
        *int v11 = v0;
        v11[1] = sub_251CD8E84;
        uint64_t result = StaticEndpoint.set(favorite:)(v2);
        break;
      default:
        sub_251CF39E4(*(void *)(v0 + 104), *(void *)(v0 + 80), type metadata accessor for StaticAccessory);
        os_log_type_t v7 = (void *)swift_task_alloc();
        *(void *)(v0 + 120) = v7;
        *os_log_type_t v7 = v0;
        v7[1] = sub_251CD8AFC;
        uint64_t result = StaticAccessory.set(favorite:)(v2);
        break;
    }
  }
  return result;
}

uint64_t sub_251CD8AFC()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    int v2 = sub_251CD903C;
  }
  else {
    int v2 = sub_251CD8C10;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CD8C10()
{
  sub_251CF2CAC(*(void *)(v0 + 80), type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD8CCC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251CD8DC8, 0, 0);
}

uint64_t sub_251CD8DC8()
{
  sub_251CF2CAC(*(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD8E84()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251CD8F80, 0, 0);
}

uint64_t sub_251CD8F80()
{
  sub_251CF2CAC(*(void *)(v0 + 64), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD903C()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 56);
  sub_251CF2CAC(*(void *)(v0 + 80), type metadata accessor for StaticAccessory);
  sub_251CF2C44(v2, v4, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  id v5 = v3;
  id v6 = v3;
  os_log_type_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v22 = *(void *)(v0 + 56);
    int v11 = *(unsigned char *)(v0 + 160) & 1;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = v24;
    *(_DWORD *)uint64_t v12 = 136315650;
    os_log_type_t type = v8;
    *(void *)(v0 + 16) = v9;
    id v13 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    uint64_t v14 = sub_251F35770();
    *(void *)(v0 + 24) = sub_251A00E84(v14, v15, &v25);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 12) = 1024;
    *(_DWORD *)(v0 + 152) = v11;
    sub_251F361D0();
    *(_WORD *)(v12 + 18) = 2080;
    sub_251CF2C44(v22, v10, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v10);
    unint64_t v26 = 0xD000000000000019;
    unint64_t v27 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v16 = v26;
    unint64_t v17 = v27;
    sub_251CF2CAC(v10, type metadata accessor for AccessoryDetails.Payload);
    *(void *)(v0 + 32) = sub_251A00E84(v16, v17, &v25);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v22, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v7, type, "Error '%s' committing favorite: %{BOOL}d for %s", (uint8_t *)v12, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    MEMORY[0x2533AC760](v12, -1, -1);
  }
  else
  {
    uint64_t v18 = *(void **)(v0 + 128);
    uint64_t v19 = *(void *)(v0 + 56);

    sub_251CF2CAC(v19, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v1 + 8);
  return v20();
}

uint64_t sub_251CD93D0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  return AccessoryDetailsBasicInfo.commitIconSymbol()();
}

uint64_t AccessoryDetailsBasicInfo.commitIconSymbol()()
{
  v1[2] = v0;
  type metadata accessor for StaticEndpoint();
  v1[3] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for StaticService();
  long long v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  v1[7] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[8] = swift_task_alloc();
  v1[9] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CD95D8, 0, 0);
}

uint64_t sub_251CD95D8()
{
  uint64_t v1 = v0[2];
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 40)) == 89)
  {
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    sub_251CF2C44(v1, v0[10], type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_251CF39E4(v0[10], v0[6], (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v13 = IconSymbol.rawValue.getter();
        uint64_t v15 = v14;
        v0[13] = v14;
        uint64_t v16 = (void *)swift_task_alloc();
        v0[14] = v16;
        *uint64_t v16 = v0;
        v16[1] = sub_251CD9BC0;
        uint64_t v17 = v13;
        uint64_t v18 = v15;
        goto LABEL_16;
      case 2u:
        sub_251CF2CAC(v0[10], type metadata accessor for AccessoryDetails.Payload);
        goto LABEL_8;
      case 3u:
        sub_251CF39E4(v0[10], v0[3], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v9 = IconSymbol.rawValue.getter();
        uint64_t v11 = v10;
        v0[15] = v10;
        uint64_t v12 = (void *)swift_task_alloc();
        v0[16] = v12;
        void *v12 = v0;
        v12[1] = sub_251CD9D88;
        return StaticEndpoint.set(customIconSymbol:)(v9, v11);
      default:
        uint64_t v2 = v0[7];
        uint64_t v3 = v0[4];
        uint64_t v4 = v0[5];
        sub_251CF39E4(v0[10], v0[8], type metadata accessor for StaticAccessory);
        uint64_t v5 = IconSymbol.rawValue.getter();
        uint64_t v7 = v6;
        v0[11] = v6;
        StaticAccessory.primaryStaticService.getter(v2);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
        {
          sub_251A1B064(v0[7], qword_26B21EE20);
          swift_bridgeObjectRelease();
          uint64_t result = MEMORY[0x270FA2498](sub_251CD9B10, 0, 0);
        }
        else
        {
          uint64_t v19 = (void *)swift_task_alloc();
          v0[12] = v19;
          *uint64_t v19 = v0;
          v19[1] = sub_251CD99C0;
          uint64_t v17 = v5;
          uint64_t v18 = v7;
LABEL_16:
          uint64_t result = StaticService.set(customIconSymbol:)(v17, v18);
        }
        break;
    }
  }
  return result;
}

uint64_t sub_251CD99C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  sub_251CF2CAC(v1, (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251CD9B10, 0, 0);
}

uint64_t sub_251CD9B10()
{
  sub_251CF2CAC(*(void *)(v0 + 64), type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD9BC0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251CD9CD8, 0, 0);
}

uint64_t sub_251CD9CD8()
{
  sub_251CF2CAC(*(void *)(v0 + 48), (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CD9D88()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251CD9EA0, 0, 0);
}

uint64_t sub_251CD9EA0()
{
  sub_251CF2CAC(*(void *)(v0 + 24), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AccessoryDetailsBasicInfo.hash(into:)(long long *a1)
{
  uint64_t v3 = type metadata accessor for StaticRoom(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AccessoryDetails.Payload.hash(into:)(a1);
  uint64_t v10 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  if (*(void *)(v1 + v10[5] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  sub_251A1B128(v1 + v10[6], (uint64_t)v9, &qword_269B9D138);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251CF39E4((uint64_t)v9, (uint64_t)v6, type metadata accessor for StaticRoom);
    sub_251F36CC0();
    StaticRoom.hash(into:)(a1);
    sub_251CF2CAC((uint64_t)v6, type metadata accessor for StaticRoom);
  }
  if (*(void *)(v1 + v10[7] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if (*(unsigned char *)(v1 + v10[8]) != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (*(unsigned char *)(v1 + v10[9]) != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  int v11 = *(unsigned __int8 *)(v1 + v10[10]);
  if (v11 == 89) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  v13[15] = v11;
  IconSymbol.rawValue.getter();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

unint64_t sub_251CDA274(char a1)
{
  unint64_t result = 0x64616F6C796170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614E646567617473;
      break;
    case 2:
      unint64_t result = 0x6F52646567617473;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251CDA370()
{
  return sub_251CDA274(*v0);
}

uint64_t sub_251CDA378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251CE8DC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251CDA3A0(uint64_t a1)
{
  unint64_t v2 = sub_251CE8CF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251CDA3DC(uint64_t a1)
{
  unint64_t v2 = sub_251CE8CF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AccessoryDetailsBasicInfo.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA23F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251CE8CF4();
  sub_251F36DA0();
  v11[15] = 0;
  type metadata accessor for AccessoryDetails.Payload(0);
  sub_251CE90D0(&qword_269BA2408, (void (*)(uint64_t))type metadata accessor for AccessoryDetails.Payload);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for AccessoryDetailsBasicInfo();
    v11[14] = 1;
    sub_251F36910();
    v11[13] = 2;
    type metadata accessor for StaticRoom(0);
    sub_251CE90D0(&qword_269B9E098, (void (*)(uint64_t))type metadata accessor for StaticRoom);
    sub_251F36970();
    v11[12] = 3;
    sub_251F36910();
    v11[11] = 4;
    sub_251F36920();
    v11[10] = 5;
    sub_251F36920();
    v11[9] = *(unsigned char *)(v3 + *(int *)(v9 + 40));
    v11[8] = 6;
    sub_251CA6434();
    sub_251F36970();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AccessoryDetailsBasicInfo.hashValue.getter()
{
  sub_251F36CA0();
  AccessoryDetailsBasicInfo.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t AccessoryDetailsBasicInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v46);
  uint64_t v47 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2410);
  uint64_t v44 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v11[v9[7]];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v53 = (uint64_t *)v12;
  uint64_t v13 = (uint64_t)&v11[v9[8]];
  uint64_t v14 = type metadata accessor for StaticRoom(0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v51 = v13;
  v15(v13, 1, 1, v14);
  uint64_t v16 = &v11[v9[9]];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v52 = v16;
  uint64_t v17 = v9[10];
  v11[v17] = 2;
  uint64_t v18 = v9[11];
  v11[v18] = 2;
  uint64_t v19 = v9[12];
  v11[v19] = 89;
  uint64_t v20 = a1;
  uint64_t v21 = a1[3];
  uint64_t v50 = v20;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  sub_251CE8CF4();
  uint64_t v48 = v7;
  uint64_t v22 = v54;
  sub_251F36D90();
  if (v22)
  {
    uint64_t v26 = v51;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
    swift_bridgeObjectRelease();
    sub_251A1B064(v26, &qword_269B9D138);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v54 = v17;
    uint64_t v41 = v19;
    uint64_t v42 = v18;
    uint64_t v23 = v44;
    uint64_t v24 = (uint64_t)v45;
    char v62 = 0;
    sub_251CE90D0(&qword_269BA2418, (void (*)(uint64_t))type metadata accessor for AccessoryDetails.Payload);
    uint64_t v25 = (uint64_t)v47;
    sub_251F36880();
    sub_251CF39E4(v25, (uint64_t)v11, type metadata accessor for AccessoryDetails.Payload);
    char v61 = 1;
    uint64_t v27 = sub_251F36790();
    uint64_t v47 = v11;
    uint64_t v28 = v53;
    *uint64_t v53 = v27;
    v28[1] = v29;
    char v60 = 2;
    sub_251CE90D0(&qword_269B9E1B8, (void (*)(uint64_t))type metadata accessor for StaticRoom);
    sub_251F367D0();
    sub_251CE8D48(v24, v51);
    char v59 = 3;
    uint64_t v30 = sub_251F36790();
    uint64_t v31 = v52;
    uint64_t v32 = v30;
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    *uint64_t v31 = v32;
    v31[1] = v34;
    char v58 = 4;
    unint64_t v35 = v48;
    char v36 = sub_251F367A0();
    uint64_t v37 = v47;
    v47[v54] = v36;
    char v57 = 5;
    v37[v42] = sub_251F367A0();
    char v55 = 6;
    sub_251CA64DC();
    uint64_t v38 = (uint64_t)v37;
    uint64_t v39 = v49;
    sub_251F367D0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v35, v39);
    *(unsigned char *)(v38 + v41) = v56;
    sub_251CF2C44(v38, v43, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
    return sub_251CF2CAC(v38, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
}

uint64_t AccessoryDetailsBasicInfo.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251CF2C44(v2, (uint64_t)v18, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251CF39E4((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v24 = sub_251F34DA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, v12, v24);
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v21 = (uint64_t)v12;
      break;
    case 2u:
      sub_251CF39E4((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, v9, v22);
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      uint64_t v21 = (uint64_t)v9;
      break;
    case 3u:
      sub_251CF39E4((uint64_t)v18, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, v6, v23);
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      uint64_t v21 = (uint64_t)v6;
      break;
    default:
      sub_251CF39E4((uint64_t)v18, (uint64_t)v15, type metadata accessor for StaticAccessory);
      uint64_t v19 = sub_251F34DA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, v15, v19);
      uint64_t v20 = type metadata accessor for StaticAccessory;
      uint64_t v21 = (uint64_t)v15;
      break;
  }
  return sub_251CF2CAC(v21, v20);
}

uint64_t sub_251CDB148()
{
  sub_251F36CA0();
  AccessoryDetailsBasicInfo.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251CDB18C()
{
  sub_251F36CA0();
  AccessoryDetailsBasicInfo.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251CDB1C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AccessoryDetailsBasicInfo.init(from:)(a1, a2);
}

uint64_t sub_251CDB1E0(void *a1)
{
  return AccessoryDetailsBasicInfo.encode(to:)(a1);
}

uint64_t sub_251CDB1F8()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251CDB218, 0, 0);
}

uint64_t sub_251CDB218()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251CD1A10;
  uint64_t v4 = MEMORY[0x263F8EE60] + 8;
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2158](v3, v4, v5, 0, 0, &unk_269BA2490, v2, v6);
}

uint64_t AccessoryDetailsBasicInfo.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251CDB334(a1, type metadata accessor for StaticAccessory, a2);
}

{
  return sub_251CDB334(a1, (uint64_t (*)(void))type metadata accessor for StaticService, a2);
}

{
  return sub_251CDB334(a1, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, a2);
}

uint64_t sub_251CDB334@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v7 = (void *)(a3 + v6[5]);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = a3 + v6[6];
  uint64_t v9 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)(a3 + v6[7]);
  void *v10 = 0;
  v10[1] = 0;
  *(unsigned char *)(a3 + v6[8]) = 2;
  *(unsigned char *)(a3 + v6[9]) = 2;
  *(unsigned char *)(a3 + v6[10]) = 89;
  sub_251CF39E4(a1, a3, a2);
  type metadata accessor for AccessoryDetails.Payload(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t AccessoryDetailsBasicInfo.name.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v1 + *(int *)(v6 + 28));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  sub_251CF2C44(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  else
  {
    sub_251CF2C44((uint64_t)v8, (uint64_t)v4, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v21 = type metadata accessor for StaticService();
        uint64_t v12 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v13 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        uint64_t v21 = type metadata accessor for StaticServiceGroup();
        uint64_t v12 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        uint64_t v13 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        uint64_t v21 = type metadata accessor for StaticEndpoint();
        uint64_t v12 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        uint64_t v13 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        uint64_t v21 = type metadata accessor for StaticAccessory(0);
        uint64_t v12 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        uint64_t v13 = type metadata accessor for StaticAccessory;
        break;
    }
    uint64_t v14 = v13;
    uint64_t v22 = v12;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
    sub_251CF39E4((uint64_t)v4, (uint64_t)boxed_opaque_existential_1, v14);
    uint64_t v16 = v21;
    uint64_t v17 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  return v10;
}

uint64_t sub_251CDB79C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(v5 + 28));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  sub_251CF2C44(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_251CF2CAC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  else
  {
    AccessoryDetails.Payload.basicInfo.getter(v16);
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
    uint64_t v10 = v14;
    sub_251CF2CAC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t sub_251CDB8E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 20));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

void (*AccessoryDetailsBasicInfo.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[7] = v1;
  uint64_t v5 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  uint64_t v7 = (int *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  uint64_t v8 = malloc(*(void *)(*(void *)v7 + 64));
  v4[9] = v8;
  uint64_t v9 = v7[7];
  *((_DWORD *)v4 + 20) = v9;
  uint64_t v10 = (uint64_t *)(v2 + v9);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  sub_251CF2C44(v2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  else
  {
    sub_251CF2C44((uint64_t)v8, (uint64_t)v6, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v4[3] = type metadata accessor for StaticService();
        uint64_t v13 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v14 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        v4[3] = type metadata accessor for StaticServiceGroup();
        uint64_t v13 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        uint64_t v14 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        v4[3] = type metadata accessor for StaticEndpoint();
        uint64_t v13 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        uint64_t v14 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        v4[3] = type metadata accessor for StaticAccessory(0);
        uint64_t v13 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        uint64_t v14 = type metadata accessor for StaticAccessory;
        break;
    }
    uint64_t v15 = v14;
    void v4[4] = v13;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4);
    sub_251CF39E4((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, v15);
    uint64_t v17 = v4[3];
    uint64_t v18 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v17);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18);
    uint64_t v12 = v19;
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  }
  v4[5] = v11;
  v4[6] = v12;
  return sub_251CDBCD8;
}

void sub_251CDBCD8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v5 = (void *)(*(void *)(*(void *)a1 + 56) + *(int *)(*(void *)a1 + 80));
  uint64_t v6 = *(void **)(*(void *)a1 + 64);
  uint64_t v7 = *(void **)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v5 = v3;
    v5[1] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *uint64_t v5 = v3;
    v5[1] = v4;
  }
  free(v7);
  free(v6);
  free(v2);
}

uint64_t AccessoryDetailsBasicInfo.statusString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251CF2C44(v1, (uint64_t)v16, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251CF39E4((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
      StaticService.statusString(forAccessoryControl:)(&v37, 0);
      uint64_t countAndFlagsBits = v37.reachabilityStatusString.value._countAndFlagsBits;
      object = v37.reachabilityStatusString.value._object;
      Swift::Bool isCalibrating = v37.isCalibrating;
      Swift::Bool isUpdating = v37.isUpdating;
      Swift::Bool isConfiguring = v37.isConfiguring;
      uint64_t v34 = v37.stateStatusString.value._countAndFlagsBits;
      long long v28 = *(_OWORD *)&v37.stateStatusString.value._object;
      long long v35 = *(_OWORD *)&v37.stateStatusString.value._object;
      char v36 = v37.errorStatusString.value._object;
      uint64_t v24 = sub_251D3D180();
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26) {
        uint64_t v19 = v24;
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v21 = (uint64_t)v10;
      break;
    case 2u:
      sub_251CF39E4((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v22 = StaticServiceGroup.tileStatusString.getter();
      if (v23) {
        uint64_t v19 = v22;
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      uint64_t v21 = (uint64_t)v7;
      break;
    case 3u:
      sub_251CF39E4((uint64_t)v16, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v19 = StaticEndpoint.statusString.getter();
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      uint64_t v21 = (uint64_t)v4;
      break;
    default:
      sub_251CF39E4((uint64_t)v16, (uint64_t)v13, type metadata accessor for StaticAccessory);
      uint64_t v17 = StaticAccessory.statusString.getter();
      if (v18) {
        uint64_t v19 = v17;
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v20 = type metadata accessor for StaticAccessory;
      uint64_t v21 = (uint64_t)v13;
      break;
  }
  sub_251CF2CAC(v21, v20);
  return v19;
}

uint64_t AccessoryDetailsBasicInfo.detailedStatusTitle.getter()
{
  return sub_251CDC168(StaticService.detailedStatusStringTitle.getter);
}

uint64_t AccessoryDetailsBasicInfo.detailedStatusString.getter()
{
  return sub_251CDC168(StaticService.detailedStatusString.getter);
}

uint64_t sub_251CDC168(uint64_t (*a1)(void))
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251CF2C44(v3, (uint64_t)v16, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = sub_251CF39E4((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v17 = ((uint64_t (*)(uint64_t))a1)(v18);
      sub_251CF2CAC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      break;
    case 2u:
    case 3u:
      sub_251CF2CAC((uint64_t)v16, type metadata accessor for AccessoryDetails.Payload);
      goto LABEL_5;
    default:
      sub_251CF39E4((uint64_t)v16, (uint64_t)v13, type metadata accessor for StaticAccessory);
      StaticAccessory.primaryStaticService.getter((uint64_t)v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      {
        sub_251CF2CAC((uint64_t)v13, type metadata accessor for StaticAccessory);
        sub_251A1B064((uint64_t)v10, qword_26B21EE20);
LABEL_5:
        uint64_t v17 = 0;
      }
      else
      {
        uint64_t v19 = a1();
        uint64_t v21 = v20;
        sub_251CF2CAC((uint64_t)v13, type metadata accessor for StaticAccessory);
        sub_251CF2CAC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v21) {
          uint64_t v17 = v19;
        }
        else {
          uint64_t v17 = 0;
        }
      }
      break;
  }
  return v17;
}

uint64_t AccessoryDetailsBasicInfo.isReachable.getter()
{
  uint64_t v1 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251CF2C44(v0, (uint64_t)v3, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = type metadata accessor for StaticService();
      uint64_t v4 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for StaticService;
      break;
    case 2u:
      uint64_t v13 = type metadata accessor for StaticServiceGroup();
      uint64_t v4 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      break;
    case 3u:
      uint64_t v13 = type metadata accessor for StaticEndpoint();
      uint64_t v4 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      break;
    default:
      uint64_t v13 = type metadata accessor for StaticAccessory(0);
      uint64_t v4 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v5 = type metadata accessor for StaticAccessory;
      break;
  }
  uint64_t v6 = v5;
  uint64_t v14 = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  sub_251CF39E4((uint64_t)v3, (uint64_t)boxed_opaque_existential_1, v6);
  uint64_t v8 = v13;
  uint64_t v9 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  LOBYTE(v8) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v8, v9);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v8 & 1;
}

void *AccessoryDetailsBasicInfo.roomsForHome.getter()
{
  uint64_t v0 = type metadata accessor for StaticRoom(0);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v20 - v5;
  if (qword_26B2200E0 != -1) {
    goto LABEL_16;
  }
  while (1)
  {
    uint64_t v7 = (void *)qword_26B21FF50;
    swift_getKeyPath();
    v23[1] = v7;
    sub_251CE90D0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
    sub_251F34F10();
    swift_release();
    swift_beginAccess();
    type metadata accessor for StateSnapshot(0);
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_251A920D0(v8);
    swift_bridgeObjectRelease();
    v23[0] = v9;
    swift_retain();
    sub_251CE7278(v23);
    swift_release();
    uint64_t v10 = v23[0];
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    v23[0] = (void *)MEMORY[0x263F8EE78];
    uint64_t v12 = v10[2];
    if (!v12) {
      break;
    }
    unint64_t v13 = 0;
    uint64_t v21 = v10[2];
    uint64_t v22 = v1;
    while (v13 < v10[2])
    {
      unint64_t v14 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
      uint64_t v15 = *(void *)(v1 + 72);
      sub_251CF2C44((uint64_t)v10 + v14 + v15 * v13, (uint64_t)v6, type metadata accessor for StaticRoom);
      if (v6[*(int *)(v0 + 24)])
      {
        sub_251CF2CAC((uint64_t)v6, type metadata accessor for StaticRoom);
      }
      else
      {
        uint64_t v16 = v0;
        sub_251CF39E4((uint64_t)v6, (uint64_t)v4, type metadata accessor for StaticRoom);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3DFDC(0, v11[2] + 1, 1);
        }
        uint64_t v11 = v23[0];
        unint64_t v18 = v23[0][2];
        unint64_t v17 = v23[0][3];
        if (v18 >= v17 >> 1)
        {
          sub_251A3DFDC(v17 > 1, v18 + 1, 1);
          uint64_t v11 = v23[0];
        }
        long long v11[2] = v18 + 1;
        sub_251CF39E4((uint64_t)v4, (uint64_t)v11 + v14 + v18 * v15, type metadata accessor for StaticRoom);
        uint64_t v0 = v16;
        uint64_t v12 = v21;
        uint64_t v1 = v22;
      }
      if (v12 == ++v13)
      {
        uint64_t v11 = v23[0];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
LABEL_14:
  swift_release();
  return v11;
}

uint64_t sub_251CDCA94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v23[-1] - v9;
  sub_251CF2C44(v1, (uint64_t)&v23[-1] - v9, type metadata accessor for AccessoryDetails.Payload);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_251CF39E4((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v11 = *(void *)&v4[*(int *)(v2 + 32)];
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
    uint64_t v13 = (uint64_t)v4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
    sub_251F34DA0();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_251F38650;
    sub_251CF2C44(v1, (uint64_t)v8, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v24 = type metadata accessor for StaticService();
        uint64_t v15 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        uint64_t v24 = v2;
        uint64_t v15 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        uint64_t v24 = type metadata accessor for StaticEndpoint();
        uint64_t v15 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        uint64_t v24 = type metadata accessor for StaticAccessory(0);
        uint64_t v15 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        uint64_t v16 = type metadata accessor for StaticAccessory;
        break;
    }
    unint64_t v17 = v16;
    uint64_t v25 = v15;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
    sub_251CF39E4((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, v17);
    uint64_t v19 = v24;
    uint64_t v20 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    if (*(void *)(v14 + 16)) {
      uint64_t v11 = sub_251C08E40(v14);
    }
    else {
      uint64_t v11 = MEMORY[0x263F8EE88];
    }
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v12 = type metadata accessor for AccessoryDetails.Payload;
    uint64_t v13 = (uint64_t)v10;
  }
  sub_251CF2CAC(v13, v12);
  return v11;
}

uint64_t sub_251CDCF04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251CDCA94();
  uint64_t v12 = v1;
  uint64_t v4 = (void *)sub_251A52C64((void (*)(char *))sub_251CF2C28, (uint64_t)&v11, v3);
  swift_bridgeObjectRelease();
  uint64_t v13 = v4;
  swift_bridgeObjectRetain();
  sub_251CE7278(&v13);
  swift_bridgeObjectRelease();
  uint64_t v5 = v13;
  uint64_t v6 = v13[2];
  uint64_t v7 = type metadata accessor for StaticRoom(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (v6)
  {
    sub_251CF2C44((uint64_t)v5+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)), a1, type metadata accessor for StaticRoom);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v9, 1, v7);
  return swift_release();
}

uint64_t sub_251CDD044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_26B21FF50;
  swift_getKeyPath();
  sub_251CE90D0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + *(int *)(type metadata accessor for StateSnapshot(0) + 52));
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_2519FE584(a1);
    if (v8)
    {
      unint64_t v9 = v7;
      uint64_t v10 = *(void *)(v6 + 56);
      uint64_t v11 = type metadata accessor for StaticRoom(0);
      uint64_t v12 = *(void *)(v11 - 8);
      sub_251CF2C44(v10 + *(void *)(v12 + 72) * v9, a2, type metadata accessor for StaticRoom);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      uint64_t v15 = type metadata accessor for StaticRoom(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = type metadata accessor for StaticRoom(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

BOOL AccessoryDetailsBasicInfo.hasMultipleRooms.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v24[-1] - v9;
  sub_251CF2C44(v1, (uint64_t)&v24[-1] - v9, type metadata accessor for AccessoryDetails.Payload);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_251CF39E4((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v11 = *(void *)&v4[*(int *)(v2 + 32)];
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
    uint64_t v13 = (uint64_t)v4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
    sub_251F34DA0();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_251F38650;
    sub_251CF2C44(v1, (uint64_t)v8, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v25 = type metadata accessor for StaticService();
        uint64_t v15 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        uint64_t v25 = v2;
        uint64_t v15 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        uint64_t v25 = type metadata accessor for StaticEndpoint();
        uint64_t v15 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        uint64_t v25 = type metadata accessor for StaticAccessory(0);
        uint64_t v15 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        uint64_t v16 = type metadata accessor for StaticAccessory;
        break;
    }
    unint64_t v17 = v16;
    uint64_t v26 = v15;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
    sub_251CF39E4((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, v17);
    uint64_t v19 = v25;
    uint64_t v20 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    if (*(void *)(v14 + 16)) {
      uint64_t v11 = sub_251C08E40(v14);
    }
    else {
      uint64_t v11 = MEMORY[0x263F8EE88];
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = type metadata accessor for AccessoryDetails.Payload;
    uint64_t v13 = (uint64_t)v10;
  }
  sub_251CF2CAC(v13, v12);
  unint64_t v21 = *(void *)(v11 + 16);
  swift_bridgeObjectRelease();
  return v21 > 1;
}

uint64_t AccessoryDetailsBasicInfo.room.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v77 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v4 = MEMORY[0x270FA5388](v77);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v62 - v7;
  uint64_t v9 = type metadata accessor for StaticRoom(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v62 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v76 = (uint64_t)&v62 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v72 = (uint64_t)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v73 = (uint64_t)&v62 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v62 - v23;
  uint64_t v25 = type metadata accessor for AccessoryDetailsBasicInfo();
  sub_251A1B128(v2 + *(int *)(v25 + 24), (uint64_t)v24, &qword_269B9D138);
  uint64_t v74 = v10;
  uint64_t v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v75((uint64_t)v24, 1, v9) == 1)
  {
    uint64_t v68 = v9;
    uint64_t v70 = v16;
    sub_251A1B064((uint64_t)v24, &qword_269B9D138);
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v26 = qword_26B21FF50;
    swift_getKeyPath();
    v79[0] = v26;
    uint64_t v64 = sub_251CE90D0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
    sub_251F34F10();
    swift_release();
    uint64_t v27 = v26 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
    swift_beginAccess();
    uint64_t v63 = type metadata accessor for StateSnapshot(0);
    uint64_t v28 = *(void *)(v27 + *(int *)(v63 + 52));
    sub_251CF2C44(v2, (uint64_t)v8, type metadata accessor for AccessoryDetails.Payload);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v66 = a1;
    uint64_t v71 = v6;
    uint64_t v65 = v2;
    uint64_t v69 = v13;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v80 = type metadata accessor for StaticService();
        uint64_t v30 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v31 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2:
        uint64_t v80 = type metadata accessor for StaticServiceGroup();
        uint64_t v30 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        uint64_t v31 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3:
        uint64_t v80 = type metadata accessor for StaticEndpoint();
        uint64_t v30 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        uint64_t v31 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        uint64_t v80 = type metadata accessor for StaticAccessory(0);
        uint64_t v30 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        uint64_t v31 = type metadata accessor for StaticAccessory;
        break;
    }
    uint64_t v33 = v31;
    uint64_t v81 = v30;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v79);
    sub_251CF39E4((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, v33);
    uint64_t v36 = v80;
    uint64_t v35 = v81;
    __swift_project_boxed_opaque_existential_1(v79, v80);
    uint64_t v37 = sub_251F34DA0();
    uint64_t v67 = &v62;
    uint64_t v38 = *(void *)(v37 - 8);
    MEMORY[0x270FA5388](v37);
    uint64_t v40 = (char *)&v62 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v35 + 56);
    swift_bridgeObjectRetain();
    v41(v36, v35);
    if (*(void *)(v28 + 16))
    {
      unint64_t v42 = sub_2519FE584((uint64_t)v40);
      uint64_t v43 = v74;
      if (v44)
      {
        uint64_t v45 = v73;
        sub_251CF2C44(*(void *)(v28 + 56) + *(void *)(v74 + 72) * v42, v73, type metadata accessor for StaticRoom);
        uint64_t v46 = 0;
        a1 = v66;
        uint64_t v47 = v65;
      }
      else
      {
        uint64_t v46 = 1;
        a1 = v66;
        uint64_t v47 = v65;
        uint64_t v45 = v73;
      }
    }
    else
    {
      uint64_t v46 = 1;
      a1 = v66;
      uint64_t v47 = v65;
      uint64_t v45 = v73;
      uint64_t v43 = v74;
    }
    uint64_t v48 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v45, v46, 1, v68);
    uint64_t v49 = v48;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
    uint64_t v50 = v75;
    if (v75(v45, 1, v48) == 1)
    {
      uint64_t v51 = qword_26B21FF50;
      swift_getKeyPath();
      uint64_t v52 = v45;
      uint64_t v78 = v51;
      sub_251F34F10();
      swift_release();
      uint64_t v53 = v51 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
      swift_beginAccess();
      uint64_t v54 = *(int *)(v63 + 20);
      uint64_t v55 = type metadata accessor for StaticHome();
      uint64_t v56 = v76;
      sub_251CF2C44(v53 + v54 + *(int *)(v55 + 24), v76, type metadata accessor for StaticRoom);
      sub_251A1B064(v52, &qword_269B9D138);
    }
    else
    {
      uint64_t v56 = v76;
      sub_251CF39E4(v45, v76, type metadata accessor for StaticRoom);
    }
    uint64_t v32 = (uint64_t)v70;
    uint64_t v57 = (uint64_t)v71;
    uint64_t v58 = (uint64_t)v69;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
    sub_251CF2C44(v47, v57, type metadata accessor for AccessoryDetails.Payload);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v59 = v72;
      sub_251CDCF04(v72);
      sub_251CF39E4(v56, v58, type metadata accessor for StaticRoom);
      if (v50(v59, 1, v49) == 1)
      {
        sub_251CF39E4(v58, v32, type metadata accessor for StaticRoom);
        sub_251A1B064(v59, &qword_269B9D138);
LABEL_24:
        sub_251CF2CAC(v57, type metadata accessor for AccessoryDetails.Payload);
        return sub_251CF39E4(v32, a1, type metadata accessor for StaticRoom);
      }
      sub_251CF2CAC(v58, type metadata accessor for StaticRoom);
      uint64_t v60 = v59;
    }
    else
    {
      uint64_t v60 = v56;
    }
    sub_251CF39E4(v60, v32, type metadata accessor for StaticRoom);
    goto LABEL_24;
  }
  uint64_t v32 = (uint64_t)v24;
  return sub_251CF39E4(v32, a1, type metadata accessor for StaticRoom);
}

uint64_t sub_251CDE03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251CF2C44(a1, (uint64_t)v7, type metadata accessor for StaticRoom);
  uint64_t v8 = a2 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
  sub_251A1B064(v8, &qword_269B9D138);
  sub_251CF39E4((uint64_t)v7, v8, type metadata accessor for StaticRoom);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t AccessoryDetailsBasicInfo.room.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
  sub_251A1B064(v3, &qword_269B9D138);
  sub_251CF39E4(a1, v3, type metadata accessor for StaticRoom);
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

void (*AccessoryDetailsBasicInfo.room.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  long long v3[4] = v7;
  AccessoryDetailsBasicInfo.room.getter((uint64_t)v7);
  return sub_251CDE2E0;
}

void sub_251CDE2E0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[3];
  uint64_t v4 = (void *)(*a1)[4];
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v7 = **a1;
  if (a2)
  {
    sub_251CF2C44((*a1)[4], (uint64_t)v3, type metadata accessor for StaticRoom);
    uint64_t v8 = v7 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
    sub_251A1B064(v8, &qword_269B9D138);
    sub_251CF39E4((uint64_t)v3, v8, type metadata accessor for StaticRoom);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    sub_251CF2CAC((uint64_t)v4, type metadata accessor for StaticRoom);
  }
  else
  {
    uint64_t v9 = v7 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
    sub_251A1B064(v9, &qword_269B9D138);
    sub_251CF39E4((uint64_t)v4, v9, type metadata accessor for StaticRoom);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t AccessoryDetailsBasicInfo.roomName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v0 + *(int *)(v6 + 36));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  sub_251CF2C44(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo;
    uint64_t v13 = (uint64_t)v8;
  }
  else
  {
    AccessoryDetailsBasicInfo.room.getter((uint64_t)v4);
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t v10 = *(void *)&v4[*(int *)(v2 + 20)];
    swift_bridgeObjectRetain();
    uint64_t v12 = type metadata accessor for StaticRoom;
    uint64_t v13 = (uint64_t)v4;
  }
  sub_251CF2CAC(v13, v12);
  return v10;
}

uint64_t sub_251CDE5BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(v8 + 36));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  sub_251CF2C44(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo;
    uint64_t v15 = (uint64_t)v10;
  }
  else
  {
    AccessoryDetailsBasicInfo.room.getter((uint64_t)v6);
    sub_251CF2CAC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t v16 = &v6[*(int *)(v4 + 20)];
    uint64_t v13 = *(void *)v16;
    uint64_t v12 = *((void *)v16 + 1);
    swift_bridgeObjectRetain();
    uint64_t v14 = type metadata accessor for StaticRoom;
    uint64_t v15 = (uint64_t)v6;
  }
  uint64_t result = sub_251CF2CAC(v15, v14);
  *a2 = v13;
  a2[1] = v12;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.roomName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticRoom(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v34 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v35 = (uint64_t)&v33 - v14;
  uint64_t v15 = AccessoryDetailsBasicInfo.roomsForHome.getter();
  uint64_t v16 = v15[2];
  if (v16)
  {
    uint64_t v17 = (uint64_t)v15 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v18 = *(void *)(v8 + 72);
    while (1)
    {
      sub_251CF2C44(v17, (uint64_t)v13, type metadata accessor for StaticRoom);
      uint64_t v19 = &v13[*(int *)(v7 + 20)];
      BOOL v20 = *(void *)v19 == a1 && *((void *)v19 + 1) == a2;
      if (v20 || (sub_251F36B10() & 1) != 0) {
        break;
      }
      sub_251CF2CAC((uint64_t)v13, type metadata accessor for StaticRoom);
      v17 += v18;
      if (!--v16) {
        goto LABEL_9;
      }
    }
    sub_251CF39E4((uint64_t)v13, (uint64_t)v6, type metadata accessor for StaticRoom);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v21(v6, 0, 1, v7);
  }
  else
  {
LABEL_9:
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v21(v6, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_269B9D138);
    uint64_t v22 = type metadata accessor for AccessoryDetailsBasicInfo();
    uint64_t v23 = v36;
    uint64_t v24 = v36 + *(int *)(v22 + 24);
    sub_251A1B064(v24, &qword_269B9D138);
    v21((char *)v24, 1, 1, v7);
    uint64_t v25 = (void *)(v23 + *(int *)(v22 + 28));
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v25 = a1;
    v25[1] = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = v35;
    sub_251CF39E4((uint64_t)v6, v35, type metadata accessor for StaticRoom);
    uint64_t v28 = type metadata accessor for AccessoryDetailsBasicInfo();
    uint64_t v29 = v36;
    uint64_t v30 = (void *)(v36 + *(int *)(v28 + 28));
    swift_bridgeObjectRelease();
    *uint64_t v30 = 0;
    v30[1] = 0;
    uint64_t v31 = v34;
    sub_251CF2C44(v27, v34, type metadata accessor for StaticRoom);
    uint64_t v32 = v29 + *(int *)(v28 + 24);
    sub_251A1B064(v32, &qword_269B9D138);
    sub_251CF39E4(v31, v32, type metadata accessor for StaticRoom);
    v21((char *)v32, 0, 1, v7);
    return sub_251CF2CAC(v27, type metadata accessor for StaticRoom);
  }
  return result;
}

void (*AccessoryDetailsBasicInfo.roomName.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[2] = v1;
  uint64_t v5 = type metadata accessor for StaticRoom(0);
  uint64_t v6 = (char *)malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[3] = v6;
  uint64_t v7 = (int *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  uint64_t v8 = malloc(*(void *)(*(void *)v7 + 64));
  void v4[4] = v8;
  uint64_t v9 = (uint64_t *)(v2 + v7[9]);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  sub_251CF2C44(v2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo;
    uint64_t v13 = (uint64_t)v8;
  }
  else
  {
    AccessoryDetailsBasicInfo.room.getter((uint64_t)v6);
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t v14 = &v6[*(int *)(v5 + 20)];
    uint64_t v11 = *(void *)v14;
    uint64_t v10 = *((void *)v14 + 1);
    swift_bridgeObjectRetain();
    uint64_t v12 = type metadata accessor for StaticRoom;
    uint64_t v13 = (uint64_t)v6;
  }
  sub_251CF2CAC(v13, v12);
  *uint64_t v4 = v11;
  v4[1] = v10;
  return sub_251CDEC78;
}

void sub_251CDEC78(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v5 = (void *)(*a1)[3];
  uint64_t v6 = (void *)(*a1)[4];
  if (a2)
  {
    swift_bridgeObjectRetain();
    AccessoryDetailsBasicInfo.roomName.setter(v4, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    AccessoryDetailsBasicInfo.roomName.setter(**a1, v3);
  }
  free(v6);
  free(v5);
  free(v2);
}

uint64_t AccessoryDetailsBasicInfo.preemptivelySetRoom(_:)(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  v3[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for AccessoryDetailsBasicInfo();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[17] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v3[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CDEE98, 0, 0);
}

uint64_t sub_251CDEE98()
{
  *(void *)(v0 + 152) = sub_251F35C80();
  *(void *)(v0 + 160) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CDEF30, v2, v1);
}

uint64_t sub_251CDEF30()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CDEFC8, 0, 0);
}

uint64_t sub_251CDEFC8()
{
  *(void *)(v0 + 168) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CDF054, v2, v1);
}

uint64_t sub_251CDF054()
{
  swift_release();
  *(void *)(v0 + 176) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CDF0C8, 0, 0);
}

uint64_t sub_251CDF0C8()
{
  *(void *)(v0 + 184) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CDF154, v2, v1);
}

uint64_t sub_251CDF154()
{
  uint64_t v1 = v0[22];
  swift_release();
  swift_getKeyPath();
  v0[5] = v1;
  sub_251CE90D0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  v0[24] = v2;
  id v3 = v2;
  return MEMORY[0x270FA2498](sub_251CDF24C, 0, 0);
}

uint64_t sub_251CDF24C()
{
  if (v0[24])
  {
    v0[25] = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251CDF364, v2, v1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_251CDF364()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251CDF3CC, 0, 0);
}

uint64_t sub_251CDF3CC()
{
  *(void *)(v0 + 208) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CDF458, v2, v1);
}

uint64_t sub_251CDF458()
{
  swift_release();
  *(void *)(v0 + 216) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CDF4CC, 0, 0);
}

uint64_t sub_251CDF4CC()
{
  *(void *)(v0 + 224) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CDF558, v2, v1);
}

uint64_t sub_251CDF558()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_release();
  uint64_t v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  id v3 = *v2;
  *(void *)(v0 + 232) = *v2;
  id v4 = v3;
  return MEMORY[0x270FA2498](sub_251CDF5F8, 0, 0);
}

uint64_t sub_251CDF5F8()
{
  if (*(void *)(v0 + 232))
  {
    *(void *)(v0 + 240) = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251CDF718, v2, v1);
  }
  else
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_251CDF718()
{
  swift_release();
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CDF7B0, 0, 0);
}

uint64_t sub_251CDF7B0()
{
  *(void *)(v0 + 248) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CDF83C, v2, v1);
}

uint64_t sub_251CDF83C()
{
  swift_release();
  *(void *)(v0 + 256) = qword_26B21E638;
  return MEMORY[0x270FA2498](sub_251CDF8B0, 0, 0);
}

uint64_t sub_251CDF8B0()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = (void *)v0[24];
  *(void *)v0[17] = v2;
  swift_storeEnumTagMultiPayload();
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251CDF980;
  uint64_t v6 = v0[17];
  uint64_t v5 = v0[18];
  return sub_251F2AD24(v5, v6, v1, (uint64_t)v3, 0);
}

uint64_t sub_251CDF980()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  sub_251CF2CAC(v2, type metadata accessor for StateSnapshot.UpdateType);
  sub_251CF2CAC(v1, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251CDFADC, 0, 0);
}

uint64_t sub_251CDFADC()
{
  sub_251CF2C44(v0[8], v0[15], (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  v0[34] = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CDFB88, v2, v1);
}

uint64_t sub_251CDFB88()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  *(void *)(v0 + 280) = AccessoryDetailsBasicInfo.roomsForHome.getter();
  sub_251CF2CAC(v1, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  return MEMORY[0x270FA2498](sub_251CDFC18, 0, 0);
}

uint64_t sub_251CDFC18()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v4 = v0[10];
    uint64_t v3 = v0[11];
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = v0[12];
      uint64_t v9 = v0[6];
      uint64_t v8 = v0[7];
      sub_251CF2C44(v5, v7, type metadata accessor for StaticRoom);
      uint64_t v10 = (void *)(v7 + *(int *)(v4 + 20));
      BOOL v11 = *v10 == v9 && v10[1] == v8;
      if (v11 || (sub_251F36B10() & 1) != 0) {
        break;
      }
      sub_251CF2CAC(v0[12], type metadata accessor for StaticRoom);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    uint64_t v14 = v0[11];
    uint64_t v13 = v0[12];
    uint64_t v16 = v0[9];
    uint64_t v15 = v0[10];
    swift_bridgeObjectRelease();
    sub_251CF39E4(v13, v16, type metadata accessor for StaticRoom);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v12(v16, 0, 1, v15);
  }
  else
  {
LABEL_10:
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[11] + 56);
    v12(v0[9], 1, 1, v0[10]);
  }
  uint64_t v17 = (void *)v0[29];
  uint64_t v18 = (void *)v0[24];
  uint64_t v19 = v0[10];
  uint64_t v20 = v0[11];
  uint64_t v21 = v0[9];
  swift_bridgeObjectRelease();

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    sub_251A1B064(v0[9], &qword_269B9D138);
  }
  else
  {
    uint64_t v22 = v0[13];
    uint64_t v23 = v0[14];
    uint64_t v24 = v0[10];
    uint64_t v25 = v0[8];
    sub_251CF39E4(v0[9], v22, type metadata accessor for StaticRoom);
    uint64_t v26 = v25 + *(int *)(v23 + 24);
    sub_251A1B064(v26, &qword_269B9D138);
    sub_251CF39E4(v22, v26, type metadata accessor for StaticRoom);
    v12(v26, 0, 1, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t AccessoryDetailsBasicInfo.displayName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v28[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  BOOL v11 = (char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t *)(v1 + *(int *)(v9 + 28));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  sub_251CF2C44(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_251CF2CAC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  else
  {
    sub_251CF2C44((uint64_t)v11, (uint64_t)v7, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v29 = type metadata accessor for StaticService();
        uint64_t v15 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        uint64_t v29 = type metadata accessor for StaticServiceGroup();
        uint64_t v15 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        uint64_t v29 = type metadata accessor for StaticEndpoint();
        uint64_t v15 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        uint64_t v16 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        uint64_t v29 = type metadata accessor for StaticAccessory(0);
        uint64_t v15 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        uint64_t v16 = type metadata accessor for StaticAccessory;
        break;
    }
    uint64_t v17 = v16;
    uint64_t v30 = v15;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
    sub_251CF39E4((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, v17);
    uint64_t v19 = v29;
    uint64_t v20 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
    uint64_t v13 = v21;
    sub_251CF2CAC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  }
  AccessoryDetailsBasicInfo.room.getter((uint64_t)v4);
  uint64_t v22 = (uint64_t *)&v4[*(int *)(v2 + 20)];
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  swift_bridgeObjectRetain();
  sub_251CF2CAC((uint64_t)v4, type metadata accessor for StaticRoom);
  v28[0] = v14;
  v28[1] = v13;
  v28[2] = v24;
  uint64_t v29 = v23;
  uint64_t v25 = DeviceDisplayNames.displayName.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_251CE02B4()
{
  v1[12] = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetailsBasicInfo();
  v1[13] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[14] = v3;
  v1[15] = *(void *)(v3 + 64);
  v1[16] = swift_task_alloc();
  type metadata accessor for StaticHome();
  v1[17] = swift_task_alloc();
  v1[18] = type metadata accessor for StateSnapshot(0);
  v1[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CE03D8, 0, 0);
}

uint64_t sub_251CE03D8()
{
  uint64_t v1 = (void *)(v0[12] + *(int *)(v0[13] + 28));
  v0[20] = *v1;
  uint64_t v2 = v1[1];
  v0[21] = v2;
  if (v2)
  {
    v0[22] = sub_251F35C80();
    swift_bridgeObjectRetain();
    v0[23] = sub_251F35C70();
    uint64_t v4 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251CE04E4, v4, v3);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_251CE04E4()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251CE057C, 0, 0);
}

uint64_t sub_251CE057C()
{
  *(void *)(v0 + 192) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CE0608, v2, v1);
}

uint64_t sub_251CE0608()
{
  swift_release();
  *(void *)(v0 + 200) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CE067C, 0, 0);
}

uint64_t sub_251CE067C()
{
  *(void *)(v0 + 208) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CE0708, v2, v1);
}

uint64_t sub_251CE0708()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[19];
  swift_release();
  swift_getKeyPath();
  v0[11] = v1;
  sub_251CE90D0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251CF2C44(v3, v2, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251CE0838, 0, 0);
}

uint64_t sub_251CE0838()
{
  uint64_t v1 = v0[19];
  sub_251CF2C44(v1 + *(int *)(v0[18] + 20), v0[17], (uint64_t (*)(void))type metadata accessor for StaticHome);
  sub_251CF2CAC(v1, type metadata accessor for StateSnapshot);
  v0[27] = sub_251F35C70();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CE0908, v3, v2);
}

uint64_t sub_251CE0908()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251CE0970, 0, 0);
}

uint64_t sub_251CE0970()
{
  *(void *)(v0 + 224) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CE09FC, v2, v1);
}

uint64_t sub_251CE09FC()
{
  swift_release();
  *(void *)(v0 + 232) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251CE0A70, 0, 0);
}

uint64_t sub_251CE0A70()
{
  *(void *)(v0 + 240) = sub_251F34D50();
  *(void *)(v0 + 248) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251CE0B08, v2, v1);
}

uint64_t sub_251CE0B08()
{
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = (void *)v0[29];
  uint64_t v3 = v0[17];
  swift_release();
  v0[32] = objc_msgSend(v2, sel_homeFor_, v1);

  sub_251CF2CAC(v3, (uint64_t (*)(void))type metadata accessor for StaticHome);
  return MEMORY[0x270FA2498](sub_251CE0BC0, 0, 0);
}

uint64_t sub_251CE0BC0()
{
  uint64_t v1 = (void *)v0[32];
  if (v1)
  {
    uint64_t v3 = v0[20];
    uint64_t v2 = v0[21];
    uint64_t v5 = v0[15];
    uint64_t v4 = v0[16];
    uint64_t v6 = v0[14];
    uint64_t v7 = v0[12];
    uint64_t v8 = (void *)sub_251F356C0();
    sub_251CF2C44(v7, v4, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    sub_251CF39E4(v4, v10 + v9, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    BOOL v11 = (void *)(v10 + ((v5 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
    *BOOL v11 = v3;
    v11[1] = v2;
    v0[6] = sub_251CF3A4C;
    v0[7] = v10;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_251B93654;
    v0[5] = &block_descriptor_37;
    uint64_t v12 = _Block_copy(v0 + 2);
    id v13 = v1;
    swift_release();
    objc_msgSend(v13, sel_addRoomWithName_completionHandler_, v8, v12);
    _Block_release(v12);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_251CE0DA4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  uint64_t result = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v18 = sub_251F35CD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    sub_251CF2C44(a4, (uint64_t)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = 0;
    uint64_t v20[3] = 0;
    void v20[4] = a3;
    v20[5] = a1;
    sub_251CF39E4((uint64_t)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v20 + v19, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t v21 = (void *)((char *)v20 + ((v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v21 = a5;
    v21[1] = a6;
    id v22 = a1;
    id v23 = a3;
    swift_bridgeObjectRetain();
    sub_251ACBB48((uint64_t)v17, (uint64_t)&unk_269BA24A8, (uint64_t)v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_251CE0FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a7;
  v8[21] = a8;
  v8[18] = a5;
  v8[19] = a6;
  v8[17] = a4;
  type metadata accessor for AccessoryDetailsBasicInfo();
  v8[22] = swift_task_alloc();
  type metadata accessor for StaticEndpoint();
  v8[23] = swift_task_alloc();
  type metadata accessor for StaticServiceGroup();
  v8[24] = swift_task_alloc();
  type metadata accessor for StaticService();
  v8[25] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v8[26] = swift_task_alloc();
  v8[27] = type metadata accessor for AccessoryDetails.Payload(0);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251CE1130, 0, 0);
}

uint64_t sub_251CE1130()
{
  uint64_t v1 = *(void **)(v0 + 136);
  *(void *)(v0 + 96) = v1;
  sub_251A27C8C();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA30);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 144);
    sub_251A1A444((long long *)(v0 + 56), v0 + 16);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v4, v5);
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  }
  else
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_251A1B064(v0 + 56, &qword_269B9DA38);
  }
  sub_251CF2C44(*(void *)(v0 + 152), *(void *)(v0 + 232), type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251CF39E4(*(void *)(v0 + 232), *(void *)(v0 + 200), (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_251CE17A4;
      uint64_t v22 = *(void *)(v0 + 144);
      uint64_t result = StaticService.set(room:)(v22);
      break;
    case 2u:
      uint64_t v9 = *(void *)(v0 + 192);
      uint64_t v10 = *(void *)(v0 + 144);
      sub_251CF39E4(*(void *)(v0 + 232), v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v11 = swift_task_alloc();
      *(void *)(v0 + 272) = v11;
      *(void *)(v11 + 16) = v9;
      *(void *)(v11 + 24) = v10;
      uint64_t v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 280) = v12;
      void *v12 = v0;
      v12[1] = sub_251CE1980;
      uint64_t v13 = MEMORY[0x263F8EE60] + 8;
      uint64_t v14 = MEMORY[0x263F8EE60] + 8;
      uint64_t v15 = MEMORY[0x263F8EE60] + 8;
      uint64_t result = MEMORY[0x270FA22B8](v12, v13, v14, 0, 0, &unk_269BA24B0, v11, v15);
      break;
    case 3u:
      uint64_t v16 = *(void **)(v0 + 144);
      sub_251CF39E4(*(void *)(v0 + 232), *(void *)(v0 + 184), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      id v17 = objc_msgSend(v16, sel_uniqueIdentifier);
      uint64_t v18 = sub_251F34DA0();
      *(void *)(v0 + 288) = v18;
      *(void *)(v0 + 296) = *(void *)(v18 - 8);
      uint64_t v19 = swift_task_alloc();
      *(void *)(v0 + 304) = v19;
      sub_251F34D80();

      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 312) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_251CE1B60;
      uint64_t result = StaticEndpoint.set(roomID:)(v19);
      break;
    default:
      sub_251CF39E4(*(void *)(v0 + 232), *(void *)(v0 + 208), type metadata accessor for StaticAccessory);
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v6;
      void *v6 = v0;
      v6[1] = sub_251CE15C8;
      uint64_t v7 = *(void *)(v0 + 144);
      uint64_t result = StaticAccessory.set(room:)(v7);
      break;
  }
  return result;
}

uint64_t sub_251CE15C8()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_251CE1D88;
  }
  else {
    id v2 = sub_251CE16DC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CE16DC()
{
  sub_251CF2CAC(*(void *)(v0 + 208), type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CE17A4()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_251CE21A0;
  }
  else {
    id v2 = sub_251CE18B8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251CE18B8()
{
  sub_251CF2CAC(*(void *)(v0 + 200), (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CE1980()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251CE1A98, 0, 0);
}

uint64_t sub_251CE1A98()
{
  sub_251CF2CAC(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CE1B60()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 304);
  uint64_t v2 = *(void *)(*(void *)v0 + 296);
  uint64_t v3 = *(void *)(*(void *)v0 + 288);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251CE1CC0, 0, 0);
}

uint64_t sub_251CE1CC0()
{
  sub_251CF2CAC(*(void *)(v0 + 184), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251CE1D88()
{
  uint64_t v27 = v0;
  sub_251CF2CAC(v0[26], type metadata accessor for StaticAccessory);
  uint64_t v1 = (void *)v0[31];
  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[19];
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFC0);
  sub_251CF2C44(v3, v2, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  id v5 = v1;
  swift_bridgeObjectRetain();
  id v6 = v1;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t type = v8;
    uint64_t v9 = v0[28];
    unint64_t v10 = v0[21];
    uint64_t v21 = v0[22];
    uint64_t v20 = v0[20];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v11 = 136315650;
    v0[13] = v1;
    id v12 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    uint64_t v13 = sub_251F35770();
    v0[14] = sub_251A00E84(v13, v14, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[15] = sub_251A00E84(v20, v10, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2080;
    sub_251CF2C44(v21, v9, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v9);
    unint64_t v25 = 0xD000000000000019;
    unint64_t v26 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v15 = v25;
    unint64_t v16 = v26;
    sub_251CF2CAC(v9, type metadata accessor for AccessoryDetails.Payload);
    v0[16] = sub_251A00E84(v15, v16, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v21, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v7, type, "Error '%s' committing suggested room: %s for %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);
  }
  else
  {
    uint64_t v17 = v0[22];

    swift_bridgeObjectRelease_n();
    sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_251CE21A0()
{
  uint64_t v27 = v0;
  sub_251CF2CAC(v0[25], (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v1 = (void *)v0[33];
  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[19];
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFC0);
  sub_251CF2C44(v3, v2, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  id v5 = v1;
  swift_bridgeObjectRetain();
  id v6 = v1;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t type = v8;
    uint64_t v9 = v0[28];
    unint64_t v10 = v0[21];
    uint64_t v21 = v0[22];
    uint64_t v20 = v0[20];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v11 = 136315650;
    v0[13] = v1;
    id v12 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    uint64_t v13 = sub_251F35770();
    v0[14] = sub_251A00E84(v13, v14, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[15] = sub_251A00E84(v20, v10, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2080;
    sub_251CF2C44(v21, v9, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7876C(v9);
    unint64_t v25 = 0xD000000000000019;
    unint64_t v26 = 0x8000000251F705D0;
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v15 = v25;
    unint64_t v16 = v26;
    sub_251CF2CAC(v9, type metadata accessor for AccessoryDetails.Payload);
    v0[16] = sub_251A00E84(v15, v16, &v24);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251CF2CAC(v21, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_2519F3000, v7, type, "Error '%s' committing suggested room: %s for %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);
  }
  else
  {
    uint64_t v17 = v0[22];

    swift_bridgeObjectRelease_n();
    sub_251CF2CAC(v17, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t AccessoryDetailsBasicInfo.shouldShowInDashboard.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  os_log_type_t v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(v1 + *(int *)(v6 + 40));
  sub_251CF2C44(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v9 == 2)
  {
    sub_251CF2C44((uint64_t)v8, (uint64_t)v4, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v20 = type metadata accessor for StaticService();
        uint64_t v10 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v11 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        uint64_t v20 = type metadata accessor for StaticServiceGroup();
        uint64_t v10 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        uint64_t v11 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        uint64_t v20 = type metadata accessor for StaticEndpoint();
        uint64_t v10 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        uint64_t v11 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        uint64_t v20 = type metadata accessor for StaticAccessory(0);
        uint64_t v10 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        uint64_t v11 = type metadata accessor for StaticAccessory;
        break;
    }
    uint64_t v13 = v11;
    uint64_t v21 = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
    sub_251CF39E4((uint64_t)v4, (uint64_t)boxed_opaque_existential_1, v13);
    uint64_t v15 = v20;
    uint64_t v16 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 64))(v15, v16);
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  else
  {
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    char v12 = v9 & 1;
  }
  return v12 & 1;
}

uint64_t sub_251CE28FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(v5 + 40));
  sub_251CF2C44(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v8 == 2)
  {
    AccessoryDetails.Payload.basicInfo.getter(v14);
    uint64_t v9 = v15;
    uint64_t v10 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(v9, v10);
    sub_251CF2CAC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  }
  else
  {
    uint64_t result = sub_251CF2CAC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    char v11 = v8 & 1;
  }
  *a2 = v11 & 1;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.shouldShowInDashboard.setter(char a1)
{
  uint64_t result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*AccessoryDetailsBasicInfo.shouldShowInDashboard.modify(void *a1))()
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[5] = v1;
  uint64_t v5 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[6] = v6;
  uint64_t v7 = (int *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  int v8 = malloc(*(void *)(*(void *)v7 + 64));
  v4[7] = v8;
  uint64_t v9 = v7[10];
  *((_DWORD *)v4 + 16) = v9;
  int v10 = *(unsigned __int8 *)(v2 + v9);
  sub_251CF2C44(v2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v10 == 2)
  {
    sub_251CF2C44((uint64_t)v8, (uint64_t)v6, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v4[3] = type metadata accessor for StaticService();
        uint64_t v11 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        char v12 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        v4[3] = type metadata accessor for StaticServiceGroup();
        uint64_t v11 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        char v12 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        v4[3] = type metadata accessor for StaticEndpoint();
        uint64_t v11 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        char v12 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        v4[3] = type metadata accessor for StaticAccessory(0);
        uint64_t v11 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        char v12 = type metadata accessor for StaticAccessory;
        break;
    }
    unint64_t v14 = v12;
    void v4[4] = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4);
    sub_251CF39E4((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, v14);
    uint64_t v16 = v4[3];
    uint64_t v17 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v16);
    char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 64))(v16, v17);
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  }
  else
  {
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    char v13 = v10 & 1;
  }
  *((unsigned char *)v4 + 68) = v13 & 1;
  return sub_251CE2DBC;
}

uint64_t AccessoryDetailsBasicInfo.isFavorite.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  int v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(v1 + *(int *)(v6 + 44));
  sub_251CF2C44(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v9 == 2)
  {
    sub_251CF2C44((uint64_t)v8, (uint64_t)v4, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v20 = type metadata accessor for StaticService();
        uint64_t v10 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        uint64_t v11 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        uint64_t v20 = type metadata accessor for StaticServiceGroup();
        uint64_t v10 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        uint64_t v11 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        uint64_t v20 = type metadata accessor for StaticEndpoint();
        uint64_t v10 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        uint64_t v11 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        uint64_t v20 = type metadata accessor for StaticAccessory(0);
        uint64_t v10 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        uint64_t v11 = type metadata accessor for StaticAccessory;
        break;
    }
    char v13 = v11;
    uint64_t v21 = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
    sub_251CF39E4((uint64_t)v4, (uint64_t)boxed_opaque_existential_1, v13);
    uint64_t v15 = v20;
    uint64_t v16 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 72))(v15, v16);
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  else
  {
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    char v12 = v9 & 1;
  }
  return v12 & 1;
}

uint64_t sub_251CE3104@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(v5 + 44));
  sub_251CF2C44(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v8 == 2)
  {
    AccessoryDetails.Payload.basicInfo.getter(v14);
    uint64_t v9 = v15;
    uint64_t v10 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 72))(v9, v10);
    sub_251CF2CAC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  }
  else
  {
    uint64_t result = sub_251CF2CAC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    char v11 = v8 & 1;
  }
  *a2 = v11 & 1;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.isFavorite.setter(char a1)
{
  uint64_t result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*AccessoryDetailsBasicInfo.isFavorite.modify(void *a1))()
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[5] = v1;
  uint64_t v5 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[6] = v6;
  uint64_t v7 = (int *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  int v8 = malloc(*(void *)(*(void *)v7 + 64));
  v4[7] = v8;
  uint64_t v9 = v7[11];
  *((_DWORD *)v4 + 16) = v9;
  int v10 = *(unsigned __int8 *)(v2 + v9);
  sub_251CF2C44(v2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v10 == 2)
  {
    sub_251CF2C44((uint64_t)v8, (uint64_t)v6, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v4[3] = type metadata accessor for StaticService();
        uint64_t v11 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
        char v12 = (uint64_t (*)(void))type metadata accessor for StaticService;
        break;
      case 2u:
        v4[3] = type metadata accessor for StaticServiceGroup();
        uint64_t v11 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
        char v12 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        break;
      case 3u:
        v4[3] = type metadata accessor for StaticEndpoint();
        uint64_t v11 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        char v12 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        break;
      default:
        v4[3] = type metadata accessor for StaticAccessory(0);
        uint64_t v11 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
        char v12 = type metadata accessor for StaticAccessory;
        break;
    }
    unint64_t v14 = v12;
    void v4[4] = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4);
    sub_251CF39E4((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, v14);
    uint64_t v16 = v4[3];
    uint64_t v17 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v16);
    char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 72))(v16, v17);
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  }
  else
  {
    sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
    char v13 = v10 & 1;
  }
  *((unsigned char *)v4 + 68) = v13 & 1;
  return sub_251CE2DBC;
}

void sub_251CE35C4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *(int *)(*a1 + 64);
  uint64_t v4 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void **)(*a1 + 56);
  *(unsigned char *)(*(void *)(v1 + 40) + v2) = *(unsigned char *)(v1 + 68);
  free(v3);
  free(v4);
  free((void *)v1);
}

uint64_t AccessoryDetailsBasicInfo.isActivated.getter()
{
  uint64_t v1 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251CF2C44(v0, (uint64_t)v3, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = type metadata accessor for StaticService();
      uint64_t v4 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for StaticService;
      break;
    case 2u:
      uint64_t v13 = type metadata accessor for StaticServiceGroup();
      uint64_t v4 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      break;
    case 3u:
      uint64_t v13 = type metadata accessor for StaticEndpoint();
      uint64_t v4 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      break;
    default:
      uint64_t v13 = type metadata accessor for StaticAccessory(0);
      uint64_t v4 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v5 = type metadata accessor for StaticAccessory;
      break;
  }
  uint64_t v6 = v5;
  uint64_t v14 = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  sub_251CF39E4((uint64_t)v3, (uint64_t)boxed_opaque_existential_1, v6);
  uint64_t v8 = v13;
  uint64_t v9 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  LOBYTE(v8) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v8, v9);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v8 & 1;
}

unint64_t AccessoryDetailsBasicInfo.batteryLevel.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v94 = (uint64_t)&v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for StaticService();
  uint64_t v100 = *(void *)(v107 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v107);
  uint64_t v98 = (uint64_t)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  id v106 = (char *)&v90 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v90 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v91 = (uint64_t)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v95 = (uint64_t)&v90 - v12;
  uint64_t v99 = type metadata accessor for StaticAccessory(0);
  uint64_t v93 = *(void *)(v99 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v99);
  uint64_t v92 = (uint64_t)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v101 = (uint64_t)&v90 - v15;
  uint64_t v103 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v103);
  uint64_t v104 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE68);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (__int16 *)((char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v102 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  unint64_t v96 = (_WORD *)((char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v21);
  unint64_t v97 = (__int16 *)((char *)&v90 - v23);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v24 - 8);
  unint64_t v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for StaticMatterDevice();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = v0;
  AccessoryDetails.Payload.staticMatterDevice.getter((uint64_t)v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_251A1B064((uint64_t)v26, &qword_26B21EC90);
    uint64_t v31 = (uint64_t)v106;
    uint64_t v32 = v107;
  }
  else
  {
    sub_251CF39E4((uint64_t)v26, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_251CD1300(v33, (uint64_t)v19);
    swift_bridgeObjectRelease();
    int v34 = (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v102 + 48))(v19, 1, v20);
    uint64_t v31 = (uint64_t)v106;
    uint64_t v35 = v30;
    if (v34 == 1)
    {
      sub_251CF2CAC((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      sub_251A1B064((uint64_t)v19, &qword_269B9CE68);
      uint64_t v32 = v107;
    }
    else
    {
      uint64_t v36 = *(int *)(v20 + 48);
      uint64_t v37 = (uint64_t)v97;
      uint64_t v38 = (uint64_t)v97 + v36;
      uint64_t v39 = (uint64_t)v35;
      __int16 v40 = *v19;
      *unint64_t v97 = *v19;
      sub_251CF39E4((uint64_t)v19 + v36, v37 + v36, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v41 = *(int *)(v20 + 48);
      unint64_t v42 = v96;
      uint64_t v43 = (uint64_t)v96 + v41;
      *unint64_t v96 = v40;
      sub_251CF2C44(v38, (uint64_t)v42 + v41, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v44 = *(void *)(v43 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
      uint64_t v32 = v107;
      if (*(void *)(v44 + 16))
      {
        unint64_t v45 = sub_2519FE614(2);
        if (v46)
        {
          sub_251A1A930(*(void *)(v44 + 56) + (v45 << 8), (uint64_t)v108);
          sub_251A1A930((uint64_t)v108, (uint64_t)v109);
          if (sub_251A4DB2C((uint64_t)v109) == 6)
          {
            uint64_t v47 = sub_251A4E128((uint64_t)v109);
            unint64_t v48 = *(unsigned __int8 *)(v47 + 21);
            int v49 = *(unsigned __int8 *)(v47 + 22);
            sub_251CF2CAC(v43, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
            unint64_t value = v48 >> 1;
            sub_251A1B064(v37, &qword_26B21F4C8);
            sub_251CF2CAC(v39, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
            if (v49) {
              return 0;
            }
            return value;
          }
        }
      }
      sub_251A1B064(v37, &qword_26B21F4C8);
      sub_251CF2CAC(v39, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      sub_251CF2CAC(v43, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    }
  }
  uint64_t v51 = v104;
  sub_251CF2C44(v105, v104, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251CF39E4(v51, v31, (uint64_t (*)(void))type metadata accessor for StaticService);
      v109[0] = *(void *)(v31 + *(int *)(v32 + 112));
      LOBYTE(v108[0]) = 11;
      Swift::Int_optional v112 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v108);
      if (!v112.is_nil)
      {
        unint64_t value = v112.value;
        sub_251CF2CAC(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
        return value;
      }
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v61 = qword_26B21FF50;
      swift_getKeyPath();
      v109[0] = v61;
      sub_251CE90D0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
      sub_251F34F10();
      swift_release();
      uint64_t v62 = v61 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
      swift_beginAccess();
      uint64_t v63 = *(void *)(v62 + *(int *)(type metadata accessor for StateSnapshot(0) + 32));
      if (!*(void *)(v63 + 16))
      {
        uint64_t v60 = v94;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v94, 1, 1, v99);
LABEL_34:
        sub_251CF2CAC(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v72 = &qword_26B21F240;
        goto LABEL_35;
      }
      uint64_t v64 = v31 + *(int *)(v32 + 44);
      swift_bridgeObjectRetain();
      unint64_t v65 = sub_2519FE584(v64);
      uint64_t v66 = v99;
      if (v67)
      {
        uint64_t v68 = v93;
        uint64_t v60 = v94;
        sub_251CF2C44(*(void *)(v63 + 56) + *(void *)(v93 + 72) * v65, v94, type metadata accessor for StaticAccessory);
        uint64_t v69 = v68;
        uint64_t v70 = 0;
      }
      else
      {
        uint64_t v70 = 1;
        uint64_t v69 = v93;
        uint64_t v60 = v94;
      }
      uint64_t v73 = v69;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v60, v70, 1, v66);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v60, 1, v66) == 1) {
        goto LABEL_34;
      }
      uint64_t v76 = v92;
      uint64_t v77 = sub_251CF39E4(v60, v92, type metadata accessor for StaticAccessory);
      uint64_t v78 = *(void *)(v76 + *(int *)(v66 + 80));
      MEMORY[0x270FA5388](v77);
      *(&v90 - 2) = v76;
      swift_bridgeObjectRetain();
      unint64_t v79 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)(&v90 - 4), v78);
      swift_bridgeObjectRelease();
      uint64_t v80 = *(void *)(v79 + 16);
      if (v80)
      {
        uint64_t v81 = v79 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
        uint64_t v82 = *(void *)(v100 + 72);
        swift_bridgeObjectRetain();
        uint64_t v83 = v98;
        while (1)
        {
          sub_251CF2C44(v81, v83, (uint64_t (*)(void))type metadata accessor for StaticService);
          LOBYTE(v108[0]) = *(unsigned char *)(v83 + *(int *)(v107 + 88));
          if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v84 == 0x8000000251F64950)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_50;
          }
          char v85 = sub_251F36B10();
          swift_bridgeObjectRelease();
          if (v85) {
            break;
          }
          uint64_t v83 = v98;
          sub_251CF2CAC(v98, (uint64_t (*)(void))type metadata accessor for StaticService);
          v81 += v82;
          if (!--v80)
          {
            swift_bridgeObjectRelease();
            uint64_t v86 = 1;
            uint64_t v31 = (uint64_t)v106;
            uint64_t v32 = v107;
            goto LABEL_47;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v83 = v98;
LABEL_50:
        uint64_t v88 = v83;
        uint64_t v87 = v91;
        sub_251CF39E4(v88, v91, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v86 = 0;
        uint64_t v31 = (uint64_t)v106;
        uint64_t v32 = v107;
      }
      else
      {
        uint64_t v86 = 1;
LABEL_47:
        uint64_t v87 = v91;
      }
      uint64_t v89 = v100;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v87, v86, 1, v32);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v87, 1, v32) == 1)
      {
        sub_251CF2CAC(v92, type metadata accessor for StaticAccessory);
        sub_251CF2CAC(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v72 = qword_26B21EE20;
        uint64_t v74 = v87;
LABEL_36:
        sub_251A1B064(v74, v72);
LABEL_37:
        unint64_t value = 0;
      }
      else
      {
        v108[0] = *(void *)(v87 + *(int *)(v32 + 112));
        char v110 = 11;
        unint64_t value = (unint64_t)StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v110);
        sub_251CF2CAC(v92, type metadata accessor for StaticAccessory);
        sub_251CF2CAC(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251CF2CAC(v87, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      break;
    case 2u:
    case 3u:
      sub_251CF2CAC(v51, type metadata accessor for AccessoryDetails.Payload);
      goto LABEL_37;
    default:
      uint64_t v52 = v101;
      uint64_t v53 = sub_251CF39E4(v51, v101, type metadata accessor for StaticAccessory);
      uint64_t v54 = *(void *)(v52 + *(int *)(v99 + 80));
      MEMORY[0x270FA5388](v53);
      *(&v90 - 2) = v52;
      swift_bridgeObjectRetain();
      unint64_t v55 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)(&v90 - 4), v54);
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void *)(v55 + 16);
      if (!v56) {
        goto LABEL_19;
      }
      uint64_t v57 = v55 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
      uint64_t v58 = *(void *)(v100 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_251CF2C44(v57, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        v109[0] = *(void *)&v8[*(int *)(v32 + 112)];
        LOBYTE(v108[0]) = 11;
        Swift::Int_optional v111 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v108);
        if (!v111.is_nil)
        {
          swift_bridgeObjectRelease();
          uint64_t v60 = v95;
          sub_251CF39E4((uint64_t)v8, v95, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v59 = 0;
          goto LABEL_28;
        }
        sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        v57 += v58;
        --v56;
      }
      while (v56);
      swift_bridgeObjectRelease();
LABEL_19:
      uint64_t v59 = 1;
      uint64_t v60 = v95;
LABEL_28:
      uint64_t v71 = v100;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v60, v59, 1, v32);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v60, 1, v32) != 1)
      {
        v109[0] = *(void *)(v60 + *(int *)(v32 + 112));
        LOBYTE(v108[0]) = 11;
        unint64_t value = (unint64_t)StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v108);
        sub_251CF2CAC(v101, type metadata accessor for StaticAccessory);
        sub_251CF2CAC(v60, (uint64_t (*)(void))type metadata accessor for StaticService);
        return value;
      }
      sub_251CF2CAC(v101, type metadata accessor for StaticAccessory);
      uint64_t v72 = qword_26B21EE20;
LABEL_35:
      uint64_t v74 = v60;
      goto LABEL_36;
  }
  return value;
}

uint64_t AccessoryDetailsBasicInfo.chargingState.getter()
{
  uint64_t v68 = type metadata accessor for StaticService();
  uint64_t v62 = *(void *)(v68 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v68);
  uint64_t v59 = (uint64_t)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v57 - v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v57 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v58);
  uint64_t v63 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v65);
  uint64_t v66 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE68);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (__int16 *)((char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v64 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v60 = (_WORD *)((char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v61 = (__int16 *)((char *)&v57 - v15);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for StaticMatterDevice();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v0;
  AccessoryDetails.Payload.staticMatterDevice.getter((uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    uint64_t v23 = &qword_26B21EC90;
    uint64_t v24 = (uint64_t)v18;
LABEL_5:
    sub_251A1B064(v24, v23);
    uint64_t v26 = v68;
    goto LABEL_11;
  }
  sub_251CF39E4((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v25 = swift_bridgeObjectRetain();
  sub_251CD1300(v25, (uint64_t)v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(__int16 *, uint64_t, uint64_t))(v64 + 48))(v11, 1, v12) == 1)
  {
    sub_251CF2CAC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    uint64_t v23 = &qword_269B9CE68;
    uint64_t v24 = (uint64_t)v11;
    goto LABEL_5;
  }
  uint64_t v27 = *(int *)(v12 + 48);
  uint64_t v28 = (uint64_t)v61;
  uint64_t v29 = (uint64_t)v61 + v27;
  __int16 v30 = *v11;
  *uint64_t v61 = *v11;
  sub_251CF39E4((uint64_t)v11 + v27, v28 + v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v31 = *(int *)(v12 + 48);
  uint64_t v32 = v60;
  uint64_t v33 = (uint64_t)v60 + v31;
  *uint64_t v60 = v30;
  sub_251CF2C44(v29, (uint64_t)v32 + v31, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v34 = *(void *)(v33 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  uint64_t v26 = v68;
  if (*(void *)(v34 + 16))
  {
    unint64_t v35 = sub_2519FE614(2);
    if (v36)
    {
      sub_251A1A930(*(void *)(v34 + 56) + (v35 << 8), (uint64_t)v69);
      sub_251A1A930((uint64_t)v69, (uint64_t)v70);
      if (sub_251A4DB2C((uint64_t)v70) == 6)
      {
        uint64_t v37 = sub_251A4E128((uint64_t)v70);
        int v38 = *(unsigned __int8 *)(v37 + 31);
        int v39 = *(unsigned __int8 *)(v37 + 32);
        sub_251A1B064(v28, &qword_26B21F4C8);
        sub_251CF2CAC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        sub_251CF2CAC(v33, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        return (v38 == 1) & ~v39;
      }
    }
  }
  sub_251A1B064(v28, &qword_26B21F4C8);
  sub_251CF2CAC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  sub_251CF2CAC(v33, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
LABEL_11:
  uint64_t v41 = v66;
  sub_251CF2C44(v67, v66, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v53 = v59;
      sub_251CF39E4(v41, v59, (uint64_t (*)(void))type metadata accessor for StaticService);
      v70[0] = *(void *)(v53 + *(int *)(v26 + 112));
      v69[0] = 24;
      Swift::Int_optional v72 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v69);
      if (v72.is_nil) {
        Swift::Int value = 2;
      }
      else {
        Swift::Int value = v72.value;
      }
      uint64_t v54 = v53;
      goto LABEL_30;
    case 2u:
    case 3u:
      unint64_t v42 = type metadata accessor for AccessoryDetails.Payload;
      uint64_t v43 = v41;
      goto LABEL_13;
    default:
      uint64_t v44 = v63;
      uint64_t v45 = sub_251CF39E4(v41, v63, type metadata accessor for StaticAccessory);
      uint64_t v46 = *(void *)(v44 + *(int *)(v58 + 80));
      MEMORY[0x270FA5388](v45);
      *(&v57 - 2) = v44;
      swift_bridgeObjectRetain();
      unint64_t v47 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)(&v57 - 4), v46);
      swift_bridgeObjectRelease();
      uint64_t v48 = *(void *)(v47 + 16);
      if (!v48) {
        goto LABEL_20;
      }
      uint64_t v49 = v47 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
      uint64_t v50 = *(void *)(v62 + 72);
      swift_bridgeObjectRetain();
      break;
  }
  do
  {
    sub_251CF2C44(v49, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
    v70[0] = *(void *)&v4[*(int *)(v26 + 112)];
    v69[0] = 24;
    Swift::Int_optional v71 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v69);
    if (!v71.is_nil)
    {
      swift_bridgeObjectRelease();
      uint64_t v52 = v57;
      sub_251CF39E4((uint64_t)v4, v57, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v51 = 0;
      goto LABEL_26;
    }
    sub_251CF2CAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
    v49 += v50;
    --v48;
  }
  while (v48);
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v51 = 1;
  uint64_t v52 = v57;
LABEL_26:
  uint64_t v55 = v62;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v52, v51, 1, v26);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v52, 1, v26) == 1)
  {
    sub_251CF2CAC(v63, type metadata accessor for StaticAccessory);
    sub_251A1B064(v52, qword_26B21EE20);
    return 2;
  }
  v70[0] = *(void *)(v52 + *(int *)(v26 + 112));
  v69[0] = 24;
  Swift::Int_optional v73 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v69);
  if (v73.is_nil)
  {
    sub_251CF2CAC(v63, type metadata accessor for StaticAccessory);
    unint64_t v42 = (uint64_t (*)(void))type metadata accessor for StaticService;
    uint64_t v43 = v52;
LABEL_13:
    sub_251CF2CAC(v43, v42);
    return 2;
  }
  Swift::Int value = v73.value;
  sub_251CF2CAC(v63, type metadata accessor for StaticAccessory);
  uint64_t v54 = v52;
LABEL_30:
  sub_251CF2CAC(v54, (uint64_t (*)(void))type metadata accessor for StaticService);
  return value;
}

uint64_t AccessoryDetailsBasicInfo.defaultIcon.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251CF2C44(v1, (uint64_t)v4, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = type metadata accessor for StaticService();
      uint64_t v5 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v6 = (uint64_t (*)(void))type metadata accessor for StaticService;
      break;
    case 2u:
      uint64_t v17 = type metadata accessor for StaticServiceGroup();
      uint64_t v5 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      uint64_t v6 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      break;
    case 3u:
      uint64_t v17 = type metadata accessor for StaticEndpoint();
      uint64_t v5 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
      uint64_t v6 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      break;
    default:
      uint64_t v17 = type metadata accessor for StaticAccessory(0);
      uint64_t v5 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v6 = type metadata accessor for StaticAccessory;
      break;
  }
  uint64_t v7 = v6;
  uint64_t v18 = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  sub_251CF39E4((uint64_t)v4, (uint64_t)boxed_opaque_existential_1, v7);
  uint64_t v9 = v17;
  uint64_t v10 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 80))(v15, v9, v10);
  _OWORD v12[2] = v15[0];
  uint64_t v13 = v15[1];
  uint64_t v14 = v15[2];
  StatusIcon.defaultIconSymbol()();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
}

uint64_t AccessoryDetailsBasicInfo.iconSymbol.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticMatterDevice();
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (ValueMetadata *)type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t result = type metadata accessor for AccessoryDetailsBasicInfo();
  int v20 = *(unsigned __int8 *)(v2 + *(int *)(result + 40));
  if (v20 != 89)
  {
    *a1 = v20;
    return result;
  }
  sub_251CF2C44(v2, (uint64_t)v18, type metadata accessor for AccessoryDetails.Payload);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  int v38 = v9;
  int v39 = a1;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v43 = (ValueMetadata *)type metadata accessor for StaticService();
      uint64_t v22 = sub_251CE90D0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v23 = (uint64_t (*)(void))type metadata accessor for StaticService;
      break;
    case 2:
      uint64_t v43 = (ValueMetadata *)type metadata accessor for StaticServiceGroup();
      uint64_t v22 = sub_251CE90D0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      uint64_t v23 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      break;
    case 3:
      uint64_t v43 = (ValueMetadata *)type metadata accessor for StaticEndpoint();
      uint64_t v22 = sub_251CE90D0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
      uint64_t v23 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      break;
    default:
      uint64_t v43 = v10;
      uint64_t v22 = sub_251CE90D0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v23 = type metadata accessor for StaticAccessory;
      break;
  }
  uint64_t v24 = v23;
  unint64_t v44 = v22;
  uint64_t v25 = __swift_allocate_boxed_opaque_existential_1(&v41);
  sub_251CF39E4((uint64_t)v18, (uint64_t)v25, v24);
  uint64_t v26 = v43;
  unint64_t v27 = v44;
  __swift_project_boxed_opaque_existential_1(&v41, (uint64_t)v43);
  (*(void (**)(uint64_t *__return_ptr, ValueMetadata *, unint64_t))(v27 + 80))(&v45, v26, v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v41);
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_26B21FF50;
  swift_getKeyPath();
  uint64_t v41 = v28;
  sub_251CE90D0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v29 = v28 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
  swift_beginAccess();
  uint64_t v30 = *(void *)(v29 + 16);
  uint64_t v43 = &type metadata for HomeKitFeatures;
  unint64_t v44 = sub_251A4DA94();
  LOBYTE(v41) = 4;
  swift_bridgeObjectRetain();
  LOBYTE(v29) = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v41);
  uint64_t v31 = (uint64_t)v38;
  if (v29) {
    goto LABEL_14;
  }
  if (qword_269B9C4C0 != -1) {
    swift_once();
  }
  if (byte_269BA38B2 == 1)
  {
LABEL_14:
    sub_251CF2C44(v2, (uint64_t)v16, type metadata accessor for AccessoryDetails.Payload);
    if (swift_getEnumCaseMultiPayload())
    {
      swift_bridgeObjectRelease();
      sub_251CF2CAC((uint64_t)v16, type metadata accessor for AccessoryDetails.Payload);
      goto LABEL_19;
    }
    sub_251CF39E4((uint64_t)v16, (uint64_t)v12, type metadata accessor for StaticAccessory);
    uint64_t v32 = &v12[SHIDWORD(v10[2].Kind)];
    if (v32[8] != 1)
    {
      if (*(void *)(v30 + 16))
      {
        unint64_t v34 = sub_2519FE588(*(void *)v32);
        uint64_t v35 = v40;
        if (v36)
        {
          sub_251CF2C44(*(void *)(v30 + 56) + *(void *)(v40 + 72) * v34, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
          uint64_t v37 = 0;
        }
        else
        {
          uint64_t v37 = 1;
        }
      }
      else
      {
        uint64_t v37 = 1;
        uint64_t v35 = v40;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v6, v37, 1, v7);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v6, 1, v7) == 1)
      {
        sub_251CF2CAC((uint64_t)v12, type metadata accessor for StaticAccessory);
        sub_251A1B064((uint64_t)v6, &qword_26B21EC90);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_251CF39E4((uint64_t)v6, v31, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        StaticMatterDevice.statusIcon.getter((uint64_t)&v41);
        sub_251CF2CAC(v31, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        sub_251CF2CAC((uint64_t)v12, type metadata accessor for StaticAccessory);
        LODWORD(v45) = v41;
        long long v46 = v42;
      }
      goto LABEL_19;
    }
    sub_251CF2CAC((uint64_t)v12, type metadata accessor for StaticAccessory);
  }
  swift_bridgeObjectRelease();
LABEL_19:
  char v33 = BYTE3(v45);
  if (BYTE3(v45) == 89)
  {
    LOWORD(v41) = v45;
    BYTE2(v41) = BYTE2(v45);
    BYTE3(v41) = 89;
    long long v42 = v46;
    StatusIcon.defaultIconSymbol()();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    unsigned char *v39 = v33;
  }
  return result;
}

uint64_t AccessoryDetailsBasicInfo.iconSymbol.setter(char *a1)
{
  char v2 = *a1;
  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_251F350A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_269B9FFC0);
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = IconSymbol.rawValue.getter();
    sub_251A00E84(v8, v9, &v11);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v4, v5, "Write %s to dataModel icon", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v7, -1, -1);
    MEMORY[0x2533AC760](v6, -1, -1);
  }

  uint64_t result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*AccessoryDetailsBasicInfo.iconSymbol.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)a1 = v1;
  AccessoryDetailsBasicInfo.iconSymbol.getter((unsigned char *)(a1 + 8));
  return sub_251CE5CC8;
}

uint64_t sub_251CE5CC8(uint64_t a1, char a2)
{
  if (a2)
  {
    char v4 = *(unsigned char *)(a1 + 8);
    char v2 = &v4;
  }
  else
  {
    char v5 = *(unsigned char *)(a1 + 8);
    char v2 = &v5;
  }
  return AccessoryDetailsBasicInfo.iconSymbol.setter(v2);
}

void *AccessoryDetailsBasicInfo.symbolSet.getter()
{
  uint64_t v42 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v42);
  unint64_t v44 = (char *)&v40 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  char v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v40 - v6;
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v40 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v18 - 8);
  int v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251CF2C44(v45, (uint64_t)v23, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251CF39E4((uint64_t)v23, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v15[*(int *)(v8 + 88)] == 30) {
        uint64_t v32 = &unk_270263B80;
      }
      else {
        uint64_t v32 = (void *)MEMORY[0x263F8EE78];
      }
      char v33 = type metadata accessor for StaticService;
      uint64_t v34 = (uint64_t)v15;
      goto LABEL_32;
    case 2u:
      int v20 = v43;
      sub_251CF39E4((uint64_t)v23, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = sub_251EDC188(v25);
      sub_251ABD970(v26, (uint64_t)v5);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
      {
        sub_251A1B064((uint64_t)v5, qword_26B21EE20);
        uint64_t v24 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        goto LABEL_10;
      }
      sub_251CF39E4((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v12[*(int *)(v8 + 88)] == 30) {
        uint64_t v32 = &unk_270263BA8;
      }
      else {
        uint64_t v32 = (void *)MEMORY[0x263F8EE78];
      }
      sub_251CF2CAC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v35 = type metadata accessor for StaticServiceGroup;
      goto LABEL_31;
    case 3u:
      int v20 = v44;
      sub_251CF39E4((uint64_t)v23, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = sub_251AC549C(v27);
      uint64_t v29 = sub_251A53EB8(v28);
      if (v31) {
        goto LABEL_35;
      }
      if (*(_DWORD *)(v28 + 36) != v30)
      {
        __break(1u);
LABEL_35:
        __break(1u);
        JUMPOUT(0x251CE637CLL);
      }
      if (v29 == 1 << *(unsigned char *)(v28 + 32))
      {
        swift_release();
        uint64_t v24 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
        goto LABEL_10;
      }
      sub_251A54058(v29, v30, 0, v28, v46);
      swift_release();
      int v36 = v46[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2448);
      uint64_t v37 = swift_allocObject();
      uint64_t v32 = (void *)v37;
      *(_OWORD *)(v37 + 16) = xmmword_251F38650;
      if ((v36 - 4) >= 4)
      {
        if ((v36 - 21) >= 2)
        {
          if (v36 == 23) {
            char v38 = 53;
          }
          else {
            char v38 = 88;
          }
        }
        else
        {
          char v38 = 19;
        }
      }
      else
      {
        char v38 = 31;
      }
      *(unsigned char *)(v37 + 32) = v38;
      uint64_t v35 = type metadata accessor for StaticEndpoint;
      goto LABEL_31;
    default:
      sub_251CF39E4((uint64_t)v23, (uint64_t)v20, type metadata accessor for StaticAccessory);
      StaticAccessory.primaryStaticService.getter((uint64_t)v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_251A1B064((uint64_t)v7, qword_26B21EE20);
        uint64_t v24 = type metadata accessor for StaticAccessory;
LABEL_10:
        sub_251CF2CAC((uint64_t)v20, v24);
        return (void *)MEMORY[0x263F8EE78];
      }
      else
      {
        sub_251CF39E4((uint64_t)v7, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v17[*(int *)(v8 + 88)] == 30) {
          uint64_t v32 = &unk_270263B58;
        }
        else {
          uint64_t v32 = (void *)MEMORY[0x263F8EE78];
        }
        sub_251CF2CAC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v35 = (uint64_t (*)())type metadata accessor for StaticAccessory;
LABEL_31:
        char v33 = v35;
        uint64_t v34 = (uint64_t)v20;
LABEL_32:
        sub_251CF2CAC(v34, (uint64_t (*)(void))v33);
      }
      return v32;
  }
}

uint64_t AccessoryDetailsBasicInfo.primaryStaticService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = AccessoryDetailsBasicInfo.staticServices.getter();
  uint64_t v10 = v9;
  uint64_t v11 = v9 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v9 + 56);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_251CF2C44(*(void *)(v10 + 48) + *(void *)(v3 + 72) * i, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251CF39E4((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v6[*(int *)(v2 + 24)] == 1)
    {
      swift_release();
      sub_251CF39E4((uint64_t)v6, a1, (uint64_t (*)(void))type metadata accessor for StaticService);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_251CF2CAC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v20 >= v15) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v20);
    ++v17;
    if (v21) {
      goto LABEL_22;
    }
    int64_t v17 = v20 + 1;
    if (v20 + 1 >= v15) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v17);
    if (v21) {
      goto LABEL_22;
    }
    int64_t v17 = v20 + 2;
    if (v20 + 2 >= v15) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v17);
    if (v21) {
      goto LABEL_22;
    }
    int64_t v17 = v20 + 3;
    if (v20 + 3 >= v15) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v17);
    if (v21) {
      goto LABEL_22;
    }
    int64_t v17 = v20 + 4;
    if (v20 + 4 >= v15) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v17);
    if (v21) {
      goto LABEL_22;
    }
    int64_t v22 = v20 + 5;
    if (v22 >= v15)
    {
LABEL_27:
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
      return swift_bridgeObjectRelease();
    }
    unint64_t v21 = *(void *)(v11 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        int64_t v17 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_30;
        }
        if (v17 >= v15) {
          goto LABEL_27;
        }
        unint64_t v21 = *(void *)(v11 + 8 * v17);
        ++v22;
        if (v21) {
          goto LABEL_22;
        }
      }
    }
    int64_t v17 = v22;
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t AccessoryDetailsBasicInfo.staticServices.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251CF2C44(v1, (uint64_t)v14, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251CF39E4((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F208);
      unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_251F38650;
      sub_251CF2C44((uint64_t)v8, v23 + v22, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v18 = sub_251C0A69C(v23);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v19 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v20 = (uint64_t)v8;
      goto LABEL_6;
    case 2u:
      sub_251CF39E4((uint64_t)v14, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v18 = sub_251EDC188(v21);
      uint64_t v19 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      uint64_t v20 = (uint64_t)v4;
      goto LABEL_6;
    case 3u:
      sub_251CF2CAC((uint64_t)v14, type metadata accessor for AccessoryDetails.Payload);
      return MEMORY[0x263F8EE88];
    default:
      uint64_t v15 = sub_251CF39E4((uint64_t)v14, (uint64_t)v11, type metadata accessor for StaticAccessory);
      uint64_t v16 = *(void *)&v11[*(int *)(v9 + 80)];
      MEMORY[0x270FA5388](v15);
      *(void *)&v25[-16] = v11;
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)&v25[-32], v16);
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_251EE152C(v17);
      swift_bridgeObjectRelease();
      uint64_t v19 = type metadata accessor for StaticAccessory;
      uint64_t v20 = (uint64_t)v11;
LABEL_6:
      sub_251CF2CAC(v20, v19);
      return v18;
  }
}

uint64_t AccessoryDetailsBasicInfo.primaryServiceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v4);
  uint64_t v8 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_251A1B064((uint64_t)v4, qword_26B21EE20);
    uint64_t v9 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
LABEL_4:
    sub_251F34D90();
    return sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
  }
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v4, v10);
  sub_251CF2CAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1) {
    goto LABEL_4;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v7, v10);
}

uint64_t AccessoryDetailsBasicInfo.primaryServiceKind.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v4);
  uint64_t v5 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    uint64_t result = sub_251A1B064((uint64_t)v4, qword_26B21EE20);
    char v7 = 0;
  }
  else
  {
    char v7 = v4[*(int *)(v5 + 88)];
    uint64_t result = sub_251CF2CAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  *a1 = v7;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.displayAsServiceKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    uint64_t result = sub_251A1B064((uint64_t)v8, qword_26B21EE20);
    LOBYTE(v10) = 0;
  }
  else
  {
    int v10 = v8[*(int *)(v2 + 96)];
    sub_251CF2C44((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v10 == 53) {
      LOBYTE(v10) = v5[*(int *)(v2 + 88)];
    }
    sub_251CF2CAC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t result = sub_251CF2CAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  *a1 = v10;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.foregroundColor.getter()
{
  uint64_t v0 = type metadata accessor for StaticService();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    sub_251A1B064((uint64_t)v6, qword_26B21EE20);
    LOBYTE(v7) = 0;
  }
  else
  {
    int v7 = v6[*(int *)(v0 + 96)];
    sub_251CF2C44((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v7 == 53) {
      LOBYTE(v7) = v3[*(int *)(v0 + 88)];
    }
    sub_251CF2CAC((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251CF2CAC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  v9[15] = v7;
  return ServiceKind.foregroundColor.getter();
}

BOOL AccessoryDetailsBasicInfo.canBeToggled.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251A1B064((uint64_t)v2, qword_26B21EE20);
    return 0;
  }
  else
  {
    BOOL v4 = StaticService.canBeToggled.getter();
    sub_251CF2CAC((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  return v4;
}

uint64_t type metadata accessor for AccessoryDetailsBasicInfo()
{
  uint64_t result = qword_269BA2460;
  if (!qword_269BA2460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251CE7278(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for StaticRoom(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_251ECDD00(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_251CE7320(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_251CE7320(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v159 = type metadata accessor for StaticRoom(0);
  uint64_t v154 = *(void *)(v159 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v159);
  uint64_t v149 = (uint64_t)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v160 = (uint64_t)&v140 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int v10 = (char *)&v140 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v140 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v152 = (uint64_t)&v140 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v151 = (uint64_t)&v140 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v146 = (uint64_t)&v140 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v145 = (uint64_t)&v140 - v20;
  uint64_t v161 = a1;
  uint64_t v21 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_154;
    }
    if (v21) {
      return sub_251CE7EE4(0, v21, 1, v161);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_162;
  }
  uint64_t v155 = v10;
  uint64_t v142 = result;
  if (v21 < 2)
  {
    uint64_t v27 = (char *)MEMORY[0x263F8EE78];
    unint64_t v153 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
    uint64_t v141 = MEMORY[0x263F8EE78];
    if (v21 != 1)
    {
      unint64_t v29 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_120:
      uint64_t v133 = v27;
      if (v29 >= 2)
      {
        uint64_t v134 = *v161;
        do
        {
          unint64_t v135 = v29 - 2;
          if (v29 < 2) {
            goto LABEL_149;
          }
          if (!v134) {
            goto LABEL_161;
          }
          uint64_t v136 = *(void *)&v133[16 * v135 + 32];
          uint64_t v137 = *(void *)&v133[16 * v29 + 24];
          sub_251CE81D8(v134 + *(void *)(v154 + 72) * v136, v134 + *(void *)(v154 + 72) * *(void *)&v133[16 * v29 + 16], v134 + *(void *)(v154 + 72) * v137, v153);
          if (v2) {
            break;
          }
          if (v137 < v136) {
            goto LABEL_150;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v133 = sub_251ECDC38((uint64_t)v133);
          }
          if (v135 >= *((void *)v133 + 2)) {
            goto LABEL_151;
          }
          char v138 = &v133[16 * v135 + 32];
          *(void *)char v138 = v136;
          *((void *)v138 + 1) = v137;
          unint64_t v139 = *((void *)v133 + 2);
          if (v29 > v139) {
            goto LABEL_152;
          }
          memmove(&v133[16 * v29 + 16], &v133[16 * v29 + 32], 16 * (v139 - v29));
          *((void *)v133 + 2) = v139 - 1;
          unint64_t v29 = v139 - 1;
        }
        while (v139 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(void *)(v141 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_251F35B50();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = *(unsigned __int8 *)(v154 + 80);
    uint64_t v141 = v25;
    unint64_t v153 = v25 + ((v26 + 32) & ~v26);
  }
  uint64_t v28 = 0;
  uint64_t v27 = (char *)MEMORY[0x263F8EE78];
  uint64_t v144 = v13;
  while (1)
  {
    uint64_t v30 = v28;
    uint64_t v31 = v28 + 1;
    uint64_t v150 = v28;
    if (v28 + 1 >= v21)
    {
      uint64_t v42 = v28;
    }
    else
    {
      uint64_t v32 = *v161;
      uint64_t v33 = *(void *)(v154 + 72);
      uint64_t v156 = v28 + 1;
      uint64_t v34 = v145;
      sub_251CF2C44(v32 + v33 * v31, v145, type metadata accessor for StaticRoom);
      uint64_t v147 = v32;
      uint64_t v158 = v33;
      uint64_t v35 = v32 + v33 * v30;
      uint64_t v36 = v146;
      sub_251CF2C44(v35, v146, type metadata accessor for StaticRoom);
      uint64_t v37 = *(int *)(v159 + 20);
      uint64_t v38 = *(void *)(v34 + v37);
      uint64_t v39 = *(void *)(v34 + v37 + 8);
      uint64_t v40 = (void *)(v36 + v37);
      if (v38 == *v40 && v39 == v40[1]) {
        LODWORD(v157) = 0;
      }
      else {
        LODWORD(v157) = sub_251F36B10();
      }
      sub_251CF2CAC(v146, type metadata accessor for StaticRoom);
      sub_251CF2CAC(v145, type metadata accessor for StaticRoom);
      uint64_t v31 = v150 + 2;
      if (v150 + 2 < v21)
      {
        uint64_t v143 = v27;
        v156 *= v158;
        uint64_t v43 = v147;
        uint64_t v44 = v158 * v31;
        while (1)
        {
          uint64_t v45 = v21;
          uint64_t v46 = v31;
          uint64_t v47 = v151;
          sub_251CF2C44(v43 + v44, v151, type metadata accessor for StaticRoom);
          uint64_t v48 = v152;
          sub_251CF2C44(v43 + v156, v152, type metadata accessor for StaticRoom);
          uint64_t v49 = *(int *)(v159 + 20);
          uint64_t v50 = *(void *)(v47 + v49);
          uint64_t v51 = *(void *)(v47 + v49 + 8);
          uint64_t v52 = (void *)(v48 + v49);
          BOOL v53 = v50 == *v52 && v51 == v52[1];
          int v54 = v53 ? 0 : sub_251F36B10();
          sub_251CF2CAC(v152, type metadata accessor for StaticRoom);
          sub_251CF2CAC(v151, type metadata accessor for StaticRoom);
          uint64_t v21 = v45;
          if ((v157 ^ v54)) {
            break;
          }
          uint64_t v31 = v46 + 1;
          v43 += v158;
          if (v45 == v46 + 1)
          {
            uint64_t v31 = v45;
            uint64_t v27 = v143;
            goto LABEL_35;
          }
        }
        uint64_t v27 = v143;
        uint64_t v31 = v46;
      }
LABEL_35:
      uint64_t v42 = v150;
      if (v157)
      {
        if (v31 < v150) {
          goto LABEL_155;
        }
        if (v150 < v31)
        {
          uint64_t v157 = v21;
          uint64_t v143 = v27;
          uint64_t v55 = 0;
          uint64_t v56 = v158 * (v31 - 1);
          uint64_t v57 = v31 * v158;
          uint64_t v58 = v150;
          uint64_t v59 = v150 * v158;
          do
          {
            if (v58 != v31 + v55 - 1)
            {
              uint64_t v148 = v2;
              uint64_t v60 = v147;
              if (!v147) {
                goto LABEL_160;
              }
              unint64_t v61 = v147 + v59;
              sub_251CF39E4(v147 + v59, v149, type metadata accessor for StaticRoom);
              if (v59 < v56 || v61 >= v60 + v57)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v59 != v56)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_251CF39E4(v149, v60 + v56, type metadata accessor for StaticRoom);
              uint64_t v2 = v148;
            }
            ++v58;
            --v55;
            v56 -= v158;
            v57 -= v158;
            v59 += v158;
          }
          while (v58 < v31 + v55);
          uint64_t v27 = v143;
          uint64_t v13 = v144;
          uint64_t v42 = v150;
          uint64_t v21 = v157;
        }
      }
    }
    if (v31 < v21)
    {
      if (__OFSUB__(v31, v42)) {
        goto LABEL_153;
      }
      if (v31 - v42 < v142) {
        break;
      }
    }
LABEL_72:
    if (v31 < v42) {
      goto LABEL_148;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v158 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v27 = sub_251ECD5C4(0, *((void *)v27 + 2) + 1, 1, v27);
    }
    unint64_t v83 = *((void *)v27 + 2);
    unint64_t v82 = *((void *)v27 + 3);
    unint64_t v29 = v83 + 1;
    if (v83 >= v82 >> 1) {
      uint64_t v27 = sub_251ECD5C4((char *)(v82 > 1), v83 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v29;
    uint64_t v84 = v27 + 32;
    char v85 = &v27[16 * v83 + 32];
    uint64_t v86 = v158;
    *(void *)char v85 = v42;
    *((void *)v85 + 1) = v86;
    if (v83)
    {
      while (1)
      {
        unint64_t v87 = v29 - 1;
        if (v29 >= 4)
        {
          uint64_t v92 = &v84[16 * v29];
          uint64_t v93 = *((void *)v92 - 8);
          uint64_t v94 = *((void *)v92 - 7);
          BOOL v98 = __OFSUB__(v94, v93);
          uint64_t v95 = v94 - v93;
          if (v98) {
            goto LABEL_137;
          }
          uint64_t v97 = *((void *)v92 - 6);
          uint64_t v96 = *((void *)v92 - 5);
          BOOL v98 = __OFSUB__(v96, v97);
          uint64_t v90 = v96 - v97;
          char v91 = v98;
          if (v98) {
            goto LABEL_138;
          }
          unint64_t v99 = v29 - 2;
          uint64_t v100 = &v84[16 * v29 - 32];
          uint64_t v102 = *(void *)v100;
          uint64_t v101 = *((void *)v100 + 1);
          BOOL v98 = __OFSUB__(v101, v102);
          uint64_t v103 = v101 - v102;
          if (v98) {
            goto LABEL_140;
          }
          BOOL v98 = __OFADD__(v90, v103);
          uint64_t v104 = v90 + v103;
          if (v98) {
            goto LABEL_143;
          }
          if (v104 >= v95)
          {
            uint64_t v122 = &v84[16 * v87];
            uint64_t v124 = *(void *)v122;
            uint64_t v123 = *((void *)v122 + 1);
            BOOL v98 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            if (v98) {
              goto LABEL_147;
            }
            BOOL v115 = v90 < v125;
            goto LABEL_109;
          }
        }
        else
        {
          if (v29 != 3)
          {
            uint64_t v116 = *((void *)v27 + 4);
            uint64_t v117 = *((void *)v27 + 5);
            BOOL v98 = __OFSUB__(v117, v116);
            uint64_t v109 = v117 - v116;
            char v110 = v98;
            goto LABEL_103;
          }
          uint64_t v89 = *((void *)v27 + 4);
          uint64_t v88 = *((void *)v27 + 5);
          BOOL v98 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          char v91 = v98;
        }
        if (v91) {
          goto LABEL_139;
        }
        unint64_t v99 = v29 - 2;
        uint64_t v105 = &v84[16 * v29 - 32];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v108 = __OFSUB__(v106, v107);
        uint64_t v109 = v106 - v107;
        char v110 = v108;
        if (v108) {
          goto LABEL_142;
        }
        Swift::Int_optional v111 = &v84[16 * v87];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v98 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v98) {
          goto LABEL_145;
        }
        if (__OFADD__(v109, v114)) {
          goto LABEL_146;
        }
        if (v109 + v114 >= v90)
        {
          BOOL v115 = v90 < v114;
LABEL_109:
          if (v115) {
            unint64_t v87 = v99;
          }
          goto LABEL_111;
        }
LABEL_103:
        if (v110) {
          goto LABEL_141;
        }
        uint64_t v118 = &v84[16 * v87];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v98 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v98) {
          goto LABEL_144;
        }
        if (v121 < v109) {
          goto LABEL_14;
        }
LABEL_111:
        unint64_t v126 = v87 - 1;
        if (v87 - 1 >= v29)
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!*v161) {
          goto LABEL_159;
        }
        uint64_t v127 = v27;
        uint64_t v128 = &v84[16 * v126];
        uint64_t v129 = *(void *)v128;
        uint64_t v130 = &v84[16 * v87];
        uint64_t v131 = *((void *)v130 + 1);
        sub_251CE81D8(*v161 + *(void *)(v154 + 72) * *(void *)v128, *v161 + *(void *)(v154 + 72) * *(void *)v130, *v161 + *(void *)(v154 + 72) * v131, v153);
        if (v2) {
          goto LABEL_131;
        }
        if (v131 < v129) {
          goto LABEL_134;
        }
        if (v87 > *((void *)v127 + 2)) {
          goto LABEL_135;
        }
        *(void *)uint64_t v128 = v129;
        *(void *)&v84[16 * v126 + 8] = v131;
        unint64_t v132 = *((void *)v127 + 2);
        if (v87 >= v132) {
          goto LABEL_136;
        }
        uint64_t v27 = v127;
        unint64_t v29 = v132 - 1;
        memmove(&v84[16 * v87], v130 + 16, 16 * (v132 - 1 - v87));
        *((void *)v127 + 2) = v132 - 1;
        if (v132 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v29 = 1;
LABEL_14:
    uint64_t v21 = v161[1];
    uint64_t v28 = v158;
    uint64_t v13 = v144;
    if (v158 >= v21) {
      goto LABEL_120;
    }
  }
  if (__OFADD__(v42, v142)) {
    goto LABEL_156;
  }
  if (v42 + v142 >= v21) {
    uint64_t v62 = v21;
  }
  else {
    uint64_t v62 = v42 + v142;
  }
  if (v62 >= v42)
  {
    if (v31 != v62)
    {
      uint64_t v143 = v27;
      uint64_t v147 = v62;
      uint64_t v148 = v2;
      uint64_t v63 = *(void *)(v154 + 72);
      uint64_t v64 = v63 * (v31 - 1);
      uint64_t v156 = v63;
      uint64_t v65 = v31 * v63;
      do
      {
        uint64_t v67 = 0;
        uint64_t v157 = v65;
        uint64_t v158 = v31;
        while (1)
        {
          uint64_t v68 = *v161;
          sub_251CF2C44(v65 + v67 + *v161, (uint64_t)v13, type metadata accessor for StaticRoom);
          uint64_t v69 = v64;
          uint64_t v70 = v64 + v67 + v68;
          uint64_t v71 = (uint64_t)v13;
          uint64_t v72 = (uint64_t)v155;
          sub_251CF2C44(v70, (uint64_t)v155, type metadata accessor for StaticRoom);
          uint64_t v73 = *(int *)(v159 + 20);
          uint64_t v74 = *(void *)(v71 + v73);
          uint64_t v75 = *(void *)(v71 + v73 + 8);
          uint64_t v76 = (void *)(v72 + v73);
          if (v74 == *v76 && v75 == v76[1]) {
            break;
          }
          char v78 = sub_251F36B10();
          sub_251CF2CAC(v72, type metadata accessor for StaticRoom);
          sub_251CF2CAC(v71, type metadata accessor for StaticRoom);
          uint64_t v13 = (char *)v71;
          if ((v78 & 1) == 0) {
            goto LABEL_60;
          }
          uint64_t v79 = *v161;
          if (!*v161) {
            goto LABEL_158;
          }
          uint64_t v64 = v69;
          uint64_t v65 = v157;
          uint64_t v80 = v79 + v64 + v67;
          sub_251CF39E4(v79 + v157 + v67, v160, type metadata accessor for StaticRoom);
          swift_arrayInitWithTakeFrontToBack();
          sub_251CF39E4(v160, v80, type metadata accessor for StaticRoom);
          v67 -= v156;
          ++v42;
          uint64_t v66 = v158;
          if (v158 == v42) {
            goto LABEL_61;
          }
        }
        sub_251CF2CAC(v72, type metadata accessor for StaticRoom);
        sub_251CF2CAC(v71, type metadata accessor for StaticRoom);
        uint64_t v13 = (char *)v71;
LABEL_60:
        uint64_t v64 = v69;
        uint64_t v65 = v157;
        uint64_t v66 = v158;
LABEL_61:
        uint64_t v31 = v66 + 1;
        v64 += v156;
        v65 += v156;
        uint64_t v42 = v150;
      }
      while (v31 != v147);
      uint64_t v31 = v147;
      uint64_t v2 = v148;
      uint64_t v27 = v143;
    }
    goto LABEL_72;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251CE7EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v35 = a4;
  uint64_t v30 = a1;
  uint64_t v33 = type metadata accessor for StaticRoom(0);
  uint64_t v6 = MEMORY[0x270FA5388](v33);
  uint64_t v34 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int v10 = (char *)&v28 - v9;
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v32 = a3;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v36 = v15 * (v32 - 1);
    uint64_t v31 = v15;
    uint64_t v16 = v15 * v32;
LABEL_6:
    uint64_t v17 = 0;
    uint64_t v18 = v30;
    while (1)
    {
      uint64_t v19 = *v35;
      sub_251CF2C44(v16 + v17 + *v35, (uint64_t)v14, type metadata accessor for StaticRoom);
      sub_251CF2C44(v36 + v17 + v19, (uint64_t)v10, type metadata accessor for StaticRoom);
      uint64_t v20 = *(int *)(v33 + 20);
      uint64_t v21 = *(void *)&v14[v20];
      uint64_t v22 = *(void *)&v14[v20 + 8];
      uint64_t v23 = &v10[v20];
      if (v21 == *(void *)v23 && v22 == *((void *)v23 + 1))
      {
        sub_251CF2CAC((uint64_t)v10, type metadata accessor for StaticRoom);
        uint64_t result = sub_251CF2CAC((uint64_t)v14, type metadata accessor for StaticRoom);
LABEL_5:
        v36 += v31;
        v16 += v31;
        if (++v32 == v29) {
          return result;
        }
        goto LABEL_6;
      }
      char v25 = sub_251F36B10();
      sub_251CF2CAC((uint64_t)v10, type metadata accessor for StaticRoom);
      uint64_t result = sub_251CF2CAC((uint64_t)v14, type metadata accessor for StaticRoom);
      if ((v25 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v26 = *v35;
      if (!*v35) {
        break;
      }
      uint64_t v27 = v26 + v36 + v17;
      sub_251CF39E4(v26 + v16 + v17, v34, type metadata accessor for StaticRoom);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251CF39E4(v34, v27, type metadata accessor for StaticRoom);
      v17 -= v31;
      if (v32 == ++v18) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251CE81D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v54 = type metadata accessor for StaticRoom(0);
  uint64_t v8 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v51 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  unint64_t v20 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_72;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_73;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v19;
  unint64_t v57 = a1;
  unint64_t v56 = a4;
  uint64_t v23 = v21 / v19;
  if (v22 >= v21 / v19)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      unint64_t v52 = a1;
      uint64_t v25 = v23 * v19;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v37 = a4 + v25;
      unint64_t v55 = a4 + v25;
      unint64_t v57 = a2;
      if (v25 >= 1 && v52 < a2)
      {
        uint64_t v39 = -v19;
        do
        {
          sub_251CF2C44(v37 + v39, (uint64_t)v12, type metadata accessor for StaticRoom);
          unint64_t v40 = a2 + v39;
          uint64_t v41 = v53;
          sub_251CF2C44(a2 + v39, v53, type metadata accessor for StaticRoom);
          uint64_t v42 = *(int *)(v54 + 20);
          uint64_t v43 = *(void *)&v12[v42];
          uint64_t v44 = *(void *)&v12[v42 + 8];
          uint64_t v45 = (void *)(v41 + v42);
          if (v43 == *v45 && v44 == v45[1]) {
            char v47 = 0;
          }
          else {
            char v47 = sub_251F36B10();
          }
          unint64_t v48 = a3 + v39;
          sub_251CF2CAC(v53, type metadata accessor for StaticRoom);
          sub_251CF2CAC((uint64_t)v12, type metadata accessor for StaticRoom);
          if (v47)
          {
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v57 += v39;
          }
          else
          {
            unint64_t v49 = v55;
            v55 += v39;
            if (a3 < v49 || v48 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v49)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v40 = a2;
          }
          unint64_t v37 = v55;
          if (v55 <= a4) {
            break;
          }
          a2 = v40;
          a3 += v39;
        }
        while (v40 > v52);
      }
LABEL_70:
      sub_251ECD814(&v57, &v56, (uint64_t *)&v55);
      return 1;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v19;
    if (a4 < v20 || v20 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v20)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v26 = a4 + v24;
    unint64_t v55 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_251CF2C44(a2, (uint64_t)v17, type metadata accessor for StaticRoom);
        sub_251CF2C44(a4, (uint64_t)v15, type metadata accessor for StaticRoom);
        uint64_t v28 = *(int *)(v54 + 20);
        uint64_t v29 = *(void *)&v17[v28];
        uint64_t v30 = *(void *)&v17[v28 + 8];
        uint64_t v31 = &v15[v28];
        if (v29 == *(void *)v31 && v30 == *((void *)v31 + 1)) {
          break;
        }
        char v33 = sub_251F36B10();
        sub_251CF2CAC((uint64_t)v15, type metadata accessor for StaticRoom);
        sub_251CF2CAC((uint64_t)v17, type metadata accessor for StaticRoom);
        if ((v33 & 1) == 0) {
          goto LABEL_32;
        }
        unint64_t v34 = v57;
        unint64_t v35 = a2 + v19;
        if (v57 < a2 || v57 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 == a2)
        {
          unint64_t v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        unint64_t v57 = v34 + v19;
        a4 = v56;
        if (v56 < v26)
        {
          a2 = v35;
          if (v35 < a3) {
            continue;
          }
        }
        goto LABEL_70;
      }
      sub_251CF2CAC((uint64_t)v15, type metadata accessor for StaticRoom);
      sub_251CF2CAC((uint64_t)v17, type metadata accessor for StaticRoom);
LABEL_32:
      unint64_t v34 = v57;
      unint64_t v36 = v56 + v19;
      if (v57 < v56 || v57 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v57 != v56)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v56 = v36;
      unint64_t v35 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel25AccessoryDetailsBasicInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2498);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v62 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v62 - v18;
  if ((static AccessoryDetails.Payload.== infix(_:_:)(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v21 = *(int *)(v20 + 20);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  if (!v23)
  {
    if (v25) {
      return 0;
    }
    goto LABEL_11;
  }
  if (!v25) {
    return 0;
  }
  BOOL v26 = *v22 == *v24 && v23 == v25;
  if (v26 || (v66 = (int *)v20, v27 = sub_251F36B10(), v20 = (uint64_t)v66, v28 = v27, uint64_t result = 0, (v28 & 1) != 0))
  {
LABEL_11:
    uint64_t v63 = v7;
    uint64_t v64 = a1;
    uint64_t v30 = v5;
    uint64_t v31 = v20;
    sub_251A1B128(a1 + *(int *)(v20 + 24), (uint64_t)v19, &qword_269B9D138);
    uint64_t v65 = a2;
    uint64_t v66 = (int *)v31;
    sub_251A1B128(a2 + *(int *)(v31 + 24), (uint64_t)v17, &qword_269B9D138);
    uint64_t v32 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_251A1B128((uint64_t)v19, (uint64_t)v10, &qword_269B9D138);
    sub_251A1B128((uint64_t)v17, v32, &qword_269B9D138);
    char v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    if (v33((uint64_t)v10, 1, v4) == 1)
    {
      sub_251A1B064((uint64_t)v17, &qword_269B9D138);
      sub_251A1B064((uint64_t)v19, &qword_269B9D138);
      if (v33(v32, 1, v4) == 1)
      {
        sub_251A1B064((uint64_t)v10, &qword_269B9D138);
LABEL_20:
        uint64_t v37 = v65;
        unint64_t v36 = v66;
        uint64_t v38 = v66[7];
        uint64_t v39 = v64;
        unint64_t v40 = (void *)(v64 + v38);
        uint64_t v41 = *(void *)(v64 + v38 + 8);
        uint64_t v42 = (void *)(v65 + v38);
        uint64_t v43 = v42[1];
        if (v41)
        {
          if (!v43) {
            return 0;
          }
          if (*v40 != *v42 || v41 != v43)
          {
            char v44 = sub_251F36B10();
            unint64_t v36 = v66;
            char v45 = v44;
            uint64_t result = 0;
            if ((v45 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v43)
        {
          return 0;
        }
        uint64_t v46 = v36[8];
        int v47 = *(unsigned __int8 *)(v39 + v46);
        int v48 = *(unsigned __int8 *)(v37 + v46);
        if (v47 == 2)
        {
          if (v48 != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          BOOL v49 = (v47 & 1) == 0;
          if (v48 == 2 || ((v49 ^ v48) & 1) == 0) {
            return result;
          }
        }
        uint64_t v50 = v36[9];
        int v51 = *(unsigned __int8 *)(v39 + v50);
        int v52 = *(unsigned __int8 *)(v37 + v50);
        if (v51 == 2)
        {
          if (v52 != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          BOOL v53 = (v51 & 1) == 0;
          if (v52 == 2 || ((v53 ^ v52) & 1) == 0) {
            return result;
          }
        }
        uint64_t v54 = v36[10];
        int v55 = *(unsigned __int8 *)(v39 + v54);
        int v56 = *(unsigned __int8 *)(v37 + v54);
        if (v55 == 89)
        {
          if (v56 == 89) {
            return 1;
          }
        }
        else if (v56 != 89)
        {
          char v68 = v55;
          char v67 = v56;
          uint64_t v57 = IconSymbol.rawValue.getter();
          uint64_t v59 = v58;
          if (v57 == IconSymbol.rawValue.getter() && v59 == v60)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v61 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v61 & 1) == 0) {
              return 0;
            }
          }
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_251A1B128((uint64_t)v10, (uint64_t)v14, &qword_269B9D138);
      if (v33(v32, 1, v4) != 1)
      {
        uint64_t v34 = (uint64_t)v63;
        sub_251CF39E4(v32, (uint64_t)v63, type metadata accessor for StaticRoom);
        char v35 = static StaticRoom.== infix(_:_:)((uint64_t)v14, v34);
        sub_251CF2CAC(v34, type metadata accessor for StaticRoom);
        sub_251A1B064((uint64_t)v17, &qword_269B9D138);
        sub_251A1B064((uint64_t)v19, &qword_269B9D138);
        sub_251CF2CAC((uint64_t)v14, type metadata accessor for StaticRoom);
        sub_251A1B064((uint64_t)v10, &qword_269B9D138);
        if ((v35 & 1) == 0) {
          return 0;
        }
        goto LABEL_20;
      }
      sub_251A1B064((uint64_t)v17, &qword_269B9D138);
      sub_251A1B064((uint64_t)v19, &qword_269B9D138);
      sub_251CF2CAC((uint64_t)v14, type metadata accessor for StaticRoom);
    }
    sub_251A1B064((uint64_t)v10, &qword_269BA2498);
    return 0;
  }
  return result;
}

unint64_t sub_251CE8CF4()
{
  unint64_t result = qword_269BA2400;
  if (!qword_269BA2400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA2400);
  }
  return result;
}

uint64_t sub_251CE8D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251CE8DC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E646567617473 && a2 == 0xEA0000000000656DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F52646567617473 && a2 == 0xEA00000000006D6FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F705F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F70610 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F70630 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F70650)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_251CE9088()
{
  return sub_251CE90D0(&qword_269BA2450, (void (*)(uint64_t))type metadata accessor for AccessoryDetailsBasicInfo);
}

uint64_t sub_251CE90D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251CE9120@<X0>(uint64_t a1@<X8>)
{
  return AccessoryDetailsBasicInfo.room.getter(a1);
}

uint64_t sub_251CE914C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return AccessoryDetailsBasicInfo.roomName.setter(v1, v2);
}

uint64_t sub_251CE9190(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(unsigned char *)(a2 + *(int *)(result + 32)) = v3;
  return result;
}

uint64_t sub_251CE91C8(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(unsigned char *)(a2 + *(int *)(result + 36)) = v3;
  return result;
}

uint64_t sub_251CE91FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AccessoryDetailsBasicInfo.iconSymbol.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_251CE9238(char *a1)
{
  char v2 = *a1;
  return AccessoryDetailsBasicInfo.iconSymbol.setter(&v2);
}

void *initializeBufferWithCopyOfBuffer for AccessoryDetailsBasicInfo(void *a1, void *a2, int *a3)
{
  char v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  char v6 = a3;
  type metadata accessor for AccessoryDetails.Payload(0);
  v323 = a1;
  v324 = v3;
  v322 = v6;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = sub_251F34DA0();
      __dsta = *(void **)(v19 - 8);
      uint64_t v20 = (void (*)(char *, char *, uint64_t))__dsta[2];
      v20((char *)a1, (char *)v3, v19);
      uint64_t v21 = (int *)type metadata accessor for StaticService();
      uint64_t v22 = v21[5];
      uint64_t v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = (void *)((char *)v3 + v22);
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      *((unsigned char *)a1 + v21[6]) = *((unsigned char *)v3 + v21[6]);
      *((unsigned char *)a1 + v21[7]) = *((unsigned char *)v3 + v21[7]);
      *((unsigned char *)a1 + v21[8]) = *((unsigned char *)v3 + v21[8]);
      *((unsigned char *)a1 + v21[9]) = *((unsigned char *)v3 + v21[9]);
      *((unsigned char *)a1 + v21[10]) = *((unsigned char *)v3 + v21[10]);
      uint64_t v26 = v21[11];
      char v27 = (char *)a1 + v26;
      char v28 = (char *)v3 + v26;
      swift_bridgeObjectRetain();
      v20(v27, v28, v19);
      uint64_t v29 = v21[12];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)v3 + v29;
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      uint64_t v32 = v21[13];
      char v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)v3 + v32;
      char v35 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v36 = *((void *)v35 - 1);
      v314 = v20;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1, v35))
      {
        uint64_t v37 = __dsta;
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        v20(v33, v34, v19);
        uint64_t v84 = v35[5];
        char v85 = &v33[v84];
        uint64_t v86 = &v34[v84];
        uint64_t v87 = *((void *)v86 + 1);
        *(void *)char v85 = *(void *)v86;
        *((void *)v85 + 1) = v87;
        uint64_t v88 = v35[6];
        uint64_t v89 = &v33[v88];
        uint64_t v90 = &v34[v88];
        uint64_t v91 = *((void *)v90 + 1);
        *(void *)uint64_t v89 = *(void *)v90;
        *((void *)v89 + 1) = v91;
        uint64_t v92 = v35[7];
        uint64_t v93 = &v33[v92];
        uint64_t v94 = &v34[v92];
        uint64_t v95 = *((void *)v94 + 1);
        *(void *)uint64_t v93 = *(void *)v94;
        *((void *)v93 + 1) = v95;
        uint64_t v96 = v35[8];
        uint64_t v97 = &v33[v96];
        BOOL v98 = &v34[v96];
        uint64_t v99 = *((void *)v98 + 1);
        *(void *)uint64_t v97 = *(void *)v98;
        *((void *)v97 + 1) = v99;
        v33[v35[9]] = v34[v35[9]];
        v33[v35[10]] = v34[v35[10]];
        v33[v35[11]] = v34[v35[11]];
        v33[v35[12]] = v34[v35[12]];
        uint64_t v100 = *(void (**)(char *, void, uint64_t, int *))(v36 + 56);
        swift_bridgeObjectRetain();
        char v3 = v324;
        swift_bridgeObjectRetain();
        a1 = v323;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v100(v33, 0, 1, v35);
        uint64_t v37 = __dsta;
      }
      uint64_t v101 = v21[14];
      uint64_t v102 = (char *)a1 + v101;
      uint64_t v103 = (char *)v3 + v101;
      uint64_t v104 = sub_251F34D20();
      uint64_t v105 = *(void *)(v104 - 8);
      Swift::Int_optional v304 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
      uint64_t v305 = v104;
      uint64_t v303 = v105;
      if (v304(v103, 1, v104))
      {
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v103, v104);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
      }
      *(void *)((char *)a1 + v21[15]) = *(void *)((char *)v3 + v21[15]);
      uint64_t v133 = v21[16];
      uint64_t v134 = (void *)((char *)a1 + v133);
      unint64_t v135 = (void *)((char *)v3 + v133);
      uint64_t v136 = v135[1];
      *uint64_t v134 = *v135;
      v134[1] = v136;
      *((unsigned char *)a1 + v21[17]) = *((unsigned char *)v3 + v21[17]);
      *((unsigned char *)a1 + v21[18]) = *((unsigned char *)v3 + v21[18]);
      *((unsigned char *)a1 + v21[19]) = *((unsigned char *)v3 + v21[19]);
      *((unsigned char *)a1 + v21[20]) = *((unsigned char *)v3 + v21[20]);
      uint64_t v137 = v21[21];
      char v138 = (void *)((char *)a1 + v137);
      unint64_t v139 = (void *)((char *)v3 + v137);
      uint64_t v140 = v3;
      uint64_t v141 = v139[1];
      *char v138 = *v139;
      v138[1] = v141;
      *((unsigned char *)a1 + v21[22]) = *((unsigned char *)v140 + v21[22]);
      *((unsigned char *)a1 + v21[23]) = *((unsigned char *)v140 + v21[23]);
      *((unsigned char *)a1 + v21[24]) = *((unsigned char *)v140 + v21[24]);
      uint64_t v142 = v21[25];
      uint64_t v143 = (char *)a1 + v142;
      uint64_t v144 = (char *)v140 + v142;
      uint64_t v145 = (unsigned int (*)(char *, uint64_t, uint64_t))v37[6];
      swift_bridgeObjectRetain();
      uint64_t v146 = v145;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v145(v144, 1, v19))
      {
        uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v143, v144, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        v314(v143, v144, v19);
        ((void (*)(char *, void, uint64_t, uint64_t))v37[7])(v143, 0, 1, v19);
      }
      uint64_t v160 = v21[26];
      uint64_t v161 = (char *)a1 + v160;
      uint64_t v162 = (char *)v324 + v160;
      v307 = v145;
      uint64_t v308 = v19;
      if (v145((char *)v324 + v160, 1, v19))
      {
        uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v161, v162, *(void *)(*(void *)(v163 - 8) + 64));
      }
      else
      {
        v314(v161, v162, v19);
        ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v161, 0, 1, v19);
      }
      *(void *)((char *)a1 + v21[27]) = *(void *)((char *)v324 + v21[27]);
      *(void *)((char *)a1 + v21[28]) = *(void *)((char *)v324 + v21[28]);
      uint64_t v175 = v21[29];
      unint64_t v176 = (void *)((char *)a1 + v175);
      unint64_t v177 = (void *)((char *)v324 + v175);
      uint64_t v178 = v177[1];
      *unint64_t v176 = *v177;
      v176[1] = v178;
      uint64_t v179 = v21[30];
      v311 = (char *)a1 + v179;
      unint64_t v180 = (char *)v324 + v179;
      uint64_t v181 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v182 = *(void *)(v181 - 8);
      unint64_t v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v183(v180, 1, v181))
      {
        uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v311, v180, *(void *)(*(void *)(v184 - 8) + 64));
        char v6 = v322;
        a1 = v323;
        uint64_t v185 = v19;
        uint64_t v186 = v314;
        goto LABEL_67;
      }
      uint64_t v302 = v182;
      double v200 = v311;
      uint64_t v185 = v19;
      uint64_t v186 = v314;
      v314(v311, v180, v308);
      uint64_t v201 = *(int *)(v181 + 20);
      uint64_t v202 = &v311[v201];
      uint64_t v203 = &v180[v201];
      uint64_t v204 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      char v6 = v322;
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v227 = *((void *)v203 + 1);
          *(void *)uint64_t v202 = *(void *)v203;
          *((void *)v202 + 1) = v227;
          uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v229 = *(int *)(updated + 20);
          uint64_t v299 = updated;
          uint64_t v300 = &v202[v229];
          uint64_t v230 = &v203[v229];
          swift_bridgeObjectRetain();
          if (v304(v230, 1, v305))
          {
            uint64_t v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v300, v230, *(void *)(*(void *)(v231 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v300, v230, v305);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v303 + 56))(v300, 0, 1, v305);
          }
          uint64_t v251 = *(int *)(v299 + 24);
          int v252 = &v202[v251];
          BOOL v253 = &v203[v251];
          uint64_t v254 = *((void *)v253 + 1);
          *(void *)int v252 = *(void *)v253;
          *((void *)v252 + 1) = v254;
          uint64_t v255 = *(int *)(v299 + 28);
          int v256 = &v202[v255];
          uint64_t v257 = &v203[v255];
          uint64_t v258 = *((void *)v257 + 1);
          *(void *)int v256 = *(void *)v257;
          *((void *)v256 + 1) = v258;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v202[*(int *)(v259 + 48)] = v203[*(int *)(v259 + 48)];
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v202, v203, *(void *)(*(void *)(v204 - 8) + 64));
LABEL_65:
            a1 = v323;
            uint64_t v146 = v307;
            uint64_t v250 = v302;
            double v200 = v311;
            goto LABEL_66;
          }
          v314(v202, v203, v308);
          uint64_t v206 = (int *)type metadata accessor for StaticHH2Update(0);
          v202[v206[5]] = v203[v206[5]];
          uint64_t v207 = v206[6];
          uint64_t v208 = &v202[v207];
          uint64_t v209 = &v203[v207];
          uint64_t v211 = *(void *)v209;
          uint64_t v210 = *((void *)v209 + 1);
          *(void *)uint64_t v208 = v211;
          *((void *)v208 + 1) = v210;
          uint64_t v212 = v206[7];
          unint64_t v213 = &v202[v212];
          int v214 = &v203[v212];
          v213[8] = v214[8];
          *(void *)unint64_t v213 = *(void *)v214;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_65;
      }
      uint64_t v223 = *((void *)v203 + 1);
      *(void *)uint64_t v202 = *(void *)v203;
      *((void *)v202 + 1) = v223;
      uint64_t v298 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v224 = v298[5];
      char v301 = &v202[v224];
      uint64_t v225 = &v203[v224];
      swift_bridgeObjectRetain();
      if (v304(v225, 1, v305))
      {
        uint64_t v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v301, v225, *(void *)(*(void *)(v226 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v301, v225, v305);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v303 + 56))(v301, 0, 1, v305);
        double v200 = v311;
      }
      uint64_t v241 = v298[6];
      uint64_t v242 = &v202[v241];
      int v243 = &v203[v241];
      uint64_t v244 = *((void *)v243 + 1);
      *(void *)uint64_t v242 = *(void *)v243;
      *((void *)v242 + 1) = v244;
      uint64_t v245 = v298[7];
      int v246 = &v202[v245];
      uint64_t v247 = &v203[v245];
      uint64_t v248 = *((void *)v247 + 1);
      *(void *)int v246 = *(void *)v247;
      *((void *)v246 + 1) = v248;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v202[*(int *)(v249 + 48)] = v203[*(int *)(v249 + 48)];
      swift_storeEnumTagMultiPayload();
      a1 = v323;
      uint64_t v146 = v307;
      uint64_t v250 = v302;
      uint64_t v186 = v314;
LABEL_66:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v250 + 56))(v200, 0, 1, v181);
LABEL_67:
      char v3 = v324;
      *((unsigned char *)a1 + v21[31]) = *((unsigned char *)v324 + v21[31]);
      *(void *)((char *)a1 + v21[32]) = *(void *)((char *)v324 + v21[32]);
      uint64_t v260 = v21[33];
      uint64_t v261 = (char *)a1 + v260;
      uint64_t v262 = (char *)v324 + v260;
      swift_bridgeObjectRetain();
      if (v146(v262, 1, v185))
      {
        uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v261, v262, *(void *)(*(void *)(v263 - 8) + 64));
      }
      else
      {
        v186(v261, v262, v185);
        ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v261, 0, 1, v185);
      }
      uint64_t v264 = v21[34];
      uint64_t v265 = (char *)a1 + v264;
      uint64_t v266 = (uint64_t)v324 + v264;
      *(_WORD *)uint64_t v265 = *(_WORD *)v266;
      v265[2] = *(unsigned char *)(v266 + 2);
      uint64_t v267 = v21[35];
      v268 = (char *)a1 + v267;
      uint64_t v269 = (uint64_t)v324 + v267;
      *(_DWORD *)(v268 + 7) = *(_DWORD *)(v269 + 7);
      *(void *)v268 = *(void *)v269;
      goto LABEL_71;
    case 2u:
      uint64_t v39 = sub_251F34DA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, v3, v39);
      unint64_t v40 = (int *)type metadata accessor for StaticServiceGroup();
      uint64_t v41 = v40[5];
      uint64_t v42 = (void *)((char *)a1 + v41);
      uint64_t v43 = (void *)((char *)v3 + v41);
      uint64_t v45 = *v43;
      uint64_t v44 = v43[1];
      *uint64_t v42 = v45;
      v42[1] = v44;
      *((unsigned char *)a1 + v40[6]) = *((unsigned char *)v3 + v40[6]);
      *((unsigned char *)a1 + v40[7]) = *((unsigned char *)v3 + v40[7]);
      *(void *)((char *)a1 + v40[8]) = *(void *)((char *)v3 + v40[8]);
      uint64_t v46 = v40[9];
      int v47 = (void *)((char *)a1 + v46);
      int v48 = (void *)((char *)v3 + v46);
      uint64_t v49 = v48[1];
      void *v47 = *v48;
      v47[1] = v49;
      *((unsigned char *)a1 + v40[10]) = *((unsigned char *)v3 + v40[10]);
      *(void *)((char *)a1 + v40[11]) = *(void *)((char *)v3 + v40[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_71;
    case 3u:
      uint64_t v50 = sub_251F34DA0();
      __dstd = *(void **)(*(void *)(v50 - 8) + 16);
      ((void (*)(void *, void *, uint64_t))__dstd)(a1, v3, v50);
      int v51 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v52 = v51[5];
      BOOL v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)v3 + v52;
      *(void *)BOOL v53 = *(void *)v54;
      *((_WORD *)v53 + 4) = *((_WORD *)v54 + 4);
      uint64_t v55 = v51[6];
      int v56 = (void *)((char *)a1 + v55);
      uint64_t v57 = (void *)((char *)v3 + v55);
      uint64_t v58 = v57[1];
      *int v56 = *v57;
      v56[1] = v58;
      *(void *)((char *)a1 + v51[7]) = *(void *)((char *)v3 + v51[7]);
      *(void *)((char *)a1 + v51[8]) = *(void *)((char *)v3 + v51[8]);
      *(void *)((char *)a1 + v51[9]) = *(void *)((char *)v3 + v51[9]);
      *(void *)((char *)a1 + v51[10]) = *(void *)((char *)v3 + v51[10]);
      uint64_t v59 = v51[11];
      uint64_t v60 = (char *)a1 + v59;
      char v61 = a1;
      uint64_t v62 = (char *)v3 + v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ((void (*)(char *, char *, uint64_t))__dstd)(v60, v62, v50);
      *(void *)((char *)v61 + v51[12]) = *(void *)((char *)v3 + v51[12]);
      uint64_t v63 = v51[13];
      uint64_t v64 = (char *)v61 + v63;
      uint64_t v65 = (char *)v3 + v63;
      uint64_t v66 = *(void *)((char *)v3 + v63);
      uint64_t v67 = *((void *)v65 + 1);
      *(void *)uint64_t v64 = v66;
      *((void *)v64 + 1) = v67;
      uint64_t v68 = *((void *)v65 + 3);
      *((void *)v64 + 2) = *((void *)v65 + 2);
      *((void *)v64 + 3) = v68;
      uint64_t v69 = *((void *)v65 + 5);
      *((void *)v64 + 4) = *((void *)v65 + 4);
      *((void *)v64 + 5) = v69;
      *((_DWORD *)v64 + 12) = *((_DWORD *)v65 + 12);
      uint64_t v70 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      __dstb = &v64[v70];
      uint64_t v71 = &v65[v70];
      uint64_t v72 = sub_251F34D20();
      uint64_t v73 = *(void *)(v72 - 8);
      uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v74(v71, 1, v72))
      {
        uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dstb, v71, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))(__dstb, v71, v72);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(__dstb, 0, 1, v72);
      }
      a1 = v323;
      uint64_t v107 = v51[14];
      BOOL v108 = (char *)v323 + v107;
      char v3 = v324;
      uint64_t v109 = (uint64_t)v324 + v107;
      *(_WORD *)BOOL v108 = *(_WORD *)v109;
      uint64_t v108[2] = *(unsigned char *)(v109 + 2);
      *((unsigned char *)v323 + v51[15]) = *((unsigned char *)v324 + v51[15]);
      goto LABEL_71;
    default:
      uint64_t v7 = sub_251F34DA0();
      uint64_t v312 = *(void *)(v7 - 8);
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v312 + 16);
      v8((char *)a1, (char *)v3, v7);
      uint64_t v9 = (int *)type metadata accessor for StaticAccessory(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (void *)((char *)a1 + v10);
      uint64_t v12 = (void *)((char *)v3 + v10);
      uint64_t v13 = v3;
      uint64_t v14 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v14;
      uint64_t v15 = v9[6];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)v13 + v15;
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      swift_bridgeObjectRetain();
      __dst = v8;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v8(v16, v17, v7);
      }
      else
      {
        uint64_t v76 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v76;
        swift_bridgeObjectRetain();
      }
      uint64_t v77 = v324;
      swift_storeEnumTagMultiPayload();
      uint64_t v78 = v9[7];
      uint64_t v79 = (char *)a1 + v78;
      uint64_t v80 = (char *)v324 + v78;
      uint64_t v81 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v82 = *((void *)v81 - 1);
      uint64_t v315 = v7;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v82 + 48))(v80, 1, v81))
      {
        uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        __dst(v79, v80, v7);
        uint64_t v110 = v81[5];
        Swift::Int_optional v111 = &v79[v110];
        uint64_t v112 = &v80[v110];
        uint64_t v113 = *((void *)v112 + 1);
        *(void *)Swift::Int_optional v111 = *(void *)v112;
        *((void *)v111 + 1) = v113;
        uint64_t v114 = v81[6];
        BOOL v115 = &v79[v114];
        uint64_t v116 = &v80[v114];
        uint64_t v117 = *((void *)v116 + 1);
        *(void *)BOOL v115 = *(void *)v116;
        *((void *)v115 + 1) = v117;
        uint64_t v118 = v81[7];
        uint64_t v119 = &v79[v118];
        uint64_t v120 = &v80[v118];
        uint64_t v121 = *((void *)v120 + 1);
        *(void *)uint64_t v119 = *(void *)v120;
        *((void *)v119 + 1) = v121;
        uint64_t v122 = v81[8];
        uint64_t v123 = &v79[v122];
        uint64_t v124 = &v80[v122];
        uint64_t v125 = *((void *)v124 + 1);
        *(void *)uint64_t v123 = *(void *)v124;
        *((void *)v123 + 1) = v125;
        v79[v81[9]] = v80[v81[9]];
        v79[v81[10]] = v80[v81[10]];
        v79[v81[11]] = v80[v81[11]];
        v79[v81[12]] = v80[v81[12]];
        unint64_t v126 = *(void (**)(char *, void, uint64_t, int *))(v82 + 56);
        swift_bridgeObjectRetain();
        uint64_t v77 = v324;
        swift_bridgeObjectRetain();
        a1 = v323;
        swift_bridgeObjectRetain();
        uint64_t v7 = v315;
        swift_bridgeObjectRetain();
        v126(v79, 0, 1, v81);
      }
      uint64_t v127 = v9[8];
      uint64_t v128 = (char *)a1 + v127;
      uint64_t v129 = (char *)v77 + v127;
      uint64_t v130 = sub_251F34D20();
      uint64_t v131 = *(void *)(v130 - 8);
      v309 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
      v310 = (void *)v130;
      uint64_t v306 = v131;
      if (v309(v129, 1, v130))
      {
        uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v128, v129, *(void *)(*(void *)(v132 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v128, v129, v130);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
      }
      uint64_t v148 = v9[9];
      uint64_t v149 = (char *)a1 + v148;
      uint64_t v150 = (uint64_t)v77 + v148;
      *(void *)uint64_t v149 = *(void *)v150;
      v149[8] = *(unsigned char *)(v150 + 8);
      *((unsigned char *)a1 + v9[10]) = *((unsigned char *)v77 + v9[10]);
      __dst((char *)a1 + v9[11], (char *)v77 + v9[11], v7);
      *(void *)((char *)a1 + v9[12]) = *(void *)((char *)v77 + v9[12]);
      uint64_t v151 = v9[13];
      uint64_t v152 = (void *)((char *)a1 + v151);
      unint64_t v153 = (void *)((char *)v77 + v151);
      uint64_t v154 = v153[1];
      *uint64_t v152 = *v153;
      v152[1] = v154;
      *((unsigned char *)a1 + v9[14]) = *((unsigned char *)v77 + v9[14]);
      *((unsigned char *)a1 + v9[15]) = *((unsigned char *)v77 + v9[15]);
      *((unsigned char *)a1 + v9[16]) = *((unsigned char *)v77 + v9[16]);
      *((unsigned char *)a1 + v9[17]) = *((unsigned char *)v77 + v9[17]);
      *((unsigned char *)a1 + v9[18]) = *((unsigned char *)v77 + v9[18]);
      *(void *)((char *)a1 + v9[19]) = *(void *)((char *)v77 + v9[19]);
      *(void *)((char *)a1 + v9[20]) = *(void *)((char *)v77 + v9[20]);
      uint64_t v155 = v9[21];
      uint64_t v156 = (char *)a1 + v155;
      uint64_t v157 = (char *)v77 + v155;
      uint64_t v158 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v312 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v158(v157, 1, v315))
      {
        uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v156, v157, *(void *)(*(void *)(v159 - 8) + 64));
      }
      else
      {
        __dst(v156, v157, v315);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v312 + 56))(v156, 0, 1, v315);
      }
      *(_WORD *)((char *)v323 + v9[22]) = *(_WORD *)((char *)v324 + v9[22]);
      uint64_t v164 = v9[23];
      char v165 = (void *)((char *)v323 + v164);
      char v166 = (void *)((char *)v324 + v164);
      uint64_t v167 = v166[1];
      *char v165 = *v166;
      v165[1] = v167;
      *(void *)((char *)v323 + v9[24]) = *(void *)((char *)v324 + v9[24]);
      *((unsigned char *)v323 + v9[25]) = *((unsigned char *)v324 + v9[25]);
      *((unsigned char *)v323 + v9[26]) = *((unsigned char *)v324 + v9[26]);
      *((unsigned char *)v323 + v9[27]) = *((unsigned char *)v324 + v9[27]);
      uint64_t v168 = v9[28];
      uint64_t v169 = (char *)v323 + v168;
      uint64_t v170 = (char *)v324 + v168;
      uint64_t v171 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v172 = *(void *)(v171 - 8);
      uint64_t v173 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v173(v170, 1, v171))
      {
        uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v169, v170, *(void *)(*(void *)(v174 - 8) + 64));
        char v6 = v322;
        a1 = v323;
        goto LABEL_59;
      }
      __dst(v169, v170, v315);
      uint64_t v187 = *(int *)(v171 + 20);
      id v188 = &v169[v187];
      uint64_t v189 = &v170[v187];
      uint64_t v313 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v190 = swift_getEnumCaseMultiPayload();
      char v6 = v322;
      if (v190 == 2)
      {
        uint64_t v215 = *((void *)v189 + 1);
        *(void *)id v188 = *(void *)v189;
        *((void *)v188 + 1) = v215;
        uint64_t v216 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v217 = *(int *)(v216 + 20);
        uint64_t v316 = v216;
        __dstc = &v188[v217];
        uint64_t v218 = &v189[v217];
        swift_bridgeObjectRetain();
        if (v309(v218, 1, (uint64_t)v310)) {
          goto LABEL_48;
        }
        goto LABEL_55;
      }
      if (v190 == 1)
      {
        uint64_t v219 = *((void *)v189 + 1);
        *(void *)id v188 = *(void *)v189;
        *((void *)v188 + 1) = v219;
        uint64_t v220 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v221 = *(int *)(v220 + 20);
        uint64_t v316 = v220;
        __dstc = &v188[v221];
        uint64_t v218 = &v189[v221];
        swift_bridgeObjectRetain();
        if (v309(v218, 1, (uint64_t)v310))
        {
LABEL_48:
          uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dstc, v218, *(void *)(*(void *)(v222 - 8) + 64));
LABEL_56:
          uint64_t v232 = *(int *)(v316 + 24);
          uint64_t v233 = &v188[v232];
          uint64_t v234 = &v189[v232];
          uint64_t v235 = *((void *)v234 + 1);
          *(void *)uint64_t v233 = *(void *)v234;
          *((void *)v233 + 1) = v235;
          uint64_t v236 = *(int *)(v316 + 28);
          uint64_t v237 = &v188[v236];
          int v238 = &v189[v236];
          uint64_t v239 = *((void *)v238 + 1);
          *(void *)uint64_t v237 = *(void *)v238;
          *((void *)v237 + 1) = v239;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v188[*(int *)(v240 + 48)] = v189[*(int *)(v240 + 48)];
          goto LABEL_57;
        }
LABEL_55:
        (*(void (**)(char *, char *, void *))(v306 + 16))(__dstc, v218, v310);
        (*(void (**)(char *, void, uint64_t, void *))(v306 + 56))(__dstc, 0, 1, v310);
        goto LABEL_56;
      }
      if (v190)
      {
        memcpy(v188, v189, *(void *)(*(void *)(v313 - 8) + 64));
        goto LABEL_58;
      }
      __dst(v188, v189, v315);
      uint64_t v191 = (int *)type metadata accessor for StaticHH2Update(0);
      v188[v191[5]] = v189[v191[5]];
      uint64_t v192 = v191[6];
      uint64_t v193 = &v188[v192];
      uint64_t v194 = &v189[v192];
      uint64_t v196 = *(void *)v194;
      uint64_t v195 = *((void *)v194 + 1);
      *(void *)uint64_t v193 = v196;
      *((void *)v193 + 1) = v195;
      uint64_t v197 = v191[7];
      uint64_t v198 = &v188[v197];
      unint64_t v199 = &v189[v197];
      v198[8] = v199[8];
      *(void *)uint64_t v198 = *(void *)v199;
      swift_bridgeObjectRetain();
LABEL_57:
      swift_storeEnumTagMultiPayload();
LABEL_58:
      a1 = v323;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v169, 0, 1, v171);
LABEL_59:
      char v3 = v324;
      *((unsigned char *)a1 + v9[29]) = *((unsigned char *)v324 + v9[29]);
      *((unsigned char *)a1 + v9[30]) = *((unsigned char *)v324 + v9[30]);
      *(void *)((char *)a1 + v9[31]) = *(void *)((char *)v324 + v9[31]);
      swift_bridgeObjectRetain();
LABEL_71:
      swift_storeEnumTagMultiPayload();
      uint64_t v270 = v6[5];
      uint64_t v271 = v6[6];
      v272 = (void *)((char *)a1 + v270);
      uint64_t v273 = (void *)((char *)v3 + v270);
      uint64_t v274 = v273[1];
      void *v272 = *v273;
      v272[1] = v274;
      uint64_t v275 = (char *)a1 + v271;
      uint64_t v276 = (char *)v3 + v271;
      uint64_t v277 = (int *)type metadata accessor for StaticRoom(0);
      uint64_t v278 = *((void *)v277 - 1);
      uint64_t v279 = *(unsigned int (**)(char *, uint64_t, int *))(v278 + 48);
      swift_bridgeObjectRetain();
      if (v279(v276, 1, v277))
      {
        uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
        memcpy(v275, v276, *(void *)(*(void *)(v280 - 8) + 64));
      }
      else
      {
        uint64_t v281 = sub_251F34DA0();
        uint64_t v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16);
        v282(v275, v276, v281);
        uint64_t v283 = v277[5];
        uint64_t v284 = &v275[v283];
        uint64_t v285 = &v276[v283];
        uint64_t v286 = *((void *)v285 + 1);
        *(void *)uint64_t v284 = *(void *)v285;
        *((void *)v284 + 1) = v286;
        v275[v277[6]] = v276[v277[6]];
        *(void *)&v275[v277[7]] = *(void *)&v276[v277[7]];
        uint64_t v287 = v277[8];
        uint64_t v288 = &v275[v287];
        uint64_t v289 = &v276[v287];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v282(v288, v289, v281);
        *(void *)&v275[v277[9]] = *(void *)&v276[v277[9]];
        *(void *)&v275[v277[10]] = *(void *)&v276[v277[10]];
        *(void *)&v275[v277[11]] = *(void *)&v276[v277[11]];
        *(void *)&v275[v277[12]] = *(void *)&v276[v277[12]];
        *(void *)&v275[v277[13]] = *(void *)&v276[v277[13]];
        *(void *)&v275[v277[14]] = *(void *)&v276[v277[14]];
        *(void *)&v275[v277[15]] = *(void *)&v276[v277[15]];
        *(void *)&v275[v277[16]] = *(void *)&v276[v277[16]];
        *(void *)&v275[v277[17]] = *(void *)&v276[v277[17]];
        *(void *)&v275[v277[18]] = *(void *)&v276[v277[18]];
        uint64_t v290 = *(void (**)(char *, void, uint64_t, int *))(v278 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v6 = v322;
        swift_bridgeObjectRetain();
        char v3 = v324;
        swift_bridgeObjectRetain();
        a1 = v323;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v290(v275, 0, 1, v277);
      }
      uint64_t v291 = v6[7];
      uint64_t v292 = v6[8];
      uint64_t v293 = (void *)((char *)a1 + v291);
      uint64_t v294 = (void *)((char *)v3 + v291);
      uint64_t v295 = v294[1];
      *uint64_t v293 = *v294;
      v293[1] = v295;
      *((unsigned char *)a1 + v292) = *((unsigned char *)v3 + v292);
      uint64_t v296 = v6[10];
      *((unsigned char *)a1 + v6[9]) = *((unsigned char *)v3 + v6[9]);
      *((unsigned char *)a1 + v296) = *((unsigned char *)v3 + v296);
      swift_bridgeObjectRetain();
      return a1;
  }
}

uint64_t destroy for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2)
{
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = sub_251F34DA0();
      uint64_t v5 = *(void *)(v4 - 8);
      char v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v6(a1, v4);
      uint64_t v7 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + v7[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        v6(v8, v4);
      }
      else {
        swift_bridgeObjectRelease();
      }
      uint64_t v33 = a1 + v7[7];
      uint64_t v34 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34))
      {
        v6(v33, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v35 = a1 + v7[8];
      uint64_t v36 = sub_251F34D20();
      uint64_t v54 = *(void *)(v36 - 8);
      uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
      if (!v52(v35, 1, v36)) {
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v35, v36);
      }
      v6(a1 + v7[11], v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = a1 + v7[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v37, 1, v4)) {
        v6(v37, v4);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = a1 + v7[28];
      uint64_t v39 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39)) {
        goto LABEL_42;
      }
      v6(v38, v4);
      uint64_t v40 = v38 + *(int *)(v39 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v43 = v40 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v52(v43, 1, v36)) {
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v43, v36);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_42;
        }
        v6(v40, v4);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 1u:
      uint64_t v9 = sub_251F34DA0();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v11(a1, v9);
      uint64_t v12 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v11(a1 + v12[11], v9);
      uint64_t v13 = a1 + v12[13];
      uint64_t v14 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v11(v13, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v15 = a1 + v12[14];
      uint64_t v16 = sub_251F34D20();
      uint64_t v17 = *(void *)(v16 - 8);
      int v51 = *(unsigned int (**)(void))(v17 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v51)(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      uint64_t v50 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = a1 + v12[25];
      uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v19(v18, 1, v9)) {
        v11(v18, v9);
      }
      uint64_t v20 = a1 + v12[26];
      if (!v19(v20, 1, v9)) {
        v11(v20, v9);
      }
      BOOL v53 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = a1 + v12[30];
      uint64_t v22 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22)) {
        goto LABEL_36;
      }
      v53(v21, v9);
      uint64_t v23 = v21 + *(int *)(v22 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v24 = swift_getEnumCaseMultiPayload();
      if (v24 == 2 || v24 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v49 = v23 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v51()) {
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v16);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v24) {
          goto LABEL_36;
        }
        v53(v23, v9);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v42 = a1 + v12[33];
      if (!v19(v42, 1, v9)) {
        v53(v42, v9);
      }
LABEL_43:
      swift_bridgeObjectRelease();
      uint64_t v44 = a1 + *(int *)(a2 + 24);
      uint64_t v45 = type metadata accessor for StaticRoom(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v44, 1, v45))
      {
        uint64_t v46 = sub_251F34DA0();
        int v47 = *(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8);
        v47(v44, v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v47(v44 + *(int *)(v45 + 32), v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    case 2u:
      uint64_t v25 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      goto LABEL_43;
    case 3u:
      uint64_t v26 = sub_251F34DA0();
      char v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
      v27(a1, v26);
      uint64_t v28 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27(a1 + *(int *)(v28 + 44), v26);
      swift_bridgeObjectRelease();
      uint64_t v29 = a1 + *(int *)(v28 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = v29 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v31 = sub_251F34D20();
      uint64_t v32 = *(void *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
      goto LABEL_43;
    default:
      goto LABEL_43;
  }
}

uint64_t initializeWithCopy for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v311 = a1;
  uint64_t v312 = a2;
  v310 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = sub_251F34DA0();
      uint64_t v301 = *(void *)(v17 - 8);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v301 + 16);
      v18(a1, a2, v17);
      uint64_t v19 = (int *)type metadata accessor for StaticService();
      uint64_t v20 = v19[5];
      uint64_t v21 = (void *)(a1 + v20);
      uint64_t v22 = (void *)(a2 + v20);
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      *(unsigned char *)(a1 + v19[6]) = *(unsigned char *)(a2 + v19[6]);
      *(unsigned char *)(a1 + v19[7]) = *(unsigned char *)(a2 + v19[7]);
      *(unsigned char *)(a1 + v19[8]) = *(unsigned char *)(a2 + v19[8]);
      *(unsigned char *)(a1 + v19[9]) = *(unsigned char *)(a2 + v19[9]);
      *(unsigned char *)(a1 + v19[10]) = *(unsigned char *)(a2 + v19[10]);
      uint64_t v24 = v19[11];
      uint64_t v25 = a1 + v24;
      uint64_t v26 = a2 + v24;
      swift_bridgeObjectRetain();
      v18(v25, v26, v17);
      uint64_t v27 = v19[12];
      uint64_t v28 = a1 + v27;
      uint64_t v29 = a2 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
      uint64_t v30 = v19[13];
      uint64_t v31 = (char *)(a1 + v30);
      uint64_t v32 = (char *)(a2 + v30);
      uint64_t v33 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v34 = *((void *)v33 - 1);
      Swift::Int_optional v304 = (void (*)(void *, const void *, void *))v18;
      __dst = (void *)v17;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v18((uint64_t)v31, (uint64_t)v32, v17);
        uint64_t v80 = v33[5];
        uint64_t v81 = &v31[v80];
        uint64_t v82 = &v32[v80];
        uint64_t v83 = *((void *)v82 + 1);
        *(void *)uint64_t v81 = *(void *)v82;
        *((void *)v81 + 1) = v83;
        uint64_t v84 = v33[6];
        char v85 = &v31[v84];
        uint64_t v86 = &v32[v84];
        uint64_t v87 = *((void *)v86 + 1);
        *(void *)char v85 = *(void *)v86;
        *((void *)v85 + 1) = v87;
        uint64_t v88 = v33[7];
        uint64_t v89 = &v31[v88];
        uint64_t v90 = &v32[v88];
        uint64_t v91 = *((void *)v90 + 1);
        *(void *)uint64_t v89 = *(void *)v90;
        *((void *)v89 + 1) = v91;
        uint64_t v92 = v33[8];
        uint64_t v93 = &v31[v92];
        uint64_t v94 = &v32[v92];
        uint64_t v95 = *((void *)v94 + 1);
        *(void *)uint64_t v93 = *(void *)v94;
        *((void *)v93 + 1) = v95;
        v31[v33[9]] = v32[v33[9]];
        v31[v33[10]] = v32[v33[10]];
        v31[v33[11]] = v32[v33[11]];
        v31[v33[12]] = v32[v33[12]];
        uint64_t v96 = *(void (**)(char *, void, uint64_t, int *))(v34 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a2 = v312;
        swift_bridgeObjectRetain();
        a1 = v311;
        swift_bridgeObjectRetain();
        v96(v31, 0, 1, v33);
      }
      uint64_t v97 = v19[14];
      BOOL v98 = (void *)(a1 + v97);
      uint64_t v99 = (const void *)(a2 + v97);
      uint64_t v100 = sub_251F34D20();
      uint64_t v101 = *(void *)(v100 - 8);
      uint64_t v296 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v101 + 48);
      uint64_t v297 = v100;
      uint64_t v295 = v101;
      if (v296(v99, 1, v100))
      {
        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v101 + 16))(v98, v99, v100);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
      }
      *(void *)(a1 + v19[15]) = *(void *)(a2 + v19[15]);
      uint64_t v129 = v19[16];
      uint64_t v130 = (void *)(a1 + v129);
      uint64_t v131 = (void *)(a2 + v129);
      uint64_t v132 = v131[1];
      *uint64_t v130 = *v131;
      v130[1] = v132;
      *(unsigned char *)(a1 + v19[17]) = *(unsigned char *)(a2 + v19[17]);
      *(unsigned char *)(a1 + v19[18]) = *(unsigned char *)(a2 + v19[18]);
      *(unsigned char *)(a1 + v19[19]) = *(unsigned char *)(a2 + v19[19]);
      *(unsigned char *)(a1 + v19[20]) = *(unsigned char *)(a2 + v19[20]);
      uint64_t v133 = v19[21];
      uint64_t v134 = (void *)(a1 + v133);
      unint64_t v135 = (void *)(a2 + v133);
      uint64_t v136 = a2;
      uint64_t v137 = v135[1];
      *uint64_t v134 = *v135;
      v134[1] = v137;
      *(unsigned char *)(a1 + v19[22]) = *(unsigned char *)(v136 + v19[22]);
      *(unsigned char *)(a1 + v19[23]) = *(unsigned char *)(v136 + v19[23]);
      *(unsigned char *)(a1 + v19[24]) = *(unsigned char *)(v136 + v19[24]);
      uint64_t v138 = v19[25];
      unint64_t v139 = (void *)(a1 + v138);
      uint64_t v140 = (const void *)(v136 + v138);
      uint64_t v141 = *(unsigned int (**)(const void *, uint64_t, void *))(v301 + 48);
      swift_bridgeObjectRetain();
      uint64_t v142 = v141;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v141(v140, 1, __dst))
      {
        uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        v304(v139, v140, __dst);
        (*(void (**)(void *, void, uint64_t, void *))(v301 + 56))(v139, 0, 1, __dst);
      }
      uint64_t v156 = v19[26];
      uint64_t v157 = (void *)(a1 + v156);
      uint64_t v158 = (const void *)(v312 + v156);
      if (v141((const void *)(v312 + v156), 1, __dst))
      {
        uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v157, v158, *(void *)(*(void *)(v159 - 8) + 64));
      }
      else
      {
        v304(v157, v158, __dst);
        (*(void (**)(void *, void, uint64_t, void *))(v301 + 56))(v157, 0, 1, __dst);
      }
      *(void *)(a1 + v19[27]) = *(void *)(v312 + v19[27]);
      *(void *)(a1 + v19[28]) = *(void *)(v312 + v19[28]);
      uint64_t v171 = v19[29];
      uint64_t v172 = (void *)(a1 + v171);
      uint64_t v173 = (void *)(v312 + v171);
      uint64_t v174 = v173[1];
      *uint64_t v172 = *v173;
      v172[1] = v174;
      uint64_t v175 = v19[30];
      uint64_t v300 = (char *)(a1 + v175);
      unint64_t v176 = (char *)(v312 + v175);
      uint64_t v177 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v178 = *(void *)(v177 - 8);
      uint64_t v179 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v179(v176, 1, v177))
      {
        uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v300, v176, *(void *)(*(void *)(v180 - 8) + 64));
        a1 = v311;
        a2 = v312;
        a3 = v310;
        uint64_t v181 = __dst;
LABEL_64:
        *(unsigned char *)(a1 + v19[31]) = *(unsigned char *)(a2 + v19[31]);
        *(void *)(a1 + v19[32]) = *(void *)(a2 + v19[32]);
        uint64_t v254 = v19[33];
        uint64_t v255 = (void *)(a1 + v254);
        int v256 = (const void *)(a2 + v254);
        swift_bridgeObjectRetain();
        if (v142(v256, 1, v181))
        {
          uint64_t v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v255, v256, *(void *)(*(void *)(v257 - 8) + 64));
        }
        else
        {
          v304(v255, v256, v181);
          (*(void (**)(void *, void, uint64_t, void *))(v301 + 56))(v255, 0, 1, v181);
        }
        uint64_t v258 = v19[34];
        uint64_t v259 = a1 + v258;
        uint64_t v260 = a2 + v258;
        *(_WORD *)uint64_t v259 = *(_WORD *)v260;
        *(unsigned char *)(v259 + 2) = *(unsigned char *)(v260 + 2);
        uint64_t v261 = v19[35];
        uint64_t v262 = a1 + v261;
        uint64_t v263 = a2 + v261;
        *(_DWORD *)(v262 + 7) = *(_DWORD *)(v263 + 7);
        *(void *)uint64_t v262 = *(void *)v263;
        goto LABEL_68;
      }
      uint64_t v293 = v178;
      uint64_t v181 = __dst;
      v304(v300, v176, __dst);
      uint64_t v294 = v177;
      uint64_t v196 = *(int *)(v177 + 20);
      uint64_t v197 = &v300[v196];
      uint64_t v198 = &v176[v196];
      uint64_t v199 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      a3 = v310;
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v216 = *((void *)v198 + 1);
        *(void *)uint64_t v197 = *(void *)v198;
        *((void *)v197 + 1) = v216;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v218 = updated[5];
        uint64_t v219 = &v197[v218];
        uint64_t v220 = &v198[v218];
        swift_bridgeObjectRetain();
        if (v296(v220, 1, v297))
        {
          uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v219, v220, *(void *)(*(void *)(v221 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v219, v220, v297);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v219, 0, 1, v297);
        }
        a2 = v312;
        uint64_t v236 = updated[6];
        uint64_t v237 = &v197[v236];
        int v238 = &v198[v236];
        uint64_t v239 = *((void *)v238 + 1);
        *(void *)uint64_t v237 = *(void *)v238;
        *((void *)v237 + 1) = v239;
        uint64_t v240 = updated[7];
        uint64_t v241 = &v197[v240];
        uint64_t v242 = &v198[v240];
        uint64_t v243 = *((void *)v242 + 1);
        *(void *)uint64_t v241 = *(void *)v242;
        *((void *)v241 + 1) = v243;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v197[*(int *)(v244 + 48)] = v198[*(int *)(v244 + 48)];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v222 = *((void *)v198 + 1);
        *(void *)uint64_t v197 = *(void *)v198;
        *((void *)v197 + 1) = v222;
        uint64_t v223 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v224 = v223[5];
        uint64_t v292 = &v197[v224];
        uint64_t v225 = &v198[v224];
        swift_bridgeObjectRetain();
        a2 = v312;
        if (v296(v225, 1, v297))
        {
          uint64_t v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v292, v225, *(void *)(*(void *)(v226 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v292, v225, v297);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v297);
        }
        uint64_t v245 = v223[6];
        int v246 = &v197[v245];
        uint64_t v247 = &v198[v245];
        uint64_t v248 = *((void *)v247 + 1);
        *(void *)int v246 = *(void *)v247;
        *((void *)v246 + 1) = v248;
        uint64_t v249 = v223[7];
        uint64_t v250 = &v197[v249];
        uint64_t v251 = &v198[v249];
        uint64_t v252 = *((void *)v251 + 1);
        *(void *)uint64_t v250 = *(void *)v251;
        *((void *)v250 + 1) = v252;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v197[*(int *)(v253 + 48)] = v198[*(int *)(v253 + 48)];
      }
      else
      {
        a2 = v312;
        if (EnumCaseMultiPayload)
        {
          memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
LABEL_63:
          a1 = v311;
          uint64_t v142 = v141;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v293 + 56))(v300, 0, 1, v294);
          goto LABEL_64;
        }
        v304(v197, v198, __dst);
        uint64_t v201 = (int *)type metadata accessor for StaticHH2Update(0);
        v197[v201[5]] = v198[v201[5]];
        uint64_t v202 = v201[6];
        uint64_t v203 = &v197[v202];
        uint64_t v204 = &v198[v202];
        uint64_t v206 = *(void *)v204;
        uint64_t v205 = *((void *)v204 + 1);
        *(void *)uint64_t v203 = v206;
        *((void *)v203 + 1) = v205;
        uint64_t v207 = v201[7];
        uint64_t v208 = &v197[v207];
        uint64_t v209 = &v198[v207];
        v208[8] = v209[8];
        *(void *)uint64_t v208 = *(void *)v209;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_63;
    case 2u:
      uint64_t v36 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
      uint64_t v37 = (int *)type metadata accessor for StaticServiceGroup();
      uint64_t v38 = v37[5];
      uint64_t v39 = (void *)(a1 + v38);
      uint64_t v40 = (uint64_t *)(a2 + v38);
      uint64_t v42 = *v40;
      uint64_t v41 = v40[1];
      void *v39 = v42;
      v39[1] = v41;
      *(unsigned char *)(a1 + v37[6]) = *(unsigned char *)(a2 + v37[6]);
      *(unsigned char *)(a1 + v37[7]) = *(unsigned char *)(a2 + v37[7]);
      *(void *)(a1 + v37[8]) = *(void *)(a2 + v37[8]);
      uint64_t v43 = v37[9];
      uint64_t v44 = (void *)(a1 + v43);
      uint64_t v45 = (void *)(a2 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      *(unsigned char *)(a1 + v37[10]) = *(unsigned char *)(a2 + v37[10]);
      *(void *)(a1 + v37[11]) = *(void *)(a2 + v37[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_68;
    case 3u:
      uint64_t v47 = sub_251F34DA0();
      __dstb = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
      __dstb(a1, a2, v47);
      int v48 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v49 = v48[5];
      uint64_t v50 = a1 + v49;
      uint64_t v51 = a2 + v49;
      *(void *)uint64_t v50 = *(void *)v51;
      *(_WORD *)(v50 + 8) = *(_WORD *)(v51 + 8);
      uint64_t v52 = v48[6];
      BOOL v53 = (void *)(a1 + v52);
      uint64_t v54 = (void *)(a2 + v52);
      uint64_t v55 = v54[1];
      *BOOL v53 = *v54;
      v53[1] = v55;
      *(void *)(a1 + v48[7]) = *(void *)(a2 + v48[7]);
      *(void *)(a1 + v48[8]) = *(void *)(a2 + v48[8]);
      *(void *)(a1 + v48[9]) = *(void *)(a2 + v48[9]);
      *(void *)(a1 + v48[10]) = *(void *)(a2 + v48[10]);
      uint64_t v56 = v48[11];
      uint64_t v57 = a1 + v56;
      uint64_t v58 = a2 + v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dstb(v57, v58, v47);
      *(void *)(a1 + v48[12]) = *(void *)(a2 + v48[12]);
      uint64_t v59 = v48[13];
      uint64_t v60 = a1 + v59;
      uint64_t v61 = a2 + v59;
      uint64_t v62 = *(void *)(a2 + v59 + 8);
      *(void *)uint64_t v60 = *(void *)(a2 + v59);
      *(void *)(v60 + 8) = v62;
      uint64_t v63 = *(void *)(a2 + v59 + 16);
      uint64_t v64 = *(void *)(v61 + 24);
      *(void *)(v60 + 16) = v63;
      *(void *)(v60 + 24) = v64;
      uint64_t v65 = *(void *)(v61 + 40);
      *(void *)(v60 + 32) = *(void *)(v61 + 32);
      *(void *)(v60 + 40) = v65;
      *(_DWORD *)(v60 + 48) = *(_DWORD *)(v61 + 48);
      uint64_t v66 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      __dsta = (void *)(v60 + v66);
      uint64_t v67 = (const void *)(v61 + v66);
      uint64_t v68 = sub_251F34D20();
      uint64_t v69 = *(void *)(v68 - 8);
      uint64_t v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v70(v67, 1, v68))
      {
        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dsta, v67, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v69 + 16))(__dsta, v67, v68);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(__dsta, 0, 1, v68);
      }
      a3 = v310;
      a1 = v311;
      uint64_t v103 = v48[14];
      uint64_t v104 = v311 + v103;
      a2 = v312;
      uint64_t v105 = v312 + v103;
      *(_WORD *)uint64_t v104 = *(_WORD *)v105;
      *(unsigned char *)(v104 + 2) = *(unsigned char *)(v105 + 2);
      *(unsigned char *)(v311 + v48[15]) = *(unsigned char *)(v312 + v48[15]);
LABEL_68:
      swift_storeEnumTagMultiPayload();
      goto LABEL_69;
    default:
      uint64_t v6 = sub_251F34DA0();
      uint64_t v303 = *(void *)(v6 - 8);
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v303 + 16);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for StaticAccessory(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = (void *)(a1 + v9);
      uint64_t v11 = (void *)(a2 + v9);
      uint64_t v12 = a2;
      uint64_t v13 = v11[1];
      void *v10 = *v11;
      v10[1] = v13;
      uint64_t v14 = v8[6];
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (void *)(v12 + v14);
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v7((uint64_t)v15, (uint64_t)v16, v6);
      }
      else
      {
        uint64_t v72 = v16[1];
        *uint64_t v15 = *v16;
        v15[1] = v72;
        swift_bridgeObjectRetain();
      }
      uint64_t v73 = v312;
      swift_storeEnumTagMultiPayload();
      uint64_t v74 = v8[7];
      uint64_t v75 = (char *)(a1 + v74);
      uint64_t v76 = (char *)(v312 + v74);
      uint64_t v77 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v78 = *((void *)v77 - 1);
      uint64_t v305 = v7;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v78 + 48))(v76, 1, v77))
      {
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v75, (uint64_t)v76, v6);
        uint64_t v106 = v77[5];
        uint64_t v107 = &v75[v106];
        BOOL v108 = &v76[v106];
        uint64_t v109 = *((void *)v108 + 1);
        *(void *)uint64_t v107 = *(void *)v108;
        *((void *)v107 + 1) = v109;
        uint64_t v110 = v77[6];
        Swift::Int_optional v111 = &v75[v110];
        uint64_t v112 = &v76[v110];
        uint64_t v113 = *((void *)v112 + 1);
        *(void *)Swift::Int_optional v111 = *(void *)v112;
        *((void *)v111 + 1) = v113;
        uint64_t v114 = v77[7];
        BOOL v115 = &v75[v114];
        uint64_t v116 = &v76[v114];
        uint64_t v117 = *((void *)v116 + 1);
        *(void *)BOOL v115 = *(void *)v116;
        *((void *)v115 + 1) = v117;
        uint64_t v118 = v77[8];
        uint64_t v119 = &v75[v118];
        uint64_t v120 = &v76[v118];
        uint64_t v121 = *((void *)v120 + 1);
        *(void *)uint64_t v119 = *(void *)v120;
        *((void *)v119 + 1) = v121;
        v75[v77[9]] = v76[v77[9]];
        v75[v77[10]] = v76[v77[10]];
        v75[v77[11]] = v76[v77[11]];
        v75[v77[12]] = v76[v77[12]];
        uint64_t v122 = *(void (**)(char *, void, uint64_t, int *))(v78 + 56);
        swift_bridgeObjectRetain();
        uint64_t v73 = v312;
        swift_bridgeObjectRetain();
        a1 = v311;
        swift_bridgeObjectRetain();
        uint64_t v7 = v305;
        swift_bridgeObjectRetain();
        v122(v75, 0, 1, v77);
      }
      uint64_t v123 = v8[8];
      uint64_t v124 = (void *)(a1 + v123);
      uint64_t v125 = (const void *)(v73 + v123);
      uint64_t v126 = sub_251F34D20();
      uint64_t v127 = *(void *)(v126 - 8);
      uint64_t v302 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v127 + 48);
      uint64_t v299 = v127;
      if (v302(v125, 1, v126))
      {
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v127 + 16))(v124, v125, v126);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
      }
      uint64_t v144 = v8[9];
      uint64_t v145 = a1 + v144;
      uint64_t v146 = v73 + v144;
      *(void *)uint64_t v145 = *(void *)v146;
      *(unsigned char *)(v145 + 8) = *(unsigned char *)(v146 + 8);
      *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(v73 + v8[10]);
      v7(a1 + v8[11], v73 + v8[11], v6);
      *(void *)(a1 + v8[12]) = *(void *)(v73 + v8[12]);
      uint64_t v147 = v8[13];
      uint64_t v148 = (void *)(a1 + v147);
      uint64_t v149 = (void *)(v73 + v147);
      uint64_t v150 = v149[1];
      *uint64_t v148 = *v149;
      v148[1] = v150;
      *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(v73 + v8[14]);
      *(unsigned char *)(a1 + v8[15]) = *(unsigned char *)(v73 + v8[15]);
      *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(v73 + v8[16]);
      *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(v73 + v8[17]);
      *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(v73 + v8[18]);
      *(void *)(a1 + v8[19]) = *(void *)(v73 + v8[19]);
      *(void *)(a1 + v8[20]) = *(void *)(v73 + v8[20]);
      uint64_t v151 = v8[21];
      uint64_t v152 = (void *)(a1 + v151);
      unint64_t v153 = (const void *)(v73 + v151);
      uint64_t v154 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v303 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v154(v153, 1, v6))
      {
        uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
      }
      else
      {
        v305((uint64_t)v152, (uint64_t)v153, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v303 + 56))(v152, 0, 1, v6);
      }
      *(_WORD *)(v311 + v8[22]) = *(_WORD *)(v312 + v8[22]);
      uint64_t v160 = v8[23];
      uint64_t v161 = (void *)(v311 + v160);
      uint64_t v162 = (void *)(v312 + v160);
      uint64_t v163 = v162[1];
      *uint64_t v161 = *v162;
      v161[1] = v163;
      *(void *)(v311 + v8[24]) = *(void *)(v312 + v8[24]);
      *(unsigned char *)(v311 + v8[25]) = *(unsigned char *)(v312 + v8[25]);
      *(unsigned char *)(v311 + v8[26]) = *(unsigned char *)(v312 + v8[26]);
      *(unsigned char *)(v311 + v8[27]) = *(unsigned char *)(v312 + v8[27]);
      uint64_t v164 = v8[28];
      char v165 = (char *)(v311 + v164);
      char v166 = (char *)(v312 + v164);
      uint64_t v167 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v168 = *(void *)(v167 - 8);
      uint64_t v169 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v169(v166, 1, v167))
      {
        uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v165, v166, *(void *)(*(void *)(v170 - 8) + 64));
        a1 = v311;
        goto LABEL_57;
      }
      v305((uint64_t)v165, (uint64_t)v166, v6);
      uint64_t v182 = *(int *)(v167 + 20);
      unint64_t v183 = &v165[v182];
      uint64_t v184 = &v166[v182];
      uint64_t v185 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v186 = swift_getEnumCaseMultiPayload();
      if (v186 == 2)
      {
        uint64_t v210 = *((void *)v184 + 1);
        *(void *)unint64_t v183 = *(void *)v184;
        *((void *)v183 + 1) = v210;
        uint64_t v298 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v211 = v298[5];
        uint64_t v306 = &v183[v211];
        uint64_t v212 = &v184[v211];
        swift_bridgeObjectRetain();
        if (v302(v212, 1, v126)) {
          goto LABEL_46;
        }
        goto LABEL_53;
      }
      if (v186 == 1)
      {
        uint64_t v213 = *((void *)v184 + 1);
        *(void *)unint64_t v183 = *(void *)v184;
        *((void *)v183 + 1) = v213;
        uint64_t v298 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v214 = v298[5];
        uint64_t v306 = &v183[v214];
        uint64_t v212 = &v184[v214];
        swift_bridgeObjectRetain();
        if (v302(v212, 1, v126))
        {
LABEL_46:
          uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v306, v212, *(void *)(*(void *)(v215 - 8) + 64));
LABEL_54:
          uint64_t v227 = v298[6];
          int v228 = &v183[v227];
          uint64_t v229 = &v184[v227];
          uint64_t v230 = *((void *)v229 + 1);
          *(void *)int v228 = *(void *)v229;
          *((void *)v228 + 1) = v230;
          uint64_t v231 = v298[7];
          uint64_t v232 = &v183[v231];
          uint64_t v233 = &v184[v231];
          uint64_t v234 = *((void *)v233 + 1);
          *(void *)uint64_t v232 = *(void *)v233;
          *((void *)v232 + 1) = v234;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v183[*(int *)(v235 + 48)] = v184[*(int *)(v235 + 48)];
          goto LABEL_55;
        }
LABEL_53:
        (*(void (**)(char *, char *, uint64_t))(v299 + 16))(v306, v212, v126);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v299 + 56))(v306, 0, 1, v126);
        goto LABEL_54;
      }
      if (v186)
      {
        memcpy(v183, v184, *(void *)(*(void *)(v185 - 8) + 64));
        goto LABEL_56;
      }
      v305((uint64_t)v183, (uint64_t)v184, v6);
      uint64_t v187 = (int *)type metadata accessor for StaticHH2Update(0);
      v183[v187[5]] = v184[v187[5]];
      uint64_t v188 = v187[6];
      uint64_t v189 = &v183[v188];
      int v190 = &v184[v188];
      uint64_t v192 = *(void *)v190;
      uint64_t v191 = *((void *)v190 + 1);
      *(void *)uint64_t v189 = v192;
      *((void *)v189 + 1) = v191;
      uint64_t v193 = v187[7];
      uint64_t v194 = &v183[v193];
      uint64_t v195 = &v184[v193];
      v194[8] = v195[8];
      *(void *)uint64_t v194 = *(void *)v195;
      swift_bridgeObjectRetain();
LABEL_55:
      swift_storeEnumTagMultiPayload();
LABEL_56:
      a1 = v311;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v165, 0, 1, v167);
LABEL_57:
      a2 = v312;
      *(unsigned char *)(a1 + v8[29]) = *(unsigned char *)(v312 + v8[29]);
      *(unsigned char *)(a1 + v8[30]) = *(unsigned char *)(v312 + v8[30]);
      *(void *)(a1 + v8[31]) = *(void *)(v312 + v8[31]);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      a3 = v310;
LABEL_69:
      uint64_t v264 = a3[5];
      uint64_t v265 = a3[6];
      uint64_t v266 = (void *)(a1 + v264);
      uint64_t v267 = (void *)(a2 + v264);
      uint64_t v268 = v267[1];
      *uint64_t v266 = *v267;
      v266[1] = v268;
      uint64_t v269 = (char *)(a1 + v265);
      uint64_t v270 = (char *)(a2 + v265);
      uint64_t v271 = (int *)type metadata accessor for StaticRoom(0);
      uint64_t v272 = *((void *)v271 - 1);
      uint64_t v273 = *(unsigned int (**)(char *, uint64_t, int *))(v272 + 48);
      swift_bridgeObjectRetain();
      if (v273(v270, 1, v271))
      {
        uint64_t v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
        memcpy(v269, v270, *(void *)(*(void *)(v274 - 8) + 64));
      }
      else
      {
        uint64_t v275 = sub_251F34DA0();
        uint64_t v276 = *(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 16);
        v276(v269, v270, v275);
        uint64_t v277 = v271[5];
        uint64_t v278 = &v269[v277];
        uint64_t v279 = &v270[v277];
        uint64_t v280 = *((void *)v279 + 1);
        *(void *)uint64_t v278 = *(void *)v279;
        *((void *)v278 + 1) = v280;
        v269[v271[6]] = v270[v271[6]];
        *(void *)&v269[v271[7]] = *(void *)&v270[v271[7]];
        uint64_t v281 = v271[8];
        uint64_t v282 = &v269[v281];
        uint64_t v283 = &v270[v281];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v276(v282, v283, v275);
        *(void *)&v269[v271[9]] = *(void *)&v270[v271[9]];
        *(void *)&v269[v271[10]] = *(void *)&v270[v271[10]];
        *(void *)&v269[v271[11]] = *(void *)&v270[v271[11]];
        *(void *)&v269[v271[12]] = *(void *)&v270[v271[12]];
        *(void *)&v269[v271[13]] = *(void *)&v270[v271[13]];
        *(void *)&v269[v271[14]] = *(void *)&v270[v271[14]];
        *(void *)&v269[v271[15]] = *(void *)&v270[v271[15]];
        *(void *)&v269[v271[16]] = *(void *)&v270[v271[16]];
        *(void *)&v269[v271[17]] = *(void *)&v270[v271[17]];
        *(void *)&v269[v271[18]] = *(void *)&v270[v271[18]];
        uint64_t v284 = *(void (**)(char *, void, uint64_t, int *))(v272 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a3 = v310;
        swift_bridgeObjectRetain();
        a2 = v312;
        swift_bridgeObjectRetain();
        a1 = v311;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v284(v269, 0, 1, v271);
      }
      uint64_t v285 = a3[7];
      uint64_t v286 = a3[8];
      uint64_t v287 = (void *)(a1 + v285);
      uint64_t v288 = (void *)(a2 + v285);
      uint64_t v289 = v288[1];
      *uint64_t v287 = *v288;
      v287[1] = v289;
      *(unsigned char *)(a1 + v286) = *(unsigned char *)(a2 + v286);
      uint64_t v290 = a3[10];
      *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
      *(unsigned char *)(a1 + v290) = *(unsigned char *)(a2 + v290);
      swift_bridgeObjectRetain();
      return a1;
  }
}